var usdfe = {};
usdfe.hue=0;
usdfe.direction=1;
usdfe.activeBullets = [];
usdfe.selectedSkin = [-1, -1];
usdfe.selectedHat = -1;
usdfe.selectedBack = -1;
usdfe.selectedMelee = -1;
usdfe.__c = {recoilMlt: 0.3};
usdfe.__lastSample = [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];
usdfe.inputTicks = 0;
usdfe.NASAPeak = false;
usdfe.stringToInt = {'HEAD': 12, 'NECK': 10, 'CHEST': 8, 'ON': 1, 'ALL': 2, 'ENEMY': 1, 'OFF': null, 'MANUAL': false, 'AUTO': true, 'LITTLE': 1, 'MAX': -1, "DISABLED": null, 'ALT': 7, 'RED': 0xFF0000, 'GREEN': 0x00FF00, 'BLUE': 0x0000FF, 'WHITE': 0xFFFFFF, 'PENETRABLE': 3, 'NORMAL': 1, 'SLIDE': 2}
usdfe.state = {
                'Target': {active: 0, a:['HEAD', 'NECK', 'CHEST'], str:'[U]'},
                'Silent Aim': {active: 0, a:['ON', 'OFF'], str:'[Y]'},
                'Aimkey': {active: 0, a:['AUTO', 'LMB', 'RMB', 'SMB', 'OFF'], str:'[H]'},
                'ESP': {active: 0, a:['ENEMY', 'ALL', 'OFF'], str:'[J]'},
                'ASUS Walls': {active: 0, a:['ALL', 'PENETRABLE', 'OFF'], str:'[P]'},
                'Chams': {active: 0, a:['OFF', 'RED', 'GREEN', 'BLUE', "WHITE"], str:'[T]'},
                'BHOP': {active: 1, a:['NORMAL', 'SLIDE'], str:'[B]'},
                'Fake Lag': {active: 1, a:['DISABLED', 'DISABLED'], str:'[L]'},
                'Third Person': {active: 1, a:['ON', 'OFF'], str:'[F]'},
                'Beyblade': {active: 1, a:['ON', 'OFF'], str:'[P]'},
                'NASA Peak': {active: 1, a:['ALT', 'OFF'], str:'[Y]'},
                'Anti Report': {active: 1, a:['ON', 'OFF'], str:'[M]'},
                'Auto Respawn': {active: 1, a:['ON', 'OFF'], str:'[N]'},
                '360': {active: 1, a:['ON', 'OFF'], str:'[O]'}
            };
usdfe.getVal = function(k) {
    return usdfe.stringToInt[usdfe.state[k].a[usdfe.state[k].active]]
}

usdfe.HH = "MegaMeme";
if (localStorage.getItem(usdfe.HH + 'Target')) {
    usdfe.state['Target'].active = parseInt(localStorage.getItem(usdfe.HH + 'Target')) % usdfe.state[ 'Target'].a.length;
}
if (localStorage.getItem(usdfe.HH + 'Aimkey')) {
    usdfe.state['Aimkey'].active = parseInt(localStorage.getItem(usdfe.HH + 'Aimkey')) % usdfe.state[ 'Aimkey'].a.length;
}
if (localStorage.getItem(usdfe.HH + 'ESP')) {
    usdfe.state['ESP'].active = parseInt(localStorage.getItem(usdfe.HH + 'ESP')) % usdfe.state[ 'ESP'].a.length;
}
if (localStorage.getItem(usdfe.HH + 'BHOP')) {
    usdfe.state['BHOP'].active = parseInt(localStorage.getItem(usdfe.HH + 'BHOP')) % usdfe.state[ 'BHOP'].a.length;
}
if (localStorage.getItem(usdfe.HH + 'Fake Lag')) {
    usdfe.state['Fake Lag'].active = parseInt(localStorage.getItem(usdfe.HH + 'Fake Lag')) % usdfe.state['Fake Lag'].a.length;
}
if (localStorage.getItem(usdfe.HH + 'NASA Peak')) {
    usdfe.state['NASA Peak'].active = parseInt(localStorage.getItem(usdfe.HH + 'NASA Peak')) % usdfe.state['NASA Peak'].a.length;
}
if (localStorage.getItem(usdfe.HH + 'Anti Report')) {
    // usdfe.state['Anti Report'].active = parseInt(localStorage.getItem(usdfe.HH + 'Anti Report')) % usdfe.state['Anti Report'].a.length;
}
if (localStorage.getItem(usdfe.HH + 'Auto Respawn')) {
    usdfe.state['Auto Respawn'].active = parseInt(localStorage.getItem(usdfe.HH + 'Auto Respawn')) % usdfe.state['Auto Respawn'].a.length;
}

if (localStorage.getItem(usdfe.HH + 'Beyblade')) {
    usdfe.state['Beyblade'].active = parseInt(localStorage.getItem(usdfe.HH + 'Beyblade')) % usdfe.state[ 'Beyblade'].a.length;
}
if (localStorage.getItem(usdfe.HH + 'ASUS Walls')) {
    usdfe.state['ASUS Walls'].active = parseInt(localStorage.getItem(usdfe.HH + 'ASUS Walls')) % usdfe.state[ 'ASUS Walls'].a.length;
}
if (localStorage.getItem(usdfe.HH + 'Third Person')) {
    usdfe.state['Third Person'].active = parseInt(localStorage.getItem(usdfe.HH + 'Third Person')) % usdfe.state['Third Person'].a.length;
}
if (localStorage.getItem(usdfe.HH + '360')) {
    usdfe.state['360'].active = parseInt(localStorage.getItem(usdfe.HH + '360')) % usdfe.state[ '360'].a.length;
}
if (localStorage.getItem(usdfe.HH + 'Chams')) {
    usdfe.state['Chams'].active = parseInt(localStorage.getItem(usdfe.HH + 'Chams')) % usdfe.state[ 'Chams'].a.length;
}
if (localStorage.getItem(usdfe.HH + 'Silent Aim')) {
    usdfe.state['Silent Aim'].active = parseInt(localStorage.getItem(usdfe.HH + 'Silent Aim')) % usdfe.state[ 'Silent Aim'].a.length;
}

usdfe.menuActive = false;
usdfe.bhopActive = false;
usdfe.oldbhopActive = false;
usdfe.sendBuffer = [];
usdfe.positionHistory = [];
usdfe.lastPositionState = {x: 0, y: 0, z: 0, height: 0};
usdfe.ogL = 0;
usdfe.ogR = 0;
usdfe.loadedImages = {};
usdfe.forceCrouch = false;
usdfe.spins = [];
usdfe.spinTimer = 1800;
usdfe.serverTickRate = 1e3 / 30;
usdfe.spinTicks = 0;

usdfe.saveSpin = function(e) {
    usdfe.spins.unshift(e), usdfe.spins.length > usdfe.spinTimer / usdfe.serverTickRate && (usdfe.spins.length = Math.round(usdfe.spinTimer / usdfe.serverTickRate))
}

usdfe.getSpin = function() {
    for (var e = 0, n = 0; n < usdfe.spins.length; ++n) e += usdfe.spins[n];
    return Math.abs(e * (180 / Math.PI))
}

window.addEventListener("mousedown", function(e) {
    switch (e.which) {
        case 3:
            usdfe.ogR = 1;
            break;
        case 1:
            usdfe.ogL = 1;
    }
})

window.addEventListener("mouseup", function(e) {
    switch (e.which) {
        case 3:
            usdfe.ogR = 0;
            break;
        case 1:
            usdfe.ogL = 0;
    }
})

window.addEventListener("keydown", function(e) {
    if (document.activeElement == chatInput) {
        return;
    }
    if (e.which == 32) {
        usdfe.bhopActive = true;
        e.stopPropagation();
    } else if (e.which == 18) {
        usdfe.NASAPeak = false && usdfe.getVal('NASA Peak') == 7;
    }
}, true);

window.addEventListener("keyup", function(e) {
    if (document.activeElement == chatInput) {
        return;
    }
    if (e.which == 32) {
        usdfe.bhopActive = false;
        e.stopPropagation();
    } else if (e.which == 18) {
        usdfe.NASAPeak = false;
    }
    if (e.which == 36 || e.which == 45 || e.which == 46) { // insert home delete
        usdfe.menuActive = !usdfe.menuActive;
    }
}, true);

window.addEventListener("keyup", function(e) {
    if (document.activeElement == chatInput || !usdfe.menuActive) {
        return;
    }

    switch (e.which) {
        case 85:
        usdfe.state['Target'].active = (usdfe.state['Target'].active + 1) % usdfe.state['Target'].a.length;
        localStorage.setItem(usdfe.HH + 'Target', usdfe.state['Target'].active);
        break;
        case 72:
        usdfe.state['Aimkey'].active = (usdfe.state['Aimkey'].active + 1) % usdfe.state['Aimkey'].a.length;
        localStorage.setItem(usdfe.HH + 'Aimkey', usdfe.state['Aimkey'].active);
        break;
        case 74:
        usdfe.state['ESP'].active = (usdfe.state['ESP'].active + 1) % usdfe.state['ESP'].a.length;
        localStorage.setItem(usdfe.HH + 'ESP', usdfe.state['ESP'].active);
        break;
        case 66:
        usdfe.state['BHOP'].active = (usdfe.state['BHOP'].active + 1) % usdfe.state['BHOP'].a.length;
        localStorage.setItem(usdfe.HH + 'BHOP', usdfe.state['BHOP'].active);
        break;
        case 76:
        usdfe.state['Fake Lag'].active = (usdfe.state['Fake Lag'].active + 1) % usdfe.state['Fake Lag'].a.length;
        localStorage.setItem(usdfe.HH + 'Fake Lag', usdfe.state['Fake Lag'].active);
        break;
        case 77:
        usdfe.state['Anti Report'].active = (usdfe.state['Anti Report'].active + 1) % usdfe.state['Anti Report'].a.length;
        localStorage.setItem(usdfe.HH + 'Anti Report', usdfe.state['Anti Report'].active);
        location.reload();
        break;
        case 78:
        usdfe.state['Auto Respawn'].active = (usdfe.state['Auto Respawn'].active + 1) % usdfe.state['Auto Respawn'].a.length;
        localStorage.setItem(usdfe.HH + 'Auto Respawn', usdfe.state['Auto Respawn'].active);
        break;
        case 89:
        usdfe.state['Silent Aim'].active = (usdfe.state['Silent Aim'].active + 1) % usdfe.state['Silent Aim'].a.length;
        localStorage.setItem(usdfe.HH + 'Silent Aim', usdfe.state['Silent Aim'].active);
        break;
        case 70:
        usdfe.state['Third Person'].active = (usdfe.state['Third Person'].active + 1) % usdfe.state['Third Person'].a.length;
        localStorage.setItem(usdfe.HH + 'Third Person', usdfe.state['Third Person'].active);
        break;
        case 80:
        usdfe.state['Beyblade'].active = (usdfe.state['Beyblade'].active + 1) % usdfe.state['Beyblade'].a.length;
        localStorage.setItem(usdfe.HH + 'Beyblade', usdfe.state['Beyblade'].active);
        usdfe.state['ASUS Walls'].active = (usdfe.state['ASUS Walls'].active + 1) % usdfe.state['ASUS Walls'].a.length;
        localStorage.setItem(usdfe.HH + 'ASUS Walls', usdfe.state['ASUS Walls'].active);
        location.reload();
        break;
        case 79:
        usdfe.state['360'].active = (usdfe.state['360'].active + 1) % usdfe.state['360'].a.length;
        localStorage.setItem(usdfe.HH + '360', usdfe.state['360'].active);
        break;
        case 84:
        usdfe.state['Chams'].active = (usdfe.state['Chams'].active + 1) % usdfe.state['Chams'].a.length;
        localStorage.setItem(usdfe.HH + 'Chams', usdfe.state['Chams'].active);
        location.reload();
        break;
    }
});
!function(c) {
    var d = {};
    function e(f) {
        if (d[f])
            return d[f]['exports'];
        var g = d[f] = {
            'i': f,
            'l': !0x1,
            'exports': {}
        };
        return c[f]['call'](g['exports'], g, g['exports'], e),
        g['l'] = !0x0,
        g['exports'];
    }
    e['m'] = c,
    e['c'] = d,
    e['d'] = function(c, d, j) {
        e['o'](c, d) || Object['defineProperty'](c, d, {
            'enumerable': !0x0,
            'get': j
        });
    }
    ,
    e['r'] = function(c) {
        'undefined' != typeof Symbol && Symbol['toStringTag'] && Object['defineProperty'](c, Symbol['toStringTag'], {
            'value': 'Module'
        }),
        Object['defineProperty'](c, '__esModule', {
            'value': !0x0
        });
    }
    ,
    e['t'] = function(c, d) {
        if (0x1 & d && (c = e(c)),
        0x8 & d)
            return c;
        if (0x4 & d && 'object' == typeof c && c && c['__esModule'])
            return c;
        var n = Object['create'](null);
        if (e['r'](n),
        Object['defineProperty'](n, 'default', {
            'enumerable': !0x0,
            'value': c
        }),
        0x2 & d && 'string' != typeof c)
            for (var o in c)
                e['d'](n, o, function(d) {
                    return c[d];
                }
                ['bind'](null, o));
        return n;
    }
    ,
    e['n'] = function(c) {
        var d = c && c['__esModule'] ? function() {
            return c['default'];
        }
        : function() {
            return c;
        }
        ;
        return e['d'](d, 'a', d),
        d;
    }
    ,
    e['o'] = function(c, d) {
        return Object['prototype']['hasOwnProperty']['call'](c, d);
    }
    ,
    e['p'] = '',
    e(e['s'] = 0x6b);
}([function(u, v, w) {
    w['d'](v, 'b', function() {
        return F;
    }),
    w['d'](v, 'a', function() {
        return J;
    }),
    w['d'](v, 'c', function() {
        return P;
    }),
    w['d'](v, 'd', function() {
        return Y;
    });
    var x = function(u, v) {
        return (x = Object['setPrototypeOf'] || {
            '__proto__': []
        }instanceof Array && function(u, v) {
            u['__proto__'] = v;
        }
        || function(u, v) {
            for (var w in v)
                v['hasOwnProperty'](w) && (u[w] = v[w]);
        }
        )(u, v);
    };
    function F(u, v) {
        function w() {
            this['constructor'] = u;
        }
        x(u, v),
        u['prototype'] = null === v ? Object['create'](v) : (w['prototype'] = v['prototype'],
        new w());
    }
    var J = function() {
        return (J = Object['assign'] || function(u) {
            for (var v, w = 0x1, x = arguments['length']; w < x; w++)
                for (var F in v = arguments[w])
                    Object['prototype']['hasOwnProperty']['call'](v, F) && (u[F] = v[F]);
            return u;
        }
        )['apply'](this, arguments);
    };
    function P(u, v) {
        var w = 'function' == typeof Symbol && u[Symbol['iterator']];
        if (!w)
            return u;
        var x, F, J = w['call'](u), P = [];
        try {
            for (; (void 0x0 === v || 0x0 < v--) && !(x = J['next']())['done']; )
                P['push'](x['value']);
        } catch (X) {
            F = {
                'error': X
            };
        } finally {
            try {
                x && !x['done'] && (w = J['return']) && w['call'](J);
            } finally {
                if (F)
                    throw F['error'];
            }
        }
        return P;
    }
    function Y() {
        for (var u = [], v = 0x0; v < arguments['length']; v++)
            u = u['concat'](P(arguments[v]));
        return u;
    }
}
, , function(a1, a2, a3) {
    (function(a1, a5) {
        function a6(a1, a2) {
            return a1['require'](a2);
        }
        a3['d'](a2, 'c', function() {
            return a6;
        }),
        a3['d'](a2, 'e', function() {
            return aa;
        }),
        a3['d'](a2, 'g', function() {
            return ab;
        }),
        a3['d'](a2, 'f', function() {
            return ak;
        }),
        a3['d'](a2, 'd', function() {
            return ap;
        }),
        a3['d'](a2, 'b', function() {
            return as;
        }),
        a3['d'](a2, 'a', function() {
            return aA;
        });
        var a9 = {};
        function aa() {
            return '[object\x20process]' === Object['prototype']['toString']['call'](void 0x0 === a1 ? 0x0 : a1) ? a5 : 'undefined' == typeof window ? 'undefined' == typeof self ? a9 : self : window;
        }
        function ab() {
            var a1 = aa()
              , a2 = a1['crypto'] || a1['msCrypto'];
            if (void 0x0 !== a2 && a2['getRandomValues']) {
                var a3 = new Uint16Array(0x8);
                a2['getRandomValues'](a3),
                a3[0x3] = 0x4000 | 0xfff & a3[0x3],
                a3[0x4] = 0x8000 | 0x3fff & a3[0x4];
                var a5 = function(a1) {
                    for (var a2 = a1['toString'](0x10); 0x4 > a2['length']; )
                        a2 = '0' + a2;
                    return a2;
                };
                return a5(a3[0x0]) + a5(a3[0x1]) + a5(a3[0x2]) + a5(a3[0x3]) + a5(a3[0x4]) + a5(a3[0x5]) + a5(a3[0x6]) + a5(a3[0x7]);
            }
            return 'xxxxxxxxxxxx4xxxyxxxxxxxxxxxxxxx'['replace'](/[xy]/g, function(a1) {
                var a2 = 0x0 | 0x10 * Math['random']();
                return ('x' === a1 ? a2 : 0x8 | 0x3 & a2)['toString'](0x10);
            });
        }
        function ak(a1) {
            if (!a1)
                return {};
            var a2 = a1['match'](/^(([^:\/?#]+):)?(\/\/([^\/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?$/);
            if (!a2)
                return {};
            var a3 = a2[0x6] || ''
              , a5 = a2[0x8] || '';
            return {
                'host': a2[0x4],
                'path': a2[0x5],
                'protocol': a2[0x2],
                'relative': a2[0x5] + a3 + a5
            };
        }
        function ap(a1) {
            if (a1['message'])
                return a1['message'];
            if (a1['exception'] && a1['exception']['values'] && a1['exception']['values'][0x0]) {
                var a2 = a1['exception']['values'][0x0];
                return a2['type'] && a2['value'] ? a2['type'] + ':\x20' + a2['value'] : a2['type'] || a2['value'] || a1['event_id'] || '<unknown>';
            }
            return a1['event_id'] || '<unknown>';
        }
        function as(a1) {
            var a2 = aa();
            if (!('console'in a2))
                return a1();
            var a3 = a2['console']
              , a5 = {};
            ['debug', 'info', 'warn', 'error', 'log', 'assert']['forEach'](function(a1) {
                a1 in a2['console'] && a3[a1]['__sentry__'] && (a5[a1] = a3[a1]['__sentry_wrapped__'],
                a3[a1] = a3[a1]['__sentry_original__']);
            });
            var a6 = a1();
            return Object['keys'](a5)['forEach'](function(a1) {
                a3[a1] = a5[a1];
            }),
            a6;
        }
        function aA(a1, a2, a3, a5) {
            void 0x0 === a5 && (a5 = {
                'handled': !0x0,
                'type': 'generic'
            }),
            a1['exception'] = a1['exception'] || {},
            a1['exception']['values'] = a1['exception']['values'] || [],
            a1['exception']['values'][0x0] = a1['exception']['values'][0x0] || {},
            a1['exception']['values'][0x0]['value'] = a1['exception']['values'][0x0]['value'] || a2 || '',
            a1['exception']['values'][0x0]['type'] = a1['exception']['values'][0x0]['type'] || a3 || 'Error',
            a1['exception']['values'][0x0]['mechanism'] = a1['exception']['values'][0x0]['mechanism'] || a5;
        }
    }
    ['call'](this, a3(0xe), a3(0x15)));
}
, function(aF, aG, aH) {
    var aI = aG['global'] = aH(0x29)
      , aJ = aG['hasBuffer'] = aI && !!aI['isBuffer']
      , aK = aG['hasArrayBuffer'] = 'undefined' != typeof ArrayBuffer
      , aL = aG['isArray'] = aH(0xb);
    aG['isArrayBuffer'] = aK ? function(aF) {
        return aF instanceof ArrayBuffer || b7(aF);
    }
    : ba;
    var aN = aG['isBuffer'] = aJ ? aI['isBuffer'] : ba
      , aO = aG['isView'] = aK ? ArrayBuffer['isView'] || bb('ArrayBuffer', 'buffer') : ba;
    aG['alloc'] = b5,
    aG['concat'] = function(aF, aH) {
        aH || (aH = 0x0,
        Array['prototype']['forEach']['call'](aF, function(aF) {
            aH += aF['length'];
        }));
        var aI = this !== aG && this || aF[0x0]
          , aJ = b5['call'](aI, aH)
          , aK = 0x0;
        return Array['prototype']['forEach']['call'](aF, function(aF) {
            aK += b4['copy']['call'](aF, aJ, aK);
        }),
        aJ;
    }
    ,
    aG['from'] = function(aF) {
        return 'string' == typeof aF ? function(aF) {
            var aG = 0x3 * aF['length']
              , aH = b5['call'](this, aG)
              , aI = b4['write']['call'](aH, aF);
            return aG !== aI && (aH = b4['slice']['call'](aH, 0x0, aI)),
            aH;
        }
        ['call'](this, aF) : b8(this)['from'](aF);
    }
    ;
    var b1 = aG['Array'] = aH(0x2b)
      , b2 = aG['Buffer'] = aH(0x2c)
      , b3 = aG['Uint8Array'] = aH(0x2d)
      , b4 = aG['prototype'] = aH(0x12);
    function b5(aF) {
        return b8(this)['alloc'](aF);
    }
    var b7 = bb('ArrayBuffer');
    function b8(aF) {
        return aN(aF) ? b2 : aO(aF) ? b3 : aL(aF) ? b1 : aJ ? b2 : aK ? b3 : b1;
    }
    function ba() {
        return !0x1;
    }
    function bb(aF, aG) {
        return aF = '[object\x20' + aF + ']',
        function(aH) {
            return null != aH && {}['toString']['call'](aG ? aH[aG] : aH) === aF;
        }
        ;
    }
}
, function(bf, bg, bh) {
    function bi() {}
    bh['r'](bg),
    bh['d'](bg, 'ACESFilmicToneMapping', function() {
        return cD;
    }),
    bh['d'](bg, 'AddEquation', function() {
        return c7;
    }),
    bh['d'](bg, 'AddOperation', function() {
        return cx;
    }),
    bh['d'](bg, 'AdditiveBlending', function() {
        return c3;
    }),
    bh['d'](bg, 'AlphaFormat', function() {
        return d7;
    }),
    bh['d'](bg, 'AlwaysDepth', function() {
        return co;
    }),
    bh['d'](bg, 'AmbientLight', function() {
        return aJY;
    }),
    bh['d'](bg, 'AmbientLightProbe', function() {
        return aSr;
    }),
    bh['d'](bg, 'AnimationClip', function() {
        return ayK;
    }),
    bh['d'](bg, 'AnimationLoader', function() {
        return aCx;
    }),
    bh['d'](bg, 'AnimationMixer', function() {
        return aWh;
    }),
    bh['d'](bg, 'AnimationObjectGroup', function() {
        return aW2;
    }),
    bh['d'](bg, 'AnimationUtils', function() {
        return axj;
    }),
    bh['d'](bg, 'ArcCurve', function() {
        return aCT;
    }),
    bh['d'](bg, 'ArrayCamera', function() {
        return a6d;
    }),
    bh['d'](bg, 'ArrowHelper', function() {
        return aZu;
    }),
    bh['d'](bg, 'Audio', function() {
        return aU3;
    }),
    bh['d'](bg, 'AudioAnalyser', function() {
        return aU7;
    }),
    bh['d'](bg, 'AudioContext', function() {
        return aS8;
    }),
    bh['d'](bg, 'AudioListener', function() {
        return aU2;
    }),
    bh['d'](bg, 'AudioLoader', function() {
        return aSa;
    }),
    bh['d'](bg, 'AxesHelper', function() {
        return aZB;
    }),
    bh['d'](bg, 'AxisHelper', function() {
        return ba8;
    }),
    bh['d'](bg, 'BackSide', function() {
        return bU;
    }),
    bh['d'](bg, 'BasicDepthPacking', function() {
        return dY;
    }),
    bh['d'](bg, 'BasicShadowMap', function() {
        return bQ;
    }),
    bh['d'](bg, 'BinaryTextureLoader', function() {
        return bal;
    }),
    bh['d'](bg, 'Bone', function() {
        return aex;
    }),
    bh['d'](bg, 'BooleanKeyframeTrack', function() {
        return ayc;
    }),
    bh['d'](bg, 'BoundingBoxHelper', function() {
        return baa;
    }),
    bh['d'](bg, 'Box2', function() {
        return aWN;
    }),
    bh['d'](bg, 'Box3', function() {
        return mB;
    }),
    bh['d'](bg, 'Box3Helper', function() {
        return aZh;
    }),
    bh['d'](bg, 'BoxBufferGeometry', function() {
        return Gn;
    }),
    bh['d'](bg, 'BoxGeometry', function() {
        return Gg;
    }),
    bh['d'](bg, 'BoxHelper', function() {
        return aZb;
    }),
    bh['d'](bg, 'BufferAttribute', function() {
        return AI;
    }),
    bh['d'](bg, 'BufferGeometry', function() {
        return Gf;
    }),
    bh['d'](bg, 'BufferGeometryLoader', function() {
        return aNb;
    }),
    bh['d'](bg, 'ByteType', function() {
        return cW;
    }),
    bh['d'](bg, 'Cache', function() {
        return aCa;
    }),
    bh['d'](bg, 'Camera', function() {
        return a67;
    }),
    bh['d'](bg, 'CameraHelper', function() {
        return aYS;
    }),
    bh['d'](bg, 'CanvasRenderer', function() {
        return bcx;
    }),
    bh['d'](bg, 'CanvasTexture', function() {
        return afc;
    }),
    bh['d'](bg, 'CatmullRomCurve3', function() {
        return aGw;
    }),
    bh['d'](bg, 'CineonToneMapping', function() {
        return cC;
    }),
    bh['d'](bg, 'CircleBufferGeometry', function() {
        return awy;
    }),
    bh['d'](bg, 'CircleGeometry', function() {
        return awt;
    }),
    bh['d'](bg, 'ClampToEdgeWrapping', function() {
        return cN;
    }),
    bh['d'](bg, 'Clock', function() {
        return aU0;
    }),
    bh['d'](bg, 'ClosedSplineCurve3', function() {
        return ba2;
    }),
    bh['d'](bg, 'Color', function() {
        return w7;
    }),
    bh['d'](bg, 'ColorKeyframeTrack', function() {
        return ayg;
    }),
    bh['d'](bg, 'CompressedTexture', function() {
        return aeZ;
    }),
    bh['d'](bg, 'CompressedTextureLoader', function() {
        return aCz;
    }),
    bh['d'](bg, 'ConeBufferGeometry', function() {
        return awl;
    }),
    bh['d'](bg, 'ConeGeometry', function() {
        return awd;
    }),
    bh['d'](bg, 'CubeCamera', function() {
        return aTD;
    }),
    bh['d'](bg, 'CubeGeometry', function() {
        return Gg;
    }),
    bh['d'](bg, 'CubeReflectionMapping', function() {
        return cF;
    }),
    bh['d'](bg, 'CubeRefractionMapping', function() {
        return cG;
    }),
    bh['d'](bg, 'CubeTexture', function() {
        return O3;
    }),
    bh['d'](bg, 'CubeTextureLoader', function() {
        return aCF;
    }),
    bh['d'](bg, 'CubeUVReflectionMapping', function() {
        return cK;
    }),
    bh['d'](bg, 'CubeUVRefractionMapping', function() {
        return cL;
    }),
    bh['d'](bg, 'CubicBezierCurve', function() {
        return aHc;
    }),
    bh['d'](bg, 'CubicBezierCurve3', function() {
        return aHh;
    }),
    bh['d'](bg, 'CubicInterpolant', function() {
        return axS;
    }),
    bh['d'](bg, 'CullFaceBack', function() {
        return bL;
    }),
    bh['d'](bg, 'CullFaceFront', function() {
        return bM;
    }),
    bh['d'](bg, 'CullFaceFrontBack', function() {
        return bN;
    }),
    bh['d'](bg, 'CullFaceNone', function() {
        return bK;
    }),
    bh['d'](bg, 'Curve', function() {
        return aCJ;
    }),
    bh['d'](bg, 'CurvePath', function() {
        return aJk;
    }),
    bh['d'](bg, 'CustomBlending', function() {
        return c6;
    }),
    bh['d'](bg, 'CylinderBufferGeometry', function() {
        return avp;
    }),
    bh['d'](bg, 'CylinderGeometry', function() {
        return avg;
    }),
    bh['d'](bg, 'Cylindrical', function() {
        return aWJ;
    }),
    bh['d'](bg, 'DataTexture', function() {
        return mo;
    }),
    bh['d'](bg, 'DataTexture2DArray', function() {
        return Oe;
    }),
    bh['d'](bg, 'DataTexture3D', function() {
        return Oj;
    }),
    bh['d'](bg, 'DataTextureLoader', function() {
        return aCB;
    }),
    bh['d'](bg, 'DefaultLoadingManager', function() {
        return aCt;
    }),
    bh['d'](bg, 'DepthFormat', function() {
        return dd;
    }),
    bh['d'](bg, 'DepthStencilFormat', function() {
        return de;
    }),
    bh['d'](bg, 'DepthTexture', function() {
        return afm;
    }),
    bh['d'](bg, 'DirectionalLight', function() {
        return aJV;
    }),
    bh['d'](bg, 'DirectionalLightHelper', function() {
        return aYM;
    }),
    bh['d'](bg, 'DirectionalLightShadow', function() {
        return aJU;
    }),
    bh['d'](bg, 'DiscreteInterpolant', function() {
        return ay2;
    }),
    bh['d'](bg, 'DodecahedronBufferGeometry', function() {
        return ahO;
    }),
    bh['d'](bg, 'DodecahedronGeometry', function() {
        return ahL;
    }),
    bh['d'](bg, 'DoubleSide', function() {
        return bV;
    }),
    bh['d'](bg, 'DstAlphaFactor', function() {
        return ci;
    }),
    bh['d'](bg, 'DstColorFactor', function() {
        return ck;
    }),
    bh['d'](bg, 'DynamicBufferAttribute', function() {
        return b9y;
    }),
    bh['d'](bg, 'EdgesGeometry', function() {
        return auW;
    }),
    bh['d'](bg, 'EdgesHelper', function() {
        return bad;
    }),
    bh['d'](bg, 'EllipseCurve', function() {
        return aCK;
    }),
    bh['d'](bg, 'EqualDepth', function() {
        return cr;
    }),
    bh['d'](bg, 'EquirectangularReflectionMapping', function() {
        return cH;
    }),
    bh['d'](bg, 'EquirectangularRefractionMapping', function() {
        return cI;
    }),
    bh['d'](bg, 'Euler', function() {
        return xZ;
    }),
    bh['d'](bg, 'EventDispatcher', function() {
        return bi;
    }),
    bh['d'](bg, 'ExtrudeBufferGeometry', function() {
        return aqj;
    }),
    bh['d'](bg, 'ExtrudeGeometry', function() {
        return aqg;
    }),
    bh['d'](bg, 'Face3', function() {
        return xS;
    }),
    bh['d'](bg, 'Face4', function() {
        return aZG;
    }),
    bh['d'](bg, 'FaceColors', function() {
        return bZ;
    }),
    bh['d'](bg, 'FaceNormalsHelper', function() {
        return aYB;
    }),
    bh['d'](bg, 'FileLoader', function() {
        return aCv;
    }),
    bh['d'](bg, 'FlatShading', function() {
        return bW;
    }),
    bh['d'](bg, 'Float32Attribute', function() {
        return b9W;
    }),
    bh['d'](bg, 'Float32BufferAttribute', function() {
        return Be;
    }),
    bh['d'](bg, 'Float64Attribute', function() {
        return b9Z;
    }),
    bh['d'](bg, 'Float64BufferAttribute', function() {
        return Bi;
    }),
    bh['d'](bg, 'FloatType', function() {
        return d1;
    }),
    bh['d'](bg, 'Fog', function() {
        return ae6;
    }),
    bh['d'](bg, 'FogExp2', function() {
        return ae3;
    }),
    bh['d'](bg, 'Font', function() {
        return aPz;
    }),
    bh['d'](bg, 'FontLoader', function() {
        return aPU;
    }),
    bh['d'](bg, 'FrontFaceDirectionCCW', function() {
        return bP;
    }),
    bh['d'](bg, 'FrontFaceDirectionCW', function() {
        return bO;
    }),
    bh['d'](bg, 'FrontSide', function() {
        return bT;
    }),
    bh['d'](bg, 'Frustum', function() {
        return mK;
    }),
    bh['d'](bg, 'GammaEncoding', function() {
        return dS;
    }),
    bh['d'](bg, 'Geometry', function() {
        return AH;
    }),
    bh['d'](bg, 'GeometryUtils', function() {
        return bcr;
    }),
    bh['d'](bg, 'GreaterDepth', function() {
        return ct;
    }),
    bh['d'](bg, 'GreaterEqualDepth', function() {
        return cs;
    }),
    bh['d'](bg, 'GridHelper', function() {
        return aXT;
    }),
    bh['d'](bg, 'Group', function() {
        return a66;
    }),
    bh['d'](bg, 'HalfFloatType', function() {
        return d2;
    }),
    bh['d'](bg, 'HemisphereLight', function() {
        return aJs;
    }),
    bh['d'](bg, 'HemisphereLightHelper', function() {
        return aXG;
    }),
    bh['d'](bg, 'HemisphereLightProbe', function() {
        return aSh;
    }),
    bh['d'](bg, 'IcosahedronBufferGeometry', function() {
        return ahG;
    }),
    bh['d'](bg, 'IcosahedronGeometry', function() {
        return ahD;
    }),
    bh['d'](bg, 'ImageBitmapLoader', function() {
        return aPw;
    }),
    bh['d'](bg, 'ImageLoader', function() {
        return aCD;
    }),
    bh['d'](bg, 'ImageUtils', function() {
        return lR;
    }),
    bh['d'](bg, 'ImmediateRenderObject', function() {
        return aWT;
    }),
    bh['d'](bg, 'InstancedBufferAttribute', function() {
        return aN6;
    }),
    bh['d'](bg, 'InstancedBufferGeometry', function() {
        return aN5;
    }),
    bh['d'](bg, 'InstancedInterleavedBuffer', function() {
        return aWl;
    }),
    bh['d'](bg, 'Int16Attribute', function() {
        return b9K;
    }),
    bh['d'](bg, 'Int16BufferAttribute', function() {
        return AY;
    }),
    bh['d'](bg, 'Int32Attribute', function() {
        return b9Q;
    }),
    bh['d'](bg, 'Int32BufferAttribute', function() {
        return B6;
    }),
    bh['d'](bg, 'Int8Attribute', function() {
        return b9B;
    }),
    bh['d'](bg, 'Int8BufferAttribute', function() {
        return AM;
    }),
    bh['d'](bg, 'IntType', function() {
        return cZ;
    }),
    bh['d'](bg, 'InterleavedBuffer', function() {
        return aeb;
    }),
    bh['d'](bg, 'InterleavedBufferAttribute', function() {
        return aee;
    }),
    bh['d'](bg, 'Interpolant', function() {
        return axN;
    }),
    bh['d'](bg, 'InterpolateDiscrete', function() {
        return dH;
    }),
    bh['d'](bg, 'InterpolateLinear', function() {
        return dI;
    }),
    bh['d'](bg, 'InterpolateSmooth', function() {
        return dJ;
    }),
    bh['d'](bg, 'JSONLoader', function() {
        return bcy;
    }),
    bh['d'](bg, 'KeyframeTrack', function() {
        return ay7;
    }),
    bh['d'](bg, 'LOD', function() {
        return aeo;
    }),
    bh['d'](bg, 'LatheBufferGeometry', function() {
        return atZ;
    }),
    bh['d'](bg, 'LatheGeometry', function() {
        return atU;
    }),
    bh['d'](bg, 'Layers', function() {
        return y4;
    }),
    bh['d'](bg, 'LensFlare', function() {
        return bcM;
    }),
    bh['d'](bg, 'LessDepth', function() {
        return cp;
    }),
    bh['d'](bg, 'LessEqualDepth', function() {
        return cq;
    }),
    bh['d'](bg, 'Light', function() {
        return aJp;
    }),
    bh['d'](bg, 'LightProbe', function() {
        return aSe;
    }),
    bh['d'](bg, 'LightProbeHelper', function() {
        return aXN;
    }),
    bh['d'](bg, 'LightShadow', function() {
        return aJw;
    }),
    bh['d'](bg, 'Line', function() {
        return aeA;
    }),
    bh['d'](bg, 'Line3', function() {
        return aWQ;
    }),
    bh['d'](bg, 'LineBasicMaterial', function() {
        return aey;
    }),
    bh['d'](bg, 'LineCurve', function() {
        return aHm;
    }),
    bh['d'](bg, 'LineCurve3', function() {
        return aHp;
    }),
    bh['d'](bg, 'LineDashedMaterial', function() {
        return ax7;
    }),
    bh['d'](bg, 'LineLoop', function() {
        return aeH;
    }),
    bh['d'](bg, 'LinePieces', function() {
        return b9b;
    }),
    bh['d'](bg, 'LineSegments', function() {
        return aeE;
    }),
    bh['d'](bg, 'LineStrip', function() {
        return b9a;
    }),
    bh['d'](bg, 'LinearEncoding', function() {
        return dQ;
    }),
    bh['d'](bg, 'LinearFilter', function() {
        return cS;
    }),
    bh['d'](bg, 'LinearInterpolant', function() {
        return axX;
    }),
    bh['d'](bg, 'LinearMipMapLinearFilter', function() {
        return cU;
    }),
    bh['d'](bg, 'LinearMipMapNearestFilter', function() {
        return cT;
    }),
    bh['d'](bg, 'LinearToneMapping', function() {
        return cz;
    }),
    bh['d'](bg, 'Loader', function() {
        return aPW;
    }),
    bh['d'](bg, 'LoaderUtils', function() {
        return aMX;
    }),
    bh['d'](bg, 'LoadingManager', function() {
        return aCf;
    }),
    bh['d'](bg, 'LogLuvEncoding', function() {
        return dU;
    }),
    bh['d'](bg, 'LoopOnce', function() {
        return dE;
    }),
    bh['d'](bg, 'LoopPingPong', function() {
        return dG;
    }),
    bh['d'](bg, 'LoopRepeat', function() {
        return dF;
    }),
    bh['d'](bg, 'LuminanceAlphaFormat', function() {
        return db;
    }),
    bh['d'](bg, 'LuminanceFormat', function() {
        return da;
    }),
    bh['d'](bg, 'MOUSE', function() {
        return bJ;
    }),
    bh['d'](bg, 'Material', function() {
        return Kf;
    }),
    bh['d'](bg, 'MaterialLoader', function() {
        return aK6;
    }),
    bh['d'](bg, 'Math', function() {
        return e2;
    }),
    bh['d'](bg, 'Matrix3', function() {
        return eO;
    }),
    bh['d'](bg, 'Matrix4', function() {
        return mR;
    }),
    bh['d'](bg, 'MaxEquation', function() {
        return cb;
    }),
    bh['d'](bg, 'Mesh', function() {
        return KY;
    }),
    bh['d'](bg, 'MeshBasicMaterial', function() {
        return KW;
    }),
    bh['d'](bg, 'MeshDepthMaterial', function() {
        return ZV;
    }),
    bh['d'](bg, 'MeshDistanceMaterial', function() {
        return ZX;
    }),
    bh['d'](bg, 'MeshFaceMaterial', function() {
        return b9c;
    }),
    bh['d'](bg, 'MeshLambertMaterial', function() {
        return ax3;
    }),
    bh['d'](bg, 'MeshMatcapMaterial', function() {
        return ax5;
    }),
    bh['d'](bg, 'MeshNormalMaterial', function() {
        return ax1;
    }),
    bh['d'](bg, 'MeshPhongMaterial', function() {
        return awX;
    }),
    bh['d'](bg, 'MeshPhysicalMaterial', function() {
        return awV;
    }),
    bh['d'](bg, 'MeshStandardMaterial', function() {
        return awT;
    }),
    bh['d'](bg, 'MeshToonMaterial', function() {
        return awZ;
    }),
    bh['d'](bg, 'MinEquation', function() {
        return ca;
    }),
    bh['d'](bg, 'MirroredRepeatWrapping', function() {
        return cO;
    }),
    bh['d'](bg, 'MixOperation', function() {
        return cw;
    }),
    bh['d'](bg, 'MultiMaterial', function() {
        return b9e;
    }),
    bh['d'](bg, 'MultiplyBlending', function() {
        return c5;
    }),
    bh['d'](bg, 'MultiplyOperation', function() {
        return cv;
    }),
    bh['d'](bg, 'NearestFilter', function() {
        return cP;
    }),
    bh['d'](bg, 'NearestMipMapLinearFilter', function() {
        return cR;
    }),
    bh['d'](bg, 'NearestMipMapNearestFilter', function() {
        return cQ;
    }),
    bh['d'](bg, 'NeverDepth', function() {
        return cn;
    }),
    bh['d'](bg, 'NoBlending', function() {
        return c1;
    }),
    bh['d'](bg, 'NoColors', function() {
        return bY;
    }),
    bh['d'](bg, 'NoToneMapping', function() {
        return cy;
    }),
    bh['d'](bg, 'NormalBlending', function() {
        return c2;
    }),
    bh['d'](bg, 'NotEqualDepth', function() {
        return cu;
    }),
    bh['d'](bg, 'NumberKeyframeTrack', function() {
        return ayl;
    }),
    bh['d'](bg, 'Object3D', function() {
        return yT;
    }),
    bh['d'](bg, 'ObjectLoader', function() {
        return aNJ;
    }),
    bh['d'](bg, 'ObjectSpaceNormalMap', function() {
        return e1;
    }),
    bh['d'](bg, 'OctahedronBufferGeometry', function() {
        return ahA;
    }),
    bh['d'](bg, 'OctahedronGeometry', function() {
        return ahx;
    }),
    bh['d'](bg, 'OneFactor', function() {
        return cd;
    }),
    bh['d'](bg, 'OneMinusDstAlphaFactor', function() {
        return cj;
    }),
    bh['d'](bg, 'OneMinusDstColorFactor', function() {
        return cl;
    }),
    bh['d'](bg, 'OneMinusSrcAlphaFactor', function() {
        return ch;
    }),
    bh['d'](bg, 'OneMinusSrcColorFactor', function() {
        return cf;
    }),
    bh['d'](bg, 'OrthographicCamera', function() {
        return aJN;
    }),
    bh['d'](bg, 'PCFShadowMap', function() {
        return bR;
    }),
    bh['d'](bg, 'PCFSoftShadowMap', function() {
        return bS;
    }),
    bh['d'](bg, 'ParametricBufferGeometry', function() {
        return ag0;
    }),
    bh['d'](bg, 'ParametricGeometry', function() {
        return afW;
    }),
    bh['d'](bg, 'Particle', function() {
        return b9j;
    }),
    bh['d'](bg, 'ParticleBasicMaterial', function() {
        return b9q;
    }),
    bh['d'](bg, 'ParticleSystem', function() {
        return b9l;
    }),
    bh['d'](bg, 'ParticleSystemMaterial', function() {
        return b9s;
    }),
    bh['d'](bg, 'Path', function() {
        return aJl;
    }),
    bh['d'](bg, 'PerspectiveCamera', function() {
        return a68;
    }),
    bh['d'](bg, 'Plane', function() {
        return mH;
    }),
    bh['d'](bg, 'PlaneBufferGeometry', function() {
        return Ha;
    }),
    bh['d'](bg, 'PlaneGeometry', function() {
        return H5;
    }),
    bh['d'](bg, 'PlaneHelper', function() {
        return aZn;
    }),
    bh['d'](bg, 'PointCloud', function() {
        return b9g;
    }),
    bh['d'](bg, 'PointCloudMaterial', function() {
        return b9o;
    }),
    bh['d'](bg, 'PointLight', function() {
        return aJH;
    }),
    bh['d'](bg, 'PointLightHelper', function() {
        return aXu;
    }),
    bh['d'](bg, 'Points', function() {
        return aeM;
    }),
    bh['d'](bg, 'PointsMaterial', function() {
        return aeK;
    }),
    bh['d'](bg, 'PolarGridHelper', function() {
        return aY9;
    }),
    bh['d'](bg, 'PolyhedronBufferGeometry', function() {
        return agr;
    }),
    bh['d'](bg, 'PolyhedronGeometry', function() {
        return agm;
    }),
    bh['d'](bg, 'PositionalAudio', function() {
        return aU5;
    }),
    bh['d'](bg, 'PositionalAudioHelper', function() {
        return aYr;
    }),
    bh['d'](bg, 'PropertyBinding', function() {
        return aVY;
    }),
    bh['d'](bg, 'PropertyMixer', function() {
        return aUa;
    }),
    bh['d'](bg, 'QuadraticBezierCurve', function() {
        return aHs;
    }),
    bh['d'](bg, 'QuadraticBezierCurve3', function() {
        return aHw;
    }),
    bh['d'](bg, 'Quaternion', function() {
        return eF;
    }),
    bh['d'](bg, 'QuaternionKeyframeTrack', function() {
        return ayv;
    }),
    bh['d'](bg, 'QuaternionLinearInterpolant', function() {
        return ayq;
    }),
    bh['d'](bg, 'REVISION', function() {
        return bI;
    }),
    bh['d'](bg, 'RGBADepthPacking', function() {
        return dZ;
    }),
    bh['d'](bg, 'RGBAFormat', function() {
        return d9;
    }),
    bh['d'](bg, 'RGBA_ASTC_10x10_Format', function() {
        return dB;
    }),
    bh['d'](bg, 'RGBA_ASTC_10x5_Format', function() {
        return dy;
    }),
    bh['d'](bg, 'RGBA_ASTC_10x6_Format', function() {
        return dz;
    }),
    bh['d'](bg, 'RGBA_ASTC_10x8_Format', function() {
        return dA;
    }),
    bh['d'](bg, 'RGBA_ASTC_12x10_Format', function() {
        return dC;
    }),
    bh['d'](bg, 'RGBA_ASTC_12x12_Format', function() {
        return dD;
    }),
    bh['d'](bg, 'RGBA_ASTC_4x4_Format', function() {
        return dq;
    }),
    bh['d'](bg, 'RGBA_ASTC_5x4_Format', function() {
        return dr;
    }),
    bh['d'](bg, 'RGBA_ASTC_5x5_Format', function() {
        return ds;
    }),
    bh['d'](bg, 'RGBA_ASTC_6x5_Format', function() {
        return dt;
    }),
    bh['d'](bg, 'RGBA_ASTC_6x6_Format', function() {
        return du;
    }),
    bh['d'](bg, 'RGBA_ASTC_8x5_Format', function() {
        return dv;
    }),
    bh['d'](bg, 'RGBA_ASTC_8x6_Format', function() {
        return dw;
    }),
    bh['d'](bg, 'RGBA_ASTC_8x8_Format', function() {
        return dx;
    }),
    bh['d'](bg, 'RGBA_PVRTC_2BPPV1_Format', function() {
        return dn;
    }),
    bh['d'](bg, 'RGBA_PVRTC_4BPPV1_Format', function() {
        return dm;
    }),
    bh['d'](bg, 'RGBA_S3TC_DXT1_Format', function() {
        return dh;
    }),
    bh['d'](bg, 'RGBA_S3TC_DXT3_Format', function() {
        return di;
    }),
    bh['d'](bg, 'RGBA_S3TC_DXT5_Format', function() {
        return dj;
    }),
    bh['d'](bg, 'RGBDEncoding', function() {
        return dX;
    }),
    bh['d'](bg, 'RGBEEncoding', function() {
        return dT;
    }),
    bh['d'](bg, 'RGBEFormat', function() {
        return dc;
    }),
    bh['d'](bg, 'RGBFormat', function() {
        return d8;
    }),
    bh['d'](bg, 'RGBM16Encoding', function() {
        return dW;
    }),
    bh['d'](bg, 'RGBM7Encoding', function() {
        return dV;
    }),
    bh['d'](bg, 'RGB_ETC1_Format', function() {
        return dp;
    }),
    bh['d'](bg, 'RGB_PVRTC_2BPPV1_Format', function() {
        return dl;
    }),
    bh['d'](bg, 'RGB_PVRTC_4BPPV1_Format', function() {
        return dk;
    }),
    bh['d'](bg, 'RGB_S3TC_DXT1_Format', function() {
        return dg;
    }),
    bh['d'](bg, 'RawShaderMaterial', function() {
        return awR;
    }),
    bh['d'](bg, 'Ray', function() {
        return KP;
    }),
    bh['d'](bg, 'Raycaster', function() {
        return aWp;
    }),
    bh['d'](bg, 'RectAreaLight', function() {
        return aK1;
    }),
    bh['d'](bg, 'RectAreaLightHelper', function() {
        return aXA;
    }),
    bh['d'](bg, 'RedFormat', function() {
        return df;
    }),
    bh['d'](bg, 'ReinhardToneMapping', function() {
        return cA;
    }),
    bh['d'](bg, 'RepeatWrapping', function() {
        return cM;
    }),
    bh['d'](bg, 'ReverseSubtractEquation', function() {
        return c9;
    }),
    bh['d'](bg, 'RingBufferGeometry', function() {
        return atx;
    }),
    bh['d'](bg, 'RingGeometry', function() {
        return atq;
    }),
    bh['d'](bg, 'Scene', function() {
        return aea;
    }),
    bh['d'](bg, 'SceneUtils', function() {
        return bcL;
    }),
    bh['d'](bg, 'ShaderChunk', function() {
        return vP;
    }),
    bh['d'](bg, 'ShaderLib', function() {
        return xo;
    }),
    bh['d'](bg, 'ShaderMaterial', function() {
        return KN;
    }),
    bh['d'](bg, 'ShadowMaterial', function() {
        return awP;
    }),
    bh['d'](bg, 'Shape', function() {
        return aJn;
    }),
    bh['d'](bg, 'ShapeBufferGeometry', function() {
        return aur;
    }),
    bh['d'](bg, 'ShapeGeometry', function() {
        return auo;
    }),
    bh['d'](bg, 'ShapePath', function() {
        return aPy;
    }),
    bh['d'](bg, 'ShapeUtils', function() {
        return apU;
    }),
    bh['d'](bg, 'ShortType', function() {
        return cX;
    }),
    bh['d'](bg, 'Skeleton', function() {
        return aes;
    }),
    bh['d'](bg, 'SkeletonHelper', function() {
        return aXg;
    }),
    bh['d'](bg, 'SkinnedMesh', function() {
        return aep;
    }),
    bh['d'](bg, 'SmoothShading', function() {
        return bX;
    }),
    bh['d'](bg, 'Sphere', function() {
        return mE;
    }),
    bh['d'](bg, 'SphereBufferGeometry', function() {
        return asZ;
    }),
    bh['d'](bg, 'SphereGeometry', function() {
        return asR;
    }),
    bh['d'](bg, 'Spherical', function() {
        return aWF;
    }),
    bh['d'](bg, 'SphericalHarmonics3', function() {
        return aSc;
    }),
    bh['d'](bg, 'SphericalReflectionMapping', function() {
        return cJ;
    }),
    bh['d'](bg, 'Spline', function() {
        return ba6;
    }),
    bh['d'](bg, 'SplineCurve', function() {
        return aHA;
    }),
    bh['d'](bg, 'SplineCurve3', function() {
        return ba4;
    }),
    bh['d'](bg, 'SpotLight', function() {
        return aJz;
    }),
    bh['d'](bg, 'SpotLightHelper', function() {
        return aX6;
    }),
    bh['d'](bg, 'SpotLightShadow', function() {
        return aJy;
    }),
    bh['d'](bg, 'Sprite', function() {
        return ael;
    }),
    bh['d'](bg, 'SpriteMaterial', function() {
        return aej;
    }),
    bh['d'](bg, 'SrcAlphaFactor', function() {
        return cg;
    }),
    bh['d'](bg, 'SrcAlphaSaturateFactor', function() {
        return cm;
    }),
    bh['d'](bg, 'SrcColorFactor', function() {
        return ce;
    }),
    bh['d'](bg, 'StereoCamera', function() {
        return aSv;
    }),
    bh['d'](bg, 'StringKeyframeTrack', function() {
        return ayA;
    }),
    bh['d'](bg, 'SubtractEquation', function() {
        return c8;
    }),
    bh['d'](bg, 'SubtractiveBlending', function() {
        return c4;
    }),
    bh['d'](bg, 'TangentSpaceNormalMap', function() {
        return e0;
    }),
    bh['d'](bg, 'TetrahedronBufferGeometry', function() {
        return ahu;
    }),
    bh['d'](bg, 'TetrahedronGeometry', function() {
        return ahr;
    }),
    bh['d'](bg, 'TextBufferGeometry', function() {
        return asM;
    }),
    bh['d'](bg, 'TextGeometry', function() {
        return asJ;
    }),
    bh['d'](bg, 'Texture', function() {
        return lW;
    }),
    bh['d'](bg, 'TextureLoader', function() {
        return aCH;
    }),
    bh['d'](bg, 'TorusBufferGeometry', function() {
        return ajk;
    }),
    bh['d'](bg, 'TorusGeometry', function() {
        return aje;
    }),
    bh['d'](bg, 'TorusKnotBufferGeometry', function() {
        return aiC;
    }),
    bh['d'](bg, 'TorusKnotGeometry', function() {
        return aiu;
    }),
    bh['d'](bg, 'Triangle', function() {
        return KS;
    }),
    bh['d'](bg, 'TriangleFanDrawMode', function() {
        return dP;
    }),
    bh['d'](bg, 'TriangleStripDrawMode', function() {
        return dO;
    }),
    bh['d'](bg, 'TrianglesDrawMode', function() {
        return dN;
    }),
    bh['d'](bg, 'TubeBufferGeometry', function() {
        return ai2;
    }),
    bh['d'](bg, 'TubeGeometry', function() {
        return ahU;
    }),
    bh['d'](bg, 'UVMapping', function() {
        return cE;
    }),
    bh['d'](bg, 'Uint16Attribute', function() {
        return b9N;
    }),
    bh['d'](bg, 'Uint16BufferAttribute', function() {
        return B2;
    }),
    bh['d'](bg, 'Uint32Attribute', function() {
        return b9T;
    }),
    bh['d'](bg, 'Uint32BufferAttribute', function() {
        return Ba;
    }),
    bh['d'](bg, 'Uint8Attribute', function() {
        return b9E;
    }),
    bh['d'](bg, 'Uint8BufferAttribute', function() {
        return AQ;
    }),
    bh['d'](bg, 'Uint8ClampedAttribute', function() {
        return b9H;
    }),
    bh['d'](bg, 'Uint8ClampedBufferAttribute', function() {
        return AU;
    }),
    bh['d'](bg, 'Uncharted2ToneMapping', function() {
        return cB;
    }),
    bh['d'](bg, 'Uniform', function() {
        return aWj;
    }),
    bh['d'](bg, 'UniformsLib', function() {
        return xn;
    }),
    bh['d'](bg, 'UniformsUtils', function() {
        return w5;
    }),
    bh['d'](bg, 'UnsignedByteType', function() {
        return cV;
    }),
    bh['d'](bg, 'UnsignedInt248Type', function() {
        return d6;
    }),
    bh['d'](bg, 'UnsignedIntType', function() {
        return d0;
    }),
    bh['d'](bg, 'UnsignedShort4444Type', function() {
        return d3;
    }),
    bh['d'](bg, 'UnsignedShort5551Type', function() {
        return d4;
    }),
    bh['d'](bg, 'UnsignedShort565Type', function() {
        return d5;
    }),
    bh['d'](bg, 'UnsignedShortType', function() {
        return cY;
    }),
    bh['d'](bg, 'Vector2', function() {
        return eC;
    }),
    bh['d'](bg, 'Vector3', function() {
        return eK;
    }),
    bh['d'](bg, 'Vector4', function() {
        return m7;
    }),
    bh['d'](bg, 'VectorKeyframeTrack', function() {
        return ayF;
    }),
    bh['d'](bg, 'Vertex', function() {
        return b9u;
    }),
    bh['d'](bg, 'VertexColors', function() {
        return c0;
    }),
    bh['d'](bg, 'VertexNormalsHelper', function() {
        return aWV;
    }),
    bh['d'](bg, 'VideoTexture', function() {
        return aeP;
    }),
    bh['d'](bg, 'WebGLMultisampleRenderTarget', function() {
        return mg;
    }),
    bh['d'](bg, 'WebGLRenderTarget', function() {
        return mc;
    }),
    bh['d'](bg, 'WebGLRenderTargetCube', function() {
        return mk;
    }),
    bh['d'](bg, 'WebGLRenderer', function() {
        return a8U;
    }),
    bh['d'](bg, 'WebGLUtils', function() {
        return a60;
    }),
    bh['d'](bg, 'WireframeGeometry', function() {
        return afx;
    }),
    bh['d'](bg, 'WireframeHelper', function() {
        return bag;
    }),
    bh['d'](bg, 'WrapAroundEnding', function() {
        return dM;
    }),
    bh['d'](bg, 'XHRLoader', function() {
        return baj;
    }),
    bh['d'](bg, 'ZeroCurvatureEnding', function() {
        return dK;
    }),
    bh['d'](bg, 'ZeroFactor', function() {
        return cc;
    }),
    bh['d'](bg, 'ZeroSlopeEnding', function() {
        return dL;
    }),
    bh['d'](bg, 'sRGBEncoding', function() {
        return dR;
    }),
    void 0x0 === Number['EPSILON'] && (Number['EPSILON'] = Math['pow'](0x2, -0x34)),
    void 0x0 === Number['isInteger'] && (Number['isInteger'] = function(bf) {
        return 'number' == typeof bf && isFinite(bf) && Math['floor'](bf) === bf;
    }
    ),
    void 0x0 === Math['sign'] && (Math['sign'] = function(bf) {
        return bf < 0x0 ? -0x1 : bf > 0x0 ? 0x1 : +bf;
    }
    ),
    'name'in Function['prototype'] == !0x1 && Object['defineProperty'](Function['prototype'], 'name', {
        'get': function() {
            return this['toString']()['match'](/^\s*function\s*([^\(\s]*)/)[0x1];
        }
    }),
    void 0x0 === Object['assign'] && (Object['assign'] = function(bf) {
        if (null == bf)
            throw new TypeError('Cannot\x20convert\x20undefined\x20or\x20null\x20to\x20object');
        for (var bg = Object(bf), bh = 0x1; bh < arguments['length']; bh++) {
            var bi = arguments[bh];
            if (null != bi)
                for (var bp in bi)
                    Object['prototype']['hasOwnProperty']['call'](bi, bp) && (bg[bp] = bi[bp]);
        }
        return bg;
    }
    ),
    Object['assign'](bi['prototype'], {
        'addEventListener': function(bf, bg) {
            void 0x0 === this['_listeners'] && (this['_listeners'] = {});
            var bh = this['_listeners'];
            void 0x0 === bh[bf] && (bh[bf] = []),
            -0x1 === bh[bf]['indexOf'](bg) && bh[bf]['push'](bg);
        },
        'hasEventListener': function(bf, bg) {
            if (void 0x0 === this['_listeners'])
                return !0x1;
            var bh = this['_listeners'];
            return void 0x0 !== bh[bf] && -0x1 !== bh[bf]['indexOf'](bg);
        },
        'removeEventListener': function(bf, bg) {
            if (void 0x0 !== this['_listeners']) {
                var bh = this['_listeners'][bf];
                if (void 0x0 !== bh) {
                    var bi = bh['indexOf'](bg);
                    -0x1 !== bi && bh['splice'](bi, 0x1);
                }
            }
        },
        'dispatchEvent': function(bf) {
            if (void 0x0 !== this['_listeners']) {
                var bg = this['_listeners'][bf['type']];
                if (void 0x0 !== bg) {
                    bf['target'] = this;
                    for (var bh = bg['slice'](0x0), bi = 0x0, bE = bh['length']; bi < bE; bi++)
                        bh[bi]['call'](this, bf);
                }
            }
        }
    });
    var bF, bG, bH, bI = '105', bJ = {
        'LEFT': 0x0,
        'MIDDLE': 0x1,
        'RIGHT': 0x2
    }, bK = 0x0, bL = 0x1, bM = 0x2, bN = 0x3, bO = 0x0, bP = 0x1, bQ = 0x0, bR = 0x1, bS = 0x2, bT = 0x0, bU = 0x1, bV = 0x2, bW = 0x1, bX = 0x2, bY = 0x0, bZ = 0x1, c0 = 0x2, c1 = 0x0, c2 = 0x1, c3 = 0x2, c4 = 0x3, c5 = 0x4, c6 = 0x5, c7 = 0x64, c8 = 0x65, c9 = 0x66, ca = 0x67, cb = 0x68, cc = 0xc8, cd = 0xc9, ce = 0xca, cf = 0xcb, cg = 0xcc, ch = 0xcd, ci = 0xce, cj = 0xcf, ck = 0xd0, cl = 0xd1, cm = 0xd2, cn = 0x0, co = 0x1, cp = 0x2, cq = 0x3, cr = 0x4, cs = 0x5, ct = 0x6, cu = 0x7, cv = 0x0, cw = 0x1, cx = 0x2, cy = 0x0, cz = 0x1, cA = 0x2, cB = 0x3, cC = 0x4, cD = 0x5, cE = 0x12c, cF = 0x12d, cG = 0x12e, cH = 0x12f, cI = 0x130, cJ = 0x131, cK = 0x132, cL = 0x133, cM = 0x3e8, cN = 0x3e9, cO = 0x3ea, cP = 0x3eb, cQ = 0x3ec, cR = 0x3ed, cS = 0x3ee, cT = 0x3ef, cU = 0x3f0, cV = 0x3f1, cW = 0x3f2, cX = 0x3f3, cY = 0x3f4, cZ = 0x3f5, d0 = 0x3f6, d1 = 0x3f7, d2 = 0x3f8, d3 = 0x3f9, d4 = 0x3fa, d5 = 0x3fb, d6 = 0x3fc, d7 = 0x3fd, d8 = 0x3fe, d9 = 0x3ff, da = 0x400, db = 0x401, dc = d9, dd = 0x402, de = 0x403, df = 0x404, dg = 0x83f0, dh = 0x83f1, di = 0x83f2, dj = 0x83f3, dk = 0x8c00, dl = 0x8c01, dm = 0x8c02, dn = 0x8c03, dp = 0x8d64, dq = 0x93b0, dr = 0x93b1, ds = 0x93b2, dt = 0x93b3, du = 0x93b4, dv = 0x93b5, dw = 0x93b6, dx = 0x93b7, dy = 0x93b8, dz = 0x93b9, dA = 0x93ba, dB = 0x93bb, dC = 0x93bc, dD = 0x93bd, dE = 0x898, dF = 0x899, dG = 0x89a, dH = 0x8fc, dI = 0x8fd, dJ = 0x8fe, dK = 0x960, dL = 0x961, dM = 0x962, dN = 0x0, dO = 0x1, dP = 0x2, dQ = 0xbb8, dR = 0xbb9, dS = 0xbbf, dT = 0xbba, dU = 0xbbb, dV = 0xbbc, dW = 0xbbd, dX = 0xbbe, dY = 0xc80, dZ = 0xc81, e0 = 0x0, e1 = 0x1, e2 = {
        'DEG2RAD': Math['PI'] / 0xb4,
        'RAD2DEG': 0xb4 / Math['PI'],
        'generateUUID': function() {
            for (var bf = [], bg = 0x0; bg < 0x100; bg++)
                bf[bg] = (bg < 0x10 ? '0' : '') + bg['toString'](0x10);
            return function() {
                var bg = 0xffffffff * Math['random']() | 0x0
                  , bh = 0xffffffff * Math['random']() | 0x0
                  , bi = 0xffffffff * Math['random']() | 0x0
                  , bF = 0xffffffff * Math['random']() | 0x0;
                return (bf[0xff & bg] + bf[bg >> 0x8 & 0xff] + bf[bg >> 0x10 & 0xff] + bf[bg >> 0x18 & 0xff] + '-' + bf[0xff & bh] + bf[bh >> 0x8 & 0xff] + '-' + bf[bh >> 0x10 & 0xf | 0x40] + bf[bh >> 0x18 & 0xff] + '-' + bf[0x3f & bi | 0x80] + bf[bi >> 0x8 & 0xff] + '-' + bf[bi >> 0x10 & 0xff] + bf[bi >> 0x18 & 0xff] + bf[0xff & bF] + bf[bF >> 0x8 & 0xff] + bf[bF >> 0x10 & 0xff] + bf[bF >> 0x18 & 0xff])['toUpperCase']();
            }
            ;
        }(),
        'clamp': function(bf, bg, bh) {
            return Math['max'](bg, Math['min'](bh, bf));
        },
        'euclideanModulo': function(bf, bg) {
            return (bf % bg + bg) % bg;
        },
        'mapLinear': function(bf, bg, bh, bi, bF) {
            return bi + (bf - bg) * (bF - bi) / (bh - bg);
        },
        'lerp': function(bf, bg, bh) {
            return (0x1 - bh) * bf + bh * bg;
        },
        'smoothstep': function(bf, bg, bh) {
            return bf <= bg ? 0x0 : bf >= bh ? 0x1 : (bf = (bf - bg) / (bh - bg)) * bf * (0x3 - 0x2 * bf);
        },
        'smootherstep': function(bf, bg, bh) {
            return bf <= bg ? 0x0 : bf >= bh ? 0x1 : (bf = (bf - bg) / (bh - bg)) * bf * bf * (bf * (0x6 * bf - 0xf) + 0xa);
        },
        'randInt': function(bf, bg) {
            return bf + Math['floor'](Math['random']() * (bg - bf + 0x1));
        },
        'randFloat': function(bf, bg) {
            return bf + Math['random']() * (bg - bf);
        },
        'randFloatSpread': function(bf) {
            return bf * (0.5 - Math['random']());
        },
        'degToRad': function(bf) {
            return bf * e2['DEG2RAD'];
        },
        'radToDeg': function(bf) {
            return bf * e2['RAD2DEG'];
        },
        'isPowerOfTwo': function(bf) {
            return 0x0 == (bf & bf - 0x1) && 0x0 !== bf;
        },
        'ceilPowerOfTwo': function(bf) {
            return Math['pow'](0x2, Math['ceil'](Math['log'](bf) / Math['LN2']));
        },
        'floorPowerOfTwo': function(bf) {
            return Math['pow'](0x2, Math['floor'](Math['log'](bf) / Math['LN2']));
        }
    };
    function eC(bf, bg) {
        this['x'] = bf || 0x0,
        this['y'] = bg || 0x0;
    }
    function eF(bf, bg, bh, bi) {
        this['_x'] = bf || 0x0,
        this['_y'] = bg || 0x0,
        this['_z'] = bh || 0x0,
        this['_w'] = void 0x0 !== bi ? bi : 0x1;
    }
    function eK(bf, bg, bh) {
        this['x'] = bf || 0x0,
        this['y'] = bg || 0x0,
        this['z'] = bh || 0x0;
    }
    function eO() {
        this['elements'] = [0x1, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1],
        arguments['length'] > 0x0 && console['error']('THREE.Matrix3:\x20the\x20constructor\x20no\x20longer\x20reads\x20arguments.\x20use\x20.set()\x20instead.');
    }
    Object['defineProperties'](eC['prototype'], {
        'width': {
            'get': function() {
                return this['x'];
            },
            'set': function(bf) {
                this['x'] = bf;
            }
        },
        'height': {
            'get': function() {
                return this['y'];
            },
            'set': function(bf) {
                this['y'] = bf;
            }
        }
    }),
    Object['assign'](eC['prototype'], {
        'isVector2': !0x0,
        'set': function(bf, bg) {
            return this['x'] = bf,
            this['y'] = bg,
            this;
        },
        'setScalar': function(bf) {
            return this['x'] = bf,
            this['y'] = bf,
            this;
        },
        'setX': function(bf) {
            return this['x'] = bf,
            this;
        },
        'setY': function(bf) {
            return this['y'] = bf,
            this;
        },
        'setComponent': function(bf, bg) {
            switch (bf) {
            case 0x0:
                this['x'] = bg;
                break;
            case 0x1:
                this['y'] = bg;
                break;
            default:
                throw new Error('index\x20is\x20out\x20of\x20range:\x20' + bf);
            }
            return this;
        },
        'getComponent': function(bf) {
            switch (bf) {
            case 0x0:
                return this['x'];
            case 0x1:
                return this['y'];
            default:
                throw new Error('index\x20is\x20out\x20of\x20range:\x20' + bf);
            }
        },
        'clone': function() {
            return new this['constructor'](this['x'],this['y']);
        },
        'copy': function(bf) {
            return this['x'] = bf['x'],
            this['y'] = bf['y'],
            this;
        },
        'add': function(bf, bg) {
            return void 0x0 !== bg ? (console['warn']('THREE.Vector2:\x20.add()\x20now\x20only\x20accepts\x20one\x20argument.\x20Use\x20.addVectors(\x20a,\x20b\x20)\x20instead.'),
            this['addVectors'](bf, bg)) : (this['x'] += bf['x'],
            this['y'] += bf['y'],
            this);
        },
        'addScalar': function(bf) {
            return this['x'] += bf,
            this['y'] += bf,
            this;
        },
        'addVectors': function(bf, bg) {
            return this['x'] = bf['x'] + bg['x'],
            this['y'] = bf['y'] + bg['y'],
            this;
        },
        'addScaledVector': function(bf, bg) {
            return this['x'] += bf['x'] * bg,
            this['y'] += bf['y'] * bg,
            this;
        },
        'sub': function(bf, bg) {
            return void 0x0 !== bg ? (console['warn']('THREE.Vector2:\x20.sub()\x20now\x20only\x20accepts\x20one\x20argument.\x20Use\x20.subVectors(\x20a,\x20b\x20)\x20instead.'),
            this['subVectors'](bf, bg)) : (this['x'] -= bf['x'],
            this['y'] -= bf['y'],
            this);
        },
        'subScalar': function(bf) {
            return this['x'] -= bf,
            this['y'] -= bf,
            this;
        },
        'subVectors': function(bf, bg) {
            return this['x'] = bf['x'] - bg['x'],
            this['y'] = bf['y'] - bg['y'],
            this;
        },
        'multiply': function(bf) {
            return this['x'] *= bf['x'],
            this['y'] *= bf['y'],
            this;
        },
        'multiplyScalar': function(bf) {
            return this['x'] *= bf,
            this['y'] *= bf,
            this;
        },
        'divide': function(bf) {
            return this['x'] /= bf['x'],
            this['y'] /= bf['y'],
            this;
        },
        'divideScalar': function(bf) {
            return this['multiplyScalar'](0x1 / bf);
        },
        'applyMatrix3': function(bf) {
            var bg = this['x']
              , bh = this['y']
              , bi = bf['elements'];
            return this['x'] = bi[0x0] * bg + bi[0x3] * bh + bi[0x6],
            this['y'] = bi[0x1] * bg + bi[0x4] * bh + bi[0x7],
            this;
        },
        'min': function(bf) {
            return this['x'] = Math['min'](this['x'], bf['x']),
            this['y'] = Math['min'](this['y'], bf['y']),
            this;
        },
        'max': function(bf) {
            return this['x'] = Math['max'](this['x'], bf['x']),
            this['y'] = Math['max'](this['y'], bf['y']),
            this;
        },
        'clamp': function(bf, bg) {
            return this['x'] = Math['max'](bf['x'], Math['min'](bg['x'], this['x'])),
            this['y'] = Math['max'](bf['y'], Math['min'](bg['y'], this['y'])),
            this;
        },
        'clampScalar': function(bf, bg) {
            return this['x'] = Math['max'](bf, Math['min'](bg, this['x'])),
            this['y'] = Math['max'](bf, Math['min'](bg, this['y'])),
            this;
        },
        'clampLength': function(bf, bg) {
            var bh = this['length']();
            return this['divideScalar'](bh || 0x1)['multiplyScalar'](Math['max'](bf, Math['min'](bg, bh)));
        },
        'floor': function() {
            return this['x'] = Math['floor'](this['x']),
            this['y'] = Math['floor'](this['y']),
            this;
        },
        'ceil': function() {
            return this['x'] = Math['ceil'](this['x']),
            this['y'] = Math['ceil'](this['y']),
            this;
        },
        'round': function() {
            return this['x'] = Math['round'](this['x']),
            this['y'] = Math['round'](this['y']),
            this;
        },
        'roundToZero': function() {
            return this['x'] = this['x'] < 0x0 ? Math['ceil'](this['x']) : Math['floor'](this['x']),
            this['y'] = this['y'] < 0x0 ? Math['ceil'](this['y']) : Math['floor'](this['y']),
            this;
        },
        'negate': function() {
            return this['x'] = -this['x'],
            this['y'] = -this['y'],
            this;
        },
        'dot': function(bf) {
            return this['x'] * bf['x'] + this['y'] * bf['y'];
        },
        'cross': function(bf) {
            return this['x'] * bf['y'] - this['y'] * bf['x'];
        },
        'lengthSq': function() {
            return this['x'] * this['x'] + this['y'] * this['y'];
        },
        'length': function() {
            return Math['sqrt'](this['x'] * this['x'] + this['y'] * this['y']);
        },
        'manhattanLength': function() {
            return Math['abs'](this['x']) + Math['abs'](this['y']);
        },
        'normalize': function() {
            return this['divideScalar'](this['length']() || 0x1);
        },
        'angle': function() {
            var bf = Math['atan2'](this['y'], this['x']);
            return bf < 0x0 && (bf += 0x2 * Math['PI']),
            bf;
        },
        'distanceTo': function(bf) {
            return Math['sqrt'](this['distanceToSquared'](bf));
        },
        'distanceToSquared': function(bf) {
            var bg = this['x'] - bf['x']
              , bh = this['y'] - bf['y'];
            return bg * bg + bh * bh;
        },
        'manhattanDistanceTo': function(bf) {
            return Math['abs'](this['x'] - bf['x']) + Math['abs'](this['y'] - bf['y']);
        },
        'setLength': function(bf) {
            return this['normalize']()['multiplyScalar'](bf);
        },
        'lerp': function(bf, bg) {
            return this['x'] += (bf['x'] - this['x']) * bg,
            this['y'] += (bf['y'] - this['y']) * bg,
            this;
        },
        'lerpVectors': function(bf, bg, bh) {
            return this['subVectors'](bg, bf)['multiplyScalar'](bh)['add'](bf);
        },
        'equals': function(bf) {
            return bf['x'] === this['x'] && bf['y'] === this['y'];
        },
        'fromArray': function(bf, bg) {
            return void 0x0 === bg && (bg = 0x0),
            this['x'] = bf[bg],
            this['y'] = bf[bg + 0x1],
            this;
        },
        'toArray': function(bf, bg) {
            return void 0x0 === bf && (bf = []),
            void 0x0 === bg && (bg = 0x0),
            bf[bg] = this['x'],
            bf[bg + 0x1] = this['y'],
            bf;
        },
        'fromBufferAttribute': function(bf, bg, bh) {
            return void 0x0 !== bh && console['warn']('THREE.Vector2:\x20offset\x20has\x20been\x20removed\x20from\x20.fromBufferAttribute().'),
            this['x'] = bf['getX'](bg),
            this['y'] = bf['getY'](bg),
            this;
        },
        'rotateAround': function(bf, bg) {
            var bh = Math['cos'](bg)
              , bi = Math['sin'](bg)
              , bF = this['x'] - bf['x']
              , bG = this['y'] - bf['y'];
            return this['x'] = bF * bh - bG * bi + bf['x'],
            this['y'] = bF * bi + bG * bh + bf['y'],
            this;
        }
    }),
    Object['assign'](eF, {
        'slerp': function(bf, bg, bh, bi) {
            return bh['copy'](bf)['slerp'](bg, bi);
        },
        'slerpFlat': function(bf, bg, bh, bi, bF, bG, bH) {
            var bI = bh[bi + 0x0]
              , bJ = bh[bi + 0x1]
              , bK = bh[bi + 0x2]
              , bL = bh[bi + 0x3]
              , bM = bF[bG + 0x0]
              , bN = bF[bG + 0x1]
              , bO = bF[bG + 0x2]
              , bP = bF[bG + 0x3];
            if (bL !== bP || bI !== bM || bJ !== bN || bK !== bO) {
                var bQ = 0x1 - bH
                  , bR = bI * bM + bJ * bN + bK * bO + bL * bP
                  , bS = bR >= 0x0 ? 0x1 : -0x1
                  , bT = 0x1 - bR * bR;
                if (bT > Number['EPSILON']) {
                    var bU = Math['sqrt'](bT)
                      , bV = Math['atan2'](bU, bR * bS);
                    bQ = Math['sin'](bQ * bV) / bU,
                    bH = Math['sin'](bH * bV) / bU;
                }
                var bW = bH * bS;
                if (bI = bI * bQ + bM * bW,
                bJ = bJ * bQ + bN * bW,
                bK = bK * bQ + bO * bW,
                bL = bL * bQ + bP * bW,
                bQ === 0x1 - bH) {
                    var bX = 0x1 / Math['sqrt'](bI * bI + bJ * bJ + bK * bK + bL * bL);
                    bI *= bX,
                    bJ *= bX,
                    bK *= bX,
                    bL *= bX;
                }
            }
            bf[bg] = bI,
            bf[bg + 0x1] = bJ,
            bf[bg + 0x2] = bK,
            bf[bg + 0x3] = bL;
        }
    }),
    Object['defineProperties'](eF['prototype'], {
        'x': {
            'get': function() {
                return this['_x'];
            },
            'set': function(bf) {
                this['_x'] = bf,
                this['onChangeCallback']();
            }
        },
        'y': {
            'get': function() {
                return this['_y'];
            },
            'set': function(bf) {
                this['_y'] = bf,
                this['onChangeCallback']();
            }
        },
        'z': {
            'get': function() {
                return this['_z'];
            },
            'set': function(bf) {
                this['_z'] = bf,
                this['onChangeCallback']();
            }
        },
        'w': {
            'get': function() {
                return this['_w'];
            },
            'set': function(bf) {
                this['_w'] = bf,
                this['onChangeCallback']();
            }
        }
    }),
    Object['assign'](eF['prototype'], {
        'isQuaternion': !0x0,
        'set': function(bf, bg, bh, bi) {
            return this['_x'] = bf,
            this['_y'] = bg,
            this['_z'] = bh,
            this['_w'] = bi,
            this['onChangeCallback'](),
            this;
        },
        'clone': function() {
            return new this['constructor'](this['_x'],this['_y'],this['_z'],this['_w']);
        },
        'copy': function(bf) {
            return this['_x'] = bf['x'],
            this['_y'] = bf['y'],
            this['_z'] = bf['z'],
            this['_w'] = bf['w'],
            this['onChangeCallback'](),
            this;
        },
        'setFromEuler': function(bf, bg) {
            if (!bf || !bf['isEuler'])
                throw new Error('THREE.Quaternion:\x20.setFromEuler()\x20now\x20expects\x20an\x20Euler\x20rotation\x20rather\x20than\x20a\x20Vector3\x20and\x20order.');
            var bh = bf['_x']
              , bi = bf['_y']
              , bF = bf['_z']
              , bG = bf['order']
              , bH = Math['cos']
              , bI = Math['sin']
              , bJ = bH(bh / 0x2)
              , bK = bH(bi / 0x2)
              , bL = bH(bF / 0x2)
              , bM = bI(bh / 0x2)
              , bN = bI(bi / 0x2)
              , bO = bI(bF / 0x2);
            return 'XYZ' === bG ? (this['_x'] = bM * bK * bL + bJ * bN * bO,
            this['_y'] = bJ * bN * bL - bM * bK * bO,
            this['_z'] = bJ * bK * bO + bM * bN * bL,
            this['_w'] = bJ * bK * bL - bM * bN * bO) : 'YXZ' === bG ? (this['_x'] = bM * bK * bL + bJ * bN * bO,
            this['_y'] = bJ * bN * bL - bM * bK * bO,
            this['_z'] = bJ * bK * bO - bM * bN * bL,
            this['_w'] = bJ * bK * bL + bM * bN * bO) : 'ZXY' === bG ? (this['_x'] = bM * bK * bL - bJ * bN * bO,
            this['_y'] = bJ * bN * bL + bM * bK * bO,
            this['_z'] = bJ * bK * bO + bM * bN * bL,
            this['_w'] = bJ * bK * bL - bM * bN * bO) : 'ZYX' === bG ? (this['_x'] = bM * bK * bL - bJ * bN * bO,
            this['_y'] = bJ * bN * bL + bM * bK * bO,
            this['_z'] = bJ * bK * bO - bM * bN * bL,
            this['_w'] = bJ * bK * bL + bM * bN * bO) : 'YZX' === bG ? (this['_x'] = bM * bK * bL + bJ * bN * bO,
            this['_y'] = bJ * bN * bL + bM * bK * bO,
            this['_z'] = bJ * bK * bO - bM * bN * bL,
            this['_w'] = bJ * bK * bL - bM * bN * bO) : 'XZY' === bG && (this['_x'] = bM * bK * bL - bJ * bN * bO,
            this['_y'] = bJ * bN * bL - bM * bK * bO,
            this['_z'] = bJ * bK * bO + bM * bN * bL,
            this['_w'] = bJ * bK * bL + bM * bN * bO),
            !0x1 !== bg && this['onChangeCallback'](),
            this;
        },
        'setFromAxisAngle': function(bf, bg) {
            var bh = bg / 0x2
              , bi = Math['sin'](bh);
            return this['_x'] = bf['x'] * bi,
            this['_y'] = bf['y'] * bi,
            this['_z'] = bf['z'] * bi,
            this['_w'] = Math['cos'](bh),
            this['onChangeCallback'](),
            this;
        },
        'setFromRotationMatrix': function(bf) {
            var bg, bh = bf['elements'], bi = bh[0x0], bF = bh[0x4], bG = bh[0x8], bH = bh[0x1], bI = bh[0x5], bJ = bh[0x9], bK = bh[0x2], bL = bh[0x6], bM = bh[0xa], bN = bi + bI + bM;
            return bN > 0x0 ? (bg = 0.5 / Math['sqrt'](bN + 0x1),
            this['_w'] = 0.25 / bg,
            this['_x'] = (bL - bJ) * bg,
            this['_y'] = (bG - bK) * bg,
            this['_z'] = (bH - bF) * bg) : bi > bI && bi > bM ? (bg = 0x2 * Math['sqrt'](0x1 + bi - bI - bM),
            this['_w'] = (bL - bJ) / bg,
            this['_x'] = 0.25 * bg,
            this['_y'] = (bF + bH) / bg,
            this['_z'] = (bG + bK) / bg) : bI > bM ? (bg = 0x2 * Math['sqrt'](0x1 + bI - bi - bM),
            this['_w'] = (bG - bK) / bg,
            this['_x'] = (bF + bH) / bg,
            this['_y'] = 0.25 * bg,
            this['_z'] = (bJ + bL) / bg) : (bg = 0x2 * Math['sqrt'](0x1 + bM - bi - bI),
            this['_w'] = (bH - bF) / bg,
            this['_x'] = (bG + bK) / bg,
            this['_y'] = (bJ + bL) / bg,
            this['_z'] = 0.25 * bg),
            this['onChangeCallback'](),
            this;
        },
        'setFromUnitVectors': function(bf, bg) {
            var bh = bf['dot'](bg) + 0x1;
            return bh < 0.000001 ? (bh = 0x0,
            Math['abs'](bf['x']) > Math['abs'](bf['z']) ? (this['_x'] = -bf['y'],
            this['_y'] = bf['x'],
            this['_z'] = 0x0,
            this['_w'] = bh) : (this['_x'] = 0x0,
            this['_y'] = -bf['z'],
            this['_z'] = bf['y'],
            this['_w'] = bh)) : (this['_x'] = bf['y'] * bg['z'] - bf['z'] * bg['y'],
            this['_y'] = bf['z'] * bg['x'] - bf['x'] * bg['z'],
            this['_z'] = bf['x'] * bg['y'] - bf['y'] * bg['x'],
            this['_w'] = bh),
            this['normalize']();
        },
        'angleTo': function(bf) {
            return 0x2 * Math['acos'](Math['abs'](e2['clamp'](this['dot'](bf), -0x1, 0x1)));
        },
        'rotateTowards': function(bf, bg) {
            var bh = this['angleTo'](bf);
            if (0x0 === bh)
                return this;
            var bi = Math['min'](0x1, bg / bh);
            return this['slerp'](bf, bi),
            this;
        },
        'inverse': function() {
            return this['conjugate']();
        },
        'conjugate': function() {
            return this['_x'] *= -0x1,
            this['_y'] *= -0x1,
            this['_z'] *= -0x1,
            this['onChangeCallback'](),
            this;
        },
        'dot': function(bf) {
            return this['_x'] * bf['_x'] + this['_y'] * bf['_y'] + this['_z'] * bf['_z'] + this['_w'] * bf['_w'];
        },
        'lengthSq': function() {
            return this['_x'] * this['_x'] + this['_y'] * this['_y'] + this['_z'] * this['_z'] + this['_w'] * this['_w'];
        },
        'length': function() {
            return Math['sqrt'](this['_x'] * this['_x'] + this['_y'] * this['_y'] + this['_z'] * this['_z'] + this['_w'] * this['_w']);
        },
        'normalize': function() {
            var bf = this['length']();
            return 0x0 === bf ? (this['_x'] = 0x0,
            this['_y'] = 0x0,
            this['_z'] = 0x0,
            this['_w'] = 0x1) : (bf = 0x1 / bf,
            this['_x'] = this['_x'] * bf,
            this['_y'] = this['_y'] * bf,
            this['_z'] = this['_z'] * bf,
            this['_w'] = this['_w'] * bf),
            this['onChangeCallback'](),
            this;
        },
        'multiply': function(bf, bg) {
            return void 0x0 !== bg ? (console['warn']('THREE.Quaternion:\x20.multiply()\x20now\x20only\x20accepts\x20one\x20argument.\x20Use\x20.multiplyQuaternions(\x20a,\x20b\x20)\x20instead.'),
            this['multiplyQuaternions'](bf, bg)) : this['multiplyQuaternions'](this, bf);
        },
        'premultiply': function(bf) {
            return this['multiplyQuaternions'](bf, this);
        },
        'multiplyQuaternions': function(bf, bg) {
            var bh = bf['_x']
              , bi = bf['_y']
              , bF = bf['_z']
              , bG = bf['_w']
              , bH = bg['_x']
              , bI = bg['_y']
              , bJ = bg['_z']
              , bK = bg['_w'];
            return this['_x'] = bh * bK + bG * bH + bi * bJ - bF * bI,
            this['_y'] = bi * bK + bG * bI + bF * bH - bh * bJ,
            this['_z'] = bF * bK + bG * bJ + bh * bI - bi * bH,
            this['_w'] = bG * bK - bh * bH - bi * bI - bF * bJ,
            this['onChangeCallback'](),
            this;
        },
        'slerp': function(bf, bg) {
            if (0x0 === bg)
                return this;
            if (0x1 === bg)
                return this['copy'](bf);
            var bh = this['_x']
              , bi = this['_y']
              , bF = this['_z']
              , bG = this['_w']
              , bH = bG * bf['_w'] + bh * bf['_x'] + bi * bf['_y'] + bF * bf['_z'];
            if (bH < 0x0 ? (this['_w'] = -bf['_w'],
            this['_x'] = -bf['_x'],
            this['_y'] = -bf['_y'],
            this['_z'] = -bf['_z'],
            bH = -bH) : this['copy'](bf),
            bH >= 0x1)
                return this['_w'] = bG,
                this['_x'] = bh,
                this['_y'] = bi,
                this['_z'] = bF,
                this;
            var bI = 0x1 - bH * bH;
            if (bI <= Number['EPSILON']) {
                var bJ = 0x1 - bg;
                return this['_w'] = bJ * bG + bg * this['_w'],
                this['_x'] = bJ * bh + bg * this['_x'],
                this['_y'] = bJ * bi + bg * this['_y'],
                this['_z'] = bJ * bF + bg * this['_z'],
                this['normalize']();
            }
            var bK = Math['sqrt'](bI)
              , bL = Math['atan2'](bK, bH)
              , bM = Math['sin']((0x1 - bg) * bL) / bK
              , bN = Math['sin'](bg * bL) / bK;
            return this['_w'] = bG * bM + this['_w'] * bN,
            this['_x'] = bh * bM + this['_x'] * bN,
            this['_y'] = bi * bM + this['_y'] * bN,
            this['_z'] = bF * bM + this['_z'] * bN,
            this['onChangeCallback'](),
            this;
        },
        'equals': function(bf) {
            return bf['_x'] === this['_x'] && bf['_y'] === this['_y'] && bf['_z'] === this['_z'] && bf['_w'] === this['_w'];
        },
        'fromArray': function(bf, bg) {
            return void 0x0 === bg && (bg = 0x0),
            this['_x'] = bf[bg],
            this['_y'] = bf[bg + 0x1],
            this['_z'] = bf[bg + 0x2],
            this['_w'] = bf[bg + 0x3],
            this['onChangeCallback'](),
            this;
        },
        'toArray': function(bf, bg) {
            return void 0x0 === bf && (bf = []),
            void 0x0 === bg && (bg = 0x0),
            bf[bg] = this['_x'],
            bf[bg + 0x1] = this['_y'],
            bf[bg + 0x2] = this['_z'],
            bf[bg + 0x3] = this['_w'],
            bf;
        },
        'onChange': function(bf) {
            return this['onChangeCallback'] = bf,
            this;
        },
        'onChangeCallback': function() {}
    }),
    Object['assign'](eK['prototype'], {
        'isVector3': !0x0,
        'set': function(bf, bg, bh) {
            return this['x'] = bf,
            this['y'] = bg,
            this['z'] = bh,
            this;
        },
        'setScalar': function(bf) {
            return this['x'] = bf,
            this['y'] = bf,
            this['z'] = bf,
            this;
        },
        'setX': function(bf) {
            return this['x'] = bf,
            this;
        },
        'setY': function(bf) {
            return this['y'] = bf,
            this;
        },
        'setZ': function(bf) {
            return this['z'] = bf,
            this;
        },
        'setComponent': function(bf, bg) {
            switch (bf) {
            case 0x0:
                this['x'] = bg;
                break;
            case 0x1:
                this['y'] = bg;
                break;
            case 0x2:
                this['z'] = bg;
                break;
            default:
                throw new Error('index\x20is\x20out\x20of\x20range:\x20' + bf);
            }
            return this;
        },
        'getComponent': function(bf) {
            switch (bf) {
            case 0x0:
                return this['x'];
            case 0x1:
                return this['y'];
            case 0x2:
                return this['z'];
            default:
                throw new Error('index\x20is\x20out\x20of\x20range:\x20' + bf);
            }
        },
        'clone': function() {
            return new this['constructor'](this['x'],this['y'],this['z']);
        },
        'copy': function(bf) {
            return this['x'] = bf['x'],
            this['y'] = bf['y'],
            this['z'] = bf['z'],
            this;
        },
        'add': function(bf, bg) {
            return void 0x0 !== bg ? (console['warn']('THREE.Vector3:\x20.add()\x20now\x20only\x20accepts\x20one\x20argument.\x20Use\x20.addVectors(\x20a,\x20b\x20)\x20instead.'),
            this['addVectors'](bf, bg)) : (this['x'] += bf['x'],
            this['y'] += bf['y'],
            this['z'] += bf['z'],
            this);
        },
        'addScalar': function(bf) {
            return this['x'] += bf,
            this['y'] += bf,
            this['z'] += bf,
            this;
        },
        'addVectors': function(bf, bg) {
            return this['x'] = bf['x'] + bg['x'],
            this['y'] = bf['y'] + bg['y'],
            this['z'] = bf['z'] + bg['z'],
            this;
        },
        'addScaledVector': function(bf, bg) {
            return this['x'] += bf['x'] * bg,
            this['y'] += bf['y'] * bg,
            this['z'] += bf['z'] * bg,
            this;
        },
        'sub': function(bf, bg) {
            return void 0x0 !== bg ? (console['warn']('THREE.Vector3:\x20.sub()\x20now\x20only\x20accepts\x20one\x20argument.\x20Use\x20.subVectors(\x20a,\x20b\x20)\x20instead.'),
            this['subVectors'](bf, bg)) : (this['x'] -= bf['x'],
            this['y'] -= bf['y'],
            this['z'] -= bf['z'],
            this);
        },
        'subScalar': function(bf) {
            return this['x'] -= bf,
            this['y'] -= bf,
            this['z'] -= bf,
            this;
        },
        'subVectors': function(bf, bg) {
            return this['x'] = bf['x'] - bg['x'],
            this['y'] = bf['y'] - bg['y'],
            this['z'] = bf['z'] - bg['z'],
            this;
        },
        'multiply': function(bf, bg) {
            return void 0x0 !== bg ? (console['warn']('THREE.Vector3:\x20.multiply()\x20now\x20only\x20accepts\x20one\x20argument.\x20Use\x20.multiplyVectors(\x20a,\x20b\x20)\x20instead.'),
            this['multiplyVectors'](bf, bg)) : (this['x'] *= bf['x'],
            this['y'] *= bf['y'],
            this['z'] *= bf['z'],
            this);
        },
        'multiplyScalar': function(bf) {
            return this['x'] *= bf,
            this['y'] *= bf,
            this['z'] *= bf,
            this;
        },
        'multiplyVectors': function(bf, bg) {
            return this['x'] = bf['x'] * bg['x'],
            this['y'] = bf['y'] * bg['y'],
            this['z'] = bf['z'] * bg['z'],
            this;
        },
        'applyEuler': (bG = new eF(),
        function(bf) {
            return bf && bf['isEuler'] || console['error']('THREE.Vector3:\x20.applyEuler()\x20now\x20expects\x20an\x20Euler\x20rotation\x20rather\x20than\x20a\x20Vector3\x20and\x20order.'),
            this['applyQuaternion'](bG['setFromEuler'](bf));
        }
        ),
        'applyAxisAngle': function() {
            var bf = new eF();
            return function(bg, bh) {
                return this['applyQuaternion'](bf['setFromAxisAngle'](bg, bh));
            }
            ;
        }(),
        'applyMatrix3': function(bf) {
            var bg = this['x']
              , bh = this['y']
              , bi = this['z']
              , bF = bf['elements'];
            return this['x'] = bF[0x0] * bg + bF[0x3] * bh + bF[0x6] * bi,
            this['y'] = bF[0x1] * bg + bF[0x4] * bh + bF[0x7] * bi,
            this['z'] = bF[0x2] * bg + bF[0x5] * bh + bF[0x8] * bi,
            this;
        },
        'applyMatrix4': function(bf) {
            var bg = this['x']
              , bh = this['y']
              , bi = this['z']
              , bF = bf['elements']
              , bG = 0x1 / (bF[0x3] * bg + bF[0x7] * bh + bF[0xb] * bi + bF[0xf]);
            return this['x'] = (bF[0x0] * bg + bF[0x4] * bh + bF[0x8] * bi + bF[0xc]) * bG,
            this['y'] = (bF[0x1] * bg + bF[0x5] * bh + bF[0x9] * bi + bF[0xd]) * bG,
            this['z'] = (bF[0x2] * bg + bF[0x6] * bh + bF[0xa] * bi + bF[0xe]) * bG,
            this;
        },
        'applyQuaternion': function(bf) {
            var bg = this['x']
              , bh = this['y']
              , bi = this['z']
              , bF = bf['x']
              , bG = bf['y']
              , bH = bf['z']
              , bI = bf['w']
              , bJ = bI * bg + bG * bi - bH * bh
              , bK = bI * bh + bH * bg - bF * bi
              , bL = bI * bi + bF * bh - bG * bg
              , bM = -bF * bg - bG * bh - bH * bi;
            return this['x'] = bJ * bI + bM * -bF + bK * -bH - bL * -bG,
            this['y'] = bK * bI + bM * -bG + bL * -bF - bJ * -bH,
            this['z'] = bL * bI + bM * -bH + bJ * -bG - bK * -bF,
            this;
        },
        'project': function(bf) {
            return this['applyMatrix4'](bf['matrixWorldInverse'])['applyMatrix4'](bf['projectionMatrix']);
        },
        'unproject': function(bf) {
            return this['applyMatrix4'](bf['projectionMatrixInverse'])['applyMatrix4'](bf['matrixWorld']);
        },
        'transformDirection': function(bf) {
            var bg = this['x']
              , bh = this['y']
              , bi = this['z']
              , bF = bf['elements'];
            return this['x'] = bF[0x0] * bg + bF[0x4] * bh + bF[0x8] * bi,
            this['y'] = bF[0x1] * bg + bF[0x5] * bh + bF[0x9] * bi,
            this['z'] = bF[0x2] * bg + bF[0x6] * bh + bF[0xa] * bi,
            this['normalize']();
        },
        'divide': function(bf) {
            return this['x'] /= bf['x'],
            this['y'] /= bf['y'],
            this['z'] /= bf['z'],
            this;
        },
        'divideScalar': function(bf) {
            return this['multiplyScalar'](0x1 / bf);
        },
        'min': function(bf) {
            return this['x'] = Math['min'](this['x'], bf['x']),
            this['y'] = Math['min'](this['y'], bf['y']),
            this['z'] = Math['min'](this['z'], bf['z']),
            this;
        },
        'max': function(bf) {
            return this['x'] = Math['max'](this['x'], bf['x']),
            this['y'] = Math['max'](this['y'], bf['y']),
            this['z'] = Math['max'](this['z'], bf['z']),
            this;
        },
        'clamp': function(bf, bg) {
            return this['x'] = Math['max'](bf['x'], Math['min'](bg['x'], this['x'])),
            this['y'] = Math['max'](bf['y'], Math['min'](bg['y'], this['y'])),
            this['z'] = Math['max'](bf['z'], Math['min'](bg['z'], this['z'])),
            this;
        },
        'clampScalar': function(bf, bg) {
            return this['x'] = Math['max'](bf, Math['min'](bg, this['x'])),
            this['y'] = Math['max'](bf, Math['min'](bg, this['y'])),
            this['z'] = Math['max'](bf, Math['min'](bg, this['z'])),
            this;
        },
        'clampLength': function(bf, bg) {
            var bh = this['length']();
            return this['divideScalar'](bh || 0x1)['multiplyScalar'](Math['max'](bf, Math['min'](bg, bh)));
        },
        'floor': function() {
            return this['x'] = Math['floor'](this['x']),
            this['y'] = Math['floor'](this['y']),
            this['z'] = Math['floor'](this['z']),
            this;
        },
        'ceil': function() {
            return this['x'] = Math['ceil'](this['x']),
            this['y'] = Math['ceil'](this['y']),
            this['z'] = Math['ceil'](this['z']),
            this;
        },
        'round': function() {
            return this['x'] = Math['round'](this['x']),
            this['y'] = Math['round'](this['y']),
            this['z'] = Math['round'](this['z']),
            this;
        },
        'roundToZero': function() {
            return this['x'] = this['x'] < 0x0 ? Math['ceil'](this['x']) : Math['floor'](this['x']),
            this['y'] = this['y'] < 0x0 ? Math['ceil'](this['y']) : Math['floor'](this['y']),
            this['z'] = this['z'] < 0x0 ? Math['ceil'](this['z']) : Math['floor'](this['z']),
            this;
        },
        'negate': function() {
            return this['x'] = -this['x'],
            this['y'] = -this['y'],
            this['z'] = -this['z'],
            this;
        },
        'dot': function(bf) {
            return this['x'] * bf['x'] + this['y'] * bf['y'] + this['z'] * bf['z'];
        },
        'lengthSq': function() {
            return this['x'] * this['x'] + this['y'] * this['y'] + this['z'] * this['z'];
        },
        'length': function() {
            return Math['sqrt'](this['x'] * this['x'] + this['y'] * this['y'] + this['z'] * this['z']);
        },
        'manhattanLength': function() {
            return Math['abs'](this['x']) + Math['abs'](this['y']) + Math['abs'](this['z']);
        },
        'normalize': function() {
            return this['divideScalar'](this['length']() || 0x1);
        },
        'setLength': function(bf) {
            return this['normalize']()['multiplyScalar'](bf);
        },
        'lerp': function(bf, bg) {
            return this['x'] += (bf['x'] - this['x']) * bg,
            this['y'] += (bf['y'] - this['y']) * bg,
            this['z'] += (bf['z'] - this['z']) * bg,
            this;
        },
        'lerpVectors': function(bf, bg, bh) {
            return this['subVectors'](bg, bf)['multiplyScalar'](bh)['add'](bf);
        },
        'cross': function(bf, bg) {
            return void 0x0 !== bg ? (console['warn']('THREE.Vector3:\x20.cross()\x20now\x20only\x20accepts\x20one\x20argument.\x20Use\x20.crossVectors(\x20a,\x20b\x20)\x20instead.'),
            this['crossVectors'](bf, bg)) : this['crossVectors'](this, bf);
        },
        'crossVectors': function(bf, bg) {
            var bh = bf['x']
              , bi = bf['y']
              , bF = bf['z']
              , bG = bg['x']
              , bH = bg['y']
              , bI = bg['z'];
            return this['x'] = bi * bI - bF * bH,
            this['y'] = bF * bG - bh * bI,
            this['z'] = bh * bH - bi * bG,
            this;
        },
        'projectOnVector': function(bf) {
            var bg = bf['dot'](this) / bf['lengthSq']();
            return this['copy'](bf)['multiplyScalar'](bg);
        },
        'projectOnPlane': (bF = new eK(),
        function(bf) {
            return bF['copy'](this)['projectOnVector'](bf),
            this['sub'](bF);
        }
        ),
        'reflect': function() {
            var bf = new eK();
            return function(bg) {
                return this['sub'](bf['copy'](bg)['multiplyScalar'](0x2 * this['dot'](bg)));
            }
            ;
        }(),
        'angleTo': function(bf) {
            var bg = this['dot'](bf) / Math['sqrt'](this['lengthSq']() * bf['lengthSq']());
            return Math['acos'](e2['clamp'](bg, -0x1, 0x1));
        },
        'distanceTo': function(bf) {
            return Math['sqrt'](this['distanceToSquared'](bf));
        },
        'distanceToSquared': function(bf) {
            var bg = this['x'] - bf['x']
              , bh = this['y'] - bf['y']
              , bi = this['z'] - bf['z'];
            return bg * bg + bh * bh + bi * bi;
        },
        'manhattanDistanceTo': function(bf) {
            return Math['abs'](this['x'] - bf['x']) + Math['abs'](this['y'] - bf['y']) + Math['abs'](this['z'] - bf['z']);
        },
        'setFromSpherical': function(bf) {
            return this['setFromSphericalCoords'](bf['radius'], bf['phi'], bf['theta']);
        },
        'setFromSphericalCoords': function(bf, bg, bh) {
            var bi = Math['sin'](bg) * bf;
            return this['x'] = bi * Math['sin'](bh),
            this['y'] = Math['cos'](bg) * bf,
            this['z'] = bi * Math['cos'](bh),
            this;
        },
        'setFromCylindrical': function(bf) {
            return this['setFromCylindricalCoords'](bf['radius'], bf['theta'], bf['y']);
        },
        'setFromCylindricalCoords': function(bf, bg, bh) {
            return this['x'] = bf * Math['sin'](bg),
            this['y'] = bh,
            this['z'] = bf * Math['cos'](bg),
            this;
        },
        'setFromMatrixPosition': function(bf) {
            var bg = bf['elements'];
            return this['x'] = bg[0xc],
            this['y'] = bg[0xd],
            this['z'] = bg[0xe],
            this;
        },
        'setFromMatrixScale': function(bf) {
            var bg = this['setFromMatrixColumn'](bf, 0x0)['length']()
              , bh = this['setFromMatrixColumn'](bf, 0x1)['length']()
              , bi = this['setFromMatrixColumn'](bf, 0x2)['length']();
            return this['x'] = bg,
            this['y'] = bh,
            this['z'] = bi,
            this;
        },
        'setFromMatrixColumn': function(bf, bg) {
            return this['fromArray'](bf['elements'], 0x4 * bg);
        },
        'equals': function(bf) {
            return bf['x'] === this['x'] && bf['y'] === this['y'] && bf['z'] === this['z'];
        },
        'fromArray': function(bf, bg) {
            return void 0x0 === bg && (bg = 0x0),
            this['x'] = bf[bg],
            this['y'] = bf[bg + 0x1],
            this['z'] = bf[bg + 0x2],
            this;
        },
        'toArray': function(bf, bg) {
            return void 0x0 === bf && (bf = []),
            void 0x0 === bg && (bg = 0x0),
            bf[bg] = this['x'],
            bf[bg + 0x1] = this['y'],
            bf[bg + 0x2] = this['z'],
            bf;
        },
        'fromBufferAttribute': function(bf, bg, bh) {
            return void 0x0 !== bh && console['warn']('THREE.Vector3:\x20offset\x20has\x20been\x20removed\x20from\x20.fromBufferAttribute().'),
            this['x'] = bf['getX'](bg),
            this['y'] = bf['getY'](bg),
            this['z'] = bf['getZ'](bg),
            this;
        }
    }),
    Object['assign'](eO['prototype'], {
        'isMatrix3': !0x0,
        'set': function(bf, bg, bh, bi, bF, bG, bH, bI, bJ) {
            var bK = this['elements'];
            return bK[0x0] = bf,
            bK[0x1] = bi,
            bK[0x2] = bH,
            bK[0x3] = bg,
            bK[0x4] = bF,
            bK[0x5] = bI,
            bK[0x6] = bh,
            bK[0x7] = bG,
            bK[0x8] = bJ,
            this;
        },
        'identity': function() {
            return this['set'](0x1, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1),
            this;
        },
        'clone': function() {
            return new this['constructor']()['fromArray'](this['elements']);
        },
        'copy': function(bf) {
            var bg = this['elements']
              , bh = bf['elements'];
            return bg[0x0] = bh[0x0],
            bg[0x1] = bh[0x1],
            bg[0x2] = bh[0x2],
            bg[0x3] = bh[0x3],
            bg[0x4] = bh[0x4],
            bg[0x5] = bh[0x5],
            bg[0x6] = bh[0x6],
            bg[0x7] = bh[0x7],
            bg[0x8] = bh[0x8],
            this;
        },
        'setFromMatrix4': function(bf) {
            var bg = bf['elements'];
            return this['set'](bg[0x0], bg[0x4], bg[0x8], bg[0x1], bg[0x5], bg[0x9], bg[0x2], bg[0x6], bg[0xa]),
            this;
        },
        'applyToBufferAttribute': function() {
            var bf = new eK();
            return function(bg) {
                for (var bh = 0x0, bi = bg['count']; bh < bi; bh++)
                    bf['x'] = bg['getX'](bh),
                    bf['y'] = bg['getY'](bh),
                    bf['z'] = bg['getZ'](bh),
                    bf['applyMatrix3'](this),
                    bg['setXYZ'](bh, bf['x'], bf['y'], bf['z']);
                return bg;
            }
            ;
        }(),
        'multiply': function(bf) {
            return this['multiplyMatrices'](this, bf);
        },
        'premultiply': function(bf) {
            return this['multiplyMatrices'](bf, this);
        },
        'multiplyMatrices': function(bf, bg) {
            var bh = bf['elements']
              , bi = bg['elements']
              , bF = this['elements']
              , bG = bh[0x0]
              , bH = bh[0x3]
              , bI = bh[0x6]
              , bJ = bh[0x1]
              , bK = bh[0x4]
              , bL = bh[0x7]
              , bM = bh[0x2]
              , bN = bh[0x5]
              , bO = bh[0x8]
              , bP = bi[0x0]
              , bQ = bi[0x3]
              , bR = bi[0x6]
              , bS = bi[0x1]
              , bT = bi[0x4]
              , bU = bi[0x7]
              , bV = bi[0x2]
              , bW = bi[0x5]
              , bX = bi[0x8];
            return bF[0x0] = bG * bP + bH * bS + bI * bV,
            bF[0x3] = bG * bQ + bH * bT + bI * bW,
            bF[0x6] = bG * bR + bH * bU + bI * bX,
            bF[0x1] = bJ * bP + bK * bS + bL * bV,
            bF[0x4] = bJ * bQ + bK * bT + bL * bW,
            bF[0x7] = bJ * bR + bK * bU + bL * bX,
            bF[0x2] = bM * bP + bN * bS + bO * bV,
            bF[0x5] = bM * bQ + bN * bT + bO * bW,
            bF[0x8] = bM * bR + bN * bU + bO * bX,
            this;
        },
        'multiplyScalar': function(bf) {
            var bg = this['elements'];
            return bg[0x0] *= bf,
            bg[0x3] *= bf,
            bg[0x6] *= bf,
            bg[0x1] *= bf,
            bg[0x4] *= bf,
            bg[0x7] *= bf,
            bg[0x2] *= bf,
            bg[0x5] *= bf,
            bg[0x8] *= bf,
            this;
        },
        'determinant': function() {
            var bf = this['elements']
              , bg = bf[0x0]
              , bh = bf[0x1]
              , bi = bf[0x2]
              , bF = bf[0x3]
              , bG = bf[0x4]
              , bH = bf[0x5]
              , bI = bf[0x6]
              , bJ = bf[0x7]
              , bK = bf[0x8];
            return bg * bG * bK - bg * bH * bJ - bh * bF * bK + bh * bH * bI + bi * bF * bJ - bi * bG * bI;
        },
        'getInverse': function(bf, bg) {
            bf && bf['isMatrix4'] && console['error']('THREE.Matrix3:\x20.getInverse()\x20no\x20longer\x20takes\x20a\x20Matrix4\x20argument.');
            var bh = bf['elements']
              , bi = this['elements']
              , bF = bh[0x0]
              , bG = bh[0x1]
              , bH = bh[0x2]
              , bI = bh[0x3]
              , bJ = bh[0x4]
              , bK = bh[0x5]
              , bL = bh[0x6]
              , bM = bh[0x7]
              , bN = bh[0x8]
              , bO = bN * bJ - bK * bM
              , bP = bK * bL - bN * bI
              , bQ = bM * bI - bJ * bL
              , bR = bF * bO + bG * bP + bH * bQ;
            if (0x0 === bR) {
                var bS = 'THREE.Matrix3:\x20.getInverse()\x20can\x27t\x20invert\x20matrix,\x20determinant\x20is\x200';
                if (!0x0 === bg)
                    throw new Error(bS);
                return console['warn'](bS),
                this['identity']();
            }
            var bT = 0x1 / bR;
            return bi[0x0] = bO * bT,
            bi[0x1] = (bH * bM - bN * bG) * bT,
            bi[0x2] = (bK * bG - bH * bJ) * bT,
            bi[0x3] = bP * bT,
            bi[0x4] = (bN * bF - bH * bL) * bT,
            bi[0x5] = (bH * bI - bK * bF) * bT,
            bi[0x6] = bQ * bT,
            bi[0x7] = (bG * bL - bM * bF) * bT,
            bi[0x8] = (bJ * bF - bG * bI) * bT,
            this;
        },
        'transpose': function() {
            var bf, bg = this['elements'];
            return bf = bg[0x1],
            bg[0x1] = bg[0x3],
            bg[0x3] = bf,
            bf = bg[0x2],
            bg[0x2] = bg[0x6],
            bg[0x6] = bf,
            bf = bg[0x5],
            bg[0x5] = bg[0x7],
            bg[0x7] = bf,
            this;
        },
        'getNormalMatrix': function(bf) {
            return this['setFromMatrix4'](bf)['getInverse'](this)['transpose']();
        },
        'transposeIntoArray': function(bf) {
            var bg = this['elements'];
            return bf[0x0] = bg[0x0],
            bf[0x1] = bg[0x3],
            bf[0x2] = bg[0x6],
            bf[0x3] = bg[0x1],
            bf[0x4] = bg[0x4],
            bf[0x5] = bg[0x7],
            bf[0x6] = bg[0x2],
            bf[0x7] = bg[0x5],
            bf[0x8] = bg[0x8],
            this;
        },
        'setUvTransform': function(bf, bg, bh, bi, bF, bG, bH) {
            var bI = Math['cos'](bF)
              , bJ = Math['sin'](bF);
            this['set'](bh * bI, bh * bJ, -bh * (bI * bG + bJ * bH) + bG + bf, -bi * bJ, bi * bI, -bi * (-bJ * bG + bI * bH) + bH + bg, 0x0, 0x0, 0x1);
        },
        'scale': function(bf, bg) {
            var bh = this['elements'];
            return bh[0x0] *= bf,
            bh[0x3] *= bf,
            bh[0x6] *= bf,
            bh[0x1] *= bg,
            bh[0x4] *= bg,
            bh[0x7] *= bg,
            this;
        },
        'rotate': function(bf) {
            var bg = Math['cos'](bf)
              , bh = Math['sin'](bf)
              , bi = this['elements']
              , bF = bi[0x0]
              , bG = bi[0x3]
              , bH = bi[0x6]
              , bI = bi[0x1]
              , bJ = bi[0x4]
              , bK = bi[0x7];
            return bi[0x0] = bg * bF + bh * bI,
            bi[0x3] = bg * bG + bh * bJ,
            bi[0x6] = bg * bH + bh * bK,
            bi[0x1] = -bh * bF + bg * bI,
            bi[0x4] = -bh * bG + bg * bJ,
            bi[0x7] = -bh * bH + bg * bK,
            this;
        },
        'translate': function(bf, bg) {
            var bh = this['elements'];
            return bh[0x0] += bf * bh[0x2],
            bh[0x3] += bf * bh[0x5],
            bh[0x6] += bf * bh[0x8],
            bh[0x1] += bg * bh[0x2],
            bh[0x4] += bg * bh[0x5],
            bh[0x7] += bg * bh[0x8],
            this;
        },
        'equals': function(bf) {
            for (var bg = this['elements'], bh = bf['elements'], bi = 0x0; bi < 0x9; bi++)
                if (bg[bi] !== bh[bi])
                    return !0x1;
            return !0x0;
        },
        'fromArray': function(bf, bg) {
            void 0x0 === bg && (bg = 0x0);
            for (var bh = 0x0; bh < 0x9; bh++)
                this['elements'][bh] = bf[bh + bg];
            return this;
        },
        'toArray': function(bf, bg) {
            void 0x0 === bf && (bf = []),
            void 0x0 === bg && (bg = 0x0);
            var bh = this['elements'];
            return bf[bg] = bh[0x0],
            bf[bg + 0x1] = bh[0x1],
            bf[bg + 0x2] = bh[0x2],
            bf[bg + 0x3] = bh[0x3],
            bf[bg + 0x4] = bh[0x4],
            bf[bg + 0x5] = bh[0x5],
            bf[bg + 0x6] = bh[0x6],
            bf[bg + 0x7] = bh[0x7],
            bf[bg + 0x8] = bh[0x8],
            bf;
        }
    });
    var lD, lE, lF, lG, lH, lI, lJ, lK, lL, lM, lN, lO, lP, lQ, lR = {
        'getDataURL': function(bf) {
            var bg;
            if ('undefined' == typeof HTMLCanvasElement)
                return bf['src'];
            if (bf instanceof HTMLCanvasElement)
                bg = bf;
            else {
                void 0x0 === bH && (bH = document['createElementNS']('http://www.w3.org/1999/xhtml', 'canvas')),
                bH['width'] = bf['width'],
                bH['height'] = bf['height'];
                var bh = bH['getContext']('2d');
                bf instanceof ImageData ? bh['putImageData'](bf, 0x0, 0x0) : bh['drawImage'](bf, 0x0, 0x0, bf['width'], bf['height']),
                bg = bH;
            }
            return bg['width'] > 0x800 || bg['height'] > 0x800 ? bg['toDataURL']('image/jpeg', 0.6) : bg['toDataURL']('image/png');
        }
    }, lS = 0x0;
    function lW(bf, bg, bh, bi, bF, bG, bH, bI, bJ, bK) {
        Object['defineProperty'](this, 'id', {
            'value': lS++
        }),
        this['uuid'] = e2['generateUUID'](),
        this['name'] = '',
        this['image'] = void 0x0 !== bf ? bf : lW['DEFAULT_IMAGE'],
        this['mipmaps'] = [],
        this['mapping'] = void 0x0 !== bg ? bg : lW['DEFAULT_MAPPING'],
        this['wrapS'] = void 0x0 !== bh ? bh : cN,
        this['wrapT'] = void 0x0 !== bi ? bi : cN,
        this['magFilter'] = void 0x0 !== bF ? bF : cS,
        this['minFilter'] = void 0x0 !== bG ? bG : cU,
        this['anisotropy'] = void 0x0 !== bJ ? bJ : 0x1,
        this['format'] = void 0x0 !== bH ? bH : d9,
        this['type'] = void 0x0 !== bI ? bI : cV,
        this['offset'] = new eC(0x0,0x0),
        this['repeat'] = new eC(0x1,0x1),
        this['center'] = new eC(0x0,0x0),
        this['rotation'] = 0x0,
        this['matrixAutoUpdate'] = !0x0,
        this['matrix'] = new eO(),
        this['generateMipmaps'] = !0x0,
        this['premultiplyAlpha'] = !0x1,
        this['flipY'] = !0x0,
        this['unpackAlignment'] = 0x4,
        this['encoding'] = void 0x0 !== bK ? bK : dQ,
        this['version'] = 0x0,
        this['onUpdate'] = null;
    }
    function m7(bf, bg, bh, bi) {
        this['x'] = bf || 0x0,
        this['y'] = bg || 0x0,
        this['z'] = bh || 0x0,
        this['w'] = void 0x0 !== bi ? bi : 0x1;
    }
    function mc(bf, bg, bh) {
        this['width'] = bf,
        this['height'] = bg,
        this['scissor'] = new m7(0x0,0x0,bf,bg),
        this['scissorTest'] = !0x1,
        this['viewport'] = new m7(0x0,0x0,bf,bg),
        bh = bh || {},
        this['texture'] = new lW(void 0x0,void 0x0,bh['wrapS'],bh['wrapT'],bh['magFilter'],bh['minFilter'],bh['format'],bh['type'],bh['anisotropy'],bh['encoding']),
        this['texture']['generateMipmaps'] = void 0x0 !== bh['generateMipmaps'] && bh['generateMipmaps'],
        this['texture']['minFilter'] = void 0x0 !== bh['minFilter'] ? bh['minFilter'] : cS,
        this['depthBuffer'] = void 0x0 === bh['depthBuffer'] || bh['depthBuffer'],
        this['stencilBuffer'] = void 0x0 === bh['stencilBuffer'] || bh['stencilBuffer'],
        this['depthTexture'] = void 0x0 !== bh['depthTexture'] ? bh['depthTexture'] : null;
    }
    function mg(bf, bg, bh) {
        mc['call'](this, bf, bg, bh),
        this['samples'] = 0x4;
    }
    function mk(bf, bg, bh) {
        mc['call'](this, bf, bg, bh);
    }
    function mo(bf, bg, bh, bi, bF, bG, bH, bI, bJ, bK, bL, bM) {
        lW['call'](this, null, bG, bH, bI, bJ, bK, bi, bF, bL, bM),
        this['image'] = {
            'data': bf,
            'width': bg,
            'height': bh
        },
        this['magFilter'] = void 0x0 !== bJ ? bJ : cP,
        this['minFilter'] = void 0x0 !== bK ? bK : cP,
        this['generateMipmaps'] = !0x1,
        this['flipY'] = !0x1,
        this['unpackAlignment'] = 0x1;
    }
    function mB(bf, bg) {
        this['min'] = void 0x0 !== bf ? bf : new eK(0x1 / 0x0,0x1 / 0x0,0x1 / 0x0),
        this['max'] = void 0x0 !== bg ? bg : new eK(-0x1 / 0x0,-0x1 / 0x0,-0x1 / 0x0);
    }
    function mE(bf, bg) {
        this['center'] = void 0x0 !== bf ? bf : new eK(),
        this['radius'] = void 0x0 !== bg ? bg : 0x0;
    }
    function mH(bf, bg) {
        this['normal'] = void 0x0 !== bf ? bf : new eK(0x1,0x0,0x0),
        this['constant'] = void 0x0 !== bg ? bg : 0x0;
    }
    function mK(bf, bg, bh, bi, bF, bG) {
        this['planes'] = [void 0x0 !== bf ? bf : new mH(), void 0x0 !== bg ? bg : new mH(), void 0x0 !== bh ? bh : new mH(), void 0x0 !== bi ? bi : new mH(), void 0x0 !== bF ? bF : new mH(), void 0x0 !== bG ? bG : new mH()];
    }
    function mR() {
        this['elements'] = [0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1],
        arguments['length'] > 0x0 && console['error']('THREE.Matrix4:\x20the\x20constructor\x20no\x20longer\x20reads\x20arguments.\x20use\x20.set()\x20instead.');
    }
    lW['DEFAULT_IMAGE'] = void 0x0,
    lW['DEFAULT_MAPPING'] = cE,
    lW['prototype'] = Object['assign'](Object['create'](bi['prototype']), {
        'constructor': lW,
        'isTexture': !0x0,
        'updateMatrix': function() {
            this['matrix']['setUvTransform'](this['offset']['x'], this['offset']['y'], this['repeat']['x'], this['repeat']['y'], this['rotation'], this['center']['x'], this['center']['y']);
        },
        'clone': function() {
            return new this['constructor']()['copy'](this);
        },
        'copy': function(bf) {
            return this['name'] = bf['name'],
            this['image'] = bf['image'],
            this['mipmaps'] = bf['mipmaps']['slice'](0x0),
            this['mapping'] = bf['mapping'],
            this['wrapS'] = bf['wrapS'],
            this['wrapT'] = bf['wrapT'],
            this['magFilter'] = bf['magFilter'],
            this['minFilter'] = bf['minFilter'],
            this['anisotropy'] = bf['anisotropy'],
            this['format'] = bf['format'],
            this['type'] = bf['type'],
            this['offset']['copy'](bf['offset']),
            this['repeat']['copy'](bf['repeat']),
            this['center']['copy'](bf['center']),
            this['rotation'] = bf['rotation'],
            this['matrixAutoUpdate'] = bf['matrixAutoUpdate'],
            this['matrix']['copy'](bf['matrix']),
            this['generateMipmaps'] = bf['generateMipmaps'],
            this['premultiplyAlpha'] = bf['premultiplyAlpha'],
            this['flipY'] = bf['flipY'],
            this['unpackAlignment'] = bf['unpackAlignment'],
            this['encoding'] = bf['encoding'],
            this;
        },
        'toJSON': function(bf) {
            var bg = void 0x0 === bf || 'string' == typeof bf;
            if (!bg && void 0x0 !== bf['textures'][this['uuid']])
                return bf['textures'][this['uuid']];
            var bh = {
                'metadata': {
                    'version': 4.5,
                    'type': 'Texture',
                    'generator': 'Texture.toJSON'
                },
                'uuid': this['uuid'],
                'name': this['name'],
                'mapping': this['mapping'],
                'repeat': [this['repeat']['x'], this['repeat']['y']],
                'offset': [this['offset']['x'], this['offset']['y']],
                'center': [this['center']['x'], this['center']['y']],
                'rotation': this['rotation'],
                'wrap': [this['wrapS'], this['wrapT']],
                'format': this['format'],
                'type': this['type'],
                'encoding': this['encoding'],
                'minFilter': this['minFilter'],
                'magFilter': this['magFilter'],
                'anisotropy': this['anisotropy'],
                'flipY': this['flipY'],
                'premultiplyAlpha': this['premultiplyAlpha'],
                'unpackAlignment': this['unpackAlignment']
            };
            if (void 0x0 !== this['image']) {
                var bi = this['image'];
                if (void 0x0 === bi['uuid'] && (bi['uuid'] = e2['generateUUID']()),
                !bg && void 0x0 === bf['images'][bi['uuid']]) {
                    var bF;
                    if (Array['isArray'](bi)) {
                        bF = [];
                        for (var bG = 0x0, bH = bi['length']; bG < bH; bG++)
                            bF['push'](lR['getDataURL'](bi[bG]));
                    } else
                        bF = lR['getDataURL'](bi);
                    bf['images'][bi['uuid']] = {
                        'uuid': bi['uuid'],
                        'url': bF
                    };
                }
                bh['image'] = bi['uuid'];
            }
            return bg || (bf['textures'][this['uuid']] = bh),
            bh;
        },
        'dispose': function() {
            this['dispatchEvent']({
                'type': 'dispose'
            });
        },
        'transformUv': function(bf) {
            if (this['mapping'] !== cE)
                return bf;
            if (bf['applyMatrix3'](this['matrix']),
            bf['x'] < 0x0 || bf['x'] > 0x1)
                switch (this['wrapS']) {
                case cM:
                    bf['x'] = bf['x'] - Math['floor'](bf['x']);
                    break;
                case cN:
                    bf['x'] = bf['x'] < 0x0 ? 0x0 : 0x1;
                    break;
                case cO:
                    0x1 === Math['abs'](Math['floor'](bf['x']) % 0x2) ? bf['x'] = Math['ceil'](bf['x']) - bf['x'] : bf['x'] = bf['x'] - Math['floor'](bf['x']);
                }
            if (bf['y'] < 0x0 || bf['y'] > 0x1)
                switch (this['wrapT']) {
                case cM:
                    bf['y'] = bf['y'] - Math['floor'](bf['y']);
                    break;
                case cN:
                    bf['y'] = bf['y'] < 0x0 ? 0x0 : 0x1;
                    break;
                case cO:
                    0x1 === Math['abs'](Math['floor'](bf['y']) % 0x2) ? bf['y'] = Math['ceil'](bf['y']) - bf['y'] : bf['y'] = bf['y'] - Math['floor'](bf['y']);
                }
            return this['flipY'] && (bf['y'] = 0x1 - bf['y']),
            bf;
        }
    }),
    Object['defineProperty'](lW['prototype'], 'needsUpdate', {
        'set': function(bf) {
            !0x0 === bf && this['version']++;
        }
    }),
    Object['assign'](m7['prototype'], {
        'isVector4': !0x0,
        'set': function(bf, bg, bh, bi) {
            return this['x'] = bf,
            this['y'] = bg,
            this['z'] = bh,
            this['w'] = bi,
            this;
        },
        'setScalar': function(bf) {
            return this['x'] = bf,
            this['y'] = bf,
            this['z'] = bf,
            this['w'] = bf,
            this;
        },
        'setX': function(bf) {
            return this['x'] = bf,
            this;
        },
        'setY': function(bf) {
            return this['y'] = bf,
            this;
        },
        'setZ': function(bf) {
            return this['z'] = bf,
            this;
        },
        'setW': function(bf) {
            return this['w'] = bf,
            this;
        },
        'setComponent': function(bf, bg) {
            switch (bf) {
            case 0x0:
                this['x'] = bg;
                break;
            case 0x1:
                this['y'] = bg;
                break;
            case 0x2:
                this['z'] = bg;
                break;
            case 0x3:
                this['w'] = bg;
                break;
            default:
                throw new Error('index\x20is\x20out\x20of\x20range:\x20' + bf);
            }
            return this;
        },
        'getComponent': function(bf) {
            switch (bf) {
            case 0x0:
                return this['x'];
            case 0x1:
                return this['y'];
            case 0x2:
                return this['z'];
            case 0x3:
                return this['w'];
            default:
                throw new Error('index\x20is\x20out\x20of\x20range:\x20' + bf);
            }
        },
        'clone': function() {
            return new this['constructor'](this['x'],this['y'],this['z'],this['w']);
        },
        'copy': function(bf) {
            return this['x'] = bf['x'],
            this['y'] = bf['y'],
            this['z'] = bf['z'],
            this['w'] = void 0x0 !== bf['w'] ? bf['w'] : 0x1,
            this;
        },
        'add': function(bf, bg) {
            return void 0x0 !== bg ? (console['warn']('THREE.Vector4:\x20.add()\x20now\x20only\x20accepts\x20one\x20argument.\x20Use\x20.addVectors(\x20a,\x20b\x20)\x20instead.'),
            this['addVectors'](bf, bg)) : (this['x'] += bf['x'],
            this['y'] += bf['y'],
            this['z'] += bf['z'],
            this['w'] += bf['w'],
            this);
        },
        'addScalar': function(bf) {
            return this['x'] += bf,
            this['y'] += bf,
            this['z'] += bf,
            this['w'] += bf,
            this;
        },
        'addVectors': function(bf, bg) {
            return this['x'] = bf['x'] + bg['x'],
            this['y'] = bf['y'] + bg['y'],
            this['z'] = bf['z'] + bg['z'],
            this['w'] = bf['w'] + bg['w'],
            this;
        },
        'addScaledVector': function(bf, bg) {
            return this['x'] += bf['x'] * bg,
            this['y'] += bf['y'] * bg,
            this['z'] += bf['z'] * bg,
            this['w'] += bf['w'] * bg,
            this;
        },
        'sub': function(bf, bg) {
            return void 0x0 !== bg ? (console['warn']('THREE.Vector4:\x20.sub()\x20now\x20only\x20accepts\x20one\x20argument.\x20Use\x20.subVectors(\x20a,\x20b\x20)\x20instead.'),
            this['subVectors'](bf, bg)) : (this['x'] -= bf['x'],
            this['y'] -= bf['y'],
            this['z'] -= bf['z'],
            this['w'] -= bf['w'],
            this);
        },
        'subScalar': function(bf) {
            return this['x'] -= bf,
            this['y'] -= bf,
            this['z'] -= bf,
            this['w'] -= bf,
            this;
        },
        'subVectors': function(bf, bg) {
            return this['x'] = bf['x'] - bg['x'],
            this['y'] = bf['y'] - bg['y'],
            this['z'] = bf['z'] - bg['z'],
            this['w'] = bf['w'] - bg['w'],
            this;
        },
        'multiplyScalar': function(bf) {
            return this['x'] *= bf,
            this['y'] *= bf,
            this['z'] *= bf,
            this['w'] *= bf,
            this;
        },
        'applyMatrix4': function(bf) {
            var bg = this['x']
              , bh = this['y']
              , bi = this['z']
              , bF = this['w']
              , bG = bf['elements'];
            return this['x'] = bG[0x0] * bg + bG[0x4] * bh + bG[0x8] * bi + bG[0xc] * bF,
            this['y'] = bG[0x1] * bg + bG[0x5] * bh + bG[0x9] * bi + bG[0xd] * bF,
            this['z'] = bG[0x2] * bg + bG[0x6] * bh + bG[0xa] * bi + bG[0xe] * bF,
            this['w'] = bG[0x3] * bg + bG[0x7] * bh + bG[0xb] * bi + bG[0xf] * bF,
            this;
        },
        'divideScalar': function(bf) {
            return this['multiplyScalar'](0x1 / bf);
        },
        'setAxisAngleFromQuaternion': function(bf) {
            this['w'] = 0x2 * Math['acos'](bf['w']);
            var bg = Math['sqrt'](0x1 - bf['w'] * bf['w']);
            return bg < 0.0001 ? (this['x'] = 0x1,
            this['y'] = 0x0,
            this['z'] = 0x0) : (this['x'] = bf['x'] / bg,
            this['y'] = bf['y'] / bg,
            this['z'] = bf['z'] / bg),
            this;
        },
        'setAxisAngleFromRotationMatrix': function(bf) {
            var bg, bh, bi, bF, bG = bf['elements'], bH = bG[0x0], bI = bG[0x4], bJ = bG[0x8], bK = bG[0x1], bL = bG[0x5], bM = bG[0x9], bN = bG[0x2], bO = bG[0x6], bP = bG[0xa];
            if (Math['abs'](bI - bK) < 0.01 && Math['abs'](bJ - bN) < 0.01 && Math['abs'](bM - bO) < 0.01) {
                if (Math['abs'](bI + bK) < 0.1 && Math['abs'](bJ + bN) < 0.1 && Math['abs'](bM + bO) < 0.1 && Math['abs'](bH + bL + bP - 0x3) < 0.1)
                    return this['set'](0x1, 0x0, 0x0, 0x0),
                    this;
                bg = Math['PI'];
                var bQ = (bH + 0x1) / 0x2
                  , bR = (bL + 0x1) / 0x2
                  , bS = (bP + 0x1) / 0x2
                  , bT = (bI + bK) / 0x4
                  , bU = (bJ + bN) / 0x4
                  , bV = (bM + bO) / 0x4;
                return bQ > bR && bQ > bS ? bQ < 0.01 ? (bh = 0x0,
                bi = 0.707106781,
                bF = 0.707106781) : (bi = bT / (bh = Math['sqrt'](bQ)),
                bF = bU / bh) : bR > bS ? bR < 0.01 ? (bh = 0.707106781,
                bi = 0x0,
                bF = 0.707106781) : (bh = bT / (bi = Math['sqrt'](bR)),
                bF = bV / bi) : bS < 0.01 ? (bh = 0.707106781,
                bi = 0.707106781,
                bF = 0x0) : (bh = bU / (bF = Math['sqrt'](bS)),
                bi = bV / bF),
                this['set'](bh, bi, bF, bg),
                this;
            }
            var bW = Math['sqrt']((bO - bM) * (bO - bM) + (bJ - bN) * (bJ - bN) + (bK - bI) * (bK - bI));
            return Math['abs'](bW) < 0.001 && (bW = 0x1),
            this['x'] = (bO - bM) / bW,
            this['y'] = (bJ - bN) / bW,
            this['z'] = (bK - bI) / bW,
            this['w'] = Math['acos']((bH + bL + bP - 0x1) / 0x2),
            this;
        },
        'min': function(bf) {
            return this['x'] = Math['min'](this['x'], bf['x']),
            this['y'] = Math['min'](this['y'], bf['y']),
            this['z'] = Math['min'](this['z'], bf['z']),
            this['w'] = Math['min'](this['w'], bf['w']),
            this;
        },
        'max': function(bf) {
            return this['x'] = Math['max'](this['x'], bf['x']),
            this['y'] = Math['max'](this['y'], bf['y']),
            this['z'] = Math['max'](this['z'], bf['z']),
            this['w'] = Math['max'](this['w'], bf['w']),
            this;
        },
        'clamp': function(bf, bg) {
            return this['x'] = Math['max'](bf['x'], Math['min'](bg['x'], this['x'])),
            this['y'] = Math['max'](bf['y'], Math['min'](bg['y'], this['y'])),
            this['z'] = Math['max'](bf['z'], Math['min'](bg['z'], this['z'])),
            this['w'] = Math['max'](bf['w'], Math['min'](bg['w'], this['w'])),
            this;
        },
        'clampScalar': function(bf, bg) {
            return void 0x0 === lD && (lD = new m7(),
            lE = new m7()),
            lD['set'](bf, bf, bf, bf),
            lE['set'](bg, bg, bg, bg),
            this['clamp'](lD, lE);
        },
        'clampLength': function(bf, bg) {
            var bh = this['length']();
            return this['divideScalar'](bh || 0x1)['multiplyScalar'](Math['max'](bf, Math['min'](bg, bh)));
        },
        'floor': function() {
            return this['x'] = Math['floor'](this['x']),
            this['y'] = Math['floor'](this['y']),
            this['z'] = Math['floor'](this['z']),
            this['w'] = Math['floor'](this['w']),
            this;
        },
        'ceil': function() {
            return this['x'] = Math['ceil'](this['x']),
            this['y'] = Math['ceil'](this['y']),
            this['z'] = Math['ceil'](this['z']),
            this['w'] = Math['ceil'](this['w']),
            this;
        },
        'round': function() {
            return this['x'] = Math['round'](this['x']),
            this['y'] = Math['round'](this['y']),
            this['z'] = Math['round'](this['z']),
            this['w'] = Math['round'](this['w']),
            this;
        },
        'roundToZero': function() {
            return this['x'] = this['x'] < 0x0 ? Math['ceil'](this['x']) : Math['floor'](this['x']),
            this['y'] = this['y'] < 0x0 ? Math['ceil'](this['y']) : Math['floor'](this['y']),
            this['z'] = this['z'] < 0x0 ? Math['ceil'](this['z']) : Math['floor'](this['z']),
            this['w'] = this['w'] < 0x0 ? Math['ceil'](this['w']) : Math['floor'](this['w']),
            this;
        },
        'negate': function() {
            return this['x'] = -this['x'],
            this['y'] = -this['y'],
            this['z'] = -this['z'],
            this['w'] = -this['w'],
            this;
        },
        'dot': function(bf) {
            return this['x'] * bf['x'] + this['y'] * bf['y'] + this['z'] * bf['z'] + this['w'] * bf['w'];
        },
        'lengthSq': function() {
            return this['x'] * this['x'] + this['y'] * this['y'] + this['z'] * this['z'] + this['w'] * this['w'];
        },
        'length': function() {
            return Math['sqrt'](this['x'] * this['x'] + this['y'] * this['y'] + this['z'] * this['z'] + this['w'] * this['w']);
        },
        'manhattanLength': function() {
            return Math['abs'](this['x']) + Math['abs'](this['y']) + Math['abs'](this['z']) + Math['abs'](this['w']);
        },
        'normalize': function() {
            return this['divideScalar'](this['length']() || 0x1);
        },
        'setLength': function(bf) {
            return this['normalize']()['multiplyScalar'](bf);
        },
        'lerp': function(bf, bg) {
            return this['x'] += (bf['x'] - this['x']) * bg,
            this['y'] += (bf['y'] - this['y']) * bg,
            this['z'] += (bf['z'] - this['z']) * bg,
            this['w'] += (bf['w'] - this['w']) * bg,
            this;
        },
        'lerpVectors': function(bf, bg, bh) {
            return this['subVectors'](bg, bf)['multiplyScalar'](bh)['add'](bf);
        },
        'equals': function(bf) {
            return bf['x'] === this['x'] && bf['y'] === this['y'] && bf['z'] === this['z'] && bf['w'] === this['w'];
        },
        'fromArray': function(bf, bg) {
            return void 0x0 === bg && (bg = 0x0),
            this['x'] = bf[bg],
            this['y'] = bf[bg + 0x1],
            this['z'] = bf[bg + 0x2],
            this['w'] = bf[bg + 0x3],
            this;
        },
        'toArray': function(bf, bg) {
            return void 0x0 === bf && (bf = []),
            void 0x0 === bg && (bg = 0x0),
            bf[bg] = this['x'],
            bf[bg + 0x1] = this['y'],
            bf[bg + 0x2] = this['z'],
            bf[bg + 0x3] = this['w'],
            bf;
        },
        'fromBufferAttribute': function(bf, bg, bh) {
            return void 0x0 !== bh && console['warn']('THREE.Vector4:\x20offset\x20has\x20been\x20removed\x20from\x20.fromBufferAttribute().'),
            this['x'] = bf['getX'](bg),
            this['y'] = bf['getY'](bg),
            this['z'] = bf['getZ'](bg),
            this['w'] = bf['getW'](bg),
            this;
        }
    }),
    mc['prototype'] = Object['assign'](Object['create'](bi['prototype']), {
        'constructor': mc,
        'isWebGLRenderTarget': !0x0,
        'setSize': function(bf, bg) {
            this['width'] === bf && this['height'] === bg || (this['width'] = bf,
            this['height'] = bg,
            this['dispose']()),
            this['viewport']['set'](0x0, 0x0, bf, bg),
            this['scissor']['set'](0x0, 0x0, bf, bg);
        },
        'clone': function() {
            return new this['constructor']()['copy'](this);
        },
        'copy': function(bf) {
            return this['width'] = bf['width'],
            this['height'] = bf['height'],
            this['viewport']['copy'](bf['viewport']),
            this['texture'] = bf['texture']['clone'](),
            this['depthBuffer'] = bf['depthBuffer'],
            this['stencilBuffer'] = bf['stencilBuffer'],
            this['depthTexture'] = bf['depthTexture'],
            this;
        },
        'dispose': function() {
            this['dispatchEvent']({
                'type': 'dispose'
            });
        }
    }),
    mg['prototype'] = Object['assign'](Object['create'](mc['prototype']), {
        'constructor': mg,
        'isWebGLMultisampleRenderTarget': !0x0,
        'copy': function(bf) {
            return mc['prototype']['copy']['call'](this, bf),
            this['samples'] = bf['samples'],
            this;
        }
    }),
    mk['prototype'] = Object['create'](mc['prototype']),
    mk['prototype']['constructor'] = mk,
    mk['prototype']['isWebGLRenderTargetCube'] = !0x0,
    mo['prototype'] = Object['create'](lW['prototype']),
    mo['prototype']['constructor'] = mo,
    mo['prototype']['isDataTexture'] = !0x0,
    Object['assign'](mB['prototype'], {
        'isBox3': !0x0,
        'set': function(bf, bg) {
            return this['min']['copy'](bf),
            this['max']['copy'](bg),
            this;
        },
        'setFromArray': function(bf) {
            for (var bg = 0x1 / 0x0, bh = 0x1 / 0x0, bi = 0x1 / 0x0, bF = -0x1 / 0x0, bG = -0x1 / 0x0, bH = -0x1 / 0x0, bI = 0x0, bJ = bf['length']; bI < bJ; bI += 0x3) {
                var bK = bf[bI]
                  , bL = bf[bI + 0x1]
                  , bM = bf[bI + 0x2];
                bK < bg && (bg = bK),
                bL < bh && (bh = bL),
                bM < bi && (bi = bM),
                bK > bF && (bF = bK),
                bL > bG && (bG = bL),
                bM > bH && (bH = bM);
            }
            return this['min']['set'](bg, bh, bi),
            this['max']['set'](bF, bG, bH),
            this;
        },
        'setFromBufferAttribute': function(bf) {
            for (var bg = 0x1 / 0x0, bh = 0x1 / 0x0, bi = 0x1 / 0x0, bF = -0x1 / 0x0, bG = -0x1 / 0x0, bH = -0x1 / 0x0, bI = 0x0, bJ = bf['count']; bI < bJ; bI++) {
                var bK = bf['getX'](bI)
                  , bL = bf['getY'](bI)
                  , bM = bf['getZ'](bI);
                bK < bg && (bg = bK),
                bL < bh && (bh = bL),
                bM < bi && (bi = bM),
                bK > bF && (bF = bK),
                bL > bG && (bG = bL),
                bM > bH && (bH = bM);
            }
            return this['min']['set'](bg, bh, bi),
            this['max']['set'](bF, bG, bH),
            this;
        },
        'setFromPoints': function(bf) {
            this['makeEmpty']();
            for (var bg = 0x0, bh = bf['length']; bg < bh; bg++)
                this['expandByPoint'](bf[bg]);
            return this;
        },
        'setFromCenterAndSize': function() {
            var bf = new eK();
            return function(bg, bh) {
                var bi = bf['copy'](bh)['multiplyScalar'](0.5);
                return this['min']['copy'](bg)['sub'](bi),
                this['max']['copy'](bg)['add'](bi),
                this;
            }
            ;
        }(),
        'setFromObject': function(bf) {
            return this['makeEmpty'](),
            this['expandByObject'](bf);
        },
        'clone': function() {
            return new this['constructor']()['copy'](this);
        },
        'copy': function(bf) {
            return this['min']['copy'](bf['min']),
            this['max']['copy'](bf['max']),
            this;
        },
        'makeEmpty': function() {
            return this['min']['x'] = this['min']['y'] = this['min']['z'] = 0x1 / 0x0,
            this['max']['x'] = this['max']['y'] = this['max']['z'] = -0x1 / 0x0,
            this;
        },
        'isEmpty': function() {
            return this['max']['x'] < this['min']['x'] || this['max']['y'] < this['min']['y'] || this['max']['z'] < this['min']['z'];
        },
        'getCenter': function(bf) {
            return void 0x0 === bf && (console['warn']('THREE.Box3:\x20.getCenter()\x20target\x20is\x20now\x20required'),
            bf = new eK()),
            this['isEmpty']() ? bf['set'](0x0, 0x0, 0x0) : bf['addVectors'](this['min'], this['max'])['multiplyScalar'](0.5);
        },
        'getSize': function(bf) {
            return void 0x0 === bf && (console['warn']('THREE.Box3:\x20.getSize()\x20target\x20is\x20now\x20required'),
            bf = new eK()),
            this['isEmpty']() ? bf['set'](0x0, 0x0, 0x0) : bf['subVectors'](this['max'], this['min']);
        },
        'expandByPoint': function(bf) {
            return this['min']['min'](bf),
            this['max']['max'](bf),
            this;
        },
        'expandByVector': function(bf) {
            return this['min']['sub'](bf),
            this['max']['add'](bf),
            this;
        },
        'expandByScalar': function(bf) {
            return this['min']['addScalar'](-bf),
            this['max']['addScalar'](bf),
            this;
        },
        'expandByObject': function() {
            var bf, bg, bh, bi = new eK();
            function bF(bF) {
                var bG = bF['geometry'];
                if (void 0x0 !== bG)
                    if (bG['isGeometry']) {
                        var bH = bG['vertices'];
                        for (bg = 0x0,
                        bh = bH['length']; bg < bh; bg++)
                            bi['copy'](bH[bg]),
                            bi['applyMatrix4'](bF['matrixWorld']),
                            bf['expandByPoint'](bi);
                    } else if (bG['isBufferGeometry']) {
                        var bI = bG['attributes']['position'];
                        if (void 0x0 !== bI)
                            for (bg = 0x0,
                            bh = bI['count']; bg < bh; bg++)
                                bi['fromBufferAttribute'](bI, bg)['applyMatrix4'](bF['matrixWorld']),
                                bf['expandByPoint'](bi);
                    }
            }
            return function(bg) {
                return bf = this,
                bg['updateMatrixWorld'](!0x0),
                bg['traverse'](bF),
                this;
            }
            ;
        }(),
        'containsPoint': function(bf) {
            return !(bf['x'] < this['min']['x'] || bf['x'] > this['max']['x'] || bf['y'] < this['min']['y'] || bf['y'] > this['max']['y'] || bf['z'] < this['min']['z'] || bf['z'] > this['max']['z']);
        },
        'containsBox': function(bf) {
            return this['min']['x'] <= bf['min']['x'] && bf['max']['x'] <= this['max']['x'] && this['min']['y'] <= bf['min']['y'] && bf['max']['y'] <= this['max']['y'] && this['min']['z'] <= bf['min']['z'] && bf['max']['z'] <= this['max']['z'];
        },
        'getParameter': function(bf, bg) {
            return void 0x0 === bg && (console['warn']('THREE.Box3:\x20.getParameter()\x20target\x20is\x20now\x20required'),
            bg = new eK()),
            bg['set']((bf['x'] - this['min']['x']) / (this['max']['x'] - this['min']['x']), (bf['y'] - this['min']['y']) / (this['max']['y'] - this['min']['y']), (bf['z'] - this['min']['z']) / (this['max']['z'] - this['min']['z']));
        },
        'intersectsBox': function(bf) {
            return !(bf['max']['x'] < this['min']['x'] || bf['min']['x'] > this['max']['x'] || bf['max']['y'] < this['min']['y'] || bf['min']['y'] > this['max']['y'] || bf['max']['z'] < this['min']['z'] || bf['min']['z'] > this['max']['z']);
        },
        'intersectsSphere': (lG = new eK(),
        function(bf) {
            return this['clampPoint'](bf['center'], lG),
            lG['distanceToSquared'](bf['center']) <= bf['radius'] * bf['radius'];
        }
        ),
        'intersectsPlane': function(bf) {
            var bg, bh;
            return bf['normal']['x'] > 0x0 ? (bg = bf['normal']['x'] * this['min']['x'],
            bh = bf['normal']['x'] * this['max']['x']) : (bg = bf['normal']['x'] * this['max']['x'],
            bh = bf['normal']['x'] * this['min']['x']),
            bf['normal']['y'] > 0x0 ? (bg += bf['normal']['y'] * this['min']['y'],
            bh += bf['normal']['y'] * this['max']['y']) : (bg += bf['normal']['y'] * this['max']['y'],
            bh += bf['normal']['y'] * this['min']['y']),
            bf['normal']['z'] > 0x0 ? (bg += bf['normal']['z'] * this['min']['z'],
            bh += bf['normal']['z'] * this['max']['z']) : (bg += bf['normal']['z'] * this['max']['z'],
            bh += bf['normal']['z'] * this['min']['z']),
            bg <= -bf['constant'] && bh >= -bf['constant'];
        },
        'intersectsTriangle': function() {
            var bf = new eK()
              , bg = new eK()
              , bh = new eK()
              , bi = new eK()
              , bF = new eK()
              , bG = new eK()
              , bH = new eK()
              , bI = new eK()
              , bJ = new eK()
              , bK = new eK();
            function bL(bi) {
                var bF, bG;
                for (bF = 0x0,
                bG = bi['length'] - 0x3; bF <= bG; bF += 0x3) {
                    bH['fromArray'](bi, bF);
                    var bI = bJ['x'] * Math['abs'](bH['x']) + bJ['y'] * Math['abs'](bH['y']) + bJ['z'] * Math['abs'](bH['z'])
                      , bK = bf['dot'](bH)
                      , bL = bg['dot'](bH)
                      , bM = bh['dot'](bH);
                    if (Math['max'](-Math['max'](bK, bL, bM), Math['min'](bK, bL, bM)) > bI)
                        return !0x1;
                }
                return !0x0;
            }
            return function(bH) {
                if (this['isEmpty']())
                    return !0x1;
                this['getCenter'](bI),
                bJ['subVectors'](this['max'], bI),
                bf['subVectors'](bH['a'], bI),
                bg['subVectors'](bH['b'], bI),
                bh['subVectors'](bH['c'], bI),
                bi['subVectors'](bg, bf),
                bF['subVectors'](bh, bg),
                bG['subVectors'](bf, bh);
                var bM = [0x0, -bi['z'], bi['y'], 0x0, -bF['z'], bF['y'], 0x0, -bG['z'], bG['y'], bi['z'], 0x0, -bi['x'], bF['z'], 0x0, -bF['x'], bG['z'], 0x0, -bG['x'], -bi['y'], bi['x'], 0x0, -bF['y'], bF['x'], 0x0, -bG['y'], bG['x'], 0x0];
                return !!bL(bM) && (!!bL(bM = [0x1, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1]) && (bK['crossVectors'](bi, bF),
                bL(bM = [bK['x'], bK['y'], bK['z']])));
            }
            ;
        }(),
        'clampPoint': function(bf, bg) {
            return void 0x0 === bg && (console['warn']('THREE.Box3:\x20.clampPoint()\x20target\x20is\x20now\x20required'),
            bg = new eK()),
            bg['copy'](bf)['clamp'](this['min'], this['max']);
        },
        'distanceToPoint': function() {
            var bf = new eK();
            return function(bg) {
                return bf['copy'](bg)['clamp'](this['min'], this['max'])['sub'](bg)['length']();
            }
            ;
        }(),
        'getBoundingSphere': function() {
            var bf = new eK();
            return function(bg) {
                return void 0x0 === bg && console['error']('THREE.Box3:\x20.getBoundingSphere()\x20target\x20is\x20now\x20required'),
                this['getCenter'](bg['center']),
                bg['radius'] = 0.5 * this['getSize'](bf)['length'](),
                bg;
            }
            ;
        }(),
        'intersect': function(bf) {
            return this['min']['max'](bf['min']),
            this['max']['min'](bf['max']),
            this['isEmpty']() && this['makeEmpty'](),
            this;
        },
        'union': function(bf) {
            return this['min']['min'](bf['min']),
            this['max']['max'](bf['max']),
            this;
        },
        'applyMatrix4': (lF = [new eK(), new eK(), new eK(), new eK(), new eK(), new eK(), new eK(), new eK()],
        function(bf) {
            return this['isEmpty']() ? this : (lF[0x0]['set'](this['min']['x'], this['min']['y'], this['min']['z'])['applyMatrix4'](bf),
            lF[0x1]['set'](this['min']['x'], this['min']['y'], this['max']['z'])['applyMatrix4'](bf),
            lF[0x2]['set'](this['min']['x'], this['max']['y'], this['min']['z'])['applyMatrix4'](bf),
            lF[0x3]['set'](this['min']['x'], this['max']['y'], this['max']['z'])['applyMatrix4'](bf),
            lF[0x4]['set'](this['max']['x'], this['min']['y'], this['min']['z'])['applyMatrix4'](bf),
            lF[0x5]['set'](this['max']['x'], this['min']['y'], this['max']['z'])['applyMatrix4'](bf),
            lF[0x6]['set'](this['max']['x'], this['max']['y'], this['min']['z'])['applyMatrix4'](bf),
            lF[0x7]['set'](this['max']['x'], this['max']['y'], this['max']['z'])['applyMatrix4'](bf),
            this['setFromPoints'](lF),
            this);
        }
        ),
        'translate': function(bf) {
            return this['min']['add'](bf),
            this['max']['add'](bf),
            this;
        },
        'equals': function(bf) {
            return bf['min']['equals'](this['min']) && bf['max']['equals'](this['max']);
        }
    }),
    Object['assign'](mE['prototype'], {
        'set': function(bf, bg) {
            return this['center']['copy'](bf),
            this['radius'] = bg,
            this;
        },
        'setFromPoints': (lH = new mB(),
        function(bf, bg) {
            var bh = this['center'];
            void 0x0 !== bg ? bh['copy'](bg) : lH['setFromPoints'](bf)['getCenter'](bh);
            for (var bi = 0x0, bF = 0x0, bG = bf['length']; bF < bG; bF++)
                bi = Math['max'](bi, bh['distanceToSquared'](bf[bF]));
            return this['radius'] = Math['sqrt'](bi),
            this;
        }
        ),
        'clone': function() {
            return new this['constructor']()['copy'](this);
        },
        'copy': function(bf) {
            return this['center']['copy'](bf['center']),
            this['radius'] = bf['radius'],
            this;
        },
        'empty': function() {
            return this['radius'] <= 0x0;
        },
        'containsPoint': function(bf) {
            return bf['distanceToSquared'](this['center']) <= this['radius'] * this['radius'];
        },
        'distanceToPoint': function(bf) {
            return bf['distanceTo'](this['center']) - this['radius'];
        },
        'intersectsSphere': function(bf) {
            var bg = this['radius'] + bf['radius'];
            return bf['center']['distanceToSquared'](this['center']) <= bg * bg;
        },
        'intersectsBox': function(bf) {
            return bf['intersectsSphere'](this);
        },
        'intersectsPlane': function(bf) {
            return Math['abs'](bf['distanceToPoint'](this['center'])) <= this['radius'];
        },
        'clampPoint': function(bf, bg) {
            var bh = this['center']['distanceToSquared'](bf);
            return void 0x0 === bg && (console['warn']('THREE.Sphere:\x20.clampPoint()\x20target\x20is\x20now\x20required'),
            bg = new eK()),
            bg['copy'](bf),
            bh > this['radius'] * this['radius'] && (bg['sub'](this['center'])['normalize'](),
            bg['multiplyScalar'](this['radius'])['add'](this['center'])),
            bg;
        },
        'getBoundingBox': function(bf) {
            return void 0x0 === bf && (console['warn']('THREE.Sphere:\x20.getBoundingBox()\x20target\x20is\x20now\x20required'),
            bf = new mB()),
            bf['set'](this['center'], this['center']),
            bf['expandByScalar'](this['radius']),
            bf;
        },
        'applyMatrix4': function(bf) {
            return this['center']['applyMatrix4'](bf),
            this['radius'] = this['radius'] * bf['getMaxScaleOnAxis'](),
            this;
        },
        'translate': function(bf) {
            return this['center']['add'](bf),
            this;
        },
        'equals': function(bf) {
            return bf['center']['equals'](this['center']) && bf['radius'] === this['radius'];
        }
    }),
    Object['assign'](mH['prototype'], {
        'set': function(bf, bg) {
            return this['normal']['copy'](bf),
            this['constant'] = bg,
            this;
        },
        'setComponents': function(bf, bg, bh, bi) {
            return this['normal']['set'](bf, bg, bh),
            this['constant'] = bi,
            this;
        },
        'setFromNormalAndCoplanarPoint': function(bf, bg) {
            return this['normal']['copy'](bf),
            this['constant'] = -bg['dot'](this['normal']),
            this;
        },
        'setFromCoplanarPoints': function() {
            var bf = new eK()
              , bg = new eK();
            return function(bh, bi, bF) {
                var bG = bf['subVectors'](bF, bi)['cross'](bg['subVectors'](bh, bi))['normalize']();
                return this['setFromNormalAndCoplanarPoint'](bG, bh),
                this;
            }
            ;
        }(),
        'clone': function() {
            return new this['constructor']()['copy'](this);
        },
        'copy': function(bf) {
            return this['normal']['copy'](bf['normal']),
            this['constant'] = bf['constant'],
            this;
        },
        'normalize': function() {
            var bf = 0x1 / this['normal']['length']();
            return this['normal']['multiplyScalar'](bf),
            this['constant'] *= bf,
            this;
        },
        'negate': function() {
            return this['constant'] *= -0x1,
            this['normal']['negate'](),
            this;
        },
        'distanceToPoint': function(bf) {
            return this['normal']['dot'](bf) + this['constant'];
        },
        'distanceToSphere': function(bf) {
            return this['distanceToPoint'](bf['center']) - bf['radius'];
        },
        'projectPoint': function(bf, bg) {
            return void 0x0 === bg && (console['warn']('THREE.Plane:\x20.projectPoint()\x20target\x20is\x20now\x20required'),
            bg = new eK()),
            bg['copy'](this['normal'])['multiplyScalar'](-this['distanceToPoint'](bf))['add'](bf);
        },
        'intersectLine': function() {
            var bf = new eK();
            return function(bg, bh) {
                void 0x0 === bh && (console['warn']('THREE.Plane:\x20.intersectLine()\x20target\x20is\x20now\x20required'),
                bh = new eK());
                var bi = bg['delta'](bf)
                  , bF = this['normal']['dot'](bi);
                if (0x0 === bF)
                    return 0x0 === this['distanceToPoint'](bg['start']) ? bh['copy'](bg['start']) : void 0x0;
                var bG = -(bg['start']['dot'](this['normal']) + this['constant']) / bF;
                return bG < 0x0 || bG > 0x1 ? void 0x0 : bh['copy'](bi)['multiplyScalar'](bG)['add'](bg['start']);
            }
            ;
        }(),
        'intersectsLine': function(bf) {
            var bg = this['distanceToPoint'](bf['start'])
              , bh = this['distanceToPoint'](bf['end']);
            return bg < 0x0 && bh > 0x0 || bh < 0x0 && bg > 0x0;
        },
        'intersectsBox': function(bf) {
            return bf['intersectsPlane'](this);
        },
        'intersectsSphere': function(bf) {
            return bf['intersectsPlane'](this);
        },
        'coplanarPoint': function(bf) {
            return void 0x0 === bf && (console['warn']('THREE.Plane:\x20.coplanarPoint()\x20target\x20is\x20now\x20required'),
            bf = new eK()),
            bf['copy'](this['normal'])['multiplyScalar'](-this['constant']);
        },
        'applyMatrix4': function() {
            var bf = new eK()
              , bg = new eO();
            return function(bh, bi) {
                var bF = bi || bg['getNormalMatrix'](bh)
                  , bG = this['coplanarPoint'](bf)['applyMatrix4'](bh)
                  , bH = this['normal']['applyMatrix3'](bF)['normalize']();
                return this['constant'] = -bG['dot'](bH),
                this;
            }
            ;
        }(),
        'translate': function(bf) {
            return this['constant'] -= bf['dot'](this['normal']),
            this;
        },
        'equals': function(bf) {
            return bf['normal']['equals'](this['normal']) && bf['constant'] === this['constant'];
        }
    }),
    Object['assign'](mK['prototype'], {
        'set': function(bf, bg, bh, bi, bF, bG) {
            var bH = this['planes'];
            return bH[0x0]['copy'](bf),
            bH[0x1]['copy'](bg),
            bH[0x2]['copy'](bh),
            bH[0x3]['copy'](bi),
            bH[0x4]['copy'](bF),
            bH[0x5]['copy'](bG),
            this;
        },
        'clone': function() {
            return new this['constructor']()['copy'](this);
        },
        'copy': function(bf) {
            for (var bg = this['planes'], bh = 0x0; bh < 0x6; bh++)
                bg[bh]['copy'](bf['planes'][bh]);
            return this;
        },
        'setFromMatrix': function(bf) {
            var bg = this['planes']
              , bh = bf['elements']
              , bi = bh[0x0]
              , bF = bh[0x1]
              , bG = bh[0x2]
              , bH = bh[0x3]
              , bI = bh[0x4]
              , bJ = bh[0x5]
              , bK = bh[0x6]
              , bL = bh[0x7]
              , bM = bh[0x8]
              , bN = bh[0x9]
              , bO = bh[0xa]
              , bP = bh[0xb]
              , bQ = bh[0xc]
              , bR = bh[0xd]
              , bS = bh[0xe]
              , bT = bh[0xf];
            return bg[0x0]['setComponents'](bH - bi, bL - bI, bP - bM, bT - bQ)['normalize'](),
            bg[0x1]['setComponents'](bH + bi, bL + bI, bP + bM, bT + bQ)['normalize'](),
            bg[0x2]['setComponents'](bH + bF, bL + bJ, bP + bN, bT + bR)['normalize'](),
            bg[0x3]['setComponents'](bH - bF, bL - bJ, bP - bN, bT - bR)['normalize'](),
            bg[0x4]['setComponents'](bH - bG, bL - bK, bP - bO, bT - bS)['normalize'](),
            bg[0x5]['setComponents'](bH + bG, bL + bK, bP + bO, bT + bS)['normalize'](),
            this;
        },
        'intersectsObject': (lJ = new mE(),
        function(bf) {
            var bg = bf['geometry'];
            return null === bg['boundingSphere'] && bg['computeBoundingSphere'](),
            lJ['copy'](bg['boundingSphere'])['applyMatrix4'](bf['matrixWorld']),
            this['intersectsSphere'](lJ);
        }
        ),
        'intersectsSprite': function() {
            var bf = new mE();
            return function(bg) {
                return bf['center']['set'](0x0, 0x0, 0x0),
                bf['radius'] = 0.7071067811865476,
                bf['applyMatrix4'](bg['matrixWorld']),
                this['intersectsSphere'](bf);
            }
            ;
        }(),
        'intersectsSphere': function(bf) {
            for (var bg = this['planes'], bh = bf['center'], bi = -bf['radius'], bF = 0x0; bF < 0x6; bF++) {
                if (bg[bF]['distanceToPoint'](bh) < bi)
                    return !0x1;
            }
            return !0x0;
        },
        'intersectsBox': (lI = new eK(),
        function(bf) {
            for (var bg = this['planes'], bh = 0x0; bh < 0x6; bh++) {
                var bi = bg[bh];
                if (lI['x'] = bi['normal']['x'] > 0x0 ? bf['max']['x'] : bf['min']['x'],
                lI['y'] = bi['normal']['y'] > 0x0 ? bf['max']['y'] : bf['min']['y'],
                lI['z'] = bi['normal']['z'] > 0x0 ? bf['max']['z'] : bf['min']['z'],
                bi['distanceToPoint'](lI) < 0x0)
                    return !0x1;
            }
            return !0x0;
        }
        ),
        'containsPoint': function(bf) {
            for (var bg = this['planes'], bh = 0x0; bh < 0x6; bh++)
                if (bg[bh]['distanceToPoint'](bf) < 0x0)
                    return !0x1;
            return !0x0;
        }
    }),
    Object['assign'](mR['prototype'], {
        'isMatrix4': !0x0,
        'set': function(bf, bg, bh, bi, bF, bG, bH, bI, bJ, bK, bL, bM, bN, bO, bP, bQ) {
            var bR = this['elements'];
            return bR[0x0] = bf,
            bR[0x4] = bg,
            bR[0x8] = bh,
            bR[0xc] = bi,
            bR[0x1] = bF,
            bR[0x5] = bG,
            bR[0x9] = bH,
            bR[0xd] = bI,
            bR[0x2] = bJ,
            bR[0x6] = bK,
            bR[0xa] = bL,
            bR[0xe] = bM,
            bR[0x3] = bN,
            bR[0x7] = bO,
            bR[0xb] = bP,
            bR[0xf] = bQ,
            this;
        },
        'identity': function() {
            return this['set'](0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1),
            this;
        },
        'clone': function() {
            return new mR()['fromArray'](this['elements']);
        },
        'copy': function(bf) {
            var bg = this['elements']
              , bh = bf['elements'];
            return bg[0x0] = bh[0x0],
            bg[0x1] = bh[0x1],
            bg[0x2] = bh[0x2],
            bg[0x3] = bh[0x3],
            bg[0x4] = bh[0x4],
            bg[0x5] = bh[0x5],
            bg[0x6] = bh[0x6],
            bg[0x7] = bh[0x7],
            bg[0x8] = bh[0x8],
            bg[0x9] = bh[0x9],
            bg[0xa] = bh[0xa],
            bg[0xb] = bh[0xb],
            bg[0xc] = bh[0xc],
            bg[0xd] = bh[0xd],
            bg[0xe] = bh[0xe],
            bg[0xf] = bh[0xf],
            this;
        },
        'copyPosition': function(bf) {
            var bg = this['elements']
              , bh = bf['elements'];
            return bg[0xc] = bh[0xc],
            bg[0xd] = bh[0xd],
            bg[0xe] = bh[0xe],
            this;
        },
        'extractBasis': function(bf, bg, bh) {
            return bf['setFromMatrixColumn'](this, 0x0),
            bg['setFromMatrixColumn'](this, 0x1),
            bh['setFromMatrixColumn'](this, 0x2),
            this;
        },
        'makeBasis': function(bf, bg, bh) {
            return this['set'](bf['x'], bg['x'], bh['x'], 0x0, bf['y'], bg['y'], bh['y'], 0x0, bf['z'], bg['z'], bh['z'], 0x0, 0x0, 0x0, 0x0, 0x1),
            this;
        },
        'extractRotation': function() {
            var bf = new eK();
            return function(bg) {
                var bh = this['elements']
                  , bi = bg['elements']
                  , bF = 0x1 / bf['setFromMatrixColumn'](bg, 0x0)['length']()
                  , bG = 0x1 / bf['setFromMatrixColumn'](bg, 0x1)['length']()
                  , bH = 0x1 / bf['setFromMatrixColumn'](bg, 0x2)['length']();
                return bh[0x0] = bi[0x0] * bF,
                bh[0x1] = bi[0x1] * bF,
                bh[0x2] = bi[0x2] * bF,
                bh[0x3] = 0x0,
                bh[0x4] = bi[0x4] * bG,
                bh[0x5] = bi[0x5] * bG,
                bh[0x6] = bi[0x6] * bG,
                bh[0x7] = 0x0,
                bh[0x8] = bi[0x8] * bH,
                bh[0x9] = bi[0x9] * bH,
                bh[0xa] = bi[0xa] * bH,
                bh[0xb] = 0x0,
                bh[0xc] = 0x0,
                bh[0xd] = 0x0,
                bh[0xe] = 0x0,
                bh[0xf] = 0x1,
                this;
            }
            ;
        }(),
        'makeRotationFromEuler': function(bf) {
            bf && bf['isEuler'] || console['error']('THREE.Matrix4:\x20.makeRotationFromEuler()\x20now\x20expects\x20a\x20Euler\x20rotation\x20rather\x20than\x20a\x20Vector3\x20and\x20order.');
            var bg = this['elements']
              , bh = bf['x']
              , bi = bf['y']
              , bF = bf['z']
              , bG = Math['cos'](bh)
              , bH = Math['sin'](bh)
              , bI = Math['cos'](bi)
              , bJ = Math['sin'](bi)
              , bK = Math['cos'](bF)
              , bL = Math['sin'](bF);
            if ('XYZ' === bf['order']) {
                var bM = bG * bK
                  , bN = bG * bL
                  , bO = bH * bK
                  , bP = bH * bL;
                bg[0x0] = bI * bK,
                bg[0x4] = -bI * bL,
                bg[0x8] = bJ,
                bg[0x1] = bN + bO * bJ,
                bg[0x5] = bM - bP * bJ,
                bg[0x9] = -bH * bI,
                bg[0x2] = bP - bM * bJ,
                bg[0x6] = bO + bN * bJ,
                bg[0xa] = bG * bI;
            } else if ('YXZ' === bf['order']) {
                var bQ = bI * bK
                  , bR = bI * bL
                  , bS = bJ * bK
                  , bT = bJ * bL;
                bg[0x0] = bQ + bT * bH,
                bg[0x4] = bS * bH - bR,
                bg[0x8] = bG * bJ,
                bg[0x1] = bG * bL,
                bg[0x5] = bG * bK,
                bg[0x9] = -bH,
                bg[0x2] = bR * bH - bS,
                bg[0x6] = bT + bQ * bH,
                bg[0xa] = bG * bI;
            } else if ('ZXY' === bf['order']) {
                bQ = bI * bK,
                bR = bI * bL,
                bS = bJ * bK,
                bT = bJ * bL;
                bg[0x0] = bQ - bT * bH,
                bg[0x4] = -bG * bL,
                bg[0x8] = bS + bR * bH,
                bg[0x1] = bR + bS * bH,
                bg[0x5] = bG * bK,
                bg[0x9] = bT - bQ * bH,
                bg[0x2] = -bG * bJ,
                bg[0x6] = bH,
                bg[0xa] = bG * bI;
            } else if ('ZYX' === bf['order']) {
                bM = bG * bK,
                bN = bG * bL,
                bO = bH * bK,
                bP = bH * bL;
                bg[0x0] = bI * bK,
                bg[0x4] = bO * bJ - bN,
                bg[0x8] = bM * bJ + bP,
                bg[0x1] = bI * bL,
                bg[0x5] = bP * bJ + bM,
                bg[0x9] = bN * bJ - bO,
                bg[0x2] = -bJ,
                bg[0x6] = bH * bI,
                bg[0xa] = bG * bI;
            } else if ('YZX' === bf['order']) {
                var bU = bG * bI
                  , bV = bG * bJ
                  , bW = bH * bI
                  , bX = bH * bJ;
                bg[0x0] = bI * bK,
                bg[0x4] = bX - bU * bL,
                bg[0x8] = bW * bL + bV,
                bg[0x1] = bL,
                bg[0x5] = bG * bK,
                bg[0x9] = -bH * bK,
                bg[0x2] = -bJ * bK,
                bg[0x6] = bV * bL + bW,
                bg[0xa] = bU - bX * bL;
            } else if ('XZY' === bf['order']) {
                bU = bG * bI,
                bV = bG * bJ,
                bW = bH * bI,
                bX = bH * bJ;
                bg[0x0] = bI * bK,
                bg[0x4] = -bL,
                bg[0x8] = bJ * bK,
                bg[0x1] = bU * bL + bX,
                bg[0x5] = bG * bK,
                bg[0x9] = bV * bL - bW,
                bg[0x2] = bW * bL - bV,
                bg[0x6] = bH * bK,
                bg[0xa] = bX * bL + bU;
            }
            return bg[0x3] = 0x0,
            bg[0x7] = 0x0,
            bg[0xb] = 0x0,
            bg[0xc] = 0x0,
            bg[0xd] = 0x0,
            bg[0xe] = 0x0,
            bg[0xf] = 0x1,
            this;
        },
        'makeRotationFromQuaternion': (lP = new eK(0x0,0x0,0x0),
        lQ = new eK(0x1,0x1,0x1),
        function(bf) {
            return this['compose'](lP, bf, lQ);
        }
        ),
        'lookAt': (lM = new eK(),
        lN = new eK(),
        lO = new eK(),
        function(bf, bg, bh) {
            var bi = this['elements'];
            return lO['subVectors'](bf, bg),
            0x0 === lO['lengthSq']() && (lO['z'] = 0x1),
            lO['normalize'](),
            lM['crossVectors'](bh, lO),
            0x0 === lM['lengthSq']() && (0x1 === Math['abs'](bh['z']) ? lO['x'] += 0.0001 : lO['z'] += 0.0001,
            lO['normalize'](),
            lM['crossVectors'](bh, lO)),
            lM['normalize'](),
            lN['crossVectors'](lO, lM),
            bi[0x0] = lM['x'],
            bi[0x4] = lN['x'],
            bi[0x8] = lO['x'],
            bi[0x1] = lM['y'],
            bi[0x5] = lN['y'],
            bi[0x9] = lO['y'],
            bi[0x2] = lM['z'],
            bi[0x6] = lN['z'],
            bi[0xa] = lO['z'],
            this;
        }
        ),
        'multiply': function(bf, bg) {
            return void 0x0 !== bg ? (console['warn']('THREE.Matrix4:\x20.multiply()\x20now\x20only\x20accepts\x20one\x20argument.\x20Use\x20.multiplyMatrices(\x20a,\x20b\x20)\x20instead.'),
            this['multiplyMatrices'](bf, bg)) : this['multiplyMatrices'](this, bf);
        },
        'premultiply': function(bf) {
            return this['multiplyMatrices'](bf, this);
        },
        'multiplyMatrices': function(bf, bg) {
            var bh = bf['elements']
              , bi = bg['elements']
              , bF = this['elements']
              , bG = bh[0x0]
              , bH = bh[0x4]
              , bI = bh[0x8]
              , bJ = bh[0xc]
              , bK = bh[0x1]
              , bL = bh[0x5]
              , bM = bh[0x9]
              , bN = bh[0xd]
              , bO = bh[0x2]
              , bP = bh[0x6]
              , bQ = bh[0xa]
              , bR = bh[0xe]
              , bS = bh[0x3]
              , bT = bh[0x7]
              , bU = bh[0xb]
              , bV = bh[0xf]
              , bW = bi[0x0]
              , bX = bi[0x4]
              , bY = bi[0x8]
              , bZ = bi[0xc]
              , c0 = bi[0x1]
              , c1 = bi[0x5]
              , c2 = bi[0x9]
              , c3 = bi[0xd]
              , c4 = bi[0x2]
              , c5 = bi[0x6]
              , c6 = bi[0xa]
              , c7 = bi[0xe]
              , c8 = bi[0x3]
              , c9 = bi[0x7]
              , ca = bi[0xb]
              , cb = bi[0xf];
            return bF[0x0] = bG * bW + bH * c0 + bI * c4 + bJ * c8,
            bF[0x4] = bG * bX + bH * c1 + bI * c5 + bJ * c9,
            bF[0x8] = bG * bY + bH * c2 + bI * c6 + bJ * ca,
            bF[0xc] = bG * bZ + bH * c3 + bI * c7 + bJ * cb,
            bF[0x1] = bK * bW + bL * c0 + bM * c4 + bN * c8,
            bF[0x5] = bK * bX + bL * c1 + bM * c5 + bN * c9,
            bF[0x9] = bK * bY + bL * c2 + bM * c6 + bN * ca,
            bF[0xd] = bK * bZ + bL * c3 + bM * c7 + bN * cb,
            bF[0x2] = bO * bW + bP * c0 + bQ * c4 + bR * c8,
            bF[0x6] = bO * bX + bP * c1 + bQ * c5 + bR * c9,
            bF[0xa] = bO * bY + bP * c2 + bQ * c6 + bR * ca,
            bF[0xe] = bO * bZ + bP * c3 + bQ * c7 + bR * cb,
            bF[0x3] = bS * bW + bT * c0 + bU * c4 + bV * c8,
            bF[0x7] = bS * bX + bT * c1 + bU * c5 + bV * c9,
            bF[0xb] = bS * bY + bT * c2 + bU * c6 + bV * ca,
            bF[0xf] = bS * bZ + bT * c3 + bU * c7 + bV * cb,
            this;
        },
        'multiplyScalar': function(bf) {
            var bg = this['elements'];
            return bg[0x0] *= bf,
            bg[0x4] *= bf,
            bg[0x8] *= bf,
            bg[0xc] *= bf,
            bg[0x1] *= bf,
            bg[0x5] *= bf,
            bg[0x9] *= bf,
            bg[0xd] *= bf,
            bg[0x2] *= bf,
            bg[0x6] *= bf,
            bg[0xa] *= bf,
            bg[0xe] *= bf,
            bg[0x3] *= bf,
            bg[0x7] *= bf,
            bg[0xb] *= bf,
            bg[0xf] *= bf,
            this;
        },
        'applyToBufferAttribute': function() {
            var bf = new eK();
            return function(bg) {
                for (var bh = 0x0, bi = bg['count']; bh < bi; bh++)
                    bf['x'] = bg['getX'](bh),
                    bf['y'] = bg['getY'](bh),
                    bf['z'] = bg['getZ'](bh),
                    bf['applyMatrix4'](this),
                    bg['setXYZ'](bh, bf['x'], bf['y'], bf['z']);
                return bg;
            }
            ;
        }(),
        'determinant': function() {
            var bf = this['elements']
              , bg = bf[0x0]
              , bh = bf[0x4]
              , bi = bf[0x8]
              , bF = bf[0xc]
              , bG = bf[0x1]
              , bH = bf[0x5]
              , bI = bf[0x9]
              , bJ = bf[0xd]
              , bK = bf[0x2]
              , bL = bf[0x6]
              , bM = bf[0xa]
              , bN = bf[0xe];
            return bf[0x3] * (+bF * bI * bL - bi * bJ * bL - bF * bH * bM + bh * bJ * bM + bi * bH * bN - bh * bI * bN) + bf[0x7] * (+bg * bI * bN - bg * bJ * bM + bF * bG * bM - bi * bG * bN + bi * bJ * bK - bF * bI * bK) + bf[0xb] * (+bg * bJ * bL - bg * bH * bN - bF * bG * bL + bh * bG * bN + bF * bH * bK - bh * bJ * bK) + bf[0xf] * (-bi * bH * bK - bg * bI * bL + bg * bH * bM + bi * bG * bL - bh * bG * bM + bh * bI * bK);
        },
        'transpose': function() {
            var bf, bg = this['elements'];
            return bf = bg[0x1],
            bg[0x1] = bg[0x4],
            bg[0x4] = bf,
            bf = bg[0x2],
            bg[0x2] = bg[0x8],
            bg[0x8] = bf,
            bf = bg[0x6],
            bg[0x6] = bg[0x9],
            bg[0x9] = bf,
            bf = bg[0x3],
            bg[0x3] = bg[0xc],
            bg[0xc] = bf,
            bf = bg[0x7],
            bg[0x7] = bg[0xd],
            bg[0xd] = bf,
            bf = bg[0xb],
            bg[0xb] = bg[0xe],
            bg[0xe] = bf,
            this;
        },
        'setPosition': function(bf, bg, bh) {
            var bi = this['elements'];
            return bf['isVector3'] ? (bi[0xc] = bf['x'],
            bi[0xd] = bf['y'],
            bi[0xe] = bf['z']) : (bi[0xc] = bf,
            bi[0xd] = bg,
            bi[0xe] = bh),
            this;
        },
        'getInverse': function(bf, bg) {
            var bh = this['elements']
              , bi = bf['elements']
              , bF = bi[0x0]
              , bG = bi[0x1]
              , bH = bi[0x2]
              , bI = bi[0x3]
              , bJ = bi[0x4]
              , bK = bi[0x5]
              , bL = bi[0x6]
              , bM = bi[0x7]
              , bN = bi[0x8]
              , bO = bi[0x9]
              , bP = bi[0xa]
              , bQ = bi[0xb]
              , bR = bi[0xc]
              , bS = bi[0xd]
              , bT = bi[0xe]
              , bU = bi[0xf]
              , bV = bO * bT * bM - bS * bP * bM + bS * bL * bQ - bK * bT * bQ - bO * bL * bU + bK * bP * bU
              , bW = bR * bP * bM - bN * bT * bM - bR * bL * bQ + bJ * bT * bQ + bN * bL * bU - bJ * bP * bU
              , bX = bN * bS * bM - bR * bO * bM + bR * bK * bQ - bJ * bS * bQ - bN * bK * bU + bJ * bO * bU
              , bY = bR * bO * bL - bN * bS * bL - bR * bK * bP + bJ * bS * bP + bN * bK * bT - bJ * bO * bT
              , bZ = bF * bV + bG * bW + bH * bX + bI * bY;
            if (0x0 === bZ) {
                var c0 = 'THREE.Matrix4:\x20.getInverse()\x20can\x27t\x20invert\x20matrix,\x20determinant\x20is\x200';
                if (!0x0 === bg)
                    throw new Error(c0);
                return console['warn'](c0),
                this['identity']();
            }
            var c1 = 0x1 / bZ;
            return bh[0x0] = bV * c1,
            bh[0x1] = (bS * bP * bI - bO * bT * bI - bS * bH * bQ + bG * bT * bQ + bO * bH * bU - bG * bP * bU) * c1,
            bh[0x2] = (bK * bT * bI - bS * bL * bI + bS * bH * bM - bG * bT * bM - bK * bH * bU + bG * bL * bU) * c1,
            bh[0x3] = (bO * bL * bI - bK * bP * bI - bO * bH * bM + bG * bP * bM + bK * bH * bQ - bG * bL * bQ) * c1,
            bh[0x4] = bW * c1,
            bh[0x5] = (bN * bT * bI - bR * bP * bI + bR * bH * bQ - bF * bT * bQ - bN * bH * bU + bF * bP * bU) * c1,
            bh[0x6] = (bR * bL * bI - bJ * bT * bI - bR * bH * bM + bF * bT * bM + bJ * bH * bU - bF * bL * bU) * c1,
            bh[0x7] = (bJ * bP * bI - bN * bL * bI + bN * bH * bM - bF * bP * bM - bJ * bH * bQ + bF * bL * bQ) * c1,
            bh[0x8] = bX * c1,
            bh[0x9] = (bR * bO * bI - bN * bS * bI - bR * bG * bQ + bF * bS * bQ + bN * bG * bU - bF * bO * bU) * c1,
            bh[0xa] = (bJ * bS * bI - bR * bK * bI + bR * bG * bM - bF * bS * bM - bJ * bG * bU + bF * bK * bU) * c1,
            bh[0xb] = (bN * bK * bI - bJ * bO * bI - bN * bG * bM + bF * bO * bM + bJ * bG * bQ - bF * bK * bQ) * c1,
            bh[0xc] = bY * c1,
            bh[0xd] = (bN * bS * bH - bR * bO * bH + bR * bG * bP - bF * bS * bP - bN * bG * bT + bF * bO * bT) * c1,
            bh[0xe] = (bR * bK * bH - bJ * bS * bH - bR * bG * bL + bF * bS * bL + bJ * bG * bT - bF * bK * bT) * c1,
            bh[0xf] = (bJ * bO * bH - bN * bK * bH + bN * bG * bL - bF * bO * bL - bJ * bG * bP + bF * bK * bP) * c1,
            this;
        },
        'scale': function(bf) {
            var bg = this['elements']
              , bh = bf['x']
              , bi = bf['y']
              , bF = bf['z'];
            return bg[0x0] *= bh,
            bg[0x4] *= bi,
            bg[0x8] *= bF,
            bg[0x1] *= bh,
            bg[0x5] *= bi,
            bg[0x9] *= bF,
            bg[0x2] *= bh,
            bg[0x6] *= bi,
            bg[0xa] *= bF,
            bg[0x3] *= bh,
            bg[0x7] *= bi,
            bg[0xb] *= bF,
            this;
        },
        'getMaxScaleOnAxis': function() {
            var bf = this['elements']
              , bg = bf[0x0] * bf[0x0] + bf[0x1] * bf[0x1] + bf[0x2] * bf[0x2]
              , bh = bf[0x4] * bf[0x4] + bf[0x5] * bf[0x5] + bf[0x6] * bf[0x6]
              , bi = bf[0x8] * bf[0x8] + bf[0x9] * bf[0x9] + bf[0xa] * bf[0xa];
            return Math['sqrt'](Math['max'](bg, bh, bi));
        },
        'makeTranslation': function(bf, bg, bh) {
            return this['set'](0x1, 0x0, 0x0, bf, 0x0, 0x1, 0x0, bg, 0x0, 0x0, 0x1, bh, 0x0, 0x0, 0x0, 0x1),
            this;
        },
        'makeRotationX': function(bf) {
            var bg = Math['cos'](bf)
              , bh = Math['sin'](bf);
            return this['set'](0x1, 0x0, 0x0, 0x0, 0x0, bg, -bh, 0x0, 0x0, bh, bg, 0x0, 0x0, 0x0, 0x0, 0x1),
            this;
        },
        'makeRotationY': function(bf) {
            var bg = Math['cos'](bf)
              , bh = Math['sin'](bf);
            return this['set'](bg, 0x0, bh, 0x0, 0x0, 0x1, 0x0, 0x0, -bh, 0x0, bg, 0x0, 0x0, 0x0, 0x0, 0x1),
            this;
        },
        'makeRotationZ': function(bf) {
            var bg = Math['cos'](bf)
              , bh = Math['sin'](bf);
            return this['set'](bg, -bh, 0x0, 0x0, bh, bg, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1),
            this;
        },
        'makeRotationAxis': function(bf, bg) {
            var bh = Math['cos'](bg)
              , bi = Math['sin'](bg)
              , bF = 0x1 - bh
              , bG = bf['x']
              , bH = bf['y']
              , bI = bf['z']
              , bJ = bF * bG
              , bK = bF * bH;
            return this['set'](bJ * bG + bh, bJ * bH - bi * bI, bJ * bI + bi * bH, 0x0, bJ * bH + bi * bI, bK * bH + bh, bK * bI - bi * bG, 0x0, bJ * bI - bi * bH, bK * bI + bi * bG, bF * bI * bI + bh, 0x0, 0x0, 0x0, 0x0, 0x1),
            this;
        },
        'makeScale': function(bf, bg, bh) {
            return this['set'](bf, 0x0, 0x0, 0x0, 0x0, bg, 0x0, 0x0, 0x0, 0x0, bh, 0x0, 0x0, 0x0, 0x0, 0x1),
            this;
        },
        'makeShear': function(bf, bg, bh) {
            return this['set'](0x1, bg, bh, 0x0, bf, 0x1, bh, 0x0, bf, bg, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1),
            this;
        },
        'compose': function(bf, bg, bh) {
            var bi = this['elements']
              , bF = bg['_x']
              , bG = bg['_y']
              , bH = bg['_z']
              , bI = bg['_w']
              , bJ = bF + bF
              , bK = bG + bG
              , bL = bH + bH
              , bM = bF * bJ
              , bN = bF * bK
              , bO = bF * bL
              , bP = bG * bK
              , bQ = bG * bL
              , bR = bH * bL
              , bS = bI * bJ
              , bT = bI * bK
              , bU = bI * bL
              , bV = bh['x']
              , bW = bh['y']
              , bX = bh['z'];
            return bi[0x0] = (0x1 - (bP + bR)) * bV,
            bi[0x1] = (bN + bU) * bV,
            bi[0x2] = (bO - bT) * bV,
            bi[0x3] = 0x0,
            bi[0x4] = (bN - bU) * bW,
            bi[0x5] = (0x1 - (bM + bR)) * bW,
            bi[0x6] = (bQ + bS) * bW,
            bi[0x7] = 0x0,
            bi[0x8] = (bO + bT) * bX,
            bi[0x9] = (bQ - bS) * bX,
            bi[0xa] = (0x1 - (bM + bP)) * bX,
            bi[0xb] = 0x0,
            bi[0xc] = bf['x'],
            bi[0xd] = bf['y'],
            bi[0xe] = bf['z'],
            bi[0xf] = 0x1,
            this;
        },
        'decompose': (lK = new eK(),
        lL = new mR(),
        function(bf, bg, bh) {
            var bi = this['elements']
              , bF = lK['set'](bi[0x0], bi[0x1], bi[0x2])['length']()
              , bG = lK['set'](bi[0x4], bi[0x5], bi[0x6])['length']()
              , bH = lK['set'](bi[0x8], bi[0x9], bi[0xa])['length']();
            this['determinant']() < 0x0 && (bF = -bF),
            bf['x'] = bi[0xc],
            bf['y'] = bi[0xd],
            bf['z'] = bi[0xe],
            lL['copy'](this);
            var bI = 0x1 / bF
              , bJ = 0x1 / bG
              , bK = 0x1 / bH;
            return lL['elements'][0x0] *= bI,
            lL['elements'][0x1] *= bI,
            lL['elements'][0x2] *= bI,
            lL['elements'][0x4] *= bJ,
            lL['elements'][0x5] *= bJ,
            lL['elements'][0x6] *= bJ,
            lL['elements'][0x8] *= bK,
            lL['elements'][0x9] *= bK,
            lL['elements'][0xa] *= bK,
            bg['setFromRotationMatrix'](lL),
            bh['x'] = bF,
            bh['y'] = bG,
            bh['z'] = bH,
            this;
        }
        ),
        'makePerspective': function(bf, bg, bh, bi, bF, bG) {
            void 0x0 === bG && console['warn']('THREE.Matrix4:\x20.makePerspective()\x20has\x20been\x20redefined\x20and\x20has\x20a\x20new\x20signature.\x20Please\x20check\x20the\x20docs.');
            var bH = this['elements']
              , bI = 0x2 * bF / (bg - bf)
              , bJ = 0x2 * bF / (bh - bi)
              , bK = (bg + bf) / (bg - bf)
              , bL = (bh + bi) / (bh - bi)
              , bM = -(bG + bF) / (bG - bF)
              , bN = -0x2 * bG * bF / (bG - bF);
            return bH[0x0] = bI,
            bH[0x4] = 0x0,
            bH[0x8] = bK,
            bH[0xc] = 0x0,
            bH[0x1] = 0x0,
            bH[0x5] = bJ,
            bH[0x9] = bL,
            bH[0xd] = 0x0,
            bH[0x2] = 0x0,
            bH[0x6] = 0x0,
            bH[0xa] = bM,
            bH[0xe] = bN,
            bH[0x3] = 0x0,
            bH[0x7] = 0x0,
            bH[0xb] = -0x1,
            bH[0xf] = 0x0,
            this;
        },
        'makeOrthographic': function(bf, bg, bh, bi, bF, bG) {
            var bH = this['elements']
              , bI = 0x1 / (bg - bf)
              , bJ = 0x1 / (bh - bi)
              , bK = 0x1 / (bG - bF)
              , bL = (bg + bf) * bI
              , bM = (bh + bi) * bJ
              , bN = (bG + bF) * bK;
            return bH[0x0] = 0x2 * bI,
            bH[0x4] = 0x0,
            bH[0x8] = 0x0,
            bH[0xc] = -bL,
            bH[0x1] = 0x0,
            bH[0x5] = 0x2 * bJ,
            bH[0x9] = 0x0,
            bH[0xd] = -bM,
            bH[0x2] = 0x0,
            bH[0x6] = 0x0,
            bH[0xa] = -0x2 * bK,
            bH[0xe] = -bN,
            bH[0x3] = 0x0,
            bH[0x7] = 0x0,
            bH[0xb] = 0x0,
            bH[0xf] = 0x1,
            this;
        },
        'equals': function(bf) {
            for (var bg = this['elements'], bh = bf['elements'], bi = 0x0; bi < 0x10; bi++)
                if (bg[bi] !== bh[bi])
                    return !0x1;
            return !0x0;
        },
        'fromArray': function(bf, bg) {
            void 0x0 === bg && (bg = 0x0);
            for (var bh = 0x0; bh < 0x10; bh++)
                this['elements'][bh] = bf[bh + bg];
            return this;
        },
        'toArray': function(bf, bg) {
            void 0x0 === bf && (bf = []),
            void 0x0 === bg && (bg = 0x0);
            var bh = this['elements'];
            return bf[bg] = bh[0x0],
            bf[bg + 0x1] = bh[0x1],
            bf[bg + 0x2] = bh[0x2],
            bf[bg + 0x3] = bh[0x3],
            bf[bg + 0x4] = bh[0x4],
            bf[bg + 0x5] = bh[0x5],
            bf[bg + 0x6] = bh[0x6],
            bf[bg + 0x7] = bh[0x7],
            bf[bg + 0x8] = bh[0x8],
            bf[bg + 0x9] = bh[0x9],
            bf[bg + 0xa] = bh[0xa],
            bf[bg + 0xb] = bh[0xb],
            bf[bg + 0xc] = bh[0xc],
            bf[bg + 0xd] = bh[0xd],
            bf[bg + 0xe] = bh[0xe],
            bf[bg + 0xf] = bh[0xf],
            bf;
        }
    });
    var vP = {
        'alphamap_fragment': '#ifdef\x20USE_ALPHAMAP\x0a\x09diffuseColor.a\x20*=\x20texture2D(\x20alphaMap,\x20vUv\x20).g;\x0a#endif',
        'alphamap_pars_fragment': '#ifdef\x20USE_ALPHAMAP\x0a\x09uniform\x20sampler2D\x20alphaMap;\x0a#endif',
        'alphatest_fragment': '#ifdef\x20ALPHATEST\x0a\x09if\x20(\x20diffuseColor.a\x20<\x20ALPHATEST\x20)\x20discard;\x0a#endif',
        'aomap_fragment': '#ifdef\x20USE_AOMAP\x0a\x09float\x20ambientOcclusion\x20=\x20(\x20texture2D(\x20aoMap,\x20vUv2\x20).r\x20-\x201.0\x20)\x20*\x20aoMapIntensity\x20+\x201.0;\x0a\x09reflectedLight.indirectDiffuse\x20*=\x20ambientOcclusion;\x0a\x09#if\x20defined(\x20USE_ENVMAP\x20)\x20&&\x20defined(\x20PHYSICAL\x20)\x0a\x09\x09float\x20dotNV\x20=\x20saturate(\x20dot(\x20geometry.normal,\x20geometry.viewDir\x20)\x20);\x0a\x09\x09reflectedLight.indirectSpecular\x20*=\x20computeSpecularOcclusion(\x20dotNV,\x20ambientOcclusion,\x20material.specularRoughness\x20);\x0a\x09#endif\x0a#endif',
        'aomap_pars_fragment': '#ifdef\x20USE_AOMAP\x0a\x09uniform\x20sampler2D\x20aoMap;\x0a\x09uniform\x20float\x20aoMapIntensity;\x0a#endif',
        'begin_vertex': 'vec3\x20transformed\x20=\x20vec3(\x20position\x20);',
        'beginnormal_vertex': 'vec3\x20objectNormal\x20=\x20vec3(\x20normal\x20);\x0a#ifdef\x20USE_TANGENT\x0a\x09vec3\x20objectTangent\x20=\x20vec3(\x20tangent.xyz\x20);\x0a#endif',
        'bsdfs': 'vec2\x20integrateSpecularBRDF(\x20const\x20in\x20float\x20dotNV,\x20const\x20in\x20float\x20roughness\x20)\x20{\x0a\x09const\x20vec4\x20c0\x20=\x20vec4(\x20-\x201,\x20-\x200.0275,\x20-\x200.572,\x200.022\x20);\x0a\x09const\x20vec4\x20c1\x20=\x20vec4(\x201,\x200.0425,\x201.04,\x20-\x200.04\x20);\x0a\x09vec4\x20r\x20=\x20roughness\x20*\x20c0\x20+\x20c1;\x0a\x09float\x20a004\x20=\x20min(\x20r.x\x20*\x20r.x,\x20exp2(\x20-\x209.28\x20*\x20dotNV\x20)\x20)\x20*\x20r.x\x20+\x20r.y;\x0a\x09return\x20vec2(\x20-1.04,\x201.04\x20)\x20*\x20a004\x20+\x20r.zw;\x0a}\x0afloat\x20punctualLightIntensityToIrradianceFactor(\x20const\x20in\x20float\x20lightDistance,\x20const\x20in\x20float\x20cutoffDistance,\x20const\x20in\x20float\x20decayExponent\x20)\x20{\x0a#if\x20defined\x20(\x20PHYSICALLY_CORRECT_LIGHTS\x20)\x0a\x09float\x20distanceFalloff\x20=\x201.0\x20/\x20max(\x20pow(\x20lightDistance,\x20decayExponent\x20),\x200.01\x20);\x0a\x09if(\x20cutoffDistance\x20>\x200.0\x20)\x20{\x0a\x09\x09distanceFalloff\x20*=\x20pow2(\x20saturate(\x201.0\x20-\x20pow4(\x20lightDistance\x20/\x20cutoffDistance\x20)\x20)\x20);\x0a\x09}\x0a\x09return\x20distanceFalloff;\x0a#else\x0a\x09if(\x20cutoffDistance\x20>\x200.0\x20&&\x20decayExponent\x20>\x200.0\x20)\x20{\x0a\x09\x09return\x20pow(\x20saturate(\x20-lightDistance\x20/\x20cutoffDistance\x20+\x201.0\x20),\x20decayExponent\x20);\x0a\x09}\x0a\x09return\x201.0;\x0a#endif\x0a}\x0avec3\x20BRDF_Diffuse_Lambert(\x20const\x20in\x20vec3\x20diffuseColor\x20)\x20{\x0a\x09return\x20RECIPROCAL_PI\x20*\x20diffuseColor;\x0a}\x0avec3\x20F_Schlick(\x20const\x20in\x20vec3\x20specularColor,\x20const\x20in\x20float\x20dotLH\x20)\x20{\x0a\x09float\x20fresnel\x20=\x20exp2(\x20(\x20-5.55473\x20*\x20dotLH\x20-\x206.98316\x20)\x20*\x20dotLH\x20);\x0a\x09return\x20(\x201.0\x20-\x20specularColor\x20)\x20*\x20fresnel\x20+\x20specularColor;\x0a}\x0avec3\x20F_Schlick_RoughnessDependent(\x20const\x20in\x20vec3\x20F0,\x20const\x20in\x20float\x20dotNV,\x20const\x20in\x20float\x20roughness\x20)\x20{\x0a\x09float\x20fresnel\x20=\x20exp2(\x20(\x20-5.55473\x20*\x20dotNV\x20-\x206.98316\x20)\x20*\x20dotNV\x20);\x0a\x09vec3\x20Fr\x20=\x20max(\x20vec3(\x201.0\x20-\x20roughness\x20),\x20F0\x20)\x20-\x20F0;\x0a\x09return\x20Fr\x20*\x20fresnel\x20+\x20F0;\x0a}\x0afloat\x20G_GGX_Smith(\x20const\x20in\x20float\x20alpha,\x20const\x20in\x20float\x20dotNL,\x20const\x20in\x20float\x20dotNV\x20)\x20{\x0a\x09float\x20a2\x20=\x20pow2(\x20alpha\x20);\x0a\x09float\x20gl\x20=\x20dotNL\x20+\x20sqrt(\x20a2\x20+\x20(\x201.0\x20-\x20a2\x20)\x20*\x20pow2(\x20dotNL\x20)\x20);\x0a\x09float\x20gv\x20=\x20dotNV\x20+\x20sqrt(\x20a2\x20+\x20(\x201.0\x20-\x20a2\x20)\x20*\x20pow2(\x20dotNV\x20)\x20);\x0a\x09return\x201.0\x20/\x20(\x20gl\x20*\x20gv\x20);\x0a}\x0afloat\x20G_GGX_SmithCorrelated(\x20const\x20in\x20float\x20alpha,\x20const\x20in\x20float\x20dotNL,\x20const\x20in\x20float\x20dotNV\x20)\x20{\x0a\x09float\x20a2\x20=\x20pow2(\x20alpha\x20);\x0a\x09float\x20gv\x20=\x20dotNL\x20*\x20sqrt(\x20a2\x20+\x20(\x201.0\x20-\x20a2\x20)\x20*\x20pow2(\x20dotNV\x20)\x20);\x0a\x09float\x20gl\x20=\x20dotNV\x20*\x20sqrt(\x20a2\x20+\x20(\x201.0\x20-\x20a2\x20)\x20*\x20pow2(\x20dotNL\x20)\x20);\x0a\x09return\x200.5\x20/\x20max(\x20gv\x20+\x20gl,\x20EPSILON\x20);\x0a}\x0afloat\x20D_GGX(\x20const\x20in\x20float\x20alpha,\x20const\x20in\x20float\x20dotNH\x20)\x20{\x0a\x09float\x20a2\x20=\x20pow2(\x20alpha\x20);\x0a\x09float\x20denom\x20=\x20pow2(\x20dotNH\x20)\x20*\x20(\x20a2\x20-\x201.0\x20)\x20+\x201.0;\x0a\x09return\x20RECIPROCAL_PI\x20*\x20a2\x20/\x20pow2(\x20denom\x20);\x0a}\x0avec3\x20BRDF_Specular_GGX(\x20const\x20in\x20IncidentLight\x20incidentLight,\x20const\x20in\x20GeometricContext\x20geometry,\x20const\x20in\x20vec3\x20specularColor,\x20const\x20in\x20float\x20roughness\x20)\x20{\x0a\x09float\x20alpha\x20=\x20pow2(\x20roughness\x20);\x0a\x09vec3\x20halfDir\x20=\x20normalize(\x20incidentLight.direction\x20+\x20geometry.viewDir\x20);\x0a\x09float\x20dotNL\x20=\x20saturate(\x20dot(\x20geometry.normal,\x20incidentLight.direction\x20)\x20);\x0a\x09float\x20dotNV\x20=\x20saturate(\x20dot(\x20geometry.normal,\x20geometry.viewDir\x20)\x20);\x0a\x09float\x20dotNH\x20=\x20saturate(\x20dot(\x20geometry.normal,\x20halfDir\x20)\x20);\x0a\x09float\x20dotLH\x20=\x20saturate(\x20dot(\x20incidentLight.direction,\x20halfDir\x20)\x20);\x0a\x09vec3\x20F\x20=\x20F_Schlick(\x20specularColor,\x20dotLH\x20);\x0a\x09float\x20G\x20=\x20G_GGX_SmithCorrelated(\x20alpha,\x20dotNL,\x20dotNV\x20);\x0a\x09float\x20D\x20=\x20D_GGX(\x20alpha,\x20dotNH\x20);\x0a\x09return\x20F\x20*\x20(\x20G\x20*\x20D\x20);\x0a}\x0avec2\x20LTC_Uv(\x20const\x20in\x20vec3\x20N,\x20const\x20in\x20vec3\x20V,\x20const\x20in\x20float\x20roughness\x20)\x20{\x0a\x09const\x20float\x20LUT_SIZE\x20\x20=\x2064.0;\x0a\x09const\x20float\x20LUT_SCALE\x20=\x20(\x20LUT_SIZE\x20-\x201.0\x20)\x20/\x20LUT_SIZE;\x0a\x09const\x20float\x20LUT_BIAS\x20\x20=\x200.5\x20/\x20LUT_SIZE;\x0a\x09float\x20dotNV\x20=\x20saturate(\x20dot(\x20N,\x20V\x20)\x20);\x0a\x09vec2\x20uv\x20=\x20vec2(\x20roughness,\x20sqrt(\x201.0\x20-\x20dotNV\x20)\x20);\x0a\x09uv\x20=\x20uv\x20*\x20LUT_SCALE\x20+\x20LUT_BIAS;\x0a\x09return\x20uv;\x0a}\x0afloat\x20LTC_ClippedSphereFormFactor(\x20const\x20in\x20vec3\x20f\x20)\x20{\x0a\x09float\x20l\x20=\x20length(\x20f\x20);\x0a\x09return\x20max(\x20(\x20l\x20*\x20l\x20+\x20f.z\x20)\x20/\x20(\x20l\x20+\x201.0\x20),\x200.0\x20);\x0a}\x0avec3\x20LTC_EdgeVectorFormFactor(\x20const\x20in\x20vec3\x20v1,\x20const\x20in\x20vec3\x20v2\x20)\x20{\x0a\x09float\x20x\x20=\x20dot(\x20v1,\x20v2\x20);\x0a\x09float\x20y\x20=\x20abs(\x20x\x20);\x0a\x09float\x20a\x20=\x200.8543985\x20+\x20(\x200.4965155\x20+\x200.0145206\x20*\x20y\x20)\x20*\x20y;\x0a\x09float\x20b\x20=\x203.4175940\x20+\x20(\x204.1616724\x20+\x20y\x20)\x20*\x20y;\x0a\x09float\x20v\x20=\x20a\x20/\x20b;\x0a\x09float\x20theta_sintheta\x20=\x20(\x20x\x20>\x200.0\x20)\x20?\x20v\x20:\x200.5\x20*\x20inversesqrt(\x20max(\x201.0\x20-\x20x\x20*\x20x,\x201e-7\x20)\x20)\x20-\x20v;\x0a\x09return\x20cross(\x20v1,\x20v2\x20)\x20*\x20theta_sintheta;\x0a}\x0avec3\x20LTC_Evaluate(\x20const\x20in\x20vec3\x20N,\x20const\x20in\x20vec3\x20V,\x20const\x20in\x20vec3\x20P,\x20const\x20in\x20mat3\x20mInv,\x20const\x20in\x20vec3\x20rectCoords[\x204\x20]\x20)\x20{\x0a\x09vec3\x20v1\x20=\x20rectCoords[\x201\x20]\x20-\x20rectCoords[\x200\x20];\x0a\x09vec3\x20v2\x20=\x20rectCoords[\x203\x20]\x20-\x20rectCoords[\x200\x20];\x0a\x09vec3\x20lightNormal\x20=\x20cross(\x20v1,\x20v2\x20);\x0a\x09if(\x20dot(\x20lightNormal,\x20P\x20-\x20rectCoords[\x200\x20]\x20)\x20<\x200.0\x20)\x20return\x20vec3(\x200.0\x20);\x0a\x09vec3\x20T1,\x20T2;\x0a\x09T1\x20=\x20normalize(\x20V\x20-\x20N\x20*\x20dot(\x20V,\x20N\x20)\x20);\x0a\x09T2\x20=\x20-\x20cross(\x20N,\x20T1\x20);\x0a\x09mat3\x20mat\x20=\x20mInv\x20*\x20transposeMat3(\x20mat3(\x20T1,\x20T2,\x20N\x20)\x20);\x0a\x09vec3\x20coords[\x204\x20];\x0a\x09coords[\x200\x20]\x20=\x20mat\x20*\x20(\x20rectCoords[\x200\x20]\x20-\x20P\x20);\x0a\x09coords[\x201\x20]\x20=\x20mat\x20*\x20(\x20rectCoords[\x201\x20]\x20-\x20P\x20);\x0a\x09coords[\x202\x20]\x20=\x20mat\x20*\x20(\x20rectCoords[\x202\x20]\x20-\x20P\x20);\x0a\x09coords[\x203\x20]\x20=\x20mat\x20*\x20(\x20rectCoords[\x203\x20]\x20-\x20P\x20);\x0a\x09coords[\x200\x20]\x20=\x20normalize(\x20coords[\x200\x20]\x20);\x0a\x09coords[\x201\x20]\x20=\x20normalize(\x20coords[\x201\x20]\x20);\x0a\x09coords[\x202\x20]\x20=\x20normalize(\x20coords[\x202\x20]\x20);\x0a\x09coords[\x203\x20]\x20=\x20normalize(\x20coords[\x203\x20]\x20);\x0a\x09vec3\x20vectorFormFactor\x20=\x20vec3(\x200.0\x20);\x0a\x09vectorFormFactor\x20+=\x20LTC_EdgeVectorFormFactor(\x20coords[\x200\x20],\x20coords[\x201\x20]\x20);\x0a\x09vectorFormFactor\x20+=\x20LTC_EdgeVectorFormFactor(\x20coords[\x201\x20],\x20coords[\x202\x20]\x20);\x0a\x09vectorFormFactor\x20+=\x20LTC_EdgeVectorFormFactor(\x20coords[\x202\x20],\x20coords[\x203\x20]\x20);\x0a\x09vectorFormFactor\x20+=\x20LTC_EdgeVectorFormFactor(\x20coords[\x203\x20],\x20coords[\x200\x20]\x20);\x0a\x09float\x20result\x20=\x20LTC_ClippedSphereFormFactor(\x20vectorFormFactor\x20);\x0a\x09return\x20vec3(\x20result\x20);\x0a}\x0avec3\x20BRDF_Specular_GGX_Environment(\x20const\x20in\x20GeometricContext\x20geometry,\x20const\x20in\x20vec3\x20specularColor,\x20const\x20in\x20float\x20roughness\x20)\x20{\x0a\x09float\x20dotNV\x20=\x20saturate(\x20dot(\x20geometry.normal,\x20geometry.viewDir\x20)\x20);\x0a\x09vec2\x20brdf\x20=\x20integrateSpecularBRDF(\x20dotNV,\x20roughness\x20);\x0a\x09return\x20specularColor\x20*\x20brdf.x\x20+\x20brdf.y;\x0a}\x0avoid\x20BRDF_Specular_Multiscattering_Environment(\x20const\x20in\x20GeometricContext\x20geometry,\x20const\x20in\x20vec3\x20specularColor,\x20const\x20in\x20float\x20roughness,\x20inout\x20vec3\x20singleScatter,\x20inout\x20vec3\x20multiScatter\x20)\x20{\x0a\x09float\x20dotNV\x20=\x20saturate(\x20dot(\x20geometry.normal,\x20geometry.viewDir\x20)\x20);\x0a\x09vec3\x20F\x20=\x20F_Schlick_RoughnessDependent(\x20specularColor,\x20dotNV,\x20roughness\x20);\x0a\x09vec2\x20brdf\x20=\x20integrateSpecularBRDF(\x20dotNV,\x20roughness\x20);\x0a\x09vec3\x20FssEss\x20=\x20F\x20*\x20brdf.x\x20+\x20brdf.y;\x0a\x09float\x20Ess\x20=\x20brdf.x\x20+\x20brdf.y;\x0a\x09float\x20Ems\x20=\x201.0\x20-\x20Ess;\x0a\x09vec3\x20Favg\x20=\x20specularColor\x20+\x20(\x201.0\x20-\x20specularColor\x20)\x20*\x200.047619;\x09vec3\x20Fms\x20=\x20FssEss\x20*\x20Favg\x20/\x20(\x201.0\x20-\x20Ems\x20*\x20Favg\x20);\x0a\x09singleScatter\x20+=\x20FssEss;\x0a\x09multiScatter\x20+=\x20Fms\x20*\x20Ems;\x0a}\x0afloat\x20G_BlinnPhong_Implicit(\x20)\x20{\x0a\x09return\x200.25;\x0a}\x0afloat\x20D_BlinnPhong(\x20const\x20in\x20float\x20shininess,\x20const\x20in\x20float\x20dotNH\x20)\x20{\x0a\x09return\x20RECIPROCAL_PI\x20*\x20(\x20shininess\x20*\x200.5\x20+\x201.0\x20)\x20*\x20pow(\x20dotNH,\x20shininess\x20);\x0a}\x0avec3\x20BRDF_Specular_BlinnPhong(\x20const\x20in\x20IncidentLight\x20incidentLight,\x20const\x20in\x20GeometricContext\x20geometry,\x20const\x20in\x20vec3\x20specularColor,\x20const\x20in\x20float\x20shininess\x20)\x20{\x0a\x09vec3\x20halfDir\x20=\x20normalize(\x20incidentLight.direction\x20+\x20geometry.viewDir\x20);\x0a\x09float\x20dotNH\x20=\x20saturate(\x20dot(\x20geometry.normal,\x20halfDir\x20)\x20);\x0a\x09float\x20dotLH\x20=\x20saturate(\x20dot(\x20incidentLight.direction,\x20halfDir\x20)\x20);\x0a\x09vec3\x20F\x20=\x20F_Schlick(\x20specularColor,\x20dotLH\x20);\x0a\x09float\x20G\x20=\x20G_BlinnPhong_Implicit(\x20);\x0a\x09float\x20D\x20=\x20D_BlinnPhong(\x20shininess,\x20dotNH\x20);\x0a\x09return\x20F\x20*\x20(\x20G\x20*\x20D\x20);\x0a}\x0afloat\x20GGXRoughnessToBlinnExponent(\x20const\x20in\x20float\x20ggxRoughness\x20)\x20{\x0a\x09return\x20(\x202.0\x20/\x20pow2(\x20ggxRoughness\x20+\x200.0001\x20)\x20-\x202.0\x20);\x0a}\x0afloat\x20BlinnExponentToGGXRoughness(\x20const\x20in\x20float\x20blinnExponent\x20)\x20{\x0a\x09return\x20sqrt(\x202.0\x20/\x20(\x20blinnExponent\x20+\x202.0\x20)\x20);\x0a}',
        'bumpmap_pars_fragment': '#ifdef\x20USE_BUMPMAP\x0a\x09uniform\x20sampler2D\x20bumpMap;\x0a\x09uniform\x20float\x20bumpScale;\x0a\x09vec2\x20dHdxy_fwd()\x20{\x0a\x09\x09vec2\x20dSTdx\x20=\x20dFdx(\x20vUv\x20);\x0a\x09\x09vec2\x20dSTdy\x20=\x20dFdy(\x20vUv\x20);\x0a\x09\x09float\x20Hll\x20=\x20bumpScale\x20*\x20texture2D(\x20bumpMap,\x20vUv\x20).x;\x0a\x09\x09float\x20dBx\x20=\x20bumpScale\x20*\x20texture2D(\x20bumpMap,\x20vUv\x20+\x20dSTdx\x20).x\x20-\x20Hll;\x0a\x09\x09float\x20dBy\x20=\x20bumpScale\x20*\x20texture2D(\x20bumpMap,\x20vUv\x20+\x20dSTdy\x20).x\x20-\x20Hll;\x0a\x09\x09return\x20vec2(\x20dBx,\x20dBy\x20);\x0a\x09}\x0a\x09vec3\x20perturbNormalArb(\x20vec3\x20surf_pos,\x20vec3\x20surf_norm,\x20vec2\x20dHdxy\x20)\x20{\x0a\x09\x09vec3\x20vSigmaX\x20=\x20vec3(\x20dFdx(\x20surf_pos.x\x20),\x20dFdx(\x20surf_pos.y\x20),\x20dFdx(\x20surf_pos.z\x20)\x20);\x0a\x09\x09vec3\x20vSigmaY\x20=\x20vec3(\x20dFdy(\x20surf_pos.x\x20),\x20dFdy(\x20surf_pos.y\x20),\x20dFdy(\x20surf_pos.z\x20)\x20);\x0a\x09\x09vec3\x20vN\x20=\x20surf_norm;\x0a\x09\x09vec3\x20R1\x20=\x20cross(\x20vSigmaY,\x20vN\x20);\x0a\x09\x09vec3\x20R2\x20=\x20cross(\x20vN,\x20vSigmaX\x20);\x0a\x09\x09float\x20fDet\x20=\x20dot(\x20vSigmaX,\x20R1\x20);\x0a\x09\x09fDet\x20*=\x20(\x20float(\x20gl_FrontFacing\x20)\x20*\x202.0\x20-\x201.0\x20);\x0a\x09\x09vec3\x20vGrad\x20=\x20sign(\x20fDet\x20)\x20*\x20(\x20dHdxy.x\x20*\x20R1\x20+\x20dHdxy.y\x20*\x20R2\x20);\x0a\x09\x09return\x20normalize(\x20abs(\x20fDet\x20)\x20*\x20surf_norm\x20-\x20vGrad\x20);\x0a\x09}\x0a#endif',
        'clipping_planes_fragment': '#if\x20NUM_CLIPPING_PLANES\x20>\x200\x0a\x09vec4\x20plane;\x0a\x09#pragma\x20unroll_loop\x0a\x09for\x20(\x20int\x20i\x20=\x200;\x20i\x20<\x20UNION_CLIPPING_PLANES;\x20i\x20++\x20)\x20{\x0a\x09\x09plane\x20=\x20clippingPlanes[\x20i\x20];\x0a\x09\x09if\x20(\x20dot(\x20vViewPosition,\x20plane.xyz\x20)\x20>\x20plane.w\x20)\x20discard;\x0a\x09}\x0a\x09#if\x20UNION_CLIPPING_PLANES\x20<\x20NUM_CLIPPING_PLANES\x0a\x09\x09bool\x20clipped\x20=\x20true;\x0a\x09\x09#pragma\x20unroll_loop\x0a\x09\x09for\x20(\x20int\x20i\x20=\x20UNION_CLIPPING_PLANES;\x20i\x20<\x20NUM_CLIPPING_PLANES;\x20i\x20++\x20)\x20{\x0a\x09\x09\x09plane\x20=\x20clippingPlanes[\x20i\x20];\x0a\x09\x09\x09clipped\x20=\x20(\x20dot(\x20vViewPosition,\x20plane.xyz\x20)\x20>\x20plane.w\x20)\x20&&\x20clipped;\x0a\x09\x09}\x0a\x09\x09if\x20(\x20clipped\x20)\x20discard;\x0a\x09#endif\x0a#endif',
        'clipping_planes_pars_fragment': '#if\x20NUM_CLIPPING_PLANES\x20>\x200\x0a\x09#if\x20!\x20defined(\x20PHYSICAL\x20)\x20&&\x20!\x20defined(\x20PHONG\x20)\x20&&\x20!\x20defined(\x20MATCAP\x20)\x0a\x09\x09varying\x20vec3\x20vViewPosition;\x0a\x09#endif\x0a\x09uniform\x20vec4\x20clippingPlanes[\x20NUM_CLIPPING_PLANES\x20];\x0a#endif',
        'clipping_planes_pars_vertex': '#if\x20NUM_CLIPPING_PLANES\x20>\x200\x20&&\x20!\x20defined(\x20PHYSICAL\x20)\x20&&\x20!\x20defined(\x20PHONG\x20)\x20&&\x20!\x20defined(\x20MATCAP\x20)\x0a\x09varying\x20vec3\x20vViewPosition;\x0a#endif',
        'clipping_planes_vertex': '#if\x20NUM_CLIPPING_PLANES\x20>\x200\x20&&\x20!\x20defined(\x20PHYSICAL\x20)\x20&&\x20!\x20defined(\x20PHONG\x20)\x20&&\x20!\x20defined(\x20MATCAP\x20)\x0a\x09vViewPosition\x20=\x20-\x20mvPosition.xyz;\x0a#endif',
        'color_fragment': '#ifdef\x20USE_COLOR\x0a\x09diffuseColor.rgb\x20*=\x20vColor;\x0a#endif',
        'color_pars_fragment': '#ifdef\x20USE_COLOR\x0a\x09varying\x20vec3\x20vColor;\x0a#endif',
        'color_pars_vertex': '#ifdef\x20USE_COLOR\x0a\x09varying\x20vec3\x20vColor;\x0a#endif',
        'color_vertex': '#ifdef\x20USE_COLOR\x0a\x09vColor.xyz\x20=\x20color.xyz;\x0a#endif',
        'common': '#define\x20PI\x203.14159265359\x0a#define\x20PI2\x206.28318530718\x0a#define\x20PI_HALF\x201.5707963267949\x0a#define\x20RECIPROCAL_PI\x200.31830988618\x0a#define\x20RECIPROCAL_PI2\x200.15915494\x0a#define\x20LOG2\x201.442695\x0a#define\x20EPSILON\x201e-6\x0a#define\x20saturate(a)\x20clamp(\x20a,\x200.0,\x201.0\x20)\x0a#define\x20whiteCompliment(a)\x20(\x201.0\x20-\x20saturate(\x20a\x20)\x20)\x0afloat\x20pow2(\x20const\x20in\x20float\x20x\x20)\x20{\x20return\x20x*x;\x20}\x0afloat\x20pow3(\x20const\x20in\x20float\x20x\x20)\x20{\x20return\x20x*x*x;\x20}\x0afloat\x20pow4(\x20const\x20in\x20float\x20x\x20)\x20{\x20float\x20x2\x20=\x20x*x;\x20return\x20x2*x2;\x20}\x0afloat\x20average(\x20const\x20in\x20vec3\x20color\x20)\x20{\x20return\x20dot(\x20color,\x20vec3(\x200.3333\x20)\x20);\x20}\x0ahighp\x20float\x20rand(\x20const\x20in\x20vec2\x20uv\x20)\x20{\x0a\x09const\x20highp\x20float\x20a\x20=\x2012.9898,\x20b\x20=\x2078.233,\x20c\x20=\x2043758.5453;\x0a\x09highp\x20float\x20dt\x20=\x20dot(\x20uv.xy,\x20vec2(\x20a,b\x20)\x20),\x20sn\x20=\x20mod(\x20dt,\x20PI\x20);\x0a\x09return\x20fract(sin(sn)\x20*\x20c);\x0a}\x0astruct\x20IncidentLight\x20{\x0a\x09vec3\x20color;\x0a\x09vec3\x20direction;\x0a\x09bool\x20visible;\x0a};\x0astruct\x20ReflectedLight\x20{\x0a\x09vec3\x20directDiffuse;\x0a\x09vec3\x20directSpecular;\x0a\x09vec3\x20indirectDiffuse;\x0a\x09vec3\x20indirectSpecular;\x0a};\x0astruct\x20GeometricContext\x20{\x0a\x09vec3\x20position;\x0a\x09vec3\x20normal;\x0a\x09vec3\x20viewDir;\x0a};\x0avec3\x20transformDirection(\x20in\x20vec3\x20dir,\x20in\x20mat4\x20matrix\x20)\x20{\x0a\x09return\x20normalize(\x20(\x20matrix\x20*\x20vec4(\x20dir,\x200.0\x20)\x20).xyz\x20);\x0a}\x0avec3\x20inverseTransformDirection(\x20in\x20vec3\x20dir,\x20in\x20mat4\x20matrix\x20)\x20{\x0a\x09return\x20normalize(\x20(\x20vec4(\x20dir,\x200.0\x20)\x20*\x20matrix\x20).xyz\x20);\x0a}\x0avec3\x20projectOnPlane(in\x20vec3\x20point,\x20in\x20vec3\x20pointOnPlane,\x20in\x20vec3\x20planeNormal\x20)\x20{\x0a\x09float\x20distance\x20=\x20dot(\x20planeNormal,\x20point\x20-\x20pointOnPlane\x20);\x0a\x09return\x20-\x20distance\x20*\x20planeNormal\x20+\x20point;\x0a}\x0afloat\x20sideOfPlane(\x20in\x20vec3\x20point,\x20in\x20vec3\x20pointOnPlane,\x20in\x20vec3\x20planeNormal\x20)\x20{\x0a\x09return\x20sign(\x20dot(\x20point\x20-\x20pointOnPlane,\x20planeNormal\x20)\x20);\x0a}\x0avec3\x20linePlaneIntersect(\x20in\x20vec3\x20pointOnLine,\x20in\x20vec3\x20lineDirection,\x20in\x20vec3\x20pointOnPlane,\x20in\x20vec3\x20planeNormal\x20)\x20{\x0a\x09return\x20lineDirection\x20*\x20(\x20dot(\x20planeNormal,\x20pointOnPlane\x20-\x20pointOnLine\x20)\x20/\x20dot(\x20planeNormal,\x20lineDirection\x20)\x20)\x20+\x20pointOnLine;\x0a}\x0amat3\x20transposeMat3(\x20const\x20in\x20mat3\x20m\x20)\x20{\x0a\x09mat3\x20tmp;\x0a\x09tmp[\x200\x20]\x20=\x20vec3(\x20m[\x200\x20].x,\x20m[\x201\x20].x,\x20m[\x202\x20].x\x20);\x0a\x09tmp[\x201\x20]\x20=\x20vec3(\x20m[\x200\x20].y,\x20m[\x201\x20].y,\x20m[\x202\x20].y\x20);\x0a\x09tmp[\x202\x20]\x20=\x20vec3(\x20m[\x200\x20].z,\x20m[\x201\x20].z,\x20m[\x202\x20].z\x20);\x0a\x09return\x20tmp;\x0a}\x0afloat\x20linearToRelativeLuminance(\x20const\x20in\x20vec3\x20color\x20)\x20{\x0a\x09vec3\x20weights\x20=\x20vec3(\x200.2126,\x200.7152,\x200.0722\x20);\x0a\x09return\x20dot(\x20weights,\x20color.rgb\x20);\x0a}',
        'cube_uv_reflection_fragment': '#ifdef\x20ENVMAP_TYPE_CUBE_UV\x0a#define\x20cubeUV_textureSize\x20(1024.0)\x0aint\x20getFaceFromDirection(vec3\x20direction)\x20{\x0a\x09vec3\x20absDirection\x20=\x20abs(direction);\x0a\x09int\x20face\x20=\x20-1;\x0a\x09if(\x20absDirection.x\x20>\x20absDirection.z\x20)\x20{\x0a\x09\x09if(absDirection.x\x20>\x20absDirection.y\x20)\x0a\x09\x09\x09face\x20=\x20direction.x\x20>\x200.0\x20?\x200\x20:\x203;\x0a\x09\x09else\x0a\x09\x09\x09face\x20=\x20direction.y\x20>\x200.0\x20?\x201\x20:\x204;\x0a\x09}\x0a\x09else\x20{\x0a\x09\x09if(absDirection.z\x20>\x20absDirection.y\x20)\x0a\x09\x09\x09face\x20=\x20direction.z\x20>\x200.0\x20?\x202\x20:\x205;\x0a\x09\x09else\x0a\x09\x09\x09face\x20=\x20direction.y\x20>\x200.0\x20?\x201\x20:\x204;\x0a\x09}\x0a\x09return\x20face;\x0a}\x0a#define\x20cubeUV_maxLods1\x20\x20(log2(cubeUV_textureSize*0.25)\x20-\x201.0)\x0a#define\x20cubeUV_rangeClamp\x20(exp2((6.0\x20-\x201.0)\x20*\x202.0))\x0avec2\x20MipLevelInfo(\x20vec3\x20vec,\x20float\x20roughnessLevel,\x20float\x20roughness\x20)\x20{\x0a\x09float\x20scale\x20=\x20exp2(cubeUV_maxLods1\x20-\x20roughnessLevel);\x0a\x09float\x20dxRoughness\x20=\x20dFdx(roughness);\x0a\x09float\x20dyRoughness\x20=\x20dFdy(roughness);\x0a\x09vec3\x20dx\x20=\x20dFdx(\x20vec\x20*\x20scale\x20*\x20dxRoughness\x20);\x0a\x09vec3\x20dy\x20=\x20dFdy(\x20vec\x20*\x20scale\x20*\x20dyRoughness\x20);\x0a\x09float\x20d\x20=\x20max(\x20dot(\x20dx,\x20dx\x20),\x20dot(\x20dy,\x20dy\x20)\x20);\x0a\x09d\x20=\x20clamp(d,\x201.0,\x20cubeUV_rangeClamp);\x0a\x09float\x20mipLevel\x20=\x200.5\x20*\x20log2(d);\x0a\x09return\x20vec2(floor(mipLevel),\x20fract(mipLevel));\x0a}\x0a#define\x20cubeUV_maxLods2\x20(log2(cubeUV_textureSize*0.25)\x20-\x202.0)\x0a#define\x20cubeUV_rcpTextureSize\x20(1.0\x20/\x20cubeUV_textureSize)\x0avec2\x20getCubeUV(vec3\x20direction,\x20float\x20roughnessLevel,\x20float\x20mipLevel)\x20{\x0a\x09mipLevel\x20=\x20roughnessLevel\x20>\x20cubeUV_maxLods2\x20-\x203.0\x20?\x200.0\x20:\x20mipLevel;\x0a\x09float\x20a\x20=\x2016.0\x20*\x20cubeUV_rcpTextureSize;\x0a\x09vec2\x20exp2_packed\x20=\x20exp2(\x20vec2(\x20roughnessLevel,\x20mipLevel\x20)\x20);\x0a\x09vec2\x20rcp_exp2_packed\x20=\x20vec2(\x201.0\x20)\x20/\x20exp2_packed;\x0a\x09float\x20powScale\x20=\x20exp2_packed.x\x20*\x20exp2_packed.y;\x0a\x09float\x20scale\x20=\x20rcp_exp2_packed.x\x20*\x20rcp_exp2_packed.y\x20*\x200.25;\x0a\x09float\x20mipOffset\x20=\x200.75*(1.0\x20-\x20rcp_exp2_packed.y)\x20*\x20rcp_exp2_packed.x;\x0a\x09bool\x20bRes\x20=\x20mipLevel\x20==\x200.0;\x0a\x09scale\x20=\x20\x20bRes\x20&&\x20(scale\x20<\x20a)\x20?\x20a\x20:\x20scale;\x0a\x09vec3\x20r;\x0a\x09vec2\x20offset;\x0a\x09int\x20face\x20=\x20getFaceFromDirection(direction);\x0a\x09float\x20rcpPowScale\x20=\x201.0\x20/\x20powScale;\x0a\x09if(\x20face\x20==\x200)\x20{\x0a\x09\x09r\x20=\x20vec3(direction.x,\x20-direction.z,\x20direction.y);\x0a\x09\x09offset\x20=\x20vec2(0.0+mipOffset,0.75\x20*\x20rcpPowScale);\x0a\x09\x09offset.y\x20=\x20bRes\x20&&\x20(offset.y\x20<\x202.0*a)\x20?\x20a\x20:\x20offset.y;\x0a\x09}\x0a\x09else\x20if(\x20face\x20==\x201)\x20{\x0a\x09\x09r\x20=\x20vec3(direction.y,\x20direction.x,\x20direction.z);\x0a\x09\x09offset\x20=\x20vec2(scale+mipOffset,\x200.75\x20*\x20rcpPowScale);\x0a\x09\x09offset.y\x20=\x20bRes\x20&&\x20(offset.y\x20<\x202.0*a)\x20?\x20a\x20:\x20offset.y;\x0a\x09}\x0a\x09else\x20if(\x20face\x20==\x202)\x20{\x0a\x09\x09r\x20=\x20vec3(direction.z,\x20direction.x,\x20direction.y);\x0a\x09\x09offset\x20=\x20vec2(2.0*scale+mipOffset,\x200.75\x20*\x20rcpPowScale);\x0a\x09\x09offset.y\x20=\x20bRes\x20&&\x20(offset.y\x20<\x202.0*a)\x20?\x20a\x20:\x20offset.y;\x0a\x09}\x0a\x09else\x20if(\x20face\x20==\x203)\x20{\x0a\x09\x09r\x20=\x20vec3(direction.x,\x20direction.z,\x20direction.y);\x0a\x09\x09offset\x20=\x20vec2(0.0+mipOffset,0.5\x20*\x20rcpPowScale);\x0a\x09\x09offset.y\x20=\x20bRes\x20&&\x20(offset.y\x20<\x202.0*a)\x20?\x200.0\x20:\x20offset.y;\x0a\x09}\x0a\x09else\x20if(\x20face\x20==\x204)\x20{\x0a\x09\x09r\x20=\x20vec3(direction.y,\x20direction.x,\x20-direction.z);\x0a\x09\x09offset\x20=\x20vec2(scale+mipOffset,\x200.5\x20*\x20rcpPowScale);\x0a\x09\x09offset.y\x20=\x20bRes\x20&&\x20(offset.y\x20<\x202.0*a)\x20?\x200.0\x20:\x20offset.y;\x0a\x09}\x0a\x09else\x20{\x0a\x09\x09r\x20=\x20vec3(direction.z,\x20-direction.x,\x20direction.y);\x0a\x09\x09offset\x20=\x20vec2(2.0*scale+mipOffset,\x200.5\x20*\x20rcpPowScale);\x0a\x09\x09offset.y\x20=\x20bRes\x20&&\x20(offset.y\x20<\x202.0*a)\x20?\x200.0\x20:\x20offset.y;\x0a\x09}\x0a\x09r\x20=\x20normalize(r);\x0a\x09float\x20texelOffset\x20=\x200.5\x20*\x20cubeUV_rcpTextureSize;\x0a\x09vec2\x20s\x20=\x20(\x20r.yz\x20/\x20abs(\x20r.x\x20)\x20+\x20vec2(\x201.0\x20)\x20)\x20*\x200.5;\x0a\x09vec2\x20base\x20=\x20offset\x20+\x20vec2(\x20texelOffset\x20);\x0a\x09return\x20base\x20+\x20s\x20*\x20(\x20scale\x20-\x202.0\x20*\x20texelOffset\x20);\x0a}\x0a#define\x20cubeUV_maxLods3\x20(log2(cubeUV_textureSize*0.25)\x20-\x203.0)\x0avec4\x20textureCubeUV(\x20sampler2D\x20envMap,\x20vec3\x20reflectedDirection,\x20float\x20roughness\x20)\x20{\x0a\x09float\x20roughnessVal\x20=\x20roughness*\x20cubeUV_maxLods3;\x0a\x09float\x20r1\x20=\x20floor(roughnessVal);\x0a\x09float\x20r2\x20=\x20r1\x20+\x201.0;\x0a\x09float\x20t\x20=\x20fract(roughnessVal);\x0a\x09vec2\x20mipInfo\x20=\x20MipLevelInfo(reflectedDirection,\x20r1,\x20roughness);\x0a\x09float\x20s\x20=\x20mipInfo.y;\x0a\x09float\x20level0\x20=\x20mipInfo.x;\x0a\x09float\x20level1\x20=\x20level0\x20+\x201.0;\x0a\x09level1\x20=\x20level1\x20>\x205.0\x20?\x205.0\x20:\x20level1;\x0a\x09level0\x20+=\x20min(\x20floor(\x20s\x20+\x200.5\x20),\x205.0\x20);\x0a\x09vec2\x20uv_10\x20=\x20getCubeUV(reflectedDirection,\x20r1,\x20level0);\x0a\x09vec4\x20color10\x20=\x20envMapTexelToLinear(texture2D(envMap,\x20uv_10));\x0a\x09vec2\x20uv_20\x20=\x20getCubeUV(reflectedDirection,\x20r2,\x20level0);\x0a\x09vec4\x20color20\x20=\x20envMapTexelToLinear(texture2D(envMap,\x20uv_20));\x0a\x09vec4\x20result\x20=\x20mix(color10,\x20color20,\x20t);\x0a\x09return\x20vec4(result.rgb,\x201.0);\x0a}\x0a#endif',
        'defaultnormal_vertex': 'vec3\x20transformedNormal\x20=\x20normalMatrix\x20*\x20objectNormal;\x0a#ifdef\x20FLIP_SIDED\x0a\x09transformedNormal\x20=\x20-\x20transformedNormal;\x0a#endif\x0a#ifdef\x20USE_TANGENT\x0a\x09vec3\x20transformedTangent\x20=\x20normalMatrix\x20*\x20objectTangent;\x0a\x09#ifdef\x20FLIP_SIDED\x0a\x09\x09transformedTangent\x20=\x20-\x20transformedTangent;\x0a\x09#endif\x0a#endif',
        'displacementmap_pars_vertex': '#ifdef\x20USE_DISPLACEMENTMAP\x0a\x09uniform\x20sampler2D\x20displacementMap;\x0a\x09uniform\x20float\x20displacementScale;\x0a\x09uniform\x20float\x20displacementBias;\x0a#endif',
        'displacementmap_vertex': '#ifdef\x20USE_DISPLACEMENTMAP\x0a\x09transformed\x20+=\x20normalize(\x20objectNormal\x20)\x20*\x20(\x20texture2D(\x20displacementMap,\x20uv\x20).x\x20*\x20displacementScale\x20+\x20displacementBias\x20);\x0a#endif',
        'emissivemap_fragment': '#ifdef\x20USE_EMISSIVEMAP\x0a\x09vec4\x20emissiveColor\x20=\x20texture2D(\x20emissiveMap,\x20vUv\x20);\x0a\x09emissiveColor.rgb\x20=\x20emissiveMapTexelToLinear(\x20emissiveColor\x20).rgb;\x0a\x09totalEmissiveRadiance\x20*=\x20emissiveColor.rgb;\x0a#endif',
        'emissivemap_pars_fragment': '#ifdef\x20USE_EMISSIVEMAP\x0a\x09uniform\x20sampler2D\x20emissiveMap;\x0a#endif',
        'encodings_fragment': 'gl_FragColor\x20=\x20linearToOutputTexel(\x20gl_FragColor\x20);',
        'encodings_pars_fragment': '\x0avec4\x20LinearToLinear(\x20in\x20vec4\x20value\x20)\x20{\x0a\x09return\x20value;\x0a}\x0avec4\x20GammaToLinear(\x20in\x20vec4\x20value,\x20in\x20float\x20gammaFactor\x20)\x20{\x0a\x09return\x20vec4(\x20pow(\x20value.rgb,\x20vec3(\x20gammaFactor\x20)\x20),\x20value.a\x20);\x0a}\x0avec4\x20LinearToGamma(\x20in\x20vec4\x20value,\x20in\x20float\x20gammaFactor\x20)\x20{\x0a\x09return\x20vec4(\x20pow(\x20value.rgb,\x20vec3(\x201.0\x20/\x20gammaFactor\x20)\x20),\x20value.a\x20);\x0a}\x0avec4\x20sRGBToLinear(\x20in\x20vec4\x20value\x20)\x20{\x0a\x09return\x20vec4(\x20mix(\x20pow(\x20value.rgb\x20*\x200.9478672986\x20+\x20vec3(\x200.0521327014\x20),\x20vec3(\x202.4\x20)\x20),\x20value.rgb\x20*\x200.0773993808,\x20vec3(\x20lessThanEqual(\x20value.rgb,\x20vec3(\x200.04045\x20)\x20)\x20)\x20),\x20value.a\x20);\x0a}\x0avec4\x20LinearTosRGB(\x20in\x20vec4\x20value\x20)\x20{\x0a\x09return\x20vec4(\x20mix(\x20pow(\x20value.rgb,\x20vec3(\x200.41666\x20)\x20)\x20*\x201.055\x20-\x20vec3(\x200.055\x20),\x20value.rgb\x20*\x2012.92,\x20vec3(\x20lessThanEqual(\x20value.rgb,\x20vec3(\x200.0031308\x20)\x20)\x20)\x20),\x20value.a\x20);\x0a}\x0avec4\x20RGBEToLinear(\x20in\x20vec4\x20value\x20)\x20{\x0a\x09return\x20vec4(\x20value.rgb\x20*\x20exp2(\x20value.a\x20*\x20255.0\x20-\x20128.0\x20),\x201.0\x20);\x0a}\x0avec4\x20LinearToRGBE(\x20in\x20vec4\x20value\x20)\x20{\x0a\x09float\x20maxComponent\x20=\x20max(\x20max(\x20value.r,\x20value.g\x20),\x20value.b\x20);\x0a\x09float\x20fExp\x20=\x20clamp(\x20ceil(\x20log2(\x20maxComponent\x20)\x20),\x20-128.0,\x20127.0\x20);\x0a\x09return\x20vec4(\x20value.rgb\x20/\x20exp2(\x20fExp\x20),\x20(\x20fExp\x20+\x20128.0\x20)\x20/\x20255.0\x20);\x0a}\x0avec4\x20RGBMToLinear(\x20in\x20vec4\x20value,\x20in\x20float\x20maxRange\x20)\x20{\x0a\x09return\x20vec4(\x20value.rgb\x20*\x20value.a\x20*\x20maxRange,\x201.0\x20);\x0a}\x0avec4\x20LinearToRGBM(\x20in\x20vec4\x20value,\x20in\x20float\x20maxRange\x20)\x20{\x0a\x09float\x20maxRGB\x20=\x20max(\x20value.r,\x20max(\x20value.g,\x20value.b\x20)\x20);\x0a\x09float\x20M\x20=\x20clamp(\x20maxRGB\x20/\x20maxRange,\x200.0,\x201.0\x20);\x0a\x09M\x20=\x20ceil(\x20M\x20*\x20255.0\x20)\x20/\x20255.0;\x0a\x09return\x20vec4(\x20value.rgb\x20/\x20(\x20M\x20*\x20maxRange\x20),\x20M\x20);\x0a}\x0avec4\x20RGBDToLinear(\x20in\x20vec4\x20value,\x20in\x20float\x20maxRange\x20)\x20{\x0a\x09return\x20vec4(\x20value.rgb\x20*\x20(\x20(\x20maxRange\x20/\x20255.0\x20)\x20/\x20value.a\x20),\x201.0\x20);\x0a}\x0avec4\x20LinearToRGBD(\x20in\x20vec4\x20value,\x20in\x20float\x20maxRange\x20)\x20{\x0a\x09float\x20maxRGB\x20=\x20max(\x20value.r,\x20max(\x20value.g,\x20value.b\x20)\x20);\x0a\x09float\x20D\x20=\x20max(\x20maxRange\x20/\x20maxRGB,\x201.0\x20);\x0a\x09D\x20=\x20min(\x20floor(\x20D\x20)\x20/\x20255.0,\x201.0\x20);\x0a\x09return\x20vec4(\x20value.rgb\x20*\x20(\x20D\x20*\x20(\x20255.0\x20/\x20maxRange\x20)\x20),\x20D\x20);\x0a}\x0aconst\x20mat3\x20cLogLuvM\x20=\x20mat3(\x200.2209,\x200.3390,\x200.4184,\x200.1138,\x200.6780,\x200.7319,\x200.0102,\x200.1130,\x200.2969\x20);\x0avec4\x20LinearToLogLuv(\x20in\x20vec4\x20value\x20)\x20\x20{\x0a\x09vec3\x20Xp_Y_XYZp\x20=\x20cLogLuvM\x20*\x20value.rgb;\x0a\x09Xp_Y_XYZp\x20=\x20max(\x20Xp_Y_XYZp,\x20vec3(\x201e-6,\x201e-6,\x201e-6\x20)\x20);\x0a\x09vec4\x20vResult;\x0a\x09vResult.xy\x20=\x20Xp_Y_XYZp.xy\x20/\x20Xp_Y_XYZp.z;\x0a\x09float\x20Le\x20=\x202.0\x20*\x20log2(Xp_Y_XYZp.y)\x20+\x20127.0;\x0a\x09vResult.w\x20=\x20fract(\x20Le\x20);\x0a\x09vResult.z\x20=\x20(\x20Le\x20-\x20(\x20floor(\x20vResult.w\x20*\x20255.0\x20)\x20)\x20/\x20255.0\x20)\x20/\x20255.0;\x0a\x09return\x20vResult;\x0a}\x0aconst\x20mat3\x20cLogLuvInverseM\x20=\x20mat3(\x206.0014,\x20-2.7008,\x20-1.7996,\x20-1.3320,\x203.1029,\x20-5.7721,\x200.3008,\x20-1.0882,\x205.6268\x20);\x0avec4\x20LogLuvToLinear(\x20in\x20vec4\x20value\x20)\x20{\x0a\x09float\x20Le\x20=\x20value.z\x20*\x20255.0\x20+\x20value.w;\x0a\x09vec3\x20Xp_Y_XYZp;\x0a\x09Xp_Y_XYZp.y\x20=\x20exp2(\x20(\x20Le\x20-\x20127.0\x20)\x20/\x202.0\x20);\x0a\x09Xp_Y_XYZp.z\x20=\x20Xp_Y_XYZp.y\x20/\x20value.y;\x0a\x09Xp_Y_XYZp.x\x20=\x20value.x\x20*\x20Xp_Y_XYZp.z;\x0a\x09vec3\x20vRGB\x20=\x20cLogLuvInverseM\x20*\x20Xp_Y_XYZp.rgb;\x0a\x09return\x20vec4(\x20max(\x20vRGB,\x200.0\x20),\x201.0\x20);\x0a}',
        'envmap_fragment': '#ifdef\x20USE_ENVMAP\x0a\x09#if\x20defined(\x20USE_BUMPMAP\x20)\x20||\x20defined(\x20USE_NORMALMAP\x20)\x20||\x20defined(\x20PHONG\x20)\x0a\x09\x09vec3\x20cameraToVertex\x20=\x20normalize(\x20vWorldPosition\x20-\x20cameraPosition\x20);\x0a\x09\x09vec3\x20worldNormal\x20=\x20inverseTransformDirection(\x20normal,\x20viewMatrix\x20);\x0a\x09\x09#ifdef\x20ENVMAP_MODE_REFLECTION\x0a\x09\x09\x09vec3\x20reflectVec\x20=\x20reflect(\x20cameraToVertex,\x20worldNormal\x20);\x0a\x09\x09#else\x0a\x09\x09\x09vec3\x20reflectVec\x20=\x20refract(\x20cameraToVertex,\x20worldNormal,\x20refractionRatio\x20);\x0a\x09\x09#endif\x0a\x09#else\x0a\x09\x09vec3\x20reflectVec\x20=\x20vReflect;\x0a\x09#endif\x0a\x09#ifdef\x20ENVMAP_TYPE_CUBE\x0a\x09\x09vec4\x20envColor\x20=\x20textureCube(\x20envMap,\x20vec3(\x20flipEnvMap\x20*\x20reflectVec.x,\x20reflectVec.yz\x20)\x20);\x0a\x09#elif\x20defined(\x20ENVMAP_TYPE_EQUIREC\x20)\x0a\x09\x09vec2\x20sampleUV;\x0a\x09\x09reflectVec\x20=\x20normalize(\x20reflectVec\x20);\x0a\x09\x09sampleUV.y\x20=\x20asin(\x20clamp(\x20reflectVec.y,\x20-\x201.0,\x201.0\x20)\x20)\x20*\x20RECIPROCAL_PI\x20+\x200.5;\x0a\x09\x09sampleUV.x\x20=\x20atan(\x20reflectVec.z,\x20reflectVec.x\x20)\x20*\x20RECIPROCAL_PI2\x20+\x200.5;\x0a\x09\x09vec4\x20envColor\x20=\x20texture2D(\x20envMap,\x20sampleUV\x20);\x0a\x09#elif\x20defined(\x20ENVMAP_TYPE_SPHERE\x20)\x0a\x09\x09reflectVec\x20=\x20normalize(\x20reflectVec\x20);\x0a\x09\x09vec3\x20reflectView\x20=\x20normalize(\x20(\x20viewMatrix\x20*\x20vec4(\x20reflectVec,\x200.0\x20)\x20).xyz\x20+\x20vec3(\x200.0,\x200.0,\x201.0\x20)\x20);\x0a\x09\x09vec4\x20envColor\x20=\x20texture2D(\x20envMap,\x20reflectView.xy\x20*\x200.5\x20+\x200.5\x20);\x0a\x09#else\x0a\x09\x09vec4\x20envColor\x20=\x20vec4(\x200.0\x20);\x0a\x09#endif\x0a\x09envColor\x20=\x20envMapTexelToLinear(\x20envColor\x20);\x0a\x09#ifdef\x20ENVMAP_BLENDING_MULTIPLY\x0a\x09\x09outgoingLight\x20=\x20mix(\x20outgoingLight,\x20outgoingLight\x20*\x20envColor.xyz,\x20specularStrength\x20*\x20reflectivity\x20);\x0a\x09#elif\x20defined(\x20ENVMAP_BLENDING_MIX\x20)\x0a\x09\x09outgoingLight\x20=\x20mix(\x20outgoingLight,\x20envColor.xyz,\x20specularStrength\x20*\x20reflectivity\x20);\x0a\x09#elif\x20defined(\x20ENVMAP_BLENDING_ADD\x20)\x0a\x09\x09outgoingLight\x20+=\x20envColor.xyz\x20*\x20specularStrength\x20*\x20reflectivity;\x0a\x09#endif\x0a#endif',
        'envmap_pars_fragment': '#if\x20defined(\x20USE_ENVMAP\x20)\x20||\x20defined(\x20PHYSICAL\x20)\x0a\x09uniform\x20float\x20reflectivity;\x0a\x09uniform\x20float\x20envMapIntensity;\x0a#endif\x0a#ifdef\x20USE_ENVMAP\x0a\x09#if\x20!\x20defined(\x20PHYSICAL\x20)\x20&&\x20(\x20defined(\x20USE_BUMPMAP\x20)\x20||\x20defined(\x20USE_NORMALMAP\x20)\x20||\x20defined(\x20PHONG\x20)\x20)\x0a\x09\x09varying\x20vec3\x20vWorldPosition;\x0a\x09#endif\x0a\x09#ifdef\x20ENVMAP_TYPE_CUBE\x0a\x09\x09uniform\x20samplerCube\x20envMap;\x0a\x09#else\x0a\x09\x09uniform\x20sampler2D\x20envMap;\x0a\x09#endif\x0a\x09uniform\x20float\x20flipEnvMap;\x0a\x09uniform\x20int\x20maxMipLevel;\x0a\x09#if\x20defined(\x20USE_BUMPMAP\x20)\x20||\x20defined(\x20USE_NORMALMAP\x20)\x20||\x20defined(\x20PHONG\x20)\x20||\x20defined(\x20PHYSICAL\x20)\x0a\x09\x09uniform\x20float\x20refractionRatio;\x0a\x09#else\x0a\x09\x09varying\x20vec3\x20vReflect;\x0a\x09#endif\x0a#endif',
        'envmap_pars_vertex': '#ifdef\x20USE_ENVMAP\x0a\x09#if\x20defined(\x20USE_BUMPMAP\x20)\x20||\x20defined(\x20USE_NORMALMAP\x20)\x20||\x20defined(\x20PHONG\x20)\x0a\x09\x09varying\x20vec3\x20vWorldPosition;\x0a\x09#else\x0a\x09\x09varying\x20vec3\x20vReflect;\x0a\x09\x09uniform\x20float\x20refractionRatio;\x0a\x09#endif\x0a#endif',
        'envmap_physical_pars_fragment': '#if\x20defined(\x20USE_ENVMAP\x20)\x20&&\x20defined(\x20PHYSICAL\x20)\x0a\x09vec3\x20getLightProbeIndirectIrradiance(\x20const\x20in\x20GeometricContext\x20geometry,\x20const\x20in\x20int\x20maxMIPLevel\x20)\x20{\x0a\x09\x09vec3\x20worldNormal\x20=\x20inverseTransformDirection(\x20geometry.normal,\x20viewMatrix\x20);\x0a\x09\x09#ifdef\x20ENVMAP_TYPE_CUBE\x0a\x09\x09\x09vec3\x20queryVec\x20=\x20vec3(\x20flipEnvMap\x20*\x20worldNormal.x,\x20worldNormal.yz\x20);\x0a\x09\x09\x09#ifdef\x20TEXTURE_LOD_EXT\x0a\x09\x09\x09\x09vec4\x20envMapColor\x20=\x20textureCubeLodEXT(\x20envMap,\x20queryVec,\x20float(\x20maxMIPLevel\x20)\x20);\x0a\x09\x09\x09#else\x0a\x09\x09\x09\x09vec4\x20envMapColor\x20=\x20textureCube(\x20envMap,\x20queryVec,\x20float(\x20maxMIPLevel\x20)\x20);\x0a\x09\x09\x09#endif\x0a\x09\x09\x09envMapColor.rgb\x20=\x20envMapTexelToLinear(\x20envMapColor\x20).rgb;\x0a\x09\x09#elif\x20defined(\x20ENVMAP_TYPE_CUBE_UV\x20)\x0a\x09\x09\x09vec3\x20queryVec\x20=\x20vec3(\x20flipEnvMap\x20*\x20worldNormal.x,\x20worldNormal.yz\x20);\x0a\x09\x09\x09vec4\x20envMapColor\x20=\x20textureCubeUV(\x20envMap,\x20queryVec,\x201.0\x20);\x0a\x09\x09#else\x0a\x09\x09\x09vec4\x20envMapColor\x20=\x20vec4(\x200.0\x20);\x0a\x09\x09#endif\x0a\x09\x09return\x20PI\x20*\x20envMapColor.rgb\x20*\x20envMapIntensity;\x0a\x09}\x0a\x09float\x20getSpecularMIPLevel(\x20const\x20in\x20float\x20blinnShininessExponent,\x20const\x20in\x20int\x20maxMIPLevel\x20)\x20{\x0a\x09\x09float\x20maxMIPLevelScalar\x20=\x20float(\x20maxMIPLevel\x20);\x0a\x09\x09float\x20desiredMIPLevel\x20=\x20maxMIPLevelScalar\x20+\x200.79248\x20-\x200.5\x20*\x20log2(\x20pow2(\x20blinnShininessExponent\x20)\x20+\x201.0\x20);\x0a\x09\x09return\x20clamp(\x20desiredMIPLevel,\x200.0,\x20maxMIPLevelScalar\x20);\x0a\x09}\x0a\x09vec3\x20getLightProbeIndirectRadiance(\x20const\x20in\x20GeometricContext\x20geometry,\x20const\x20in\x20float\x20blinnShininessExponent,\x20const\x20in\x20int\x20maxMIPLevel\x20)\x20{\x0a\x09\x09#ifdef\x20ENVMAP_MODE_REFLECTION\x0a\x09\x09\x09vec3\x20reflectVec\x20=\x20reflect(\x20-geometry.viewDir,\x20geometry.normal\x20);\x0a\x09\x09#else\x0a\x09\x09\x09vec3\x20reflectVec\x20=\x20refract(\x20-geometry.viewDir,\x20geometry.normal,\x20refractionRatio\x20);\x0a\x09\x09#endif\x0a\x09\x09reflectVec\x20=\x20inverseTransformDirection(\x20reflectVec,\x20viewMatrix\x20);\x0a\x09\x09float\x20specularMIPLevel\x20=\x20getSpecularMIPLevel(\x20blinnShininessExponent,\x20maxMIPLevel\x20);\x0a\x09\x09#ifdef\x20ENVMAP_TYPE_CUBE\x0a\x09\x09\x09vec3\x20queryReflectVec\x20=\x20vec3(\x20flipEnvMap\x20*\x20reflectVec.x,\x20reflectVec.yz\x20);\x0a\x09\x09\x09#ifdef\x20TEXTURE_LOD_EXT\x0a\x09\x09\x09\x09vec4\x20envMapColor\x20=\x20textureCubeLodEXT(\x20envMap,\x20queryReflectVec,\x20specularMIPLevel\x20);\x0a\x09\x09\x09#else\x0a\x09\x09\x09\x09vec4\x20envMapColor\x20=\x20textureCube(\x20envMap,\x20queryReflectVec,\x20specularMIPLevel\x20);\x0a\x09\x09\x09#endif\x0a\x09\x09\x09envMapColor.rgb\x20=\x20envMapTexelToLinear(\x20envMapColor\x20).rgb;\x0a\x09\x09#elif\x20defined(\x20ENVMAP_TYPE_CUBE_UV\x20)\x0a\x09\x09\x09vec3\x20queryReflectVec\x20=\x20vec3(\x20flipEnvMap\x20*\x20reflectVec.x,\x20reflectVec.yz\x20);\x0a\x09\x09\x09vec4\x20envMapColor\x20=\x20textureCubeUV(\x20envMap,\x20queryReflectVec,\x20BlinnExponentToGGXRoughness(blinnShininessExponent\x20));\x0a\x09\x09#elif\x20defined(\x20ENVMAP_TYPE_EQUIREC\x20)\x0a\x09\x09\x09vec2\x20sampleUV;\x0a\x09\x09\x09sampleUV.y\x20=\x20asin(\x20clamp(\x20reflectVec.y,\x20-\x201.0,\x201.0\x20)\x20)\x20*\x20RECIPROCAL_PI\x20+\x200.5;\x0a\x09\x09\x09sampleUV.x\x20=\x20atan(\x20reflectVec.z,\x20reflectVec.x\x20)\x20*\x20RECIPROCAL_PI2\x20+\x200.5;\x0a\x09\x09\x09#ifdef\x20TEXTURE_LOD_EXT\x0a\x09\x09\x09\x09vec4\x20envMapColor\x20=\x20texture2DLodEXT(\x20envMap,\x20sampleUV,\x20specularMIPLevel\x20);\x0a\x09\x09\x09#else\x0a\x09\x09\x09\x09vec4\x20envMapColor\x20=\x20texture2D(\x20envMap,\x20sampleUV,\x20specularMIPLevel\x20);\x0a\x09\x09\x09#endif\x0a\x09\x09\x09envMapColor.rgb\x20=\x20envMapTexelToLinear(\x20envMapColor\x20).rgb;\x0a\x09\x09#elif\x20defined(\x20ENVMAP_TYPE_SPHERE\x20)\x0a\x09\x09\x09vec3\x20reflectView\x20=\x20normalize(\x20(\x20viewMatrix\x20*\x20vec4(\x20reflectVec,\x200.0\x20)\x20).xyz\x20+\x20vec3(\x200.0,0.0,1.0\x20)\x20);\x0a\x09\x09\x09#ifdef\x20TEXTURE_LOD_EXT\x0a\x09\x09\x09\x09vec4\x20envMapColor\x20=\x20texture2DLodEXT(\x20envMap,\x20reflectView.xy\x20*\x200.5\x20+\x200.5,\x20specularMIPLevel\x20);\x0a\x09\x09\x09#else\x0a\x09\x09\x09\x09vec4\x20envMapColor\x20=\x20texture2D(\x20envMap,\x20reflectView.xy\x20*\x200.5\x20+\x200.5,\x20specularMIPLevel\x20);\x0a\x09\x09\x09#endif\x0a\x09\x09\x09envMapColor.rgb\x20=\x20envMapTexelToLinear(\x20envMapColor\x20).rgb;\x0a\x09\x09#endif\x0a\x09\x09return\x20envMapColor.rgb\x20*\x20envMapIntensity;\x0a\x09}\x0a#endif',
        'envmap_vertex': '#ifdef\x20USE_ENVMAP\x0a\x09#if\x20defined(\x20USE_BUMPMAP\x20)\x20||\x20defined(\x20USE_NORMALMAP\x20)\x20||\x20defined(\x20PHONG\x20)\x0a\x09\x09vWorldPosition\x20=\x20worldPosition.xyz;\x0a\x09#else\x0a\x09\x09vec3\x20cameraToVertex\x20=\x20normalize(\x20worldPosition.xyz\x20-\x20cameraPosition\x20);\x0a\x09\x09vec3\x20worldNormal\x20=\x20inverseTransformDirection(\x20transformedNormal,\x20viewMatrix\x20);\x0a\x09\x09#ifdef\x20ENVMAP_MODE_REFLECTION\x0a\x09\x09\x09vReflect\x20=\x20reflect(\x20cameraToVertex,\x20worldNormal\x20);\x0a\x09\x09#else\x0a\x09\x09\x09vReflect\x20=\x20refract(\x20cameraToVertex,\x20worldNormal,\x20refractionRatio\x20);\x0a\x09\x09#endif\x0a\x09#endif\x0a#endif',
        'fog_vertex': '#ifdef\x20USE_FOG\x0a\x09fogDepth\x20=\x20-mvPosition.z;\x0a#endif',
        'fog_pars_vertex': '#ifdef\x20USE_FOG\x0a\x09varying\x20float\x20fogDepth;\x0a#endif',
        'fog_fragment': '#ifdef\x20USE_FOG\x0a\x09#ifdef\x20FOG_EXP2\x0a\x09\x09float\x20fogFactor\x20=\x20whiteCompliment(\x20exp2(\x20-\x20fogDensity\x20*\x20fogDensity\x20*\x20fogDepth\x20*\x20fogDepth\x20*\x20LOG2\x20)\x20);\x0a\x09#else\x0a\x09\x09float\x20fogFactor\x20=\x20smoothstep(\x20fogNear,\x20fogFar,\x20fogDepth\x20);\x0a\x09#endif\x0a\x09gl_FragColor.rgb\x20=\x20mix(\x20gl_FragColor.rgb,\x20fogColor,\x20fogFactor\x20);\x0a#endif',
        'fog_pars_fragment': '#ifdef\x20USE_FOG\x0a\x09uniform\x20vec3\x20fogColor;\x0a\x09varying\x20float\x20fogDepth;\x0a\x09#ifdef\x20FOG_EXP2\x0a\x09\x09uniform\x20float\x20fogDensity;\x0a\x09#else\x0a\x09\x09uniform\x20float\x20fogNear;\x0a\x09\x09uniform\x20float\x20fogFar;\x0a\x09#endif\x0a#endif',
        'gradientmap_pars_fragment': '#ifdef\x20TOON\x0a\x09uniform\x20sampler2D\x20gradientMap;\x0a\x09vec3\x20getGradientIrradiance(\x20vec3\x20normal,\x20vec3\x20lightDirection\x20)\x20{\x0a\x09\x09float\x20dotNL\x20=\x20dot(\x20normal,\x20lightDirection\x20);\x0a\x09\x09vec2\x20coord\x20=\x20vec2(\x20dotNL\x20*\x200.5\x20+\x200.5,\x200.0\x20);\x0a\x09\x09#ifdef\x20USE_GRADIENTMAP\x0a\x09\x09\x09return\x20texture2D(\x20gradientMap,\x20coord\x20).rgb;\x0a\x09\x09#else\x0a\x09\x09\x09return\x20(\x20coord.x\x20<\x200.7\x20)\x20?\x20vec3(\x200.7\x20)\x20:\x20vec3(\x201.0\x20);\x0a\x09\x09#endif\x0a\x09}\x0a#endif',
        'lightmap_fragment': '#ifdef\x20USE_LIGHTMAP\x0a\x09reflectedLight.indirectDiffuse\x20+=\x20PI\x20*\x20texture2D(\x20lightMap,\x20vUv2\x20).xyz\x20*\x20lightMapIntensity;\x0a#endif',
        'lightmap_pars_fragment': '#ifdef\x20USE_LIGHTMAP\x0a\x09uniform\x20sampler2D\x20lightMap;\x0a\x09uniform\x20float\x20lightMapIntensity;\x0a#endif',
        'lights_lambert_vertex': 'vec3\x20diffuse\x20=\x20vec3(\x201.0\x20);\x0aGeometricContext\x20geometry;\x0ageometry.position\x20=\x20mvPosition.xyz;\x0ageometry.normal\x20=\x20normalize(\x20transformedNormal\x20);\x0ageometry.viewDir\x20=\x20normalize(\x20-mvPosition.xyz\x20);\x0aGeometricContext\x20backGeometry;\x0abackGeometry.position\x20=\x20geometry.position;\x0abackGeometry.normal\x20=\x20-geometry.normal;\x0abackGeometry.viewDir\x20=\x20geometry.viewDir;\x0avLightFront\x20=\x20vec3(\x200.0\x20);\x0avIndirectFront\x20=\x20vec3(\x200.0\x20);\x0a#ifdef\x20DOUBLE_SIDED\x0a\x09vLightBack\x20=\x20vec3(\x200.0\x20);\x0a\x09vIndirectBack\x20=\x20vec3(\x200.0\x20);\x0a#endif\x0aIncidentLight\x20directLight;\x0afloat\x20dotNL;\x0avec3\x20directLightColor_Diffuse;\x0a#if\x20NUM_POINT_LIGHTS\x20>\x200\x0a\x09#pragma\x20unroll_loop\x0a\x09for\x20(\x20int\x20i\x20=\x200;\x20i\x20<\x20NUM_POINT_LIGHTS;\x20i\x20++\x20)\x20{\x0a\x09\x09getPointDirectLightIrradiance(\x20pointLights[\x20i\x20],\x20geometry,\x20directLight\x20);\x0a\x09\x09dotNL\x20=\x20dot(\x20geometry.normal,\x20directLight.direction\x20);\x0a\x09\x09directLightColor_Diffuse\x20=\x20PI\x20*\x20directLight.color;\x0a\x09\x09vLightFront\x20+=\x20saturate(\x20dotNL\x20)\x20*\x20directLightColor_Diffuse;\x0a\x09\x09#ifdef\x20DOUBLE_SIDED\x0a\x09\x09\x09vLightBack\x20+=\x20saturate(\x20-dotNL\x20)\x20*\x20directLightColor_Diffuse;\x0a\x09\x09#endif\x0a\x09}\x0a#endif\x0a#if\x20NUM_SPOT_LIGHTS\x20>\x200\x0a\x09#pragma\x20unroll_loop\x0a\x09for\x20(\x20int\x20i\x20=\x200;\x20i\x20<\x20NUM_SPOT_LIGHTS;\x20i\x20++\x20)\x20{\x0a\x09\x09getSpotDirectLightIrradiance(\x20spotLights[\x20i\x20],\x20geometry,\x20directLight\x20);\x0a\x09\x09dotNL\x20=\x20dot(\x20geometry.normal,\x20directLight.direction\x20);\x0a\x09\x09directLightColor_Diffuse\x20=\x20PI\x20*\x20directLight.color;\x0a\x09\x09vLightFront\x20+=\x20saturate(\x20dotNL\x20)\x20*\x20directLightColor_Diffuse;\x0a\x09\x09#ifdef\x20DOUBLE_SIDED\x0a\x09\x09\x09vLightBack\x20+=\x20saturate(\x20-dotNL\x20)\x20*\x20directLightColor_Diffuse;\x0a\x09\x09#endif\x0a\x09}\x0a#endif\x0a#if\x20NUM_DIR_LIGHTS\x20>\x200\x0a\x09#pragma\x20unroll_loop\x0a\x09for\x20(\x20int\x20i\x20=\x200;\x20i\x20<\x20NUM_DIR_LIGHTS;\x20i\x20++\x20)\x20{\x0a\x09\x09getDirectionalDirectLightIrradiance(\x20directionalLights[\x20i\x20],\x20geometry,\x20directLight\x20);\x0a\x09\x09dotNL\x20=\x20dot(\x20geometry.normal,\x20directLight.direction\x20);\x0a\x09\x09directLightColor_Diffuse\x20=\x20PI\x20*\x20directLight.color;\x0a\x09\x09vLightFront\x20+=\x20saturate(\x20dotNL\x20)\x20*\x20directLightColor_Diffuse;\x0a\x09\x09#ifdef\x20DOUBLE_SIDED\x0a\x09\x09\x09vLightBack\x20+=\x20saturate(\x20-dotNL\x20)\x20*\x20directLightColor_Diffuse;\x0a\x09\x09#endif\x0a\x09}\x0a#endif\x0a#if\x20NUM_HEMI_LIGHTS\x20>\x200\x0a\x09#pragma\x20unroll_loop\x0a\x09for\x20(\x20int\x20i\x20=\x200;\x20i\x20<\x20NUM_HEMI_LIGHTS;\x20i\x20++\x20)\x20{\x0a\x09\x09vIndirectFront\x20+=\x20getHemisphereLightIrradiance(\x20hemisphereLights[\x20i\x20],\x20geometry\x20);\x0a\x09\x09#ifdef\x20DOUBLE_SIDED\x0a\x09\x09\x09vIndirectBack\x20+=\x20getHemisphereLightIrradiance(\x20hemisphereLights[\x20i\x20],\x20backGeometry\x20);\x0a\x09\x09#endif\x0a\x09}\x0a#endif',
        'lights_pars_begin': 'uniform\x20vec3\x20ambientLightColor;\x0auniform\x20vec3\x20lightProbe[\x209\x20];\x0avec3\x20shGetIrradianceAt(\x20in\x20vec3\x20normal,\x20in\x20vec3\x20shCoefficients[\x209\x20]\x20)\x20{\x0a\x09float\x20x\x20=\x20normal.x,\x20y\x20=\x20normal.y,\x20z\x20=\x20normal.z;\x0a\x09vec3\x20result\x20=\x20shCoefficients[\x200\x20]\x20*\x200.886227;\x0a\x09result\x20+=\x20shCoefficients[\x201\x20]\x20*\x202.0\x20*\x200.511664\x20*\x20y;\x0a\x09result\x20+=\x20shCoefficients[\x202\x20]\x20*\x202.0\x20*\x200.511664\x20*\x20z;\x0a\x09result\x20+=\x20shCoefficients[\x203\x20]\x20*\x202.0\x20*\x200.511664\x20*\x20x;\x0a\x09result\x20+=\x20shCoefficients[\x204\x20]\x20*\x202.0\x20*\x200.429043\x20*\x20x\x20*\x20y;\x0a\x09result\x20+=\x20shCoefficients[\x205\x20]\x20*\x202.0\x20*\x200.429043\x20*\x20y\x20*\x20z;\x0a\x09result\x20+=\x20shCoefficients[\x206\x20]\x20*\x20(\x200.743125\x20*\x20z\x20*\x20z\x20-\x200.247708\x20);\x0a\x09result\x20+=\x20shCoefficients[\x207\x20]\x20*\x202.0\x20*\x200.429043\x20*\x20x\x20*\x20z;\x0a\x09result\x20+=\x20shCoefficients[\x208\x20]\x20*\x200.429043\x20*\x20(\x20x\x20*\x20x\x20-\x20y\x20*\x20y\x20);\x0a\x09return\x20result;\x0a}\x0avec3\x20getLightProbeIrradiance(\x20const\x20in\x20vec3\x20lightProbe[\x209\x20],\x20const\x20in\x20GeometricContext\x20geometry\x20)\x20{\x0a\x09vec3\x20worldNormal\x20=\x20inverseTransformDirection(\x20geometry.normal,\x20viewMatrix\x20);\x0a\x09vec3\x20irradiance\x20=\x20shGetIrradianceAt(\x20worldNormal,\x20lightProbe\x20);\x0a\x09return\x20irradiance;\x0a}\x0avec3\x20getAmbientLightIrradiance(\x20const\x20in\x20vec3\x20ambientLightColor\x20)\x20{\x0a\x09vec3\x20irradiance\x20=\x20ambientLightColor;\x0a\x09#ifndef\x20PHYSICALLY_CORRECT_LIGHTS\x0a\x09\x09irradiance\x20*=\x20PI;\x0a\x09#endif\x0a\x09return\x20irradiance;\x0a}\x0a#if\x20NUM_DIR_LIGHTS\x20>\x200\x0a\x09struct\x20DirectionalLight\x20{\x0a\x09\x09vec3\x20direction;\x0a\x09\x09vec3\x20color;\x0a\x09\x09int\x20shadow;\x0a\x09\x09float\x20shadowBias;\x0a\x09\x09float\x20shadowRadius;\x0a\x09\x09vec2\x20shadowMapSize;\x0a\x09};\x0a\x09uniform\x20DirectionalLight\x20directionalLights[\x20NUM_DIR_LIGHTS\x20];\x0a\x09void\x20getDirectionalDirectLightIrradiance(\x20const\x20in\x20DirectionalLight\x20directionalLight,\x20const\x20in\x20GeometricContext\x20geometry,\x20out\x20IncidentLight\x20directLight\x20)\x20{\x0a\x09\x09directLight.color\x20=\x20directionalLight.color;\x0a\x09\x09directLight.direction\x20=\x20directionalLight.direction;\x0a\x09\x09directLight.visible\x20=\x20true;\x0a\x09}\x0a#endif\x0a#if\x20NUM_POINT_LIGHTS\x20>\x200\x0a\x09struct\x20PointLight\x20{\x0a\x09\x09vec3\x20position;\x0a\x09\x09vec3\x20color;\x0a\x09\x09float\x20distance;\x0a\x09\x09float\x20decay;\x0a\x09\x09int\x20shadow;\x0a\x09\x09float\x20shadowBias;\x0a\x09\x09float\x20shadowRadius;\x0a\x09\x09vec2\x20shadowMapSize;\x0a\x09\x09float\x20shadowCameraNear;\x0a\x09\x09float\x20shadowCameraFar;\x0a\x09};\x0a\x09uniform\x20PointLight\x20pointLights[\x20NUM_POINT_LIGHTS\x20];\x0a\x09void\x20getPointDirectLightIrradiance(\x20const\x20in\x20PointLight\x20pointLight,\x20const\x20in\x20GeometricContext\x20geometry,\x20out\x20IncidentLight\x20directLight\x20)\x20{\x0a\x09\x09vec3\x20lVector\x20=\x20pointLight.position\x20-\x20geometry.position;\x0a\x09\x09directLight.direction\x20=\x20normalize(\x20lVector\x20);\x0a\x09\x09float\x20lightDistance\x20=\x20length(\x20lVector\x20);\x0a\x09\x09directLight.color\x20=\x20pointLight.color;\x0a\x09\x09directLight.color\x20*=\x20punctualLightIntensityToIrradianceFactor(\x20lightDistance,\x20pointLight.distance,\x20pointLight.decay\x20);\x0a\x09\x09directLight.visible\x20=\x20(\x20directLight.color\x20!=\x20vec3(\x200.0\x20)\x20);\x0a\x09}\x0a#endif\x0a#if\x20NUM_SPOT_LIGHTS\x20>\x200\x0a\x09struct\x20SpotLight\x20{\x0a\x09\x09vec3\x20position;\x0a\x09\x09vec3\x20direction;\x0a\x09\x09vec3\x20color;\x0a\x09\x09float\x20distance;\x0a\x09\x09float\x20decay;\x0a\x09\x09float\x20coneCos;\x0a\x09\x09float\x20penumbraCos;\x0a\x09\x09int\x20shadow;\x0a\x09\x09float\x20shadowBias;\x0a\x09\x09float\x20shadowRadius;\x0a\x09\x09vec2\x20shadowMapSize;\x0a\x09};\x0a\x09uniform\x20SpotLight\x20spotLights[\x20NUM_SPOT_LIGHTS\x20];\x0a\x09void\x20getSpotDirectLightIrradiance(\x20const\x20in\x20SpotLight\x20spotLight,\x20const\x20in\x20GeometricContext\x20geometry,\x20out\x20IncidentLight\x20directLight\x20\x20)\x20{\x0a\x09\x09vec3\x20lVector\x20=\x20spotLight.position\x20-\x20geometry.position;\x0a\x09\x09directLight.direction\x20=\x20normalize(\x20lVector\x20);\x0a\x09\x09float\x20lightDistance\x20=\x20length(\x20lVector\x20);\x0a\x09\x09float\x20angleCos\x20=\x20dot(\x20directLight.direction,\x20spotLight.direction\x20);\x0a\x09\x09if\x20(\x20angleCos\x20>\x20spotLight.coneCos\x20)\x20{\x0a\x09\x09\x09float\x20spotEffect\x20=\x20smoothstep(\x20spotLight.coneCos,\x20spotLight.penumbraCos,\x20angleCos\x20);\x0a\x09\x09\x09directLight.color\x20=\x20spotLight.color;\x0a\x09\x09\x09directLight.color\x20*=\x20spotEffect\x20*\x20punctualLightIntensityToIrradianceFactor(\x20lightDistance,\x20spotLight.distance,\x20spotLight.decay\x20);\x0a\x09\x09\x09directLight.visible\x20=\x20true;\x0a\x09\x09}\x20else\x20{\x0a\x09\x09\x09directLight.color\x20=\x20vec3(\x200.0\x20);\x0a\x09\x09\x09directLight.visible\x20=\x20false;\x0a\x09\x09}\x0a\x09}\x0a#endif\x0a#if\x20NUM_RECT_AREA_LIGHTS\x20>\x200\x0a\x09struct\x20RectAreaLight\x20{\x0a\x09\x09vec3\x20color;\x0a\x09\x09vec3\x20position;\x0a\x09\x09vec3\x20halfWidth;\x0a\x09\x09vec3\x20halfHeight;\x0a\x09};\x0a\x09uniform\x20sampler2D\x20ltc_1;\x09uniform\x20sampler2D\x20ltc_2;\x0a\x09uniform\x20RectAreaLight\x20rectAreaLights[\x20NUM_RECT_AREA_LIGHTS\x20];\x0a#endif\x0a#if\x20NUM_HEMI_LIGHTS\x20>\x200\x0a\x09struct\x20HemisphereLight\x20{\x0a\x09\x09vec3\x20direction;\x0a\x09\x09vec3\x20skyColor;\x0a\x09\x09vec3\x20groundColor;\x0a\x09};\x0a\x09uniform\x20HemisphereLight\x20hemisphereLights[\x20NUM_HEMI_LIGHTS\x20];\x0a\x09vec3\x20getHemisphereLightIrradiance(\x20const\x20in\x20HemisphereLight\x20hemiLight,\x20const\x20in\x20GeometricContext\x20geometry\x20)\x20{\x0a\x09\x09float\x20dotNL\x20=\x20dot(\x20geometry.normal,\x20hemiLight.direction\x20);\x0a\x09\x09float\x20hemiDiffuseWeight\x20=\x200.5\x20*\x20dotNL\x20+\x200.5;\x0a\x09\x09vec3\x20irradiance\x20=\x20mix(\x20hemiLight.groundColor,\x20hemiLight.skyColor,\x20hemiDiffuseWeight\x20);\x0a\x09\x09#ifndef\x20PHYSICALLY_CORRECT_LIGHTS\x0a\x09\x09\x09irradiance\x20*=\x20PI;\x0a\x09\x09#endif\x0a\x09\x09return\x20irradiance;\x0a\x09}\x0a#endif',
        'lights_phong_fragment': 'BlinnPhongMaterial\x20material;\x0amaterial.diffuseColor\x20=\x20diffuseColor.rgb;\x0amaterial.specularColor\x20=\x20specular;\x0amaterial.specularShininess\x20=\x20shininess;\x0amaterial.specularStrength\x20=\x20specularStrength;',
        'lights_phong_pars_fragment': 'varying\x20vec3\x20vViewPosition;\x0a#ifndef\x20FLAT_SHADED\x0a\x09varying\x20vec3\x20vNormal;\x0a#endif\x0astruct\x20BlinnPhongMaterial\x20{\x0a\x09vec3\x09diffuseColor;\x0a\x09vec3\x09specularColor;\x0a\x09float\x09specularShininess;\x0a\x09float\x09specularStrength;\x0a};\x0avoid\x20RE_Direct_BlinnPhong(\x20const\x20in\x20IncidentLight\x20directLight,\x20const\x20in\x20GeometricContext\x20geometry,\x20const\x20in\x20BlinnPhongMaterial\x20material,\x20inout\x20ReflectedLight\x20reflectedLight\x20)\x20{\x0a\x09#ifdef\x20TOON\x0a\x09\x09vec3\x20irradiance\x20=\x20getGradientIrradiance(\x20geometry.normal,\x20directLight.direction\x20)\x20*\x20directLight.color;\x0a\x09#else\x0a\x09\x09float\x20dotNL\x20=\x20saturate(\x20dot(\x20geometry.normal,\x20directLight.direction\x20)\x20);\x0a\x09\x09vec3\x20irradiance\x20=\x20dotNL\x20*\x20directLight.color;\x0a\x09#endif\x0a\x09#ifndef\x20PHYSICALLY_CORRECT_LIGHTS\x0a\x09\x09irradiance\x20*=\x20PI;\x0a\x09#endif\x0a\x09reflectedLight.directDiffuse\x20+=\x20irradiance\x20*\x20BRDF_Diffuse_Lambert(\x20material.diffuseColor\x20);\x0a\x09reflectedLight.directSpecular\x20+=\x20irradiance\x20*\x20BRDF_Specular_BlinnPhong(\x20directLight,\x20geometry,\x20material.specularColor,\x20material.specularShininess\x20)\x20*\x20material.specularStrength;\x0a}\x0avoid\x20RE_IndirectDiffuse_BlinnPhong(\x20const\x20in\x20vec3\x20irradiance,\x20const\x20in\x20GeometricContext\x20geometry,\x20const\x20in\x20BlinnPhongMaterial\x20material,\x20inout\x20ReflectedLight\x20reflectedLight\x20)\x20{\x0a\x09reflectedLight.indirectDiffuse\x20+=\x20irradiance\x20*\x20BRDF_Diffuse_Lambert(\x20material.diffuseColor\x20);\x0a}\x0a#define\x20RE_Direct\x09\x09\x09\x09RE_Direct_BlinnPhong\x0a#define\x20RE_IndirectDiffuse\x09\x09RE_IndirectDiffuse_BlinnPhong\x0a#define\x20Material_LightProbeLOD(\x20material\x20)\x09(0)',
        'lights_physical_fragment': 'PhysicalMaterial\x20material;\x0amaterial.diffuseColor\x20=\x20diffuseColor.rgb\x20*\x20(\x201.0\x20-\x20metalnessFactor\x20);\x0amaterial.specularRoughness\x20=\x20clamp(\x20roughnessFactor,\x200.04,\x201.0\x20);\x0a#ifdef\x20STANDARD\x0a\x09material.specularColor\x20=\x20mix(\x20vec3(\x20DEFAULT_SPECULAR_COEFFICIENT\x20),\x20diffuseColor.rgb,\x20metalnessFactor\x20);\x0a#else\x0a\x09material.specularColor\x20=\x20mix(\x20vec3(\x20MAXIMUM_SPECULAR_COEFFICIENT\x20*\x20pow2(\x20reflectivity\x20)\x20),\x20diffuseColor.rgb,\x20metalnessFactor\x20);\x0a\x09material.clearCoat\x20=\x20saturate(\x20clearCoat\x20);\x09material.clearCoatRoughness\x20=\x20clamp(\x20clearCoatRoughness,\x200.04,\x201.0\x20);\x0a#endif',
        'lights_physical_pars_fragment': 'struct\x20PhysicalMaterial\x20{\x0a\x09vec3\x09diffuseColor;\x0a\x09float\x09specularRoughness;\x0a\x09vec3\x09specularColor;\x0a\x09#ifndef\x20STANDARD\x0a\x09\x09float\x20clearCoat;\x0a\x09\x09float\x20clearCoatRoughness;\x0a\x09#endif\x0a};\x0a#define\x20MAXIMUM_SPECULAR_COEFFICIENT\x200.16\x0a#define\x20DEFAULT_SPECULAR_COEFFICIENT\x200.04\x0afloat\x20clearCoatDHRApprox(\x20const\x20in\x20float\x20roughness,\x20const\x20in\x20float\x20dotNL\x20)\x20{\x0a\x09return\x20DEFAULT_SPECULAR_COEFFICIENT\x20+\x20(\x201.0\x20-\x20DEFAULT_SPECULAR_COEFFICIENT\x20)\x20*\x20(\x20pow(\x201.0\x20-\x20dotNL,\x205.0\x20)\x20*\x20pow(\x201.0\x20-\x20roughness,\x202.0\x20)\x20);\x0a}\x0a#if\x20NUM_RECT_AREA_LIGHTS\x20>\x200\x0a\x09void\x20RE_Direct_RectArea_Physical(\x20const\x20in\x20RectAreaLight\x20rectAreaLight,\x20const\x20in\x20GeometricContext\x20geometry,\x20const\x20in\x20PhysicalMaterial\x20material,\x20inout\x20ReflectedLight\x20reflectedLight\x20)\x20{\x0a\x09\x09vec3\x20normal\x20=\x20geometry.normal;\x0a\x09\x09vec3\x20viewDir\x20=\x20geometry.viewDir;\x0a\x09\x09vec3\x20position\x20=\x20geometry.position;\x0a\x09\x09vec3\x20lightPos\x20=\x20rectAreaLight.position;\x0a\x09\x09vec3\x20halfWidth\x20=\x20rectAreaLight.halfWidth;\x0a\x09\x09vec3\x20halfHeight\x20=\x20rectAreaLight.halfHeight;\x0a\x09\x09vec3\x20lightColor\x20=\x20rectAreaLight.color;\x0a\x09\x09float\x20roughness\x20=\x20material.specularRoughness;\x0a\x09\x09vec3\x20rectCoords[\x204\x20];\x0a\x09\x09rectCoords[\x200\x20]\x20=\x20lightPos\x20+\x20halfWidth\x20-\x20halfHeight;\x09\x09rectCoords[\x201\x20]\x20=\x20lightPos\x20-\x20halfWidth\x20-\x20halfHeight;\x0a\x09\x09rectCoords[\x202\x20]\x20=\x20lightPos\x20-\x20halfWidth\x20+\x20halfHeight;\x0a\x09\x09rectCoords[\x203\x20]\x20=\x20lightPos\x20+\x20halfWidth\x20+\x20halfHeight;\x0a\x09\x09vec2\x20uv\x20=\x20LTC_Uv(\x20normal,\x20viewDir,\x20roughness\x20);\x0a\x09\x09vec4\x20t1\x20=\x20texture2D(\x20ltc_1,\x20uv\x20);\x0a\x09\x09vec4\x20t2\x20=\x20texture2D(\x20ltc_2,\x20uv\x20);\x0a\x09\x09mat3\x20mInv\x20=\x20mat3(\x0a\x09\x09\x09vec3(\x20t1.x,\x200,\x20t1.y\x20),\x0a\x09\x09\x09vec3(\x20\x20\x20\x200,\x201,\x20\x20\x20\x200\x20),\x0a\x09\x09\x09vec3(\x20t1.z,\x200,\x20t1.w\x20)\x0a\x09\x09);\x0a\x09\x09vec3\x20fresnel\x20=\x20(\x20material.specularColor\x20*\x20t2.x\x20+\x20(\x20vec3(\x201.0\x20)\x20-\x20material.specularColor\x20)\x20*\x20t2.y\x20);\x0a\x09\x09reflectedLight.directSpecular\x20+=\x20lightColor\x20*\x20fresnel\x20*\x20LTC_Evaluate(\x20normal,\x20viewDir,\x20position,\x20mInv,\x20rectCoords\x20);\x0a\x09\x09reflectedLight.directDiffuse\x20+=\x20lightColor\x20*\x20material.diffuseColor\x20*\x20LTC_Evaluate(\x20normal,\x20viewDir,\x20position,\x20mat3(\x201.0\x20),\x20rectCoords\x20);\x0a\x09}\x0a#endif\x0avoid\x20RE_Direct_Physical(\x20const\x20in\x20IncidentLight\x20directLight,\x20const\x20in\x20GeometricContext\x20geometry,\x20const\x20in\x20PhysicalMaterial\x20material,\x20inout\x20ReflectedLight\x20reflectedLight\x20)\x20{\x0a\x09float\x20dotNL\x20=\x20saturate(\x20dot(\x20geometry.normal,\x20directLight.direction\x20)\x20);\x0a\x09vec3\x20irradiance\x20=\x20dotNL\x20*\x20directLight.color;\x0a\x09#ifndef\x20PHYSICALLY_CORRECT_LIGHTS\x0a\x09\x09irradiance\x20*=\x20PI;\x0a\x09#endif\x0a\x09#ifndef\x20STANDARD\x0a\x09\x09float\x20clearCoatDHR\x20=\x20material.clearCoat\x20*\x20clearCoatDHRApprox(\x20material.clearCoatRoughness,\x20dotNL\x20);\x0a\x09#else\x0a\x09\x09float\x20clearCoatDHR\x20=\x200.0;\x0a\x09#endif\x0a\x09reflectedLight.directSpecular\x20+=\x20(\x201.0\x20-\x20clearCoatDHR\x20)\x20*\x20irradiance\x20*\x20BRDF_Specular_GGX(\x20directLight,\x20geometry,\x20material.specularColor,\x20material.specularRoughness\x20);\x0a\x09reflectedLight.directDiffuse\x20+=\x20(\x201.0\x20-\x20clearCoatDHR\x20)\x20*\x20irradiance\x20*\x20BRDF_Diffuse_Lambert(\x20material.diffuseColor\x20);\x0a\x09#ifndef\x20STANDARD\x0a\x09\x09reflectedLight.directSpecular\x20+=\x20irradiance\x20*\x20material.clearCoat\x20*\x20BRDF_Specular_GGX(\x20directLight,\x20geometry,\x20vec3(\x20DEFAULT_SPECULAR_COEFFICIENT\x20),\x20material.clearCoatRoughness\x20);\x0a\x09#endif\x0a}\x0avoid\x20RE_IndirectDiffuse_Physical(\x20const\x20in\x20vec3\x20irradiance,\x20const\x20in\x20GeometricContext\x20geometry,\x20const\x20in\x20PhysicalMaterial\x20material,\x20inout\x20ReflectedLight\x20reflectedLight\x20)\x20{\x0a\x09#ifndef\x20ENVMAP_TYPE_CUBE_UV\x0a\x09\x09reflectedLight.indirectDiffuse\x20+=\x20irradiance\x20*\x20BRDF_Diffuse_Lambert(\x20material.diffuseColor\x20);\x0a\x09#endif\x0a}\x0avoid\x20RE_IndirectSpecular_Physical(\x20const\x20in\x20vec3\x20radiance,\x20const\x20in\x20vec3\x20irradiance,\x20const\x20in\x20vec3\x20clearCoatRadiance,\x20const\x20in\x20GeometricContext\x20geometry,\x20const\x20in\x20PhysicalMaterial\x20material,\x20inout\x20ReflectedLight\x20reflectedLight)\x20{\x0a\x09#ifndef\x20STANDARD\x0a\x09\x09float\x20dotNV\x20=\x20saturate(\x20dot(\x20geometry.normal,\x20geometry.viewDir\x20)\x20);\x0a\x09\x09float\x20dotNL\x20=\x20dotNV;\x0a\x09\x09float\x20clearCoatDHR\x20=\x20material.clearCoat\x20*\x20clearCoatDHRApprox(\x20material.clearCoatRoughness,\x20dotNL\x20);\x0a\x09#else\x0a\x09\x09float\x20clearCoatDHR\x20=\x200.0;\x0a\x09#endif\x0a\x09float\x20clearCoatInv\x20=\x201.0\x20-\x20clearCoatDHR;\x0a\x09#if\x20defined(\x20ENVMAP_TYPE_CUBE_UV\x20)\x0a\x09\x09vec3\x20singleScattering\x20=\x20vec3(\x200.0\x20);\x0a\x09\x09vec3\x20multiScattering\x20=\x20vec3(\x200.0\x20);\x0a\x09\x09vec3\x20cosineWeightedIrradiance\x20=\x20irradiance\x20*\x20RECIPROCAL_PI;\x0a\x09\x09BRDF_Specular_Multiscattering_Environment(\x20geometry,\x20material.specularColor,\x20material.specularRoughness,\x20singleScattering,\x20multiScattering\x20);\x0a\x09\x09vec3\x20diffuse\x20=\x20material.diffuseColor\x20*\x20(\x201.0\x20-\x20(\x20singleScattering\x20+\x20multiScattering\x20)\x20);\x0a\x09\x09reflectedLight.indirectSpecular\x20+=\x20clearCoatInv\x20*\x20radiance\x20*\x20singleScattering;\x0a\x09\x09reflectedLight.indirectDiffuse\x20+=\x20multiScattering\x20*\x20cosineWeightedIrradiance;\x0a\x09\x09reflectedLight.indirectDiffuse\x20+=\x20diffuse\x20*\x20cosineWeightedIrradiance;\x0a\x09#else\x0a\x09\x09reflectedLight.indirectSpecular\x20+=\x20clearCoatInv\x20*\x20radiance\x20*\x20BRDF_Specular_GGX_Environment(\x20geometry,\x20material.specularColor,\x20material.specularRoughness\x20);\x0a\x09#endif\x0a\x09#ifndef\x20STANDARD\x0a\x09\x09reflectedLight.indirectSpecular\x20+=\x20clearCoatRadiance\x20*\x20material.clearCoat\x20*\x20BRDF_Specular_GGX_Environment(\x20geometry,\x20vec3(\x20DEFAULT_SPECULAR_COEFFICIENT\x20),\x20material.clearCoatRoughness\x20);\x0a\x09#endif\x0a}\x0a#define\x20RE_Direct\x09\x09\x09\x09RE_Direct_Physical\x0a#define\x20RE_Direct_RectArea\x09\x09RE_Direct_RectArea_Physical\x0a#define\x20RE_IndirectDiffuse\x09\x09RE_IndirectDiffuse_Physical\x0a#define\x20RE_IndirectSpecular\x09\x09RE_IndirectSpecular_Physical\x0a#define\x20Material_BlinnShininessExponent(\x20material\x20)\x20\x20\x20GGXRoughnessToBlinnExponent(\x20material.specularRoughness\x20)\x0a#define\x20Material_ClearCoat_BlinnShininessExponent(\x20material\x20)\x20\x20\x20GGXRoughnessToBlinnExponent(\x20material.clearCoatRoughness\x20)\x0afloat\x20computeSpecularOcclusion(\x20const\x20in\x20float\x20dotNV,\x20const\x20in\x20float\x20ambientOcclusion,\x20const\x20in\x20float\x20roughness\x20)\x20{\x0a\x09return\x20saturate(\x20pow(\x20dotNV\x20+\x20ambientOcclusion,\x20exp2(\x20-\x2016.0\x20*\x20roughness\x20-\x201.0\x20)\x20)\x20-\x201.0\x20+\x20ambientOcclusion\x20);\x0a}',
        'lights_fragment_begin': '\x0aGeometricContext\x20geometry;\x0ageometry.position\x20=\x20-\x20vViewPosition;\x0ageometry.normal\x20=\x20normal;\x0ageometry.viewDir\x20=\x20normalize(\x20vViewPosition\x20);\x0aIncidentLight\x20directLight;\x0a#if\x20(\x20NUM_POINT_LIGHTS\x20>\x200\x20)\x20&&\x20defined(\x20RE_Direct\x20)\x0a\x09PointLight\x20pointLight;\x0a\x09#pragma\x20unroll_loop\x0a\x09for\x20(\x20int\x20i\x20=\x200;\x20i\x20<\x20NUM_POINT_LIGHTS;\x20i\x20++\x20)\x20{\x0a\x09\x09pointLight\x20=\x20pointLights[\x20i\x20];\x0a\x09\x09getPointDirectLightIrradiance(\x20pointLight,\x20geometry,\x20directLight\x20);\x0a\x09\x09#ifdef\x20USE_SHADOWMAP\x0a\x09\x09directLight.color\x20*=\x20all(\x20bvec2(\x20pointLight.shadow,\x20directLight.visible\x20)\x20)\x20?\x20getPointShadow(\x20pointShadowMap[\x20i\x20],\x20pointLight.shadowMapSize,\x20pointLight.shadowBias,\x20pointLight.shadowRadius,\x20vPointShadowCoord[\x20i\x20],\x20pointLight.shadowCameraNear,\x20pointLight.shadowCameraFar\x20)\x20:\x201.0;\x0a\x09\x09#endif\x0a\x09\x09RE_Direct(\x20directLight,\x20geometry,\x20material,\x20reflectedLight\x20);\x0a\x09}\x0a#endif\x0a#if\x20(\x20NUM_SPOT_LIGHTS\x20>\x200\x20)\x20&&\x20defined(\x20RE_Direct\x20)\x0a\x09SpotLight\x20spotLight;\x0a\x09#pragma\x20unroll_loop\x0a\x09for\x20(\x20int\x20i\x20=\x200;\x20i\x20<\x20NUM_SPOT_LIGHTS;\x20i\x20++\x20)\x20{\x0a\x09\x09spotLight\x20=\x20spotLights[\x20i\x20];\x0a\x09\x09getSpotDirectLightIrradiance(\x20spotLight,\x20geometry,\x20directLight\x20);\x0a\x09\x09#ifdef\x20USE_SHADOWMAP\x0a\x09\x09directLight.color\x20*=\x20all(\x20bvec2(\x20spotLight.shadow,\x20directLight.visible\x20)\x20)\x20?\x20getShadow(\x20spotShadowMap[\x20i\x20],\x20spotLight.shadowMapSize,\x20spotLight.shadowBias,\x20spotLight.shadowRadius,\x20vSpotShadowCoord[\x20i\x20]\x20)\x20:\x201.0;\x0a\x09\x09#endif\x0a\x09\x09RE_Direct(\x20directLight,\x20geometry,\x20material,\x20reflectedLight\x20);\x0a\x09}\x0a#endif\x0a#if\x20(\x20NUM_DIR_LIGHTS\x20>\x200\x20)\x20&&\x20defined(\x20RE_Direct\x20)\x0a\x09DirectionalLight\x20directionalLight;\x0a\x09#pragma\x20unroll_loop\x0a\x09for\x20(\x20int\x20i\x20=\x200;\x20i\x20<\x20NUM_DIR_LIGHTS;\x20i\x20++\x20)\x20{\x0a\x09\x09directionalLight\x20=\x20directionalLights[\x20i\x20];\x0a\x09\x09getDirectionalDirectLightIrradiance(\x20directionalLight,\x20geometry,\x20directLight\x20);\x0a\x09\x09#ifdef\x20USE_SHADOWMAP\x0a\x09\x09directLight.color\x20*=\x20all(\x20bvec2(\x20directionalLight.shadow,\x20directLight.visible\x20)\x20)\x20?\x20getShadow(\x20directionalShadowMap[\x20i\x20],\x20directionalLight.shadowMapSize,\x20directionalLight.shadowBias,\x20directionalLight.shadowRadius,\x20vDirectionalShadowCoord[\x20i\x20]\x20)\x20:\x201.0;\x0a\x09\x09#endif\x0a\x09\x09RE_Direct(\x20directLight,\x20geometry,\x20material,\x20reflectedLight\x20);\x0a\x09}\x0a#endif\x0a#if\x20(\x20NUM_RECT_AREA_LIGHTS\x20>\x200\x20)\x20&&\x20defined(\x20RE_Direct_RectArea\x20)\x0a\x09RectAreaLight\x20rectAreaLight;\x0a\x09#pragma\x20unroll_loop\x0a\x09for\x20(\x20int\x20i\x20=\x200;\x20i\x20<\x20NUM_RECT_AREA_LIGHTS;\x20i\x20++\x20)\x20{\x0a\x09\x09rectAreaLight\x20=\x20rectAreaLights[\x20i\x20];\x0a\x09\x09RE_Direct_RectArea(\x20rectAreaLight,\x20geometry,\x20material,\x20reflectedLight\x20);\x0a\x09}\x0a#endif\x0a#if\x20defined(\x20RE_IndirectDiffuse\x20)\x0a\x09vec3\x20irradiance\x20=\x20getAmbientLightIrradiance(\x20ambientLightColor\x20);\x0a\x09irradiance\x20+=\x20getLightProbeIrradiance(\x20lightProbe,\x20geometry\x20);\x0a\x09#if\x20(\x20NUM_HEMI_LIGHTS\x20>\x200\x20)\x0a\x09\x09#pragma\x20unroll_loop\x0a\x09\x09for\x20(\x20int\x20i\x20=\x200;\x20i\x20<\x20NUM_HEMI_LIGHTS;\x20i\x20++\x20)\x20{\x0a\x09\x09\x09irradiance\x20+=\x20getHemisphereLightIrradiance(\x20hemisphereLights[\x20i\x20],\x20geometry\x20);\x0a\x09\x09}\x0a\x09#endif\x0a#endif\x0a#if\x20defined(\x20RE_IndirectSpecular\x20)\x0a\x09vec3\x20radiance\x20=\x20vec3(\x200.0\x20);\x0a\x09vec3\x20clearCoatRadiance\x20=\x20vec3(\x200.0\x20);\x0a#endif',
        'lights_fragment_maps': '#if\x20defined(\x20RE_IndirectDiffuse\x20)\x0a\x09#ifdef\x20USE_LIGHTMAP\x0a\x09\x09vec3\x20lightMapIrradiance\x20=\x20texture2D(\x20lightMap,\x20vUv2\x20).xyz\x20*\x20lightMapIntensity;\x0a\x09\x09#ifndef\x20PHYSICALLY_CORRECT_LIGHTS\x0a\x09\x09\x09lightMapIrradiance\x20*=\x20PI;\x0a\x09\x09#endif\x0a\x09\x09irradiance\x20+=\x20lightMapIrradiance;\x0a\x09#endif\x0a\x09#if\x20defined(\x20USE_ENVMAP\x20)\x20&&\x20defined(\x20PHYSICAL\x20)\x20&&\x20defined(\x20ENVMAP_TYPE_CUBE_UV\x20)\x0a\x09\x09irradiance\x20+=\x20getLightProbeIndirectIrradiance(\x20geometry,\x20maxMipLevel\x20);\x0a\x09#endif\x0a#endif\x0a#if\x20defined(\x20USE_ENVMAP\x20)\x20&&\x20defined(\x20RE_IndirectSpecular\x20)\x0a\x09radiance\x20+=\x20getLightProbeIndirectRadiance(\x20geometry,\x20Material_BlinnShininessExponent(\x20material\x20),\x20maxMipLevel\x20);\x0a\x09#ifndef\x20STANDARD\x0a\x09\x09clearCoatRadiance\x20+=\x20getLightProbeIndirectRadiance(\x20geometry,\x20Material_ClearCoat_BlinnShininessExponent(\x20material\x20),\x20maxMipLevel\x20);\x0a\x09#endif\x0a#endif',
        'lights_fragment_end': '#if\x20defined(\x20RE_IndirectDiffuse\x20)\x0a\x09RE_IndirectDiffuse(\x20irradiance,\x20geometry,\x20material,\x20reflectedLight\x20);\x0a#endif\x0a#if\x20defined(\x20RE_IndirectSpecular\x20)\x0a\x09RE_IndirectSpecular(\x20radiance,\x20irradiance,\x20clearCoatRadiance,\x20geometry,\x20material,\x20reflectedLight\x20);\x0a#endif',
        'logdepthbuf_fragment': '#if\x20defined(\x20USE_LOGDEPTHBUF\x20)\x20&&\x20defined(\x20USE_LOGDEPTHBUF_EXT\x20)\x0a\x09gl_FragDepthEXT\x20=\x20log2(\x20vFragDepth\x20)\x20*\x20logDepthBufFC\x20*\x200.5;\x0a#endif',
        'logdepthbuf_pars_fragment': '#if\x20defined(\x20USE_LOGDEPTHBUF\x20)\x20&&\x20defined(\x20USE_LOGDEPTHBUF_EXT\x20)\x0a\x09uniform\x20float\x20logDepthBufFC;\x0a\x09varying\x20float\x20vFragDepth;\x0a#endif',
        'logdepthbuf_pars_vertex': '#ifdef\x20USE_LOGDEPTHBUF\x0a\x09#ifdef\x20USE_LOGDEPTHBUF_EXT\x0a\x09\x09varying\x20float\x20vFragDepth;\x0a\x09#else\x0a\x09\x09uniform\x20float\x20logDepthBufFC;\x0a\x09#endif\x0a#endif',
        'logdepthbuf_vertex': '#ifdef\x20USE_LOGDEPTHBUF\x0a\x09#ifdef\x20USE_LOGDEPTHBUF_EXT\x0a\x09\x09vFragDepth\x20=\x201.0\x20+\x20gl_Position.w;\x0a\x09#else\x0a\x09\x09gl_Position.z\x20=\x20log2(\x20max(\x20EPSILON,\x20gl_Position.w\x20+\x201.0\x20)\x20)\x20*\x20logDepthBufFC\x20-\x201.0;\x0a\x09\x09gl_Position.z\x20*=\x20gl_Position.w;\x0a\x09#endif\x0a#endif',
        'map_fragment': '#ifdef\x20USE_MAP\x0a\x09vec4\x20texelColor\x20=\x20texture2D(\x20map,\x20vUv\x20);\x0a\x09texelColor\x20=\x20mapTexelToLinear(\x20texelColor\x20);\x0a\x09diffuseColor\x20*=\x20texelColor;\x0a#endif',
        'map_pars_fragment': '#ifdef\x20USE_MAP\x0a\x09uniform\x20sampler2D\x20map;\x0a#endif',
        'map_particle_fragment': '#ifdef\x20USE_MAP\x0a\x09vec2\x20uv\x20=\x20(\x20uvTransform\x20*\x20vec3(\x20gl_PointCoord.x,\x201.0\x20-\x20gl_PointCoord.y,\x201\x20)\x20).xy;\x0a\x09vec4\x20mapTexel\x20=\x20texture2D(\x20map,\x20uv\x20);\x0a\x09diffuseColor\x20*=\x20mapTexelToLinear(\x20mapTexel\x20);\x0a#endif',
        'map_particle_pars_fragment': '#ifdef\x20USE_MAP\x0a\x09uniform\x20mat3\x20uvTransform;\x0a\x09uniform\x20sampler2D\x20map;\x0a#endif',
        'metalnessmap_fragment': 'float\x20metalnessFactor\x20=\x20metalness;\x0a#ifdef\x20USE_METALNESSMAP\x0a\x09vec4\x20texelMetalness\x20=\x20texture2D(\x20metalnessMap,\x20vUv\x20);\x0a\x09metalnessFactor\x20*=\x20texelMetalness.b;\x0a#endif',
        'metalnessmap_pars_fragment': '#ifdef\x20USE_METALNESSMAP\x0a\x09uniform\x20sampler2D\x20metalnessMap;\x0a#endif',
        'morphnormal_vertex': '#ifdef\x20USE_MORPHNORMALS\x0a\x09objectNormal\x20+=\x20(\x20morphNormal0\x20-\x20normal\x20)\x20*\x20morphTargetInfluences[\x200\x20];\x0a\x09objectNormal\x20+=\x20(\x20morphNormal1\x20-\x20normal\x20)\x20*\x20morphTargetInfluences[\x201\x20];\x0a\x09objectNormal\x20+=\x20(\x20morphNormal2\x20-\x20normal\x20)\x20*\x20morphTargetInfluences[\x202\x20];\x0a\x09objectNormal\x20+=\x20(\x20morphNormal3\x20-\x20normal\x20)\x20*\x20morphTargetInfluences[\x203\x20];\x0a#endif',
        'morphtarget_pars_vertex': '#ifdef\x20USE_MORPHTARGETS\x0a\x09#ifndef\x20USE_MORPHNORMALS\x0a\x09uniform\x20float\x20morphTargetInfluences[\x208\x20];\x0a\x09#else\x0a\x09uniform\x20float\x20morphTargetInfluences[\x204\x20];\x0a\x09#endif\x0a#endif',
        'morphtarget_vertex': '#ifdef\x20USE_MORPHTARGETS\x0a\x09transformed\x20+=\x20(\x20morphTarget0\x20-\x20position\x20)\x20*\x20morphTargetInfluences[\x200\x20];\x0a\x09transformed\x20+=\x20(\x20morphTarget1\x20-\x20position\x20)\x20*\x20morphTargetInfluences[\x201\x20];\x0a\x09transformed\x20+=\x20(\x20morphTarget2\x20-\x20position\x20)\x20*\x20morphTargetInfluences[\x202\x20];\x0a\x09transformed\x20+=\x20(\x20morphTarget3\x20-\x20position\x20)\x20*\x20morphTargetInfluences[\x203\x20];\x0a\x09#ifndef\x20USE_MORPHNORMALS\x0a\x09transformed\x20+=\x20(\x20morphTarget4\x20-\x20position\x20)\x20*\x20morphTargetInfluences[\x204\x20];\x0a\x09transformed\x20+=\x20(\x20morphTarget5\x20-\x20position\x20)\x20*\x20morphTargetInfluences[\x205\x20];\x0a\x09transformed\x20+=\x20(\x20morphTarget6\x20-\x20position\x20)\x20*\x20morphTargetInfluences[\x206\x20];\x0a\x09transformed\x20+=\x20(\x20morphTarget7\x20-\x20position\x20)\x20*\x20morphTargetInfluences[\x207\x20];\x0a\x09#endif\x0a#endif',
        'normal_fragment_begin': '#ifdef\x20FLAT_SHADED\x0a\x09vec3\x20fdx\x20=\x20vec3(\x20dFdx(\x20vViewPosition.x\x20),\x20dFdx(\x20vViewPosition.y\x20),\x20dFdx(\x20vViewPosition.z\x20)\x20);\x0a\x09vec3\x20fdy\x20=\x20vec3(\x20dFdy(\x20vViewPosition.x\x20),\x20dFdy(\x20vViewPosition.y\x20),\x20dFdy(\x20vViewPosition.z\x20)\x20);\x0a\x09vec3\x20normal\x20=\x20normalize(\x20cross(\x20fdx,\x20fdy\x20)\x20);\x0a#else\x0a\x09vec3\x20normal\x20=\x20normalize(\x20vNormal\x20);\x0a\x09#ifdef\x20DOUBLE_SIDED\x0a\x09\x09normal\x20=\x20normal\x20*\x20(\x20float(\x20gl_FrontFacing\x20)\x20*\x202.0\x20-\x201.0\x20);\x0a\x09#endif\x0a\x09#ifdef\x20USE_TANGENT\x0a\x09\x09vec3\x20tangent\x20=\x20normalize(\x20vTangent\x20);\x0a\x09\x09vec3\x20bitangent\x20=\x20normalize(\x20vBitangent\x20);\x0a\x09\x09#ifdef\x20DOUBLE_SIDED\x0a\x09\x09\x09tangent\x20=\x20tangent\x20*\x20(\x20float(\x20gl_FrontFacing\x20)\x20*\x202.0\x20-\x201.0\x20);\x0a\x09\x09\x09bitangent\x20=\x20bitangent\x20*\x20(\x20float(\x20gl_FrontFacing\x20)\x20*\x202.0\x20-\x201.0\x20);\x0a\x09\x09#endif\x0a\x09#endif\x0a#endif',
        'normal_fragment_maps': '#ifdef\x20USE_NORMALMAP\x0a\x09#ifdef\x20OBJECTSPACE_NORMALMAP\x0a\x09\x09normal\x20=\x20texture2D(\x20normalMap,\x20vUv\x20).xyz\x20*\x202.0\x20-\x201.0;\x0a\x09\x09#ifdef\x20FLIP_SIDED\x0a\x09\x09\x09normal\x20=\x20-\x20normal;\x0a\x09\x09#endif\x0a\x09\x09#ifdef\x20DOUBLE_SIDED\x0a\x09\x09\x09normal\x20=\x20normal\x20*\x20(\x20float(\x20gl_FrontFacing\x20)\x20*\x202.0\x20-\x201.0\x20);\x0a\x09\x09#endif\x0a\x09\x09normal\x20=\x20normalize(\x20normalMatrix\x20*\x20normal\x20);\x0a\x09#else\x0a\x09\x09#ifdef\x20USE_TANGENT\x0a\x09\x09\x09mat3\x20vTBN\x20=\x20mat3(\x20tangent,\x20bitangent,\x20normal\x20);\x0a\x09\x09\x09vec3\x20mapN\x20=\x20texture2D(\x20normalMap,\x20vUv\x20).xyz\x20*\x202.0\x20-\x201.0;\x0a\x09\x09\x09mapN.xy\x20=\x20normalScale\x20*\x20mapN.xy;\x0a\x09\x09\x09normal\x20=\x20normalize(\x20vTBN\x20*\x20mapN\x20);\x0a\x09\x09#else\x0a\x09\x09\x09normal\x20=\x20perturbNormal2Arb(\x20-vViewPosition,\x20normal\x20);\x0a\x09\x09#endif\x0a\x09#endif\x0a#elif\x20defined(\x20USE_BUMPMAP\x20)\x0a\x09normal\x20=\x20perturbNormalArb(\x20-vViewPosition,\x20normal,\x20dHdxy_fwd()\x20);\x0a#endif',
        'normalmap_pars_fragment': '#ifdef\x20USE_NORMALMAP\x0a\x09uniform\x20sampler2D\x20normalMap;\x0a\x09uniform\x20vec2\x20normalScale;\x0a\x09#ifdef\x20OBJECTSPACE_NORMALMAP\x0a\x09\x09uniform\x20mat3\x20normalMatrix;\x0a\x09#else\x0a\x09\x09vec3\x20perturbNormal2Arb(\x20vec3\x20eye_pos,\x20vec3\x20surf_norm\x20)\x20{\x0a\x09\x09\x09vec3\x20q0\x20=\x20vec3(\x20dFdx(\x20eye_pos.x\x20),\x20dFdx(\x20eye_pos.y\x20),\x20dFdx(\x20eye_pos.z\x20)\x20);\x0a\x09\x09\x09vec3\x20q1\x20=\x20vec3(\x20dFdy(\x20eye_pos.x\x20),\x20dFdy(\x20eye_pos.y\x20),\x20dFdy(\x20eye_pos.z\x20)\x20);\x0a\x09\x09\x09vec2\x20st0\x20=\x20dFdx(\x20vUv.st\x20);\x0a\x09\x09\x09vec2\x20st1\x20=\x20dFdy(\x20vUv.st\x20);\x0a\x09\x09\x09float\x20scale\x20=\x20sign(\x20st1.t\x20*\x20st0.s\x20-\x20st0.t\x20*\x20st1.s\x20);\x0a\x09\x09\x09vec3\x20S\x20=\x20normalize(\x20(\x20q0\x20*\x20st1.t\x20-\x20q1\x20*\x20st0.t\x20)\x20*\x20scale\x20);\x0a\x09\x09\x09vec3\x20T\x20=\x20normalize(\x20(\x20-\x20q0\x20*\x20st1.s\x20+\x20q1\x20*\x20st0.s\x20)\x20*\x20scale\x20);\x0a\x09\x09\x09vec3\x20N\x20=\x20normalize(\x20surf_norm\x20);\x0a\x09\x09\x09mat3\x20tsn\x20=\x20mat3(\x20S,\x20T,\x20N\x20);\x0a\x09\x09\x09vec3\x20mapN\x20=\x20texture2D(\x20normalMap,\x20vUv\x20).xyz\x20*\x202.0\x20-\x201.0;\x0a\x09\x09\x09mapN.xy\x20*=\x20normalScale;\x0a\x09\x09\x09mapN.xy\x20*=\x20(\x20float(\x20gl_FrontFacing\x20)\x20*\x202.0\x20-\x201.0\x20);\x0a\x09\x09\x09return\x20normalize(\x20tsn\x20*\x20mapN\x20);\x0a\x09\x09}\x0a\x09#endif\x0a#endif',
        'packing': 'vec3\x20packNormalToRGB(\x20const\x20in\x20vec3\x20normal\x20)\x20{\x0a\x09return\x20normalize(\x20normal\x20)\x20*\x200.5\x20+\x200.5;\x0a}\x0avec3\x20unpackRGBToNormal(\x20const\x20in\x20vec3\x20rgb\x20)\x20{\x0a\x09return\x202.0\x20*\x20rgb.xyz\x20-\x201.0;\x0a}\x0aconst\x20float\x20PackUpscale\x20=\x20256.\x20/\x20255.;const\x20float\x20UnpackDownscale\x20=\x20255.\x20/\x20256.;\x0aconst\x20vec3\x20PackFactors\x20=\x20vec3(\x20256.\x20*\x20256.\x20*\x20256.,\x20256.\x20*\x20256.,\x20\x20256.\x20);\x0aconst\x20vec4\x20UnpackFactors\x20=\x20UnpackDownscale\x20/\x20vec4(\x20PackFactors,\x201.\x20);\x0aconst\x20float\x20ShiftRight8\x20=\x201.\x20/\x20256.;\x0avec4\x20packDepthToRGBA(\x20const\x20in\x20float\x20v\x20)\x20{\x0a\x09vec4\x20r\x20=\x20vec4(\x20fract(\x20v\x20*\x20PackFactors\x20),\x20v\x20);\x0a\x09r.yzw\x20-=\x20r.xyz\x20*\x20ShiftRight8;\x09return\x20r\x20*\x20PackUpscale;\x0a}\x0afloat\x20unpackRGBAToDepth(\x20const\x20in\x20vec4\x20v\x20)\x20{\x0a\x09return\x20dot(\x20v,\x20UnpackFactors\x20);\x0a}\x0afloat\x20viewZToOrthographicDepth(\x20const\x20in\x20float\x20viewZ,\x20const\x20in\x20float\x20near,\x20const\x20in\x20float\x20far\x20)\x20{\x0a\x09return\x20(\x20viewZ\x20+\x20near\x20)\x20/\x20(\x20near\x20-\x20far\x20);\x0a}\x0afloat\x20orthographicDepthToViewZ(\x20const\x20in\x20float\x20linearClipZ,\x20const\x20in\x20float\x20near,\x20const\x20in\x20float\x20far\x20)\x20{\x0a\x09return\x20linearClipZ\x20*\x20(\x20near\x20-\x20far\x20)\x20-\x20near;\x0a}\x0afloat\x20viewZToPerspectiveDepth(\x20const\x20in\x20float\x20viewZ,\x20const\x20in\x20float\x20near,\x20const\x20in\x20float\x20far\x20)\x20{\x0a\x09return\x20((\x20near\x20+\x20viewZ\x20)\x20*\x20far\x20)\x20/\x20((\x20far\x20-\x20near\x20)\x20*\x20viewZ\x20);\x0a}\x0afloat\x20perspectiveDepthToViewZ(\x20const\x20in\x20float\x20invClipZ,\x20const\x20in\x20float\x20near,\x20const\x20in\x20float\x20far\x20)\x20{\x0a\x09return\x20(\x20near\x20*\x20far\x20)\x20/\x20(\x20(\x20far\x20-\x20near\x20)\x20*\x20invClipZ\x20-\x20far\x20);\x0a}',
        'premultiplied_alpha_fragment': '#ifdef\x20PREMULTIPLIED_ALPHA\x0a\x09gl_FragColor.rgb\x20*=\x20gl_FragColor.a;\x0a#endif',
        'project_vertex': 'vec4\x20mvPosition\x20=\x20modelViewMatrix\x20*\x20vec4(\x20transformed,\x201.0\x20);\x0agl_Position\x20=\x20projectionMatrix\x20*\x20mvPosition;',
        'dithering_fragment': '#if\x20defined(\x20DITHERING\x20)\x0a\x09gl_FragColor.rgb\x20=\x20dithering(\x20gl_FragColor.rgb\x20);\x0a#endif',
        'dithering_pars_fragment': '#if\x20defined(\x20DITHERING\x20)\x0a\x09vec3\x20dithering(\x20vec3\x20color\x20)\x20{\x0a\x09\x09float\x20grid_position\x20=\x20rand(\x20gl_FragCoord.xy\x20);\x0a\x09\x09vec3\x20dither_shift_RGB\x20=\x20vec3(\x200.25\x20/\x20255.0,\x20-0.25\x20/\x20255.0,\x200.25\x20/\x20255.0\x20);\x0a\x09\x09dither_shift_RGB\x20=\x20mix(\x202.0\x20*\x20dither_shift_RGB,\x20-2.0\x20*\x20dither_shift_RGB,\x20grid_position\x20);\x0a\x09\x09return\x20color\x20+\x20dither_shift_RGB;\x0a\x09}\x0a#endif',
        'roughnessmap_fragment': 'float\x20roughnessFactor\x20=\x20roughness;\x0a#ifdef\x20USE_ROUGHNESSMAP\x0a\x09vec4\x20texelRoughness\x20=\x20texture2D(\x20roughnessMap,\x20vUv\x20);\x0a\x09roughnessFactor\x20*=\x20texelRoughness.g;\x0a#endif',
        'roughnessmap_pars_fragment': '#ifdef\x20USE_ROUGHNESSMAP\x0a\x09uniform\x20sampler2D\x20roughnessMap;\x0a#endif',
        'shadowmap_pars_fragment': '#ifdef\x20USE_SHADOWMAP\x0a\x09#if\x20NUM_DIR_LIGHTS\x20>\x200\x0a\x09\x09uniform\x20sampler2D\x20directionalShadowMap[\x20NUM_DIR_LIGHTS\x20];\x0a\x09\x09varying\x20vec4\x20vDirectionalShadowCoord[\x20NUM_DIR_LIGHTS\x20];\x0a\x09#endif\x0a\x09#if\x20NUM_SPOT_LIGHTS\x20>\x200\x0a\x09\x09uniform\x20sampler2D\x20spotShadowMap[\x20NUM_SPOT_LIGHTS\x20];\x0a\x09\x09varying\x20vec4\x20vSpotShadowCoord[\x20NUM_SPOT_LIGHTS\x20];\x0a\x09#endif\x0a\x09#if\x20NUM_POINT_LIGHTS\x20>\x200\x0a\x09\x09uniform\x20sampler2D\x20pointShadowMap[\x20NUM_POINT_LIGHTS\x20];\x0a\x09\x09varying\x20vec4\x20vPointShadowCoord[\x20NUM_POINT_LIGHTS\x20];\x0a\x09#endif\x0a\x09float\x20texture2DCompare(\x20sampler2D\x20depths,\x20vec2\x20uv,\x20float\x20compare\x20)\x20{\x0a\x09\x09return\x20step(\x20compare,\x20unpackRGBAToDepth(\x20texture2D(\x20depths,\x20uv\x20)\x20)\x20);\x0a\x09}\x0a\x09float\x20texture2DShadowLerp(\x20sampler2D\x20depths,\x20vec2\x20size,\x20vec2\x20uv,\x20float\x20compare\x20)\x20{\x0a\x09\x09const\x20vec2\x20offset\x20=\x20vec2(\x200.0,\x201.0\x20);\x0a\x09\x09vec2\x20texelSize\x20=\x20vec2(\x201.0\x20)\x20/\x20size;\x0a\x09\x09vec2\x20centroidUV\x20=\x20floor(\x20uv\x20*\x20size\x20+\x200.5\x20)\x20/\x20size;\x0a\x09\x09float\x20lb\x20=\x20texture2DCompare(\x20depths,\x20centroidUV\x20+\x20texelSize\x20*\x20offset.xx,\x20compare\x20);\x0a\x09\x09float\x20lt\x20=\x20texture2DCompare(\x20depths,\x20centroidUV\x20+\x20texelSize\x20*\x20offset.xy,\x20compare\x20);\x0a\x09\x09float\x20rb\x20=\x20texture2DCompare(\x20depths,\x20centroidUV\x20+\x20texelSize\x20*\x20offset.yx,\x20compare\x20);\x0a\x09\x09float\x20rt\x20=\x20texture2DCompare(\x20depths,\x20centroidUV\x20+\x20texelSize\x20*\x20offset.yy,\x20compare\x20);\x0a\x09\x09vec2\x20f\x20=\x20fract(\x20uv\x20*\x20size\x20+\x200.5\x20);\x0a\x09\x09float\x20a\x20=\x20mix(\x20lb,\x20lt,\x20f.y\x20);\x0a\x09\x09float\x20b\x20=\x20mix(\x20rb,\x20rt,\x20f.y\x20);\x0a\x09\x09float\x20c\x20=\x20mix(\x20a,\x20b,\x20f.x\x20);\x0a\x09\x09return\x20c;\x0a\x09}\x0a\x09float\x20getShadow(\x20sampler2D\x20shadowMap,\x20vec2\x20shadowMapSize,\x20float\x20shadowBias,\x20float\x20shadowRadius,\x20vec4\x20shadowCoord\x20)\x20{\x0a\x09\x09float\x20shadow\x20=\x201.0;\x0a\x09\x09shadowCoord.xyz\x20/=\x20shadowCoord.w;\x0a\x09\x09shadowCoord.z\x20+=\x20shadowBias;\x0a\x09\x09bvec4\x20inFrustumVec\x20=\x20bvec4\x20(\x20shadowCoord.x\x20>=\x200.0,\x20shadowCoord.x\x20<=\x201.0,\x20shadowCoord.y\x20>=\x200.0,\x20shadowCoord.y\x20<=\x201.0\x20);\x0a\x09\x09bool\x20inFrustum\x20=\x20all(\x20inFrustumVec\x20);\x0a\x09\x09bvec2\x20frustumTestVec\x20=\x20bvec2(\x20inFrustum,\x20shadowCoord.z\x20<=\x201.0\x20);\x0a\x09\x09bool\x20frustumTest\x20=\x20all(\x20frustumTestVec\x20);\x0a\x09\x09if\x20(\x20frustumTest\x20)\x20{\x0a\x09\x09#if\x20defined(\x20SHADOWMAP_TYPE_PCF\x20)\x0a\x09\x09\x09vec2\x20texelSize\x20=\x20vec2(\x201.0\x20)\x20/\x20shadowMapSize;\x0a\x09\x09\x09float\x20dx0\x20=\x20-\x20texelSize.x\x20*\x20shadowRadius;\x0a\x09\x09\x09float\x20dy0\x20=\x20-\x20texelSize.y\x20*\x20shadowRadius;\x0a\x09\x09\x09float\x20dx1\x20=\x20+\x20texelSize.x\x20*\x20shadowRadius;\x0a\x09\x09\x09float\x20dy1\x20=\x20+\x20texelSize.y\x20*\x20shadowRadius;\x0a\x09\x09\x09shadow\x20=\x20(\x0a\x09\x09\x09\x09texture2DCompare(\x20shadowMap,\x20shadowCoord.xy\x20+\x20vec2(\x20dx0,\x20dy0\x20),\x20shadowCoord.z\x20)\x20+\x0a\x09\x09\x09\x09texture2DCompare(\x20shadowMap,\x20shadowCoord.xy\x20+\x20vec2(\x200.0,\x20dy0\x20),\x20shadowCoord.z\x20)\x20+\x0a\x09\x09\x09\x09texture2DCompare(\x20shadowMap,\x20shadowCoord.xy\x20+\x20vec2(\x20dx1,\x20dy0\x20),\x20shadowCoord.z\x20)\x20+\x0a\x09\x09\x09\x09texture2DCompare(\x20shadowMap,\x20shadowCoord.xy\x20+\x20vec2(\x20dx0,\x200.0\x20),\x20shadowCoord.z\x20)\x20+\x0a\x09\x09\x09\x09texture2DCompare(\x20shadowMap,\x20shadowCoord.xy,\x20shadowCoord.z\x20)\x20+\x0a\x09\x09\x09\x09texture2DCompare(\x20shadowMap,\x20shadowCoord.xy\x20+\x20vec2(\x20dx1,\x200.0\x20),\x20shadowCoord.z\x20)\x20+\x0a\x09\x09\x09\x09texture2DCompare(\x20shadowMap,\x20shadowCoord.xy\x20+\x20vec2(\x20dx0,\x20dy1\x20),\x20shadowCoord.z\x20)\x20+\x0a\x09\x09\x09\x09texture2DCompare(\x20shadowMap,\x20shadowCoord.xy\x20+\x20vec2(\x200.0,\x20dy1\x20),\x20shadowCoord.z\x20)\x20+\x0a\x09\x09\x09\x09texture2DCompare(\x20shadowMap,\x20shadowCoord.xy\x20+\x20vec2(\x20dx1,\x20dy1\x20),\x20shadowCoord.z\x20)\x0a\x09\x09\x09)\x20*\x20(\x201.0\x20/\x209.0\x20);\x0a\x09\x09#elif\x20defined(\x20SHADOWMAP_TYPE_PCF_SOFT\x20)\x0a\x09\x09\x09vec2\x20texelSize\x20=\x20vec2(\x201.0\x20)\x20/\x20shadowMapSize;\x0a\x09\x09\x09float\x20dx0\x20=\x20-\x20texelSize.x\x20*\x20shadowRadius;\x0a\x09\x09\x09float\x20dy0\x20=\x20-\x20texelSize.y\x20*\x20shadowRadius;\x0a\x09\x09\x09float\x20dx1\x20=\x20+\x20texelSize.x\x20*\x20shadowRadius;\x0a\x09\x09\x09float\x20dy1\x20=\x20+\x20texelSize.y\x20*\x20shadowRadius;\x0a\x09\x09\x09shadow\x20=\x20(\x0a\x09\x09\x09\x09texture2DShadowLerp(\x20shadowMap,\x20shadowMapSize,\x20shadowCoord.xy\x20+\x20vec2(\x20dx0,\x20dy0\x20),\x20shadowCoord.z\x20)\x20+\x0a\x09\x09\x09\x09texture2DShadowLerp(\x20shadowMap,\x20shadowMapSize,\x20shadowCoord.xy\x20+\x20vec2(\x200.0,\x20dy0\x20),\x20shadowCoord.z\x20)\x20+\x0a\x09\x09\x09\x09texture2DShadowLerp(\x20shadowMap,\x20shadowMapSize,\x20shadowCoord.xy\x20+\x20vec2(\x20dx1,\x20dy0\x20),\x20shadowCoord.z\x20)\x20+\x0a\x09\x09\x09\x09texture2DShadowLerp(\x20shadowMap,\x20shadowMapSize,\x20shadowCoord.xy\x20+\x20vec2(\x20dx0,\x200.0\x20),\x20shadowCoord.z\x20)\x20+\x0a\x09\x09\x09\x09texture2DShadowLerp(\x20shadowMap,\x20shadowMapSize,\x20shadowCoord.xy,\x20shadowCoord.z\x20)\x20+\x0a\x09\x09\x09\x09texture2DShadowLerp(\x20shadowMap,\x20shadowMapSize,\x20shadowCoord.xy\x20+\x20vec2(\x20dx1,\x200.0\x20),\x20shadowCoord.z\x20)\x20+\x0a\x09\x09\x09\x09texture2DShadowLerp(\x20shadowMap,\x20shadowMapSize,\x20shadowCoord.xy\x20+\x20vec2(\x20dx0,\x20dy1\x20),\x20shadowCoord.z\x20)\x20+\x0a\x09\x09\x09\x09texture2DShadowLerp(\x20shadowMap,\x20shadowMapSize,\x20shadowCoord.xy\x20+\x20vec2(\x200.0,\x20dy1\x20),\x20shadowCoord.z\x20)\x20+\x0a\x09\x09\x09\x09texture2DShadowLerp(\x20shadowMap,\x20shadowMapSize,\x20shadowCoord.xy\x20+\x20vec2(\x20dx1,\x20dy1\x20),\x20shadowCoord.z\x20)\x0a\x09\x09\x09)\x20*\x20(\x201.0\x20/\x209.0\x20);\x0a\x09\x09#else\x0a\x09\x09\x09shadow\x20=\x20texture2DCompare(\x20shadowMap,\x20shadowCoord.xy,\x20shadowCoord.z\x20);\x0a\x09\x09#endif\x0a\x09\x09}\x0a\x09\x09return\x20shadow;\x0a\x09}\x0a\x09vec2\x20cubeToUV(\x20vec3\x20v,\x20float\x20texelSizeY\x20)\x20{\x0a\x09\x09vec3\x20absV\x20=\x20abs(\x20v\x20);\x0a\x09\x09float\x20scaleToCube\x20=\x201.0\x20/\x20max(\x20absV.x,\x20max(\x20absV.y,\x20absV.z\x20)\x20);\x0a\x09\x09absV\x20*=\x20scaleToCube;\x0a\x09\x09v\x20*=\x20scaleToCube\x20*\x20(\x201.0\x20-\x202.0\x20*\x20texelSizeY\x20);\x0a\x09\x09vec2\x20planar\x20=\x20v.xy;\x0a\x09\x09float\x20almostATexel\x20=\x201.5\x20*\x20texelSizeY;\x0a\x09\x09float\x20almostOne\x20=\x201.0\x20-\x20almostATexel;\x0a\x09\x09if\x20(\x20absV.z\x20>=\x20almostOne\x20)\x20{\x0a\x09\x09\x09if\x20(\x20v.z\x20>\x200.0\x20)\x0a\x09\x09\x09\x09planar.x\x20=\x204.0\x20-\x20v.x;\x0a\x09\x09}\x20else\x20if\x20(\x20absV.x\x20>=\x20almostOne\x20)\x20{\x0a\x09\x09\x09float\x20signX\x20=\x20sign(\x20v.x\x20);\x0a\x09\x09\x09planar.x\x20=\x20v.z\x20*\x20signX\x20+\x202.0\x20*\x20signX;\x0a\x09\x09}\x20else\x20if\x20(\x20absV.y\x20>=\x20almostOne\x20)\x20{\x0a\x09\x09\x09float\x20signY\x20=\x20sign(\x20v.y\x20);\x0a\x09\x09\x09planar.x\x20=\x20v.x\x20+\x202.0\x20*\x20signY\x20+\x202.0;\x0a\x09\x09\x09planar.y\x20=\x20v.z\x20*\x20signY\x20-\x202.0;\x0a\x09\x09}\x0a\x09\x09return\x20vec2(\x200.125,\x200.25\x20)\x20*\x20planar\x20+\x20vec2(\x200.375,\x200.75\x20);\x0a\x09}\x0a\x09float\x20getPointShadow(\x20sampler2D\x20shadowMap,\x20vec2\x20shadowMapSize,\x20float\x20shadowBias,\x20float\x20shadowRadius,\x20vec4\x20shadowCoord,\x20float\x20shadowCameraNear,\x20float\x20shadowCameraFar\x20)\x20{\x0a\x09\x09vec2\x20texelSize\x20=\x20vec2(\x201.0\x20)\x20/\x20(\x20shadowMapSize\x20*\x20vec2(\x204.0,\x202.0\x20)\x20);\x0a\x09\x09vec3\x20lightToPosition\x20=\x20shadowCoord.xyz;\x0a\x09\x09float\x20dp\x20=\x20(\x20length(\x20lightToPosition\x20)\x20-\x20shadowCameraNear\x20)\x20/\x20(\x20shadowCameraFar\x20-\x20shadowCameraNear\x20);\x09\x09dp\x20+=\x20shadowBias;\x0a\x09\x09vec3\x20bd3D\x20=\x20normalize(\x20lightToPosition\x20);\x0a\x09\x09#if\x20defined(\x20SHADOWMAP_TYPE_PCF\x20)\x20||\x20defined(\x20SHADOWMAP_TYPE_PCF_SOFT\x20)\x0a\x09\x09\x09vec2\x20offset\x20=\x20vec2(\x20-\x201,\x201\x20)\x20*\x20shadowRadius\x20*\x20texelSize.y;\x0a\x09\x09\x09return\x20(\x0a\x09\x09\x09\x09texture2DCompare(\x20shadowMap,\x20cubeToUV(\x20bd3D\x20+\x20offset.xyy,\x20texelSize.y\x20),\x20dp\x20)\x20+\x0a\x09\x09\x09\x09texture2DCompare(\x20shadowMap,\x20cubeToUV(\x20bd3D\x20+\x20offset.yyy,\x20texelSize.y\x20),\x20dp\x20)\x20+\x0a\x09\x09\x09\x09texture2DCompare(\x20shadowMap,\x20cubeToUV(\x20bd3D\x20+\x20offset.xyx,\x20texelSize.y\x20),\x20dp\x20)\x20+\x0a\x09\x09\x09\x09texture2DCompare(\x20shadowMap,\x20cubeToUV(\x20bd3D\x20+\x20offset.yyx,\x20texelSize.y\x20),\x20dp\x20)\x20+\x0a\x09\x09\x09\x09texture2DCompare(\x20shadowMap,\x20cubeToUV(\x20bd3D,\x20texelSize.y\x20),\x20dp\x20)\x20+\x0a\x09\x09\x09\x09texture2DCompare(\x20shadowMap,\x20cubeToUV(\x20bd3D\x20+\x20offset.xxy,\x20texelSize.y\x20),\x20dp\x20)\x20+\x0a\x09\x09\x09\x09texture2DCompare(\x20shadowMap,\x20cubeToUV(\x20bd3D\x20+\x20offset.yxy,\x20texelSize.y\x20),\x20dp\x20)\x20+\x0a\x09\x09\x09\x09texture2DCompare(\x20shadowMap,\x20cubeToUV(\x20bd3D\x20+\x20offset.xxx,\x20texelSize.y\x20),\x20dp\x20)\x20+\x0a\x09\x09\x09\x09texture2DCompare(\x20shadowMap,\x20cubeToUV(\x20bd3D\x20+\x20offset.yxx,\x20texelSize.y\x20),\x20dp\x20)\x0a\x09\x09\x09)\x20*\x20(\x201.0\x20/\x209.0\x20);\x0a\x09\x09#else\x0a\x09\x09\x09return\x20texture2DCompare(\x20shadowMap,\x20cubeToUV(\x20bd3D,\x20texelSize.y\x20),\x20dp\x20);\x0a\x09\x09#endif\x0a\x09}\x0a#endif',
        'shadowmap_pars_vertex': '#ifdef\x20USE_SHADOWMAP\x0a\x09#if\x20NUM_DIR_LIGHTS\x20>\x200\x0a\x09\x09uniform\x20mat4\x20directionalShadowMatrix[\x20NUM_DIR_LIGHTS\x20];\x0a\x09\x09varying\x20vec4\x20vDirectionalShadowCoord[\x20NUM_DIR_LIGHTS\x20];\x0a\x09#endif\x0a\x09#if\x20NUM_SPOT_LIGHTS\x20>\x200\x0a\x09\x09uniform\x20mat4\x20spotShadowMatrix[\x20NUM_SPOT_LIGHTS\x20];\x0a\x09\x09varying\x20vec4\x20vSpotShadowCoord[\x20NUM_SPOT_LIGHTS\x20];\x0a\x09#endif\x0a\x09#if\x20NUM_POINT_LIGHTS\x20>\x200\x0a\x09\x09uniform\x20mat4\x20pointShadowMatrix[\x20NUM_POINT_LIGHTS\x20];\x0a\x09\x09varying\x20vec4\x20vPointShadowCoord[\x20NUM_POINT_LIGHTS\x20];\x0a\x09#endif\x0a#endif',
        'shadowmap_vertex': '#ifdef\x20USE_SHADOWMAP\x0a\x09#if\x20NUM_DIR_LIGHTS\x20>\x200\x0a\x09#pragma\x20unroll_loop\x0a\x09for\x20(\x20int\x20i\x20=\x200;\x20i\x20<\x20NUM_DIR_LIGHTS;\x20i\x20++\x20)\x20{\x0a\x09\x09vDirectionalShadowCoord[\x20i\x20]\x20=\x20directionalShadowMatrix[\x20i\x20]\x20*\x20worldPosition;\x0a\x09}\x0a\x09#endif\x0a\x09#if\x20NUM_SPOT_LIGHTS\x20>\x200\x0a\x09#pragma\x20unroll_loop\x0a\x09for\x20(\x20int\x20i\x20=\x200;\x20i\x20<\x20NUM_SPOT_LIGHTS;\x20i\x20++\x20)\x20{\x0a\x09\x09vSpotShadowCoord[\x20i\x20]\x20=\x20spotShadowMatrix[\x20i\x20]\x20*\x20worldPosition;\x0a\x09}\x0a\x09#endif\x0a\x09#if\x20NUM_POINT_LIGHTS\x20>\x200\x0a\x09#pragma\x20unroll_loop\x0a\x09for\x20(\x20int\x20i\x20=\x200;\x20i\x20<\x20NUM_POINT_LIGHTS;\x20i\x20++\x20)\x20{\x0a\x09\x09vPointShadowCoord[\x20i\x20]\x20=\x20pointShadowMatrix[\x20i\x20]\x20*\x20worldPosition;\x0a\x09}\x0a\x09#endif\x0a#endif',
        'shadowmask_pars_fragment': 'float\x20getShadowMask()\x20{\x0a\x09float\x20shadow\x20=\x201.0;\x0a\x09#ifdef\x20USE_SHADOWMAP\x0a\x09#if\x20NUM_DIR_LIGHTS\x20>\x200\x0a\x09DirectionalLight\x20directionalLight;\x0a\x09#pragma\x20unroll_loop\x0a\x09for\x20(\x20int\x20i\x20=\x200;\x20i\x20<\x20NUM_DIR_LIGHTS;\x20i\x20++\x20)\x20{\x0a\x09\x09directionalLight\x20=\x20directionalLights[\x20i\x20];\x0a\x09\x09shadow\x20*=\x20bool(\x20directionalLight.shadow\x20)\x20?\x20getShadow(\x20directionalShadowMap[\x20i\x20],\x20directionalLight.shadowMapSize,\x20directionalLight.shadowBias,\x20directionalLight.shadowRadius,\x20vDirectionalShadowCoord[\x20i\x20]\x20)\x20:\x201.0;\x0a\x09}\x0a\x09#endif\x0a\x09#if\x20NUM_SPOT_LIGHTS\x20>\x200\x0a\x09SpotLight\x20spotLight;\x0a\x09#pragma\x20unroll_loop\x0a\x09for\x20(\x20int\x20i\x20=\x200;\x20i\x20<\x20NUM_SPOT_LIGHTS;\x20i\x20++\x20)\x20{\x0a\x09\x09spotLight\x20=\x20spotLights[\x20i\x20];\x0a\x09\x09shadow\x20*=\x20bool(\x20spotLight.shadow\x20)\x20?\x20getShadow(\x20spotShadowMap[\x20i\x20],\x20spotLight.shadowMapSize,\x20spotLight.shadowBias,\x20spotLight.shadowRadius,\x20vSpotShadowCoord[\x20i\x20]\x20)\x20:\x201.0;\x0a\x09}\x0a\x09#endif\x0a\x09#if\x20NUM_POINT_LIGHTS\x20>\x200\x0a\x09PointLight\x20pointLight;\x0a\x09#pragma\x20unroll_loop\x0a\x09for\x20(\x20int\x20i\x20=\x200;\x20i\x20<\x20NUM_POINT_LIGHTS;\x20i\x20++\x20)\x20{\x0a\x09\x09pointLight\x20=\x20pointLights[\x20i\x20];\x0a\x09\x09shadow\x20*=\x20bool(\x20pointLight.shadow\x20)\x20?\x20getPointShadow(\x20pointShadowMap[\x20i\x20],\x20pointLight.shadowMapSize,\x20pointLight.shadowBias,\x20pointLight.shadowRadius,\x20vPointShadowCoord[\x20i\x20],\x20pointLight.shadowCameraNear,\x20pointLight.shadowCameraFar\x20)\x20:\x201.0;\x0a\x09}\x0a\x09#endif\x0a\x09#endif\x0a\x09return\x20shadow;\x0a}',
        'skinbase_vertex': '#ifdef\x20USE_SKINNING\x0a\x09mat4\x20boneMatX\x20=\x20getBoneMatrix(\x20skinIndex.x\x20);\x0a\x09mat4\x20boneMatY\x20=\x20getBoneMatrix(\x20skinIndex.y\x20);\x0a\x09mat4\x20boneMatZ\x20=\x20getBoneMatrix(\x20skinIndex.z\x20);\x0a\x09mat4\x20boneMatW\x20=\x20getBoneMatrix(\x20skinIndex.w\x20);\x0a#endif',
        'skinning_pars_vertex': '#ifdef\x20USE_SKINNING\x0a\x09uniform\x20mat4\x20bindMatrix;\x0a\x09uniform\x20mat4\x20bindMatrixInverse;\x0a\x09#ifdef\x20BONE_TEXTURE\x0a\x09\x09uniform\x20sampler2D\x20boneTexture;\x0a\x09\x09uniform\x20int\x20boneTextureSize;\x0a\x09\x09mat4\x20getBoneMatrix(\x20const\x20in\x20float\x20i\x20)\x20{\x0a\x09\x09\x09float\x20j\x20=\x20i\x20*\x204.0;\x0a\x09\x09\x09float\x20x\x20=\x20mod(\x20j,\x20float(\x20boneTextureSize\x20)\x20);\x0a\x09\x09\x09float\x20y\x20=\x20floor(\x20j\x20/\x20float(\x20boneTextureSize\x20)\x20);\x0a\x09\x09\x09float\x20dx\x20=\x201.0\x20/\x20float(\x20boneTextureSize\x20);\x0a\x09\x09\x09float\x20dy\x20=\x201.0\x20/\x20float(\x20boneTextureSize\x20);\x0a\x09\x09\x09y\x20=\x20dy\x20*\x20(\x20y\x20+\x200.5\x20);\x0a\x09\x09\x09vec4\x20v1\x20=\x20texture2D(\x20boneTexture,\x20vec2(\x20dx\x20*\x20(\x20x\x20+\x200.5\x20),\x20y\x20)\x20);\x0a\x09\x09\x09vec4\x20v2\x20=\x20texture2D(\x20boneTexture,\x20vec2(\x20dx\x20*\x20(\x20x\x20+\x201.5\x20),\x20y\x20)\x20);\x0a\x09\x09\x09vec4\x20v3\x20=\x20texture2D(\x20boneTexture,\x20vec2(\x20dx\x20*\x20(\x20x\x20+\x202.5\x20),\x20y\x20)\x20);\x0a\x09\x09\x09vec4\x20v4\x20=\x20texture2D(\x20boneTexture,\x20vec2(\x20dx\x20*\x20(\x20x\x20+\x203.5\x20),\x20y\x20)\x20);\x0a\x09\x09\x09mat4\x20bone\x20=\x20mat4(\x20v1,\x20v2,\x20v3,\x20v4\x20);\x0a\x09\x09\x09return\x20bone;\x0a\x09\x09}\x0a\x09#else\x0a\x09\x09uniform\x20mat4\x20boneMatrices[\x20MAX_BONES\x20];\x0a\x09\x09mat4\x20getBoneMatrix(\x20const\x20in\x20float\x20i\x20)\x20{\x0a\x09\x09\x09mat4\x20bone\x20=\x20boneMatrices[\x20int(i)\x20];\x0a\x09\x09\x09return\x20bone;\x0a\x09\x09}\x0a\x09#endif\x0a#endif',
        'skinning_vertex': '#ifdef\x20USE_SKINNING\x0a\x09vec4\x20skinVertex\x20=\x20bindMatrix\x20*\x20vec4(\x20transformed,\x201.0\x20);\x0a\x09vec4\x20skinned\x20=\x20vec4(\x200.0\x20);\x0a\x09skinned\x20+=\x20boneMatX\x20*\x20skinVertex\x20*\x20skinWeight.x;\x0a\x09skinned\x20+=\x20boneMatY\x20*\x20skinVertex\x20*\x20skinWeight.y;\x0a\x09skinned\x20+=\x20boneMatZ\x20*\x20skinVertex\x20*\x20skinWeight.z;\x0a\x09skinned\x20+=\x20boneMatW\x20*\x20skinVertex\x20*\x20skinWeight.w;\x0a\x09transformed\x20=\x20(\x20bindMatrixInverse\x20*\x20skinned\x20).xyz;\x0a#endif',
        'skinnormal_vertex': '#ifdef\x20USE_SKINNING\x0a\x09mat4\x20skinMatrix\x20=\x20mat4(\x200.0\x20);\x0a\x09skinMatrix\x20+=\x20skinWeight.x\x20*\x20boneMatX;\x0a\x09skinMatrix\x20+=\x20skinWeight.y\x20*\x20boneMatY;\x0a\x09skinMatrix\x20+=\x20skinWeight.z\x20*\x20boneMatZ;\x0a\x09skinMatrix\x20+=\x20skinWeight.w\x20*\x20boneMatW;\x0a\x09skinMatrix\x20\x20=\x20bindMatrixInverse\x20*\x20skinMatrix\x20*\x20bindMatrix;\x0a\x09objectNormal\x20=\x20vec4(\x20skinMatrix\x20*\x20vec4(\x20objectNormal,\x200.0\x20)\x20).xyz;\x0a\x09#ifdef\x20USE_TANGENT\x0a\x09\x09objectTangent\x20=\x20vec4(\x20skinMatrix\x20*\x20vec4(\x20objectTangent,\x200.0\x20)\x20).xyz;\x0a\x09#endif\x0a#endif',
        'specularmap_fragment': 'float\x20specularStrength;\x0a#ifdef\x20USE_SPECULARMAP\x0a\x09vec4\x20texelSpecular\x20=\x20texture2D(\x20specularMap,\x20vUv\x20);\x0a\x09specularStrength\x20=\x20texelSpecular.r;\x0a#else\x0a\x09specularStrength\x20=\x201.0;\x0a#endif',
        'specularmap_pars_fragment': '#ifdef\x20USE_SPECULARMAP\x0a\x09uniform\x20sampler2D\x20specularMap;\x0a#endif',
        'tonemapping_fragment': '#if\x20defined(\x20TONE_MAPPING\x20)\x0a\x09gl_FragColor.rgb\x20=\x20toneMapping(\x20gl_FragColor.rgb\x20);\x0a#endif',
        'tonemapping_pars_fragment': '#ifndef\x20saturate\x0a\x09#define\x20saturate(a)\x20clamp(\x20a,\x200.0,\x201.0\x20)\x0a#endif\x0auniform\x20float\x20toneMappingExposure;\x0auniform\x20float\x20toneMappingWhitePoint;\x0avec3\x20LinearToneMapping(\x20vec3\x20color\x20)\x20{\x0a\x09return\x20toneMappingExposure\x20*\x20color;\x0a}\x0avec3\x20ReinhardToneMapping(\x20vec3\x20color\x20)\x20{\x0a\x09color\x20*=\x20toneMappingExposure;\x0a\x09return\x20saturate(\x20color\x20/\x20(\x20vec3(\x201.0\x20)\x20+\x20color\x20)\x20);\x0a}\x0a#define\x20Uncharted2Helper(\x20x\x20)\x20max(\x20(\x20(\x20x\x20*\x20(\x200.15\x20*\x20x\x20+\x200.10\x20*\x200.50\x20)\x20+\x200.20\x20*\x200.02\x20)\x20/\x20(\x20x\x20*\x20(\x200.15\x20*\x20x\x20+\x200.50\x20)\x20+\x200.20\x20*\x200.30\x20)\x20)\x20-\x200.02\x20/\x200.30,\x20vec3(\x200.0\x20)\x20)\x0avec3\x20Uncharted2ToneMapping(\x20vec3\x20color\x20)\x20{\x0a\x09color\x20*=\x20toneMappingExposure;\x0a\x09return\x20saturate(\x20Uncharted2Helper(\x20color\x20)\x20/\x20Uncharted2Helper(\x20vec3(\x20toneMappingWhitePoint\x20)\x20)\x20);\x0a}\x0avec3\x20OptimizedCineonToneMapping(\x20vec3\x20color\x20)\x20{\x0a\x09color\x20*=\x20toneMappingExposure;\x0a\x09color\x20=\x20max(\x20vec3(\x200.0\x20),\x20color\x20-\x200.004\x20);\x0a\x09return\x20pow(\x20(\x20color\x20*\x20(\x206.2\x20*\x20color\x20+\x200.5\x20)\x20)\x20/\x20(\x20color\x20*\x20(\x206.2\x20*\x20color\x20+\x201.7\x20)\x20+\x200.06\x20),\x20vec3(\x202.2\x20)\x20);\x0a}\x0avec3\x20ACESFilmicToneMapping(\x20vec3\x20color\x20)\x20{\x0a\x09color\x20*=\x20toneMappingExposure;\x0a\x09return\x20saturate(\x20(\x20color\x20*\x20(\x202.51\x20*\x20color\x20+\x200.03\x20)\x20)\x20/\x20(\x20color\x20*\x20(\x202.43\x20*\x20color\x20+\x200.59\x20)\x20+\x200.14\x20)\x20);\x0a}',
        'uv_pars_fragment': '#if\x20defined(\x20USE_MAP\x20)\x20||\x20defined(\x20USE_BUMPMAP\x20)\x20||\x20defined(\x20USE_NORMALMAP\x20)\x20||\x20defined(\x20USE_SPECULARMAP\x20)\x20||\x20defined(\x20USE_ALPHAMAP\x20)\x20||\x20defined(\x20USE_EMISSIVEMAP\x20)\x20||\x20defined(\x20USE_ROUGHNESSMAP\x20)\x20||\x20defined(\x20USE_METALNESSMAP\x20)\x0a\x09varying\x20vec2\x20vUv;\x0a#endif',
        'uv_pars_vertex': '#if\x20defined(\x20USE_MAP\x20)\x20||\x20defined(\x20USE_BUMPMAP\x20)\x20||\x20defined(\x20USE_NORMALMAP\x20)\x20||\x20defined(\x20USE_SPECULARMAP\x20)\x20||\x20defined(\x20USE_ALPHAMAP\x20)\x20||\x20defined(\x20USE_EMISSIVEMAP\x20)\x20||\x20defined(\x20USE_ROUGHNESSMAP\x20)\x20||\x20defined(\x20USE_METALNESSMAP\x20)\x0a\x09varying\x20vec2\x20vUv;\x0a\x09uniform\x20mat3\x20uvTransform;\x0a#endif',
        'uv_vertex': '#if\x20defined(\x20USE_MAP\x20)\x20||\x20defined(\x20USE_BUMPMAP\x20)\x20||\x20defined(\x20USE_NORMALMAP\x20)\x20||\x20defined(\x20USE_SPECULARMAP\x20)\x20||\x20defined(\x20USE_ALPHAMAP\x20)\x20||\x20defined(\x20USE_EMISSIVEMAP\x20)\x20||\x20defined(\x20USE_ROUGHNESSMAP\x20)\x20||\x20defined(\x20USE_METALNESSMAP\x20)\x0a\x09vUv\x20=\x20(\x20uvTransform\x20*\x20vec3(\x20uv,\x201\x20)\x20).xy;\x0a#endif',
        'uv2_pars_fragment': '#if\x20defined(\x20USE_LIGHTMAP\x20)\x20||\x20defined(\x20USE_AOMAP\x20)\x0a\x09varying\x20vec2\x20vUv2;\x0a#endif',
        'uv2_pars_vertex': '#if\x20defined(\x20USE_LIGHTMAP\x20)\x20||\x20defined(\x20USE_AOMAP\x20)\x0a\x09attribute\x20vec2\x20uv2;\x0a\x09varying\x20vec2\x20vUv2;\x0a#endif',
        'uv2_vertex': '#if\x20defined(\x20USE_LIGHTMAP\x20)\x20||\x20defined(\x20USE_AOMAP\x20)\x0a\x09vUv2\x20=\x20uv2;\x0a#endif',
        'worldpos_vertex': '#if\x20defined(\x20USE_ENVMAP\x20)\x20||\x20defined(\x20DISTANCE\x20)\x20||\x20defined\x20(\x20USE_SHADOWMAP\x20)\x0a\x09vec4\x20worldPosition\x20=\x20modelMatrix\x20*\x20vec4(\x20transformed,\x201.0\x20);\x0a#endif',
        'background_frag': 'uniform\x20sampler2D\x20t2D;\x0avarying\x20vec2\x20vUv;\x0avoid\x20main()\x20{\x0a\x09vec4\x20texColor\x20=\x20texture2D(\x20t2D,\x20vUv\x20);\x0a\x09gl_FragColor\x20=\x20mapTexelToLinear(\x20texColor\x20);\x0a\x09#include\x20<tonemapping_fragment>\x0a\x09#include\x20<encodings_fragment>\x0a}',
        'background_vert': 'varying\x20vec2\x20vUv;\x0auniform\x20mat3\x20uvTransform;\x0avoid\x20main()\x20{\x0a\x09vUv\x20=\x20(\x20uvTransform\x20*\x20vec3(\x20uv,\x201\x20)\x20).xy;\x0a\x09gl_Position\x20=\x20vec4(\x20position.xy,\x201.0,\x201.0\x20);\x0a}',
        'cube_frag': 'uniform\x20samplerCube\x20tCube;\x0auniform\x20float\x20tFlip;\x0auniform\x20float\x20opacity;\x0avarying\x20vec3\x20vWorldDirection;\x0avoid\x20main()\x20{\x0a\x09vec4\x20texColor\x20=\x20textureCube(\x20tCube,\x20vec3(\x20tFlip\x20*\x20vWorldDirection.x,\x20vWorldDirection.yz\x20)\x20);\x0a\x09gl_FragColor\x20=\x20mapTexelToLinear(\x20texColor\x20);\x0a\x09gl_FragColor.a\x20*=\x20opacity;\x0a\x09#include\x20<tonemapping_fragment>\x0a\x09#include\x20<encodings_fragment>\x0a}',
        'cube_vert': 'varying\x20vec3\x20vWorldDirection;\x0a#include\x20<common>\x0avoid\x20main()\x20{\x0a\x09vWorldDirection\x20=\x20transformDirection(\x20position,\x20modelMatrix\x20);\x0a\x09#include\x20<begin_vertex>\x0a\x09#include\x20<project_vertex>\x0a\x09gl_Position.z\x20=\x20gl_Position.w;\x0a}',
        'depth_frag': '#if\x20DEPTH_PACKING\x20==\x203200\x0a\x09uniform\x20float\x20opacity;\x0a#endif\x0a#include\x20<common>\x0a#include\x20<packing>\x0a#include\x20<uv_pars_fragment>\x0a#include\x20<map_pars_fragment>\x0a#include\x20<alphamap_pars_fragment>\x0a#include\x20<logdepthbuf_pars_fragment>\x0a#include\x20<clipping_planes_pars_fragment>\x0avoid\x20main()\x20{\x0a\x09#include\x20<clipping_planes_fragment>\x0a\x09vec4\x20diffuseColor\x20=\x20vec4(\x201.0\x20);\x0a\x09#if\x20DEPTH_PACKING\x20==\x203200\x0a\x09\x09diffuseColor.a\x20=\x20opacity;\x0a\x09#endif\x0a\x09#include\x20<map_fragment>\x0a\x09#include\x20<alphamap_fragment>\x0a\x09#include\x20<alphatest_fragment>\x0a\x09#include\x20<logdepthbuf_fragment>\x0a\x09#if\x20DEPTH_PACKING\x20==\x203200\x0a\x09\x09gl_FragColor\x20=\x20vec4(\x20vec3(\x201.0\x20-\x20gl_FragCoord.z\x20),\x20opacity\x20);\x0a\x09#elif\x20DEPTH_PACKING\x20==\x203201\x0a\x09\x09gl_FragColor\x20=\x20packDepthToRGBA(\x20gl_FragCoord.z\x20);\x0a\x09#endif\x0a}',
        'depth_vert': '#include\x20<common>\x0a#include\x20<uv_pars_vertex>\x0a#include\x20<displacementmap_pars_vertex>\x0a#include\x20<morphtarget_pars_vertex>\x0a#include\x20<skinning_pars_vertex>\x0a#include\x20<logdepthbuf_pars_vertex>\x0a#include\x20<clipping_planes_pars_vertex>\x0avoid\x20main()\x20{\x0a\x09#include\x20<uv_vertex>\x0a\x09#include\x20<skinbase_vertex>\x0a\x09#ifdef\x20USE_DISPLACEMENTMAP\x0a\x09\x09#include\x20<beginnormal_vertex>\x0a\x09\x09#include\x20<morphnormal_vertex>\x0a\x09\x09#include\x20<skinnormal_vertex>\x0a\x09#endif\x0a\x09#include\x20<begin_vertex>\x0a\x09#include\x20<morphtarget_vertex>\x0a\x09#include\x20<skinning_vertex>\x0a\x09#include\x20<displacementmap_vertex>\x0a\x09#include\x20<project_vertex>\x0a\x09#include\x20<logdepthbuf_vertex>\x0a\x09#include\x20<clipping_planes_vertex>\x0a}',
        'distanceRGBA_frag': '#define\x20DISTANCE\x0auniform\x20vec3\x20referencePosition;\x0auniform\x20float\x20nearDistance;\x0auniform\x20float\x20farDistance;\x0avarying\x20vec3\x20vWorldPosition;\x0a#include\x20<common>\x0a#include\x20<packing>\x0a#include\x20<uv_pars_fragment>\x0a#include\x20<map_pars_fragment>\x0a#include\x20<alphamap_pars_fragment>\x0a#include\x20<clipping_planes_pars_fragment>\x0avoid\x20main\x20()\x20{\x0a\x09#include\x20<clipping_planes_fragment>\x0a\x09vec4\x20diffuseColor\x20=\x20vec4(\x201.0\x20);\x0a\x09#include\x20<map_fragment>\x0a\x09#include\x20<alphamap_fragment>\x0a\x09#include\x20<alphatest_fragment>\x0a\x09float\x20dist\x20=\x20length(\x20vWorldPosition\x20-\x20referencePosition\x20);\x0a\x09dist\x20=\x20(\x20dist\x20-\x20nearDistance\x20)\x20/\x20(\x20farDistance\x20-\x20nearDistance\x20);\x0a\x09dist\x20=\x20saturate(\x20dist\x20);\x0a\x09gl_FragColor\x20=\x20packDepthToRGBA(\x20dist\x20);\x0a}',
        'distanceRGBA_vert': '#define\x20DISTANCE\x0avarying\x20vec3\x20vWorldPosition;\x0a#include\x20<common>\x0a#include\x20<uv_pars_vertex>\x0a#include\x20<displacementmap_pars_vertex>\x0a#include\x20<morphtarget_pars_vertex>\x0a#include\x20<skinning_pars_vertex>\x0a#include\x20<clipping_planes_pars_vertex>\x0avoid\x20main()\x20{\x0a\x09#include\x20<uv_vertex>\x0a\x09#include\x20<skinbase_vertex>\x0a\x09#ifdef\x20USE_DISPLACEMENTMAP\x0a\x09\x09#include\x20<beginnormal_vertex>\x0a\x09\x09#include\x20<morphnormal_vertex>\x0a\x09\x09#include\x20<skinnormal_vertex>\x0a\x09#endif\x0a\x09#include\x20<begin_vertex>\x0a\x09#include\x20<morphtarget_vertex>\x0a\x09#include\x20<skinning_vertex>\x0a\x09#include\x20<displacementmap_vertex>\x0a\x09#include\x20<project_vertex>\x0a\x09#include\x20<worldpos_vertex>\x0a\x09#include\x20<clipping_planes_vertex>\x0a\x09vWorldPosition\x20=\x20worldPosition.xyz;\x0a}',
        'equirect_frag': 'uniform\x20sampler2D\x20tEquirect;\x0avarying\x20vec3\x20vWorldDirection;\x0a#include\x20<common>\x0avoid\x20main()\x20{\x0a\x09vec3\x20direction\x20=\x20normalize(\x20vWorldDirection\x20);\x0a\x09vec2\x20sampleUV;\x0a\x09sampleUV.y\x20=\x20asin(\x20clamp(\x20direction.y,\x20-\x201.0,\x201.0\x20)\x20)\x20*\x20RECIPROCAL_PI\x20+\x200.5;\x0a\x09sampleUV.x\x20=\x20atan(\x20direction.z,\x20direction.x\x20)\x20*\x20RECIPROCAL_PI2\x20+\x200.5;\x0a\x09vec4\x20texColor\x20=\x20texture2D(\x20tEquirect,\x20sampleUV\x20);\x0a\x09gl_FragColor\x20=\x20mapTexelToLinear(\x20texColor\x20);\x0a\x09#include\x20<tonemapping_fragment>\x0a\x09#include\x20<encodings_fragment>\x0a}',
        'equirect_vert': 'varying\x20vec3\x20vWorldDirection;\x0a#include\x20<common>\x0avoid\x20main()\x20{\x0a\x09vWorldDirection\x20=\x20transformDirection(\x20position,\x20modelMatrix\x20);\x0a\x09#include\x20<begin_vertex>\x0a\x09#include\x20<project_vertex>\x0a}',
        'linedashed_frag': 'uniform\x20vec3\x20diffuse;\x0auniform\x20float\x20opacity;\x0auniform\x20float\x20dashSize;\x0auniform\x20float\x20totalSize;\x0avarying\x20float\x20vLineDistance;\x0a#include\x20<common>\x0a#include\x20<color_pars_fragment>\x0a#include\x20<fog_pars_fragment>\x0a#include\x20<logdepthbuf_pars_fragment>\x0a#include\x20<clipping_planes_pars_fragment>\x0avoid\x20main()\x20{\x0a\x09#include\x20<clipping_planes_fragment>\x0a\x09if\x20(\x20mod(\x20vLineDistance,\x20totalSize\x20)\x20>\x20dashSize\x20)\x20{\x0a\x09\x09discard;\x0a\x09}\x0a\x09vec3\x20outgoingLight\x20=\x20vec3(\x200.0\x20);\x0a\x09vec4\x20diffuseColor\x20=\x20vec4(\x20diffuse,\x20opacity\x20);\x0a\x09#include\x20<logdepthbuf_fragment>\x0a\x09#include\x20<color_fragment>\x0a\x09outgoingLight\x20=\x20diffuseColor.rgb;\x0a\x09gl_FragColor\x20=\x20vec4(\x20outgoingLight,\x20diffuseColor.a\x20);\x0a\x09#include\x20<premultiplied_alpha_fragment>\x0a\x09#include\x20<tonemapping_fragment>\x0a\x09#include\x20<encodings_fragment>\x0a\x09#include\x20<fog_fragment>\x0a}',
        'linedashed_vert': 'uniform\x20float\x20scale;\x0aattribute\x20float\x20lineDistance;\x0avarying\x20float\x20vLineDistance;\x0a#include\x20<common>\x0a#include\x20<color_pars_vertex>\x0a#include\x20<fog_pars_vertex>\x0a#include\x20<logdepthbuf_pars_vertex>\x0a#include\x20<clipping_planes_pars_vertex>\x0avoid\x20main()\x20{\x0a\x09#include\x20<color_vertex>\x0a\x09vLineDistance\x20=\x20scale\x20*\x20lineDistance;\x0a\x09vec4\x20mvPosition\x20=\x20modelViewMatrix\x20*\x20vec4(\x20position,\x201.0\x20);\x0a\x09gl_Position\x20=\x20projectionMatrix\x20*\x20mvPosition;\x0a\x09#include\x20<logdepthbuf_vertex>\x0a\x09#include\x20<clipping_planes_vertex>\x0a\x09#include\x20<fog_vertex>\x0a}',
        'meshbasic_frag': 'uniform\x20vec3\x20diffuse;\x0auniform\x20float\x20opacity;\x0a#ifndef\x20FLAT_SHADED\x0a\x09varying\x20vec3\x20vNormal;\x0a#endif\x0a#include\x20<common>\x0a#include\x20<color_pars_fragment>\x0a#include\x20<uv_pars_fragment>\x0a#include\x20<uv2_pars_fragment>\x0a#include\x20<map_pars_fragment>\x0a#include\x20<alphamap_pars_fragment>\x0a#include\x20<aomap_pars_fragment>\x0a#include\x20<lightmap_pars_fragment>\x0a#include\x20<envmap_pars_fragment>\x0a#include\x20<fog_pars_fragment>\x0a#include\x20<specularmap_pars_fragment>\x0a#include\x20<logdepthbuf_pars_fragment>\x0a#include\x20<clipping_planes_pars_fragment>\x0avoid\x20main()\x20{\x0a\x09#include\x20<clipping_planes_fragment>\x0a\x09vec4\x20diffuseColor\x20=\x20vec4(\x20diffuse,\x20opacity\x20);\x0a\x09#include\x20<logdepthbuf_fragment>\x0a\x09#include\x20<map_fragment>\x0a\x09#include\x20<color_fragment>\x0a\x09#include\x20<alphamap_fragment>\x0a\x09#include\x20<alphatest_fragment>\x0a\x09#include\x20<specularmap_fragment>\x0a\x09ReflectedLight\x20reflectedLight\x20=\x20ReflectedLight(\x20vec3(\x200.0\x20),\x20vec3(\x200.0\x20),\x20vec3(\x200.0\x20),\x20vec3(\x200.0\x20)\x20);\x0a\x09#ifdef\x20USE_LIGHTMAP\x0a\x09\x09reflectedLight.indirectDiffuse\x20+=\x20texture2D(\x20lightMap,\x20vUv2\x20).xyz\x20*\x20lightMapIntensity;\x0a\x09#else\x0a\x09\x09reflectedLight.indirectDiffuse\x20+=\x20vec3(\x201.0\x20);\x0a\x09#endif\x0a\x09#include\x20<aomap_fragment>\x0a\x09reflectedLight.indirectDiffuse\x20*=\x20diffuseColor.rgb;\x0a\x09vec3\x20outgoingLight\x20=\x20reflectedLight.indirectDiffuse;\x0a\x09#include\x20<envmap_fragment>\x0a\x09gl_FragColor\x20=\x20vec4(\x20outgoingLight,\x20diffuseColor.a\x20);\x0a\x09#include\x20<premultiplied_alpha_fragment>\x0a\x09#include\x20<tonemapping_fragment>\x0a\x09#include\x20<encodings_fragment>\x0a\x09#include\x20<fog_fragment>\x0a}',
        'meshbasic_vert': '#include\x20<common>\x0a#include\x20<uv_pars_vertex>\x0a#include\x20<uv2_pars_vertex>\x0a#include\x20<envmap_pars_vertex>\x0a#include\x20<color_pars_vertex>\x0a#include\x20<fog_pars_vertex>\x0a#include\x20<morphtarget_pars_vertex>\x0a#include\x20<skinning_pars_vertex>\x0a#include\x20<logdepthbuf_pars_vertex>\x0a#include\x20<clipping_planes_pars_vertex>\x0avoid\x20main()\x20{\x0a\x09#include\x20<uv_vertex>\x0a\x09#include\x20<uv2_vertex>\x0a\x09#include\x20<color_vertex>\x0a\x09#include\x20<skinbase_vertex>\x0a\x09#ifdef\x20USE_ENVMAP\x0a\x09#include\x20<beginnormal_vertex>\x0a\x09#include\x20<morphnormal_vertex>\x0a\x09#include\x20<skinnormal_vertex>\x0a\x09#include\x20<defaultnormal_vertex>\x0a\x09#endif\x0a\x09#include\x20<begin_vertex>\x0a\x09#include\x20<morphtarget_vertex>\x0a\x09#include\x20<skinning_vertex>\x0a\x09#include\x20<project_vertex>\x0a\x09#include\x20<logdepthbuf_vertex>\x0a\x09#include\x20<worldpos_vertex>\x0a\x09#include\x20<clipping_planes_vertex>\x0a\x09#include\x20<envmap_vertex>\x0a\x09#include\x20<fog_vertex>\x0a}',
        'meshlambert_frag': 'uniform\x20vec3\x20diffuse;\x0auniform\x20vec3\x20emissive;\x0auniform\x20float\x20opacity;\x0avarying\x20vec3\x20vLightFront;\x0avarying\x20vec3\x20vIndirectFront;\x0a#ifdef\x20DOUBLE_SIDED\x0a\x09varying\x20vec3\x20vLightBack;\x0a\x09varying\x20vec3\x20vIndirectBack;\x0a#endif\x0a#include\x20<common>\x0a#include\x20<packing>\x0a#include\x20<dithering_pars_fragment>\x0a#include\x20<color_pars_fragment>\x0a#include\x20<uv_pars_fragment>\x0a#include\x20<uv2_pars_fragment>\x0a#include\x20<map_pars_fragment>\x0a#include\x20<alphamap_pars_fragment>\x0a#include\x20<aomap_pars_fragment>\x0a#include\x20<lightmap_pars_fragment>\x0a#include\x20<emissivemap_pars_fragment>\x0a#include\x20<envmap_pars_fragment>\x0a#include\x20<bsdfs>\x0a#include\x20<lights_pars_begin>\x0a#include\x20<fog_pars_fragment>\x0a#include\x20<shadowmap_pars_fragment>\x0a#include\x20<shadowmask_pars_fragment>\x0a#include\x20<specularmap_pars_fragment>\x0a#include\x20<logdepthbuf_pars_fragment>\x0a#include\x20<clipping_planes_pars_fragment>\x0avoid\x20main()\x20{\x0a\x09#include\x20<clipping_planes_fragment>\x0a\x09vec4\x20diffuseColor\x20=\x20vec4(\x20diffuse,\x20opacity\x20);\x0a\x09ReflectedLight\x20reflectedLight\x20=\x20ReflectedLight(\x20vec3(\x200.0\x20),\x20vec3(\x200.0\x20),\x20vec3(\x200.0\x20),\x20vec3(\x200.0\x20)\x20);\x0a\x09vec3\x20totalEmissiveRadiance\x20=\x20emissive;\x0a\x09#include\x20<logdepthbuf_fragment>\x0a\x09#include\x20<map_fragment>\x0a\x09#include\x20<color_fragment>\x0a\x09#include\x20<alphamap_fragment>\x0a\x09#include\x20<alphatest_fragment>\x0a\x09#include\x20<specularmap_fragment>\x0a\x09#include\x20<emissivemap_fragment>\x0a\x09reflectedLight.indirectDiffuse\x20=\x20getAmbientLightIrradiance(\x20ambientLightColor\x20);\x0a\x09#ifdef\x20DOUBLE_SIDED\x0a\x09\x09reflectedLight.indirectDiffuse\x20+=\x20(\x20gl_FrontFacing\x20)\x20?\x20vIndirectFront\x20:\x20vIndirectBack;\x0a\x09#else\x0a\x09\x09reflectedLight.indirectDiffuse\x20+=\x20vIndirectFront;\x0a\x09#endif\x0a\x09#include\x20<lightmap_fragment>\x0a\x09reflectedLight.indirectDiffuse\x20*=\x20BRDF_Diffuse_Lambert(\x20diffuseColor.rgb\x20);\x0a\x09#ifdef\x20DOUBLE_SIDED\x0a\x09\x09reflectedLight.directDiffuse\x20=\x20(\x20gl_FrontFacing\x20)\x20?\x20vLightFront\x20:\x20vLightBack;\x0a\x09#else\x0a\x09\x09reflectedLight.directDiffuse\x20=\x20vLightFront;\x0a\x09#endif\x0a\x09reflectedLight.directDiffuse\x20*=\x20BRDF_Diffuse_Lambert(\x20diffuseColor.rgb\x20)\x20*\x20getShadowMask();\x0a\x09#include\x20<aomap_fragment>\x0a\x09vec3\x20outgoingLight\x20=\x20reflectedLight.directDiffuse\x20+\x20reflectedLight.indirectDiffuse\x20+\x20totalEmissiveRadiance;\x0a\x09#include\x20<envmap_fragment>\x0a\x09gl_FragColor\x20=\x20vec4(\x20outgoingLight,\x20diffuseColor.a\x20);\x0a\x09#include\x20<tonemapping_fragment>\x0a\x09#include\x20<encodings_fragment>\x0a\x09#include\x20<fog_fragment>\x0a\x09#include\x20<premultiplied_alpha_fragment>\x0a\x09#include\x20<dithering_fragment>\x0a}',
        'meshlambert_vert': '#define\x20LAMBERT\x0avarying\x20vec3\x20vLightFront;\x0avarying\x20vec3\x20vIndirectFront;\x0a#ifdef\x20DOUBLE_SIDED\x0a\x09varying\x20vec3\x20vLightBack;\x0a\x09varying\x20vec3\x20vIndirectBack;\x0a#endif\x0a#include\x20<common>\x0a#include\x20<uv_pars_vertex>\x0a#include\x20<uv2_pars_vertex>\x0a#include\x20<envmap_pars_vertex>\x0a#include\x20<bsdfs>\x0a#include\x20<lights_pars_begin>\x0a#include\x20<color_pars_vertex>\x0a#include\x20<fog_pars_vertex>\x0a#include\x20<morphtarget_pars_vertex>\x0a#include\x20<skinning_pars_vertex>\x0a#include\x20<shadowmap_pars_vertex>\x0a#include\x20<logdepthbuf_pars_vertex>\x0a#include\x20<clipping_planes_pars_vertex>\x0avoid\x20main()\x20{\x0a\x09#include\x20<uv_vertex>\x0a\x09#include\x20<uv2_vertex>\x0a\x09#include\x20<color_vertex>\x0a\x09#include\x20<beginnormal_vertex>\x0a\x09#include\x20<morphnormal_vertex>\x0a\x09#include\x20<skinbase_vertex>\x0a\x09#include\x20<skinnormal_vertex>\x0a\x09#include\x20<defaultnormal_vertex>\x0a\x09#include\x20<begin_vertex>\x0a\x09#include\x20<morphtarget_vertex>\x0a\x09#include\x20<skinning_vertex>\x0a\x09#include\x20<project_vertex>\x0a\x09#include\x20<logdepthbuf_vertex>\x0a\x09#include\x20<clipping_planes_vertex>\x0a\x09#include\x20<worldpos_vertex>\x0a\x09#include\x20<envmap_vertex>\x0a\x09#include\x20<lights_lambert_vertex>\x0a\x09#include\x20<shadowmap_vertex>\x0a\x09#include\x20<fog_vertex>\x0a}',
        'meshmatcap_frag': '#define\x20MATCAP\x0auniform\x20vec3\x20diffuse;\x0auniform\x20float\x20opacity;\x0auniform\x20sampler2D\x20matcap;\x0avarying\x20vec3\x20vViewPosition;\x0a#ifndef\x20FLAT_SHADED\x0a\x09varying\x20vec3\x20vNormal;\x0a#endif\x0a#include\x20<common>\x0a#include\x20<uv_pars_fragment>\x0a#include\x20<map_pars_fragment>\x0a#include\x20<alphamap_pars_fragment>\x0a#include\x20<fog_pars_fragment>\x0a#include\x20<bumpmap_pars_fragment>\x0a#include\x20<normalmap_pars_fragment>\x0a#include\x20<logdepthbuf_pars_fragment>\x0a#include\x20<clipping_planes_pars_fragment>\x0avoid\x20main()\x20{\x0a\x09#include\x20<clipping_planes_fragment>\x0a\x09vec4\x20diffuseColor\x20=\x20vec4(\x20diffuse,\x20opacity\x20);\x0a\x09#include\x20<logdepthbuf_fragment>\x0a\x09#include\x20<map_fragment>\x0a\x09#include\x20<alphamap_fragment>\x0a\x09#include\x20<alphatest_fragment>\x0a\x09#include\x20<normal_fragment_begin>\x0a\x09#include\x20<normal_fragment_maps>\x0a\x09vec3\x20viewDir\x20=\x20normalize(\x20vViewPosition\x20);\x0a\x09vec3\x20x\x20=\x20normalize(\x20vec3(\x20viewDir.z,\x200.0,\x20-\x20viewDir.x\x20)\x20);\x0a\x09vec3\x20y\x20=\x20cross(\x20viewDir,\x20x\x20);\x0a\x09vec2\x20uv\x20=\x20vec2(\x20dot(\x20x,\x20normal\x20),\x20dot(\x20y,\x20normal\x20)\x20)\x20*\x200.495\x20+\x200.5;\x0a\x09#ifdef\x20USE_MATCAP\x0a\x09\x09vec4\x20matcapColor\x20=\x20texture2D(\x20matcap,\x20uv\x20);\x0a\x09\x09matcapColor\x20=\x20matcapTexelToLinear(\x20matcapColor\x20);\x0a\x09#else\x0a\x09\x09vec4\x20matcapColor\x20=\x20vec4(\x201.0\x20);\x0a\x09#endif\x0a\x09vec3\x20outgoingLight\x20=\x20diffuseColor.rgb\x20*\x20matcapColor.rgb;\x0a\x09gl_FragColor\x20=\x20vec4(\x20outgoingLight,\x20diffuseColor.a\x20);\x0a\x09#include\x20<premultiplied_alpha_fragment>\x0a\x09#include\x20<tonemapping_fragment>\x0a\x09#include\x20<encodings_fragment>\x0a\x09#include\x20<fog_fragment>\x0a}',
        'meshmatcap_vert': '#define\x20MATCAP\x0avarying\x20vec3\x20vViewPosition;\x0a#ifndef\x20FLAT_SHADED\x0a\x09varying\x20vec3\x20vNormal;\x0a#endif\x0a#include\x20<common>\x0a#include\x20<uv_pars_vertex>\x0a#include\x20<displacementmap_pars_vertex>\x0a#include\x20<fog_pars_vertex>\x0a#include\x20<morphtarget_pars_vertex>\x0a#include\x20<skinning_pars_vertex>\x0a#include\x20<logdepthbuf_pars_vertex>\x0a#include\x20<clipping_planes_pars_vertex>\x0avoid\x20main()\x20{\x0a\x09#include\x20<uv_vertex>\x0a\x09#include\x20<beginnormal_vertex>\x0a\x09#include\x20<morphnormal_vertex>\x0a\x09#include\x20<skinbase_vertex>\x0a\x09#include\x20<skinnormal_vertex>\x0a\x09#include\x20<defaultnormal_vertex>\x0a\x09#ifndef\x20FLAT_SHADED\x0a\x09\x09vNormal\x20=\x20normalize(\x20transformedNormal\x20);\x0a\x09#endif\x0a\x09#include\x20<begin_vertex>\x0a\x09#include\x20<morphtarget_vertex>\x0a\x09#include\x20<skinning_vertex>\x0a\x09#include\x20<displacementmap_vertex>\x0a\x09#include\x20<project_vertex>\x0a\x09#include\x20<logdepthbuf_vertex>\x0a\x09#include\x20<clipping_planes_vertex>\x0a\x09#include\x20<fog_vertex>\x0a\x09vViewPosition\x20=\x20-\x20mvPosition.xyz;\x0a}',
        'meshphong_frag': '#define\x20PHONG\x0auniform\x20vec3\x20diffuse;\x0auniform\x20vec3\x20emissive;\x0auniform\x20vec3\x20specular;\x0auniform\x20float\x20shininess;\x0auniform\x20float\x20opacity;\x0a#include\x20<common>\x0a#include\x20<packing>\x0a#include\x20<dithering_pars_fragment>\x0a#include\x20<color_pars_fragment>\x0a#include\x20<uv_pars_fragment>\x0a#include\x20<uv2_pars_fragment>\x0a#include\x20<map_pars_fragment>\x0a#include\x20<alphamap_pars_fragment>\x0a#include\x20<aomap_pars_fragment>\x0a#include\x20<lightmap_pars_fragment>\x0a#include\x20<emissivemap_pars_fragment>\x0a#include\x20<envmap_pars_fragment>\x0a#include\x20<gradientmap_pars_fragment>\x0a#include\x20<fog_pars_fragment>\x0a#include\x20<bsdfs>\x0a#include\x20<lights_pars_begin>\x0a#include\x20<lights_phong_pars_fragment>\x0a#include\x20<shadowmap_pars_fragment>\x0a#include\x20<bumpmap_pars_fragment>\x0a#include\x20<normalmap_pars_fragment>\x0a#include\x20<specularmap_pars_fragment>\x0a#include\x20<logdepthbuf_pars_fragment>\x0a#include\x20<clipping_planes_pars_fragment>\x0avoid\x20main()\x20{\x0a\x09#include\x20<clipping_planes_fragment>\x0a\x09vec4\x20diffuseColor\x20=\x20vec4(\x20diffuse,\x20opacity\x20);\x0a\x09ReflectedLight\x20reflectedLight\x20=\x20ReflectedLight(\x20vec3(\x200.0\x20),\x20vec3(\x200.0\x20),\x20vec3(\x200.0\x20),\x20vec3(\x200.0\x20)\x20);\x0a\x09vec3\x20totalEmissiveRadiance\x20=\x20emissive;\x0a\x09#include\x20<logdepthbuf_fragment>\x0a\x09#include\x20<map_fragment>\x0a\x09#include\x20<color_fragment>\x0a\x09#include\x20<alphamap_fragment>\x0a\x09#include\x20<alphatest_fragment>\x0a\x09#include\x20<specularmap_fragment>\x0a\x09#include\x20<normal_fragment_begin>\x0a\x09#include\x20<normal_fragment_maps>\x0a\x09#include\x20<emissivemap_fragment>\x0a\x09#include\x20<lights_phong_fragment>\x0a\x09#include\x20<lights_fragment_begin>\x0a\x09#include\x20<lights_fragment_maps>\x0a\x09#include\x20<lights_fragment_end>\x0a\x09#include\x20<aomap_fragment>\x0a\x09vec3\x20outgoingLight\x20=\x20reflectedLight.directDiffuse\x20+\x20reflectedLight.indirectDiffuse\x20+\x20reflectedLight.directSpecular\x20+\x20reflectedLight.indirectSpecular\x20+\x20totalEmissiveRadiance;\x0a\x09#include\x20<envmap_fragment>\x0a\x09gl_FragColor\x20=\x20vec4(\x20outgoingLight,\x20diffuseColor.a\x20);\x0a\x09#include\x20<tonemapping_fragment>\x0a\x09#include\x20<encodings_fragment>\x0a\x09#include\x20<fog_fragment>\x0a\x09#include\x20<premultiplied_alpha_fragment>\x0a\x09#include\x20<dithering_fragment>\x0a}',
        'meshphong_vert': '#define\x20PHONG\x0avarying\x20vec3\x20vViewPosition;\x0a#ifndef\x20FLAT_SHADED\x0a\x09varying\x20vec3\x20vNormal;\x0a#endif\x0a#include\x20<common>\x0a#include\x20<uv_pars_vertex>\x0a#include\x20<uv2_pars_vertex>\x0a#include\x20<displacementmap_pars_vertex>\x0a#include\x20<envmap_pars_vertex>\x0a#include\x20<color_pars_vertex>\x0a#include\x20<fog_pars_vertex>\x0a#include\x20<morphtarget_pars_vertex>\x0a#include\x20<skinning_pars_vertex>\x0a#include\x20<shadowmap_pars_vertex>\x0a#include\x20<logdepthbuf_pars_vertex>\x0a#include\x20<clipping_planes_pars_vertex>\x0avoid\x20main()\x20{\x0a\x09#include\x20<uv_vertex>\x0a\x09#include\x20<uv2_vertex>\x0a\x09#include\x20<color_vertex>\x0a\x09#include\x20<beginnormal_vertex>\x0a\x09#include\x20<morphnormal_vertex>\x0a\x09#include\x20<skinbase_vertex>\x0a\x09#include\x20<skinnormal_vertex>\x0a\x09#include\x20<defaultnormal_vertex>\x0a#ifndef\x20FLAT_SHADED\x0a\x09vNormal\x20=\x20normalize(\x20transformedNormal\x20);\x0a#endif\x0a\x09#include\x20<begin_vertex>\x0a\x09#include\x20<morphtarget_vertex>\x0a\x09#include\x20<skinning_vertex>\x0a\x09#include\x20<displacementmap_vertex>\x0a\x09#include\x20<project_vertex>\x0a\x09#include\x20<logdepthbuf_vertex>\x0a\x09#include\x20<clipping_planes_vertex>\x0a\x09vViewPosition\x20=\x20-\x20mvPosition.xyz;\x0a\x09#include\x20<worldpos_vertex>\x0a\x09#include\x20<envmap_vertex>\x0a\x09#include\x20<shadowmap_vertex>\x0a\x09#include\x20<fog_vertex>\x0a}',
        'meshphysical_frag': '#define\x20PHYSICAL\x0auniform\x20vec3\x20diffuse;\x0auniform\x20vec3\x20emissive;\x0auniform\x20float\x20roughness;\x0auniform\x20float\x20metalness;\x0auniform\x20float\x20opacity;\x0a#ifndef\x20STANDARD\x0a\x09uniform\x20float\x20clearCoat;\x0a\x09uniform\x20float\x20clearCoatRoughness;\x0a#endif\x0avarying\x20vec3\x20vViewPosition;\x0a#ifndef\x20FLAT_SHADED\x0a\x09varying\x20vec3\x20vNormal;\x0a\x09#ifdef\x20USE_TANGENT\x0a\x09\x09varying\x20vec3\x20vTangent;\x0a\x09\x09varying\x20vec3\x20vBitangent;\x0a\x09#endif\x0a#endif\x0a#include\x20<common>\x0a#include\x20<packing>\x0a#include\x20<dithering_pars_fragment>\x0a#include\x20<color_pars_fragment>\x0a#include\x20<uv_pars_fragment>\x0a#include\x20<uv2_pars_fragment>\x0a#include\x20<map_pars_fragment>\x0a#include\x20<alphamap_pars_fragment>\x0a#include\x20<aomap_pars_fragment>\x0a#include\x20<lightmap_pars_fragment>\x0a#include\x20<emissivemap_pars_fragment>\x0a#include\x20<bsdfs>\x0a#include\x20<cube_uv_reflection_fragment>\x0a#include\x20<envmap_pars_fragment>\x0a#include\x20<envmap_physical_pars_fragment>\x0a#include\x20<fog_pars_fragment>\x0a#include\x20<lights_pars_begin>\x0a#include\x20<lights_physical_pars_fragment>\x0a#include\x20<shadowmap_pars_fragment>\x0a#include\x20<bumpmap_pars_fragment>\x0a#include\x20<normalmap_pars_fragment>\x0a#include\x20<roughnessmap_pars_fragment>\x0a#include\x20<metalnessmap_pars_fragment>\x0a#include\x20<logdepthbuf_pars_fragment>\x0a#include\x20<clipping_planes_pars_fragment>\x0avoid\x20main()\x20{\x0a\x09#include\x20<clipping_planes_fragment>\x0a\x09vec4\x20diffuseColor\x20=\x20vec4(\x20diffuse,\x20opacity\x20);\x0a\x09ReflectedLight\x20reflectedLight\x20=\x20ReflectedLight(\x20vec3(\x200.0\x20),\x20vec3(\x200.0\x20),\x20vec3(\x200.0\x20),\x20vec3(\x200.0\x20)\x20);\x0a\x09vec3\x20totalEmissiveRadiance\x20=\x20emissive;\x0a\x09#include\x20<logdepthbuf_fragment>\x0a\x09#include\x20<map_fragment>\x0a\x09#include\x20<color_fragment>\x0a\x09#include\x20<alphamap_fragment>\x0a\x09#include\x20<alphatest_fragment>\x0a\x09#include\x20<roughnessmap_fragment>\x0a\x09#include\x20<metalnessmap_fragment>\x0a\x09#include\x20<normal_fragment_begin>\x0a\x09#include\x20<normal_fragment_maps>\x0a\x09#include\x20<emissivemap_fragment>\x0a\x09#include\x20<lights_physical_fragment>\x0a\x09#include\x20<lights_fragment_begin>\x0a\x09#include\x20<lights_fragment_maps>\x0a\x09#include\x20<lights_fragment_end>\x0a\x09#include\x20<aomap_fragment>\x0a\x09vec3\x20outgoingLight\x20=\x20reflectedLight.directDiffuse\x20+\x20reflectedLight.indirectDiffuse\x20+\x20reflectedLight.directSpecular\x20+\x20reflectedLight.indirectSpecular\x20+\x20totalEmissiveRadiance;\x0a\x09gl_FragColor\x20=\x20vec4(\x20outgoingLight,\x20diffuseColor.a\x20);\x0a\x09#include\x20<tonemapping_fragment>\x0a\x09#include\x20<encodings_fragment>\x0a\x09#include\x20<fog_fragment>\x0a\x09#include\x20<premultiplied_alpha_fragment>\x0a\x09#include\x20<dithering_fragment>\x0a}',
        'meshphysical_vert': '#define\x20PHYSICAL\x0avarying\x20vec3\x20vViewPosition;\x0a#ifndef\x20FLAT_SHADED\x0a\x09varying\x20vec3\x20vNormal;\x0a\x09#ifdef\x20USE_TANGENT\x0a\x09\x09varying\x20vec3\x20vTangent;\x0a\x09\x09varying\x20vec3\x20vBitangent;\x0a\x09#endif\x0a#endif\x0a#include\x20<common>\x0a#include\x20<uv_pars_vertex>\x0a#include\x20<uv2_pars_vertex>\x0a#include\x20<displacementmap_pars_vertex>\x0a#include\x20<color_pars_vertex>\x0a#include\x20<fog_pars_vertex>\x0a#include\x20<morphtarget_pars_vertex>\x0a#include\x20<skinning_pars_vertex>\x0a#include\x20<shadowmap_pars_vertex>\x0a#include\x20<logdepthbuf_pars_vertex>\x0a#include\x20<clipping_planes_pars_vertex>\x0avoid\x20main()\x20{\x0a\x09#include\x20<uv_vertex>\x0a\x09#include\x20<uv2_vertex>\x0a\x09#include\x20<color_vertex>\x0a\x09#include\x20<beginnormal_vertex>\x0a\x09#include\x20<morphnormal_vertex>\x0a\x09#include\x20<skinbase_vertex>\x0a\x09#include\x20<skinnormal_vertex>\x0a\x09#include\x20<defaultnormal_vertex>\x0a#ifndef\x20FLAT_SHADED\x0a\x09vNormal\x20=\x20normalize(\x20transformedNormal\x20);\x0a\x09#ifdef\x20USE_TANGENT\x0a\x09\x09vTangent\x20=\x20normalize(\x20transformedTangent\x20);\x0a\x09\x09vBitangent\x20=\x20normalize(\x20cross(\x20vNormal,\x20vTangent\x20)\x20*\x20tangent.w\x20);\x0a\x09#endif\x0a#endif\x0a\x09#include\x20<begin_vertex>\x0a\x09#include\x20<morphtarget_vertex>\x0a\x09#include\x20<skinning_vertex>\x0a\x09#include\x20<displacementmap_vertex>\x0a\x09#include\x20<project_vertex>\x0a\x09#include\x20<logdepthbuf_vertex>\x0a\x09#include\x20<clipping_planes_vertex>\x0a\x09vViewPosition\x20=\x20-\x20mvPosition.xyz;\x0a\x09#include\x20<worldpos_vertex>\x0a\x09#include\x20<shadowmap_vertex>\x0a\x09#include\x20<fog_vertex>\x0a}',
        'normal_frag': '#define\x20NORMAL\x0auniform\x20float\x20opacity;\x0a#if\x20defined(\x20FLAT_SHADED\x20)\x20||\x20defined(\x20USE_BUMPMAP\x20)\x20||\x20(\x20defined(\x20USE_NORMALMAP\x20)\x20&&\x20!\x20defined(\x20OBJECTSPACE_NORMALMAP\x20)\x20)\x0a\x09varying\x20vec3\x20vViewPosition;\x0a#endif\x0a#ifndef\x20FLAT_SHADED\x0a\x09varying\x20vec3\x20vNormal;\x0a\x09#ifdef\x20USE_TANGENT\x0a\x09\x09varying\x20vec3\x20vTangent;\x0a\x09\x09varying\x20vec3\x20vBitangent;\x0a\x09#endif\x0a#endif\x0a#include\x20<packing>\x0a#include\x20<uv_pars_fragment>\x0a#include\x20<bumpmap_pars_fragment>\x0a#include\x20<normalmap_pars_fragment>\x0a#include\x20<logdepthbuf_pars_fragment>\x0avoid\x20main()\x20{\x0a\x09#include\x20<logdepthbuf_fragment>\x0a\x09#include\x20<normal_fragment_begin>\x0a\x09#include\x20<normal_fragment_maps>\x0a\x09gl_FragColor\x20=\x20vec4(\x20packNormalToRGB(\x20normal\x20),\x20opacity\x20);\x0a}',
        'normal_vert': '#define\x20NORMAL\x0a#if\x20defined(\x20FLAT_SHADED\x20)\x20||\x20defined(\x20USE_BUMPMAP\x20)\x20||\x20(\x20defined(\x20USE_NORMALMAP\x20)\x20&&\x20!\x20defined(\x20OBJECTSPACE_NORMALMAP\x20)\x20)\x0a\x09varying\x20vec3\x20vViewPosition;\x0a#endif\x0a#ifndef\x20FLAT_SHADED\x0a\x09varying\x20vec3\x20vNormal;\x0a\x09#ifdef\x20USE_TANGENT\x0a\x09\x09varying\x20vec3\x20vTangent;\x0a\x09\x09varying\x20vec3\x20vBitangent;\x0a\x09#endif\x0a#endif\x0a#include\x20<uv_pars_vertex>\x0a#include\x20<displacementmap_pars_vertex>\x0a#include\x20<morphtarget_pars_vertex>\x0a#include\x20<skinning_pars_vertex>\x0a#include\x20<logdepthbuf_pars_vertex>\x0avoid\x20main()\x20{\x0a\x09#include\x20<uv_vertex>\x0a\x09#include\x20<beginnormal_vertex>\x0a\x09#include\x20<morphnormal_vertex>\x0a\x09#include\x20<skinbase_vertex>\x0a\x09#include\x20<skinnormal_vertex>\x0a\x09#include\x20<defaultnormal_vertex>\x0a#ifndef\x20FLAT_SHADED\x0a\x09vNormal\x20=\x20normalize(\x20transformedNormal\x20);\x0a\x09#ifdef\x20USE_TANGENT\x0a\x09\x09vTangent\x20=\x20normalize(\x20transformedTangent\x20);\x0a\x09\x09vBitangent\x20=\x20normalize(\x20cross(\x20vNormal,\x20vTangent\x20)\x20*\x20tangent.w\x20);\x0a\x09#endif\x0a#endif\x0a\x09#include\x20<begin_vertex>\x0a\x09#include\x20<morphtarget_vertex>\x0a\x09#include\x20<skinning_vertex>\x0a\x09#include\x20<displacementmap_vertex>\x0a\x09#include\x20<project_vertex>\x0a\x09#include\x20<logdepthbuf_vertex>\x0a#if\x20defined(\x20FLAT_SHADED\x20)\x20||\x20defined(\x20USE_BUMPMAP\x20)\x20||\x20(\x20defined(\x20USE_NORMALMAP\x20)\x20&&\x20!\x20defined(\x20OBJECTSPACE_NORMALMAP\x20)\x20)\x0a\x09vViewPosition\x20=\x20-\x20mvPosition.xyz;\x0a#endif\x0a}',
        'points_frag': 'uniform\x20vec3\x20diffuse;\x0auniform\x20float\x20opacity;\x0a#include\x20<common>\x0a#include\x20<color_pars_fragment>\x0a#include\x20<map_particle_pars_fragment>\x0a#include\x20<fog_pars_fragment>\x0a#include\x20<logdepthbuf_pars_fragment>\x0a#include\x20<clipping_planes_pars_fragment>\x0avoid\x20main()\x20{\x0a\x09#include\x20<clipping_planes_fragment>\x0a\x09vec3\x20outgoingLight\x20=\x20vec3(\x200.0\x20);\x0a\x09vec4\x20diffuseColor\x20=\x20vec4(\x20diffuse,\x20opacity\x20);\x0a\x09#include\x20<logdepthbuf_fragment>\x0a\x09#include\x20<map_particle_fragment>\x0a\x09#include\x20<color_fragment>\x0a\x09#include\x20<alphatest_fragment>\x0a\x09outgoingLight\x20=\x20diffuseColor.rgb;\x0a\x09gl_FragColor\x20=\x20vec4(\x20outgoingLight,\x20diffuseColor.a\x20);\x0a\x09#include\x20<premultiplied_alpha_fragment>\x0a\x09#include\x20<tonemapping_fragment>\x0a\x09#include\x20<encodings_fragment>\x0a\x09#include\x20<fog_fragment>\x0a}',
        'points_vert': 'uniform\x20float\x20size;\x0auniform\x20float\x20scale;\x0a#include\x20<common>\x0a#include\x20<color_pars_vertex>\x0a#include\x20<fog_pars_vertex>\x0a#include\x20<morphtarget_pars_vertex>\x0a#include\x20<logdepthbuf_pars_vertex>\x0a#include\x20<clipping_planes_pars_vertex>\x0avoid\x20main()\x20{\x0a\x09#include\x20<color_vertex>\x0a\x09#include\x20<begin_vertex>\x0a\x09#include\x20<morphtarget_vertex>\x0a\x09#include\x20<project_vertex>\x0a\x09gl_PointSize\x20=\x20size;\x0a\x09#ifdef\x20USE_SIZEATTENUATION\x0a\x09\x09bool\x20isPerspective\x20=\x20(\x20projectionMatrix[\x202\x20][\x203\x20]\x20==\x20-\x201.0\x20);\x0a\x09\x09if\x20(\x20isPerspective\x20)\x20gl_PointSize\x20*=\x20(\x20scale\x20/\x20-\x20mvPosition.z\x20);\x0a\x09#endif\x0a\x09#include\x20<logdepthbuf_vertex>\x0a\x09#include\x20<clipping_planes_vertex>\x0a\x09#include\x20<worldpos_vertex>\x0a\x09#include\x20<fog_vertex>\x0a}',
        'shadow_frag': 'uniform\x20vec3\x20color;\x0auniform\x20float\x20opacity;\x0a#include\x20<common>\x0a#include\x20<packing>\x0a#include\x20<fog_pars_fragment>\x0a#include\x20<bsdfs>\x0a#include\x20<lights_pars_begin>\x0a#include\x20<shadowmap_pars_fragment>\x0a#include\x20<shadowmask_pars_fragment>\x0avoid\x20main()\x20{\x0a\x09gl_FragColor\x20=\x20vec4(\x20color,\x20opacity\x20*\x20(\x201.0\x20-\x20getShadowMask()\x20)\x20);\x0a\x09#include\x20<fog_fragment>\x0a}',
        'shadow_vert': '#include\x20<fog_pars_vertex>\x0a#include\x20<shadowmap_pars_vertex>\x0avoid\x20main()\x20{\x0a\x09#include\x20<begin_vertex>\x0a\x09#include\x20<project_vertex>\x0a\x09#include\x20<worldpos_vertex>\x0a\x09#include\x20<shadowmap_vertex>\x0a\x09#include\x20<fog_vertex>\x0a}',
        'sprite_frag': 'uniform\x20vec3\x20diffuse;\x0auniform\x20float\x20opacity;\x0a#include\x20<common>\x0a#include\x20<uv_pars_fragment>\x0a#include\x20<map_pars_fragment>\x0a#include\x20<fog_pars_fragment>\x0a#include\x20<logdepthbuf_pars_fragment>\x0a#include\x20<clipping_planes_pars_fragment>\x0avoid\x20main()\x20{\x0a\x09#include\x20<clipping_planes_fragment>\x0a\x09vec3\x20outgoingLight\x20=\x20vec3(\x200.0\x20);\x0a\x09vec4\x20diffuseColor\x20=\x20vec4(\x20diffuse,\x20opacity\x20);\x0a\x09#include\x20<logdepthbuf_fragment>\x0a\x09#include\x20<map_fragment>\x0a\x09#include\x20<alphatest_fragment>\x0a\x09outgoingLight\x20=\x20diffuseColor.rgb;\x0a\x09gl_FragColor\x20=\x20vec4(\x20outgoingLight,\x20diffuseColor.a\x20);\x0a\x09#include\x20<tonemapping_fragment>\x0a\x09#include\x20<encodings_fragment>\x0a\x09#include\x20<fog_fragment>\x0a}',
        'sprite_vert': 'uniform\x20float\x20rotation;\x0auniform\x20vec2\x20center;\x0a#include\x20<common>\x0a#include\x20<uv_pars_vertex>\x0a#include\x20<fog_pars_vertex>\x0a#include\x20<logdepthbuf_pars_vertex>\x0a#include\x20<clipping_planes_pars_vertex>\x0avoid\x20main()\x20{\x0a\x09#include\x20<uv_vertex>\x0a\x09vec4\x20mvPosition\x20=\x20modelViewMatrix\x20*\x20vec4(\x200.0,\x200.0,\x200.0,\x201.0\x20);\x0a\x09vec2\x20scale;\x0a\x09scale.x\x20=\x20length(\x20vec3(\x20modelMatrix[\x200\x20].x,\x20modelMatrix[\x200\x20].y,\x20modelMatrix[\x200\x20].z\x20)\x20);\x0a\x09scale.y\x20=\x20length(\x20vec3(\x20modelMatrix[\x201\x20].x,\x20modelMatrix[\x201\x20].y,\x20modelMatrix[\x201\x20].z\x20)\x20);\x0a\x09#ifndef\x20USE_SIZEATTENUATION\x0a\x09\x09bool\x20isPerspective\x20=\x20(\x20projectionMatrix[\x202\x20][\x203\x20]\x20==\x20-\x201.0\x20);\x0a\x09\x09if\x20(\x20isPerspective\x20)\x20scale\x20*=\x20-\x20mvPosition.z;\x0a\x09#endif\x0a\x09vec2\x20alignedPosition\x20=\x20(\x20position.xy\x20-\x20(\x20center\x20-\x20vec2(\x200.5\x20)\x20)\x20)\x20*\x20scale;\x0a\x09vec2\x20rotatedPosition;\x0a\x09rotatedPosition.x\x20=\x20cos(\x20rotation\x20)\x20*\x20alignedPosition.x\x20-\x20sin(\x20rotation\x20)\x20*\x20alignedPosition.y;\x0a\x09rotatedPosition.y\x20=\x20sin(\x20rotation\x20)\x20*\x20alignedPosition.x\x20+\x20cos(\x20rotation\x20)\x20*\x20alignedPosition.y;\x0a\x09mvPosition.xy\x20+=\x20rotatedPosition;\x0a\x09gl_Position\x20=\x20projectionMatrix\x20*\x20mvPosition;\x0a\x09#include\x20<logdepthbuf_vertex>\x0a\x09#include\x20<clipping_planes_vertex>\x0a\x09#include\x20<fog_vertex>\x0a}'
    };
    function vQ(bf) {
        var bg = {};
        for (var bh in bf)
            for (var bi in bg[bh] = {},
            bf[bh]) {
                var bF = bf[bh][bi];
                bF && (bF['isColor'] || bF['isMatrix3'] || bF['isMatrix4'] || bF['isVector2'] || bF['isVector3'] || bF['isVector4'] || bF['isTexture']) ? bg[bh][bi] = bF['clone']() : Array['isArray'](bF) ? bg[bh][bi] = bF['slice']() : bg[bh][bi] = bF;
            }
        return bg;
    }
    function vW(bf) {
        for (var bg = {}, bh = 0x0; bh < bf['length']; bh++) {
            var bi = vQ(bf[bh]);
            for (var bF in bi)
                bg[bF] = bi[bF];
        }
        return bg;
    }
    var w2, w3, w4, w5 = {
        'clone': vQ,
        'merge': vW
    }, w6 = {
        'aliceblue': 0xf0f8ff,
        'antiquewhite': 0xfaebd7,
        'aqua': 0xffff,
        'aquamarine': 0x7fffd4,
        'azure': 0xf0ffff,
        'beige': 0xf5f5dc,
        'bisque': 0xffe4c4,
        'black': 0x0,
        'blanchedalmond': 0xffebcd,
        'blue': 0xff,
        'blueviolet': 0x8a2be2,
        'brown': 0xa52a2a,
        'burlywood': 0xdeb887,
        'cadetblue': 0x5f9ea0,
        'chartreuse': 0x7fff00,
        'chocolate': 0xd2691e,
        'coral': 0xff7f50,
        'cornflowerblue': 0x6495ed,
        'cornsilk': 0xfff8dc,
        'crimson': 0xdc143c,
        'cyan': 0xffff,
        'darkblue': 0x8b,
        'darkcyan': 0x8b8b,
        'darkgoldenrod': 0xb8860b,
        'darkgray': 0xa9a9a9,
        'darkgreen': 0x6400,
        'darkgrey': 0xa9a9a9,
        'darkkhaki': 0xbdb76b,
        'darkmagenta': 0x8b008b,
        'darkolivegreen': 0x556b2f,
        'darkorange': 0xff8c00,
        'darkorchid': 0x9932cc,
        'darkred': 0x8b0000,
        'darksalmon': 0xe9967a,
        'darkseagreen': 0x8fbc8f,
        'darkslateblue': 0x483d8b,
        'darkslategray': 0x2f4f4f,
        'darkslategrey': 0x2f4f4f,
        'darkturquoise': 0xced1,
        'darkviolet': 0x9400d3,
        'deeppink': 0xff1493,
        'deepskyblue': 0xbfff,
        'dimgray': 0x696969,
        'dimgrey': 0x696969,
        'dodgerblue': 0x1e90ff,
        'firebrick': 0xb22222,
        'floralwhite': 0xfffaf0,
        'forestgreen': 0x228b22,
        'fuchsia': 0xff00ff,
        'gainsboro': 0xdcdcdc,
        'ghostwhite': 0xf8f8ff,
        'gold': 0xffd700,
        'goldenrod': 0xdaa520,
        'gray': 0x808080,
        'green': 0x8000,
        'greenyellow': 0xadff2f,
        'grey': 0x808080,
        'honeydew': 0xf0fff0,
        'hotpink': 0xff69b4,
        'indianred': 0xcd5c5c,
        'indigo': 0x4b0082,
        'ivory': 0xfffff0,
        'khaki': 0xf0e68c,
        'lavender': 0xe6e6fa,
        'lavenderblush': 0xfff0f5,
        'lawngreen': 0x7cfc00,
        'lemonchiffon': 0xfffacd,
        'lightblue': 0xadd8e6,
        'lightcoral': 0xf08080,
        'lightcyan': 0xe0ffff,
        'lightgoldenrodyellow': 0xfafad2,
        'lightgray': 0xd3d3d3,
        'lightgreen': 0x90ee90,
        'lightgrey': 0xd3d3d3,
        'lightpink': 0xffb6c1,
        'lightsalmon': 0xffa07a,
        'lightseagreen': 0x20b2aa,
        'lightskyblue': 0x87cefa,
        'lightslategray': 0x778899,
        'lightslategrey': 0x778899,
        'lightsteelblue': 0xb0c4de,
        'lightyellow': 0xffffe0,
        'lime': 0xff00,
        'limegreen': 0x32cd32,
        'linen': 0xfaf0e6,
        'magenta': 0xff00ff,
        'maroon': 0x800000,
        'mediumaquamarine': 0x66cdaa,
        'mediumblue': 0xcd,
        'mediumorchid': 0xba55d3,
        'mediumpurple': 0x9370db,
        'mediumseagreen': 0x3cb371,
        'mediumslateblue': 0x7b68ee,
        'mediumspringgreen': 0xfa9a,
        'mediumturquoise': 0x48d1cc,
        'mediumvioletred': 0xc71585,
        'midnightblue': 0x191970,
        'mintcream': 0xf5fffa,
        'mistyrose': 0xffe4e1,
        'moccasin': 0xffe4b5,
        'navajowhite': 0xffdead,
        'navy': 0x80,
        'oldlace': 0xfdf5e6,
        'olive': 0x808000,
        'olivedrab': 0x6b8e23,
        'orange': 0xffa500,
        'orangered': 0xff4500,
        'orchid': 0xda70d6,
        'palegoldenrod': 0xeee8aa,
        'palegreen': 0x98fb98,
        'paleturquoise': 0xafeeee,
        'palevioletred': 0xdb7093,
        'papayawhip': 0xffefd5,
        'peachpuff': 0xffdab9,
        'peru': 0xcd853f,
        'pink': 0xffc0cb,
        'plum': 0xdda0dd,
        'powderblue': 0xb0e0e6,
        'purple': 0x800080,
        'rebeccapurple': 0x663399,
        'red': 0xff0000,
        'rosybrown': 0xbc8f8f,
        'royalblue': 0x4169e1,
        'saddlebrown': 0x8b4513,
        'salmon': 0xfa8072,
        'sandybrown': 0xf4a460,
        'seagreen': 0x2e8b57,
        'seashell': 0xfff5ee,
        'sienna': 0xa0522d,
        'silver': 0xc0c0c0,
        'skyblue': 0x87ceeb,
        'slateblue': 0x6a5acd,
        'slategray': 0x708090,
        'slategrey': 0x708090,
        'snow': 0xfffafa,
        'springgreen': 0xff7f,
        'steelblue': 0x4682b4,
        'tan': 0xd2b48c,
        'teal': 0x8080,
        'thistle': 0xd8bfd8,
        'tomato': 0xff6347,
        'turquoise': 0x40e0d0,
        'violet': 0xee82ee,
        'wheat': 0xf5deb3,
        'white': 0xffffff,
        'whitesmoke': 0xf5f5f5,
        'yellow': 0xffff00,
        'yellowgreen': 0x9acd32
    };
    function w7(bf, bg, bh) {
        return void 0x0 === bg && void 0x0 === bh ? this['set'](bf) : this['setRGB'](bf, bg, bh);
    }
    Object['assign'](w7['prototype'], {
        'isColor': !0x0,
        'r': 0x1,
        'g': 0x1,
        'b': 0x1,
        'set': function(bf) {
            return bf && bf['isColor'] ? this['copy'](bf) : 'number' == typeof bf ? this['setHex'](bf) : 'string' == typeof bf && this['setStyle'](bf),
            this;
        },
        'setScalar': function(bf) {
            return this['r'] = bf,
            this['g'] = bf,
            this['b'] = bf,
            this;
        },
        'setHex': function(bf) {
            return bf = Math['floor'](bf),
            this['r'] = (bf >> 0x10 & 0xff) / 0xff,
            this['g'] = (bf >> 0x8 & 0xff) / 0xff,
            this['b'] = (0xff & bf) / 0xff,
            this;
        },
        'setRGB': function(bf, bg, bh) {
            return this['r'] = bf,
            this['g'] = bg,
            this['b'] = bh,
            this;
        },
        'setHSL': function() {
            function bf(bf, bg, bh) {
                return bh < 0x0 && (bh += 0x1),
                bh > 0x1 && (bh -= 0x1),
                bh < 0x1 / 0x6 ? bf + 0x6 * (bg - bf) * bh : bh < 0.5 ? bg : bh < 0x2 / 0x3 ? bf + 0x6 * (bg - bf) * (0x2 / 0x3 - bh) : bf;
            }
            return function(bg, bh, bi) {
                if (bg = e2['euclideanModulo'](bg, 0x1),
                bh = e2['clamp'](bh, 0x0, 0x1),
                bi = e2['clamp'](bi, 0x0, 0x1),
                0x0 === bh)
                    this['r'] = this['g'] = this['b'] = bi;
                else {
                    var bF = bi <= 0.5 ? bi * (0x1 + bh) : bi + bh - bi * bh
                      , bG = 0x2 * bi - bF;
                    this['r'] = bf(bG, bF, bg + 0x1 / 0x3),
                    this['g'] = bf(bG, bF, bg),
                    this['b'] = bf(bG, bF, bg - 0x1 / 0x3);
                }
                return this;
            }
            ;
        }(),
        'setStyle': function(bf) {
            function bg(bg) {
                void 0x0 !== bg && parseFloat(bg) < 0x1 && console['warn']('THREE.Color:\x20Alpha\x20component\x20of\x20' + bf + '\x20will\x20be\x20ignored.');
            }
            var bh;
            if (bh = /^((?:rgb|hsl)a?)\(\s*([^\)]*)\)/['exec'](bf)) {
                var bi, bF = bh[0x1], bG = bh[0x2];
                switch (bF) {
                case 'rgb':
                case 'rgba':
                    if (bi = /^(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/['exec'](bG))
                        return this['r'] = Math['min'](0xff, parseInt(bi[0x1], 0xa)) / 0xff,
                        this['g'] = Math['min'](0xff, parseInt(bi[0x2], 0xa)) / 0xff,
                        this['b'] = Math['min'](0xff, parseInt(bi[0x3], 0xa)) / 0xff,
                        bg(bi[0x5]),
                        this;
                    if (bi = /^(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/['exec'](bG))
                        return this['r'] = Math['min'](0x64, parseInt(bi[0x1], 0xa)) / 0x64,
                        this['g'] = Math['min'](0x64, parseInt(bi[0x2], 0xa)) / 0x64,
                        this['b'] = Math['min'](0x64, parseInt(bi[0x3], 0xa)) / 0x64,
                        bg(bi[0x5]),
                        this;
                    break;
                case 'hsl':
                case 'hsla':
                    if (bi = /^([0-9]*\.?[0-9]+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/['exec'](bG)) {
                        var bH = parseFloat(bi[0x1]) / 0x168
                          , bI = parseInt(bi[0x2], 0xa) / 0x64
                          , bJ = parseInt(bi[0x3], 0xa) / 0x64;
                        return bg(bi[0x5]),
                        this['setHSL'](bH, bI, bJ);
                    }
                }
            } else if (bh = /^\#([A-Fa-f0-9]+)$/['exec'](bf)) {
                var bK, bL = (bK = bh[0x1])['length'];
                if (0x3 === bL)
                    return this['r'] = parseInt(bK['charAt'](0x0) + bK['charAt'](0x0), 0x10) / 0xff,
                    this['g'] = parseInt(bK['charAt'](0x1) + bK['charAt'](0x1), 0x10) / 0xff,
                    this['b'] = parseInt(bK['charAt'](0x2) + bK['charAt'](0x2), 0x10) / 0xff,
                    this;
                if (0x6 === bL)
                    return this['r'] = parseInt(bK['charAt'](0x0) + bK['charAt'](0x1), 0x10) / 0xff,
                    this['g'] = parseInt(bK['charAt'](0x2) + bK['charAt'](0x3), 0x10) / 0xff,
                    this['b'] = parseInt(bK['charAt'](0x4) + bK['charAt'](0x5), 0x10) / 0xff,
                    this;
            }
            bf && bf['length'] > 0x0 && (void 0x0 !== (bK = w6[bf]) ? this['setHex'](bK) : console['warn']('THREE.Color:\x20Unknown\x20color\x20' + bf));
            return this;
        },
        'clone': function() {
            return new this['constructor'](this['r'],this['g'],this['b']);
        },
        'copy': function(bf) {
            return this['r'] = bf['r'],
            this['g'] = bf['g'],
            this['b'] = bf['b'],
            this;
        },
        'copyGammaToLinear': function(bf, bg) {
            return void 0x0 === bg && (bg = 0x2),
            this['r'] = Math['pow'](bf['r'], bg),
            this['g'] = Math['pow'](bf['g'], bg),
            this['b'] = Math['pow'](bf['b'], bg),
            this;
        },
        'copyLinearToGamma': function(bf, bg) {
            void 0x0 === bg && (bg = 0x2);
            var bh = bg > 0x0 ? 0x1 / bg : 0x1;
            return this['r'] = Math['pow'](bf['r'], bh),
            this['g'] = Math['pow'](bf['g'], bh),
            this['b'] = Math['pow'](bf['b'], bh),
            this;
        },
        'convertGammaToLinear': function(bf) {
            return this['copyGammaToLinear'](this, bf),
            this;
        },
        'convertLinearToGamma': function(bf) {
            return this['copyLinearToGamma'](this, bf),
            this;
        },
        'copySRGBToLinear': function() {
            function bf(bf) {
                return bf < 0.04045 ? 0.0773993808 * bf : Math['pow'](0.9478672986 * bf + 0.0521327014, 2.4);
            }
            return function(bg) {
                return this['r'] = bf(bg['r']),
                this['g'] = bf(bg['g']),
                this['b'] = bf(bg['b']),
                this;
            }
            ;
        }(),
        'copyLinearToSRGB': function() {
            function bf(bf) {
                return bf < 0.0031308 ? 12.92 * bf : 1.055 * Math['pow'](bf, 0.41666) - 0.055;
            }
            return function(bg) {
                return this['r'] = bf(bg['r']),
                this['g'] = bf(bg['g']),
                this['b'] = bf(bg['b']),
                this;
            }
            ;
        }(),
        'convertSRGBToLinear': function() {
            return this['copySRGBToLinear'](this),
            this;
        },
        'convertLinearToSRGB': function() {
            return this['copyLinearToSRGB'](this),
            this;
        },
        'getHex': function() {
            return 0xff * this['r'] << 0x10 ^ 0xff * this['g'] << 0x8 ^ 0xff * this['b'] << 0x0;
        },
        'getHexString': function() {
            return ('000000' + this['getHex']()['toString'](0x10))['slice'](-0x6);
        },
        'getHSL': function(bf) {
            void 0x0 === bf && (console['warn']('THREE.Color:\x20.getHSL()\x20target\x20is\x20now\x20required'),
            bf = {
                'h': 0x0,
                's': 0x0,
                'l': 0x0
            });
            var bg, bh, bi = this['r'], bF = this['g'], bG = this['b'], bH = Math['max'](bi, bF, bG), bI = Math['min'](bi, bF, bG), bJ = (bI + bH) / 0x2;
            if (bI === bH)
                bg = 0x0,
                bh = 0x0;
            else {
                var bK = bH - bI;
                switch (bh = bJ <= 0.5 ? bK / (bH + bI) : bK / (0x2 - bH - bI),
                bH) {
                case bi:
                    bg = (bF - bG) / bK + (bF < bG ? 0x6 : 0x0);
                    break;
                case bF:
                    bg = (bG - bi) / bK + 0x2;
                    break;
                case bG:
                    bg = (bi - bF) / bK + 0x4;
                }
                bg /= 0x6;
            }
            return bf['h'] = bg,
            bf['s'] = bh,
            bf['l'] = bJ,
            bf;
        },
        'getStyle': function() {
            return 'rgb(' + (0xff * this['r'] | 0x0) + ',' + (0xff * this['g'] | 0x0) + ',' + (0xff * this['b'] | 0x0) + ')';
        },
        'offsetHSL': (w4 = {},
        function(bf, bg, bh) {
            return this['getHSL'](w4),
            w4['h'] += bf,
            w4['s'] += bg,
            w4['l'] += bh,
            this['setHSL'](w4['h'], w4['s'], w4['l']),
            this;
        }
        ),
        'add': function(bf) {
            return this['r'] += bf['r'],
            this['g'] += bf['g'],
            this['b'] += bf['b'],
            this;
        },
        'addColors': function(bf, bg) {
            return this['r'] = bf['r'] + bg['r'],
            this['g'] = bf['g'] + bg['g'],
            this['b'] = bf['b'] + bg['b'],
            this;
        },
        'addScalar': function(bf) {
            return this['r'] += bf,
            this['g'] += bf,
            this['b'] += bf,
            this;
        },
        'sub': function(bf) {
            return this['r'] = Math['max'](0x0, this['r'] - bf['r']),
            this['g'] = Math['max'](0x0, this['g'] - bf['g']),
            this['b'] = Math['max'](0x0, this['b'] - bf['b']),
            this;
        },
        'multiply': function(bf) {
            return this['r'] *= bf['r'],
            this['g'] *= bf['g'],
            this['b'] *= bf['b'],
            this;
        },
        'multiplyScalar': function(bf) {
            return this['r'] *= bf,
            this['g'] *= bf,
            this['b'] *= bf,
            this;
        },
        'lerp': function(bf, bg) {
            return this['r'] += (bf['r'] - this['r']) * bg,
            this['g'] += (bf['g'] - this['g']) * bg,
            this['b'] += (bf['b'] - this['b']) * bg,
            this;
        },
        'lerpHSL': (w2 = {
            'h': 0x0,
            's': 0x0,
            'l': 0x0
        },
        w3 = {
            'h': 0x0,
            's': 0x0,
            'l': 0x0
        },
        function(bf, bg) {
            this['getHSL'](w2),
            bf['getHSL'](w3);
            var bh = e2['lerp'](w2['h'], w3['h'], bg)
              , bi = e2['lerp'](w2['s'], w3['s'], bg)
              , bF = e2['lerp'](w2['l'], w3['l'], bg);
            return this['setHSL'](bh, bi, bF),
            this;
        }
        ),
        'equals': function(bf) {
            return bf['r'] === this['r'] && bf['g'] === this['g'] && bf['b'] === this['b'];
        },
        'fromArray': function(bf, bg) {
            return void 0x0 === bg && (bg = 0x0),
            this['r'] = bf[bg],
            this['g'] = bf[bg + 0x1],
            this['b'] = bf[bg + 0x2],
            this;
        },
        'toArray': function(bf, bg) {
            return void 0x0 === bf && (bf = []),
            void 0x0 === bg && (bg = 0x0),
            bf[bg] = this['r'],
            bf[bg + 0x1] = this['g'],
            bf[bg + 0x2] = this['b'],
            bf;
        },
        'toJSON': function() {
            return this['getHex']();
        }
    });
    var xm, xn = {
        'common': {
            'diffuse': {
                'value': new w7(0xeeeeee)
            },
            'opacity': {
                'value': 0x1
            },
            'map': {
                'value': null
            },
            'uvTransform': {
                'value': new eO()
            },
            'alphaMap': {
                'value': null
            }
        },
        'specularmap': {
            'specularMap': {
                'value': null
            }
        },
        'envmap': {
            'envMap': {
                'value': null
            },
            'flipEnvMap': {
                'value': -0x1
            },
            'reflectivity': {
                'value': 0x1
            },
            'refractionRatio': {
                'value': 0.98
            },
            'maxMipLevel': {
                'value': 0x0
            }
        },
        'aomap': {
            'aoMap': {
                'value': null
            },
            'aoMapIntensity': {
                'value': 0x1
            }
        },
        'lightmap': {
            'lightMap': {
                'value': null
            },
            'lightMapIntensity': {
                'value': 0x1
            }
        },
        'emissivemap': {
            'emissiveMap': {
                'value': null
            }
        },
        'bumpmap': {
            'bumpMap': {
                'value': null
            },
            'bumpScale': {
                'value': 0x1
            }
        },
        'normalmap': {
            'normalMap': {
                'value': null
            },
            'normalScale': {
                'value': new eC(0x1,0x1)
            }
        },
        'displacementmap': {
            'displacementMap': {
                'value': null
            },
            'displacementScale': {
                'value': 0x1
            },
            'displacementBias': {
                'value': 0x0
            }
        },
        'roughnessmap': {
            'roughnessMap': {
                'value': null
            }
        },
        'metalnessmap': {
            'metalnessMap': {
                'value': null
            }
        },
        'gradientmap': {
            'gradientMap': {
                'value': null
            }
        },
        'fog': {
            'fogDensity': {
                'value': 0.00025
            },
            'fogNear': {
                'value': 0x1
            },
            'fogFar': {
                'value': 0x7d0
            },
            'fogColor': {
                'value': new w7(0xffffff)
            }
        },
        'lights': {
            'ambientLightColor': {
                'value': []
            },
            'lightProbe': {
                'value': []
            },
            'directionalLights': {
                'value': [],
                'properties': {
                    'direction': {},
                    'color': {},
                    'shadow': {},
                    'shadowBias': {},
                    'shadowRadius': {},
                    'shadowMapSize': {}
                }
            },
            'directionalShadowMap': {
                'value': []
            },
            'directionalShadowMatrix': {
                'value': []
            },
            'spotLights': {
                'value': [],
                'properties': {
                    'color': {},
                    'position': {},
                    'direction': {},
                    'distance': {},
                    'coneCos': {},
                    'penumbraCos': {},
                    'decay': {},
                    'shadow': {},
                    'shadowBias': {},
                    'shadowRadius': {},
                    'shadowMapSize': {}
                }
            },
            'spotShadowMap': {
                'value': []
            },
            'spotShadowMatrix': {
                'value': []
            },
            'pointLights': {
                'value': [],
                'properties': {
                    'color': {},
                    'position': {},
                    'decay': {},
                    'distance': {},
                    'shadow': {},
                    'shadowBias': {},
                    'shadowRadius': {},
                    'shadowMapSize': {},
                    'shadowCameraNear': {},
                    'shadowCameraFar': {}
                }
            },
            'pointShadowMap': {
                'value': []
            },
            'pointShadowMatrix': {
                'value': []
            },
            'hemisphereLights': {
                'value': [],
                'properties': {
                    'direction': {},
                    'skyColor': {},
                    'groundColor': {}
                }
            },
            'rectAreaLights': {
                'value': [],
                'properties': {
                    'color': {},
                    'position': {},
                    'width': {},
                    'height': {}
                }
            }
        },
        'points': {
            'diffuse': {
                'value': new w7(0xeeeeee)
            },
            'opacity': {
                'value': 0x1
            },
            'size': {
                'value': 0x1
            },
            'scale': {
                'value': 0x1
            },
            'map': {
                'value': null
            },
            'uvTransform': {
                'value': new eO()
            }
        },
        'sprite': {
            'diffuse': {
                'value': new w7(0xeeeeee)
            },
            'opacity': {
                'value': 0x1
            },
            'center': {
                'value': new eC(0.5,0.5)
            },
            'rotation': {
                'value': 0x0
            },
            'map': {
                'value': null
            },
            'uvTransform': {
                'value': new eO()
            }
        }
    }, xo = {
        'basic': {
            'uniforms': vW([xn['common'], xn['specularmap'], xn['envmap'], xn['aomap'], xn['lightmap'], xn['fog']]),
            'vertexShader': vP['meshbasic_vert'],
            'fragmentShader': vP['meshbasic_frag']
        },
        'lambert': {
            'uniforms': vW([xn['common'], xn['specularmap'], xn['envmap'], xn['aomap'], xn['lightmap'], xn['emissivemap'], xn['fog'], xn['lights'], {
                'emissive': {
                    'value': new w7(0x0)
                }
            }]),
            'vertexShader': vP['meshlambert_vert'],
            'fragmentShader': vP['meshlambert_frag']
        },
        'phong': {
            'uniforms': vW([xn['common'], xn['specularmap'], xn['envmap'], xn['aomap'], xn['lightmap'], xn['emissivemap'], xn['bumpmap'], xn['normalmap'], xn['displacementmap'], xn['gradientmap'], xn['fog'], xn['lights'], {
                'emissive': {
                    'value': new w7(0x0)
                },
                'specular': {
                    'value': new w7(0x111111)
                },
                'shininess': {
                    'value': 0x1e
                }
            }]),
            'vertexShader': vP['meshphong_vert'],
            'fragmentShader': vP['meshphong_frag']
        },
        'standard': {
            'uniforms': vW([xn['common'], xn['envmap'], xn['aomap'], xn['lightmap'], xn['emissivemap'], xn['bumpmap'], xn['normalmap'], xn['displacementmap'], xn['roughnessmap'], xn['metalnessmap'], xn['fog'], xn['lights'], {
                'emissive': {
                    'value': new w7(0x0)
                },
                'roughness': {
                    'value': 0.5
                },
                'metalness': {
                    'value': 0.5
                },
                'envMapIntensity': {
                    'value': 0x1
                }
            }]),
            'vertexShader': vP['meshphysical_vert'],
            'fragmentShader': vP['meshphysical_frag']
        },
        'matcap': {
            'uniforms': vW([xn['common'], xn['bumpmap'], xn['normalmap'], xn['displacementmap'], xn['fog'], {
                'matcap': {
                    'value': null
                }
            }]),
            'vertexShader': vP['meshmatcap_vert'],
            'fragmentShader': vP['meshmatcap_frag']
        },
        'points': {
            'uniforms': vW([xn['points'], xn['fog']]),
            'vertexShader': vP['points_vert'],
            'fragmentShader': vP['points_frag']
        },
        'dashed': {
            'uniforms': vW([xn['common'], xn['fog'], {
                'scale': {
                    'value': 0x1
                },
                'dashSize': {
                    'value': 0x1
                },
                'totalSize': {
                    'value': 0x2
                }
            }]),
            'vertexShader': vP['linedashed_vert'],
            'fragmentShader': vP['linedashed_frag']
        },
        'depth': {
            'uniforms': vW([xn['common'], xn['displacementmap']]),
            'vertexShader': vP['depth_vert'],
            'fragmentShader': vP['depth_frag']
        },
        'normal': {
            'uniforms': vW([xn['common'], xn['bumpmap'], xn['normalmap'], xn['displacementmap'], {
                'opacity': {
                    'value': 0x1
                }
            }]),
            'vertexShader': vP['normal_vert'],
            'fragmentShader': vP['normal_frag']
        },
        'sprite': {
            'uniforms': vW([xn['sprite'], xn['fog']]),
            'vertexShader': vP['sprite_vert'],
            'fragmentShader': vP['sprite_frag']
        },
        'background': {
            'uniforms': {
                'uvTransform': {
                    'value': new eO()
                },
                't2D': {
                    'value': null
                }
            },
            'vertexShader': vP['background_vert'],
            'fragmentShader': vP['background_frag']
        },
        'cube': {
            'uniforms': {
                'tCube': {
                    'value': null
                },
                'tFlip': {
                    'value': -0x1
                },
                'opacity': {
                    'value': 0x1
                }
            },
            'vertexShader': vP['cube_vert'],
            'fragmentShader': vP['cube_frag']
        },
        'equirect': {
            'uniforms': {
                'tEquirect': {
                    'value': null
                }
            },
            'vertexShader': vP['equirect_vert'],
            'fragmentShader': vP['equirect_frag']
        },
        'distanceRGBA': {
            'uniforms': vW([xn['common'], xn['displacementmap'], {
                'referencePosition': {
                    'value': new eK()
                },
                'nearDistance': {
                    'value': 0x1
                },
                'farDistance': {
                    'value': 0x3e8
                }
            }]),
            'vertexShader': vP['distanceRGBA_vert'],
            'fragmentShader': vP['distanceRGBA_frag']
        },
        'shadow': {
            'uniforms': vW([xn['lights'], xn['fog'], {
                'color': {
                    'value': new w7(0x0)
                },
                'opacity': {
                    'value': 0x1
                }
            }]),
            'vertexShader': vP['shadow_vert'],
            'fragmentShader': vP['shadow_frag']
        }
    };
    function xp() {
        var bf = null
          , bg = !0x1
          , bh = null;
        function bi(bF, bG) {
            !0x1 !== bg && (bh(bF, bG),
            bf['requestAnimationFrame'](bi));
        }
        return {
            'start': function() {
                !0x0 !== bg && null !== bh && (bf['requestAnimationFrame'](bi),
                bg = !0x0);
            },
            'stop': function() {
                bg = !0x1;
            },
            'setAnimationLoop': function(bf) {
                bh = bf;
            },
            'setContext': function(bg) {
                bf = bg;
            }
        };
    }
    function xy(bf) {
        var bg = new WeakMap();
        return {
            'get': function(bf) {
                return bf['isInterleavedBufferAttribute'] && (bf = bf['data']),
                bg['get'](bf);
            },
            'remove': function(bh) {
                bh['isInterleavedBufferAttribute'] && (bh = bh['data']);
                var bi = bg['get'](bh);
                bi && (bf['deleteBuffer'](bi['buffer']),
                bg['delete'](bh));
            },
            'update': function(bh, bi) {
                bh['isInterleavedBufferAttribute'] && (bh = bh['data']);
                var bF = bg['get'](bh);
                void 0x0 === bF ? bg['set'](bh, function(bg, bh) {
                    var bi = bg['array']
                      , bF = bg['dynamic'] ? 0x88e8 : 0x88e4
                      , bG = bf['createBuffer']();
                    bf['bindBuffer'](bh, bG),
                    bf['bufferData'](bh, bi, bF),
                    bg['onUploadCallback']();
                    var bH = 0x1406;
                    return bi instanceof Float32Array ? bH = 0x1406 : bi instanceof Float64Array ? console['warn']('THREE.WebGLAttributes:\x20Unsupported\x20data\x20buffer\x20format:\x20Float64Array.') : bi instanceof Uint16Array ? bH = 0x1403 : bi instanceof Int16Array ? bH = 0x1402 : bi instanceof Uint32Array ? bH = 0x1405 : bi instanceof Int32Array ? bH = 0x1404 : bi instanceof Int8Array ? bH = 0x1400 : bi instanceof Uint8Array && (bH = 0x1401),
                    {
                        'buffer': bG,
                        'type': bH,
                        'bytesPerElement': bi['BYTES_PER_ELEMENT'],
                        'version': bg['version']
                    };
                }(bh, bi)) : bF['version'] < bh['version'] && (function(bg, bh, bi) {
                    var bF = bh['array']
                      , bG = bh['updateRange'];
                    bf['bindBuffer'](bi, bg),
                    !0x1 === bh['dynamic'] ? bf['bufferData'](bi, bF, 0x88e4) : -0x1 === bG['count'] ? bf['bufferSubData'](bi, 0x0, bF) : 0x0 === bG['count'] ? console['error']('THREE.WebGLObjects.updateBuffer:\x20dynamic\x20THREE.BufferAttribute\x20marked\x20as\x20needsUpdate\x20but\x20updateRange.count\x20is\x200,\x20ensure\x20you\x20are\x20using\x20set\x20methods\x20or\x20updating\x20manually.') : (bf['bufferSubData'](bi, bG['offset'] * bF['BYTES_PER_ELEMENT'], bF['subarray'](bG['offset'], bG['offset'] + bG['count'])),
                    bG['count'] = -0x1);
                }(bF['buffer'], bh, bi),
                bF['version'] = bh['version']);
            }
        };
    }
    function xS(bf, bg, bh, bi, bF, bG) {
        this['a'] = bf,
        this['b'] = bg,
        this['c'] = bh,
        this['normal'] = bi && bi['isVector3'] ? bi : new eK(),
        this['vertexNormals'] = Array['isArray'](bi) ? bi : [],
        this['color'] = bF && bF['isColor'] ? bF : new w7(),
        this['vertexColors'] = Array['isArray'](bF) ? bF : [],
        this['materialIndex'] = void 0x0 !== bG ? bG : 0x0;
    }
    function xZ(bf, bg, bh, bi) {
        this['_x'] = bf || 0x0,
        this['_y'] = bg || 0x0,
        this['_z'] = bh || 0x0,
        this['_order'] = bi || xZ['DefaultOrder'];
    }
    function y4() {
        this['mask'] = 0x1;
    }
    xo['physical'] = {
        'uniforms': vW([xo['standard']['uniforms'], {
            'clearCoat': {
                'value': 0x0
            },
            'clearCoatRoughness': {
                'value': 0x0
            }
        }]),
        'vertexShader': vP['meshphysical_vert'],
        'fragmentShader': vP['meshphysical_frag']
    },
    Object['assign'](xS['prototype'], {
        'clone': function() {
            return new this['constructor']()['copy'](this);
        },
        'copy': function(bf) {
            this['a'] = bf['a'],
            this['b'] = bf['b'],
            this['c'] = bf['c'],
            this['normal']['copy'](bf['normal']),
            this['color']['copy'](bf['color']),
            this['materialIndex'] = bf['materialIndex'];
            for (var bg = 0x0, bh = bf['vertexNormals']['length']; bg < bh; bg++)
                this['vertexNormals'][bg] = bf['vertexNormals'][bg]['clone']();
            for (bg = 0x0,
            bh = bf['vertexColors']['length']; bg < bh; bg++)
                this['vertexColors'][bg] = bf['vertexColors'][bg]['clone']();
            return this;
        }
    }),
    xZ['RotationOrders'] = ['XYZ', 'YZX', 'ZXY', 'XZY', 'YXZ', 'ZYX'],
    xZ['DefaultOrder'] = 'XYZ',
    Object['defineProperties'](xZ['prototype'], {
        'x': {
            'get': function() {
                return this['_x'];
            },
            'set': function(bf) {
                this['_x'] = bf,
                this['onChangeCallback']();
            }
        },
        'y': {
            'get': function() {
                return this['_y'];
            },
            'set': function(bf) {
                this['_y'] = bf,
                this['onChangeCallback']();
            }
        },
        'z': {
            'get': function() {
                return this['_z'];
            },
            'set': function(bf) {
                this['_z'] = bf,
                this['onChangeCallback']();
            }
        },
        'order': {
            'get': function() {
                return this['_order'];
            },
            'set': function(bf) {
                this['_order'] = bf,
                this['onChangeCallback']();
            }
        }
    }),
    Object['assign'](xZ['prototype'], {
        'isEuler': !0x0,
        'set': function(bf, bg, bh, bi) {
            return this['_x'] = bf,
            this['_y'] = bg,
            this['_z'] = bh,
            this['_order'] = bi || this['_order'],
            this['onChangeCallback'](),
            this;
        },
        'clone': function() {
            return new this['constructor'](this['_x'],this['_y'],this['_z'],this['_order']);
        },
        'copy': function(bf) {
            return this['_x'] = bf['_x'],
            this['_y'] = bf['_y'],
            this['_z'] = bf['_z'],
            this['_order'] = bf['_order'],
            this['onChangeCallback'](),
            this;
        },
        'setFromRotationMatrix': function(bf, bg, bh) {
            var bi = e2['clamp']
              , bF = bf['elements']
              , bG = bF[0x0]
              , bH = bF[0x4]
              , bI = bF[0x8]
              , bJ = bF[0x1]
              , bK = bF[0x5]
              , bL = bF[0x9]
              , bM = bF[0x2]
              , bN = bF[0x6]
              , bO = bF[0xa];
            return 'XYZ' === (bg = bg || this['_order']) ? (this['_y'] = Math['asin'](bi(bI, -0x1, 0x1)),
            Math['abs'](bI) < 0.99999 ? (this['_x'] = Math['atan2'](-bL, bO),
            this['_z'] = Math['atan2'](-bH, bG)) : (this['_x'] = Math['atan2'](bN, bK),
            this['_z'] = 0x0)) : 'YXZ' === bg ? (this['_x'] = Math['asin'](-bi(bL, -0x1, 0x1)),
            Math['abs'](bL) < 0.99999 ? (this['_y'] = Math['atan2'](bI, bO),
            this['_z'] = Math['atan2'](bJ, bK)) : (this['_y'] = Math['atan2'](-bM, bG),
            this['_z'] = 0x0)) : 'ZXY' === bg ? (this['_x'] = Math['asin'](bi(bN, -0x1, 0x1)),
            Math['abs'](bN) < 0.99999 ? (this['_y'] = Math['atan2'](-bM, bO),
            this['_z'] = Math['atan2'](-bH, bK)) : (this['_y'] = 0x0,
            this['_z'] = Math['atan2'](bJ, bG))) : 'ZYX' === bg ? (this['_y'] = Math['asin'](-bi(bM, -0x1, 0x1)),
            Math['abs'](bM) < 0.99999 ? (this['_x'] = Math['atan2'](bN, bO),
            this['_z'] = Math['atan2'](bJ, bG)) : (this['_x'] = 0x0,
            this['_z'] = Math['atan2'](-bH, bK))) : 'YZX' === bg ? (this['_z'] = Math['asin'](bi(bJ, -0x1, 0x1)),
            Math['abs'](bJ) < 0.99999 ? (this['_x'] = Math['atan2'](-bL, bK),
            this['_y'] = Math['atan2'](-bM, bG)) : (this['_x'] = 0x0,
            this['_y'] = Math['atan2'](bI, bO))) : 'XZY' === bg ? (this['_z'] = Math['asin'](-bi(bH, -0x1, 0x1)),
            Math['abs'](bH) < 0.99999 ? (this['_x'] = Math['atan2'](bN, bK),
            this['_y'] = Math['atan2'](bI, bG)) : (this['_x'] = Math['atan2'](-bL, bO),
            this['_y'] = 0x0)) : console['warn']('THREE.Euler:\x20.setFromRotationMatrix()\x20given\x20unsupported\x20order:\x20' + bg),
            this['_order'] = bg,
            !0x1 !== bh && this['onChangeCallback'](),
            this;
        },
        'setFromQuaternion': function() {
            var bf = new mR();
            return function(bg, bh, bi) {
                return bf['makeRotationFromQuaternion'](bg),
                this['setFromRotationMatrix'](bf, bh, bi);
            }
            ;
        }(),
        'setFromVector3': function(bf, bg) {
            return this['set'](bf['x'], bf['y'], bf['z'], bg || this['_order']);
        },
        'reorder': (xm = new eF(),
        function(bf) {
            return xm['setFromEuler'](this),
            this['setFromQuaternion'](xm, bf);
        }
        ),
        'equals': function(bf) {
            return bf['_x'] === this['_x'] && bf['_y'] === this['_y'] && bf['_z'] === this['_z'] && bf['_order'] === this['_order'];
        },
        'fromArray': function(bf) {
            return this['_x'] = bf[0x0],
            this['_y'] = bf[0x1],
            this['_z'] = bf[0x2],
            void 0x0 !== bf[0x3] && (this['_order'] = bf[0x3]),
            this['onChangeCallback'](),
            this;
        },
        'toArray': function(bf, bg) {
            return void 0x0 === bf && (bf = []),
            void 0x0 === bg && (bg = 0x0),
            bf[bg] = this['_x'],
            bf[bg + 0x1] = this['_y'],
            bf[bg + 0x2] = this['_z'],
            bf[bg + 0x3] = this['_order'],
            bf;
        },
        'toVector3': function(bf) {
            return bf ? bf['set'](this['_x'], this['_y'], this['_z']) : new eK(this['_x'],this['_y'],this['_z']);
        },
        'onChange': function(bf) {
            return this['onChangeCallback'] = bf,
            this;
        },
        'onChangeCallback': function() {}
    }),
    Object['assign'](y4['prototype'], {
        'set': function(bf) {
            this['mask'] = 0x1 << bf | 0x0;
        },
        'enable': function(bf) {
            this['mask'] |= 0x1 << bf | 0x0;
        },
        'toggle': function(bf) {
            this['mask'] ^= 0x1 << bf | 0x0;
        },
        'disable': function(bf) {
            this['mask'] &= ~(0x1 << bf | 0x0);
        },
        'test': function(bf) {
            return 0x0 != (this['mask'] & bf['mask']);
        }
    });
    var yN, yO, yP, yQ, yR, yS = 0x0;
    function yT() {
        Object['defineProperty'](this, 'id', {
            'value': yS++
        }),
        this['uuid'] = e2['generateUUID'](),
        this['name'] = '',
        this['type'] = 'Object3D',
        this['parent'] = null,
        this['children'] = [],
        this['up'] = yT['DefaultUp']['clone']();
        var bf = new eK()
          , bg = new xZ()
          , bh = new eF()
          , bi = new eK(0x1,0x1,0x1);
        bg['onChange'](function() {
            bh['setFromEuler'](bg, !0x1);
        }),
        bh['onChange'](function() {
            bg['setFromQuaternion'](bh, void 0x0, !0x1);
        }),
        Object['defineProperties'](this, {
            'position': {
                'configurable': !0x0,
                'enumerable': !0x0,
                'value': bf
            },
            'rotation': {
                'configurable': !0x0,
                'enumerable': !0x0,
                'value': bg
            },
            'quaternion': {
                'configurable': !0x0,
                'enumerable': !0x0,
                'value': bh
            },
            'scale': {
                'configurable': !0x0,
                'enumerable': !0x0,
                'value': bi
            },
            'modelViewMatrix': {
                'value': new mR()
            },
            'normalMatrix': {
                'value': new eO()
            }
        }),
        this['matrix'] = new mR(),
        this['matrixWorld'] = new mR(),
        this['matrixAutoUpdate'] = yT['DefaultMatrixAutoUpdate'],
        this['matrixWorldNeedsUpdate'] = !0x1,
        this['layers'] = new y4(),
        this['visible'] = !0x0,
        this['castShadow'] = !0x1,
        this['receiveShadow'] = !0x1,
        this['frustumCulled'] = !0x0,
        this['renderOrder'] = 0x0,
        this['userData'] = {};
    }
    yT['DefaultUp'] = new eK(0x0,0x1,0x0),
    yT['DefaultMatrixAutoUpdate'] = !0x0,
    yT['prototype'] = Object['assign'](Object['create'](bi['prototype']), {
        'constructor': yT,
        'isObject3D': !0x0,
        'onBeforeRender': function() {},
        'onAfterRender': function() {},
        'applyMatrix': function(bf) {
            this['matrixAutoUpdate'] && this['updateMatrix'](),
            this['matrix']['premultiply'](bf),
            this['matrix']['decompose'](this['position'], this['quaternion'], this['scale']);
        },
        'applyQuaternion': function(bf) {
            return this['quaternion']['premultiply'](bf),
            this;
        },
        'setRotationFromAxisAngle': function(bf, bg) {
            this['quaternion']['setFromAxisAngle'](bf, bg);
        },
        'setRotationFromEuler': function(bf) {
            this['quaternion']['setFromEuler'](bf, !0x0);
        },
        'setRotationFromMatrix': function(bf) {
            this['quaternion']['setFromRotationMatrix'](bf);
        },
        'setRotationFromQuaternion': function(bf) {
            this['quaternion']['copy'](bf);
        },
        'rotateOnAxis': (yR = new eF(),
        function(bf, bg) {
            return yR['setFromAxisAngle'](bf, bg),
            this['quaternion']['multiply'](yR),
            this;
        }
        ),
        'rotateOnWorldAxis': function() {
            var bf = new eF();
            return function(bg, bh) {
                return bf['setFromAxisAngle'](bg, bh),
                this['quaternion']['premultiply'](bf),
                this;
            }
            ;
        }(),
        'rotateX': function() {
            var bf = new eK(0x1,0x0,0x0);
            return function(bg) {
                return this['rotateOnAxis'](bf, bg);
            }
            ;
        }(),
        'rotateY': function() {
            var bf = new eK(0x0,0x1,0x0);
            return function(bg) {
                return this['rotateOnAxis'](bf, bg);
            }
            ;
        }(),
        'rotateZ': function() {
            var bf = new eK(0x0,0x0,0x1);
            return function(bg) {
                return this['rotateOnAxis'](bf, bg);
            }
            ;
        }(),
        'translateOnAxis': function() {
            var bf = new eK();
            return function(bg, bh) {
                return bf['copy'](bg)['applyQuaternion'](this['quaternion']),
                this['position']['add'](bf['multiplyScalar'](bh)),
                this;
            }
            ;
        }(),
        'translateX': function() {
            var bf = new eK(0x1,0x0,0x0);
            return function(bg) {
                return this['translateOnAxis'](bf, bg);
            }
            ;
        }(),
        'translateY': function() {
            var bf = new eK(0x0,0x1,0x0);
            return function(bg) {
                return this['translateOnAxis'](bf, bg);
            }
            ;
        }(),
        'translateZ': function() {
            var bf = new eK(0x0,0x0,0x1);
            return function(bg) {
                return this['translateOnAxis'](bf, bg);
            }
            ;
        }(),
        'localToWorld': function(bf) {
            return bf['applyMatrix4'](this['matrixWorld']);
        },
        'worldToLocal': (yQ = new mR(),
        function(bf) {
            return bf['applyMatrix4'](yQ['getInverse'](this['matrixWorld']));
        }
        ),
        'lookAt': function() {
            var bf = new eF()
              , bg = new mR()
              , bh = new eK()
              , bi = new eK();
            return function(bF, bG, bH) {
                bF['isVector3'] ? bh['copy'](bF) : bh['set'](bF, bG, bH);
                var bI = this['parent'];
                this['updateWorldMatrix'](!0x0, !0x1),
                bi['setFromMatrixPosition'](this['matrixWorld']),
                this['isCamera'] || this['isLight'] ? bg['lookAt'](bi, bh, this['up']) : bg['lookAt'](bh, bi, this['up']),
                this['quaternion']['setFromRotationMatrix'](bg),
                bI && (bg['extractRotation'](bI['matrixWorld']),
                bf['setFromRotationMatrix'](bg),
                this['quaternion']['premultiply'](bf['inverse']()));
            }
            ;
        }(),
        'add': function(bf) {
            if (arguments['length'] > 0x1) {
                for (var bg = 0x0; bg < arguments['length']; bg++)
                    this['add'](arguments[bg]);
                return this;
            }
            return bf === this ? (console['error']('THREE.Object3D.add:\x20object\x20can\x27t\x20be\x20added\x20as\x20a\x20child\x20of\x20itself.', bf),
            this) : (bf && bf['isObject3D'] ? (null !== bf['parent'] && bf['parent']['remove'](bf),
            bf['parent'] = this,
            bf['dispatchEvent']({
                'type': 'added'
            }),
            this['children']['push'](bf)) : console['error']('THREE.Object3D.add:\x20object\x20not\x20an\x20instance\x20of\x20THREE.Object3D.', bf),
            this);
        },
        'remove': function(bf) {
            if (arguments['length'] > 0x1) {
                for (var bg = 0x0; bg < arguments['length']; bg++)
                    this['remove'](arguments[bg]);
                return this;
            }
            var bh = this['children']['indexOf'](bf);
            return -0x1 !== bh && (bf['parent'] = null,
            bf['dispatchEvent']({
                'type': 'removed'
            }),
            this['children']['splice'](bh, 0x1)),
            this;
        },
        'attach': (yP = new mR(),
        function(bf) {
            return this['updateWorldMatrix'](!0x0, !0x1),
            yP['getInverse'](this['matrixWorld']),
            null !== bf['parent'] && (bf['parent']['updateWorldMatrix'](!0x0, !0x1),
            yP['multiply'](bf['parent']['matrixWorld'])),
            bf['applyMatrix'](yP),
            bf['updateWorldMatrix'](!0x1, !0x1),
            this['add'](bf),
            this;
        }
        ),
        'getObjectById': function(bf) {
            return this['getObjectByProperty']('id', bf);
        },
        'getObjectByName': function(bf) {
            return this['getObjectByProperty']('name', bf);
        },
        'getObjectByProperty': function(bf, bg) {
            if (this[bf] === bg)
                return this;
            for (var bh = 0x0, bi = this['children']['length']; bh < bi; bh++) {
                var bF = this['children'][bh]['getObjectByProperty'](bf, bg);
                if (void 0x0 !== bF)
                    return bF;
            }
        },
        'getWorldPosition': function(bf) {
            return void 0x0 === bf && (console['warn']('THREE.Object3D:\x20.getWorldPosition()\x20target\x20is\x20now\x20required'),
            bf = new eK()),
            this['updateMatrixWorld'](!0x0),
            bf['setFromMatrixPosition'](this['matrixWorld']);
        },
        'getWorldQuaternion': (yN = new eK(),
        yO = new eK(),
        function(bf) {
            return void 0x0 === bf && (console['warn']('THREE.Object3D:\x20.getWorldQuaternion()\x20target\x20is\x20now\x20required'),
            bf = new eF()),
            this['updateMatrixWorld'](!0x0),
            this['matrixWorld']['decompose'](yN, bf, yO),
            bf;
        }
        ),
        'getWorldScale': function() {
            var bf = new eK()
              , bg = new eF();
            return function(bh) {
                return void 0x0 === bh && (console['warn']('THREE.Object3D:\x20.getWorldScale()\x20target\x20is\x20now\x20required'),
                bh = new eK()),
                this['updateMatrixWorld'](!0x0),
                this['matrixWorld']['decompose'](bf, bg, bh),
                bh;
            }
            ;
        }(),
        'getWorldDirection': function(bf) {
            void 0x0 === bf && (console['warn']('THREE.Object3D:\x20.getWorldDirection()\x20target\x20is\x20now\x20required'),
            bf = new eK()),
            this['updateMatrixWorld'](!0x0);
            var bg = this['matrixWorld']['elements'];
            return bf['set'](bg[0x8], bg[0x9], bg[0xa])['normalize']();
        },
        'raycast': function() {},
        'traverse': function(bf) {
            bf(this);
            for (var bg = this['children'], bh = 0x0, bi = bg['length']; bh < bi; bh++)
                bg[bh]['traverse'](bf);
        },
        'traverseVisible': function(bf) {
            if (!0x1 !== this['visible']) {
                bf(this);
                for (var bg = this['children'], bh = 0x0, bi = bg['length']; bh < bi; bh++)
                    bg[bh]['traverseVisible'](bf);
            }
        },
        'traverseAncestors': function(bf) {
            var bg = this['parent'];
            null !== bg && (bf(bg),
            bg['traverseAncestors'](bf));
        },
        'updateMatrix': function() {
            this['matrix']['compose'](this['position'], this['quaternion'], this['scale']),
            this['matrixWorldNeedsUpdate'] = !0x0;
        },
        'updateMatrixWorld': function(bf) {
            this['matrixAutoUpdate'] && this['updateMatrix'](),
            (this['matrixWorldNeedsUpdate'] || bf) && (null === this['parent'] ? this['matrixWorld']['copy'](this['matrix']) : this['matrixWorld']['multiplyMatrices'](this['parent']['matrixWorld'], this['matrix']),
            this['matrixWorldNeedsUpdate'] = !0x1,
            bf = !0x0);
            for (var bg = this['children'], bh = 0x0, bi = bg['length']; bh < bi; bh++)
                bg[bh]['updateMatrixWorld'](bf);
        },
        'updateWorldMatrix': function(bf, bg) {
            var bh = this['parent'];
            if (!0x0 === bf && null !== bh && bh['updateWorldMatrix'](!0x0, !0x1),
            this['matrixAutoUpdate'] && this['updateMatrix'](),
            null === this['parent'] ? this['matrixWorld']['copy'](this['matrix']) : this['matrixWorld']['multiplyMatrices'](this['parent']['matrixWorld'], this['matrix']),
            !0x0 === bg)
                for (var bi = this['children'], bF = 0x0, bG = bi['length']; bF < bG; bF++)
                    bi[bF]['updateWorldMatrix'](!0x1, !0x0);
        },
        'toJSON': function(bf) {
            var bg = void 0x0 === bf || 'string' == typeof bf
              , bh = {};
            bg && (bf = {
                'geometries': {},
                'materials': {},
                'textures': {},
                'images': {},
                'shapes': {}
            },
            bh['metadata'] = {
                'version': 4.5,
                'type': 'Object',
                'generator': 'Object3D.toJSON'
            });
            var bi = {};
            function bF(bg, bh) {
                return void 0x0 === bg[bh['uuid']] && (bg[bh['uuid']] = bh['toJSON'](bf)),
                bh['uuid'];
            }
            if (bi['uuid'] = this['uuid'],
            bi['type'] = this['type'],
            '' !== this['name'] && (bi['name'] = this['name']),
            !0x0 === this['castShadow'] && (bi['castShadow'] = !0x0),
            !0x0 === this['receiveShadow'] && (bi['receiveShadow'] = !0x0),
            !0x1 === this['visible'] && (bi['visible'] = !0x1),
            !0x1 === this['frustumCulled'] && (bi['frustumCulled'] = !0x1),
            0x0 !== this['renderOrder'] && (bi['renderOrder'] = this['renderOrder']),
            '{}' !== JSON['stringify'](this['userData']) && (bi['userData'] = this['userData']),
            bi['layers'] = this['layers']['mask'],
            bi['matrix'] = this['matrix']['toArray'](),
            !0x1 === this['matrixAutoUpdate'] && (bi['matrixAutoUpdate'] = !0x1),
            this['isMesh'] && this['drawMode'] !== dN && (bi['drawMode'] = this['drawMode']),
            this['isMesh'] || this['isLine'] || this['isPoints']) {
                bi['geometry'] = bF(bf['geometries'], this['geometry']);
                var bG = this['geometry']['parameters'];
                if (void 0x0 !== bG && void 0x0 !== bG['shapes']) {
                    var bH = bG['shapes'];
                    if (Array['isArray'](bH))
                        for (var bI = 0x0, bJ = bH['length']; bI < bJ; bI++) {
                            var bK = bH[bI];
                            bF(bf['shapes'], bK);
                        }
                    else
                        bF(bf['shapes'], bH);
                }
            }
            if (void 0x0 !== this['material'])
                if (Array['isArray'](this['material'])) {
                    var bL = [];
                    for (bI = 0x0,
                    bJ = this['material']['length']; bI < bJ; bI++)
                        bL['push'](bF(bf['materials'], this['material'][bI]));
                    bi['material'] = bL;
                } else
                    bi['material'] = bF(bf['materials'], this['material']);
            if (this['children']['length'] > 0x0) {
                bi['children'] = [];
                for (bI = 0x0; bI < this['children']['length']; bI++)
                    bi['children']['push'](this['children'][bI]['toJSON'](bf)['object']);
            }
            if (bg) {
                var bM = bQ(bf['geometries'])
                  , bN = bQ(bf['materials'])
                  , bO = bQ(bf['textures'])
                  , bP = bQ(bf['images']);
                bH = bQ(bf['shapes']);
                bM['length'] > 0x0 && (bh['geometries'] = bM),
                bN['length'] > 0x0 && (bh['materials'] = bN),
                bO['length'] > 0x0 && (bh['textures'] = bO),
                bP['length'] > 0x0 && (bh['images'] = bP),
                bH['length'] > 0x0 && (bh['shapes'] = bH);
            }
            return bh['object'] = bi,
            bh;
            function bQ(bf) {
                var bg = [];
                for (var bh in bf) {
                    var bi = bf[bh];
                    delete bi['metadata'],
                    bg['push'](bi);
                }
                return bg;
            }
        },
        'clone': function(bf) {
            return new this['constructor']()['copy'](this, bf);
        },
        'copy': function(bf, bg) {
            if (void 0x0 === bg && (bg = !0x0),
            this['name'] = bf['name'],
            this['up']['copy'](bf['up']),
            this['position']['copy'](bf['position']),
            this['quaternion']['copy'](bf['quaternion']),
            this['scale']['copy'](bf['scale']),
            this['matrix']['copy'](bf['matrix']),
            this['matrixWorld']['copy'](bf['matrixWorld']),
            this['matrixAutoUpdate'] = bf['matrixAutoUpdate'],
            this['matrixWorldNeedsUpdate'] = bf['matrixWorldNeedsUpdate'],
            this['layers']['mask'] = bf['layers']['mask'],
            this['visible'] = bf['visible'],
            this['castShadow'] = bf['castShadow'],
            this['receiveShadow'] = bf['receiveShadow'],
            this['frustumCulled'] = bf['frustumCulled'],
            this['renderOrder'] = bf['renderOrder'],
            this['userData'] = JSON['parse'](JSON['stringify'](bf['userData'])),
            !0x0 === bg)
                for (var bh = 0x0; bh < bf['children']['length']; bh++) {
                    var bi = bf['children'][bh];
                    this['add'](bi['clone']());
                }
            return this;
        }
    });
    var AE, AF, AG = 0x0;
    function AH() {
        Object['defineProperty'](this, 'id', {
            'value': AG += 0x2
        }),
        this['uuid'] = e2['generateUUID'](),
        this['name'] = '',
        this['type'] = 'Geometry',
        this['vertices'] = [],
        this['colors'] = [],
        this['faces'] = [],
        this['faceVertexUvs'] = [[]],
        this['morphTargets'] = [],
        this['morphNormals'] = [],
        this['skinWeights'] = [],
        this['skinIndices'] = [],
        this['lineDistances'] = [],
        this['boundingBox'] = null,
        this['boundingSphere'] = null,
        this['elementsNeedUpdate'] = !0x1,
        this['verticesNeedUpdate'] = !0x1,
        this['uvsNeedUpdate'] = !0x1,
        this['normalsNeedUpdate'] = !0x1,
        this['colorsNeedUpdate'] = !0x1,
        this['lineDistancesNeedUpdate'] = !0x1,
        this['groupsNeedUpdate'] = !0x1;
    }
    function AI(bf, bg, bh) {
        if (Array['isArray'](bf))
            throw new TypeError('THREE.BufferAttribute:\x20array\x20should\x20be\x20a\x20Typed\x20Array.');
        this['name'] = '',
        this['array'] = bf,
        this['itemSize'] = bg,
        this['count'] = void 0x0 !== bf ? bf['length'] / bg : 0x0,
        this['normalized'] = !0x0 === bh,
        this['dynamic'] = !0x1,
        this['updateRange'] = {
            'offset': 0x0,
            'count': -0x1
        },
        this['version'] = 0x0;
    }
    function AM(bf, bg, bh) {
        AI['call'](this, new Int8Array(bf), bg, bh);
    }
    function AQ(bf, bg, bh) {
        AI['call'](this, new Uint8Array(bf), bg, bh);
    }
    function AU(bf, bg, bh) {
        AI['call'](this, new Uint8ClampedArray(bf), bg, bh);
    }
    function AY(bf, bg, bh) {
        AI['call'](this, new Int16Array(bf), bg, bh);
    }
    function B2(bf, bg, bh) {
        AI['call'](this, new Uint16Array(bf), bg, bh);
    }
    function B6(bf, bg, bh) {
        AI['call'](this, new Int32Array(bf), bg, bh);
    }
    function Ba(bf, bg, bh) {
        AI['call'](this, new Uint32Array(bf), bg, bh);
    }
    function Be(bf, bg, bh) {
        AI['call'](this, new Float32Array(bf), bg, bh);
    }
    function Bi(bf, bg, bh) {
        AI['call'](this, new Float64Array(bf), bg, bh);
    }
    function Bm() {
        this['vertices'] = [],
        this['normals'] = [],
        this['colors'] = [],
        this['uvs'] = [],
        this['uvs2'] = [],
        this['groups'] = [],
        this['morphTargets'] = {},
        this['skinWeights'] = [],
        this['skinIndices'] = [],
        this['boundingBox'] = null,
        this['boundingSphere'] = null,
        this['verticesNeedUpdate'] = !0x1,
        this['normalsNeedUpdate'] = !0x1,
        this['colorsNeedUpdate'] = !0x1,
        this['uvsNeedUpdate'] = !0x1,
        this['groupsNeedUpdate'] = !0x1;
    }
    function Bn(bf) {
        if (0x0 === bf['length'])
            return -0x1 / 0x0;
        for (var bg = bf[0x0], bh = 0x1, bi = bf['length']; bh < bi; ++bh)
            bf[bh] > bg && (bg = bf[bh]);
        return bg;
    }
    AH['prototype'] = Object['assign'](Object['create'](bi['prototype']), {
        'constructor': AH,
        'isGeometry': !0x0,
        'applyMatrix': function(bf) {
            for (var bg = new eO()['getNormalMatrix'](bf), bh = 0x0, bi = this['vertices']['length']; bh < bi; bh++) {
                this['vertices'][bh]['applyMatrix4'](bf);
            }
            for (bh = 0x0,
            bi = this['faces']['length']; bh < bi; bh++) {
                var bF = this['faces'][bh];
                bF['normal']['applyMatrix3'](bg)['normalize']();
                for (var bG = 0x0, bH = bF['vertexNormals']['length']; bG < bH; bG++)
                    bF['vertexNormals'][bG]['applyMatrix3'](bg)['normalize']();
            }
            return null !== this['boundingBox'] && this['computeBoundingBox'](),
            null !== this['boundingSphere'] && this['computeBoundingSphere'](),
            this['verticesNeedUpdate'] = !0x0,
            this['normalsNeedUpdate'] = !0x0,
            this;
        },
        'rotateX': function() {
            var bf = new mR();
            return function(bg) {
                return bf['makeRotationX'](bg),
                this['applyMatrix'](bf),
                this;
            }
            ;
        }(),
        'rotateY': function() {
            var bf = new mR();
            return function(bg) {
                return bf['makeRotationY'](bg),
                this['applyMatrix'](bf),
                this;
            }
            ;
        }(),
        'rotateZ': function() {
            var bf = new mR();
            return function(bg) {
                return bf['makeRotationZ'](bg),
                this['applyMatrix'](bf),
                this;
            }
            ;
        }(),
        'translate': function() {
            var bf = new mR();
            return function(bg, bh, bi) {
                return bf['makeTranslation'](bg, bh, bi),
                this['applyMatrix'](bf),
                this;
            }
            ;
        }(),
        'scale': function() {
            var bf = new mR();
            return function(bg, bh, bi) {
                return bf['makeScale'](bg, bh, bi),
                this['applyMatrix'](bf),
                this;
            }
            ;
        }(),
        'lookAt': (AF = new yT(),
        function(bf) {
            AF['lookAt'](bf),
            AF['updateMatrix'](),
            this['applyMatrix'](AF['matrix']);
        }
        ),
        'fromBufferGeometry': function(bf) {
            var bg = this
              , bh = null !== bf['index'] ? bf['index']['array'] : void 0x0
              , bi = bf['attributes']
              , bF = bi['position']['array']
              , bG = void 0x0 !== bi['normal'] ? bi['normal']['array'] : void 0x0
              , bH = void 0x0 !== bi['color'] ? bi['color']['array'] : void 0x0
              , bI = void 0x0 !== bi['uv'] ? bi['uv']['array'] : void 0x0
              , bJ = void 0x0 !== bi['uv2'] ? bi['uv2']['array'] : void 0x0;
            void 0x0 !== bJ && (this['faceVertexUvs'][0x1] = []);
            for (var bK = 0x0; bK < bF['length']; bK += 0x3)
                bg['vertices']['push'](new eK()['fromArray'](bF, bK)),
                void 0x0 !== bH && bg['colors']['push'](new w7()['fromArray'](bH, bK));
            function bL(bf, bh, bi, bF) {
                var bK = void 0x0 === bH ? [] : [bg['colors'][bf]['clone'](), bg['colors'][bh]['clone'](), bg['colors'][bi]['clone']()]
                  , bL = new xS(bf,bh,bi,void 0x0 === bG ? [] : [new eK()['fromArray'](bG, 0x3 * bf), new eK()['fromArray'](bG, 0x3 * bh), new eK()['fromArray'](bG, 0x3 * bi)],bK,bF);
                bg['faces']['push'](bL),
                void 0x0 !== bI && bg['faceVertexUvs'][0x0]['push']([new eC()['fromArray'](bI, 0x2 * bf), new eC()['fromArray'](bI, 0x2 * bh), new eC()['fromArray'](bI, 0x2 * bi)]),
                void 0x0 !== bJ && bg['faceVertexUvs'][0x1]['push']([new eC()['fromArray'](bJ, 0x2 * bf), new eC()['fromArray'](bJ, 0x2 * bh), new eC()['fromArray'](bJ, 0x2 * bi)]);
            }
            var bM = bf['groups'];
            if (bM['length'] > 0x0)
                for (bK = 0x0; bK < bM['length']; bK++)
                    for (var bN = bM[bK], bO = bN['start'], bP = bO, bQ = bO + bN['count']; bP < bQ; bP += 0x3)
                        void 0x0 !== bh ? bL(bh[bP], bh[bP + 0x1], bh[bP + 0x2], bN['materialIndex']) : bL(bP, bP + 0x1, bP + 0x2, bN['materialIndex']);
            else if (void 0x0 !== bh)
                for (bK = 0x0; bK < bh['length']; bK += 0x3)
                    bL(bh[bK], bh[bK + 0x1], bh[bK + 0x2]);
            else
                for (bK = 0x0; bK < bF['length'] / 0x3; bK += 0x3)
                    bL(bK, bK + 0x1, bK + 0x2);
            return this['computeFaceNormals'](),
            null !== bf['boundingBox'] && (this['boundingBox'] = bf['boundingBox']['clone']()),
            null !== bf['boundingSphere'] && (this['boundingSphere'] = bf['boundingSphere']['clone']()),
            this;
        },
        'center': (AE = new eK(),
        function() {
            return this['computeBoundingBox'](),
            this['boundingBox']['getCenter'](AE)['negate'](),
            this['translate'](AE['x'], AE['y'], AE['z']),
            this;
        }
        ),
        'normalize': function() {
            this['computeBoundingSphere']();
            var bf = this['boundingSphere']['center']
              , bg = this['boundingSphere']['radius']
              , bh = 0x0 === bg ? 0x1 : 0x1 / bg
              , bi = new mR();
            return bi['set'](bh, 0x0, 0x0, -bh * bf['x'], 0x0, bh, 0x0, -bh * bf['y'], 0x0, 0x0, bh, -bh * bf['z'], 0x0, 0x0, 0x0, 0x1),
            this['applyMatrix'](bi),
            this;
        },
        'computeFaceNormals': function() {
            for (var bf = new eK(), bg = new eK(), bh = 0x0, bi = this['faces']['length']; bh < bi; bh++) {
                var bF = this['faces'][bh]
                  , bG = this['vertices'][bF['a']]
                  , bH = this['vertices'][bF['b']]
                  , bI = this['vertices'][bF['c']];
                bf['subVectors'](bI, bH),
                bg['subVectors'](bG, bH),
                bf['cross'](bg),
                bf['normalize'](),
                bF['normal']['copy'](bf);
            }
        },
        'computeVertexNormals': function(bf) {
            var bg, bh, bi, bF, bG, bH;
            for (void 0x0 === bf && (bf = !0x0),
            bH = new Array(this['vertices']['length']),
            bg = 0x0,
            bh = this['vertices']['length']; bg < bh; bg++)
                bH[bg] = new eK();
            if (bf) {
                var bI, bJ, bK, bL = new eK(), bM = new eK();
                for (bi = 0x0,
                bF = this['faces']['length']; bi < bF; bi++)
                    bG = this['faces'][bi],
                    bI = this['vertices'][bG['a']],
                    bJ = this['vertices'][bG['b']],
                    bK = this['vertices'][bG['c']],
                    bL['subVectors'](bK, bJ),
                    bM['subVectors'](bI, bJ),
                    bL['cross'](bM),
                    bH[bG['a']]['add'](bL),
                    bH[bG['b']]['add'](bL),
                    bH[bG['c']]['add'](bL);
            } else
                for (this['computeFaceNormals'](),
                bi = 0x0,
                bF = this['faces']['length']; bi < bF; bi++)
                    bH[(bG = this['faces'][bi])['a']]['add'](bG['normal']),
                    bH[bG['b']]['add'](bG['normal']),
                    bH[bG['c']]['add'](bG['normal']);
            for (bg = 0x0,
            bh = this['vertices']['length']; bg < bh; bg++)
                bH[bg]['normalize']();
            for (bi = 0x0,
            bF = this['faces']['length']; bi < bF; bi++) {
                var bN = (bG = this['faces'][bi])['vertexNormals'];
                0x3 === bN['length'] ? (bN[0x0]['copy'](bH[bG['a']]),
                bN[0x1]['copy'](bH[bG['b']]),
                bN[0x2]['copy'](bH[bG['c']])) : (bN[0x0] = bH[bG['a']]['clone'](),
                bN[0x1] = bH[bG['b']]['clone'](),
                bN[0x2] = bH[bG['c']]['clone']());
            }
            this['faces']['length'] > 0x0 && (this['normalsNeedUpdate'] = !0x0);
        },
        'computeFlatVertexNormals': function() {
            var bf, bg, bh;
            for (this['computeFaceNormals'](),
            bf = 0x0,
            bg = this['faces']['length']; bf < bg; bf++) {
                var bi = (bh = this['faces'][bf])['vertexNormals'];
                0x3 === bi['length'] ? (bi[0x0]['copy'](bh['normal']),
                bi[0x1]['copy'](bh['normal']),
                bi[0x2]['copy'](bh['normal'])) : (bi[0x0] = bh['normal']['clone'](),
                bi[0x1] = bh['normal']['clone'](),
                bi[0x2] = bh['normal']['clone']());
            }
            this['faces']['length'] > 0x0 && (this['normalsNeedUpdate'] = !0x0);
        },
        'computeMorphNormals': function() {
            var bf, bg, bh, bi, bF;
            for (bh = 0x0,
            bi = this['faces']['length']; bh < bi; bh++)
                for ((bF = this['faces'][bh])['__originalFaceNormal'] ? bF['__originalFaceNormal']['copy'](bF['normal']) : bF['__originalFaceNormal'] = bF['normal']['clone'](),
                bF['__originalVertexNormals'] || (bF['__originalVertexNormals'] = []),
                bf = 0x0,
                bg = bF['vertexNormals']['length']; bf < bg; bf++)
                    bF['__originalVertexNormals'][bf] ? bF['__originalVertexNormals'][bf]['copy'](bF['vertexNormals'][bf]) : bF['__originalVertexNormals'][bf] = bF['vertexNormals'][bf]['clone']();
            var bG = new AH();
            for (bG['faces'] = this['faces'],
            bf = 0x0,
            bg = this['morphTargets']['length']; bf < bg; bf++) {
                if (!this['morphNormals'][bf]) {
                    this['morphNormals'][bf] = {},
                    this['morphNormals'][bf]['faceNormals'] = [],
                    this['morphNormals'][bf]['vertexNormals'] = [];
                    var bH = this['morphNormals'][bf]['faceNormals']
                      , bI = this['morphNormals'][bf]['vertexNormals'];
                    for (bh = 0x0,
                    bi = this['faces']['length']; bh < bi; bh++)
                        bJ = new eK(),
                        bK = {
                            'a': new eK(),
                            'b': new eK(),
                            'c': new eK()
                        },
                        bH['push'](bJ),
                        bI['push'](bK);
                }
                var bJ, bK, bL = this['morphNormals'][bf];
                for (bG['vertices'] = this['morphTargets'][bf]['vertices'],
                bG['computeFaceNormals'](),
                bG['computeVertexNormals'](),
                bh = 0x0,
                bi = this['faces']['length']; bh < bi; bh++)
                    bF = this['faces'][bh],
                    bJ = bL['faceNormals'][bh],
                    bK = bL['vertexNormals'][bh],
                    bJ['copy'](bF['normal']),
                    bK['a']['copy'](bF['vertexNormals'][0x0]),
                    bK['b']['copy'](bF['vertexNormals'][0x1]),
                    bK['c']['copy'](bF['vertexNormals'][0x2]);
            }
            for (bh = 0x0,
            bi = this['faces']['length']; bh < bi; bh++)
                (bF = this['faces'][bh])['normal'] = bF['__originalFaceNormal'],
                bF['vertexNormals'] = bF['__originalVertexNormals'];
        },
        'computeBoundingBox': function() {
            null === this['boundingBox'] && (this['boundingBox'] = new mB()),
            this['boundingBox']['setFromPoints'](this['vertices']);
        },
        'computeBoundingSphere': function() {
            null === this['boundingSphere'] && (this['boundingSphere'] = new mE()),
            this['boundingSphere']['setFromPoints'](this['vertices']);
        },
        'merge': function(bf, bg, bh) {
            if (bf && bf['isGeometry']) {
                var bi, bF = this['vertices']['length'], bG = this['vertices'], bH = bf['vertices'], bI = this['faces'], bJ = bf['faces'], bK = this['faceVertexUvs'][0x0], bL = bf['faceVertexUvs'][0x0], bM = this['colors'], bN = bf['colors'];
                void 0x0 === bh && (bh = 0x0),
                void 0x0 !== bg && (bi = new eO()['getNormalMatrix'](bg));
                for (var bO = 0x0, bP = bH['length']; bO < bP; bO++) {
                    var bQ = bH[bO]['clone']();
                    void 0x0 !== bg && bQ['applyMatrix4'](bg),
                    bG['push'](bQ);
                }
                for (bO = 0x0,
                bP = bN['length']; bO < bP; bO++)
                    bM['push'](bN[bO]['clone']());
                for (bO = 0x0,
                bP = bJ['length']; bO < bP; bO++) {
                    var bR, bS, bT, bU = bJ[bO], bV = bU['vertexNormals'], bW = bU['vertexColors'];
                    (bR = new xS(bU['a'] + bF,bU['b'] + bF,bU['c'] + bF))['normal']['copy'](bU['normal']),
                    void 0x0 !== bi && bR['normal']['applyMatrix3'](bi)['normalize']();
                    for (var bX = 0x0, bY = bV['length']; bX < bY; bX++)
                        bS = bV[bX]['clone'](),
                        void 0x0 !== bi && bS['applyMatrix3'](bi)['normalize'](),
                        bR['vertexNormals']['push'](bS);
                    bR['color']['copy'](bU['color']);
                    for (bX = 0x0,
                    bY = bW['length']; bX < bY; bX++)
                        bT = bW[bX],
                        bR['vertexColors']['push'](bT['clone']());
                    bR['materialIndex'] = bU['materialIndex'] + bh,
                    bI['push'](bR);
                }
                for (bO = 0x0,
                bP = bL['length']; bO < bP; bO++) {
                    var bZ = bL[bO]
                      , c0 = [];
                    if (void 0x0 !== bZ) {
                        for (bX = 0x0,
                        bY = bZ['length']; bX < bY; bX++)
                            c0['push'](bZ[bX]['clone']());
                        bK['push'](c0);
                    }
                }
            } else
                console['error']('THREE.Geometry.merge():\x20geometry\x20not\x20an\x20instance\x20of\x20THREE.Geometry.', bf);
        },
        'mergeMesh': function(bf) {
            bf && bf['isMesh'] ? (bf['matrixAutoUpdate'] && bf['updateMatrix'](),
            this['merge'](bf['geometry'], bf['matrix'])) : console['error']('THREE.Geometry.mergeMesh():\x20mesh\x20not\x20an\x20instance\x20of\x20THREE.Mesh.', bf);
        },
        'mergeVertices': function() {
            var bf, bg, bh, bi, bF, bG, bH, bI, bJ = {}, bK = [], bL = [], bM = Math['pow'](0xa, 0x4);
            for (bh = 0x0,
            bi = this['vertices']['length']; bh < bi; bh++)
                bf = this['vertices'][bh],
                void 0x0 === bJ[bg = Math['round'](bf['x'] * bM) + '_' + Math['round'](bf['y'] * bM) + '_' + Math['round'](bf['z'] * bM)] ? (bJ[bg] = bh,
                bK['push'](this['vertices'][bh]),
                bL[bh] = bK['length'] - 0x1) : bL[bh] = bL[bJ[bg]];
            var bN = [];
            for (bh = 0x0,
            bi = this['faces']['length']; bh < bi; bh++) {
                (bF = this['faces'][bh])['a'] = bL[bF['a']],
                bF['b'] = bL[bF['b']],
                bF['c'] = bL[bF['c']],
                bG = [bF['a'], bF['b'], bF['c']];
                for (var bO = 0x0; bO < 0x3; bO++)
                    if (bG[bO] === bG[(bO + 0x1) % 0x3]) {
                        bN['push'](bh);
                        break;
                    }
            }
            for (bh = bN['length'] - 0x1; bh >= 0x0; bh--) {
                var bP = bN[bh];
                for (this['faces']['splice'](bP, 0x1),
                bH = 0x0,
                bI = this['faceVertexUvs']['length']; bH < bI; bH++)
                    this['faceVertexUvs'][bH]['splice'](bP, 0x1);
            }
            var bQ = this['vertices']['length'] - bK['length'];
            return this['vertices'] = bK,
            bQ;
        },
        'setFromPoints': function(bf) {
            this['vertices'] = [];
            for (var bg = 0x0, bh = bf['length']; bg < bh; bg++) {
                var bi = bf[bg];
                this['vertices']['push'](new eK(bi['x'],bi['y'],bi['z'] || 0x0));
            }
            return this;
        },
        'sortFacesByMaterialIndex': function() {
            for (var bf = this['faces'], bg = bf['length'], bh = 0x0; bh < bg; bh++)
                bf[bh]['_id'] = bh;
            bf['sort'](function(bf, bg) {
                return bf['materialIndex'] - bg['materialIndex'];
            });
            var bi, bF, bG = this['faceVertexUvs'][0x0], bH = this['faceVertexUvs'][0x1];
            bG && bG['length'] === bg && (bi = []),
            bH && bH['length'] === bg && (bF = []);
            for (bh = 0x0; bh < bg; bh++) {
                var bI = bf[bh]['_id'];
                bi && bi['push'](bG[bI]),
                bF && bF['push'](bH[bI]);
            }
            bi && (this['faceVertexUvs'][0x0] = bi),
            bF && (this['faceVertexUvs'][0x1] = bF);
        },
        'toJSON': function() {
            var bf = {
                'metadata': {
                    'version': 4.5,
                    'type': 'Geometry',
                    'generator': 'Geometry.toJSON'
                }
            };
            if (bf['uuid'] = this['uuid'],
            bf['type'] = this['type'],
            '' !== this['name'] && (bf['name'] = this['name']),
            void 0x0 !== this['parameters']) {
                var bg = this['parameters'];
                for (var bh in bg)
                    void 0x0 !== bg[bh] && (bf[bh] = bg[bh]);
                return bf;
            }
            for (var bi = [], bF = 0x0; bF < this['vertices']['length']; bF++) {
                var bG = this['vertices'][bF];
                bi['push'](bG['x'], bG['y'], bG['z']);
            }
            var bH = []
              , bI = []
              , bJ = {}
              , bK = []
              , bL = {}
              , bM = []
              , bN = {};
            for (bF = 0x0; bF < this['faces']['length']; bF++) {
                var bO = this['faces'][bF]
                  , bP = void 0x0 !== this['faceVertexUvs'][0x0][bF]
                  , bQ = bO['normal']['length']() > 0x0
                  , bR = bO['vertexNormals']['length'] > 0x0
                  , bS = 0x1 !== bO['color']['r'] || 0x1 !== bO['color']['g'] || 0x1 !== bO['color']['b']
                  , bT = bO['vertexColors']['length'] > 0x0
                  , bU = 0x0;
                if (bU = bY(bU, 0x0, 0x0),
                bU = bY(bU, 0x1, !0x0),
                bU = bY(bU, 0x2, !0x1),
                bU = bY(bU, 0x3, bP),
                bU = bY(bU, 0x4, bQ),
                bU = bY(bU, 0x5, bR),
                bU = bY(bU, 0x6, bS),
                bU = bY(bU, 0x7, bT),
                bH['push'](bU),
                bH['push'](bO['a'], bO['b'], bO['c']),
                bH['push'](bO['materialIndex']),
                bP) {
                    var bV = this['faceVertexUvs'][0x0][bF];
                    bH['push'](c1(bV[0x0]), c1(bV[0x1]), c1(bV[0x2]));
                }
                if (bQ && bH['push'](bZ(bO['normal'])),
                bR) {
                    var bW = bO['vertexNormals'];
                    bH['push'](bZ(bW[0x0]), bZ(bW[0x1]), bZ(bW[0x2]));
                }
                if (bS && bH['push'](c0(bO['color'])),
                bT) {
                    var bX = bO['vertexColors'];
                    bH['push'](c0(bX[0x0]), c0(bX[0x1]), c0(bX[0x2]));
                }
            }
            function bY(bf, bg, bh) {
                return bh ? bf | 0x1 << bg : bf & ~(0x1 << bg);
            }
            function bZ(bf) {
                var bg = bf['x']['toString']() + bf['y']['toString']() + bf['z']['toString']();
                return void 0x0 !== bJ[bg] ? bJ[bg] : (bJ[bg] = bI['length'] / 0x3,
                bI['push'](bf['x'], bf['y'], bf['z']),
                bJ[bg]);
            }
            function c0(bf) {
                var bg = bf['r']['toString']() + bf['g']['toString']() + bf['b']['toString']();
                return void 0x0 !== bL[bg] ? bL[bg] : (bL[bg] = bK['length'],
                bK['push'](bf['getHex']()),
                bL[bg]);
            }
            function c1(bf) {
                var bg = bf['x']['toString']() + bf['y']['toString']();
                return void 0x0 !== bN[bg] ? bN[bg] : (bN[bg] = bM['length'] / 0x2,
                bM['push'](bf['x'], bf['y']),
                bN[bg]);
            }
            return bf['data'] = {},
            bf['data']['vertices'] = bi,
            bf['data']['normals'] = bI,
            bK['length'] > 0x0 && (bf['data']['colors'] = bK),
            bM['length'] > 0x0 && (bf['data']['uvs'] = [bM]),
            bf['data']['faces'] = bH,
            bf;
        },
        'clone': function() {
            return new AH()['copy'](this);
        },
        'copy': function(bf) {
            var bg, bh, bi, bF, bG, bH;
            this['vertices'] = [],
            this['colors'] = [],
            this['faces'] = [],
            this['faceVertexUvs'] = [[]],
            this['morphTargets'] = [],
            this['morphNormals'] = [],
            this['skinWeights'] = [],
            this['skinIndices'] = [],
            this['lineDistances'] = [],
            this['boundingBox'] = null,
            this['boundingSphere'] = null,
            this['name'] = bf['name'];
            var bI = bf['vertices'];
            for (bg = 0x0,
            bh = bI['length']; bg < bh; bg++)
                this['vertices']['push'](bI[bg]['clone']());
            var bJ = bf['colors'];
            for (bg = 0x0,
            bh = bJ['length']; bg < bh; bg++)
                this['colors']['push'](bJ[bg]['clone']());
            var bK = bf['faces'];
            for (bg = 0x0,
            bh = bK['length']; bg < bh; bg++)
                this['faces']['push'](bK[bg]['clone']());
            for (bg = 0x0,
            bh = bf['faceVertexUvs']['length']; bg < bh; bg++) {
                var bL = bf['faceVertexUvs'][bg];
                for (void 0x0 === this['faceVertexUvs'][bg] && (this['faceVertexUvs'][bg] = []),
                bi = 0x0,
                bF = bL['length']; bi < bF; bi++) {
                    var bM = bL[bi]
                      , bN = [];
                    for (bG = 0x0,
                    bH = bM['length']; bG < bH; bG++) {
                        var bO = bM[bG];
                        bN['push'](bO['clone']());
                    }
                    this['faceVertexUvs'][bg]['push'](bN);
                }
            }
            var bP = bf['morphTargets'];
            for (bg = 0x0,
            bh = bP['length']; bg < bh; bg++) {
                var bQ = {};
                if (bQ['name'] = bP[bg]['name'],
                void 0x0 !== bP[bg]['vertices'])
                    for (bQ['vertices'] = [],
                    bi = 0x0,
                    bF = bP[bg]['vertices']['length']; bi < bF; bi++)
                        bQ['vertices']['push'](bP[bg]['vertices'][bi]['clone']());
                if (void 0x0 !== bP[bg]['normals'])
                    for (bQ['normals'] = [],
                    bi = 0x0,
                    bF = bP[bg]['normals']['length']; bi < bF; bi++)
                        bQ['normals']['push'](bP[bg]['normals'][bi]['clone']());
                this['morphTargets']['push'](bQ);
            }
            var bR = bf['morphNormals'];
            for (bg = 0x0,
            bh = bR['length']; bg < bh; bg++) {
                var bS = {};
                if (void 0x0 !== bR[bg]['vertexNormals'])
                    for (bS['vertexNormals'] = [],
                    bi = 0x0,
                    bF = bR[bg]['vertexNormals']['length']; bi < bF; bi++) {
                        var bT = bR[bg]['vertexNormals'][bi]
                          , bU = {};
                        bU['a'] = bT['a']['clone'](),
                        bU['b'] = bT['b']['clone'](),
                        bU['c'] = bT['c']['clone'](),
                        bS['vertexNormals']['push'](bU);
                    }
                if (void 0x0 !== bR[bg]['faceNormals'])
                    for (bS['faceNormals'] = [],
                    bi = 0x0,
                    bF = bR[bg]['faceNormals']['length']; bi < bF; bi++)
                        bS['faceNormals']['push'](bR[bg]['faceNormals'][bi]['clone']());
                this['morphNormals']['push'](bS);
            }
            var bV = bf['skinWeights'];
            for (bg = 0x0,
            bh = bV['length']; bg < bh; bg++)
                this['skinWeights']['push'](bV[bg]['clone']());
            var bW = bf['skinIndices'];
            for (bg = 0x0,
            bh = bW['length']; bg < bh; bg++)
                this['skinIndices']['push'](bW[bg]['clone']());
            var bX = bf['lineDistances'];
            for (bg = 0x0,
            bh = bX['length']; bg < bh; bg++)
                this['lineDistances']['push'](bX[bg]);
            var bY = bf['boundingBox'];
            null !== bY && (this['boundingBox'] = bY['clone']());
            var bZ = bf['boundingSphere'];
            return null !== bZ && (this['boundingSphere'] = bZ['clone']()),
            this['elementsNeedUpdate'] = bf['elementsNeedUpdate'],
            this['verticesNeedUpdate'] = bf['verticesNeedUpdate'],
            this['uvsNeedUpdate'] = bf['uvsNeedUpdate'],
            this['normalsNeedUpdate'] = bf['normalsNeedUpdate'],
            this['colorsNeedUpdate'] = bf['colorsNeedUpdate'],
            this['lineDistancesNeedUpdate'] = bf['lineDistancesNeedUpdate'],
            this['groupsNeedUpdate'] = bf['groupsNeedUpdate'],
            this;
        },
        'dispose': function() {
            this['dispatchEvent']({
                'type': 'dispose'
            });
        }
    }),
    Object['defineProperty'](AI['prototype'], 'needsUpdate', {
        'set': function(bf) {
            !0x0 === bf && this['version']++;
        }
    }),
    Object['assign'](AI['prototype'], {
        'isBufferAttribute': !0x0,
        'onUploadCallback': function() {},
        'setArray': function(bf) {
            if (Array['isArray'](bf))
                throw new TypeError('THREE.BufferAttribute:\x20array\x20should\x20be\x20a\x20Typed\x20Array.');
            return this['count'] = void 0x0 !== bf ? bf['length'] / this['itemSize'] : 0x0,
            this['array'] = bf,
            this;
        },
        'setDynamic': function(bf) {
            return this['dynamic'] = bf,
            this;
        },
        'copy': function(bf) {
            return this['name'] = bf['name'],
            this['array'] = new bf['array']['constructor'](bf['array']),
            this['itemSize'] = bf['itemSize'],
            this['count'] = bf['count'],
            this['normalized'] = bf['normalized'],
            this['dynamic'] = bf['dynamic'],
            this;
        },
        'copyAt': function(bf, bg, bh) {
            bf *= this['itemSize'],
            bh *= bg['itemSize'];
            for (var bi = 0x0, bF = this['itemSize']; bi < bF; bi++)
                this['array'][bf + bi] = bg['array'][bh + bi];
            return this;
        },
        'copyArray': function(bf) {
            return this['array']['set'](bf),
            this;
        },
        'copyColorsArray': function(bf) {
            for (var bg = this['array'], bh = 0x0, bi = 0x0, bF = bf['length']; bi < bF; bi++) {
                var bG = bf[bi];
                void 0x0 === bG && (console['warn']('THREE.BufferAttribute.copyColorsArray():\x20color\x20is\x20undefined', bi),
                bG = new w7()),
                bg[bh++] = bG['r'],
                bg[bh++] = bG['g'],
                bg[bh++] = bG['b'];
            }
            return this;
        },
        'copyVector2sArray': function(bf) {
            for (var bg = this['array'], bh = 0x0, bi = 0x0, bF = bf['length']; bi < bF; bi++) {
                var bG = bf[bi];
                void 0x0 === bG && (console['warn']('THREE.BufferAttribute.copyVector2sArray():\x20vector\x20is\x20undefined', bi),
                bG = new eC()),
                bg[bh++] = bG['x'],
                bg[bh++] = bG['y'];
            }
            return this;
        },
        'copyVector3sArray': function(bf) {
            for (var bg = this['array'], bh = 0x0, bi = 0x0, bF = bf['length']; bi < bF; bi++) {
                var bG = bf[bi];
                void 0x0 === bG && (console['warn']('THREE.BufferAttribute.copyVector3sArray():\x20vector\x20is\x20undefined', bi),
                bG = new eK()),
                bg[bh++] = bG['x'],
                bg[bh++] = bG['y'],
                bg[bh++] = bG['z'];
            }
            return this;
        },
        'copyVector4sArray': function(bf) {
            for (var bg = this['array'], bh = 0x0, bi = 0x0, bF = bf['length']; bi < bF; bi++) {
                var bG = bf[bi];
                void 0x0 === bG && (console['warn']('THREE.BufferAttribute.copyVector4sArray():\x20vector\x20is\x20undefined', bi),
                bG = new m7()),
                bg[bh++] = bG['x'],
                bg[bh++] = bG['y'],
                bg[bh++] = bG['z'],
                bg[bh++] = bG['w'];
            }
            return this;
        },
        'set': function(bf, bg) {
            return void 0x0 === bg && (bg = 0x0),
            this['array']['set'](bf, bg),
            this;
        },
        'getX': function(bf) {
            return this['array'][bf * this['itemSize']];
        },
        'setX': function(bf, bg) {
            return this['array'][bf * this['itemSize']] = bg,
            this;
        },
        'getY': function(bf) {
            return this['array'][bf * this['itemSize'] + 0x1];
        },
        'setY': function(bf, bg) {
            return this['array'][bf * this['itemSize'] + 0x1] = bg,
            this;
        },
        'getZ': function(bf) {
            return this['array'][bf * this['itemSize'] + 0x2];
        },
        'setZ': function(bf, bg) {
            return this['array'][bf * this['itemSize'] + 0x2] = bg,
            this;
        },
        'getW': function(bf) {
            return this['array'][bf * this['itemSize'] + 0x3];
        },
        'setW': function(bf, bg) {
            return this['array'][bf * this['itemSize'] + 0x3] = bg,
            this;
        },
        'setXY': function(bf, bg, bh) {
            return bf *= this['itemSize'],
            this['array'][bf + 0x0] = bg,
            this['array'][bf + 0x1] = bh,
            this;
        },
        'setXYZ': function(bf, bg, bh, bi) {
            return bf *= this['itemSize'],
            this['array'][bf + 0x0] = bg,
            this['array'][bf + 0x1] = bh,
            this['array'][bf + 0x2] = bi,
            this;
        },
        'setXYZW': function(bf, bg, bh, bi, bF) {
            return bf *= this['itemSize'],
            this['array'][bf + 0x0] = bg,
            this['array'][bf + 0x1] = bh,
            this['array'][bf + 0x2] = bi,
            this['array'][bf + 0x3] = bF,
            this;
        },
        'onUpload': function(bf) {
            return this['onUploadCallback'] = bf,
            this;
        },
        'clone': function() {
            return new this['constructor'](this['array'],this['itemSize'])['copy'](this);
        },
        'toJSON': function() {
            return {
                'itemSize': this['itemSize'],
                'type': this['array']['constructor']['name'],
                'array': Array['prototype']['slice']['call'](this['array']),
                'normalized': this['normalized']
            };
        }
    }),
    AM['prototype'] = Object['create'](AI['prototype']),
    AM['prototype']['constructor'] = AM,
    AQ['prototype'] = Object['create'](AI['prototype']),
    AQ['prototype']['constructor'] = AQ,
    AU['prototype'] = Object['create'](AI['prototype']),
    AU['prototype']['constructor'] = AU,
    AY['prototype'] = Object['create'](AI['prototype']),
    AY['prototype']['constructor'] = AY,
    B2['prototype'] = Object['create'](AI['prototype']),
    B2['prototype']['constructor'] = B2,
    B6['prototype'] = Object['create'](AI['prototype']),
    B6['prototype']['constructor'] = B6,
    Ba['prototype'] = Object['create'](AI['prototype']),
    Ba['prototype']['constructor'] = Ba,
    Be['prototype'] = Object['create'](AI['prototype']),
    Be['prototype']['constructor'] = Be,
    Bi['prototype'] = Object['create'](AI['prototype']),
    Bi['prototype']['constructor'] = Bi,
    Object['assign'](Bm['prototype'], {
        'computeGroups': function(bf) {
            for (var bg, bh = [], bi = void 0x0, bF = bf['faces'], bG = 0x0; bG < bF['length']; bG++) {
                var bH = bF[bG];
                bH['materialIndex'] !== bi && (bi = bH['materialIndex'],
                void 0x0 !== bg && (bg['count'] = 0x3 * bG - bg['start'],
                bh['push'](bg)),
                bg = {
                    'start': 0x3 * bG,
                    'materialIndex': bi
                });
            }
            void 0x0 !== bg && (bg['count'] = 0x3 * bG - bg['start'],
            bh['push'](bg)),
            this['groups'] = bh;
        },
        'fromGeometry': function(bf) {
            var bg, bh = bf['faces'], bi = bf['vertices'], bF = bf['faceVertexUvs'], bG = bF[0x0] && bF[0x0]['length'] > 0x0, bH = bF[0x1] && bF[0x1]['length'] > 0x0, bI = bf['morphTargets'], bJ = bI['length'];
            if (bJ > 0x0) {
                bg = [];
                for (var bK = 0x0; bK < bJ; bK++)
                    bg[bK] = {
                        'name': bI[bK]['name'],
                        'data': []
                    };
                this['morphTargets']['position'] = bg;
            }
            var bL, bM = bf['morphNormals'], bN = bM['length'];
            if (bN > 0x0) {
                bL = [];
                for (bK = 0x0; bK < bN; bK++)
                    bL[bK] = {
                        'name': bM[bK]['name'],
                        'data': []
                    };
                this['morphTargets']['normal'] = bL;
            }
            var bO = bf['skinIndices']
              , bP = bf['skinWeights']
              , bQ = bO['length'] === bi['length']
              , bR = bP['length'] === bi['length'];
            bi['length'] > 0x0 && 0x0 === bh['length'] && console['error']('THREE.DirectGeometry:\x20Faceless\x20geometries\x20are\x20not\x20supported.');
            for (bK = 0x0; bK < bh['length']; bK++) {
                var bS = bh[bK];
                this['vertices']['push'](bi[bS['a']], bi[bS['b']], bi[bS['c']]);
                var bT = bS['vertexNormals'];
                if (0x3 === bT['length'])
                    this['normals']['push'](bT[0x0], bT[0x1], bT[0x2]);
                else {
                    var bU = bS['normal'];
                    this['normals']['push'](bU, bU, bU);
                }
                var bV, bW = bS['vertexColors'];
                if (0x3 === bW['length'])
                    this['colors']['push'](bW[0x0], bW[0x1], bW[0x2]);
                else {
                    var bX = bS['color'];
                    this['colors']['push'](bX, bX, bX);
                }
                if (!0x0 === bG)
                    void 0x0 !== (bV = bF[0x0][bK]) ? this['uvs']['push'](bV[0x0], bV[0x1], bV[0x2]) : (console['warn']('THREE.DirectGeometry.fromGeometry():\x20Undefined\x20vertexUv\x20', bK),
                    this['uvs']['push'](new eC(), new eC(), new eC()));
                if (!0x0 === bH)
                    void 0x0 !== (bV = bF[0x1][bK]) ? this['uvs2']['push'](bV[0x0], bV[0x1], bV[0x2]) : (console['warn']('THREE.DirectGeometry.fromGeometry():\x20Undefined\x20vertexUv2\x20', bK),
                    this['uvs2']['push'](new eC(), new eC(), new eC()));
                for (var bY = 0x0; bY < bJ; bY++) {
                    var bZ = bI[bY]['vertices'];
                    bg[bY]['data']['push'](bZ[bS['a']], bZ[bS['b']], bZ[bS['c']]);
                }
                for (bY = 0x0; bY < bN; bY++) {
                    var c0 = bM[bY]['vertexNormals'][bK];
                    bL[bY]['data']['push'](c0['a'], c0['b'], c0['c']);
                }
                bQ && this['skinIndices']['push'](bO[bS['a']], bO[bS['b']], bO[bS['c']]),
                bR && this['skinWeights']['push'](bP[bS['a']], bP[bS['b']], bP[bS['c']]);
            }
            return this['computeGroups'](bf),
            this['verticesNeedUpdate'] = bf['verticesNeedUpdate'],
            this['normalsNeedUpdate'] = bf['normalsNeedUpdate'],
            this['colorsNeedUpdate'] = bf['colorsNeedUpdate'],
            this['uvsNeedUpdate'] = bf['uvsNeedUpdate'],
            this['groupsNeedUpdate'] = bf['groupsNeedUpdate'],
            this;
        }
    });
    var Ge = 0x1;
    function Gf() {
        Object['defineProperty'](this, 'id', {
            'value': Ge += 0x2
        }),
        this['uuid'] = e2['generateUUID'](),
        this['name'] = '',
        this['type'] = 'BufferGeometry',
        this['index'] = null,
        this['attributes'] = {},
        this['morphAttributes'] = {},
        this['groups'] = [],
        this['boundingBox'] = null,
        this['boundingSphere'] = null,
        this['drawRange'] = {
            'start': 0x0,
            'count': 0x1 / 0x0
        },
        this['userData'] = {};
    }
    function Gg(bf, bg, bh, bi, bF, bG) {
        AH['call'](this),
        this['type'] = 'BoxGeometry',
        this['parameters'] = {
            'width': bf,
            'height': bg,
            'depth': bh,
            'widthSegments': bi,
            'heightSegments': bF,
            'depthSegments': bG
        },
        this['fromBufferGeometry'](new Gn(bf,bg,bh,bi,bF,bG)),
        this['mergeVertices']();
    }
    function Gn(bf, bg, bh, bi, bF, bG) {
        Gf['call'](this),
        this['type'] = 'BoxBufferGeometry',
        this['parameters'] = {
            'width': bf,
            'height': bg,
            'depth': bh,
            'widthSegments': bi,
            'heightSegments': bF,
            'depthSegments': bG
        };
        var bH = this;
        bf = bf || 0x1,
        bg = bg || 0x1,
        bh = bh || 0x1,
        bi = Math['floor'](bi) || 0x1,
        bF = Math['floor'](bF) || 0x1,
        bG = Math['floor'](bG) || 0x1;
        var bI = []
          , bJ = []
          , bK = []
          , bL = []
          , bM = 0x0
          , bN = 0x0;
        function bO(bf, bg, bh, bi, bF, bG, bO, bP, bQ, bR, bS) {
            var bT, bU, bV = bG / bQ, bW = bO / bR, bX = bG / 0x2, bY = bO / 0x2, bZ = bP / 0x2, c0 = bQ + 0x1, c1 = bR + 0x1, c2 = 0x0, c3 = 0x0, c4 = new eK();
            for (bU = 0x0; bU < c1; bU++) {
                var c5 = bU * bW - bY;
                for (bT = 0x0; bT < c0; bT++) {
                    var c6 = bT * bV - bX;
                    c4[bf] = c6 * bi,
                    c4[bg] = c5 * bF,
                    c4[bh] = bZ,
                    bJ['push'](c4['x'], c4['y'], c4['z']),
                    c4[bf] = 0x0,
                    c4[bg] = 0x0,
                    c4[bh] = bP > 0x0 ? 0x1 : -0x1,
                    bK['push'](c4['x'], c4['y'], c4['z']),
                    bL['push'](bT / bQ),
                    bL['push'](0x1 - bU / bR),
                    c2 += 0x1;
                }
            }
            for (bU = 0x0; bU < bR; bU++)
                for (bT = 0x0; bT < bQ; bT++) {
                    var c7 = bM + bT + c0 * bU
                      , c8 = bM + bT + c0 * (bU + 0x1)
                      , c9 = bM + (bT + 0x1) + c0 * (bU + 0x1)
                      , ca = bM + (bT + 0x1) + c0 * bU;
                    bI['push'](c7, c8, ca),
                    bI['push'](c8, c9, ca),
                    c3 += 0x6;
                }
            bH['addGroup'](bN, c3, bS),
            bN += c3,
            bM += c2;
        }
        bO('z', 'y', 'x', -0x1, -0x1, bh, bg, bf, bG, bF, 0x0),
        bO('z', 'y', 'x', 0x1, -0x1, bh, bg, -bf, bG, bF, 0x1),
        bO('x', 'z', 'y', 0x1, 0x1, bf, bh, bg, bi, bG, 0x2),
        bO('x', 'z', 'y', 0x1, -0x1, bf, bh, -bg, bi, bG, 0x3),
        bO('x', 'y', 'z', 0x1, -0x1, bf, bg, bh, bi, bF, 0x4),
        bO('x', 'y', 'z', -0x1, -0x1, bf, bg, -bh, bi, bF, 0x5),
        this['setIndex'](bI),
        this['addAttribute']('position', new Be(bJ,0x3)),
        this['addAttribute']('normal', new Be(bK,0x3)),
        this['addAttribute']('uv', new Be(bL,0x2));
    }
    function H5(bf, bg, bh, bi) {
        AH['call'](this),
        this['type'] = 'PlaneGeometry',
        this['parameters'] = {
            'width': bf,
            'height': bg,
            'widthSegments': bh,
            'heightSegments': bi
        },
        this['fromBufferGeometry'](new Ha(bf,bg,bh,bi)),
        this['mergeVertices']();
    }
    function Ha(bf, bg, bh, bi) {
        Gf['call'](this),
        this['type'] = 'PlaneBufferGeometry',
        this['parameters'] = {
            'width': bf,
            'height': bg,
            'widthSegments': bh,
            'heightSegments': bi
        };
        var bF, bG, bH = (bf = bf || 0x1) / 0x2, bI = (bg = bg || 0x1) / 0x2, bJ = Math['floor'](bh) || 0x1, bK = Math['floor'](bi) || 0x1, bL = bJ + 0x1, bM = bK + 0x1, bN = bf / bJ, bO = bg / bK, bP = [], bQ = [], bR = [], bS = [];
        for (bG = 0x0; bG < bM; bG++) {
            var bT = bG * bO - bI;
            for (bF = 0x0; bF < bL; bF++) {
                var bU = bF * bN - bH;
                bQ['push'](bU, -bT, 0x0),
                bR['push'](0x0, 0x0, 0x1),
                bS['push'](bF / bJ),
                bS['push'](0x1 - bG / bK);
            }
        }
        for (bG = 0x0; bG < bK; bG++)
            for (bF = 0x0; bF < bJ; bF++) {
                var bV = bF + bL * bG
                  , bW = bF + bL * (bG + 0x1)
                  , bX = bF + 0x1 + bL * (bG + 0x1)
                  , bY = bF + 0x1 + bL * bG;
                bP['push'](bV, bW, bY),
                bP['push'](bW, bX, bY);
            }
        this['setIndex'](bP),
        this['addAttribute']('position', new Be(bQ,0x3)),
        this['addAttribute']('normal', new Be(bR,0x3)),
        this['addAttribute']('uv', new Be(bS,0x2));
    }
    Gf['prototype'] = Object['assign'](Object['create'](bi['prototype']), {
        'constructor': Gf,
        'isBufferGeometry': !0x0,
        'getIndex': function() {
            return this['index'];
        },
        'setIndex': function(bf) {
            Array['isArray'](bf) ? this['index'] = new ((Bn(bf)) > 0xffff ? Ba : B2)(bf,0x1) : this['index'] = bf;
        },
        'addAttribute': function(bf, bg) {
            return bg && bg['isBufferAttribute'] || bg && bg['isInterleavedBufferAttribute'] ? 'index' === bf ? (console['warn']('THREE.BufferGeometry.addAttribute:\x20Use\x20.setIndex()\x20for\x20index\x20attribute.'),
            this['setIndex'](bg),
            this) : (this['attributes'][bf] = bg,
            this) : (console['warn']('THREE.BufferGeometry:\x20.addAttribute()\x20now\x20expects\x20(\x20name,\x20attribute\x20).'),
            this['addAttribute'](bf, new AI(arguments[0x1],arguments[0x2])));
        },
        'getAttribute': function(bf) {
            return this['attributes'][bf];
        },
        'removeAttribute': function(bf) {
            return delete this['attributes'][bf],
            this;
        },
        'addGroup': function(bf, bg, bh) {
            this['groups']['push']({
                'start': bf,
                'count': bg,
                'materialIndex': void 0x0 !== bh ? bh : 0x0
            });
        },
        'clearGroups': function() {
            this['groups'] = [];
        },
        'setDrawRange': function(bf, bg) {
            this['drawRange']['start'] = bf,
            this['drawRange']['count'] = bg;
        },
        'applyMatrix': function(bf) {
            var bg = this['attributes']['position'];
            void 0x0 !== bg && (bf['applyToBufferAttribute'](bg),
            bg['needsUpdate'] = !0x0);
            var bh = this['attributes']['normal'];
            void 0x0 !== bh && (new eO()['getNormalMatrix'](bf)['applyToBufferAttribute'](bh),
            bh['needsUpdate'] = !0x0);
            var bi = this['attributes']['tangent'];
            void 0x0 !== bi && (new eO()['getNormalMatrix'](bf)['applyToBufferAttribute'](bi),
            bi['needsUpdate'] = !0x0);
            return null !== this['boundingBox'] && this['computeBoundingBox'](),
            null !== this['boundingSphere'] && this['computeBoundingSphere'](),
            this;
        },
        'rotateX': function() {
            var bf = new mR();
            return function(bg) {
                return bf['makeRotationX'](bg),
                this['applyMatrix'](bf),
                this;
            }
            ;
        }(),
        'rotateY': function() {
            var bf = new mR();
            return function(bg) {
                return bf['makeRotationY'](bg),
                this['applyMatrix'](bf),
                this;
            }
            ;
        }(),
        'rotateZ': function() {
            var bf = new mR();
            return function(bg) {
                return bf['makeRotationZ'](bg),
                this['applyMatrix'](bf),
                this;
            }
            ;
        }(),
        'translate': function() {
            var bf = new mR();
            return function(bg, bh, bi) {
                return bf['makeTranslation'](bg, bh, bi),
                this['applyMatrix'](bf),
                this;
            }
            ;
        }(),
        'scale': function() {
            var bf = new mR();
            return function(bg, bh, bi) {
                return bf['makeScale'](bg, bh, bi),
                this['applyMatrix'](bf),
                this;
            }
            ;
        }(),
        'lookAt': function() {
            var bf = new yT();
            return function(bg) {
                bf['lookAt'](bg),
                bf['updateMatrix'](),
                this['applyMatrix'](bf['matrix']);
            }
            ;
        }(),
        'center': function() {
            var bf = new eK();
            return function() {
                return this['computeBoundingBox'](),
                this['boundingBox']['getCenter'](bf)['negate'](),
                this['translate'](bf['x'], bf['y'], bf['z']),
                this;
            }
            ;
        }(),
        'setFromObject': function(bf) {
            var bg = bf['geometry'];
            if (bf['isPoints'] || bf['isLine']) {
                var bh = new Be(0x3 * bg['vertices']['length'],0x3)
                  , bi = new Be(0x3 * bg['colors']['length'],0x3);
                if (this['addAttribute']('position', bh['copyVector3sArray'](bg['vertices'])),
                this['addAttribute']('color', bi['copyColorsArray'](bg['colors'])),
                bg['lineDistances'] && bg['lineDistances']['length'] === bg['vertices']['length']) {
                    var bF = new Be(bg['lineDistances']['length'],0x1);
                    this['addAttribute']('lineDistance', bF['copyArray'](bg['lineDistances']));
                }
                null !== bg['boundingSphere'] && (this['boundingSphere'] = bg['boundingSphere']['clone']()),
                null !== bg['boundingBox'] && (this['boundingBox'] = bg['boundingBox']['clone']());
            } else
                bf['isMesh'] && bg && bg['isGeometry'] && this['fromGeometry'](bg);
            return this;
        },
        'setFromPoints': function(bf) {
            for (var bg = [], bh = 0x0, bi = bf['length']; bh < bi; bh++) {
                var bF = bf[bh];
                bg['push'](bF['x'], bF['y'], bF['z'] || 0x0);
            }
            return this['addAttribute']('position', new Be(bg,0x3)),
            this;
        },
        'updateFromObject': function(bf) {
            var bg, bh = bf['geometry'];
            if (bf['isMesh']) {
                var bi = bh['__directGeometry'];
                if (!0x0 === bh['elementsNeedUpdate'] && (bi = void 0x0,
                bh['elementsNeedUpdate'] = !0x1),
                void 0x0 === bi)
                    return this['fromGeometry'](bh);
                bi['verticesNeedUpdate'] = bh['verticesNeedUpdate'],
                bi['normalsNeedUpdate'] = bh['normalsNeedUpdate'],
                bi['colorsNeedUpdate'] = bh['colorsNeedUpdate'],
                bi['uvsNeedUpdate'] = bh['uvsNeedUpdate'],
                bi['groupsNeedUpdate'] = bh['groupsNeedUpdate'],
                bh['verticesNeedUpdate'] = !0x1,
                bh['normalsNeedUpdate'] = !0x1,
                bh['colorsNeedUpdate'] = !0x1,
                bh['uvsNeedUpdate'] = !0x1,
                bh['groupsNeedUpdate'] = !0x1,
                bh = bi;
            }
            return !0x0 === bh['verticesNeedUpdate'] && (void 0x0 !== (bg = this['attributes']['position']) && (bg['copyVector3sArray'](bh['vertices']),
            bg['needsUpdate'] = !0x0),
            bh['verticesNeedUpdate'] = !0x1),
            !0x0 === bh['normalsNeedUpdate'] && (void 0x0 !== (bg = this['attributes']['normal']) && (bg['copyVector3sArray'](bh['normals']),
            bg['needsUpdate'] = !0x0),
            bh['normalsNeedUpdate'] = !0x1),
            !0x0 === bh['colorsNeedUpdate'] && (void 0x0 !== (bg = this['attributes']['color']) && (bg['copyColorsArray'](bh['colors']),
            bg['needsUpdate'] = !0x0),
            bh['colorsNeedUpdate'] = !0x1),
            bh['uvsNeedUpdate'] && (void 0x0 !== (bg = this['attributes']['uv']) && (bg['copyVector2sArray'](bh['uvs']),
            bg['needsUpdate'] = !0x0),
            bh['uvsNeedUpdate'] = !0x1),
            bh['lineDistancesNeedUpdate'] && (void 0x0 !== (bg = this['attributes']['lineDistance']) && (bg['copyArray'](bh['lineDistances']),
            bg['needsUpdate'] = !0x0),
            bh['lineDistancesNeedUpdate'] = !0x1),
            bh['groupsNeedUpdate'] && (bh['computeGroups'](bf['geometry']),
            this['groups'] = bh['groups'],
            bh['groupsNeedUpdate'] = !0x1),
            this;
        },
        'fromGeometry': function(bf) {
            return bf['__directGeometry'] = new Bm()['fromGeometry'](bf),
            this['fromDirectGeometry'](bf['__directGeometry']);
        },
        'fromDirectGeometry': function(bf) {
            var bg = new Float32Array(0x3 * bf['vertices']['length']);
            if (this['addAttribute']('position', new AI(bg,0x3)['copyVector3sArray'](bf['vertices'])),
            bf['normals']['length'] > 0x0) {
                var bh = new Float32Array(0x3 * bf['normals']['length']);
                this['addAttribute']('normal', new AI(bh,0x3)['copyVector3sArray'](bf['normals']));
            }
            if (bf['colors']['length'] > 0x0) {
                var bi = new Float32Array(0x3 * bf['colors']['length']);
                this['addAttribute']('color', new AI(bi,0x3)['copyColorsArray'](bf['colors']));
            }
            if (bf['uvs']['length'] > 0x0) {
                var bF = new Float32Array(0x2 * bf['uvs']['length']);
                this['addAttribute']('uv', new AI(bF,0x2)['copyVector2sArray'](bf['uvs']));
            }
            if (bf['uvs2']['length'] > 0x0) {
                var bG = new Float32Array(0x2 * bf['uvs2']['length']);
                this['addAttribute']('uv2', new AI(bG,0x2)['copyVector2sArray'](bf['uvs2']));
            }
            for (var bH in this['groups'] = bf['groups'],
            bf['morphTargets']) {
                for (var bI = [], bJ = bf['morphTargets'][bH], bK = 0x0, bL = bJ['length']; bK < bL; bK++) {
                    var bM = bJ[bK]
                      , bN = new Be(0x3 * bM['data']['length'],0x3);
                    bN['name'] = bM['name'],
                    bI['push'](bN['copyVector3sArray'](bM['data']));
                }
                this['morphAttributes'][bH] = bI;
            }
            if (bf['skinIndices']['length'] > 0x0) {
                var bO = new Be(0x4 * bf['skinIndices']['length'],0x4);
                this['addAttribute']('skinIndex', bO['copyVector4sArray'](bf['skinIndices']));
            }
            if (bf['skinWeights']['length'] > 0x0) {
                var bP = new Be(0x4 * bf['skinWeights']['length'],0x4);
                this['addAttribute']('skinWeight', bP['copyVector4sArray'](bf['skinWeights']));
            }
            return null !== bf['boundingSphere'] && (this['boundingSphere'] = bf['boundingSphere']['clone']()),
            null !== bf['boundingBox'] && (this['boundingBox'] = bf['boundingBox']['clone']()),
            this;
        },
        'computeBoundingBox': function() {
            var bf = new mB();
            return function() {
                null === this['boundingBox'] && (this['boundingBox'] = new mB());
                var bg = this['attributes']['position']
                  , bh = this['morphAttributes']['position'];
                if (void 0x0 !== bg) {
                    if (this['boundingBox']['setFromBufferAttribute'](bg),
                    bh)
                        for (var bi = 0x0, bF = bh['length']; bi < bF; bi++) {
                            var bG = bh[bi];
                            bf['setFromBufferAttribute'](bG),
                            this['boundingBox']['expandByPoint'](bf['min']),
                            this['boundingBox']['expandByPoint'](bf['max']);
                        }
                } else
                    this['boundingBox']['makeEmpty']();
                (isNaN(this['boundingBox']['min']['x']) || isNaN(this['boundingBox']['min']['y']) || isNaN(this['boundingBox']['min']['z'])) && console['error']('THREE.BufferGeometry.computeBoundingBox:\x20Computed\x20min/max\x20have\x20NaN\x20values.\x20The\x20\x22position\x22\x20attribute\x20is\x20likely\x20to\x20have\x20NaN\x20values.', this);
            }
            ;
        }(),
        'computeBoundingSphere': function() {
            var bf = new mB()
              , bg = new mB()
              , bh = new eK();
            return function() {
                null === this['boundingSphere'] && (this['boundingSphere'] = new mE());
                var bi = this['attributes']['position']
                  , bF = this['morphAttributes']['position'];
                if (bi) {
                    var bG = this['boundingSphere']['center'];
                    if (bf['setFromBufferAttribute'](bi),
                    bF)
                        for (var bH = 0x0, bI = bF['length']; bH < bI; bH++) {
                            var bJ = bF[bH];
                            bg['setFromBufferAttribute'](bJ),
                            bf['expandByPoint'](bg['min']),
                            bf['expandByPoint'](bg['max']);
                        }
                    bf['getCenter'](bG);
                    var bK = 0x0;
                    for (bH = 0x0,
                    bI = bi['count']; bH < bI; bH++)
                        bh['fromBufferAttribute'](bi, bH),
                        bK = Math['max'](bK, bG['distanceToSquared'](bh));
                    if (bF)
                        for (bH = 0x0,
                        bI = bF['length']; bH < bI; bH++)
                            for (var bL = 0x0, bM = (bJ = bF[bH])['count']; bL < bM; bL++)
                                bh['fromBufferAttribute'](bJ, bL),
                                bK = Math['max'](bK, bG['distanceToSquared'](bh));
                    this['boundingSphere']['radius'] = Math['sqrt'](bK),
                    isNaN(this['boundingSphere']['radius']) && console['error']('THREE.BufferGeometry.computeBoundingSphere():\x20Computed\x20radius\x20is\x20NaN.\x20The\x20\x22position\x22\x20attribute\x20is\x20likely\x20to\x20have\x20NaN\x20values.', this);
                }
            }
            ;
        }(),
        'computeFaceNormals': function() {},
        'computeVertexNormals': function() {
            var bf = this['index']
              , bg = this['attributes'];
            if (bg['position']) {
                var bh = bg['position']['array'];
                if (void 0x0 === bg['normal'])
                    this['addAttribute']('normal', new AI(new Float32Array(bh['length']),0x3));
                else
                    for (var bi = bg['normal']['array'], bF = 0x0, bG = bi['length']; bF < bG; bF++)
                        bi[bF] = 0x0;
                var bH, bI, bJ, bK = bg['normal']['array'], bL = new eK(), bM = new eK(), bN = new eK(), bO = new eK(), bP = new eK();
                if (bf) {
                    var bQ = bf['array'];
                    for (bF = 0x0,
                    bG = bf['count']; bF < bG; bF += 0x3)
                        bH = 0x3 * bQ[bF + 0x0],
                        bI = 0x3 * bQ[bF + 0x1],
                        bJ = 0x3 * bQ[bF + 0x2],
                        bL['fromArray'](bh, bH),
                        bM['fromArray'](bh, bI),
                        bN['fromArray'](bh, bJ),
                        bO['subVectors'](bN, bM),
                        bP['subVectors'](bL, bM),
                        bO['cross'](bP),
                        bK[bH] += bO['x'],
                        bK[bH + 0x1] += bO['y'],
                        bK[bH + 0x2] += bO['z'],
                        bK[bI] += bO['x'],
                        bK[bI + 0x1] += bO['y'],
                        bK[bI + 0x2] += bO['z'],
                        bK[bJ] += bO['x'],
                        bK[bJ + 0x1] += bO['y'],
                        bK[bJ + 0x2] += bO['z'];
                } else
                    for (bF = 0x0,
                    bG = bh['length']; bF < bG; bF += 0x9)
                        bL['fromArray'](bh, bF),
                        bM['fromArray'](bh, bF + 0x3),
                        bN['fromArray'](bh, bF + 0x6),
                        bO['subVectors'](bN, bM),
                        bP['subVectors'](bL, bM),
                        bO['cross'](bP),
                        bK[bF] = bO['x'],
                        bK[bF + 0x1] = bO['y'],
                        bK[bF + 0x2] = bO['z'],
                        bK[bF + 0x3] = bO['x'],
                        bK[bF + 0x4] = bO['y'],
                        bK[bF + 0x5] = bO['z'],
                        bK[bF + 0x6] = bO['x'],
                        bK[bF + 0x7] = bO['y'],
                        bK[bF + 0x8] = bO['z'];
                this['normalizeNormals'](),
                bg['normal']['needsUpdate'] = !0x0;
            }
        },
        'merge': function(bf, bg) {
            if (bf && bf['isBufferGeometry']) {
                void 0x0 === bg && (bg = 0x0,
                console['warn']('THREE.BufferGeometry.merge():\x20Overwriting\x20original\x20geometry,\x20starting\x20at\x20offset=0.\x20Use\x20BufferGeometryUtils.mergeBufferGeometries()\x20for\x20lossless\x20merge.'));
                var bh = this['attributes'];
                for (var bi in bh)
                    if (void 0x0 !== bf['attributes'][bi])
                        for (var bF = bh[bi]['array'], bG = bf['attributes'][bi], bH = bG['array'], bI = bG['itemSize'] * bg, bJ = Math['min'](bH['length'], bF['length'] - bI), bK = 0x0, bL = bI; bK < bJ; bK++,
                        bL++)
                            bF[bL] = bH[bK];
                return this;
            }
            console['error']('THREE.BufferGeometry.merge():\x20geometry\x20not\x20an\x20instance\x20of\x20THREE.BufferGeometry.', bf);
        },
        'normalizeNormals': function() {
            var bf = new eK();
            return function() {
                for (var bg = this['attributes']['normal'], bh = 0x0, bi = bg['count']; bh < bi; bh++)
                    bf['x'] = bg['getX'](bh),
                    bf['y'] = bg['getY'](bh),
                    bf['z'] = bg['getZ'](bh),
                    bf['normalize'](),
                    bg['setXYZ'](bh, bf['x'], bf['y'], bf['z']);
            }
            ;
        }(),
        'toNonIndexed': function() {
            function bf(bf, bg) {
                for (var bh = bf['array'], bi = bf['itemSize'], bF = new bh['constructor'](bg['length'] * bi), bG = 0x0, bH = 0x0, bI = 0x0, bJ = bg['length']; bI < bJ; bI++) {
                    bG = bg[bI] * bi;
                    for (var bK = 0x0; bK < bi; bK++)
                        bF[bH++] = bh[bG++];
                }
                return new AI(bF,bi);
            }
            if (null === this['index'])
                return console['warn']('THREE.BufferGeometry.toNonIndexed():\x20Geometry\x20is\x20already\x20non-indexed.'),
                this;
            var bg = new Gf()
              , bh = this['index']['array']
              , bi = this['attributes'];
            for (var bF in bi) {
                var bG = bf(bi[bF], bh);
                bg['addAttribute'](bF, bG);
            }
            var bH = this['morphAttributes'];
            for (bF in bH) {
                for (var bI = [], bJ = bH[bF], bK = 0x0, bL = bJ['length']; bK < bL; bK++) {
                    bG = bf(bJ[bK], bh);
                    bI['push'](bG);
                }
                bg['morphAttributes'][bF] = bI;
            }
            for (var bM = this['groups'], bN = (bK = 0x0,
            bM['length']); bK < bN; bK++) {
                var bO = bM[bK];
                bg['addGroup'](bO['start'], bO['count'], bO['materialIndex']);
            }
            return bg;
        },
        'toJSON': function() {
            var bf = {
                'metadata': {
                    'version': 4.5,
                    'type': 'BufferGeometry',
                    'generator': 'BufferGeometry.toJSON'
                }
            };
            if (bf['uuid'] = this['uuid'],
            bf['type'] = this['type'],
            '' !== this['name'] && (bf['name'] = this['name']),
            Object['keys'](this['userData'])['length'] > 0x0 && (bf['userData'] = this['userData']),
            void 0x0 !== this['parameters']) {
                var bg = this['parameters'];
                for (var bh in bg)
                    void 0x0 !== bg[bh] && (bf[bh] = bg[bh]);
                return bf;
            }
            bf['data'] = {
                'attributes': {}
            };
            var bi = this['index'];
            null !== bi && (bf['data']['index'] = {
                'type': bi['array']['constructor']['name'],
                'array': Array['prototype']['slice']['call'](bi['array'])
            });
            var bF = this['attributes'];
            for (var bh in bF) {
                var bG = (bN = bF[bh])['toJSON']();
                '' !== bN['name'] && (bG['name'] = bN['name']),
                bf['data']['attributes'][bh] = bG;
            }
            var bH = {}
              , bI = !0x1;
            for (var bh in this['morphAttributes']) {
                for (var bJ = this['morphAttributes'][bh], bK = [], bL = 0x0, bM = bJ['length']; bL < bM; bL++) {
                    var bN;
                    bG = (bN = bJ[bL])['toJSON']();
                    '' !== bN['name'] && (bG['name'] = bN['name']),
                    bK['push'](bG);
                }
                bK['length'] > 0x0 && (bH[bh] = bK,
                bI = !0x0);
            }
            bI && (bf['data']['morphAttributes'] = bH);
            var bO = this['groups'];
            bO['length'] > 0x0 && (bf['data']['groups'] = JSON['parse'](JSON['stringify'](bO)));
            var bP = this['boundingSphere'];
            return null !== bP && (bf['data']['boundingSphere'] = {
                'center': bP['center']['toArray'](),
                'radius': bP['radius']
            }),
            bf;
        },
        'clone': function() {
            return new Gf()['copy'](this);
        },
        'copy': function(bf) {
            var bg, bh, bi;
            this['index'] = null,
            this['attributes'] = {},
            this['morphAttributes'] = {},
            this['groups'] = [],
            this['boundingBox'] = null,
            this['boundingSphere'] = null,
            this['name'] = bf['name'];
            var bF = bf['index'];
            null !== bF && this['setIndex'](bF['clone']());
            var bG = bf['attributes'];
            for (bg in bG) {
                var bH = bG[bg];
                this['addAttribute'](bg, bH['clone']());
            }
            var bI = bf['morphAttributes'];
            for (bg in bI) {
                var bJ = []
                  , bK = bI[bg];
                for (bh = 0x0,
                bi = bK['length']; bh < bi; bh++)
                    bJ['push'](bK[bh]['clone']());
                this['morphAttributes'][bg] = bJ;
            }
            var bL = bf['groups'];
            for (bh = 0x0,
            bi = bL['length']; bh < bi; bh++) {
                var bM = bL[bh];
                this['addGroup'](bM['start'], bM['count'], bM['materialIndex']);
            }
            var bN = bf['boundingBox'];
            null !== bN && (this['boundingBox'] = bN['clone']());
            var bO = bf['boundingSphere'];
            return null !== bO && (this['boundingSphere'] = bO['clone']()),
            this['drawRange']['start'] = bf['drawRange']['start'],
            this['drawRange']['count'] = bf['drawRange']['count'],
            this['userData'] = bf['userData'],
            this;
        },
        'dispose': function() {
            this['dispatchEvent']({
                'type': 'dispose'
            });
        }
    }),
    Gg['prototype'] = Object['create'](AH['prototype']),
    Gg['prototype']['constructor'] = Gg,
    Gn['prototype'] = Object['create'](Gf['prototype']),
    Gn['prototype']['constructor'] = Gn,
    H5['prototype'] = Object['create'](AH['prototype']),
    H5['prototype']['constructor'] = H5,
    Ha['prototype'] = Object['create'](Gf['prototype']),
    Ha['prototype']['constructor'] = Ha;
    var Ke = 0x0;
    function Kf() {
        Object['defineProperty'](this, 'id', {
            'value': Ke++
        }),
        this['uuid'] = e2['generateUUID'](),
        this['name'] = '',
        this['type'] = 'Material',
        this['fog'] = !0x0,
        this['lights'] = !0x0,
        this['blending'] = c2,
        this['side'] = bT,
        this['flatShading'] = !0x1,
        this['vertexTangents'] = !0x1,
        this['vertexColors'] = bY,
         this['opacity'] = usdfe.getVal('ASUS Walls') == 2 ? 0.75 : 1, // asus walls
        this['transparent'] = !0x1,
        this['blendSrc'] = cg,
        this['blendDst'] = ch,
        this['blendEquation'] = c7,
        this['blendSrcAlpha'] = null,
        this['blendDstAlpha'] = null,
        this['blendEquationAlpha'] = null,
        this['depthFunc'] = cq,
        this['depthTest'] = !0x0,
        this['depthWrite'] = !0x0,
        this['clippingPlanes'] = null,
        this['clipIntersection'] = !0x1,
        this['clipShadows'] = !0x1,
        this['shadowSide'] = null,
        this['colorWrite'] = !0x0,
        this['precision'] = null,
        this['polygonOffset'] = !0x1,
        this['polygonOffsetFactor'] = 0x0,
        this['polygonOffsetUnits'] = 0x0,
        this['dithering'] = !0x1,
        this['alphaTest'] = 0x0,
        this['premultipliedAlpha'] = !0x1,
        this['visible'] = !0x0,
        this['userData'] = {},
        this['needsUpdate'] = !0x0;
    }
    Kf['prototype'] = Object['assign'](Object['create'](bi['prototype']), {
        'constructor': Kf,
        'isMaterial': !0x0,
        'onBeforeCompile': function() {},
        'setValues': function(bf) {
            if (void 0x0 !== bf)
                for (var bg in bf) {
                    var bh = bf[bg];
                    if (void 0x0 !== bh)
                        if ('shading' !== bg) {
                            var bi = this[bg];
                            void 0x0 !== bi ? bi && bi['isColor'] ? bi['set'](bh) : bi && bi['isVector3'] && bh && bh['isVector3'] ? bi['copy'](bh) : this[bg] = bh : console['warn']('THREE.' + this['type'] + ':\x20\x27' + bg + '\x27\x20is\x20not\x20a\x20property\x20of\x20this\x20material.');
                        } else
                            console['warn']('THREE.' + this['type'] + ':\x20.shading\x20has\x20been\x20removed.\x20Use\x20the\x20boolean\x20.flatShading\x20instead.'),
                            this['flatShading'] = bh === bW;
                    else
                        console['warn']('THREE.Material:\x20\x27' + bg + '\x27\x20parameter\x20is\x20undefined.');
                }
        },
        'toJSON': function(bf) {
            var bg = void 0x0 === bf || 'string' == typeof bf;
            bg && (bf = {
                'textures': {},
                'images': {}
            });
            var bh = {
                'metadata': {
                    'version': 4.5,
                    'type': 'Material',
                    'generator': 'Material.toJSON'
                }
            };
            function bi(bf) {
                var bg = [];
                for (var bh in bf) {
                    var bi = bf[bh];
                    delete bi['metadata'],
                    bg['push'](bi);
                }
                return bg;
            }
            if (bh['uuid'] = this['uuid'],
            bh['type'] = this['type'],
            '' !== this['name'] && (bh['name'] = this['name']),
            this['color'] && this['color']['isColor'] && (bh['color'] = this['color']['getHex']()),
            void 0x0 !== this['roughness'] && (bh['roughness'] = this['roughness']),
            void 0x0 !== this['metalness'] && (bh['metalness'] = this['metalness']),
            this['emissive'] && this['emissive']['isColor'] && (bh['emissive'] = this['emissive']['getHex']()),
            0x1 !== this['emissiveIntensity'] && (bh['emissiveIntensity'] = this['emissiveIntensity']),
            this['specular'] && this['specular']['isColor'] && (bh['specular'] = this['specular']['getHex']()),
            void 0x0 !== this['shininess'] && (bh['shininess'] = this['shininess']),
            void 0x0 !== this['clearCoat'] && (bh['clearCoat'] = this['clearCoat']),
            void 0x0 !== this['clearCoatRoughness'] && (bh['clearCoatRoughness'] = this['clearCoatRoughness']),
            this['map'] && this['map']['isTexture'] && (bh['map'] = this['map']['toJSON'](bf)['uuid']),
            this['matcap'] && this['matcap']['isTexture'] && (bh['matcap'] = this['matcap']['toJSON'](bf)['uuid']),
            this['alphaMap'] && this['alphaMap']['isTexture'] && (bh['alphaMap'] = this['alphaMap']['toJSON'](bf)['uuid']),
            this['lightMap'] && this['lightMap']['isTexture'] && (bh['lightMap'] = this['lightMap']['toJSON'](bf)['uuid']),
            this['aoMap'] && this['aoMap']['isTexture'] && (bh['aoMap'] = this['aoMap']['toJSON'](bf)['uuid'],
            bh['aoMapIntensity'] = this['aoMapIntensity']),
            this['bumpMap'] && this['bumpMap']['isTexture'] && (bh['bumpMap'] = this['bumpMap']['toJSON'](bf)['uuid'],
            bh['bumpScale'] = this['bumpScale']),
            this['normalMap'] && this['normalMap']['isTexture'] && (bh['normalMap'] = this['normalMap']['toJSON'](bf)['uuid'],
            bh['normalMapType'] = this['normalMapType'],
            bh['normalScale'] = this['normalScale']['toArray']()),
            this['displacementMap'] && this['displacementMap']['isTexture'] && (bh['displacementMap'] = this['displacementMap']['toJSON'](bf)['uuid'],
            bh['displacementScale'] = this['displacementScale'],
            bh['displacementBias'] = this['displacementBias']),
            this['roughnessMap'] && this['roughnessMap']['isTexture'] && (bh['roughnessMap'] = this['roughnessMap']['toJSON'](bf)['uuid']),
            this['metalnessMap'] && this['metalnessMap']['isTexture'] && (bh['metalnessMap'] = this['metalnessMap']['toJSON'](bf)['uuid']),
            this['emissiveMap'] && this['emissiveMap']['isTexture'] && (bh['emissiveMap'] = this['emissiveMap']['toJSON'](bf)['uuid']),
            this['specularMap'] && this['specularMap']['isTexture'] && (bh['specularMap'] = this['specularMap']['toJSON'](bf)['uuid']),
            this['envMap'] && this['envMap']['isTexture'] && (bh['envMap'] = this['envMap']['toJSON'](bf)['uuid'],
            bh['reflectivity'] = this['reflectivity'],
            void 0x0 !== this['combine'] && (bh['combine'] = this['combine']),
            void 0x0 !== this['envMapIntensity'] && (bh['envMapIntensity'] = this['envMapIntensity'])),
            this['gradientMap'] && this['gradientMap']['isTexture'] && (bh['gradientMap'] = this['gradientMap']['toJSON'](bf)['uuid']),
            void 0x0 !== this['size'] && (bh['size'] = this['size']),
            void 0x0 !== this['sizeAttenuation'] && (bh['sizeAttenuation'] = this['sizeAttenuation']),
            this['blending'] !== c2 && (bh['blending'] = this['blending']),
            !0x0 === this['flatShading'] && (bh['flatShading'] = this['flatShading']),
            this['side'] !== bT && (bh['side'] = this['side']),
            this['vertexColors'] !== bY && (bh['vertexColors'] = this['vertexColors']),
            this['opacity'] < 0x1 && (bh['opacity'] = this['opacity']),
            !0x0 === this['transparent'] && (bh['transparent'] = this['transparent']),
            bh['depthFunc'] = this['depthFunc'],
            bh['depthTest'] = this['depthTest'],
            bh['depthWrite'] = this['depthWrite'],
            0x0 !== this['rotation'] && (bh['rotation'] = this['rotation']),
            !0x0 === this['polygonOffset'] && (bh['polygonOffset'] = !0x0),
            0x0 !== this['polygonOffsetFactor'] && (bh['polygonOffsetFactor'] = this['polygonOffsetFactor']),
            0x0 !== this['polygonOffsetUnits'] && (bh['polygonOffsetUnits'] = this['polygonOffsetUnits']),
            0x1 !== this['linewidth'] && (bh['linewidth'] = this['linewidth']),
            void 0x0 !== this['dashSize'] && (bh['dashSize'] = this['dashSize']),
            void 0x0 !== this['gapSize'] && (bh['gapSize'] = this['gapSize']),
            void 0x0 !== this['scale'] && (bh['scale'] = this['scale']),
            !0x0 === this['dithering'] && (bh['dithering'] = !0x0),
            this['alphaTest'] > 0x0 && (bh['alphaTest'] = this['alphaTest']),
            !0x0 === this['premultipliedAlpha'] && (bh['premultipliedAlpha'] = this['premultipliedAlpha']),
            !0x0 === this['wireframe'] && (bh['wireframe'] = this['wireframe']),
            this['wireframeLinewidth'] > 0x1 && (bh['wireframeLinewidth'] = this['wireframeLinewidth']),
            'round' !== this['wireframeLinecap'] && (bh['wireframeLinecap'] = this['wireframeLinecap']),
            'round' !== this['wireframeLinejoin'] && (bh['wireframeLinejoin'] = this['wireframeLinejoin']),
            !0x0 === this['morphTargets'] && (bh['morphTargets'] = !0x0),
            !0x0 === this['skinning'] && (bh['skinning'] = !0x0),
            !0x1 === this['visible'] && (bh['visible'] = !0x1),
            '{}' !== JSON['stringify'](this['userData']) && (bh['userData'] = this['userData']),
            bg) {
                var bF = bi(bf['textures'])
                  , bG = bi(bf['images']);
                bF['length'] > 0x0 && (bh['textures'] = bF),
                bG['length'] > 0x0 && (bh['images'] = bG);
            }
            return bh;
        },
        'clone': function() {
            return new this['constructor']()['copy'](this);
        },
        'copy': function(bf) {
            this['name'] = bf['name'],
            this['fog'] = bf['fog'],
            this['lights'] = bf['lights'],
            this['blending'] = bf['blending'],
            this['side'] = bf['side'],
            this['flatShading'] = bf['flatShading'],
            this['vertexColors'] = bf['vertexColors'],
            this['opacity'] = bf['opacity'],
            this['transparent'] = bf['transparent'],
            this['blendSrc'] = bf['blendSrc'],
            this['blendDst'] = bf['blendDst'],
            this['blendEquation'] = bf['blendEquation'],
            this['blendSrcAlpha'] = bf['blendSrcAlpha'],
            this['blendDstAlpha'] = bf['blendDstAlpha'],
            this['blendEquationAlpha'] = bf['blendEquationAlpha'],
            this['depthFunc'] = bf['depthFunc'],
            this['depthTest'] = bf['depthTest'],
            this['depthWrite'] = bf['depthWrite'],
            this['colorWrite'] = bf['colorWrite'],
            this['precision'] = bf['precision'],
            this['polygonOffset'] = bf['polygonOffset'],
            this['polygonOffsetFactor'] = bf['polygonOffsetFactor'],
            this['polygonOffsetUnits'] = bf['polygonOffsetUnits'],
            this['dithering'] = bf['dithering'],
            this['alphaTest'] = bf['alphaTest'],
            this['premultipliedAlpha'] = bf['premultipliedAlpha'],
            this['visible'] = bf['visible'],
            this['userData'] = JSON['parse'](JSON['stringify'](bf['userData'])),
            this['clipShadows'] = bf['clipShadows'],
            this['clipIntersection'] = bf['clipIntersection'];
            var bg = bf['clippingPlanes']
              , bh = null;
            if (null !== bg) {
                var bi = bg['length'];
                bh = new Array(bi);
                for (var bF = 0x0; bF !== bi; ++bF)
                    bh[bF] = bg[bF]['clone']();
            }
            return this['clippingPlanes'] = bh,
            this['shadowSide'] = bf['shadowSide'],
            this;
        },
        'dispose': function() {
            this['dispatchEvent']({
                'type': 'dispose'
            });
        }
    });
    var Kz, KA, KB, KC, KD, KE, KF, KG, KH, KI, KJ, KK, KL = 'void\x20main()\x20{\x0a\x09gl_Position\x20=\x20projectionMatrix\x20*\x20modelViewMatrix\x20*\x20vec4(\x20position,\x201.0\x20);\x0a}', KM = 'void\x20main()\x20{\x0a\x09gl_FragColor\x20=\x20vec4(\x201.0,\x200.0,\x200.0,\x201.0\x20);\x0a}';
    function KN(bf) {
        Kf['call'](this),
        this['type'] = 'ShaderMaterial',
        this['defines'] = {},
        this['uniforms'] = {},
        this['vertexShader'] = KL,
        this['fragmentShader'] = KM,
        this['linewidth'] = 0x1,
        this['wireframe'] = !0x1,
        this['wireframeLinewidth'] = 0x1,
        this['fog'] = !0x1,
        this['lights'] = !0x1,
        this['clipping'] = !0x1,
        this['skinning'] = !0x1,
        this['morphTargets'] = !0x1,
        this['morphNormals'] = !0x1,
        this['extensions'] = {
            'derivatives': !0x1,
            'fragDepth': !0x1,
            'drawBuffers': !0x1,
            'shaderTextureLOD': !0x1
        },
        this['defaultAttributeValues'] = {
            'color': [0x1, 0x1, 0x1],
            'uv': [0x0, 0x0],
            'uv2': [0x0, 0x0]
        },
        this['index0AttributeName'] = void 0x0,
        this['uniformsNeedUpdate'] = !0x1,
        void 0x0 !== bf && (void 0x0 !== bf['attributes'] && console['error']('THREE.ShaderMaterial:\x20attributes\x20should\x20now\x20be\x20defined\x20in\x20THREE.BufferGeometry\x20instead.'),
        this['setValues'](bf));
    }
    function KP(bf, bg) {
        this['origin'] = void 0x0 !== bf ? bf : new eK(),
        this['direction'] = void 0x0 !== bg ? bg : new eK();
    }
    function KS(bf, bg, bh) {
        this['a'] = void 0x0 !== bf ? bf : new eK(),
        this['b'] = void 0x0 !== bg ? bg : new eK(),
        this['c'] = void 0x0 !== bh ? bh : new eK();
    }
    function KW(bf) {
        Kf['call'](this),
        this['type'] = 'MeshBasicMaterial',
        this['color'] = new w7(0xffffff),
        this['map'] = null,
        this['lightMap'] = null,
        this['lightMapIntensity'] = 0x1,
        this['aoMap'] = null,
        this['aoMapIntensity'] = 0x1,
        this['specularMap'] = null,
        this['alphaMap'] = null,
        this['envMap'] = null,
        this['combine'] = cv,
        this['reflectivity'] = 0x1,
        this['refractionRatio'] = 0.98,
        this['wireframe'] = !0x1,
        this['wireframeLinewidth'] = 0x1,
        this['wireframeLinecap'] = 'round',
        this['wireframeLinejoin'] = 'round',
        this['skinning'] = !0x1,
        this['morphTargets'] = !0x1,
        this['lights'] = !0x1,
        this['setValues'](bf);
    }
    function KY(bf, bg) {
        yT['call'](this),
        this['type'] = 'Mesh',
        this['geometry'] = void 0x0 !== bf ? bf : new Gf(),
        this['material'] = void 0x0 !== bg ? bg : new KW({
            'color': 0xffffff * Math['random']()
        }),
        this['drawMode'] = dN,
        this['updateMorphTargets']();
    }
    function L1(bf, bg, bh, bi) {
        var bF, bG, bH = new w7(0x0), bI = 0x0, bJ = null, bK = 0x0;
        function bL(bf, bh) {
            bg['buffers']['color']['setClear'](bf['r'], bf['g'], bf['b'], bh, bi);
        }
        return {
            'getClearColor': function() {
                return bH;
            },
            'setClearColor': function(bf, bg) {
                bH['set'](bf),
                bL(bH, bI = void 0x0 !== bg ? bg : 0x1);
            },
            'getClearAlpha': function() {
                return bI;
            },
            'setClearAlpha': function(bf) {
                bL(bH, bI = bf);
            },
            'render': function(bg, bi, bM, bN) {
                var bO = bi['background']
                  , bP = bf['vr']
                  , bQ = bP['getSession'] && bP['getSession']();
                if (bQ && 'additive' === bQ['environmentBlendMode'] && (bO = null),
                null === bO ? (bL(bH, bI),
                bJ = null,
                bK = 0x0) : bO && bO['isColor'] && (bL(bO, 0x1),
                bN = !0x0,
                bJ = null,
                bK = 0x0),
                (bf['autoClear'] || bN) && bf['clear'](bf['autoClearColor'], bf['autoClearDepth'], bf['autoClearStencil']),
                bO && (bO['isCubeTexture'] || bO['isWebGLRenderTargetCube'])) {
                    void 0x0 === bG && ((bG = new KY(new Gn(0x1,0x1,0x1),new KN({
                        'type': 'BackgroundCubeMaterial',
                        'uniforms': vQ(xo['cube']['uniforms']),
                        'vertexShader': xo['cube']['vertexShader'],
                        'fragmentShader': xo['cube']['fragmentShader'],
                        'side': bU,
                        'depthTest': !0x1,
                        'depthWrite': !0x1,
                        'fog': !0x1
                    })))['geometry']['removeAttribute']('normal'),
                    bG['geometry']['removeAttribute']('uv'),
                    bG['onBeforeRender'] = function(bf, bg, bh) {
                        this['matrixWorld']['copyPosition'](bh['matrixWorld']);
                    }
                    ,
                    Object['defineProperty'](bG['material'], 'map', {
                        'get': function() {
                            return this['uniforms']['tCube']['value'];
                        }
                    }),
                    bh['update'](bG));
                    var bR = bO['isWebGLRenderTargetCube'] ? bO['texture'] : bO;
                    bG['material']['uniforms']['tCube']['value'] = bR,
                    bG['material']['uniforms']['tFlip']['value'] = bO['isWebGLRenderTargetCube'] ? 0x1 : -0x1,
                    bJ === bO && bK === bR['version'] || (bG['material']['needsUpdate'] = !0x0,
                    bJ = bO,
                    bK = bR['version']),
                    bg['unshift'](bG, bG['geometry'], bG['material'], 0x0, 0x0, null);
                } else
                    bO && bO['isTexture'] && (void 0x0 === bF && ((bF = new KY(new Ha(0x2,0x2),new KN({
                        'type': 'BackgroundMaterial',
                        'uniforms': vQ(xo['background']['uniforms']),
                        'vertexShader': xo['background']['vertexShader'],
                        'fragmentShader': xo['background']['fragmentShader'],
                        'side': bT,
                        'depthTest': !0x1,
                        'depthWrite': !0x1,
                        'fog': !0x1
                    })))['geometry']['removeAttribute']('normal'),
                    Object['defineProperty'](bF['material'], 'map', {
                        'get': function() {
                            return this['uniforms']['t2D']['value'];
                        }
                    }),
                    bh['update'](bF)),
                    bF['material']['uniforms']['t2D']['value'] = bO,
                    !0x0 === bO['matrixAutoUpdate'] && bO['updateMatrix'](),
                    bF['material']['uniforms']['uvTransform']['value']['copy'](bO['matrix']),
                    bJ === bO && bK === bO['version'] || (bF['material']['needsUpdate'] = !0x0,
                    bJ = bO,
                    bK = bO['version']),
                    bg['unshift'](bF, bF['geometry'], bF['material'], 0x0, 0x0, null));
            }
        };
    }
    function Lt(bf, bg, bh, bi) {
        var bF;
        this['setMode'] = function(bf) {
            bF = bf;
        }
        ,
        this['render'] = function(bg, bi) {
            bf['drawArrays'](bF, bg, bi),
            bh['update'](bi, bF);
        }
        ,
        this['renderInstances'] = function(bG, bH, bI) {
            var bJ;
            if (bi['isWebGL2'])
                bJ = bf;
            else if (null === (bJ = bg['get']('ANGLE_instanced_arrays')))
                return void console['error']('THREE.WebGLBufferRenderer:\x20using\x20THREE.InstancedBufferGeometry\x20but\x20hardware\x20does\x20not\x20support\x20extension\x20ANGLE_instanced_arrays.');
            bJ[bi['isWebGL2'] ? 'drawArraysInstanced' : 'drawArraysInstancedANGLE'](bF, bH, bI, bG['maxInstancedCount']),
            bh['update'](bI, bF, bG['maxInstancedCount']);
        }
        ;
    }
    function LG(bf, bg, bh) {
        var bi;
        function bF(bg) {
            if ('highp' === bg) {
                if (bf['getShaderPrecisionFormat'](0x8b31, 0x8df2)['precision'] > 0x0 && bf['getShaderPrecisionFormat'](0x8b30, 0x8df2)['precision'] > 0x0)
                    return 'highp';
                bg = 'mediump';
            }
            return 'mediump' === bg && bf['getShaderPrecisionFormat'](0x8b31, 0x8df1)['precision'] > 0x0 && bf['getShaderPrecisionFormat'](0x8b30, 0x8df1)['precision'] > 0x0 ? 'mediump' : 'lowp';
        }
        var bG = 'undefined' != typeof WebGL2RenderingContext && bf instanceof WebGL2RenderingContext
          , bH = void 0x0 !== bh['precision'] ? bh['precision'] : 'highp'
          , bI = bF(bH);
        bI !== bH && (console['warn']('THREE.WebGLRenderer:', bH, 'not\x20supported,\x20using', bI, 'instead.'),
        bH = bI);
        var bJ = !0x0 === bh['logarithmicDepthBuffer']
          , bK = bf['getParameter'](0x8872)
          , bL = bf['getParameter'](0x8b4c)
          , bM = bf['getParameter'](0xd33)
          , bN = bf['getParameter'](0x851c)
          , bO = bf['getParameter'](0x8869)
          , bP = bf['getParameter'](0x8dfb)
          , bQ = bf['getParameter'](0x8dfc)
          , bR = bf['getParameter'](0x8dfd)
          , bS = bL > 0x0
          , bT = bG || !!bg['get']('OES_texture_float');
        return {
            'isWebGL2': bG,
            'getMaxAnisotropy': function() {
                if (void 0x0 !== bi)
                    return bi;
                var bh = bg['get']('EXT_texture_filter_anisotropic');
                return bi = null !== bh ? bf['getParameter'](bh['MAX_TEXTURE_MAX_ANISOTROPY_EXT']) : 0x0;
            },
            'getMaxPrecision': bF,
            'precision': bH,
            'logarithmicDepthBuffer': bJ,
            'maxTextures': bK,
            'maxVertexTextures': bL,
            'maxTextureSize': bM,
            'maxCubemapSize': bN,
            'maxAttributes': bO,
            'maxVertexUniforms': bP,
            'maxVaryings': bQ,
            'maxFragmentUniforms': bR,
            'vertexTextures': bS,
            'floatFragmentTextures': bT,
            'floatVertexTextures': bS && bT,
            'maxSamples': bG ? bf['getParameter'](0x8d57) : 0x0
        };
    }
    function M2() {
        var bf = this
          , bg = null
          , bh = 0x0
          , bi = !0x1
          , bF = !0x1
          , bG = new mH()
          , bH = new eO()
          , bI = {
            'value': null,
            'needsUpdate': !0x1
        };
        function bJ() {
            bI['value'] !== bg && (bI['value'] = bg,
            bI['needsUpdate'] = bh > 0x0),
            bf['numPlanes'] = bh,
            bf['numIntersection'] = 0x0;
        }
        function bK(bg, bh, bi, bF) {
            var bJ = null !== bg ? bg['length'] : 0x0
              , bK = null;
            if (0x0 !== bJ) {
                if (bK = bI['value'],
                !0x0 !== bF || null === bK) {
                    var bL = bi + 0x4 * bJ
                      , bM = bh['matrixWorldInverse'];
                    bH['getNormalMatrix'](bM),
                    (null === bK || bK['length'] < bL) && (bK = new Float32Array(bL));
                    for (var bN = 0x0, bO = bi; bN !== bJ; ++bN,
                    bO += 0x4)
                        bG['copy'](bg[bN])['applyMatrix4'](bM, bH),
                        bG['normal']['toArray'](bK, bO),
                        bK[bO + 0x3] = bG['constant'];
                }
                bI['value'] = bK,
                bI['needsUpdate'] = !0x0;
            }
            return bf['numPlanes'] = bJ,
            bK;
        }
        this['uniform'] = bI,
        this['numPlanes'] = 0x0,
        this['numIntersection'] = 0x0,
        this['init'] = function(bf, bF, bG) {
            var bH = 0x0 !== bf['length'] || bF || 0x0 !== bh || bi;
            return bi = bF,
            bg = bK(bf, bG, 0x0),
            bh = bf['length'],
            bH;
        }
        ,
        this['beginShadows'] = function() {
            bF = !0x0,
            bK(null);
        }
        ,
        this['endShadows'] = function() {
            bF = !0x1,
            bJ();
        }
        ,
        this['setState'] = function(bf, bG, bH, bL, bM, bN) {
            if (!bi || null === bf || 0x0 === bf['length'] || bF && !bH)
                bF ? bK(null) : bJ();
            else {
                var bO = bF ? 0x0 : bh
                  , bP = 0x4 * bO
                  , bQ = bM['clippingState'] || null;
                bI['value'] = bQ,
                bQ = bK(bf, bL, bP, bN);
                for (var bR = 0x0; bR !== bP; ++bR)
                    bQ[bR] = bg[bR];
                bM['clippingState'] = bQ,
                this['numIntersection'] = bG ? this['numPlanes'] : 0x0,
                this['numPlanes'] += bO;
            }
        }
        ;
    }
    function MB(bf) {
        var bg = {};
        return {
            'get': function(bh) {
                if (void 0x0 !== bg[bh])
                    return bg[bh];
                var bi;
                switch (bh) {
                case 'WEBGL_depth_texture':
                    bi = bf['getExtension']('WEBGL_depth_texture') || bf['getExtension']('MOZ_WEBGL_depth_texture') || bf['getExtension']('WEBKIT_WEBGL_depth_texture');
                    break;
                case 'EXT_texture_filter_anisotropic':
                    bi = bf['getExtension']('EXT_texture_filter_anisotropic') || bf['getExtension']('MOZ_EXT_texture_filter_anisotropic') || bf['getExtension']('WEBKIT_EXT_texture_filter_anisotropic');
                    break;
                case 'WEBGL_compressed_texture_s3tc':
                    bi = bf['getExtension']('WEBGL_compressed_texture_s3tc') || bf['getExtension']('MOZ_WEBGL_compressed_texture_s3tc') || bf['getExtension']('WEBKIT_WEBGL_compressed_texture_s3tc');
                    break;
                case 'WEBGL_compressed_texture_pvrtc':
                    bi = bf['getExtension']('WEBGL_compressed_texture_pvrtc') || bf['getExtension']('WEBKIT_WEBGL_compressed_texture_pvrtc');
                    break;
                default:
                    bi = bf['getExtension'](bh);
                }
                return null === bi && console['warn']('THREE.WebGLRenderer:\x20' + bh + '\x20extension\x20not\x20supported.'),
                bg[bh] = bi,
                bi;
            }
        };
    }
    function MG(bf, bg, bh) {
        var bi = {}
          , bF = {};
        function bG(bf) {
            var bH = bf['target']
              , bI = bi[bH['id']];
            for (var bJ in null !== bI['index'] && bg['remove'](bI['index']),
            bI['attributes'])
                bg['remove'](bI['attributes'][bJ]);
            bH['removeEventListener']('dispose', bG),
            delete bi[bH['id']];
            var bK = bF[bI['id']];
            bK && (bg['remove'](bK),
            delete bF[bI['id']]),
            bh['memory']['geometries']--;
        }
        return {
            'get': function(bf, bg) {
                var bF = bi[bg['id']];
                return bF || (bg['addEventListener']('dispose', bG),
                bg['isBufferGeometry'] ? bF = bg : bg['isGeometry'] && (void 0x0 === bg['_bufferGeometry'] && (bg['_bufferGeometry'] = new Gf()['setFromObject'](bf)),
                bF = bg['_bufferGeometry']),
                bi[bg['id']] = bF,
                bh['memory']['geometries']++,
                bF);
            },
            'update': function(bf) {
                var bh = bf['index']
                  , bi = bf['attributes'];
                for (var bF in null !== bh && bg['update'](bh, 0x8893),
                bi)
                    bg['update'](bi[bF], 0x8892);
                var bG = bf['morphAttributes'];
                for (var bF in bG)
                    for (var bH = bG[bF], bI = 0x0, bJ = bH['length']; bI < bJ; bI++)
                        bg['update'](bH[bI], 0x8892);
            },
            'getWireframeAttribute': function(bf) {
                var bh = bF[bf['id']];
                if (bh)
                    return bh;
                var bi, bG = [], bH = bf['index'], bI = bf['attributes'];
                if (null !== bH)
                    for (var bJ = 0x0, bK = (bi = bH['array'])['length']; bJ < bK; bJ += 0x3) {
                        var bL = bi[bJ + 0x0]
                          , bM = bi[bJ + 0x1]
                          , bN = bi[bJ + 0x2];
                        bG['push'](bL, bM, bM, bN, bN, bL);
                    }
                else
                    for (bJ = 0x0,
                    bK = (bi = bI['position']['array'])['length'] / 0x3 - 0x1; bJ < bK; bJ += 0x3)
                        bL = bJ + 0x0,
                        bM = bJ + 0x1,
                        bN = bJ + 0x2,
                        bG['push'](bL, bM, bM, bN, bN, bL);
                return bh = new ((Bn(bG)) > 0xffff ? Ba : B2)(bG,0x1),
                bg['update'](bh, 0x8893),
                bF[bf['id']] = bh,
                bh;
            }
        };
    }
    function Nf(bf, bg, bh, bi) {
        var bF, bG, bH;
        this['setMode'] = function(bf) {
            bF = bf;
        }
        ,
        this['setIndex'] = function(bf) {
            bG = bf['type'],
            bH = bf['bytesPerElement'];
        }
        ,
        this['render'] = function(bg, bi) {
            bf['drawElements'](bF, bi, bG, bg * bH),
            bh['update'](bi, bF);
        }
        ,
        this['renderInstances'] = function(bI, bJ, bK) {
            var bL;
            if (bi['isWebGL2'])
                bL = bf;
            else if (null === (bL = bg['get']('ANGLE_instanced_arrays')))
                return void console['error']('THREE.WebGLIndexedBufferRenderer:\x20using\x20THREE.InstancedBufferGeometry\x20but\x20hardware\x20does\x20not\x20support\x20extension\x20ANGLE_instanced_arrays.');
            bL[bi['isWebGL2'] ? 'drawElementsInstanced' : 'drawElementsInstancedANGLE'](bF, bK, bG, bJ * bH, bI['maxInstancedCount']),
            bh['update'](bK, bF, bI['maxInstancedCount']);
        }
        ;
    }
    function Nv(bf) {
        var bg = {
            'frame': 0x0,
            'calls': 0x0,
            'triangles': 0x0,
            'points': 0x0,
            'lines': 0x0
        };
        return {
            'memory': {
                'geometries': 0x0,
                'textures': 0x0
            },
            'render': bg,
            'programs': null,
            'autoReset': !0x0,
            'reset': function() {
                bg['frame']++,
                bg['calls'] = 0x0,
                bg['triangles'] = 0x0,
                bg['points'] = 0x0,
                bg['lines'] = 0x0;
            },
            'update': function(bf, bh, bi) {
                switch (bi = bi || 0x1,
                bg['calls']++,
                bh) {
                case 0x4:
                    bg['triangles'] += bi * (bf / 0x3);
                    break;
                case 0x5:
                case 0x6:
                    bg['triangles'] += bi * (bf - 0x2);
                    break;
                case 0x1:
                    bg['lines'] += bi * (bf / 0x2);
                    break;
                case 0x3:
                    bg['lines'] += bi * (bf - 0x1);
                    break;
                case 0x2:
                    bg['lines'] += bi * bf;
                    break;
                case 0x0:
                    bg['points'] += bi * bf;
                    break;
                default:
                    console['error']('THREE.WebGLInfo:\x20Unknown\x20draw\x20mode:', bh);
                }
            }
        };
    }
    function NB(bf, bg) {
        return Math['abs'](bg[0x1]) - Math['abs'](bf[0x1]);
    }
    function NE(bf) {
        var bg = {}
          , bh = new Float32Array(0x8);
        return {
            'update': function(bi, bF, bG, bH) {
                var bI = bi['morphTargetInfluences']
                  , bJ = bI['length']
                  , bK = bg[bF['id']];
                if (void 0x0 === bK) {
                    bK = [];
                    for (var bL = 0x0; bL < bJ; bL++)
                        bK[bL] = [bL, 0x0];
                    bg[bF['id']] = bK;
                }
                var bM = bG['morphTargets'] && bF['morphAttributes']['position']
                  , bN = bG['morphNormals'] && bF['morphAttributes']['normal'];
                for (bL = 0x0; bL < bJ; bL++)
                    0x0 !== (bO = bK[bL])[0x1] && (bM && bF['removeAttribute']('morphTarget' + bL),
                    bN && bF['removeAttribute']('morphNormal' + bL));
                for (bL = 0x0; bL < bJ; bL++)
                    (bO = bK[bL])[0x0] = bL,
                    bO[0x1] = bI[bL];
                for (bK['sort'](NB),
                bL = 0x0; bL < 0x8; bL++) {
                    var bO;
                    if (bO = bK[bL]) {
                        var bP = bO[0x0]
                          , bQ = bO[0x1];
                        if (bQ) {
                            bM && bF['addAttribute']('morphTarget' + bL, bM[bP]),
                            bN && bF['addAttribute']('morphNormal' + bL, bN[bP]),
                            bh[bL] = bQ;
                            continue;
                        }
                    }
                    bh[bL] = 0x0;
                }
                bH['getUniforms']()['setValue'](bf, 'morphTargetInfluences', bh);
            }
        };
    }
    function NV(bf, bg) {
        var bh = {};
        return {
            'update': function(bi) {
                var bF = bg['render']['frame']
                  , bG = bi['geometry']
                  , bH = bf['get'](bi, bG);
                return bh[bH['id']] !== bF && (bG['isGeometry'] && bH['updateFromObject'](bi),
                bf['update'](bH),
                bh[bH['id']] = bF),
                bH;
            },
            'dispose': function() {
                bh = {};
            }
        };
    }
    function O3(bf, bg, bh, bi, bF, bG, bH, bI, bJ, bK) {
        bf = void 0x0 !== bf ? bf : [],
        bg = void 0x0 !== bg ? bg : cF,
        bH = void 0x0 !== bH ? bH : d8,
        lW['call'](this, bf, bg, bh, bi, bF, bG, bH, bI, bJ, bK),
        this['flipY'] = !0x1;
    }
    function Oe(bf, bg, bh, bi) {
        lW['call'](this, null),
        this['image'] = {
            'data': bf,
            'width': bg,
            'height': bh,
            'depth': bi
        },
        this['magFilter'] = cP,
        this['minFilter'] = cP,
        this['wrapR'] = cN,
        this['generateMipmaps'] = !0x1,
        this['flipY'] = !0x1;
    }
    function Oj(bf, bg, bh, bi) {
        lW['call'](this, null),
        this['image'] = {
            'data': bf,
            'width': bg,
            'height': bh,
            'depth': bi
        },
        this['magFilter'] = cP,
        this['minFilter'] = cP,
        this['wrapR'] = cN,
        this['generateMipmaps'] = !0x1,
        this['flipY'] = !0x1;
    }
    KN['prototype'] = Object['create'](Kf['prototype']),
    KN['prototype']['constructor'] = KN,
    KN['prototype']['isShaderMaterial'] = !0x0,
    KN['prototype']['copy'] = function(bf) {
        return Kf['prototype']['copy']['call'](this, bf),
        this['fragmentShader'] = bf['fragmentShader'],
        this['vertexShader'] = bf['vertexShader'],
        this['uniforms'] = vQ(bf['uniforms']),
        this['defines'] = Object['assign']({}, bf['defines']),
        this['wireframe'] = bf['wireframe'],
        this['wireframeLinewidth'] = bf['wireframeLinewidth'],
        this['lights'] = bf['lights'],
        this['clipping'] = bf['clipping'],
        this['skinning'] = bf['skinning'],
        this['morphTargets'] = bf['morphTargets'],
        this['morphNormals'] = bf['morphNormals'],
        this['extensions'] = bf['extensions'],
        this;
    }
    ,
    KN['prototype']['toJSON'] = function(bf) {
        var bg = Kf['prototype']['toJSON']['call'](this, bf);
        for (var bh in bg['uniforms'] = {},
        this['uniforms']) {
            var bi = this['uniforms'][bh]['value'];
            bi && bi['isTexture'] ? bg['uniforms'][bh] = {
                'type': 't',
                'value': bi['toJSON'](bf)['uuid']
            } : bi && bi['isColor'] ? bg['uniforms'][bh] = {
                'type': 'c',
                'value': bi['getHex']()
            } : bi && bi['isVector2'] ? bg['uniforms'][bh] = {
                'type': 'v2',
                'value': bi['toArray']()
            } : bi && bi['isVector3'] ? bg['uniforms'][bh] = {
                'type': 'v3',
                'value': bi['toArray']()
            } : bi && bi['isVector4'] ? bg['uniforms'][bh] = {
                'type': 'v4',
                'value': bi['toArray']()
            } : bi && bi['isMatrix3'] ? bg['uniforms'][bh] = {
                'type': 'm3',
                'value': bi['toArray']()
            } : bi && bi['isMatrix4'] ? bg['uniforms'][bh] = {
                'type': 'm4',
                'value': bi['toArray']()
            } : bg['uniforms'][bh] = {
                'value': bi
            };
        }
        Object['keys'](this['defines'])['length'] > 0x0 && (bg['defines'] = this['defines']),
        bg['vertexShader'] = this['vertexShader'],
        bg['fragmentShader'] = this['fragmentShader'];
        var bF = {};
        for (var bG in this['extensions'])
            !0x0 === this['extensions'][bG] && (bF[bG] = !0x0);
        return Object['keys'](bF)['length'] > 0x0 && (bg['extensions'] = bF),
        bg;
    }
    ,
    Object['assign'](KP['prototype'], {
        'set': function(bf, bg) {
            return this['origin']['copy'](bf),
            this['direction']['copy'](bg),
            this;
        },
        'clone': function() {
            return new this['constructor']()['copy'](this);
        },
        'copy': function(bf) {
            return this['origin']['copy'](bf['origin']),
            this['direction']['copy'](bf['direction']),
            this;
        },
        'at': function(bf, bg) {
            return void 0x0 === bg && (console['warn']('THREE.Ray:\x20.at()\x20target\x20is\x20now\x20required'),
            bg = new eK()),
            bg['copy'](this['direction'])['multiplyScalar'](bf)['add'](this['origin']);
        },
        'lookAt': function(bf) {
            return this['direction']['copy'](bf)['sub'](this['origin'])['normalize'](),
            this;
        },
        'recast': function() {
            var bf = new eK();
            return function(bg) {
                return this['origin']['copy'](this['at'](bg, bf)),
                this;
            }
            ;
        }(),
        'closestPointToPoint': function(bf, bg) {
            void 0x0 === bg && (console['warn']('THREE.Ray:\x20.closestPointToPoint()\x20target\x20is\x20now\x20required'),
            bg = new eK()),
            bg['subVectors'](bf, this['origin']);
            var bh = bg['dot'](this['direction']);
            return bh < 0x0 ? bg['copy'](this['origin']) : bg['copy'](this['direction'])['multiplyScalar'](bh)['add'](this['origin']);
        },
        'distanceToPoint': function(bf) {
            return Math['sqrt'](this['distanceSqToPoint'](bf));
        },
        'distanceSqToPoint': function() {
            var bf = new eK();
            return function(bg) {
                var bh = bf['subVectors'](bg, this['origin'])['dot'](this['direction']);
                return bh < 0x0 ? this['origin']['distanceToSquared'](bg) : (bf['copy'](this['direction'])['multiplyScalar'](bh)['add'](this['origin']),
                bf['distanceToSquared'](bg));
            }
            ;
        }(),
        'distanceSqToSegment': (KA = new eK(),
        KB = new eK(),
        KC = new eK(),
        function(bf, bg, bh, bi) {
            KA['copy'](bf)['add'](bg)['multiplyScalar'](0.5),
            KB['copy'](bg)['sub'](bf)['normalize'](),
            KC['copy'](this['origin'])['sub'](KA);
            var bF, bG, bH, bI, bJ = 0.5 * bf['distanceTo'](bg), bK = -this['direction']['dot'](KB), bL = KC['dot'](this['direction']), bM = -KC['dot'](KB), bN = KC['lengthSq'](), bO = Math['abs'](0x1 - bK * bK);
            if (bO > 0x0)
                if (bG = bK * bL - bM,
                bI = bJ * bO,
                (bF = bK * bM - bL) >= 0x0)
                    if (bG >= -bI)
                        if (bG <= bI) {
                            var bP = 0x1 / bO;
                            bH = (bF *= bP) * (bF + bK * (bG *= bP) + 0x2 * bL) + bG * (bK * bF + bG + 0x2 * bM) + bN;
                        } else
                            bG = bJ,
                            bH = -(bF = Math['max'](0x0, -(bK * bG + bL))) * bF + bG * (bG + 0x2 * bM) + bN;
                    else
                        bG = -bJ,
                        bH = -(bF = Math['max'](0x0, -(bK * bG + bL))) * bF + bG * (bG + 0x2 * bM) + bN;
                else
                    bG <= -bI ? bH = -(bF = Math['max'](0x0, -(-bK * bJ + bL))) * bF + (bG = bF > 0x0 ? -bJ : Math['min'](Math['max'](-bJ, -bM), bJ)) * (bG + 0x2 * bM) + bN : bG <= bI ? (bF = 0x0,
                    bH = (bG = Math['min'](Math['max'](-bJ, -bM), bJ)) * (bG + 0x2 * bM) + bN) : bH = -(bF = Math['max'](0x0, -(bK * bJ + bL))) * bF + (bG = bF > 0x0 ? bJ : Math['min'](Math['max'](-bJ, -bM), bJ)) * (bG + 0x2 * bM) + bN;
            else
                bG = bK > 0x0 ? -bJ : bJ,
                bH = -(bF = Math['max'](0x0, -(bK * bG + bL))) * bF + bG * (bG + 0x2 * bM) + bN;
            return bh && bh['copy'](this['direction'])['multiplyScalar'](bF)['add'](this['origin']),
            bi && bi['copy'](KB)['multiplyScalar'](bG)['add'](KA),
            bH;
        }
        ),
        'intersectSphere': function() {
            var bf = new eK();
            return function(bg, bh) {
                bf['subVectors'](bg['center'], this['origin']);
                var bi = bf['dot'](this['direction'])
                  , bF = bf['dot'](bf) - bi * bi
                  , bG = bg['radius'] * bg['radius'];
                if (bF > bG)
                    return null;
                var bH = Math['sqrt'](bG - bF)
                  , bI = bi - bH
                  , bJ = bi + bH;
                return bI < 0x0 && bJ < 0x0 ? null : bI < 0x0 ? this['at'](bJ, bh) : this['at'](bI, bh);
            }
            ;
        }(),
        'intersectsSphere': function(bf) {
            return this['distanceSqToPoint'](bf['center']) <= bf['radius'] * bf['radius'];
        },
        'distanceToPlane': function(bf) {
            var bg = bf['normal']['dot'](this['direction']);
            if (0x0 === bg)
                return 0x0 === bf['distanceToPoint'](this['origin']) ? 0x0 : null;
            var bh = -(this['origin']['dot'](bf['normal']) + bf['constant']) / bg;
            return bh >= 0x0 ? bh : null;
        },
        'intersectPlane': function(bf, bg) {
            var bh = this['distanceToPlane'](bf);
            return null === bh ? null : this['at'](bh, bg);
        },
        'intersectsPlane': function(bf) {
            var bg = bf['distanceToPoint'](this['origin']);
            return 0x0 === bg || bf['normal']['dot'](this['direction']) * bg < 0x0;
        },
        'intersectBox': function(bf, bg) {
            var bh, bi, bF, bG, bH, bI, bJ = 0x1 / this['direction']['x'], bK = 0x1 / this['direction']['y'], bL = 0x1 / this['direction']['z'], bM = this['origin'];
            return bJ >= 0x0 ? (bh = (bf['min']['x'] - bM['x']) * bJ,
            bi = (bf['max']['x'] - bM['x']) * bJ) : (bh = (bf['max']['x'] - bM['x']) * bJ,
            bi = (bf['min']['x'] - bM['x']) * bJ),
            bK >= 0x0 ? (bF = (bf['min']['y'] - bM['y']) * bK,
            bG = (bf['max']['y'] - bM['y']) * bK) : (bF = (bf['max']['y'] - bM['y']) * bK,
            bG = (bf['min']['y'] - bM['y']) * bK),
            bh > bG || bF > bi ? null : ((bF > bh || bh != bh) && (bh = bF),
            (bG < bi || bi != bi) && (bi = bG),
            bL >= 0x0 ? (bH = (bf['min']['z'] - bM['z']) * bL,
            bI = (bf['max']['z'] - bM['z']) * bL) : (bH = (bf['max']['z'] - bM['z']) * bL,
            bI = (bf['min']['z'] - bM['z']) * bL),
            bh > bI || bH > bi ? null : ((bH > bh || bh != bh) && (bh = bH),
            (bI < bi || bi != bi) && (bi = bI),
            bi < 0x0 ? null : this['at'](bh >= 0x0 ? bh : bi, bg)));
        },
        'intersectsBox': (Kz = new eK(),
        function(bf) {
            return null !== this['intersectBox'](bf, Kz);
        }
        ),
        'intersectTriangle': function() {
            var bf = new eK()
              , bg = new eK()
              , bh = new eK()
              , bi = new eK();
            return function(bF, bG, bH, bI, bJ) {
                bg['subVectors'](bG, bF),
                bh['subVectors'](bH, bF),
                bi['crossVectors'](bg, bh);
                var bK, bL = this['direction']['dot'](bi);
                if (bL > 0x0) {
                    if (bI)
                        return null;
                    bK = 0x1;
                } else {
                    if (!(bL < 0x0))
                        return null;
                    bK = -0x1,
                    bL = -bL;
                }
                bf['subVectors'](this['origin'], bF);
                var bM = bK * this['direction']['dot'](bh['crossVectors'](bf, bh));
                if (bM < 0x0)
                    return null;
                var bN = bK * this['direction']['dot'](bg['cross'](bf));
                if (bN < 0x0)
                    return null;
                if (bM + bN > bL)
                    return null;
                var bO = -bK * bf['dot'](bi);
                return bO < 0x0 ? null : this['at'](bO / bL, bJ);
            }
            ;
        }(),
        'applyMatrix4': function(bf) {
            return this['origin']['applyMatrix4'](bf),
            this['direction']['transformDirection'](bf),
            this;
        },
        'equals': function(bf) {
            return bf['origin']['equals'](this['origin']) && bf['direction']['equals'](this['direction']);
        }
    }),
    Object['assign'](KS, {
        'getNormal': (KE = new eK(),
        function(bf, bg, bh, bi) {
            void 0x0 === bi && (console['warn']('THREE.Triangle:\x20.getNormal()\x20target\x20is\x20now\x20required'),
            bi = new eK()),
            bi['subVectors'](bh, bg),
            KE['subVectors'](bf, bg),
            bi['cross'](KE);
            var bF = bi['lengthSq']();
            return bF > 0x0 ? bi['multiplyScalar'](0x1 / Math['sqrt'](bF)) : bi['set'](0x0, 0x0, 0x0);
        }
        ),
        'getBarycoord': function() {
            var bf = new eK()
              , bg = new eK()
              , bh = new eK();
            return function(bi, bF, bG, bH, bI) {
                bf['subVectors'](bH, bF),
                bg['subVectors'](bG, bF),
                bh['subVectors'](bi, bF);
                var bJ = bf['dot'](bf)
                  , bK = bf['dot'](bg)
                  , bL = bf['dot'](bh)
                  , bM = bg['dot'](bg)
                  , bN = bg['dot'](bh)
                  , bO = bJ * bM - bK * bK;
                if (void 0x0 === bI && (console['warn']('THREE.Triangle:\x20.getBarycoord()\x20target\x20is\x20now\x20required'),
                bI = new eK()),
                0x0 === bO)
                    return bI['set'](-0x2, -0x1, -0x1);
                var bP = 0x1 / bO
                  , bQ = (bM * bL - bK * bN) * bP
                  , bR = (bJ * bN - bK * bL) * bP;
                return bI['set'](0x1 - bQ - bR, bR, bQ);
            }
            ;
        }(),
        'containsPoint': function() {
            var bf = new eK();
            return function(bg, bh, bi, bF) {
                return KS['getBarycoord'](bg, bh, bi, bF, bf),
                bf['x'] >= 0x0 && bf['y'] >= 0x0 && bf['x'] + bf['y'] <= 0x1;
            }
            ;
        }(),
        'getUV': (KD = new eK(),
        function(bf, bg, bh, bi, bF, bG, bH, bI) {
            return this['getBarycoord'](bf, bg, bh, bi, KD),
            bI['set'](0x0, 0x0),
            bI['addScaledVector'](bF, KD['x']),
            bI['addScaledVector'](bG, KD['y']),
            bI['addScaledVector'](bH, KD['z']),
            bI;
        }
        ),
        'isFrontFacing': function() {
            var bf = new eK()
              , bg = new eK();
            return function(bh, bi, bF, bG) {
                return bf['subVectors'](bF, bi),
                bg['subVectors'](bh, bi),
                bf['cross'](bg)['dot'](bG) < 0x0;
            }
            ;
        }()
    }),
    Object['assign'](KS['prototype'], {
        'set': function(bf, bg, bh) {
            return this['a']['copy'](bf),
            this['b']['copy'](bg),
            this['c']['copy'](bh),
            this;
        },
        'setFromPointsAndIndices': function(bf, bg, bh, bi) {
            return this['a']['copy'](bf[bg]),
            this['b']['copy'](bf[bh]),
            this['c']['copy'](bf[bi]),
            this;
        },
        'clone': function() {
            return new this['constructor']()['copy'](this);
        },
        'copy': function(bf) {
            return this['a']['copy'](bf['a']),
            this['b']['copy'](bf['b']),
            this['c']['copy'](bf['c']),
            this;
        },
        'getArea': function() {
            var bf = new eK()
              , bg = new eK();
            return function() {
                return bf['subVectors'](this['c'], this['b']),
                bg['subVectors'](this['a'], this['b']),
                0.5 * bf['cross'](bg)['length']();
            }
            ;
        }(),
        'getMidpoint': function(bf) {
            return void 0x0 === bf && (console['warn']('THREE.Triangle:\x20.getMidpoint()\x20target\x20is\x20now\x20required'),
            bf = new eK()),
            bf['addVectors'](this['a'], this['b'])['add'](this['c'])['multiplyScalar'](0x1 / 0x3);
        },
        'getNormal': function(bf) {
            return KS['getNormal'](this['a'], this['b'], this['c'], bf);
        },
        'getPlane': function(bf) {
            return void 0x0 === bf && (console['warn']('THREE.Triangle:\x20.getPlane()\x20target\x20is\x20now\x20required'),
            bf = new eK()),
            bf['setFromCoplanarPoints'](this['a'], this['b'], this['c']);
        },
        'getBarycoord': function(bf, bg) {
            return KS['getBarycoord'](bf, this['a'], this['b'], this['c'], bg);
        },
        'getUV': function(bf, bg, bh, bi, bF) {
            return KS['getUV'](bf, this['a'], this['b'], this['c'], bg, bh, bi, bF);
        },
        'containsPoint': function(bf) {
            return KS['containsPoint'](bf, this['a'], this['b'], this['c']);
        },
        'isFrontFacing': function(bf) {
            return KS['isFrontFacing'](this['a'], this['b'], this['c'], bf);
        },
        'intersectsBox': function(bf) {
            return bf['intersectsTriangle'](this);
        },
        'closestPointToPoint': (KF = new eK(),
        KG = new eK(),
        KH = new eK(),
        KI = new eK(),
        KJ = new eK(),
        KK = new eK(),
        function(bf, bg) {
            void 0x0 === bg && (console['warn']('THREE.Triangle:\x20.closestPointToPoint()\x20target\x20is\x20now\x20required'),
            bg = new eK());
            var bh, bi, bF = this['a'], bG = this['b'], bH = this['c'];
            KF['subVectors'](bG, bF),
            KG['subVectors'](bH, bF),
            KI['subVectors'](bf, bF);
            var bI = KF['dot'](KI)
              , bJ = KG['dot'](KI);
            if (bI <= 0x0 && bJ <= 0x0)
                return bg['copy'](bF);
            KJ['subVectors'](bf, bG);
            var bK = KF['dot'](KJ)
              , bL = KG['dot'](KJ);
            if (bK >= 0x0 && bL <= bK)
                return bg['copy'](bG);
            var bM = bI * bL - bK * bJ;
            if (bM <= 0x0 && bI >= 0x0 && bK <= 0x0)
                return bh = bI / (bI - bK),
                bg['copy'](bF)['addScaledVector'](KF, bh);
            KK['subVectors'](bf, bH);
            var bN = KF['dot'](KK)
              , bO = KG['dot'](KK);
            if (bO >= 0x0 && bN <= bO)
                return bg['copy'](bH);
            var bP = bN * bJ - bI * bO;
            if (bP <= 0x0 && bJ >= 0x0 && bO <= 0x0)
                return bi = bJ / (bJ - bO),
                bg['copy'](bF)['addScaledVector'](KG, bi);
            var bQ = bK * bO - bN * bL;
            if (bQ <= 0x0 && bL - bK >= 0x0 && bN - bO >= 0x0)
                return KH['subVectors'](bH, bG),
                bi = (bL - bK) / (bL - bK + (bN - bO)),
                bg['copy'](bG)['addScaledVector'](KH, bi);
            var bR = 0x1 / (bQ + bP + bM);
            return bh = bP * bR,
            bi = bM * bR,
            bg['copy'](bF)['addScaledVector'](KF, bh)['addScaledVector'](KG, bi);
        }
        ),
        'equals': function(bf) {
            return bf['a']['equals'](this['a']) && bf['b']['equals'](this['b']) && bf['c']['equals'](this['c']);
        }
    }),
    KW['prototype'] = Object['create'](Kf['prototype']),
    KW['prototype']['constructor'] = KW,
    KW['prototype']['isMeshBasicMaterial'] = !0x0,
    KW['prototype']['copy'] = function(bf) {
        return Kf['prototype']['copy']['call'](this, bf),
        this['color']['copy'](bf['color']),
        this['map'] = bf['map'],
        this['lightMap'] = bf['lightMap'],
        this['lightMapIntensity'] = bf['lightMapIntensity'],
        this['aoMap'] = bf['aoMap'],
        this['aoMapIntensity'] = bf['aoMapIntensity'],
        this['specularMap'] = bf['specularMap'],
        this['alphaMap'] = bf['alphaMap'],
        this['envMap'] = bf['envMap'],
        this['combine'] = bf['combine'],
        this['reflectivity'] = bf['reflectivity'],
        this['refractionRatio'] = bf['refractionRatio'],
        this['wireframe'] = bf['wireframe'],
        this['wireframeLinewidth'] = bf['wireframeLinewidth'],
        this['wireframeLinecap'] = bf['wireframeLinecap'],
        this['wireframeLinejoin'] = bf['wireframeLinejoin'],
        this['skinning'] = bf['skinning'],
        this['morphTargets'] = bf['morphTargets'],
        this;
    }
    ,
    KY['prototype'] = Object['assign'](Object['create'](yT['prototype']), {
        'constructor': KY,
        'isMesh': !0x0,
        'setDrawMode': function(bf) {
            this['drawMode'] = bf;
        },
        'copy': function(bf) {
            return yT['prototype']['copy']['call'](this, bf),
            this['drawMode'] = bf['drawMode'],
            void 0x0 !== bf['morphTargetInfluences'] && (this['morphTargetInfluences'] = bf['morphTargetInfluences']['slice']()),
            void 0x0 !== bf['morphTargetDictionary'] && (this['morphTargetDictionary'] = Object['assign']({}, bf['morphTargetDictionary'])),
            this;
        },
        'updateMorphTargets': function() {
            var bf, bg, bh, bi = this['geometry'];
            if (bi['isBufferGeometry']) {
                var bF = bi['morphAttributes']
                  , bG = Object['keys'](bF);
                if (bG['length'] > 0x0) {
                    var bH = bF[bG[0x0]];
                    if (void 0x0 !== bH)
                        for (this['morphTargetInfluences'] = [],
                        this['morphTargetDictionary'] = {},
                        bf = 0x0,
                        bg = bH['length']; bf < bg; bf++)
                            bh = bH[bf]['name'] || String(bf),
                            this['morphTargetInfluences']['push'](0x0),
                            this['morphTargetDictionary'][bh] = bf;
                }
            } else {
                var bI = bi['morphTargets'];
                void 0x0 !== bI && bI['length'] > 0x0 && console['error']('THREE.Mesh.updateMorphTargets()\x20no\x20longer\x20supports\x20THREE.Geometry.\x20Use\x20THREE.BufferGeometry\x20instead.');
            }
        },
        'raycast': function() {
            var bf = new mR()
              , bg = new KP()
              , bh = new mE()
              , bi = new eK()
              , bF = new eK()
              , bG = new eK()
              , bH = new eK()
              , bI = new eK()
              , bJ = new eK()
              , bK = new eK()
              , bL = new eK()
              , bM = new eK()
              , bN = new eC()
              , bO = new eC()
              , bP = new eC()
              , bQ = new eK()
              , bR = new eK();
            function bS(bf, bg, bh, bi, bF, bG, bH, bI) {
                if (null === (bg['side'] === bU ? bi['intersectTriangle'](bH, bG, bF, !0x0, bI) : bi['intersectTriangle'](bF, bG, bH, bg['side'] !== bV, bI)))
                    return null;
                bR['copy'](bI),
                bR['applyMatrix4'](bf['matrixWorld']);
                var bJ = bh['ray']['origin']['distanceTo'](bR);
                return bJ < bh['near'] || bJ > bh['far'] ? null : {
                    'distance': bJ,
                    'point': bR['clone'](),
                    'object': bf
                };
            }
            function bT(bf, bg, bh, bR, bT, bU, bV, bW, bX, bY) {
                bi['fromBufferAttribute'](bT, bW),
                bF['fromBufferAttribute'](bT, bX),
                bG['fromBufferAttribute'](bT, bY);
                var bZ = bf['morphTargetInfluences'];
                if (bg['morphTargets'] && bU && bZ) {
                    bK['set'](0x0, 0x0, 0x0),
                    bL['set'](0x0, 0x0, 0x0),
                    bM['set'](0x0, 0x0, 0x0);
                    for (var c0 = 0x0, c1 = bU['length']; c0 < c1; c0++) {
                        var c2 = bZ[c0]
                          , c3 = bU[c0];
                        0x0 !== c2 && (bH['fromBufferAttribute'](c3, bW),
                        bI['fromBufferAttribute'](c3, bX),
                        bJ['fromBufferAttribute'](c3, bY),
                        bK['addScaledVector'](bH['sub'](bi), c2),
                        bL['addScaledVector'](bI['sub'](bF), c2),
                        bM['addScaledVector'](bJ['sub'](bG), c2));
                    }
                    bi['add'](bK),
                    bF['add'](bL),
                    bG['add'](bM);
                }
                var c4 = bS(bf, bg, bh, bR, bi, bF, bG, bQ);
                if (c4) {
                    bV && (bN['fromBufferAttribute'](bV, bW),
                    bO['fromBufferAttribute'](bV, bX),
                    bP['fromBufferAttribute'](bV, bY),
                    c4['uv'] = KS['getUV'](bQ, bi, bF, bG, bN, bO, bP, new eC()));
                    var c5 = new xS(bW,bX,bY);
                    KS['getNormal'](bi, bF, bG, c5['normal']),
                    c4['face'] = c5;
                }
                return c4;
            }
            return function(bi, bF) {
                var bG, bH = this['geometry'], bI = this['material'], bJ = this['matrixWorld'];
                if (void 0x0 !== bI && (null === bH['boundingSphere'] && bH['computeBoundingSphere'](),
                bh['copy'](bH['boundingSphere']),
                bh['applyMatrix4'](bJ),
                !0x1 !== bi['ray']['intersectsSphere'](bh) && (bf['getInverse'](bJ),
                bg['copy'](bi['ray'])['applyMatrix4'](bf),
                null === bH['boundingBox'] || !0x1 !== bg['intersectsBox'](bH['boundingBox']))))
                    if (bH['isBufferGeometry']) {
                        var bK, bL, bM, bR, bU, bV, bW, bX, bY, bZ = bH['index'], c0 = bH['attributes']['position'], c1 = bH['morphAttributes']['position'], c2 = bH['attributes']['uv'], c3 = bH['groups'], c4 = bH['drawRange'];
                        if (null !== bZ)
                            if (Array['isArray'](bI))
                                for (bR = 0x0,
                                bV = c3['length']; bR < bV; bR++)
                                    for (bY = bI[(bX = c3[bR])['materialIndex']],
                                    bU = Math['max'](bX['start'], c4['start']),
                                    bW = Math['min'](bX['start'] + bX['count'], c4['start'] + c4['count']); bU < bW; bU += 0x3)
                                        bK = bZ['getX'](bU),
                                        bL = bZ['getX'](bU + 0x1),
                                        bM = bZ['getX'](bU + 0x2),
                                        (bG = bT(this, bY, bi, bg, c0, c1, c2, bK, bL, bM)) && (bG['faceIndex'] = Math['floor'](bU / 0x3),
                                        bG['face']['materialIndex'] = bX['materialIndex'],
                                        bF['push'](bG));
                            else
                                for (bR = Math['max'](0x0, c4['start']),
                                bV = Math['min'](bZ['count'], c4['start'] + c4['count']); bR < bV; bR += 0x3)
                                    bK = bZ['getX'](bR),
                                    bL = bZ['getX'](bR + 0x1),
                                    bM = bZ['getX'](bR + 0x2),
                                    (bG = bT(this, bI, bi, bg, c0, c1, c2, bK, bL, bM)) && (bG['faceIndex'] = Math['floor'](bR / 0x3),
                                    bF['push'](bG));
                        else if (void 0x0 !== c0)
                            if (Array['isArray'](bI))
                                for (bR = 0x0,
                                bV = c3['length']; bR < bV; bR++)
                                    for (bY = bI[(bX = c3[bR])['materialIndex']],
                                    bU = Math['max'](bX['start'], c4['start']),
                                    bW = Math['min'](bX['start'] + bX['count'], c4['start'] + c4['count']); bU < bW; bU += 0x3)
                                        (bG = bT(this, bY, bi, bg, c0, c1, c2, bK = bU, bL = bU + 0x1, bM = bU + 0x2)) && (bG['faceIndex'] = Math['floor'](bU / 0x3),
                                        bG['face']['materialIndex'] = bX['materialIndex'],
                                        bF['push'](bG));
                            else
                                for (bR = Math['max'](0x0, c4['start']),
                                bV = Math['min'](c0['count'], c4['start'] + c4['count']); bR < bV; bR += 0x3)
                                    (bG = bT(this, bI, bi, bg, c0, c1, c2, bK = bR, bL = bR + 0x1, bM = bR + 0x2)) && (bG['faceIndex'] = Math['floor'](bR / 0x3),
                                    bF['push'](bG));
                    } else if (bH['isGeometry']) {
                        var c5, c6, c7, c8, c9 = Array['isArray'](bI), ca = bH['vertices'], cb = bH['faces'], cc = bH['faceVertexUvs'][0x0];
                        cc['length'] > 0x0 && (c8 = cc);
                        for (var cd = 0x0, ce = cb['length']; cd < ce; cd++) {
                            var cf = cb[cd]
                              , cg = c9 ? bI[cf['materialIndex']] : bI;
                            if (void 0x0 !== cg && (c5 = ca[cf['a']],
                            c6 = ca[cf['b']],
                            c7 = ca[cf['c']],
                            bG = bS(this, cg, bi, bg, c5, c6, c7, bQ))) {
                                if (c8 && c8[cd]) {
                                    var ch = c8[cd];
                                    bN['copy'](ch[0x0]),
                                    bO['copy'](ch[0x1]),
                                    bP['copy'](ch[0x2]),
                                    bG['uv'] = KS['getUV'](bQ, c5, c6, c7, bN, bO, bP, new eC());
                                }
                                bG['face'] = cf,
                                bG['faceIndex'] = cd,
                                bF['push'](bG);
                            }
                        }
                    }
            }
            ;
        }(),
        'clone': function() {
            return new this['constructor'](this['geometry'],this['material'])['copy'](this);
        }
    }),
    O3['prototype'] = Object['create'](lW['prototype']),
    O3['prototype']['constructor'] = O3,
    O3['prototype']['isCubeTexture'] = !0x0,
    Object['defineProperty'](O3['prototype'], 'images', {
        'get': function() {
            return this['image'];
        },
        'set': function(bf) {
            this['image'] = bf;
        }
    }),
    Oe['prototype'] = Object['create'](lW['prototype']),
    Oe['prototype']['constructor'] = Oe,
    Oe['prototype']['isDataTexture2DArray'] = !0x0,
    Oj['prototype'] = Object['create'](lW['prototype']),
    Oj['prototype']['constructor'] = Oj,
    Oj['prototype']['isDataTexture3D'] = !0x0;
    var Sx = new lW()
      , Sy = new Oe()
      , Sz = new Oj()
      , SA = new O3()
      , SB = []
      , SC = []
      , SD = new Float32Array(0x10)
      , SE = new Float32Array(0x9)
      , SF = new Float32Array(0x4);
    function SG(bf, bg, bh) {
        var bi = bf[0x0];
        if (bi <= 0x0 || bi > 0x0)
            return bf;
        var bF = bg * bh
          , bG = SB[bF];
        if (void 0x0 === bG && (bG = new Float32Array(bF),
        SB[bF] = bG),
        0x0 !== bg) {
            bi['toArray'](bG, 0x0);
            for (var bH = 0x1, bI = 0x0; bH !== bg; ++bH)
                bI += bh,
                bf[bH]['toArray'](bG, bI);
        }
        return bG;
    }
    function SP(bf, bg) {
        if (bf['length'] !== bg['length'])
            return !0x1;
        for (var bh = 0x0, bi = bf['length']; bh < bi; bh++)
            if (bf[bh] !== bg[bh])
                return !0x1;
        return !0x0;
    }
    function SU(bf, bg) {
        for (var bh = 0x0, bi = bg['length']; bh < bi; bh++)
            bf[bh] = bg[bh];
    }
    function SZ(bf, bg) {
        var bh = SC[bg];
        void 0x0 === bh && (bh = new Int32Array(bg),
        SC[bg] = bh);
        for (var bi = 0x0; bi !== bg; ++bi)
            bh[bi] = bf['allocateTextureUnit']();
        return bh;
    }
    function T4(bf, bg) {
        var bh = this['cache'];
        bh[0x0] !== bg && (bf['uniform1f'](this['addr'], bg),
        bh[0x0] = bg);
    }
    function T8(bf, bg) {
        var bh = this['cache'];
        if (void 0x0 !== bg['x'])
            bh[0x0] === bg['x'] && bh[0x1] === bg['y'] || (bf['uniform2f'](this['addr'], bg['x'], bg['y']),
            bh[0x0] = bg['x'],
            bh[0x1] = bg['y']);
        else {
            if (SP(bh, bg))
                return;
            bf['uniform2fv'](this['addr'], bg),
            SU(bh, bg);
        }
    }
    function Tc(bf, bg) {
        var bh = this['cache'];
        if (void 0x0 !== bg['x'])
            bh[0x0] === bg['x'] && bh[0x1] === bg['y'] && bh[0x2] === bg['z'] || (bf['uniform3f'](this['addr'], bg['x'], bg['y'], bg['z']),
            bh[0x0] = bg['x'],
            bh[0x1] = bg['y'],
            bh[0x2] = bg['z']);
        else if (void 0x0 !== bg['r'])
            bh[0x0] === bg['r'] && bh[0x1] === bg['g'] && bh[0x2] === bg['b'] || (bf['uniform3f'](this['addr'], bg['r'], bg['g'], bg['b']),
            bh[0x0] = bg['r'],
            bh[0x1] = bg['g'],
            bh[0x2] = bg['b']);
        else {
            if (SP(bh, bg))
                return;
            bf['uniform3fv'](this['addr'], bg),
            SU(bh, bg);
        }
    }
    function Tg(bf, bg) {
        var bh = this['cache'];
        if (void 0x0 !== bg['x'])
            bh[0x0] === bg['x'] && bh[0x1] === bg['y'] && bh[0x2] === bg['z'] && bh[0x3] === bg['w'] || (bf['uniform4f'](this['addr'], bg['x'], bg['y'], bg['z'], bg['w']),
            bh[0x0] = bg['x'],
            bh[0x1] = bg['y'],
            bh[0x2] = bg['z'],
            bh[0x3] = bg['w']);
        else {
            if (SP(bh, bg))
                return;
            bf['uniform4fv'](this['addr'], bg),
            SU(bh, bg);
        }
    }
    function Tk(bf, bg) {
        var bh = this['cache']
          , bi = bg['elements'];
        if (void 0x0 === bi) {
            if (SP(bh, bg))
                return;
            bf['uniformMatrix2fv'](this['addr'], !0x1, bg),
            SU(bh, bg);
        } else {
            if (SP(bh, bi))
                return;
            SF['set'](bi),
            bf['uniformMatrix2fv'](this['addr'], !0x1, SF),
            SU(bh, bi);
        }
    }
    function Tp(bf, bg) {
        var bh = this['cache']
          , bi = bg['elements'];
        if (void 0x0 === bi) {
            if (SP(bh, bg))
                return;
            bf['uniformMatrix3fv'](this['addr'], !0x1, bg),
            SU(bh, bg);
        } else {
            if (SP(bh, bi))
                return;
            SE['set'](bi),
            bf['uniformMatrix3fv'](this['addr'], !0x1, SE),
            SU(bh, bi);
        }
    }
    function Tu(bf, bg) {
        var bh = this['cache']
          , bi = bg['elements'];
        if (void 0x0 === bi) {
            if (SP(bh, bg))
                return;
            bf['uniformMatrix4fv'](this['addr'], !0x1, bg),
            SU(bh, bg);
        } else {
            if (SP(bh, bi))
                return;
            SD['set'](bi),
            bf['uniformMatrix4fv'](this['addr'], !0x1, SD),
            SU(bh, bi);
        }
    }
    function Tz(bf, bg, bh) {
        var bi = this['cache']
          , bF = bh['allocateTextureUnit']();
        bi[0x0] !== bF && (bf['uniform1i'](this['addr'], bF),
        bi[0x0] = bF),
        bh['safeSetTexture2D'](bg || Sx, bF);
    }
    function TF(bf, bg, bh) {
        var bi = this['cache']
          , bF = bh['allocateTextureUnit']();
        bi[0x0] !== bF && (bf['uniform1i'](this['addr'], bF),
        bi[0x0] = bF),
        bh['setTexture2DArray'](bg || Sy, bF);
    }
    function TL(bf, bg, bh) {
        var bi = this['cache']
          , bF = bh['allocateTextureUnit']();
        bi[0x0] !== bF && (bf['uniform1i'](this['addr'], bF),
        bi[0x0] = bF),
        bh['setTexture3D'](bg || Sz, bF);
    }
    function TR(bf, bg, bh) {
        var bi = this['cache']
          , bF = bh['allocateTextureUnit']();
        bi[0x0] !== bF && (bf['uniform1i'](this['addr'], bF),
        bi[0x0] = bF),
        bh['safeSetTextureCube'](bg || SA, bF);
    }
    function TX(bf, bg) {
        var bh = this['cache'];
        bh[0x0] !== bg && (bf['uniform1i'](this['addr'], bg),
        bh[0x0] = bg);
    }
    function U1(bf, bg) {
        var bh = this['cache'];
        SP(bh, bg) || (bf['uniform2iv'](this['addr'], bg),
        SU(bh, bg));
    }
    function U5(bf, bg) {
        var bh = this['cache'];
        SP(bh, bg) || (bf['uniform3iv'](this['addr'], bg),
        SU(bh, bg));
    }
    function U9(bf, bg) {
        var bh = this['cache'];
        SP(bh, bg) || (bf['uniform4iv'](this['addr'], bg),
        SU(bh, bg));
    }
    function Ud(bf, bg) {
        bf['uniform1fv'](this['addr'], bg);
    }
    function Ug(bf, bg) {
        bf['uniform1iv'](this['addr'], bg);
    }
    function Uj(bf, bg) {
        bf['uniform2iv'](this['addr'], bg);
    }
    function Um(bf, bg) {
        bf['uniform3iv'](this['addr'], bg);
    }
    function Up(bf, bg) {
        bf['uniform4iv'](this['addr'], bg);
    }
    function Us(bf, bg) {
        var bh = SG(bg, this['size'], 0x2);
        bf['uniform2fv'](this['addr'], bh);
    }
    function Uw(bf, bg) {
        var bh = SG(bg, this['size'], 0x3);
        bf['uniform3fv'](this['addr'], bh);
    }
    function UA(bf, bg) {
        var bh = SG(bg, this['size'], 0x4);
        bf['uniform4fv'](this['addr'], bh);
    }
    function UE(bf, bg) {
        var bh = SG(bg, this['size'], 0x4);
        bf['uniformMatrix2fv'](this['addr'], !0x1, bh);
    }
    function UI(bf, bg) {
        var bh = SG(bg, this['size'], 0x9);
        bf['uniformMatrix3fv'](this['addr'], !0x1, bh);
    }
    function UM(bf, bg) {
        var bh = SG(bg, this['size'], 0x10);
        bf['uniformMatrix4fv'](this['addr'], !0x1, bh);
    }
    function UQ(bf, bg, bh) {
        var bi = bg['length']
          , bF = SZ(bh, bi);
        bf['uniform1iv'](this['addr'], bF);
        for (var bG = 0x0; bG !== bi; ++bG)
            bh['safeSetTexture2D'](bg[bG] || Sx, bF[bG]);
    }
    function UX(bf, bg, bh) {
        var bi = bg['length']
          , bF = SZ(bh, bi);
        bf['uniform1iv'](this['addr'], bF);
        for (var bG = 0x0; bG !== bi; ++bG)
            bh['safeSetTextureCube'](bg[bG] || SA, bF[bG]);
    }
    function V4(bf, bg, bh) {
        this['id'] = bf,
        this['addr'] = bh,
        this['cache'] = [],
        this['setValue'] = function(bf) {
            switch (bf) {
            case 0x1406:
                return T4;
            case 0x8b50:
                return T8;
            case 0x8b51:
                return Tc;
            case 0x8b52:
                return Tg;
            case 0x8b5a:
                return Tk;
            case 0x8b5b:
                return Tp;
            case 0x8b5c:
                return Tu;
            case 0x8b5e:
            case 0x8d66:
                return Tz;
            case 0x8b5f:
                return TL;
            case 0x8b60:
                return TR;
            case 0x8dc1:
                return TF;
            case 0x1404:
            case 0x8b56:
                return TX;
            case 0x8b53:
            case 0x8b57:
                return U1;
            case 0x8b54:
            case 0x8b58:
                return U5;
            case 0x8b55:
            case 0x8b59:
                return U9;
            }
        }(bg['type']);
    }
    function V9(bf, bg, bh) {
        this['id'] = bf,
        this['addr'] = bh,
        this['cache'] = [],
        this['size'] = bg['size'],
        this['setValue'] = function(bf) {
            switch (bf) {
            case 0x1406:
                return Ud;
            case 0x8b50:
                return Us;
            case 0x8b51:
                return Uw;
            case 0x8b52:
                return UA;
            case 0x8b5a:
                return UE;
            case 0x8b5b:
                return UI;
            case 0x8b5c:
                return UM;
            case 0x8b5e:
                return UQ;
            case 0x8b60:
                return UX;
            case 0x1404:
            case 0x8b56:
                return Ug;
            case 0x8b53:
            case 0x8b57:
                return Uj;
            case 0x8b54:
            case 0x8b58:
                return Um;
            case 0x8b55:
            case 0x8b59:
                return Up;
            }
        }(bg['type']);
    }
    function Ve(bf) {
        this['id'] = bf,
        this['seq'] = [],
        this['map'] = {};
    }
    V9['prototype']['updateCache'] = function(bf) {
        var bg = this['cache'];
        bf instanceof Float32Array && bg['length'] !== bf['length'] && (this['cache'] = new Float32Array(bf['length'])),
        SU(bg, bf);
    }
    ,
    Ve['prototype']['setValue'] = function(bf, bg, bh) {
        for (var bi = this['seq'], bF = 0x0, bG = bi['length']; bF !== bG; ++bF) {
            var bH = bi[bF];
            bH['setValue'](bf, bg[bH['id']], bh);
        }
    }
    ;
    var Vp = /([\w\d_]+)(\])?(\[|\.)?/g;
    function Vq(bf, bg) {
        bf['seq']['push'](bg),
        bf['map'][bg['id']] = bg;
    }
    function Vt(bf, bg, bh) {
        var bi = bf['name']
          , bF = bi['length'];
        for (Vp['lastIndex'] = 0x0; ; ) {
            var bG = Vp['exec'](bi)
              , bH = Vp['lastIndex']
              , bI = bG[0x1]
              , bJ = ']' === bG[0x2]
              , bK = bG[0x3];
            if (bJ && (bI |= 0x0),
            void 0x0 === bK || '[' === bK && bH + 0x2 === bF) {
                Vq(bh, void 0x0 === bK ? new V4(bI,bf,bg) : new V9(bI,bf,bg));
                break;
            }
            var bL = bh['map'][bI];
            void 0x0 === bL && Vq(bh, bL = new Ve(bI)),
            bh = bL;
        }
    }
    function VF(bf, bg) {
        this['seq'] = [],
        this['map'] = {};
        for (var bh = bf['getProgramParameter'](bg, 0x8b86), bi = 0x0; bi < bh; ++bi) {
            var bF = bf['getActiveUniform'](bg, bi);
            Vt(bF, bf['getUniformLocation'](bg, bF['name']), this);
        }
    }
    function VL(bf, bg, bh, bi) {
        var bF = bf['createShader'](bg);
        return bf['shaderSource'](bF, bh),
        bf['compileShader'](bF),
        !0x0 === bi && (!0x1 === bf['getShaderParameter'](bF, 0x8b81) && console['error']('THREE.WebGLShader:\x20Shader\x20couldn\x27t\x20compile.'),
        '' !== bf['getShaderInfoLog'](bF) && console['warn']('THREE.WebGLShader:\x20gl.getShaderInfoLog()', 0x8b31 === bg ? 'vertex' : 'fragment', bf['getShaderInfoLog'](bF), function(bf) {
            for (var bg = bf['split']('\x0a'), bh = 0x0; bh < bg['length']; bh++)
                bg[bh] = bh + 0x1 + ':\x20' + bg[bh];
            return bg['join']('\x0a');
        }(bh))),
        bF;
    }
    VF['prototype']['setValue'] = function(bf, bg, bh, bi) {
        var bF = this['map'][bg];
        void 0x0 !== bF && bF['setValue'](bf, bh, bi);
    }
    ,
    VF['prototype']['setOptional'] = function(bf, bg, bh) {
        var bi = bg[bh];
        void 0x0 !== bi && this['setValue'](bf, bh, bi);
    }
    ,
    VF['upload'] = function(bf, bg, bh, bi) {
        for (var bF = 0x0, bG = bg['length']; bF !== bG; ++bF) {
            var bH = bg[bF]
              , bI = bh[bH['id']];
            !0x1 !== bI['needsUpdate'] && bH['setValue'](bf, bI['value'], bi);
        }
    }
    ,
    VF['seqWithValue'] = function(bf, bg) {
        for (var bh = [], bi = 0x0, bF = bf['length']; bi !== bF; ++bi) {
            var bG = bf[bi];
            bG['id']in bg && bh['push'](bG);
        }
        return bh;
    }
    ;
    var Wh = 0x0;
    function Wi(bf) {
        switch (bf) {
        case dQ:
            return ['Linear', '(\x20value\x20)'];
        case dR:
            return ['sRGB', '(\x20value\x20)'];
        case dT:
            return ['RGBE', '(\x20value\x20)'];
        case dV:
            return ['RGBM', '(\x20value,\x207.0\x20)'];
        case dW:
            return ['RGBM', '(\x20value,\x2016.0\x20)'];
        case dX:
            return ['RGBD', '(\x20value,\x20256.0\x20)'];
        case dS:
            return ['Gamma', '(\x20value,\x20float(\x20GAMMA_FACTOR\x20)\x20)'];
        default:
            throw new Error('unsupported\x20encoding:\x20' + bf);
        }
    }
    function Wk(bf, bg) {
        var bh = Wi(bg);
        return 'vec4\x20' + bf + '(\x20vec4\x20value\x20)\x20{\x20return\x20' + bh[0x0] + 'ToLinear' + bh[0x1] + ';\x20}';
    }
    function Wo(bf, bg) {
        var bh;
        switch (bg) {
        case cz:
            bh = 'Linear';
            break;
        case cA:
            bh = 'Reinhard';
            break;
        case cB:
            bh = 'Uncharted2';
            break;
        case cC:
            bh = 'OptimizedCineon';
            break;
        case cD:
            bh = 'ACESFilmic';
            break;
        default:
            throw new Error('unsupported\x20toneMapping:\x20' + bg);
        }
        return 'vec3\x20' + bf + '(\x20vec3\x20color\x20)\x20{\x20return\x20' + bh + 'ToneMapping(\x20color\x20);\x20}';
    }
    function Ws(bf) {
        return '' !== bf;
    }
    function Wu(bf, bg) {
        return bf['replace'](/NUM_DIR_LIGHTS/g, bg['numDirLights'])['replace'](/NUM_SPOT_LIGHTS/g, bg['numSpotLights'])['replace'](/NUM_RECT_AREA_LIGHTS/g, bg['numRectAreaLights'])['replace'](/NUM_POINT_LIGHTS/g, bg['numPointLights'])['replace'](/NUM_HEMI_LIGHTS/g, bg['numHemiLights']);
    }
    function Wx(bf, bg) {
        return bf['replace'](/NUM_CLIPPING_PLANES/g, bg['numClippingPlanes'])['replace'](/UNION_CLIPPING_PLANES/g, bg['numClippingPlanes'] - bg['numClipIntersection']);
    }
    function WA(bf) {
        return bf['replace'](/^[ \t]*#include +<([\w\d.\/]+)>/gm, function(bf, bg) {
            var bh = vP[bg];
            if (void 0x0 === bh)
                throw new Error('Can\x20not\x20resolve\x20#include\x20<' + bg + '>');
            return WA(bh);
        });
    }
    function WF(bf) {
        return bf['replace'](/#pragma unroll_loop[\s]+?for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}/g, function(bf, bg, bh, bi) {
            for (var bF = '', bG = parseInt(bg); bG < parseInt(bh); bG++)
                bF += bi['replace'](/\[ i \]/g, '[\x20' + bG + '\x20]');
            return bF;
        });
    }
    function WN(bf, bg, bh, bi, bF, bG, bH, bI) {
        var bJ = bf['context']
          , bK = bi['defines']
          , bL = bF['vertexShader']
          , bM = bF['fragmentShader']
          , bN = 'SHADOWMAP_TYPE_BASIC';
        bG['shadowMapType'] === bR ? bN = 'SHADOWMAP_TYPE_PCF' : bG['shadowMapType'] === bS && (bN = 'SHADOWMAP_TYPE_PCF_SOFT');
        var bO = 'ENVMAP_TYPE_CUBE'
          , bP = 'ENVMAP_MODE_REFLECTION'
          , bQ = 'ENVMAP_BLENDING_MULTIPLY';
        if (bG['envMap']) {
            switch (bi['envMap']['mapping']) {
            case cF:
            case cG:
                bO = 'ENVMAP_TYPE_CUBE';
                break;
            case cK:
            case cL:
                bO = 'ENVMAP_TYPE_CUBE_UV';
                break;
            case cH:
            case cI:
                bO = 'ENVMAP_TYPE_EQUIREC';
                break;
            case cJ:
                bO = 'ENVMAP_TYPE_SPHERE';
            }
            switch (bi['envMap']['mapping']) {
            case cG:
            case cI:
                bP = 'ENVMAP_MODE_REFRACTION';
            }
            switch (bi['combine']) {
            case cv:
                bQ = 'ENVMAP_BLENDING_MULTIPLY';
                break;
            case cw:
                bQ = 'ENVMAP_BLENDING_MIX';
                break;
            case cx:
                bQ = 'ENVMAP_BLENDING_ADD';
            }
        }
        var bT, bU, bV, bW, bX, bY = bf['gammaFactor'] > 0x0 ? bf['gammaFactor'] : 0x1, bZ = bH['isWebGL2'] ? '' : function(bf, bg, bh) {
            return [(bf = bf || {})['derivatives'] || bg['envMapCubeUV'] || bg['bumpMap'] || bg['normalMap'] && !bg['objectSpaceNormalMap'] || bg['flatShading'] ? '#extension\x20GL_OES_standard_derivatives\x20:\x20enable' : '', (bf['fragDepth'] || bg['logarithmicDepthBuffer']) && bh['get']('EXT_frag_depth') ? '#extension\x20GL_EXT_frag_depth\x20:\x20enable' : '', bf['drawBuffers'] && bh['get']('WEBGL_draw_buffers') ? '#extension\x20GL_EXT_draw_buffers\x20:\x20require' : '', (bf['shaderTextureLOD'] || bg['envMap']) && bh['get']('EXT_shader_texture_lod') ? '#extension\x20GL_EXT_shader_texture_lod\x20:\x20enable' : '']['filter'](Ws)['join']('\x0a');
        }(bi['extensions'], bG, bg), c0 = function(bf) {
            var bg = [];
            for (var bh in bf) {
                var bi = bf[bh];
                !0x1 !== bi && bg['push']('#define\x20' + bh + '\x20' + bi);
            }
            return bg['join']('\x0a');
        }(bK), c1 = bJ['createProgram']();
        if (bi['isRawShaderMaterial'] ? ((bT = [c0]['filter'](Ws)['join']('\x0a'))['length'] > 0x0 && (bT += '\x0a'),
        (bU = [bZ, c0]['filter'](Ws)['join']('\x0a'))['length'] > 0x0 && (bU += '\x0a')) : (bT = ['precision\x20' + bG['precision'] + '\x20float;', 'precision\x20' + bG['precision'] + '\x20int;', '#define\x20SHADER_NAME\x20' + bF['name'], c0, bG['supportsVertexTextures'] ? '#define\x20VERTEX_TEXTURES' : '', '#define\x20GAMMA_FACTOR\x20' + bY, '#define\x20MAX_BONES\x20' + bG['maxBones'], bG['useFog'] && bG['fog'] ? '#define\x20USE_FOG' : '', bG['useFog'] && bG['fogExp'] ? '#define\x20FOG_EXP2' : '', bG['map'] ? '#define\x20USE_MAP' : '', bG['envMap'] ? '#define\x20USE_ENVMAP' : '', bG['envMap'] ? '#define\x20' + bP : '', bG['lightMap'] ? '#define\x20USE_LIGHTMAP' : '', bG['aoMap'] ? '#define\x20USE_AOMAP' : '', bG['emissiveMap'] ? '#define\x20USE_EMISSIVEMAP' : '', bG['bumpMap'] ? '#define\x20USE_BUMPMAP' : '', bG['normalMap'] ? '#define\x20USE_NORMALMAP' : '', bG['normalMap'] && bG['objectSpaceNormalMap'] ? '#define\x20OBJECTSPACE_NORMALMAP' : '', bG['displacementMap'] && bG['supportsVertexTextures'] ? '#define\x20USE_DISPLACEMENTMAP' : '', bG['specularMap'] ? '#define\x20USE_SPECULARMAP' : '', bG['roughnessMap'] ? '#define\x20USE_ROUGHNESSMAP' : '', bG['metalnessMap'] ? '#define\x20USE_METALNESSMAP' : '', bG['alphaMap'] ? '#define\x20USE_ALPHAMAP' : '', bG['vertexTangents'] ? '#define\x20USE_TANGENT' : '', bG['vertexColors'] ? '#define\x20USE_COLOR' : '', bG['flatShading'] ? '#define\x20FLAT_SHADED' : '', bG['skinning'] ? '#define\x20USE_SKINNING' : '', bG['useVertexTexture'] ? '#define\x20BONE_TEXTURE' : '', bG['morphTargets'] ? '#define\x20USE_MORPHTARGETS' : '', bG['morphNormals'] && !0x1 === bG['flatShading'] ? '#define\x20USE_MORPHNORMALS' : '', bG['doubleSided'] ? '#define\x20DOUBLE_SIDED' : '', bG['flipSided'] ? '#define\x20FLIP_SIDED' : '', bG['shadowMapEnabled'] ? '#define\x20USE_SHADOWMAP' : '', bG['shadowMapEnabled'] ? '#define\x20' + bN : '', bG['sizeAttenuation'] ? '#define\x20USE_SIZEATTENUATION' : '', bG['logarithmicDepthBuffer'] ? '#define\x20USE_LOGDEPTHBUF' : '', bG['logarithmicDepthBuffer'] && (bH['isWebGL2'] || bg['get']('EXT_frag_depth')) ? '#define\x20USE_LOGDEPTHBUF_EXT' : '', 'uniform\x20mat4\x20modelMatrix;', 'uniform\x20mat4\x20modelViewMatrix;', 'uniform\x20mat4\x20projectionMatrix;', 'uniform\x20mat4\x20viewMatrix;', 'uniform\x20mat3\x20normalMatrix;', 'uniform\x20vec3\x20cameraPosition;', 'attribute\x20vec3\x20position;', 'attribute\x20vec3\x20normal;', 'attribute\x20vec2\x20uv;', '#ifdef\x20USE_TANGENT', '\x09attribute\x20vec4\x20tangent;', '#endif', '#ifdef\x20USE_COLOR', '\x09attribute\x20vec3\x20color;', '#endif', '#ifdef\x20USE_MORPHTARGETS', '\x09attribute\x20vec3\x20morphTarget0;', '\x09attribute\x20vec3\x20morphTarget1;', '\x09attribute\x20vec3\x20morphTarget2;', '\x09attribute\x20vec3\x20morphTarget3;', '\x09#ifdef\x20USE_MORPHNORMALS', '\x09\x09attribute\x20vec3\x20morphNormal0;', '\x09\x09attribute\x20vec3\x20morphNormal1;', '\x09\x09attribute\x20vec3\x20morphNormal2;', '\x09\x09attribute\x20vec3\x20morphNormal3;', '\x09#else', '\x09\x09attribute\x20vec3\x20morphTarget4;', '\x09\x09attribute\x20vec3\x20morphTarget5;', '\x09\x09attribute\x20vec3\x20morphTarget6;', '\x09\x09attribute\x20vec3\x20morphTarget7;', '\x09#endif', '#endif', '#ifdef\x20USE_SKINNING', '\x09attribute\x20vec4\x20skinIndex;', '\x09attribute\x20vec4\x20skinWeight;', '#endif', '\x0a']['filter'](Ws)['join']('\x0a'),
        bU = [bZ, 'precision\x20' + bG['precision'] + '\x20float;', 'precision\x20' + bG['precision'] + '\x20int;', '#define\x20SHADER_NAME\x20' + bF['name'], c0, bG['alphaTest'] ? '#define\x20ALPHATEST\x20' + bG['alphaTest'] + (bG['alphaTest'] % 0x1 ? '' : '.0') : '', '#define\x20GAMMA_FACTOR\x20' + bY, bG['useFog'] && bG['fog'] ? '#define\x20USE_FOG' : '', bG['useFog'] && bG['fogExp'] ? '#define\x20FOG_EXP2' : '', bG['map'] ? '#define\x20USE_MAP' : '', bG['matcap'] ? '#define\x20USE_MATCAP' : '', bG['envMap'] ? '#define\x20USE_ENVMAP' : '', bG['envMap'] ? '#define\x20' + bO : '', bG['envMap'] ? '#define\x20' + bP : '', bG['envMap'] ? '#define\x20' + bQ : '', bG['lightMap'] ? '#define\x20USE_LIGHTMAP' : '', bG['aoMap'] ? '#define\x20USE_AOMAP' : '', bG['emissiveMap'] ? '#define\x20USE_EMISSIVEMAP' : '', bG['bumpMap'] ? '#define\x20USE_BUMPMAP' : '', bG['normalMap'] ? '#define\x20USE_NORMALMAP' : '', bG['normalMap'] && bG['objectSpaceNormalMap'] ? '#define\x20OBJECTSPACE_NORMALMAP' : '', bG['specularMap'] ? '#define\x20USE_SPECULARMAP' : '', bG['roughnessMap'] ? '#define\x20USE_ROUGHNESSMAP' : '', bG['metalnessMap'] ? '#define\x20USE_METALNESSMAP' : '', bG['alphaMap'] ? '#define\x20USE_ALPHAMAP' : '', bG['vertexTangents'] ? '#define\x20USE_TANGENT' : '', bG['vertexColors'] ? '#define\x20USE_COLOR' : '', bG['gradientMap'] ? '#define\x20USE_GRADIENTMAP' : '', bG['flatShading'] ? '#define\x20FLAT_SHADED' : '', bG['doubleSided'] ? '#define\x20DOUBLE_SIDED' : '', bG['flipSided'] ? '#define\x20FLIP_SIDED' : '', bG['shadowMapEnabled'] ? '#define\x20USE_SHADOWMAP' : '', bG['shadowMapEnabled'] ? '#define\x20' + bN : '', bG['premultipliedAlpha'] ? '#define\x20PREMULTIPLIED_ALPHA' : '', bG['physicallyCorrectLights'] ? '#define\x20PHYSICALLY_CORRECT_LIGHTS' : '', bG['logarithmicDepthBuffer'] ? '#define\x20USE_LOGDEPTHBUF' : '', bG['logarithmicDepthBuffer'] && (bH['isWebGL2'] || bg['get']('EXT_frag_depth')) ? '#define\x20USE_LOGDEPTHBUF_EXT' : '', bG['envMap'] && (bH['isWebGL2'] || bg['get']('EXT_shader_texture_lod')) ? '#define\x20TEXTURE_LOD_EXT' : '', 'uniform\x20mat4\x20viewMatrix;', 'uniform\x20vec3\x20cameraPosition;', bG['toneMapping'] !== cy ? '#define\x20TONE_MAPPING' : '', bG['toneMapping'] !== cy ? vP['tonemapping_pars_fragment'] : '', bG['toneMapping'] !== cy ? Wo('toneMapping', bG['toneMapping']) : '', bG['dithering'] ? '#define\x20DITHERING' : '', bG['outputEncoding'] || bG['mapEncoding'] || bG['matcapEncoding'] || bG['envMapEncoding'] || bG['emissiveMapEncoding'] ? vP['encodings_pars_fragment'] : '', bG['mapEncoding'] ? Wk('mapTexelToLinear', bG['mapEncoding']) : '', bG['matcapEncoding'] ? Wk('matcapTexelToLinear', bG['matcapEncoding']) : '', bG['envMapEncoding'] ? Wk('envMapTexelToLinear', bG['envMapEncoding']) : '', bG['emissiveMapEncoding'] ? Wk('emissiveMapTexelToLinear', bG['emissiveMapEncoding']) : '', bG['outputEncoding'] ? (bV = 'linearToOutputTexel',
        bW = bG['outputEncoding'],
        bX = Wi(bW),
        'vec4\x20' + bV + '(\x20vec4\x20value\x20)\x20{\x20return\x20LinearTo' + bX[0x0] + bX[0x1] + ';\x20}') : '', bG['depthPacking'] ? '#define\x20DEPTH_PACKING\x20' + bi['depthPacking'] : '', '\x0a']['filter'](Ws)['join']('\x0a')),
        bL = Wx(bL = Wu(bL = WA(bL), bG), bG),
        bM = Wx(bM = Wu(bM = WA(bM), bG), bG),
        bL = WF(bL),
        bM = WF(bM),
        bH['isWebGL2'] && !bi['isRawShaderMaterial']) {
            var c2 = !0x1
              , c3 = /^\s*#version\s+300\s+es\s*\n/;
            bi['isShaderMaterial'] && null !== bL['match'](c3) && null !== bM['match'](c3) && (c2 = !0x0,
            bL = bL['replace'](c3, ''),
            bM = bM['replace'](c3, '')),
            bT = ['#version\x20300\x20es\x0a', '#define\x20attribute\x20in', '#define\x20varying\x20out', '#define\x20texture2D\x20texture']['join']('\x0a') + '\x0a' + bT,
            bU = ['#version\x20300\x20es\x0a', '#define\x20varying\x20in', c2 ? '' : 'out\x20highp\x20vec4\x20pc_fragColor;', c2 ? '' : '#define\x20gl_FragColor\x20pc_fragColor', '#define\x20gl_FragDepthEXT\x20gl_FragDepth', '#define\x20texture2D\x20texture', '#define\x20textureCube\x20texture', '#define\x20texture2DProj\x20textureProj', '#define\x20texture2DLodEXT\x20textureLod', '#define\x20texture2DProjLodEXT\x20textureProjLod', '#define\x20textureCubeLodEXT\x20textureLod', '#define\x20texture2DGradEXT\x20textureGrad', '#define\x20texture2DProjGradEXT\x20textureProjGrad', '#define\x20textureCubeGradEXT\x20textureGrad']['join']('\x0a') + '\x0a' + bU;
        }
        var c4, c5, c6 = bU + bM, c7 = VL(bJ, 0x8b31, bT + bL, bf['debug']['checkShaderErrors']), c8 = VL(bJ, 0x8b30, c6, bf['debug']['checkShaderErrors']);
        if (bJ['attachShader'](c1, c7),
        bJ['attachShader'](c1, c8),
        void 0x0 !== bi['index0AttributeName'] ? bJ['bindAttribLocation'](c1, 0x0, bi['index0AttributeName']) : !0x0 === bG['morphTargets'] && bJ['bindAttribLocation'](c1, 0x0, 'position'),
        bJ['linkProgram'](c1),
        bf['debug']['checkShaderErrors']) {
            var c9 = bJ['getProgramInfoLog'](c1)['trim']()
              , ca = bJ['getShaderInfoLog'](c7)['trim']()
              , cb = bJ['getShaderInfoLog'](c8)['trim']()
              , cc = !0x0
              , cd = !0x0;
            !0x1 === bJ['getProgramParameter'](c1, 0x8b82) ? (cc = !0x1,
            console['error']('THREE.WebGLProgram:\x20shader\x20error:\x20', bJ['getError'](), '35715', bJ['getProgramParameter'](c1, 0x8b83), 'gl.getProgramInfoLog', c9, ca, cb)) : '' !== c9 ? console['warn']('THREE.WebGLProgram:\x20gl.getProgramInfoLog()', c9) : '' !== ca && '' !== cb || (cd = !0x1),
            cd && (this['diagnostics'] = {
                'runnable': cc,
                'material': bi,
                'programLog': c9,
                'vertexShader': {
                    'log': ca,
                    'prefix': bT
                },
                'fragmentShader': {
                    'log': cb,
                    'prefix': bU
                }
            });
        }
        return bJ['deleteShader'](c7),
        bJ['deleteShader'](c8),
        this['getUniforms'] = function() {
            return void 0x0 === c4 && (c4 = new VF(bJ,c1,bI)),
            c4;
        }
        ,
        this['getAttributes'] = function() {
            return void 0x0 === c5 && (c5 = function(bf, bg) {
                for (var bh = {}, bi = bf['getProgramParameter'](bg, 0x8b89), bF = 0x0; bF < bi; bF++) {
                    var bG = bf['getActiveAttrib'](bg, bF)['name'];
                    bh[bG] = bf['getAttribLocation'](bg, bG);
                }
                return bh;
            }(bJ, c1)),
            c5;
        }
        ,
        this['destroy'] = function() {
            bJ['deleteProgram'](c1),
            this['program'] = void 0x0;
        }
        ,
        Object['defineProperties'](this, {
            'uniforms': {
                'get': function() {
                    return console['warn']('THREE.WebGLProgram:\x20.uniforms\x20is\x20now\x20.getUniforms().'),
                    this['getUniforms']();
                }
            },
            'attributes': {
                'get': function() {
                    return console['warn']('THREE.WebGLProgram:\x20.attributes\x20is\x20now\x20.getAttributes().'),
                    this['getAttributes']();
                }
            }
        }),
        this['name'] = bF['name'],
        this['id'] = Wh++,
        this['code'] = bh,
        this['usedTimes'] = 0x1,
        this['program'] = c1,
        this['vertexShader'] = c7,
        this['fragmentShader'] = c8,
        this;
    }
    function XC(bf, bg, bh, bi) {
        var bF = []
          , bG = {
            'MeshDepthMaterial': 'depth',
            'MeshDistanceMaterial': 'distanceRGBA',
            'MeshNormalMaterial': 'normal',
            'MeshBasicMaterial': 'basic',
            'MeshLambertMaterial': 'lambert',
            'MeshPhongMaterial': 'phong',
            'MeshToonMaterial': 'phong',
            'MeshStandardMaterial': 'physical',
            'MeshPhysicalMaterial': 'physical',
            'MeshMatcapMaterial': 'matcap',
            'LineBasicMaterial': 'basic',
            'LineDashedMaterial': 'dashed',
            'PointsMaterial': 'points',
            'ShadowMaterial': 'shadow',
            'SpriteMaterial': 'sprite'
        }
          , bH = ['precision', 'supportsVertexTextures', 'map', 'mapEncoding', 'matcap', 'matcapEncoding', 'envMap', 'envMapMode', 'envMapEncoding', 'lightMap', 'aoMap', 'emissiveMap', 'emissiveMapEncoding', 'bumpMap', 'normalMap', 'objectSpaceNormalMap', 'displacementMap', 'specularMap', 'roughnessMap', 'metalnessMap', 'gradientMap', 'alphaMap', 'combine', 'vertexColors', 'vertexTangents', 'fog', 'useFog', 'fogExp', 'flatShading', 'sizeAttenuation', 'logarithmicDepthBuffer', 'skinning', 'maxBones', 'useVertexTexture', 'morphTargets', 'morphNormals', 'maxMorphTargets', 'maxMorphNormals', 'premultipliedAlpha', 'numDirLights', 'numPointLights', 'numSpotLights', 'numHemiLights', 'numRectAreaLights', 'shadowMapEnabled', 'shadowMapType', 'toneMapping', 'physicallyCorrectLights', 'alphaTest', 'doubleSided', 'flipSided', 'numClippingPlanes', 'numClipIntersection', 'depthPacking', 'dithering'];
        function bI(bf, bg) {
            var bh;
            return bf ? bf['isTexture'] ? bh = bf['encoding'] : bf['isWebGLRenderTarget'] && (console['warn']('THREE.WebGLPrograms.getTextureEncodingFromMap:\x20don\x27t\x20use\x20render\x20targets\x20as\x20textures.\x20Use\x20their\x20.texture\x20property\x20instead.'),
            bh = bf['texture']['encoding']) : bh = dQ,
            bh === dQ && bg && (bh = dS),
            bh;
        }
        this['getParameters'] = function(bg, bi, bF, bH, bJ, bK, bL) {
            var bM = bG[bg['type']]
              , bN = bL['isSkinnedMesh'] ? function(bf) {
                var bg = bf['skeleton']['bones'];
                if (bh['floatVertexTextures'])
                    return 0x400;
                var bi = bh['maxVertexUniforms']
                  , bF = Math['floor']((bi - 0x14) / 0x4)
                  , bG = Math['min'](bF, bg['length']);
                return bG < bg['length'] ? (console['warn']('THREE.WebGLRenderer:\x20Skeleton\x20has\x20' + bg['length'] + '\x20bones.\x20This\x20GPU\x20supports\x20' + bG + '.'),
                0x0) : bG;
            }(bL) : 0x0
              , bO = bh['precision'];
            null !== bg['precision'] && (bO = bh['getMaxPrecision'](bg['precision'])) !== bg['precision'] && console['warn']('THREE.WebGLProgram.getParameters:', bg['precision'], 'not\x20supported,\x20using', bO, 'instead.');
            var bP = bf['getRenderTarget']();
            return {
                'shaderID': bM,
                'precision': bO,
                'supportsVertexTextures': bh['vertexTextures'],
                'outputEncoding': bI(bP ? bP['texture'] : null, bf['gammaOutput']),
                'map': !!bg['map'],
                'mapEncoding': bI(bg['map'], bf['gammaInput']),
                'matcap': !!bg['matcap'],
                'matcapEncoding': bI(bg['matcap'], bf['gammaInput']),
                'envMap': !!bg['envMap'],
                'envMapMode': bg['envMap'] && bg['envMap']['mapping'],
                'envMapEncoding': bI(bg['envMap'], bf['gammaInput']),
                'envMapCubeUV': !!bg['envMap'] && (bg['envMap']['mapping'] === cK || bg['envMap']['mapping'] === cL),
                'lightMap': !!bg['lightMap'],
                'aoMap': !!bg['aoMap'],
                'emissiveMap': !!bg['emissiveMap'],
                'emissiveMapEncoding': bI(bg['emissiveMap'], bf['gammaInput']),
                'bumpMap': !!bg['bumpMap'],
                'normalMap': !!bg['normalMap'],
                'objectSpaceNormalMap': bg['normalMapType'] === e1,
                'displacementMap': !!bg['displacementMap'],
                'roughnessMap': !!bg['roughnessMap'],
                'metalnessMap': !!bg['metalnessMap'],
                'specularMap': !!bg['specularMap'],
                'alphaMap': !!bg['alphaMap'],
                'gradientMap': !!bg['gradientMap'],
                'combine': bg['combine'],
                'vertexTangents': bg['normalMap'] && bg['vertexTangents'],
                'vertexColors': bg['vertexColors'],
                'fog': !!bH,
                'useFog': bg['fog'],
                'fogExp': bH && bH['isFogExp2'],
                'flatShading': bg['flatShading'],
                'sizeAttenuation': bg['sizeAttenuation'],
                'logarithmicDepthBuffer': bh['logarithmicDepthBuffer'],
                'skinning': bg['skinning'] && bN > 0x0,
                'maxBones': bN,
                'useVertexTexture': bh['floatVertexTextures'],
                'morphTargets': bg['morphTargets'],
                'morphNormals': bg['morphNormals'],
                'maxMorphTargets': bf['maxMorphTargets'],
                'maxMorphNormals': bf['maxMorphNormals'],
                'numDirLights': bi['directional']['length'],
                'numPointLights': bi['point']['length'],
                'numSpotLights': bi['spot']['length'],
                'numRectAreaLights': bi['rectArea']['length'],
                'numHemiLights': bi['hemi']['length'],
                'numClippingPlanes': bJ,
                'numClipIntersection': bK,
                'dithering': bg['dithering'],
                'shadowMapEnabled': bf['shadowMap']['enabled'] && bL['receiveShadow'] && bF['length'] > 0x0,
                'shadowMapType': bf['shadowMap']['type'],
                'toneMapping': bf['toneMapping'],
                'physicallyCorrectLights': bf['physicallyCorrectLights'],
                'premultipliedAlpha': bg['premultipliedAlpha'],
                'alphaTest': bg['alphaTest'],
                'doubleSided': bg['side'] === bV,
                'flipSided': bg['side'] === bU,
                'depthPacking': void 0x0 !== bg['depthPacking'] && bg['depthPacking']
            };
        }
        ,
        this['getProgramCode'] = function(bg, bh) {
            var bi = [];
            if (bh['shaderID'] ? bi['push'](bh['shaderID']) : (bi['push'](bg['fragmentShader']),
            bi['push'](bg['vertexShader'])),
            void 0x0 !== bg['defines'])
                for (var bF in bg['defines'])
                    bi['push'](bF),
                    bi['push'](bg['defines'][bF]);
            for (var bG = 0x0; bG < bH['length']; bG++)
                bi['push'](bh[bH[bG]]);
            return bi['push'](bg['onBeforeCompile']['toString']()),
            bi['push'](bf['gammaOutput']),
            bi['push'](bf['gammaFactor']),
            bi['join']();
        }
        ,
        this['acquireProgram'] = function(bG, bH, bI, bJ) {
            for (var bK, bL = 0x0, bM = bF['length']; bL < bM; bL++) {
                var bN = bF[bL];
                if (bN['code'] === bJ) {
                    ++(bK = bN)['usedTimes'];
                    break;
                }
            }
            return void 0x0 === bK && (bK = new WN(bf,bg,bJ,bG,bH,bI,bh,bi),
            bF['push'](bK)),
            bK;
        }
        ,
        this['releaseProgram'] = function(bf) {
            if (0x0 == --bf['usedTimes']) {
                var bg = bF['indexOf'](bf);
                bF[bg] = bF[bF['length'] - 0x1],
                bF['pop'](),
                bf['destroy']();
            }
        }
        ,
        this['programs'] = bF;
    }
    function Yj() {
        var bf = new WeakMap();
        return {
            'get': function(bg) {
                var bh = bf['get'](bg);
                return void 0x0 === bh && (bh = {},
                bf['set'](bg, bh)),
                bh;
            },
            'remove': function(bg) {
                bf['delete'](bg);
            },
            'update': function(bg, bh, bi) {
                bf['get'](bg)[bh] = bi;
            },
            'dispose': function() {
                bf = new WeakMap();
            }
        };
    }
    function Yr(bf, bg) {
        return bf['groupOrder'] !== bg['groupOrder'] ? bf['groupOrder'] - bg['groupOrder'] : bf['renderOrder'] !== bg['renderOrder'] ? bf['renderOrder'] - bg['renderOrder'] : bf['program'] !== bg['program'] ? bf['program']['id'] - bg['program']['id'] : bf['material']['id'] !== bg['material']['id'] ? bf['material']['id'] - bg['material']['id'] : bf['z'] !== bg['z'] ? bf['z'] - bg['z'] : bf['id'] - bg['id'];
    }
    function Yu(bf, bg) {
        return bf['groupOrder'] !== bg['groupOrder'] ? bf['groupOrder'] - bg['groupOrder'] : bf['renderOrder'] !== bg['renderOrder'] ? bf['renderOrder'] - bg['renderOrder'] : bf['z'] !== bg['z'] ? bg['z'] - bf['z'] : bf['id'] - bg['id'];
    }
    function Yx() {
        var bf = []
          , bg = 0x0
          , bh = []
          , bi = []
          , bF = {
            'id': -0x1
        };
        function bG(bh, bi, bG, bH, bI, bJ) {
            var bK = bf[bg];
            return void 0x0 === bK ? (bK = {
                'id': bh['id'],
                'object': bh,
                'geometry': bi,
                'material': bG,
                'program': bG['program'] || bF,
                'groupOrder': bH,
                'renderOrder': bh['renderOrder'],
                'z': bI,
                'group': bJ
            },
            bf[bg] = bK) : (bK['id'] = bh['id'],
            bK['object'] = bh,
            bK['geometry'] = bi,
            bK['material'] = bG,
            bK['program'] = bG['program'] || bF,
            bK['groupOrder'] = bH,
            bK['renderOrder'] = bh['renderOrder'],
            bK['z'] = bI,
            bK['group'] = bJ),
            bg++,
            bK;
        }
        return {
            'opaque': bh,
            'transparent': bi,
            'init': function() {
                bg = 0x0,
                bh['length'] = 0x0,
                bi['length'] = 0x0;
            },
            'push': function(bf, bg, bF, bH, bI, bJ) {
                var bK = bG(bf, bg, bF, bH, bI, bJ);
                (!0x0 === bF['transparent'] ? bi : bh)['push'](bK);
            },
            'unshift': function(bf, bg, bF, bH, bI, bJ) {
                var bK = bG(bf, bg, bF, bH, bI, bJ);
                (!0x0 === bF['transparent'] ? bi : bh)['unshift'](bK);
            },
            'sort': function() {
                bh['length'] > 0x1 && bh['sort'](Yr),
                bi['length'] > 0x1 && bi['sort'](Yu);
            }
        };
    }
    function YZ() {
        var bf = {};
        function bg(bh) {
            var bi = bh['target'];
            bi['removeEventListener']('dispose', bg),
            delete bf[bi['id']];
        }
        return {
            'get': function(bh, bi) {
                var bF, bG = bf[bh['id']];
                return void 0x0 === bG ? (bF = new Yx(),
                bf[bh['id']] = {},
                bf[bh['id']][bi['id']] = bF,
                bh['addEventListener']('dispose', bg)) : void 0x0 === (bF = bG[bi['id']]) && (bF = new Yx(),
                bG[bi['id']] = bF),
                bF;
            },
            'dispose': function() {
                bf = {};
            }
        };
    }
    function Z8() {
        var bf = {};
        return {
            'get': function(bg) {
                if (void 0x0 !== bf[bg['id']])
                    return bf[bg['id']];
                var bh;
                switch (bg['type']) {
                case 'DirectionalLight':
                    bh = {
                        'direction': new eK(),
                        'color': new w7(),
                        'shadow': !0x1,
                        'shadowBias': 0x0,
                        'shadowRadius': 0x1,
                        'shadowMapSize': new eC()
                    };
                    break;
                case 'SpotLight':
                    bh = {
                        'position': new eK(),
                        'direction': new eK(),
                        'color': new w7(),
                        'distance': 0x0,
                        'coneCos': 0x0,
                        'penumbraCos': 0x0,
                        'decay': 0x0,
                        'shadow': !0x1,
                        'shadowBias': 0x0,
                        'shadowRadius': 0x1,
                        'shadowMapSize': new eC()
                    };
                    break;
                case 'PointLight':
                    bh = {
                        'position': new eK(),
                        'color': new w7(),
                        'distance': 0x0,
                        'decay': 0x0,
                        'shadow': !0x1,
                        'shadowBias': 0x0,
                        'shadowRadius': 0x1,
                        'shadowMapSize': new eC(),
                        'shadowCameraNear': 0x1,
                        'shadowCameraFar': 0x3e8
                    };
                    break;
                case 'HemisphereLight':
                    bh = {
                        'direction': new eK(),
                        'skyColor': new w7(),
                        'groundColor': new w7()
                    };
                    break;
                case 'RectAreaLight':
                    bh = {
                        'color': new w7(),
                        'position': new eK(),
                        'halfWidth': new eK(),
                        'halfHeight': new eK()
                    };
                }
                return bf[bg['id']] = bh,
                bh;
            }
        };
    }
    var Zc = 0x0;
    function Zd() {
        for (var bf = new Z8(), bg = {
            'id': Zc++,
            'hash': {
                'stateID': -0x1,
                'directionalLength': -0x1,
                'pointLength': -0x1,
                'spotLength': -0x1,
                'rectAreaLength': -0x1,
                'hemiLength': -0x1,
                'shadowsLength': -0x1
            },
            'ambient': [0x0, 0x0, 0x0],
            'probe': [],
            'directional': [],
            'directionalShadowMap': [],
            'directionalShadowMatrix': [],
            'spot': [],
            'spotShadowMap': [],
            'spotShadowMatrix': [],
            'rectArea': [],
            'point': [],
            'pointShadowMap': [],
            'pointShadowMatrix': [],
            'hemi': []
        }, bh = 0x0; bh < 0x9; bh++)
            bg['probe']['push'](new eK());
        var bi = new eK()
          , bF = new mR()
          , bG = new mR();
        return {
            'setup': function(bh, bH, bI) {
                for (var bJ = 0x0, bK = 0x0, bL = 0x0, bM = 0x0; bM < 0x9; bM++)
                    bg['probe'][bM]['set'](0x0, 0x0, 0x0);
                for (var bN = 0x0, bO = 0x0, bP = 0x0, bQ = 0x0, bR = 0x0, bS = bI['matrixWorldInverse'], bT = (bM = 0x0,
                bh['length']); bM < bT; bM++) {
                    var bU = bh[bM]
                      , bV = bU['color']
                      , bW = bU['intensity']
                      , bX = bU['distance']
                      , bY = bU['shadow'] && bU['shadow']['map'] ? bU['shadow']['map']['texture'] : null;
                    if (bU['isAmbientLight'])
                        bJ += bV['r'] * bW,
                        bK += bV['g'] * bW,
                        bL += bV['b'] * bW;
                    else if (bU['isLightProbe'])
                        for (var bZ = 0x0; bZ < 0x9; bZ++)
                            bg['probe'][bZ]['addScaledVector'](bU['sh']['coefficients'][bZ], bW);
                    else if (bU['isDirectionalLight']) {
                        if ((c1 = bf['get'](bU))['color']['copy'](bU['color'])['multiplyScalar'](bU['intensity']),
                        c1['direction']['setFromMatrixPosition'](bU['matrixWorld']),
                        bi['setFromMatrixPosition'](bU['target']['matrixWorld']),
                        c1['direction']['sub'](bi),
                        c1['direction']['transformDirection'](bS),
                        c1['shadow'] = bU['castShadow'],
                        bU['castShadow']) {
                            var c0 = bU['shadow'];
                            c1['shadowBias'] = c0['bias'],
                            c1['shadowRadius'] = c0['radius'],
                            c1['shadowMapSize'] = c0['mapSize'];
                        }
                        bg['directionalShadowMap'][bN] = bY,
                        bg['directionalShadowMatrix'][bN] = bU['shadow']['matrix'],
                        bg['directional'][bN] = c1,
                        bN++;
                    } else if (bU['isSpotLight'])
                        (c1 = bf['get'](bU))['position']['setFromMatrixPosition'](bU['matrixWorld']),
                        c1['position']['applyMatrix4'](bS),
                        c1['color']['copy'](bV)['multiplyScalar'](bW),
                        c1['distance'] = bX,
                        c1['direction']['setFromMatrixPosition'](bU['matrixWorld']),
                        bi['setFromMatrixPosition'](bU['target']['matrixWorld']),
                        c1['direction']['sub'](bi),
                        c1['direction']['transformDirection'](bS),
                        c1['coneCos'] = Math['cos'](bU['angle']),
                        c1['penumbraCos'] = Math['cos'](bU['angle'] * (0x1 - bU['penumbra'])),
                        c1['decay'] = bU['decay'],
                        c1['shadow'] = bU['castShadow'],
                        bU['castShadow'] && (c0 = bU['shadow'],
                        c1['shadowBias'] = c0['bias'],
                        c1['shadowRadius'] = c0['radius'],
                        c1['shadowMapSize'] = c0['mapSize']),
                        bg['spotShadowMap'][bP] = bY,
                        bg['spotShadowMatrix'][bP] = bU['shadow']['matrix'],
                        bg['spot'][bP] = c1,
                        bP++;
                    else if (bU['isRectAreaLight'])
                        (c1 = bf['get'](bU))['color']['copy'](bV)['multiplyScalar'](bW),
                        c1['position']['setFromMatrixPosition'](bU['matrixWorld']),
                        c1['position']['applyMatrix4'](bS),
                        bG['identity'](),
                        bF['copy'](bU['matrixWorld']),
                        bF['premultiply'](bS),
                        bG['extractRotation'](bF),
                        c1['halfWidth']['set'](0.5 * bU['width'], 0x0, 0x0),
                        c1['halfHeight']['set'](0x0, 0.5 * bU['height'], 0x0),
                        c1['halfWidth']['applyMatrix4'](bG),
                        c1['halfHeight']['applyMatrix4'](bG),
                        bg['rectArea'][bQ] = c1,
                        bQ++;
                    else if (bU['isPointLight'])
                        (c1 = bf['get'](bU))['position']['setFromMatrixPosition'](bU['matrixWorld']),
                        c1['position']['applyMatrix4'](bS),
                        c1['color']['copy'](bU['color'])['multiplyScalar'](bU['intensity']),
                        c1['distance'] = bU['distance'],
                        c1['decay'] = bU['decay'],
                        c1['shadow'] = bU['castShadow'],
                        bU['castShadow'] && (c0 = bU['shadow'],
                        c1['shadowBias'] = c0['bias'],
                        c1['shadowRadius'] = c0['radius'],
                        c1['shadowMapSize'] = c0['mapSize'],
                        c1['shadowCameraNear'] = c0['camera']['near'],
                        c1['shadowCameraFar'] = c0['camera']['far']),
                        bg['pointShadowMap'][bO] = bY,
                        bg['pointShadowMatrix'][bO] = bU['shadow']['matrix'],
                        bg['point'][bO] = c1,
                        bO++;
                    else if (bU['isHemisphereLight']) {
                        var c1;
                        (c1 = bf['get'](bU))['direction']['setFromMatrixPosition'](bU['matrixWorld']),
                        c1['direction']['transformDirection'](bS),
                        c1['direction']['normalize'](),
                        c1['skyColor']['copy'](bU['color'])['multiplyScalar'](bW),
                        c1['groundColor']['copy'](bU['groundColor'])['multiplyScalar'](bW),
                        bg['hemi'][bR] = c1,
                        bR++;
                    }
                }
                bg['ambient'][0x0] = bJ,
                bg['ambient'][0x1] = bK,
                bg['ambient'][0x2] = bL,
                bg['directional']['length'] = bN,
                bg['spot']['length'] = bP,
                bg['rectArea']['length'] = bQ,
                bg['point']['length'] = bO,
                bg['hemi']['length'] = bR,
                bg['hash']['stateID'] = bg['id'],
                bg['hash']['directionalLength'] = bN,
                bg['hash']['pointLength'] = bO,
                bg['hash']['spotLength'] = bP,
                bg['hash']['rectAreaLength'] = bQ,
                bg['hash']['hemiLength'] = bR,
                bg['hash']['shadowsLength'] = bH['length'];
            },
            'state': bg
        };
    }
    function ZG() {
        var bf = new Zd()
          , bg = []
          , bh = [];
        return {
            'init': function() {
                bg['length'] = 0x0,
                bh['length'] = 0x0;
            },
            'state': {
                'lightsArray': bg,
                'shadowsArray': bh,
                'lights': bf
            },
            'setupLights': function(bi) {
                bf['setup'](bg, bh, bi);
            },
            'pushLight': function(bf) {
                bg['push'](bf);
            },
            'pushShadow': function(bf) {
                bh['push'](bf);
            }
        };
    }
    function ZN() {
        var bf = {};
        function bg(bh) {
            var bi = bh['target'];
            bi['removeEventListener']('dispose', bg),
            delete bf[bi['id']];
        }
        return {
            'get': function(bh, bi) {
                var bF;
                return void 0x0 === bf[bh['id']] ? (bF = new ZG(),
                bf[bh['id']] = {},
                bf[bh['id']][bi['id']] = bF,
                bh['addEventListener']('dispose', bg)) : void 0x0 === bf[bh['id']][bi['id']] ? (bF = new ZG(),
                bf[bh['id']][bi['id']] = bF) : bF = bf[bh['id']][bi['id']],
                bF;
            },
            'dispose': function() {
                bf = {};
            }
        };
    }
    function ZV(bf) {
        Kf['call'](this),
        this['type'] = 'MeshDepthMaterial',
        this['depthPacking'] = dY,
        this['skinning'] = !0x1,
        this['morphTargets'] = !0x1,
        this['map'] = null,
        this['alphaMap'] = null,
        this['displacementMap'] = null,
        this['displacementScale'] = 0x1,
        this['displacementBias'] = 0x0,
        this['wireframe'] = !0x1,
        this['wireframeLinewidth'] = 0x1,
        this['fog'] = !0x1,
        this['lights'] = !0x1,
        this['setValues'](bf);
    }
    function ZX(bf) {
        Kf['call'](this),
        this['type'] = 'MeshDistanceMaterial',
        this['referencePosition'] = new eK(),
        this['nearDistance'] = 0x1,
        this['farDistance'] = 0x3e8,
        this['skinning'] = !0x1,
        this['morphTargets'] = !0x1,
        this['map'] = null,
        this['alphaMap'] = null,
        this['displacementMap'] = null,
        this['displacementScale'] = 0x1,
        this['displacementBias'] = 0x0,
        this['fog'] = !0x1,
        this['lights'] = !0x1,
        this['setValues'](bf);
    }
    function ZZ(bf, bg, bh) {
        for (var bi = new mK(), bF = new mR(), bG = new eC(), bH = new eC(bh,bh), bI = new eK(), bJ = new eK(), bK = 0x1, bL = 0x2, bM = 0x1 + (bK | bL), bN = new Array(bM), bO = new Array(bM), bP = {}, bQ = {
            0: bU,
            1: bT,
            2: bV
        }, bS = [new eK(0x1,0x0,0x0), new eK(-0x1,0x0,0x0), new eK(0x0,0x0,0x1), new eK(0x0,0x0,-0x1), new eK(0x0,0x1,0x0), new eK(0x0,-0x1,0x0)], bW = [new eK(0x0,0x1,0x0), new eK(0x0,0x1,0x0), new eK(0x0,0x1,0x0), new eK(0x0,0x1,0x0), new eK(0x0,0x0,0x1), new eK(0x0,0x0,-0x1)], bX = [new m7(), new m7(), new m7(), new m7(), new m7(), new m7()], bY = 0x0; bY !== bM; ++bY) {
            var bZ = 0x0 != (bY & bK)
              , c0 = 0x0 != (bY & bL)
              , c2 = new ZV({
                'depthPacking': dZ,
                'morphTargets': bZ,
                'skinning': c0
            });
            bN[bY] = c2;
            var c3 = new ZX({
                'morphTargets': bZ,
                'skinning': c0
            });
            bO[bY] = c3;
        }
        var c4 = this;
        function c5(bg, bh, bi, bF, bG, bH) {
            var bI = bg['geometry']
              , bJ = null
              , bM = bN
              , bR = bg['customDepthMaterial'];
            if (bi && (bM = bO,
            bR = bg['customDistanceMaterial']),
            bR)
                bJ = bR;
            else {
                var bS = !0x1;
                bh['morphTargets'] && (bI && bI['isBufferGeometry'] ? bS = bI['morphAttributes'] && bI['morphAttributes']['position'] && bI['morphAttributes']['position']['length'] > 0x0 : bI && bI['isGeometry'] && (bS = bI['morphTargets'] && bI['morphTargets']['length'] > 0x0)),
                bg['isSkinnedMesh'] && !0x1 === bh['skinning'] && console['warn']('THREE.WebGLShadowMap:\x20THREE.SkinnedMesh\x20with\x20material.skinning\x20set\x20to\x20false:', bg);
                var bT = bg['isSkinnedMesh'] && bh['skinning']
                  , bU = 0x0;
                bS && (bU |= bK),
                bT && (bU |= bL),
                bJ = bM[bU];
            }
            if (bf['localClippingEnabled'] && !0x0 === bh['clipShadows'] && 0x0 !== bh['clippingPlanes']['length']) {
                var bV = bJ['uuid']
                  , bW = bh['uuid']
                  , bX = bP[bV];
                void 0x0 === bX && (bX = {},
                bP[bV] = bX);
                var bY = bX[bW];
                void 0x0 === bY && (bY = bJ['clone'](),
                bX[bW] = bY),
                bJ = bY;
            }
            return bJ['visible'] = bh['visible'],
            bJ['wireframe'] = bh['wireframe'],
            bJ['side'] = null != bh['shadowSide'] ? bh['shadowSide'] : bQ[bh['side']],
            bJ['clipShadows'] = bh['clipShadows'],
            bJ['clippingPlanes'] = bh['clippingPlanes'],
            bJ['clipIntersection'] = bh['clipIntersection'],
            bJ['wireframeLinewidth'] = bh['wireframeLinewidth'],
            bJ['linewidth'] = bh['linewidth'],
            bi && bJ['isMeshDistanceMaterial'] && (bJ['referencePosition']['copy'](bF),
            bJ['nearDistance'] = bG,
            bJ['farDistance'] = bH),
            bJ;
        }
        function c6(bh, bF, bG, bH) {
            if (!0x1 !== bh['visible']) {
                if (bh['layers']['test'](bF['layers']) && (bh['isMesh'] || bh['isLine'] || bh['isPoints']) && bh['castShadow'] && (!bh['frustumCulled'] || bi['intersectsObject'](bh))) {
                    bh['modelViewMatrix']['multiplyMatrices'](bG['matrixWorldInverse'], bh['matrixWorld']);
                    var bI = bg['update'](bh)
                      , bK = bh['material'];
                    if (Array['isArray'](bK))
                        for (var bL = bI['groups'], bM = 0x0, bN = bL['length']; bM < bN; bM++) {
                            var bO = bL[bM]
                              , bP = bK[bO['materialIndex']];
                            if (bP && bP['visible']) {
                                var bQ = c5(bh, bP, bH, bJ, bG['near'], bG['far']);
                                bf['renderBufferDirect'](bG, null, bI, bQ, bh, bO);
                            }
                        }
                    else if (bK['visible']) {
                        bQ = c5(bh, bK, bH, bJ, bG['near'], bG['far']);
                        bf['renderBufferDirect'](bG, null, bI, bQ, bh, null);
                    }
                }
                for (var bR = bh['children'], bS = 0x0, bT = bR['length']; bS < bT; bS++)
                    c6(bR[bS], bF, bG, bH);
            }
        }
        this['enabled'] = !0x1,
        this['autoUpdate'] = !0x0,
        this['needsUpdate'] = !0x1,
        this['type'] = bR,
        this['render'] = function(bg, bh, bK) {
            if (!0x1 !== c4['enabled'] && (!0x1 !== c4['autoUpdate'] || !0x1 !== c4['needsUpdate']) && 0x0 !== bg['length']) {
                var bL, bM = bf['getRenderTarget'](), bN = bf['getActiveCubeFace'](), bO = bf['getActiveMipMapLevel'](), bP = bf['state'];
                bP['setBlending'](c1),
                bP['buffers']['color']['setClear'](0x1, 0x1, 0x1, 0x1),
                bP['buffers']['depth']['setTest'](!0x0),
                bP['setScissorTest'](!0x1);
                for (var bQ = 0x0, bR = bg['length']; bQ < bR; bQ++) {
                    var bT = bg[bQ]
                      , bU = bT['shadow']
                      , bV = bT && bT['isPointLight'];
                    if (void 0x0 !== bU) {
                        var bY = bU['camera'];
                        if (bG['copy'](bU['mapSize']),
                        bG['min'](bH),
                        bV) {
                            var bZ = bG['x']
                              , c0 = bG['y'];
                            bX[0x0]['set'](0x2 * bZ, c0, bZ, c0),
                            bX[0x1]['set'](0x0, c0, bZ, c0),
                            bX[0x2]['set'](0x3 * bZ, c0, bZ, c0),
                            bX[0x3]['set'](bZ, c0, bZ, c0),
                            bX[0x4]['set'](0x3 * bZ, 0x0, bZ, c0),
                            bX[0x5]['set'](bZ, 0x0, bZ, c0),
                            bG['x'] *= 0x4,
                            bG['y'] *= 0x2;
                        }
                        if (null === bU['map']) {
                            var c2 = {
                                'minFilter': cP,
                                'magFilter': cP,
                                'format': d9
                            };
                            bU['map'] = new mc(bG['x'],bG['y'],c2),
                            bU['map']['texture']['name'] = bT['name'] + '.shadowMap',
                            bY['updateProjectionMatrix']();
                        }
                        bU['isSpotLightShadow'] && bU['update'](bT);
                        var c3 = bU['map']
                          , c5 = bU['matrix'];
                        bJ['setFromMatrixPosition'](bT['matrixWorld']),
                        bY['position']['copy'](bJ),
                        bV ? (bL = 0x6,
                        c5['makeTranslation'](-bJ['x'], -bJ['y'], -bJ['z'])) : (bL = 0x1,
                        bI['setFromMatrixPosition'](bT['target']['matrixWorld']),
                        bY['lookAt'](bI),
                        bY['updateMatrixWorld'](),
                        c5['set'](0.5, 0x0, 0x0, 0.5, 0x0, 0.5, 0x0, 0.5, 0x0, 0x0, 0.5, 0.5, 0x0, 0x0, 0x0, 0x1),
                        c5['multiply'](bY['projectionMatrix']),
                        c5['multiply'](bY['matrixWorldInverse'])),
                        bf['setRenderTarget'](c3),
                        bf['clear']();
                        for (var c7 = 0x0; c7 < bL; c7++) {
                            if (bV) {
                                bI['copy'](bY['position']),
                                bI['add'](bS[c7]),
                                bY['up']['copy'](bW[c7]),
                                bY['lookAt'](bI),
                                bY['updateMatrixWorld']();
                                var c8 = bX[c7];
                                bP['viewport'](c8);
                            }
                            bF['multiplyMatrices'](bY['projectionMatrix'], bY['matrixWorldInverse']),
                            bi['setFromMatrix'](bF),
                            c6(bh, bK, bY, bV);
                        }
                    } else
                        console['warn']('THREE.WebGLShadowMap:', bT, 'has\x20no\x20shadow.');
                }
                c4['needsUpdate'] = !0x1,
                bf['setRenderTarget'](bM, bN, bO);
            }
        }
        ;
    }
    function a1i(bf, bg, bh, bi) {
        var bF = new function() {
            var bg = !0x1
              , bh = new m7()
              , bi = null
              , bF = new m7(0x0,0x0,0x0,0x0);
            return {
                'setMask': function(bh) {
                    bi === bh || bg || (bf['colorMask'](bh, bh, bh, bh),
                    bi = bh);
                },
                'setLocked': function(bf) {
                    bg = bf;
                },
                'setClear': function(bg, bi, bG, bH, bI) {
                    !0x0 === bI && (bg *= bH,
                    bi *= bH,
                    bG *= bH),
                    bh['set'](bg, bi, bG, bH),
                    !0x1 === bF['equals'](bh) && (bf['clearColor'](bg, bi, bG, bH),
                    bF['copy'](bh));
                },
                'reset': function() {
                    bg = !0x1,
                    bi = null,
                    bF['set'](-0x1, 0x0, 0x0, 0x0);
                }
            };
        }
        ()
          , bG = new function() {
            var bg = !0x1
              , bh = null
              , bi = null
              , bF = null;
            return {
                'setTest': function(bf) {
                    bf ? cy(0xb71) : cz(0xb71);
                },
                'setMask': function(bi) {
                    bh === bi || bg || (bf['depthMask'](bi),
                    bh = bi);
                },
                'setFunc': function(bg) {
                    if (bi !== bg) {
                        if (bg)
                            switch (bg) {
                            case cn:
                                bf['depthFunc'](0x200);
                                break;
                            case co:
                                bf['depthFunc'](0x207);
                                break;
                            case cp:
                                bf['depthFunc'](0x201);
                                break;
                            case cq:
                                bf['depthFunc'](0x203);
                                break;
                            case cr:
                                bf['depthFunc'](0x202);
                                break;
                            case cs:
                                bf['depthFunc'](0x206);
                                break;
                            case ct:
                                bf['depthFunc'](0x204);
                                break;
                            case cu:
                                bf['depthFunc'](0x205);
                                break;
                            default:
                                bf['depthFunc'](0x203);
                            }
                        else
                            bf['depthFunc'](0x203);
                        bi = bg;
                    }
                },
                'setLocked': function(bf) {
                    bg = bf;
                },
                'setClear': function(bg) {
                    bF !== bg && (bf['clearDepth'](bg),
                    bF = bg);
                },
                'reset': function() {
                    bg = !0x1,
                    bh = null,
                    bi = null,
                    bF = null;
                }
            };
        }
        ()
          , bH = new function() {
            var bg = !0x1
              , bh = null
              , bi = null
              , bF = null
              , bG = null
              , bH = null
              , bI = null
              , bJ = null
              , bK = null;
            return {
                'setTest': function(bf) {
                    bf ? cy(0xb90) : cz(0xb90);
                },
                'setMask': function(bi) {
                    bh === bi || bg || (bf['stencilMask'](bi),
                    bh = bi);
                },
                'setFunc': function(bg, bh, bH) {
                    bi === bg && bF === bh && bG === bH || (bf['stencilFunc'](bg, bh, bH),
                    bi = bg,
                    bF = bh,
                    bG = bH);
                },
                'setOp': function(bg, bh, bi) {
                    bH === bg && bI === bh && bJ === bi || (bf['stencilOp'](bg, bh, bi),
                    bH = bg,
                    bI = bh,
                    bJ = bi);
                },
                'setLocked': function(bf) {
                    bg = bf;
                },
                'setClear': function(bg) {
                    bK !== bg && (bf['clearStencil'](bg),
                    bK = bg);
                },
                'reset': function() {
                    bg = !0x1,
                    bh = null,
                    bi = null,
                    bF = null,
                    bG = null,
                    bH = null,
                    bI = null,
                    bJ = null,
                    bK = null;
                }
            };
        }
        ()
          , bI = bf['getParameter'](0x8869)
          , bJ = new Uint8Array(bI)
          , bN = new Uint8Array(bI)
          , bO = new Uint8Array(bI)
          , bP = {}
          , bQ = null
          , bR = null
          , bS = null
          , bT = null
          , bW = null
          , bX = null
          , bY = null
          , bZ = null
          , c0 = null
          , c8 = null
          , c9 = !0x1
          , ca = null
          , cb = null
          , cc = null
          , cd = null
          , ce = null
          , cf = bf['getParameter'](0x8b4d)
          , cg = !0x1
          , ch = 0x0
          , ci = bf['getParameter'](0x1f02);
        -0x1 !== ci['indexOf']('WebGL') ? (ch = parseFloat(/^WebGL\ ([0-9])/['exec'](ci)[0x1]),
        cg = ch >= 0x1) : -0x1 !== ci['indexOf']('OpenGL\x20ES') && (ch = parseFloat(/^OpenGL\ ES\ ([0-9])/['exec'](ci)[0x1]),
        cg = ch >= 0x2);
        var cj = null
          , ck = {}
          , cl = new m7()
          , cm = new m7();
        function cv(bg, bh, bi) {
            var bF = new Uint8Array(0x4)
              , bG = bf['createTexture']();
            bf['bindTexture'](bg, bG),
            bf['texParameteri'](bg, 0x2801, 0x2600),
            bf['texParameteri'](bg, 0x2800, 0x2600);
            for (var bH = 0x0; bH < bi; bH++)
                bf['texImage2D'](bh + bH, 0x0, 0x1908, 0x1, 0x1, 0x0, 0x1908, 0x1401, bF);
            return bG;
        }
        var cw = {};
        function cx(bh, bF) {
            (bJ[bh] = 0x1,
            0x0 === bN[bh] && (bf['enableVertexAttribArray'](bh),
            bN[bh] = 0x1),
            bO[bh] !== bF) && ((bi['isWebGL2'] ? bf : bg['get']('ANGLE_instanced_arrays'))[bi['isWebGL2'] ? 'vertexAttribDivisor' : 'vertexAttribDivisorANGLE'](bh, bF),
            bO[bh] = bF);
        }
        function cy(bg) {
            !0x0 !== bP[bg] && (bf['enable'](bg),
            bP[bg] = !0x0);
        }
        function cz(bg) {
            !0x1 !== bP[bg] && (bf['disable'](bg),
            bP[bg] = !0x1);
        }
        function cA(bg, bi, bF, bG, bH, bI, bJ, bK) {
            if (bg !== c1) {
                if (bS || (cy(0xbe2),
                bS = !0x0),
                bg === c6)
                    bH = bH || bi,
                    bI = bI || bF,
                    bJ = bJ || bG,
                    bi === bW && bH === bZ || (bf['blendEquationSeparate'](bh['convert'](bi), bh['convert'](bH)),
                    bW = bi,
                    bZ = bH),
                    bF === bX && bG === bY && bI === c0 && bJ === c8 || (bf['blendFuncSeparate'](bh['convert'](bF), bh['convert'](bG), bh['convert'](bI), bh['convert'](bJ)),
                    bX = bF,
                    bY = bG,
                    c0 = bI,
                    c8 = bJ),
                    bT = bg,
                    c9 = null;
                else if (bg !== bT || bK !== c9) {
                    if (bW === c7 && bZ === c7 || (bf['blendEquation'](0x8006),
                    bW = c7,
                    bZ = c7),
                    bK)
                        switch (bg) {
                        case c2:
                            bf['blendFuncSeparate'](0x1, 0x303, 0x1, 0x303);
                            break;
                        case c3:
                            bf['blendFunc'](0x1, 0x1);
                            break;
                        case c4:
                            bf['blendFuncSeparate'](0x0, 0x0, 0x301, 0x303);
                            break;
                        case c5:
                            bf['blendFuncSeparate'](0x0, 0x300, 0x0, 0x302);
                            break;
                        default:
                            console['error']('THREE.WebGLState:\x20Invalid\x20blending:\x20', bg);
                        }
                    else
                        switch (bg) {
                        case c2:
                            bf['blendFuncSeparate'](0x302, 0x303, 0x1, 0x303);
                            break;
                        case c3:
                            bf['blendFunc'](0x302, 0x1);
                            break;
                        case c4:
                            bf['blendFunc'](0x0, 0x301);
                            break;
                        case c5:
                            bf['blendFunc'](0x0, 0x300);
                            break;
                        default:
                            console['error']('THREE.WebGLState:\x20Invalid\x20blending:\x20', bg);
                        }
                    bX = null,
                    bY = null,
                    c0 = null,
                    c8 = null,
                    bT = bg,
                    c9 = bK;
                }
            } else
                bS && (cz(0xbe2),
                bS = !0x1);
        }
        function cB(bg) {
            ca !== bg && (bg ? bf['frontFace'](0x900) : bf['frontFace'](0x901),
            ca = bg);
        }
        function cC(bg) {
            bg !== bK ? (cy(0xb44),
            bg !== cb && (bg === bL ? bf['cullFace'](0x405) : bg === bM ? bf['cullFace'](0x404) : bf['cullFace'](0x408))) : cz(0xb44),
            cb = bg;
        }
        function cD(bg, bh, bi) {
            bg ? (cy(0x8037),
            cd === bh && ce === bi || (bf['polygonOffset'](bh, bi),
            cd = bh,
            ce = bi)) : cz(0x8037);
        }
        function cE(bg) {
            void 0x0 === bg && (bg = 0x84c0 + cf - 0x1),
            cj !== bg && (bf['activeTexture'](bg),
            cj = bg);
        }
        return cw[0xde1] = cv(0xde1, 0xde1, 0x1),
        cw[0x8513] = cv(0x8513, 0x8515, 0x6),
        bF['setClear'](0x0, 0x0, 0x0, 0x1),
        bG['setClear'](0x1),
        bH['setClear'](0x0),
        cy(0xb71),
        bG['setFunc'](cq),
        cB(!0x1),
        cC(bL),
        cy(0xb44),
        cA(c1),
        {
            'buffers': {
                'color': bF,
                'depth': bG,
                'stencil': bH
            },
            'initAttributes': function() {
                for (var bf = 0x0, bg = bJ['length']; bf < bg; bf++)
                    bJ[bf] = 0x0;
            },
            'enableAttribute': function(bf) {
                cx(bf, 0x0);
            },
            'enableAttributeAndDivisor': cx,
            'disableUnusedAttributes': function() {
                for (var bg = 0x0, bh = bN['length']; bg !== bh; ++bg)
                    bN[bg] !== bJ[bg] && (bf['disableVertexAttribArray'](bg),
                    bN[bg] = 0x0);
            },
            'enable': cy,
            'disable': cz,
            'getCompressedTextureFormats': function() {
                if (null === bQ && (bQ = [],
                bg['get']('WEBGL_compressed_texture_pvrtc') || bg['get']('WEBGL_compressed_texture_s3tc') || bg['get']('WEBGL_compressed_texture_etc1') || bg['get']('WEBGL_compressed_texture_astc')))
                    for (var bh = bf['getParameter'](0x86a3), bi = 0x0; bi < bh['length']; bi++)
                        bQ['push'](bh[bi]);
                return bQ;
            },
            'useProgram': function(bg) {
                return bR !== bg && (bf['useProgram'](bg),
                bR = bg,
                !0x0);
            },
            'setBlending': cA,
            'setMaterial': function(bf, bg) {
                bf['side'] === bV ? cz(0xb44) : cy(0xb44);
                var bh = bf['side'] === bU;
                bg && (bh = !bh),
                cB(bh),
                bf['blending'] === c2 && !0x1 === bf['transparent'] ? cA(c1) : cA(bf['blending'], bf['blendEquation'], bf['blendSrc'], bf['blendDst'], bf['blendEquationAlpha'], bf['blendSrcAlpha'], bf['blendDstAlpha'], bf['premultipliedAlpha']),
                bG['setFunc'](bf['depthFunc']),
                bG['setTest'](bf['depthTest']),
                bG['setMask'](bf['depthWrite']),
                bF['setMask'](bf['colorWrite']),
                cD(bf['polygonOffset'], bf['polygonOffsetFactor'], bf['polygonOffsetUnits']);
            },
            'setFlipSided': cB,
            'setCullFace': cC,
            'setLineWidth': function(bg) {
                bg !== cc && (cg && bf['lineWidth'](bg),
                cc = bg);
            },
            'setPolygonOffset': cD,
            'setScissorTest': function(bf) {
                bf ? cy(0xc11) : cz(0xc11);
            },
            'activeTexture': cE,
            'bindTexture': function(bg, bh) {
                null === cj && cE();
                var bi = ck[cj];
                void 0x0 === bi && (bi = {
                    'type': void 0x0,
                    'texture': void 0x0
                },
                ck[cj] = bi),
                bi['type'] === bg && bi['texture'] === bh || (bf['bindTexture'](bg, bh || cw[bg]),
                bi['type'] = bg,
                bi['texture'] = bh);
            },
            'compressedTexImage2D': function() {
                try {
                    bf['compressedTexImage2D']['apply'](bf, arguments);
                } catch (a3k) {
                    console['error']('THREE.WebGLState:', a3k);
                }
            },
            'texImage2D': function() {
                try {
                    bf['texImage2D']['apply'](bf, arguments);
                } catch (a3l) {
                    console['error']('THREE.WebGLState:', a3l);
                }
            },
            'texImage3D': function() {
                try {
                    bf['texImage3D']['apply'](bf, arguments);
                } catch (a3m) {
                    console['error']('THREE.WebGLState:', a3m);
                }
            },
            'scissor': function(bg) {
                !0x1 === cl['equals'](bg) && (bf['scissor'](bg['x'], bg['y'], bg['z'], bg['w']),
                cl['copy'](bg));
            },
            'viewport': function(bg) {
                !0x1 === cm['equals'](bg) && (bf['viewport'](bg['x'], bg['y'], bg['z'], bg['w']),
                cm['copy'](bg));
            },
            'reset': function() {
                for (var bg = 0x0; bg < bN['length']; bg++)
                    0x1 === bN[bg] && (bf['disableVertexAttribArray'](bg),
                    bN[bg] = 0x0);
                bP = {},
                bQ = null,
                cj = null,
                ck = {},
                bR = null,
                bT = null,
                ca = null,
                cb = null,
                bF['reset'](),
                bG['reset'](),
                bH['reset']();
            }
        };
    }
    function a3q(bf, bg, bh, bi, bF, bG, bH) {
        var bI, bJ = {}, bK = 'undefined' != typeof OffscreenCanvas;
        function bL(bf, bg) {
            return bK ? new OffscreenCanvas(bf,bg) : document['createElementNS']('http://www.w3.org/1999/xhtml', 'canvas');
        }
        function bM(bf, bg, bh, bi) {
            var bF = 0x1;
            if ((bf['width'] > bi || bf['height'] > bi) && (bF = bi / Math['max'](bf['width'], bf['height'])),
            bF < 0x1 || !0x0 === bg) {
                if ('undefined' != typeof HTMLImageElement && bf instanceof HTMLImageElement || 'undefined' != typeof HTMLCanvasElement && bf instanceof HTMLCanvasElement || 'undefined' != typeof ImageBitmap && bf instanceof ImageBitmap) {
                    var bG = bg ? e2['floorPowerOfTwo'] : Math['floor']
                      , bH = bG(bF * bf['width'])
                      , bJ = bG(bF * bf['height']);
                    void 0x0 === bI && (bI = bL(bH, bJ));
                    var bK = bh ? bL(bH, bJ) : bI;
                    return bK['width'] = bH,
                    bK['height'] = bJ,
                    bK['getContext']('2d')['drawImage'](bf, 0x0, 0x0, bH, bJ),
                    console['warn']('THREE.WebGLRenderer:\x20Texture\x20has\x20been\x20resized\x20from\x20(' + bf['width'] + 'x' + bf['height'] + ')\x20to\x20(' + bH + 'x' + bJ + ').'),
                    bK;
                }
                return 'data'in bf && console['warn']('THREE.WebGLRenderer:\x20Image\x20in\x20DataTexture\x20is\x20too\x20big\x20(' + bf['width'] + 'x' + bf['height'] + ').'),
                bf;
            }
            return bf;
        }
        function bN(bf) {
            return e2['isPowerOfTwo'](bf['width']) && e2['isPowerOfTwo'](bf['height']);
        }
        function bO(bf, bg) {
            return bf['generateMipmaps'] && bg && bf['minFilter'] !== cP && bf['minFilter'] !== cS;
        }
        function bP(bg, bh, bF, bG) {
            bf['generateMipmap'](bg),
            bi['get'](bh)['__maxMipLevel'] = Math['log'](Math['max'](bF, bG)) * Math['LOG2E'];
        }
        function bQ(bf, bh) {
            if (!bF['isWebGL2'])
                return bf;
            var bi = bf;
            return 0x1903 === bf && (0x1406 === bh && (bi = 0x822e),
            0x140b === bh && (bi = 0x822d),
            0x1401 === bh && (bi = 0x8229)),
            0x1907 === bf && (0x1406 === bh && (bi = 0x8815),
            0x140b === bh && (bi = 0x881b),
            0x1401 === bh && (bi = 0x8051)),
            0x1908 === bf && (0x1406 === bh && (bi = 0x8814),
            0x140b === bh && (bi = 0x881a),
            0x1401 === bh && (bi = 0x8058)),
            0x822d === bi || 0x822e === bi || 0x881a === bi || 0x8814 === bi ? bg['get']('EXT_color_buffer_float') : 0x881b !== bi && 0x8815 !== bi || console['warn']('THREE.WebGLRenderer:\x20Floating\x20point\x20textures\x20with\x20RGB\x20format\x20not\x20supported.\x20Please\x20use\x20RGBA\x20instead.'),
            bi;
        }
        function bR(bf) {
            return bf === cP || bf === cQ || bf === cR ? 0x2600 : 0x2601;
        }
        function bS(bg) {
            var bh = bg['target'];
            bh['removeEventListener']('dispose', bS),
            function(bg) {
                var bh = bi['get'](bg);
                if (void 0x0 === bh['__webglInit'])
                    return;
                bf['deleteTexture'](bh['__webglTexture']),
                bi['remove'](bg);
            }(bh),
            bh['isVideoTexture'] && delete bJ[bh['id']],
            bH['memory']['textures']--;
        }
        function bT(bg) {
            var bh = bg['target'];
            bh['removeEventListener']('dispose', bT),
            function(bg) {
                var bh = bi['get'](bg)
                  , bF = bi['get'](bg['texture']);
                if (!bg)
                    return;
                void 0x0 !== bF['__webglTexture'] && bf['deleteTexture'](bF['__webglTexture']);
                bg['depthTexture'] && bg['depthTexture']['dispose']();
                if (bg['isWebGLRenderTargetCube'])
                    for (var bG = 0x0; bG < 0x6; bG++)
                        bf['deleteFramebuffer'](bh['__webglFramebuffer'][bG]),
                        bh['__webglDepthbuffer'] && bf['deleteRenderbuffer'](bh['__webglDepthbuffer'][bG]);
                else
                    bf['deleteFramebuffer'](bh['__webglFramebuffer']),
                    bh['__webglDepthbuffer'] && bf['deleteRenderbuffer'](bh['__webglDepthbuffer']);
                bi['remove'](bg['texture']),
                bi['remove'](bg);
            }(bh),
            bH['memory']['textures']--;
        }
        var bU = 0x0;
        function bV(bf, bg) {
            var bF = bi['get'](bf);
            if (bf['isVideoTexture'] && function(bf) {
                var bg = bf['id']
                  , bh = bH['render']['frame'];
                bJ[bg] !== bh && (bJ[bg] = bh,
                bf['update']());
            }(bf),
            bf['version'] > 0x0 && bF['__version'] !== bf['version']) {
                var bG = bf['image'];
                if (void 0x0 === bG)
                    console['warn']('THREE.WebGLRenderer:\x20Texture\x20marked\x20for\x20update\x20but\x20image\x20is\x20undefined');
                else {
                    if (!0x1 !== bG['complete'])
                        return void c0(bF, bf, bg);
                    console['warn']('THREE.WebGLRenderer:\x20Texture\x20marked\x20for\x20update\x20but\x20image\x20is\x20incomplete');
                }
            }
            bh['activeTexture'](0x84c0 + bg),
            bh['bindTexture'](0xde1, bF['__webglTexture']);
        }
        function bW(bg, bH) {
            var bI = bi['get'](bg);
            if (0x6 === bg['image']['length'])
                if (bg['version'] > 0x0 && bI['__version'] !== bg['version']) {
                    bZ(bI, bg),
                    bh['activeTexture'](0x84c0 + bH),
                    bh['bindTexture'](0x8513, bI['__webglTexture']),
                    bf['pixelStorei'](0x9240, bg['flipY']);
                    for (var bJ = bg && bg['isCompressedTexture'], bK = bg['image'][0x0] && bg['image'][0x0]['isDataTexture'], bL = [], bR = 0x0; bR < 0x6; bR++)
                        bL[bR] = bJ || bK ? bK ? bg['image'][bR]['image'] : bg['image'][bR] : bM(bg['image'][bR], !0x1, !0x0, bF['maxCubemapSize']);
                    var bS = bL[0x0]
                      , bT = bN(bS) || bF['isWebGL2']
                      , bU = bG['convert'](bg['format'])
                      , bV = bG['convert'](bg['type'])
                      , bW = bQ(bU, bV);
                    bY(0x8513, bg, bT);
                    for (bR = 0x0; bR < 0x6; bR++)
                        if (bJ)
                            for (var bX, c0 = bL[bR]['mipmaps'], c1 = 0x0, c2 = c0['length']; c1 < c2; c1++)
                                bX = c0[c1],
                                bg['format'] !== d9 && bg['format'] !== d8 ? bh['getCompressedTextureFormats']()['indexOf'](bU) > -0x1 ? bh['compressedTexImage2D'](0x8515 + bR, c1, bW, bX['width'], bX['height'], 0x0, bX['data']) : console['warn']('THREE.WebGLRenderer:\x20Attempt\x20to\x20load\x20unsupported\x20compressed\x20texture\x20format\x20in\x20.setTextureCube()') : bh['texImage2D'](0x8515 + bR, c1, bW, bX['width'], bX['height'], 0x0, bU, bV, bX['data']);
                        else
                            bK ? bh['texImage2D'](0x8515 + bR, 0x0, bW, bL[bR]['width'], bL[bR]['height'], 0x0, bU, bV, bL[bR]['data']) : bh['texImage2D'](0x8515 + bR, 0x0, bW, bU, bV, bL[bR]);
                    bI['__maxMipLevel'] = bJ ? c0['length'] - 0x1 : 0x0,
                    bO(bg, bT) && bP(0x8513, bg, bS['width'], bS['height']),
                    bI['__version'] = bg['version'],
                    bg['onUpdate'] && bg['onUpdate'](bg);
                } else
                    bh['activeTexture'](0x84c0 + bH),
                    bh['bindTexture'](0x8513, bI['__webglTexture']);
        }
        function bX(bf, bg) {
            bh['activeTexture'](0x84c0 + bg),
            bh['bindTexture'](0x8513, bi['get'](bf)['__webglTexture']);
        }
        function bY(bh, bH, bI) {
            var bJ;
            if (bI ? (bf['texParameteri'](bh, 0x2802, bG['convert'](bH['wrapS'])),
            bf['texParameteri'](bh, 0x2803, bG['convert'](bH['wrapT'])),
            0x806f !== bh && 0x8c1a !== bh || bf['texParameteri'](bh, 0x8072, bG['convert'](bH['wrapR'])),
            bf['texParameteri'](bh, 0x2800, bG['convert'](bH['magFilter'])),
            bf['texParameteri'](bh, 0x2801, bG['convert'](bH['minFilter']))) : (bf['texParameteri'](bh, 0x2802, 0x812f),
            bf['texParameteri'](bh, 0x2803, 0x812f),
            0x806f !== bh && 0x8c1a !== bh || bf['texParameteri'](bh, 0x8072, 0x812f),
            bH['wrapS'] === cN && bH['wrapT'] === cN || console['warn']('THREE.WebGLRenderer:\x20Texture\x20is\x20not\x20power\x20of\x20two.\x20Texture.wrapS\x20and\x20Texture.wrapT\x20should\x20be\x20set\x20to\x20THREE.ClampToEdgeWrapping.'),
            bf['texParameteri'](bh, 0x2800, bR(bH['magFilter'])),
            bf['texParameteri'](bh, 0x2801, bR(bH['minFilter'])),
            bH['minFilter'] !== cP && bH['minFilter'] !== cS && console['warn']('THREE.WebGLRenderer:\x20Texture\x20is\x20not\x20power\x20of\x20two.\x20Texture.minFilter\x20should\x20be\x20set\x20to\x20THREE.NearestFilter\x20or\x20THREE.LinearFilter.')),
            bJ = bg['get']('EXT_texture_filter_anisotropic')) {
                if (bH['type'] === d1 && null === bg['get']('OES_texture_float_linear'))
                    return;
                if (bH['type'] === d2 && null === (bF['isWebGL2'] || bg['get']('OES_texture_half_float_linear')))
                    return;
                (bH['anisotropy'] > 0x1 || bi['get'](bH)['__currentAnisotropy']) && (bf['texParameterf'](bh, bJ['TEXTURE_MAX_ANISOTROPY_EXT'], Math['min'](bH['anisotropy'], bF['getMaxAnisotropy']())),
                bi['get'](bH)['__currentAnisotropy'] = bH['anisotropy']);
            }
        }
        function bZ(bg, bh) {
            void 0x0 === bg['__webglInit'] && (bg['__webglInit'] = !0x0,
            bh['addEventListener']('dispose', bS),
            bg['__webglTexture'] = bf['createTexture'](),
            bH['memory']['textures']++);
        }
        function c0(bg, bi, bH) {
            var bI = 0xde1;
            bi['isDataTexture2DArray'] && (bI = 0x8c1a),
            bi['isDataTexture3D'] && (bI = 0x806f),
            bZ(bg, bi),
            bh['activeTexture'](0x84c0 + bH),
            bh['bindTexture'](bI, bg['__webglTexture']),
            bf['pixelStorei'](0x9240, bi['flipY']),
            bf['pixelStorei'](0x9241, bi['premultiplyAlpha']),
            bf['pixelStorei'](0xcf5, bi['unpackAlignment']);
            var bJ = function(bf) {
                return !bF['isWebGL2'] && (bf['wrapS'] !== cN || bf['wrapT'] !== cN || bf['minFilter'] !== cP && bf['minFilter'] !== cS);
            }(bi) && !0x1 === bN(bi['image'])
              , bK = bM(bi['image'], bJ, !0x1, bF['maxTextureSize'])
              , bL = bN(bK) || bF['isWebGL2']
              , bR = bG['convert'](bi['format'])
              , bS = bG['convert'](bi['type'])
              , bT = bQ(bR, bS);
            bY(bI, bi, bL);
            var bU, bV = bi['mipmaps'];
            if (bi['isDepthTexture']) {
                if (bT = 0x1902,
                bi['type'] === d1) {
                    if (!bF['isWebGL2'])
                        throw new Error('Float\x20Depth\x20Texture\x20only\x20supported\x20in\x20WebGL2.0');
                    bT = 0x8cac;
                } else
                    bF['isWebGL2'] && (bT = 0x81a5);
                bi['format'] === dd && 0x1902 === bT && bi['type'] !== cY && bi['type'] !== d0 && (console['warn']('THREE.WebGLRenderer:\x20Use\x20UnsignedShortType\x20or\x20UnsignedIntType\x20for\x20DepthFormat\x20DepthTexture.'),
                bi['type'] = cY,
                bS = bG['convert'](bi['type'])),
                bi['format'] === de && (bT = 0x84f9,
                bi['type'] !== d6 && (console['warn']('THREE.WebGLRenderer:\x20Use\x20UnsignedInt248Type\x20for\x20DepthStencilFormat\x20DepthTexture.'),
                bi['type'] = d6,
                bS = bG['convert'](bi['type']))),
                bh['texImage2D'](0xde1, 0x0, bT, bK['width'], bK['height'], 0x0, bR, bS, null);
            } else if (bi['isDataTexture'])
                if (bV['length'] > 0x0 && bL) {
                    for (var bW = 0x0, bX = bV['length']; bW < bX; bW++)
                        bU = bV[bW],
                        bh['texImage2D'](0xde1, bW, bT, bU['width'], bU['height'], 0x0, bR, bS, bU['data']);
                    bi['generateMipmaps'] = !0x1,
                    bg['__maxMipLevel'] = bV['length'] - 0x1;
                } else
                    bh['texImage2D'](0xde1, 0x0, bT, bK['width'], bK['height'], 0x0, bR, bS, bK['data']),
                    bg['__maxMipLevel'] = 0x0;
            else if (bi['isCompressedTexture']) {
                for (bW = 0x0,
                bX = bV['length']; bW < bX; bW++)
                    bU = bV[bW],
                    bi['format'] !== d9 && bi['format'] !== d8 ? bh['getCompressedTextureFormats']()['indexOf'](bR) > -0x1 ? bh['compressedTexImage2D'](0xde1, bW, bT, bU['width'], bU['height'], 0x0, bU['data']) : console['warn']('THREE.WebGLRenderer:\x20Attempt\x20to\x20load\x20unsupported\x20compressed\x20texture\x20format\x20in\x20.uploadTexture()') : bh['texImage2D'](0xde1, bW, bT, bU['width'], bU['height'], 0x0, bR, bS, bU['data']);
                bg['__maxMipLevel'] = bV['length'] - 0x1;
            } else if (bi['isDataTexture2DArray'])
                bh['texImage3D'](0x8c1a, 0x0, bT, bK['width'], bK['height'], bK['depth'], 0x0, bR, bS, bK['data']),
                bg['__maxMipLevel'] = 0x0;
            else if (bi['isDataTexture3D'])
                bh['texImage3D'](0x806f, 0x0, bT, bK['width'], bK['height'], bK['depth'], 0x0, bR, bS, bK['data']),
                bg['__maxMipLevel'] = 0x0;
            else if (bV['length'] > 0x0 && bL) {
                for (bW = 0x0,
                bX = bV['length']; bW < bX; bW++)
                    bU = bV[bW],
                    bh['texImage2D'](0xde1, bW, bT, bR, bS, bU);
                bi['generateMipmaps'] = !0x1,
                bg['__maxMipLevel'] = bV['length'] - 0x1;
            } else
                bh['texImage2D'](0xde1, 0x0, bT, bR, bS, bK),
                bg['__maxMipLevel'] = 0x0;
            bO(bi, bL) && bP(0xde1, bi, bK['width'], bK['height']),
            bg['__version'] = bi['version'],
            bi['onUpdate'] && bi['onUpdate'](bi);
        }
        function c1(bg, bF, bH, bI) {
            var bJ = bG['convert'](bF['texture']['format'])
              , bK = bG['convert'](bF['texture']['type'])
              , bL = bQ(bJ, bK);
            bh['texImage2D'](bI, 0x0, bL, bF['width'], bF['height'], 0x0, bJ, bK, null),
            bf['bindFramebuffer'](0x8d40, bg),
            bf['framebufferTexture2D'](0x8d40, bH, bI, bi['get'](bF['texture'])['__webglTexture'], 0x0),
            bf['bindFramebuffer'](0x8d40, null);
        }
        function c2(bg, bh, bi) {
            if (bf['bindRenderbuffer'](0x8d41, bg),
            bh['depthBuffer'] && !bh['stencilBuffer']) {
                if (bi) {
                    var bF = c4(bh);
                    bf['renderbufferStorageMultisample'](0x8d41, bF, 0x81a5, bh['width'], bh['height']);
                } else
                    bf['renderbufferStorage'](0x8d41, 0x81a5, bh['width'], bh['height']);
                bf['framebufferRenderbuffer'](0x8d40, 0x8d00, 0x8d41, bg);
            } else if (bh['depthBuffer'] && bh['stencilBuffer']) {
                if (bi) {
                    bF = c4(bh);
                    bf['renderbufferStorageMultisample'](0x8d41, bF, 0x84f9, bh['width'], bh['height']);
                } else
                    bf['renderbufferStorage'](0x8d41, 0x84f9, bh['width'], bh['height']);
                bf['framebufferRenderbuffer'](0x8d40, 0x821a, 0x8d41, bg);
            } else {
                var bH = bQ(bG['convert'](bh['texture']['format']), bG['convert'](bh['texture']['type']));
                if (bi) {
                    bF = c4(bh);
                    bf['renderbufferStorageMultisample'](0x8d41, bF, bH, bh['width'], bh['height']);
                } else
                    bf['renderbufferStorage'](0x8d41, bH, bh['width'], bh['height']);
            }
            bf['bindRenderbuffer'](0x8d41, null);
        }
        function c3(bg) {
            var bh = bi['get'](bg)
              , bF = !0x0 === bg['isWebGLRenderTargetCube'];
            if (bg['depthTexture']) {
                if (bF)
                    throw new Error('target.depthTexture\x20not\x20supported\x20in\x20Cube\x20render\x20targets');
                !function(bg, bh) {
                    if (bh && bh['isWebGLRenderTargetCube'])
                        throw new Error('Depth\x20Texture\x20with\x20cube\x20render\x20targets\x20is\x20not\x20supported');
                    if (bf['bindFramebuffer'](0x8d40, bg),
                    !bh['depthTexture'] || !bh['depthTexture']['isDepthTexture'])
                        throw new Error('renderTarget.depthTexture\x20must\x20be\x20an\x20instance\x20of\x20THREE.DepthTexture');
                    bi['get'](bh['depthTexture'])['__webglTexture'] && bh['depthTexture']['image']['width'] === bh['width'] && bh['depthTexture']['image']['height'] === bh['height'] || (bh['depthTexture']['image']['width'] = bh['width'],
                    bh['depthTexture']['image']['height'] = bh['height'],
                    bh['depthTexture']['needsUpdate'] = !0x0),
                    bV(bh['depthTexture'], 0x0);
                    var bF = bi['get'](bh['depthTexture'])['__webglTexture'];
                    if (bh['depthTexture']['format'] === dd)
                        bf['framebufferTexture2D'](0x8d40, 0x8d00, 0xde1, bF, 0x0);
                    else {
                        if (bh['depthTexture']['format'] !== de)
                            throw new Error('Unknown\x20depthTexture\x20format');
                        bf['framebufferTexture2D'](0x8d40, 0x821a, 0xde1, bF, 0x0);
                    }
                }(bh['__webglFramebuffer'], bg);
            } else if (bF) {
                bh['__webglDepthbuffer'] = [];
                for (var bG = 0x0; bG < 0x6; bG++)
                    bf['bindFramebuffer'](0x8d40, bh['__webglFramebuffer'][bG]),
                    bh['__webglDepthbuffer'][bG] = bf['createRenderbuffer'](),
                    c2(bh['__webglDepthbuffer'][bG], bg);
            } else
                bf['bindFramebuffer'](0x8d40, bh['__webglFramebuffer']),
                bh['__webglDepthbuffer'] = bf['createRenderbuffer'](),
                c2(bh['__webglDepthbuffer'], bg);
            bf['bindFramebuffer'](0x8d40, null);
        }
        function c4(bf) {
            return bF['isWebGL2'] && bf['isWebGLMultisampleRenderTarget'] ? Math['min'](bF['maxSamples'], bf['samples']) : 0x0;
        }
        var c5 = !0x1
          , c6 = !0x1;
        this['allocateTextureUnit'] = function() {
            var bf = bU;
            return bf >= bF['maxTextures'] && console['warn']('THREE.WebGLTextures:\x20Trying\x20to\x20use\x20' + bf + '\x20texture\x20units\x20while\x20this\x20GPU\x20supports\x20only\x20' + bF['maxTextures']),
            bU += 0x1,
            bf;
        }
        ,
        this['resetTextureUnits'] = function() {
            bU = 0x0;
        }
        ,
        this['setTexture2D'] = bV,
        this['setTexture2DArray'] = function(bf, bg) {
            var bF = bi['get'](bf);
            bf['version'] > 0x0 && bF['__version'] !== bf['version'] ? c0(bF, bf, bg) : (bh['activeTexture'](0x84c0 + bg),
            bh['bindTexture'](0x8c1a, bF['__webglTexture']));
        }
        ,
        this['setTexture3D'] = function(bf, bg) {
            var bF = bi['get'](bf);
            bf['version'] > 0x0 && bF['__version'] !== bf['version'] ? c0(bF, bf, bg) : (bh['activeTexture'](0x84c0 + bg),
            bh['bindTexture'](0x806f, bF['__webglTexture']));
        }
        ,
        this['setTextureCube'] = bW,
        this['setTextureCubeDynamic'] = bX,
        this['setupRenderTarget'] = function(bg) {
            var bI = bi['get'](bg)
              , bJ = bi['get'](bg['texture']);
            bg['addEventListener']('dispose', bT),
            bJ['__webglTexture'] = bf['createTexture'](),
            bH['memory']['textures']++;
            var bK = !0x0 === bg['isWebGLRenderTargetCube']
              , bL = !0x0 === bg['isWebGLMultisampleRenderTarget']
              , bM = bN(bg) || bF['isWebGL2'];
            if (bK) {
                bI['__webglFramebuffer'] = [];
                for (var bR = 0x0; bR < 0x6; bR++)
                    bI['__webglFramebuffer'][bR] = bf['createFramebuffer']();
            } else if (bI['__webglFramebuffer'] = bf['createFramebuffer'](),
            bL)
                if (bF['isWebGL2']) {
                    bI['__webglMultisampledFramebuffer'] = bf['createFramebuffer'](),
                    bI['__webglColorRenderbuffer'] = bf['createRenderbuffer'](),
                    bf['bindRenderbuffer'](0x8d41, bI['__webglColorRenderbuffer']);
                    var bS = bQ(bG['convert'](bg['texture']['format']), bG['convert'](bg['texture']['type']))
                      , bU = c4(bg);
                    bf['renderbufferStorageMultisample'](0x8d41, bU, bS, bg['width'], bg['height']),
                    bf['bindFramebuffer'](0x8d40, bI['__webglMultisampledFramebuffer']),
                    bf['framebufferRenderbuffer'](0x8d40, 0x8ce0, 0x8d41, bI['__webglColorRenderbuffer']),
                    bf['bindRenderbuffer'](0x8d41, null),
                    bg['depthBuffer'] && (bI['__webglDepthRenderbuffer'] = bf['createRenderbuffer'](),
                    c2(bI['__webglDepthRenderbuffer'], bg, !0x0)),
                    bf['bindFramebuffer'](0x8d40, null);
                } else
                    console['warn']('THREE.WebGLRenderer:\x20WebGLMultisampleRenderTarget\x20can\x20only\x20be\x20used\x20with\x20WebGL2.');
            if (bK) {
                for (bh['bindTexture'](0x8513, bJ['__webglTexture']),
                bY(0x8513, bg['texture'], bM),
                bR = 0x0; bR < 0x6; bR++)
                    c1(bI['__webglFramebuffer'][bR], bg, 0x8ce0, 0x8515 + bR);
                bO(bg['texture'], bM) && bP(0x8513, bg['texture'], bg['width'], bg['height']),
                bh['bindTexture'](0x8513, null);
            } else
                bh['bindTexture'](0xde1, bJ['__webglTexture']),
                bY(0xde1, bg['texture'], bM),
                c1(bI['__webglFramebuffer'], bg, 0x8ce0, 0xde1),
                bO(bg['texture'], bM) && bP(0xde1, bg['texture'], bg['width'], bg['height']),
                bh['bindTexture'](0xde1, null);
            bg['depthBuffer'] && c3(bg);
        }
        ,
        this['updateRenderTargetMipmap'] = function(bf) {
            var bg = bf['texture'];
            if (bO(bg, bN(bf) || bF['isWebGL2'])) {
                var bG = bf['isWebGLRenderTargetCube'] ? 0x8513 : 0xde1
                  , bH = bi['get'](bg)['__webglTexture'];
                bh['bindTexture'](bG, bH),
                bP(bG, bg, bf['width'], bf['height']),
                bh['bindTexture'](bG, null);
            }
        }
        ,
        this['updateMultisampleRenderTarget'] = function(bg) {
            if (bg['isWebGLMultisampleRenderTarget'])
                if (bF['isWebGL2']) {
                    var bh = bi['get'](bg);
                    bf['bindFramebuffer'](0x8ca8, bh['__webglMultisampledFramebuffer']),
                    bf['bindFramebuffer'](0x8ca9, bh['__webglFramebuffer']);
                    var bG = bg['width']
                      , bH = bg['height']
                      , bI = 0x4000;
                    bg['depthBuffer'] && (bI |= 0x100),
                    bg['stencilBuffer'] && (bI |= 0x400),
                    bf['blitFramebuffer'](0x0, 0x0, bG, bH, 0x0, 0x0, bG, bH, bI, 0x2600);
                } else
                    console['warn']('THREE.WebGLRenderer:\x20WebGLMultisampleRenderTarget\x20can\x20only\x20be\x20used\x20with\x20WebGL2.');
        }
        ,
        this['safeSetTexture2D'] = function(bf, bg) {
            bf && bf['isWebGLRenderTarget'] && (!0x1 === c5 && (console['warn']('THREE.WebGLTextures.safeSetTexture2D:\x20don\x27t\x20use\x20render\x20targets\x20as\x20textures.\x20Use\x20their\x20.texture\x20property\x20instead.'),
            c5 = !0x0),
            bf = bf['texture']),
            bV(bf, bg);
        }
        ,
        this['safeSetTextureCube'] = function(bf, bg) {
            bf && bf['isWebGLRenderTargetCube'] && (!0x1 === c6 && (console['warn']('THREE.WebGLTextures.safeSetTextureCube:\x20don\x27t\x20use\x20cube\x20render\x20targets\x20as\x20textures.\x20Use\x20their\x20.texture\x20property\x20instead.'),
            c6 = !0x0),
            bf = bf['texture']),
            bf && bf['isCubeTexture'] || Array['isArray'](bf['image']) && 0x6 === bf['image']['length'] ? bW(bf, bg) : bX(bf, bg);
        }
        ;
    }
    function a60(bf, bg, bh) {
        return {
            'convert': function(bf) {
                var bi;
                if (bf === cM)
                    return 0x2901;
                if (bf === cN)
                    return 0x812f;
                if (bf === cO)
                    return 0x8370;
                if (bf === cP)
                    return 0x2600;
                if (bf === cQ)
                    return 0x2700;
                if (bf === cR)
                    return 0x2702;
                if (bf === cS)
                    return 0x2601;
                if (bf === cT)
                    return 0x2701;
                if (bf === cU)
                    return 0x2703;
                if (bf === cV)
                    return 0x1401;
                if (bf === d3)
                    return 0x8033;
                if (bf === d4)
                    return 0x8034;
                if (bf === d5)
                    return 0x8363;
                if (bf === cW)
                    return 0x1400;
                if (bf === cX)
                    return 0x1402;
                if (bf === cY)
                    return 0x1403;
                if (bf === cZ)
                    return 0x1404;
                if (bf === d0)
                    return 0x1405;
                if (bf === d1)
                    return 0x1406;
                if (bf === d2) {
                    if (bh['isWebGL2'])
                        return 0x140b;
                    if (null !== (bi = bg['get']('OES_texture_half_float')))
                        return bi['HALF_FLOAT_OES'];
                }
                if (bf === d7)
                    return 0x1906;
                if (bf === d8)
                    return 0x1907;
                if (bf === d9)
                    return 0x1908;
                if (bf === da)
                    return 0x1909;
                if (bf === db)
                    return 0x190a;
                if (bf === dd)
                    return 0x1902;
                if (bf === de)
                    return 0x84f9;
                if (bf === df)
                    return 0x1903;
                if (bf === c7)
                    return 0x8006;
                if (bf === c8)
                    return 0x800a;
                if (bf === c9)
                    return 0x800b;
                if (bf === cc)
                    return 0x0;
                if (bf === cd)
                    return 0x1;
                if (bf === ce)
                    return 0x300;
                if (bf === cf)
                    return 0x301;
                if (bf === cg)
                    return 0x302;
                if (bf === ch)
                    return 0x303;
                if (bf === ci)
                    return 0x304;
                if (bf === cj)
                    return 0x305;
                if (bf === ck)
                    return 0x306;
                if (bf === cl)
                    return 0x307;
                if (bf === cm)
                    return 0x308;
                if ((bf === dg || bf === dh || bf === di || bf === dj) && null !== (bi = bg['get']('WEBGL_compressed_texture_s3tc'))) {
                    if (bf === dg)
                        return bi['COMPRESSED_RGB_S3TC_DXT1_EXT'];
                    if (bf === dh)
                        return bi['COMPRESSED_RGBA_S3TC_DXT1_EXT'];
                    if (bf === di)
                        return bi['COMPRESSED_RGBA_S3TC_DXT3_EXT'];
                    if (bf === dj)
                        return bi['COMPRESSED_RGBA_S3TC_DXT5_EXT'];
                }
                if ((bf === dk || bf === dl || bf === dm || bf === dn) && null !== (bi = bg['get']('WEBGL_compressed_texture_pvrtc'))) {
                    if (bf === dk)
                        return bi['COMPRESSED_RGB_PVRTC_4BPPV1_IMG'];
                    if (bf === dl)
                        return bi['COMPRESSED_RGB_PVRTC_2BPPV1_IMG'];
                    if (bf === dm)
                        return bi['COMPRESSED_RGBA_PVRTC_4BPPV1_IMG'];
                    if (bf === dn)
                        return bi['COMPRESSED_RGBA_PVRTC_2BPPV1_IMG'];
                }
                if (bf === dp && null !== (bi = bg['get']('WEBGL_compressed_texture_etc1')))
                    return bi['COMPRESSED_RGB_ETC1_WEBGL'];
                if ((bf === dq || bf === dr || bf === ds || bf === dt || bf === du || bf === dv || bf === dw || bf === dx || bf === dy || bf === dz || bf === dA || bf === dB || bf === dC || bf === dD) && null !== (bi = bg['get']('WEBGL_compressed_texture_astc')))
                    return bf;
                if (bf === ca || bf === cb) {
                    if (bh['isWebGL2']) {
                        if (bf === ca)
                            return 0x8007;
                        if (bf === cb)
                            return 0x8008;
                    }
                    if (null !== (bi = bg['get']('EXT_blend_minmax'))) {
                        if (bf === ca)
                            return bi['MIN_EXT'];
                        if (bf === cb)
                            return bi['MAX_EXT'];
                    }
                }
                if (bf === d6) {
                    if (bh['isWebGL2'])
                        return 0x84fa;
                    if (null !== (bi = bg['get']('WEBGL_depth_texture')))
                        return bi['UNSIGNED_INT_24_8_WEBGL'];
                }
                return 0x0;
            }
        };
    }
    function a66() {
        yT['call'](this),
        this['type'] = 'Group';
    }
    function a67() {
        yT['call'](this),
        this['type'] = 'Camera',
        this['matrixWorldInverse'] = new mR(),
        this['projectionMatrix'] = new mR(),
        this['projectionMatrixInverse'] = new mR();
    }
    function a68(bf, bg, bh, bi) {
        a67['call'](this),
        this['type'] = 'PerspectiveCamera',
        this['fov'] = void 0x0 !== bf ? bf : 0x32,
        this['zoom'] = 0x1,
        this['near'] = void 0x0 !== bh ? bh : 0.1,
        this['far'] = void 0x0 !== bi ? bi : 0x7d0,
        this['focus'] = 0xa,
        this['aspect'] = void 0x0 !== bg ? bg : 0x1,
        this['view'] = null,
        this['filmGauge'] = 0x23,
        this['filmOffset'] = 0x0,
        this['updateProjectionMatrix']();
    }
    function a6d(bf) {
        a68['call'](this),
        this['cameras'] = bf || [];
    }
    ZV['prototype'] = Object['create'](Kf['prototype']),
    ZV['prototype']['constructor'] = ZV,
    ZV['prototype']['isMeshDepthMaterial'] = !0x0,
    ZV['prototype']['copy'] = function(bf) {
        return Kf['prototype']['copy']['call'](this, bf),
        this['depthPacking'] = bf['depthPacking'],
        this['skinning'] = bf['skinning'],
        this['morphTargets'] = bf['morphTargets'],
        this['map'] = bf['map'],
        this['alphaMap'] = bf['alphaMap'],
        this['displacementMap'] = bf['displacementMap'],
        this['displacementScale'] = bf['displacementScale'],
        this['displacementBias'] = bf['displacementBias'],
        this['wireframe'] = bf['wireframe'],
        this['wireframeLinewidth'] = bf['wireframeLinewidth'],
        this;
    }
    ,
    ZX['prototype'] = Object['create'](Kf['prototype']),
    ZX['prototype']['constructor'] = ZX,
    ZX['prototype']['isMeshDistanceMaterial'] = !0x0,
    ZX['prototype']['copy'] = function(bf) {
        return Kf['prototype']['copy']['call'](this, bf),
        this['referencePosition']['copy'](bf['referencePosition']),
        this['nearDistance'] = bf['nearDistance'],
        this['farDistance'] = bf['farDistance'],
        this['skinning'] = bf['skinning'],
        this['morphTargets'] = bf['morphTargets'],
        this['map'] = bf['map'],
        this['alphaMap'] = bf['alphaMap'],
        this['displacementMap'] = bf['displacementMap'],
        this['displacementScale'] = bf['displacementScale'],
        this['displacementBias'] = bf['displacementBias'],
        this;
    }
    ,
    a66['prototype'] = Object['assign'](Object['create'](yT['prototype']), {
        'constructor': a66,
        'isGroup': !0x0
    }),
    a67['prototype'] = Object['assign'](Object['create'](yT['prototype']), {
        'constructor': a67,
        'isCamera': !0x0,
        'copy': function(bf, bg) {
            return yT['prototype']['copy']['call'](this, bf, bg),
            this['matrixWorldInverse']['copy'](bf['matrixWorldInverse']),
            this['projectionMatrix']['copy'](bf['projectionMatrix']),
            this['projectionMatrixInverse']['copy'](bf['projectionMatrixInverse']),
            this;
        },
        'getWorldDirection': function(bf) {
            void 0x0 === bf && (console['warn']('THREE.Camera:\x20.getWorldDirection()\x20target\x20is\x20now\x20required'),
            bf = new eK()),
            this['updateMatrixWorld'](!0x0);
            var bg = this['matrixWorld']['elements'];
            return bf['set'](-bg[0x8], -bg[0x9], -bg[0xa])['normalize']();
        },
        'updateMatrixWorld': function(bf) {
            yT['prototype']['updateMatrixWorld']['call'](this, bf),
            this['matrixWorldInverse']['getInverse'](this['matrixWorld']);
        },
        'clone': function() {
            return new this['constructor']()['copy'](this);
        }
    }),
    a68['prototype'] = Object['assign'](Object['create'](a67['prototype']), {
        'constructor': a68,
        'isPerspectiveCamera': !0x0,
        'copy': function(bf, bg) {
            return a67['prototype']['copy']['call'](this, bf, bg),
            this['fov'] = bf['fov'],
            this['zoom'] = bf['zoom'],
            this['near'] = bf['near'],
            this['far'] = bf['far'],
            this['focus'] = bf['focus'],
            this['aspect'] = bf['aspect'],
            this['view'] = null === bf['view'] ? null : Object['assign']({}, bf['view']),
            this['filmGauge'] = bf['filmGauge'],
            this['filmOffset'] = bf['filmOffset'],
            this;
        },
        'setFocalLength': function(bf) {
            var bg = 0.5 * this['getFilmHeight']() / bf;
            this['fov'] = 0x2 * e2['RAD2DEG'] * Math['atan'](bg),
            this['updateProjectionMatrix']();
        },
        'getFocalLength': function() {
            var bf = Math['tan'](0.5 * e2['DEG2RAD'] * this['fov']);
            return 0.5 * this['getFilmHeight']() / bf;
        },
        'getEffectiveFOV': function() {
            return 0x2 * e2['RAD2DEG'] * Math['atan'](Math['tan'](0.5 * e2['DEG2RAD'] * this['fov']) / this['zoom']);
        },
        'getFilmWidth': function() {
            return this['filmGauge'] * Math['min'](this['aspect'], 0x1);
        },
        'getFilmHeight': function() {
            return this['filmGauge'] / Math['max'](this['aspect'], 0x1);
        },
        'setViewOffset': function(bf, bg, bh, bi, bF, bG) {
            this['aspect'] = bf / bg,
            null === this['view'] && (this['view'] = {
                'enabled': !0x0,
                'fullWidth': 0x1,
                'fullHeight': 0x1,
                'offsetX': 0x0,
                'offsetY': 0x0,
                'width': 0x1,
                'height': 0x1
            }),
            this['view']['enabled'] = !0x0,
            this['view']['fullWidth'] = bf,
            this['view']['fullHeight'] = bg,
            this['view']['offsetX'] = bh,
            this['view']['offsetY'] = bi,
            this['view']['width'] = bF,
            this['view']['height'] = bG,
            this['updateProjectionMatrix']();
        },
        'clearViewOffset': function() {
            null !== this['view'] && (this['view']['enabled'] = !0x1),
            this['updateProjectionMatrix']();
        },
        'updateProjectionMatrix': function() {
            var bf = this['near']
              , bg = bf * Math['tan'](0.5 * e2['DEG2RAD'] * this['fov']) / this['zoom']
              , bh = 0x2 * bg
              , bi = this['aspect'] * bh
              , bF = -0.5 * bi
              , bG = this['view'];
            if (null !== this['view'] && this['view']['enabled']) {
                var bH = bG['fullWidth']
                  , bI = bG['fullHeight'];
                bF += bG['offsetX'] * bi / bH,
                bg -= bG['offsetY'] * bh / bI,
                bi *= bG['width'] / bH,
                bh *= bG['height'] / bI;
            }
            var bJ = this['filmOffset'];
            0x0 !== bJ && (bF += bf * bJ / this['getFilmWidth']()),
            this['projectionMatrix']['makePerspective'](bF, bF + bi, bg, bg - bh, bf, this['far']),
            this['projectionMatrixInverse']['getInverse'](this['projectionMatrix']);
        },
        'toJSON': function(bf) {
            var bg = yT['prototype']['toJSON']['call'](this, bf);
            return bg['object']['fov'] = this['fov'],
            bg['object']['zoom'] = this['zoom'],
            bg['object']['near'] = this['near'],
            bg['object']['far'] = this['far'],
            bg['object']['focus'] = this['focus'],
            bg['object']['aspect'] = this['aspect'],
            null !== this['view'] && (bg['object']['view'] = Object['assign']({}, this['view'])),
            bg['object']['filmGauge'] = this['filmGauge'],
            bg['object']['filmOffset'] = this['filmOffset'],
            bg;
        }
    }),
    a6d['prototype'] = Object['assign'](Object['create'](a68['prototype']), {
        'constructor': a6d,
        'isArrayCamera': !0x0
    });
    var a6I, a6J, a6K, a6L, a6M, a6N, a6O = new eK(), a6P = new eK();
    function a6Q(bf, bg, bh) {
        a6O['setFromMatrixPosition'](bg['matrixWorld']),
        a6P['setFromMatrixPosition'](bh['matrixWorld']);
        var bi = a6O['distanceTo'](a6P)
          , bF = bg['projectionMatrix']['elements']
          , bG = bh['projectionMatrix']['elements']
          , bH = bF[0xe] / (bF[0xa] - 0x1)
          , bI = bF[0xe] / (bF[0xa] + 0x1)
          , bJ = (bF[0x9] + 0x1) / bF[0x5]
          , bK = (bF[0x9] - 0x1) / bF[0x5]
          , bL = (bF[0x8] - 0x1) / bF[0x0]
          , bM = (bG[0x8] + 0x1) / bG[0x0]
          , bN = bH * bL
          , bO = bH * bM
          , bP = bi / (-bL + bM)
          , bQ = bP * -bL;
        bg['matrixWorld']['decompose'](bf['position'], bf['quaternion'], bf['scale']),
        bf['translateX'](bQ),
        bf['translateZ'](bP),
        bf['matrixWorld']['compose'](bf['position'], bf['quaternion'], bf['scale']),
        bf['matrixWorldInverse']['getInverse'](bf['matrixWorld']);
        var bR = bH + bP
          , bS = bI + bP
          , bT = bN - bQ
          , bU = bO + (bi - bQ)
          , bV = bJ * bI / bS * bR
          , bW = bK * bI / bS * bR;
        bf['projectionMatrix']['makePerspective'](bT, bU, bV, bW, bR, bS);
    }
    function a7d(bf) {
        var bg, bh, bi = this, bF = null, bG = null, bH = null, bI = [], bJ = new mR(), bK = new mR(), bL = 0x1, bM = 'local-floor';
        'undefined' != typeof window && 'VRFrameData'in window && (bG = new window['VRFrameData'](),
        window['addEventListener']('vrdisplaypresentchange', bW, !0x1));
        var bN = new mR()
          , bO = new eF()
          , bP = new eK()
          , bQ = new a68();
        bQ['viewport'] = new m7(),
        bQ['layers']['enable'](0x1);
        var bR = new a68();
        bR['viewport'] = new m7(),
        bR['layers']['enable'](0x2);
        var bS = new a6d([bQ, bR]);
        function bT() {
            return null !== bF && !0x0 === bF['isPresenting'];
        }
        bS['layers']['enable'](0x1),
        bS['layers']['enable'](0x2);
        var bU, bV = new eC();
        function bW() {
            if (bT()) {
                var bG = bF['getEyeParameters']('left');
                bg = 0x2 * bG['renderWidth'] * bL,
                bh = bG['renderHeight'] * bL,
                bU = bf['getPixelRatio'](),
                bf['getSize'](bV),
                bf['setDrawingBufferSize'](bg, bh, 0x1),
                bQ['viewport']['set'](0x0, 0x0, bg / 0x2, bh),
                bR['viewport']['set'](bg / 0x2, 0x0, bg / 0x2, bh),
                c0['start']();
            } else
                bi['enabled'] && bf['setDrawingBufferSize'](bV['width'], bV['height'], bU),
                c0['stop']();
        }
        var bX = [];
        function bY(bf) {
            for (var bg = navigator['getGamepads'] && navigator['getGamepads'](), bh = 0x0, bi = 0x0, bF = bg['length']; bh < bF; bh++) {
                var bG = bg[bh];
                if (bG && ('Daydream\x20Controller' === bG['id'] || 'Gear\x20VR\x20Controller' === bG['id'] || 'Oculus\x20Go\x20Controller' === bG['id'] || 'OpenVR\x20Gamepad' === bG['id'] || bG['id']['startsWith']('Oculus\x20Touch') || bG['id']['startsWith']('Spatial\x20Controller'))) {
                    if (bi === bf)
                        return bG;
                    bi++;
                }
            }
        }
        function bZ(bf, bi) {
            null !== bi && 0x4 === bi['length'] && bf['set'](bi[0x0] * bg, bi[0x1] * bh, bi[0x2] * bg, bi[0x3] * bh);
        }
        this['enabled'] = !0x1,
        this['getController'] = function(bf) {
            var bg = bI[bf];
            return void 0x0 === bg && ((bg = new a66())['matrixAutoUpdate'] = !0x1,
            bg['visible'] = !0x1,
            bI[bf] = bg),
            bg;
        }
        ,
        this['getDevice'] = function() {
            return bF;
        }
        ,
        this['setDevice'] = function(bf) {
            void 0x0 !== bf && (bF = bf),
            c0['setContext'](bf);
        }
        ,
        this['setFramebufferScaleFactor'] = function(bf) {
            bL = bf;
        }
        ,
        this['setReferenceSpaceType'] = function(bf) {
            bM = bf;
        }
        ,
        this['setPoseTarget'] = function(bf) {
            void 0x0 !== bf && (bH = bf);
        }
        ,
        this['getCamera'] = function(bf) {
            var bg = 'local-floor' === bM ? 1.6 : 0x0;
            if (!0x1 === bT())
                return bf['position']['set'](0x0, bg, 0x0),
                bf['rotation']['set'](0x0, 0x0, 0x0),
                bf;
            if (bF['depthNear'] = bf['near'],
            bF['depthFar'] = bf['far'],
            bF['getFrameData'](bG),
            'local-floor' === bM) {
                var bh = bF['stageParameters'];
                bh ? bJ['fromArray'](bh['sittingToStandingTransform']) : bJ['makeTranslation'](0x0, bg, 0x0);
            }
            var bi = bG['pose']
              , bL = null !== bH ? bH : bf;
            bL['matrix']['copy'](bJ),
            bL['matrix']['decompose'](bL['position'], bL['quaternion'], bL['scale']),
            null !== bi['orientation'] && (bO['fromArray'](bi['orientation']),
            bL['quaternion']['multiply'](bO)),
            null !== bi['position'] && (bO['setFromRotationMatrix'](bJ),
            bP['fromArray'](bi['position']),
            bP['applyQuaternion'](bO),
            bL['position']['add'](bP)),
            bL['updateMatrixWorld'](),
            bQ['near'] = bf['near'],
            bR['near'] = bf['near'],
            bQ['far'] = bf['far'],
            bR['far'] = bf['far'],
            bQ['matrixWorldInverse']['fromArray'](bG['leftViewMatrix']),
            bR['matrixWorldInverse']['fromArray'](bG['rightViewMatrix']),
            bK['getInverse'](bJ),
            'local-floor' === bM && (bQ['matrixWorldInverse']['multiply'](bK),
            bR['matrixWorldInverse']['multiply'](bK));
            var bU = bL['parent'];
            null !== bU && (bN['getInverse'](bU['matrixWorld']),
            bQ['matrixWorldInverse']['multiply'](bN),
            bR['matrixWorldInverse']['multiply'](bN)),
            bQ['matrixWorld']['getInverse'](bQ['matrixWorldInverse']),
            bR['matrixWorld']['getInverse'](bR['matrixWorldInverse']),
            bQ['projectionMatrix']['fromArray'](bG['leftProjectionMatrix']),
            bR['projectionMatrix']['fromArray'](bG['rightProjectionMatrix']),
            a6Q(bS, bQ, bR);
            var bV = bF['getLayers']();
            if (bV['length']) {
                var bW = bV[0x0];
                bZ(bQ['viewport'], bW['leftBounds']),
                bZ(bR['viewport'], bW['rightBounds']);
            }
            return function() {
                for (var bf = 0x0; bf < bI['length']; bf++) {
                    var bg = bI[bf]
                      , bh = bY(bf);
                    if (void 0x0 !== bh && void 0x0 !== bh['pose']) {
                        if (null === bh['pose'])
                            return;
                        var bi = bh['pose'];
                        !0x1 === bi['hasPosition'] && bg['position']['set'](0.2, -0.6, -0.05),
                        null !== bi['position'] && bg['position']['fromArray'](bi['position']),
                        null !== bi['orientation'] && bg['quaternion']['fromArray'](bi['orientation']),
                        bg['matrix']['compose'](bg['position'], bg['quaternion'], bg['scale']),
                        bg['matrix']['premultiply'](bJ),
                        bg['matrix']['decompose'](bg['position'], bg['quaternion'], bg['scale']),
                        bg['matrixWorldNeedsUpdate'] = !0x0,
                        bg['visible'] = !0x0;
                        var bF = 'Daydream\x20Controller' === bh['id'] ? 0x0 : 0x1;
                        void 0x0 === bX[bf] && (bX[bf] = !0x1),
                        bX[bf] !== bh['buttons'][bF]['pressed'] && (bX[bf] = bh['buttons'][bF]['pressed'],
                        !0x0 === bX[bf] ? bg['dispatchEvent']({
                            'type': 'selectstart'
                        }) : (bg['dispatchEvent']({
                            'type': 'selectend'
                        }),
                        bg['dispatchEvent']({
                            'type': 'select'
                        })));
                    } else
                        bg['visible'] = !0x1;
                }
            }(),
            bS;
        }
        ,
        this['getStandingMatrix'] = function() {
            return bJ;
        }
        ,
        this['isPresenting'] = bT;
        var c0 = new xp();
        this['setAnimationLoop'] = function(bf) {
            c0['setAnimationLoop'](bf),
            bT() && c0['start']();
        }
        ,
        this['submitFrame'] = function() {
            bT() && bF['submitFrame']();
        }
        ,
        this['dispose'] = function() {
            'undefined' != typeof window && window['removeEventListener']('vrdisplaypresentchange', bW);
        }
        ,
        this['setFrameOfReferenceType'] = function() {
            console['warn']('THREE.WebVRManager:\x20setFrameOfReferenceType()\x20has\x20been\x20deprecated.');
        }
        ;
    }
    function a87(bf) {
        var bg = bf['context']
          , bh = null
          , bi = null
          , bF = 'local-floor'
          , bG = null
          , bH = []
          , bI = [];
        function bJ() {
            return null !== bh && null !== bi;
        }
        var bK = new a68();
        bK['layers']['enable'](0x1),
        bK['viewport'] = new m7();
        var bL = new a68();
        bL['layers']['enable'](0x2),
        bL['viewport'] = new m7();
        var bM = new a6d([bK, bL]);
        function bN(bf) {
            for (var bg = 0x0; bg < bH['length']; bg++)
                bI[bg] === bf['inputSource'] && bH[bg]['dispatchEvent']({
                    'type': bf['type']
                });
        }
        function bO() {
            bf['setFramebuffer'](null),
            bf['setRenderTarget'](bf['getRenderTarget']()),
            bS['stop']();
        }
        function bP(bf) {
            bi = bf,
            bS['setContext'](bh),
            bS['start']();
        }
        function bQ(bf, bg) {
            null === bg ? bf['matrixWorld']['copy'](bf['matrix']) : bf['matrixWorld']['multiplyMatrices'](bg['matrixWorld'], bf['matrix']),
            bf['matrixWorldInverse']['getInverse'](bf['matrixWorld']);
        }
        bM['layers']['enable'](0x1),
        bM['layers']['enable'](0x2),
        this['enabled'] = !0x1,
        this['getController'] = function(bf) {
            var bg = bH[bf];
            return void 0x0 === bg && ((bg = new a66())['matrixAutoUpdate'] = !0x1,
            bg['visible'] = !0x1,
            bH[bf] = bg),
            bg;
        }
        ,
        this['setFramebufferScaleFactor'] = function(bf) {}
        ,
        this['setReferenceSpaceType'] = function(bf) {
            bF = bf;
        }
        ,
        this['getSession'] = function() {
            return bh;
        }
        ,
        this['setSession'] = function(bf) {
            null !== (bh = bf) && (bh['addEventListener']('select', bN),
            bh['addEventListener']('selectstart', bN),
            bh['addEventListener']('selectend', bN),
            bh['addEventListener']('end', bO),
            bh['updateRenderState']({
                'baseLayer': new XRWebGLLayer(bh,bg)
            }),
            bh['requestReferenceSpace'](bF)['then'](bP),
            bI = bh['inputSources'],
            bh['addEventListener']('inputsourceschange', function() {
                bI = bh['inputSources'],
                console['log'](bI);
                for (var bf = 0x0; bf < bH['length']; bf++) {
                    bH[bf]['userData']['inputSource'] = bI[bf];
                }
            }));
        }
        ,
        this['getCamera'] = function(bf) {
            if (bJ()) {
                var bg = bf['parent']
                  , bh = bM['cameras'];
                bQ(bM, bg);
                for (var bi = 0x0; bi < bh['length']; bi++)
                    bQ(bh[bi], bg);
                bf['matrixWorld']['copy'](bM['matrixWorld']);
                for (var bF = bf['children'], bG = (bi = 0x0,
                bF['length']); bi < bG; bi++)
                    bF[bi]['updateMatrixWorld'](!0x0);
                return a6Q(bM, bK, bL),
                bM;
            }
            return bf;
        }
        ,
        this['isPresenting'] = bJ;
        var bR = null;
        var bS = new xp();
        bS['setAnimationLoop'](function(bg, bF) {
            if (null !== (bG = bF['getViewerPose'](bi))) {
                var bJ = bG['views']
                  , bK = bh['renderState']['baseLayer'];
                bf['setFramebuffer'](bK['framebuffer']);
                for (var bL = 0x0; bL < bJ['length']; bL++) {
                    var bN = bJ[bL]
                      , bO = bK['getViewport'](bN)
                      , bP = bN['transform']['inverse']['matrix']
                      , bQ = bM['cameras'][bL];
                    bQ['matrix']['fromArray'](bP)['getInverse'](bQ['matrix']),
                    bQ['projectionMatrix']['fromArray'](bN['projectionMatrix']),
                    bQ['viewport']['set'](bO['x'], bO['y'], bO['width'], bO['height']),
                    0x0 === bL && bM['matrix']['copy'](bQ['matrix']);
                }
            }
            for (bL = 0x0; bL < bH['length']; bL++) {
                var bS = bH[bL]
                  , bT = bI[bL];
                if (bT) {
                    var bU = bF['getPose'](bT['targetRaySpace'], bi);
                    if (null !== bU) {
                        bS['matrix']['fromArray'](bU['transform']['matrix']),
                        bS['matrix']['decompose'](bS['position'], bS['rotation'], bS['scale']),
                        bS['visible'] = !0x0;
                        continue;
                    }
                }
                bS['visible'] = !0x1;
            }
            bR && bR(bg);
        }),
        this['setAnimationLoop'] = function(bf) {
            bR = bf;
        }
        ,
        this['dispose'] = function() {}
        ,
        this['getStandingMatrix'] = function() {
            return console['warn']('THREE.WebXRManager:\x20getStandingMatrix()\x20is\x20no\x20longer\x20needed.'),
            new mR();
        }
        ,
        this['getDevice'] = function() {
            console['warn']('THREE.WebXRManager:\x20getDevice()\x20has\x20been\x20deprecated.');
        }
        ,
        this['setDevice'] = function() {
            console['warn']('THREE.WebXRManager:\x20setDevice()\x20has\x20been\x20deprecated.');
        }
        ,
        this['setFrameOfReferenceType'] = function() {
            console['warn']('THREE.WebXRManager:\x20setFrameOfReferenceType()\x20has\x20been\x20deprecated.');
        }
        ,
        this['submitFrame'] = function() {}
        ;
    }
    function a8U(bf) {
        console['log']('THREE.WebGLRenderer', bI);
        var bg = void 0x0 !== (bf = bf || {})['canvas'] ? bf['canvas'] : document['createElementNS']('http://www.w3.org/1999/xhtml', 'canvas')
          , bh = void 0x0 !== bf['context'] ? bf['context'] : null
          , bi = void 0x0 !== bf['alpha'] && bf['alpha']
          , bF = void 0x0 === bf['depth'] || bf['depth']
          , bG = void 0x0 === bf['stencil'] || bf['stencil']
          , bH = void 0x0 !== bf['antialias'] && bf['antialias']
          , bJ = void 0x0 === bf['premultipliedAlpha'] || bf['premultipliedAlpha']
          , bK = void 0x0 !== bf['preserveDrawingBuffer'] && bf['preserveDrawingBuffer']
          , bL = void 0x0 !== bf['powerPreference'] ? bf['powerPreference'] : 'default'
          , bM = void 0x0 !== bf['failIfMajorPerformanceCaveat'] && bf['failIfMajorPerformanceCaveat']
          , bN = null
          , bO = null;
        this['domElement'] = bg,
        this['context'] = null,
        this['debug'] = {
            'checkShaderErrors': !0x0
        },
        this['autoClear'] = !0x0,
        this['autoClearColor'] = !0x0,
        this['autoClearDepth'] = !0x0,
        this['autoClearStencil'] = !0x0,
        this['sortObjects'] = !0x0,
        this['clippingPlanes'] = [],
        this['localClippingEnabled'] = !0x1,
        this['gammaFactor'] = 0x2,
        this['gammaInput'] = !0x1,
        this['gammaOutput'] = !0x1,
        this['physicallyCorrectLights'] = !0x1,
        this['toneMapping'] = cz,
        this['toneMappingExposure'] = 0x1,
        this['toneMappingWhitePoint'] = 0x1,
        this['maxMorphTargets'] = 0x8,
        this['maxMorphNormals'] = 0x4;
        var bP, bQ, bR, bS, bT, bV, bW, bX, bY, bZ, c0, c1, c2, c3, c4, c5, c6, c7, c8 = this, c9 = !0x1, ca = null, cb = 0x0, cc = 0x0, cd = null, ce = null, cf = -0x1, cg = {
            'geometry': null,
            'program': null,
            'wireframe': !0x1
        }, ch = null, ci = null, cj = new m7(), ck = new m7(), cl = null, cm = bg['width'], cn = bg['height'], co = 0x1, cp = new m7(0x0,0x0,cm,cn), cq = new m7(0x0,0x0,cm,cn), cr = !0x1, cs = new mK(), ct = new M2(), cu = !0x1, cv = !0x1, cw = new mR(), cx = new eK();
        function cy() {
            return null === cd ? co : 0x1;
        }
        try {
            var cA = {
                'alpha': bi,
                'depth': bF,
                'stencil': bG,
                'antialias': bH,
                'premultipliedAlpha': bJ,
                'preserveDrawingBuffer': bK,
                'powerPreference': bL,
                'failIfMajorPerformanceCaveat': bM,
                'xrCompatible': !0x0
            };
            if (bg['addEventListener']('webglcontextlost', cE, !0x1),
            bg['addEventListener']('webglcontextrestored', cF, !0x1),
            null === (bP = bh || bg['getContext']('webgl', cA) || bg['getContext']('experimental-webgl', cA)))
                throw null !== bg['getContext']('webgl') ? new Error('Error\x20creating\x20WebGL\x20context\x20with\x20your\x20selected\x20attributes.') : new Error('Error\x20creating\x20WebGL\x20context.');
            void 0x0 === bP['getShaderPrecisionFormat'] && (bP['getShaderPrecisionFormat'] = function() {
                return {
                    'rangeMin': 0x1,
                    'rangeMax': 0x1,
                    'precision': 0x1
                };
            }
            );
        } catch (a9S) {
            throw console['error']('THREE.WebGLRenderer:\x20' + a9S['message']),
            a9S;
        }
        function cB() {
            bQ = new MB(bP),
            (bR = new LG(bP,bQ,bf))['isWebGL2'] || (bQ['get']('WEBGL_depth_texture'),
            bQ['get']('OES_texture_float'),
            bQ['get']('OES_texture_half_float'),
            bQ['get']('OES_texture_half_float_linear'),
            bQ['get']('OES_standard_derivatives'),
            bQ['get']('OES_element_index_uint'),
            bQ['get']('ANGLE_instanced_arrays')),
            bQ['get']('OES_texture_float_linear'),
            c7 = new a60(bP,bQ,bR),
            (bS = new a1i(bP,bQ,c7,bR))['scissor'](ck['copy'](cq)['multiplyScalar'](co)),
            bS['viewport'](cj['copy'](cp)['multiplyScalar'](co)),
            bT = new Nv(bP),
            bV = new Yj(),
            bW = new a3q(bP,bQ,bS,bV,bR,c7,bT),
            bX = new xy(bP),
            bY = new MG(bP,bX,bT),
            bZ = new NV(bY,bT),
            c4 = new NE(bP),
            c0 = new XC(c8,bQ,bR,bW),
            c1 = new YZ(),
            c2 = new ZN(),
            c3 = new L1(c8,bS,bZ,bJ),
            c5 = new Lt(bP,bQ,bT,bR),
            c6 = new Nf(bP,bQ,bT,bR),
            bT['programs'] = c0['programs'],
            c8['context'] = bP,
            c8['capabilities'] = bR,
            c8['extensions'] = bQ,
            c8['properties'] = bV,
            c8['renderLists'] = c1,
            c8['state'] = bS,
            c8['info'] = bT;
        }
        cB();
        var cC = 'undefined' != typeof navigator && 'xr'in navigator && 'supportsSession'in navigator['xr'] ? new a87(c8) : new a7d(c8);
        this['vr'] = cC;
        var cD = new ZZ(c8,bZ,bR['maxTextureSize']);
        function cE(bf) {
            bf['preventDefault'](),
            console['log']('THREE.WebGLRenderer:\x20Context\x20Lost.'),
            c9 = !0x0;
        }
        function cF() {
            console['log']('THREE.WebGLRenderer:\x20Context\x20Restored.'),
            c9 = !0x1,
            cB();
        }
        function cG(bf) {
            var bg = bf['target'];
            bg['removeEventListener']('dispose', cG),
            function(bf) {
                cH(bf),
                bV['remove'](bf);
            }(bg);
        }
        function cH(bf) {
            var bg = bV['get'](bf)['program'];
            bf['program'] = void 0x0,
            void 0x0 !== bg && c0['releaseProgram'](bg);
        }
        this['shadowMap'] = cD,
        this['getContext'] = function() {
            return bP;
        }
        ,
        this['getContextAttributes'] = function() {
            return bP['getContextAttributes']();
        }
        ,
        this['forceContextLoss'] = function() {
            var bf = bQ['get']('WEBGL_lose_context');
            bf && bf['loseContext']();
        }
        ,
        this['forceContextRestore'] = function() {
            var bf = bQ['get']('WEBGL_lose_context');
            bf && bf['restoreContext']();
        }
        ,
        this['getPixelRatio'] = function() {
            return co;
        }
        ,
        this['setPixelRatio'] = function(bf) {
            void 0x0 !== bf && (co = bf,
            this['setSize'](cm, cn, !0x1));
        }
        ,
        this['getSize'] = function(bf) {
            return void 0x0 === bf && (console['warn']('WebGLRenderer:\x20.getsize()\x20now\x20requires\x20a\x20Vector2\x20as\x20an\x20argument'),
            bf = new eC()),
            bf['set'](cm, cn);
        }
        ,
        this['setSize'] = function(bf, bh, bi) {
            cC['isPresenting']() ? console['warn']('THREE.WebGLRenderer:\x20Can\x27t\x20change\x20size\x20while\x20VR\x20device\x20is\x20presenting.') : (cm = bf,
            cn = bh,
            bg['width'] = bf * co,
            bg['height'] = bh * co,
            !0x1 !== bi && (bg['style']['width'] = bf + 'px',
            bg['style']['height'] = bh + 'px'),
            this['setViewport'](0x0, 0x0, bf, bh));
        }
        ,
        this['getDrawingBufferSize'] = function(bf) {
            return void 0x0 === bf && (console['warn']('WebGLRenderer:\x20.getdrawingBufferSize()\x20now\x20requires\x20a\x20Vector2\x20as\x20an\x20argument'),
            bf = new eC()),
            bf['set'](cm * co, cn * co);
        }
        ,
        this['setDrawingBufferSize'] = function(bf, bh, bi) {
            cm = bf,
            cn = bh,
            co = bi,
            bg['width'] = bf * bi,
            bg['height'] = bh * bi,
            this['setViewport'](0x0, 0x0, bf, bh);
        }
        ,
        this['getCurrentViewport'] = function(bf) {
            return void 0x0 === bf && (console['warn']('WebGLRenderer:\x20.getCurrentViewport()\x20now\x20requires\x20a\x20Vector4\x20as\x20an\x20argument'),
            bf = new m7()),
            bf['copy'](cj);
        }
        ,
        this['getViewport'] = function(bf) {
            return bf['copy'](cp);
        }
        ,
        this['setViewport'] = function(bf, bg, bh, bi) {
            bf['isVector4'] ? cp['set'](bf['x'], bf['y'], bf['z'], bf['w']) : cp['set'](bf, bg, bh, bi),
            bS['viewport'](cj['copy'](cp)['multiplyScalar'](co));
        }
        ,
        this['getScissor'] = function(bf) {
            return bf['copy'](cq);
        }
        ,
        this['setScissor'] = function(bf, bg, bh, bi) {
            bf['isVector4'] ? cq['set'](bf['x'], bf['y'], bf['z'], bf['w']) : cq['set'](bf, bg, bh, bi),
            bS['scissor'](ck['copy'](cq)['multiplyScalar'](co));
        }
        ,
        this['getScissorTest'] = function() {
            return cr;
        }
        ,
        this['setScissorTest'] = function(bf) {
            bS['setScissorTest'](cr = bf);
        }
        ,
        this['getClearColor'] = function() {
            return c3['getClearColor']();
        }
        ,
        this['setClearColor'] = function() {
            c3['setClearColor']['apply'](c3, arguments);
        }
        ,
        this['getClearAlpha'] = function() {
            return c3['getClearAlpha']();
        }
        ,
        this['setClearAlpha'] = function() {
            c3['setClearAlpha']['apply'](c3, arguments);
        }
        ,
        this['clear'] = function(bf, bg, bh) {
            var bi = 0x0;
            (void 0x0 === bf || bf) && (bi |= 0x4000),
            (void 0x0 === bg || bg) && (bi |= 0x100),
            (void 0x0 === bh || bh) && (bi |= 0x400),
            bP['clear'](bi);
        }
        ,
        this['clearColor'] = function() {
            this['clear'](!0x0, !0x1, !0x1);
        }
        ,
        this['clearDepth'] = function() {
            this['clear'](!0x1, !0x0, !0x1);
        }
        ,
        this['clearStencil'] = function() {
            this['clear'](!0x1, !0x1, !0x0);
        }
        ,
        this['dispose'] = function() {
            bg['removeEventListener']('webglcontextlost', cE, !0x1),
            bg['removeEventListener']('webglcontextrestored', cF, !0x1),
            c1['dispose'](),
            c2['dispose'](),
            bV['dispose'](),
            bZ['dispose'](),
            cC['dispose'](),
            cJ['stop']();
        }
        ,
        this['renderBufferImmediate'] = function(bf, bg) {
            bS['initAttributes']();
            var bh = bV['get'](bf);
            bf['hasPositions'] && !bh['position'] && (bh['position'] = bP['createBuffer']()),
            bf['hasNormals'] && !bh['normal'] && (bh['normal'] = bP['createBuffer']()),
            bf['hasUvs'] && !bh['uv'] && (bh['uv'] = bP['createBuffer']()),
            bf['hasColors'] && !bh['color'] && (bh['color'] = bP['createBuffer']());
            var bi = bg['getAttributes']();
            bf['hasPositions'] && (bP['bindBuffer'](0x8892, bh['position']),
            bP['bufferData'](0x8892, bf['positionArray'], 0x88e8),
            bS['enableAttribute'](bi['position']),
            bP['vertexAttribPointer'](bi['position'], 0x3, 0x1406, !0x1, 0x0, 0x0)),
            bf['hasNormals'] && (bP['bindBuffer'](0x8892, bh['normal']),
            bP['bufferData'](0x8892, bf['normalArray'], 0x88e8),
            bS['enableAttribute'](bi['normal']),
            bP['vertexAttribPointer'](bi['normal'], 0x3, 0x1406, !0x1, 0x0, 0x0)),
            bf['hasUvs'] && (bP['bindBuffer'](0x8892, bh['uv']),
            bP['bufferData'](0x8892, bf['uvArray'], 0x88e8),
            bS['enableAttribute'](bi['uv']),
            bP['vertexAttribPointer'](bi['uv'], 0x2, 0x1406, !0x1, 0x0, 0x0)),
            bf['hasColors'] && (bP['bindBuffer'](0x8892, bh['color']),
            bP['bufferData'](0x8892, bf['colorArray'], 0x88e8),
            bS['enableAttribute'](bi['color']),
            bP['vertexAttribPointer'](bi['color'], 0x3, 0x1406, !0x1, 0x0, 0x0)),
            bS['disableUnusedAttributes'](),
            bP['drawArrays'](0x4, 0x0, bf['count']),
            bf['count'] = 0x0;
        }
        ,
        this['renderBufferDirect'] = function(bf, bg, bh, bi, bF, bG) {
            var bH = bF['isMesh'] && bF['matrixWorld']['determinant']() < 0x0;
            bS['setMaterial'](bi, bH);
            var bI = cN(bf, bg, bi, bF)
              , bJ = !0x1;
            cg['geometry'] === bh['id'] && cg['program'] === bI['id'] && cg['wireframe'] === (!0x0 === bi['wireframe']) || (cg['geometry'] = bh['id'],
            cg['program'] = bI['id'],
            cg['wireframe'] = !0x0 === bi['wireframe'],
            bJ = !0x0),
            bF['morphTargetInfluences'] && (c4['update'](bF, bh, bi, bI),
            bJ = !0x0);
            var bK, bL = bh['index'], bM = bh['attributes']['position'], bN = 0x1;
            !0x0 === bi['wireframe'] && (bL = bY['getWireframeAttribute'](bh),
            bN = 0x2);
            var bO = c5;
            null !== bL && (bK = bX['get'](bL),
            (bO = c6)['setIndex'](bK)),
            bJ && (!function(bf, bg, bh) {
                if (bh && bh['isInstancedBufferGeometry'] && !bR['isWebGL2'] && null === bQ['get']('ANGLE_instanced_arrays'))
                    return void console['error']('THREE.WebGLRenderer.setupVertexAttributes:\x20using\x20THREE.InstancedBufferGeometry\x20but\x20hardware\x20does\x20not\x20support\x20extension\x20ANGLE_instanced_arrays.');
                bS['initAttributes']();
                var bi = bh['attributes']
                  , bF = bg['getAttributes']()
                  , bG = bf['defaultAttributeValues'];
                for (var bH in bF) {
                    var bI = bF[bH];
                    if (bI >= 0x0) {
                        var bJ = bi[bH];
                        if (void 0x0 !== bJ) {
                            var bK = bJ['normalized']
                              , bL = bJ['itemSize']
                              , bM = bX['get'](bJ);
                            if (void 0x0 === bM)
                                continue;
                            var bN = bM['buffer']
                              , bO = bM['type']
                              , bT = bM['bytesPerElement'];
                            if (bJ['isInterleavedBufferAttribute']) {
                                var bU = bJ['data']
                                  , bV = bU['stride']
                                  , bW = bJ['offset'];
                                bU && bU['isInstancedInterleavedBuffer'] ? (bS['enableAttributeAndDivisor'](bI, bU['meshPerAttribute']),
                                void 0x0 === bh['maxInstancedCount'] && (bh['maxInstancedCount'] = bU['meshPerAttribute'] * bU['count'])) : bS['enableAttribute'](bI),
                                bP['bindBuffer'](0x8892, bN),
                                bP['vertexAttribPointer'](bI, bL, bO, bK, bV * bT, bW * bT);
                            } else
                                bJ['isInstancedBufferAttribute'] ? (bS['enableAttributeAndDivisor'](bI, bJ['meshPerAttribute']),
                                void 0x0 === bh['maxInstancedCount'] && (bh['maxInstancedCount'] = bJ['meshPerAttribute'] * bJ['count'])) : bS['enableAttribute'](bI),
                                bP['bindBuffer'](0x8892, bN),
                                bP['vertexAttribPointer'](bI, bL, bO, bK, 0x0, 0x0);
                        } else if (void 0x0 !== bG) {
                            var bY = bG[bH];
                            if (void 0x0 !== bY)
                                switch (bY['length']) {
                                case 0x2:
                                    bP['vertexAttrib2fv'](bI, bY);
                                    break;
                                case 0x3:
                                    bP['vertexAttrib3fv'](bI, bY);
                                    break;
                                case 0x4:
                                    bP['vertexAttrib4fv'](bI, bY);
                                    break;
                                default:
                                    bP['vertexAttrib1fv'](bI, bY);
                                }
                        }
                    }
                }
                bS['disableUnusedAttributes']();
            }(bi, bI, bh),
            null !== bL && bP['bindBuffer'](0x8893, bK['buffer']));
            var bT = 0x1 / 0x0;
            null !== bL ? bT = bL['count'] : void 0x0 !== bM && (bT = bM['count']);
            var bU = bh['drawRange']['start'] * bN
              , bV = bh['drawRange']['count'] * bN
              , bW = null !== bG ? bG['start'] * bN : 0x0
              , bZ = null !== bG ? bG['count'] * bN : 0x1 / 0x0
              , c0 = Math['max'](bU, bW)
              , c1 = Math['min'](bT, bU + bV, bW + bZ) - 0x1
              , c2 = Math['max'](0x0, c1 - c0 + 0x1);
            if (0x0 !== c2) {
                if (bF['isMesh'])
                    if (!0x0 === bi['wireframe'])
                        bS['setLineWidth'](bi['wireframeLinewidth'] * cy()),
                        bO['setMode'](0x1);
                    else
                        switch (bF['drawMode']) {
                        case dN:
                            bO['setMode'](0x4);
                            break;
                        case dO:
                            bO['setMode'](0x5);
                            break;
                        case dP:
                            bO['setMode'](0x6);
                        }
                else if (bF['isLine']) {
                    var c3 = bi['linewidth'];
                    void 0x0 === c3 && (c3 = 0x1),
                    bS['setLineWidth'](c3 * cy()),
                    bF['isLineSegments'] ? bO['setMode'](0x1) : bF['isLineLoop'] ? bO['setMode'](0x2) : bO['setMode'](0x3);
                } else
                    bF['isPoints'] ? bO['setMode'](0x0) : bF['isSprite'] && bO['setMode'](0x4);
                bh && bh['isInstancedBufferGeometry'] ? bh['maxInstancedCount'] > 0x0 && bO['renderInstances'](bh, c0, c2) : bO['render'](c0, c2);
            }
        }
        ,
        this['compile'] = function(bf, bg) {
            (bO = c2['get'](bf, bg))['init'](),
            bf['traverse'](function(bf) {
                bf['isLight'] && (bO['pushLight'](bf),
                bf['castShadow'] && bO['pushShadow'](bf));
            }),
            bO['setupLights'](bg),
            bf['traverse'](function(bg) {
                if (bg['material'])
                    if (Array['isArray'](bg['material']))
                        for (var bh = 0x0; bh < bg['material']['length']; bh++)
                            cM(bg['material'][bh], bf['fog'], bg);
                    else
                        cM(bg['material'], bf['fog'], bg);
            });
        }
        ;
        var cI = null;
        var cJ = new xp();
        function cK(bf, bg, bh, bi) {
            for (var bF = 0x0, bG = bf['length']; bF < bG; bF++) {
                var bH = bf[bF]
                  , bI = bH['object']
                  , bJ = bH['geometry']
                  , bK = void 0x0 === bi ? bH['material'] : bi
                  , bL = bH['group'];
                if (bh['isArrayCamera']) {
                    ci = bh;
                    for (var bM = bh['cameras'], bN = 0x0, bP = bM['length']; bN < bP; bN++) {
                        var bQ = bM[bN];
                        bI['layers']['test'](bQ['layers']) && (bS['viewport'](cj['copy'](bQ['viewport'])),
                        bO['setupLights'](bQ),
                        cL(bI, bg, bQ, bJ, bK, bL));
                    }
                } else
                    ci = null,
                    cL(bI, bg, bh, bJ, bK, bL);
            }
        }
        function cL(bf, bg, bh, bi, bF, bG) {
            if (bf['onBeforeRender'](c8, bg, bh, bi, bF, bG),
            bO = c2['get'](bg, ci || bh),
            bf['modelViewMatrix']['multiplyMatrices'](bh['matrixWorldInverse'], bf['matrixWorld']),
            bf['normalMatrix']['getNormalMatrix'](bf['modelViewMatrix']),
            bf['isImmediateRenderObject']) {
                bS['setMaterial'](bF);
                var bH = cN(bh, bg['fog'], bF, bf);
                cg['geometry'] = null,
                cg['program'] = null,
                cg['wireframe'] = !0x1,
                function(bf, bg) {
                    bf['render'](function(bf) {
                        c8['renderBufferImmediate'](bf, bg);
                    });
                }(bf, bH);
            } else
                c8['renderBufferDirect'](bh, bg['fog'], bi, bF, bf, bG);
            bf['onAfterRender'](c8, bg, bh, bi, bF, bG),
            bO = c2['get'](bg, ci || bh);
        }
        function cM(bf, bg, bh) {
            var bi = bV['get'](bf)
              , bF = bO['state']['lights']
              , bG = bO['state']['shadowsArray']
              , bH = bi['lightsHash']
              , bI = bF['state']['hash']
              , bJ = c0['getParameters'](bf, bF['state'], bG, bg, ct['numPlanes'], ct['numIntersection'], bh)
              , bK = c0['getProgramCode'](bf, bJ)
              , bL = bi['program']
              , bM = !0x0;
            if (void 0x0 === bL)
                bf['addEventListener']('dispose', cG);
            else if (bL['code'] !== bK)
                cH(bf);
            else if (bH['stateID'] !== bI['stateID'] || bH['directionalLength'] !== bI['directionalLength'] || bH['pointLength'] !== bI['pointLength'] || bH['spotLength'] !== bI['spotLength'] || bH['rectAreaLength'] !== bI['rectAreaLength'] || bH['hemiLength'] !== bI['hemiLength'] || bH['shadowsLength'] !== bI['shadowsLength'])
                bH['stateID'] = bI['stateID'],
                bH['directionalLength'] = bI['directionalLength'],
                bH['pointLength'] = bI['pointLength'],
                bH['spotLength'] = bI['spotLength'],
                bH['rectAreaLength'] = bI['rectAreaLength'],
                bH['hemiLength'] = bI['hemiLength'],
                bH['shadowsLength'] = bI['shadowsLength'],
                bM = !0x1;
            else {
                if (void 0x0 !== bJ['shaderID'])
                    return;
                bM = !0x1;
            }
            if (bM) {
                if (bJ['shaderID']) {
                    var bN = xo[bJ['shaderID']];
                    bi['shader'] = {
                        'name': bf['type'],
                        'uniforms': vQ(bN['uniforms']),
                        'vertexShader': bN['vertexShader'],
                        'fragmentShader': bN['fragmentShader']
                    };
                } else
                    bi['shader'] = {
                        'name': bf['type'],
                        'uniforms': bf['uniforms'],
                        'vertexShader': bf['vertexShader'],
                        'fragmentShader': bf['fragmentShader']
                    };
                bf['onBeforeCompile'](bi['shader'], c8),
                bK = c0['getProgramCode'](bf, bJ),
                bL = c0['acquireProgram'](bf, bi['shader'], bJ, bK),
                bi['program'] = bL,
                bf['program'] = bL;
            }
            var bP = bL['getAttributes']();
            if (bf['morphTargets']) {
                bf['numSupportedMorphTargets'] = 0x0;
                for (var bQ = 0x0; bQ < c8['maxMorphTargets']; bQ++)
                    bP['morphTarget' + bQ] >= 0x0 && bf['numSupportedMorphTargets']++;
            }
            if (bf['morphNormals']) {
                bf['numSupportedMorphNormals'] = 0x0;
                for (bQ = 0x0; bQ < c8['maxMorphNormals']; bQ++)
                    bP['morphNormal' + bQ] >= 0x0 && bf['numSupportedMorphNormals']++;
            }
            var bR = bi['shader']['uniforms'];
            (bf['isShaderMaterial'] || bf['isRawShaderMaterial']) && !0x0 !== bf['clipping'] || (bi['numClippingPlanes'] = ct['numPlanes'],
            bi['numIntersection'] = ct['numIntersection'],
            bR['clippingPlanes'] = ct['uniform']),
            bi['fog'] = bg,
            void 0x0 === bH && (bi['lightsHash'] = bH = {}),
            bH['stateID'] = bI['stateID'],
            bH['directionalLength'] = bI['directionalLength'],
            bH['pointLength'] = bI['pointLength'],
            bH['spotLength'] = bI['spotLength'],
            bH['rectAreaLength'] = bI['rectAreaLength'],
            bH['hemiLength'] = bI['hemiLength'],
            bH['shadowsLength'] = bI['shadowsLength'],
            bf['lights'] && (bR['ambientLightColor']['value'] = bF['state']['ambient'],
            bR['lightProbe']['value'] = bF['state']['probe'],
            bR['directionalLights']['value'] = bF['state']['directional'],
            bR['spotLights']['value'] = bF['state']['spot'],
            bR['rectAreaLights']['value'] = bF['state']['rectArea'],
            bR['pointLights']['value'] = bF['state']['point'],
            bR['hemisphereLights']['value'] = bF['state']['hemi'],
            bR['directionalShadowMap']['value'] = bF['state']['directionalShadowMap'],
            bR['directionalShadowMatrix']['value'] = bF['state']['directionalShadowMatrix'],
            bR['spotShadowMap']['value'] = bF['state']['spotShadowMap'],
            bR['spotShadowMatrix']['value'] = bF['state']['spotShadowMatrix'],
            bR['pointShadowMap']['value'] = bF['state']['pointShadowMap'],
            bR['pointShadowMatrix']['value'] = bF['state']['pointShadowMatrix']);
            var bS = bi['program']['getUniforms']()
              , bT = VF['seqWithValue'](bS['seq'], bR);
            bi['uniformsList'] = bT;
        }
        function cN(bf, bg, bh, bi) {
            bW['resetTextureUnits']();
            var bF = bV['get'](bh)
              , bG = bO['state']['lights']
              , bH = bF['lightsHash']
              , bI = bG['state']['hash'];
            if (cu && (cv || bf !== ch)) {
                var bJ = bf === ch && bh['id'] === cf;
                ct['setState'](bh['clippingPlanes'], bh['clipIntersection'], bh['clipShadows'], bf, bF, bJ);
            }
            !0x1 === bh['needsUpdate'] && (void 0x0 === bF['program'] ? bh['needsUpdate'] = !0x0 : bh['fog'] && bF['fog'] !== bg ? bh['needsUpdate'] = !0x0 : (!bh['lights'] || bH['stateID'] === bI['stateID'] && bH['directionalLength'] === bI['directionalLength'] && bH['pointLength'] === bI['pointLength'] && bH['spotLength'] === bI['spotLength'] && bH['rectAreaLength'] === bI['rectAreaLength'] && bH['hemiLength'] === bI['hemiLength'] && bH['shadowsLength'] === bI['shadowsLength']) && (void 0x0 === bF['numClippingPlanes'] || bF['numClippingPlanes'] === ct['numPlanes'] && bF['numIntersection'] === ct['numIntersection']) || (bh['needsUpdate'] = !0x0)),
            bh['needsUpdate'] && (cM(bh, bg, bi),
            bh['needsUpdate'] = !0x1);
            var bK, bL, bM = !0x1, bN = !0x1, bQ = !0x1, bT = bF['program'], bX = bT['getUniforms'](), bY = bF['shader']['uniforms'];
            if (bS['useProgram'](bT['program']) && (bM = !0x0,
            bN = !0x0,
            bQ = !0x0),
            bh['id'] !== cf && (cf = bh['id'],
            bN = !0x0),
            bM || ch !== bf) {
                if (bX['setValue'](bP, 'projectionMatrix', bf['projectionMatrix']),
                bR['logarithmicDepthBuffer'] && bX['setValue'](bP, 'logDepthBufFC', 0x2 / (Math['log'](bf['far'] + 0x1) / Math['LN2'])),
                ch !== bf && (ch = bf,
                bN = !0x0,
                bQ = !0x0),
                bh['isShaderMaterial'] || bh['isMeshPhongMaterial'] || bh['isMeshStandardMaterial'] || bh['envMap']) {
                    var bZ = bX['map']['cameraPosition'];
                    void 0x0 !== bZ && bZ['setValue'](bP, cx['setFromMatrixPosition'](bf['matrixWorld']));
                }
                (bh['isMeshPhongMaterial'] || bh['isMeshLambertMaterial'] || bh['isMeshBasicMaterial'] || bh['isMeshStandardMaterial'] || bh['isShaderMaterial'] || bh['skinning']) && bX['setValue'](bP, 'viewMatrix', bf['matrixWorldInverse']);
            }
            if (bh['skinning']) {
                bX['setOptional'](bP, bi, 'bindMatrix'),
                bX['setOptional'](bP, bi, 'bindMatrixInverse');
                var c0 = bi['skeleton'];
                if (c0) {
                    var c1 = c0['bones'];
                    if (bR['floatVertexTextures']) {
                        if (void 0x0 === c0['boneTexture']) {
                            var c2 = Math['sqrt'](0x4 * c1['length']);
                            c2 = e2['ceilPowerOfTwo'](c2),
                            c2 = Math['max'](c2, 0x4);
                            var c3 = new Float32Array(c2 * c2 * 0x4);
                            c3['set'](c0['boneMatrices']);
                            var c4 = new mo(c3,c2,c2,d9,d1);
                            c4['needsUpdate'] = !0x0,
                            c0['boneMatrices'] = c3,
                            c0['boneTexture'] = c4,
                            c0['boneTextureSize'] = c2;
                        }
                        bX['setValue'](bP, 'boneTexture', c0['boneTexture'], bW),
                        bX['setValue'](bP, 'boneTextureSize', c0['boneTextureSize']);
                    } else
                        bX['setOptional'](bP, c0, 'boneMatrices');
                }
            }
            return bN && (bX['setValue'](bP, 'toneMappingExposure', c8['toneMappingExposure']),
            bX['setValue'](bP, 'toneMappingWhitePoint', c8['toneMappingWhitePoint']),
            bh['lights'] && (bL = bQ,
            (bK = bY)['ambientLightColor']['needsUpdate'] = bL,
            bK['lightProbe']['needsUpdate'] = bL,
            bK['directionalLights']['needsUpdate'] = bL,
            bK['pointLights']['needsUpdate'] = bL,
            bK['spotLights']['needsUpdate'] = bL,
            bK['rectAreaLights']['needsUpdate'] = bL,
            bK['hemisphereLights']['needsUpdate'] = bL),
            bg && bh['fog'] && function(bf, bg) {
                bf['fogColor']['value']['copy'](bg['color']),
                bg['isFog'] ? (bf['fogNear']['value'] = bg['near'],
                bf['fogFar']['value'] = bg['far']) : bg['isFogExp2'] && (bf['fogDensity']['value'] = bg['density']);
            }(bY, bg),
            bh['isMeshBasicMaterial'] ? cO(bY, bh) : bh['isMeshLambertMaterial'] ? (cO(bY, bh),
            function(bf, bg) {
                bg['emissiveMap'] && (bf['emissiveMap']['value'] = bg['emissiveMap']);
            }(bY, bh)) : bh['isMeshPhongMaterial'] ? (cO(bY, bh),
            bh['isMeshToonMaterial'] ? function(bf, bg) {
                cP(bf, bg),
                bg['gradientMap'] && (bf['gradientMap']['value'] = bg['gradientMap']);
            }(bY, bh) : cP(bY, bh)) : bh['isMeshStandardMaterial'] ? (cO(bY, bh),
            bh['isMeshPhysicalMaterial'] ? function(bf, bg) {
                cQ(bf, bg),
                bf['reflectivity']['value'] = bg['reflectivity'],
                bf['clearCoat']['value'] = bg['clearCoat'],
                bf['clearCoatRoughness']['value'] = bg['clearCoatRoughness'];
            }(bY, bh) : cQ(bY, bh)) : bh['isMeshMatcapMaterial'] ? (cO(bY, bh),
            function(bf, bg) {
                bg['matcap'] && (bf['matcap']['value'] = bg['matcap']);
                bg['bumpMap'] && (bf['bumpMap']['value'] = bg['bumpMap'],
                bf['bumpScale']['value'] = bg['bumpScale'],
                bg['side'] === bU && (bf['bumpScale']['value'] *= -0x1));
                bg['normalMap'] && (bf['normalMap']['value'] = bg['normalMap'],
                bf['normalScale']['value']['copy'](bg['normalScale']),
                bg['side'] === bU && bf['normalScale']['value']['negate']());
                bg['displacementMap'] && (bf['displacementMap']['value'] = bg['displacementMap'],
                bf['displacementScale']['value'] = bg['displacementScale'],
                bf['displacementBias']['value'] = bg['displacementBias']);
            }(bY, bh)) : bh['isMeshDepthMaterial'] ? (cO(bY, bh),
            function(bf, bg) {
                bg['displacementMap'] && (bf['displacementMap']['value'] = bg['displacementMap'],
                bf['displacementScale']['value'] = bg['displacementScale'],
                bf['displacementBias']['value'] = bg['displacementBias']);
            }(bY, bh)) : bh['isMeshDistanceMaterial'] ? (cO(bY, bh),
            function(bf, bg) {
                bg['displacementMap'] && (bf['displacementMap']['value'] = bg['displacementMap'],
                bf['displacementScale']['value'] = bg['displacementScale'],
                bf['displacementBias']['value'] = bg['displacementBias']);
                bf['referencePosition']['value']['copy'](bg['referencePosition']),
                bf['nearDistance']['value'] = bg['nearDistance'],
                bf['farDistance']['value'] = bg['farDistance'];
            }(bY, bh)) : bh['isMeshNormalMaterial'] ? (cO(bY, bh),
            function(bf, bg) {
                bg['bumpMap'] && (bf['bumpMap']['value'] = bg['bumpMap'],
                bf['bumpScale']['value'] = bg['bumpScale'],
                bg['side'] === bU && (bf['bumpScale']['value'] *= -0x1));
                bg['normalMap'] && (bf['normalMap']['value'] = bg['normalMap'],
                bf['normalScale']['value']['copy'](bg['normalScale']),
                bg['side'] === bU && bf['normalScale']['value']['negate']());
                bg['displacementMap'] && (bf['displacementMap']['value'] = bg['displacementMap'],
                bf['displacementScale']['value'] = bg['displacementScale'],
                bf['displacementBias']['value'] = bg['displacementBias']);
            }(bY, bh)) : bh['isLineBasicMaterial'] ? (function(bf, bg) {
                bf['diffuse']['value']['copy'](bg['color']),
                bf['opacity']['value'] = bg['opacity'];
            }(bY, bh),
            bh['isLineDashedMaterial'] && function(bf, bg) {
                bf['dashSize']['value'] = bg['dashSize'],
                bf['totalSize']['value'] = bg['dashSize'] + bg['gapSize'],
                bf['scale']['value'] = bg['scale'];
            }(bY, bh)) : bh['isPointsMaterial'] ? function(bf, bg) {
                bf['diffuse']['value']['copy'](bg['color']),
                bf['opacity']['value'] = bg['opacity'],
                bf['size']['value'] = bg['size'] * co,
                bf['scale']['value'] = 0.5 * cn,
                bf['map']['value'] = bg['map'],
                null !== bg['map'] && (!0x0 === bg['map']['matrixAutoUpdate'] && bg['map']['updateMatrix'](),
                bf['uvTransform']['value']['copy'](bg['map']['matrix']));
            }(bY, bh) : bh['isSpriteMaterial'] ? function(bf, bg) {
                bf['diffuse']['value']['copy'](bg['color']),
                bf['opacity']['value'] = bg['opacity'],
                bf['rotation']['value'] = bg['rotation'],
                bf['map']['value'] = bg['map'],
                null !== bg['map'] && (!0x0 === bg['map']['matrixAutoUpdate'] && bg['map']['updateMatrix'](),
                bf['uvTransform']['value']['copy'](bg['map']['matrix']));
            }(bY, bh) : bh['isShadowMaterial'] && (bY['color']['value']['copy'](bh['color']),
            bY['opacity']['value'] = bh['opacity']),
            void 0x0 !== bY['ltc_1'] && (bY['ltc_1']['value'] = xn['LTC_1']),
            void 0x0 !== bY['ltc_2'] && (bY['ltc_2']['value'] = xn['LTC_2']),
            VF['upload'](bP, bF['uniformsList'], bY, bW)),
            bh['isShaderMaterial'] && !0x0 === bh['uniformsNeedUpdate'] && (VF['upload'](bP, bF['uniformsList'], bY, bW),
            bh['uniformsNeedUpdate'] = !0x1),
            bh['isSpriteMaterial'] && bX['setValue'](bP, 'center', bi['center']),
            bX['setValue'](bP, 'modelViewMatrix', bi['modelViewMatrix']),
            bX['setValue'](bP, 'normalMatrix', bi['normalMatrix']),
            bX['setValue'](bP, 'modelMatrix', bi['matrixWorld']),
            bT;
        }
        function cO(bf, bg) {
            var bh;
            bf['opacity']['value'] = bg['opacity'],
            bg['color'] && bf['diffuse']['value']['copy'](bg['color']),
            bg['emissive'] && bf['emissive']['value']['copy'](bg['emissive'])['multiplyScalar'](bg['emissiveIntensity']),
            bg['map'] && (bf['map']['value'] = bg['map']),
            bg['alphaMap'] && (bf['alphaMap']['value'] = bg['alphaMap']),
            bg['specularMap'] && (bf['specularMap']['value'] = bg['specularMap']),
            bg['envMap'] && (bf['envMap']['value'] = bg['envMap'],
            bf['flipEnvMap']['value'] = bg['envMap']['isCubeTexture'] ? -0x1 : 0x1,
            bf['reflectivity']['value'] = bg['reflectivity'],
            bf['refractionRatio']['value'] = bg['refractionRatio'],
            bf['maxMipLevel']['value'] = bV['get'](bg['envMap'])['__maxMipLevel']),
            bg['lightMap'] && (bf['lightMap']['value'] = bg['lightMap'],
            bf['lightMapIntensity']['value'] = bg['lightMapIntensity']),
            bg['aoMap'] && (bf['aoMap']['value'] = bg['aoMap'],
            bf['aoMapIntensity']['value'] = bg['aoMapIntensity']),
            bg['map'] ? bh = bg['map'] : bg['specularMap'] ? bh = bg['specularMap'] : bg['displacementMap'] ? bh = bg['displacementMap'] : bg['normalMap'] ? bh = bg['normalMap'] : bg['bumpMap'] ? bh = bg['bumpMap'] : bg['roughnessMap'] ? bh = bg['roughnessMap'] : bg['metalnessMap'] ? bh = bg['metalnessMap'] : bg['alphaMap'] ? bh = bg['alphaMap'] : bg['emissiveMap'] && (bh = bg['emissiveMap']),
            void 0x0 !== bh && (bh['isWebGLRenderTarget'] && (bh = bh['texture']),
            !0x0 === bh['matrixAutoUpdate'] && bh['updateMatrix'](),
            bf['uvTransform']['value']['copy'](bh['matrix']));
        }
        function cP(bf, bg) {
            bf['specular']['value']['copy'](bg['specular']),
            bf['shininess']['value'] = Math['max'](bg['shininess'], 0.0001),
            bg['emissiveMap'] && (bf['emissiveMap']['value'] = bg['emissiveMap']),
            bg['bumpMap'] && (bf['bumpMap']['value'] = bg['bumpMap'],
            bf['bumpScale']['value'] = bg['bumpScale'],
            bg['side'] === bU && (bf['bumpScale']['value'] *= -0x1)),
            bg['normalMap'] && (bf['normalMap']['value'] = bg['normalMap'],
            bf['normalScale']['value']['copy'](bg['normalScale']),
            bg['side'] === bU && bf['normalScale']['value']['negate']()),
            bg['displacementMap'] && (bf['displacementMap']['value'] = bg['displacementMap'],
            bf['displacementScale']['value'] = bg['displacementScale'],
            bf['displacementBias']['value'] = bg['displacementBias']);
        }
        function cQ(bf, bg) {
            bf['roughness']['value'] = bg['roughness'],
            bf['metalness']['value'] = bg['metalness'],
            bg['roughnessMap'] && (bf['roughnessMap']['value'] = bg['roughnessMap']),
            bg['metalnessMap'] && (bf['metalnessMap']['value'] = bg['metalnessMap']),
            bg['emissiveMap'] && (bf['emissiveMap']['value'] = bg['emissiveMap']),
            bg['bumpMap'] && (bf['bumpMap']['value'] = bg['bumpMap'],
            bf['bumpScale']['value'] = bg['bumpScale'],
            bg['side'] === bU && (bf['bumpScale']['value'] *= -0x1)),
            bg['normalMap'] && (bf['normalMap']['value'] = bg['normalMap'],
            bf['normalScale']['value']['copy'](bg['normalScale']),
            bg['side'] === bU && bf['normalScale']['value']['negate']()),
            bg['displacementMap'] && (bf['displacementMap']['value'] = bg['displacementMap'],
            bf['displacementScale']['value'] = bg['displacementScale'],
            bf['displacementBias']['value'] = bg['displacementBias']),
            bg['envMap'] && (bf['envMapIntensity']['value'] = bg['envMapIntensity']);
        }
        cJ['setAnimationLoop'](function(bf) {
            cC['isPresenting']() || cI && cI(bf);
        }),
        'undefined' != typeof window && cJ['setContext'](window),
        this['setAnimationLoop'] = function(bf) {
            cI = bf,
            cC['setAnimationLoop'](bf),
            cJ['start']();
        }
        ,
        this['render'] = function(bf, bg) {
            var bh, bi;
            if (void 0x0 !== arguments[0x2] && (console['warn']('THREE.WebGLRenderer.render():\x20the\x20renderTarget\x20argument\x20has\x20been\x20removed.\x20Use\x20.setRenderTarget()\x20instead.'),
            bh = arguments[0x2]),
            void 0x0 !== arguments[0x3] && (console['warn']('THREE.WebGLRenderer.render():\x20the\x20forceClear\x20argument\x20has\x20been\x20removed.\x20Use\x20.clear()\x20instead.'),
            bi = arguments[0x3]),
            bg && bg['isCamera']) {
                if (!c9) {
                    cg['geometry'] = null,
                    cg['program'] = null,
                    cg['wireframe'] = !0x1,
                    cf = -0x1,
                    ch = null,
                    !0x0 === bf['autoUpdate'] && bf['updateMatrixWorld'](),
                    null === bg['parent'] && bg['updateMatrixWorld'](),
                    cC['enabled'] && (bg = cC['getCamera'](bg)),
                    (bO = c2['get'](bf, bg))['init'](),
                    bf['onBeforeRender'](c8, bf, bg, bh || cd),
                    cw['multiplyMatrices'](bg['projectionMatrix'], bg['matrixWorldInverse']),
                    cs['setFromMatrix'](cw),
                    cv = this['localClippingEnabled'],
                    cu = ct['init'](this['clippingPlanes'], cv, bg),
                    (bN = c1['get'](bf, bg))['init'](),
                    function bf(bg, bh, bi, bF) {
                        if (!0x1 === bg['visible'])
                            return;
                        var bG = bg['layers']['test'](bh['layers']);
                        if (bG)
                            if (bg['isGroup'])
                                bi = bg['renderOrder'];
                            else if (bg['isLight'])
                                bO['pushLight'](bg),
                                bg['castShadow'] && bO['pushShadow'](bg);
                            else if (bg['isSprite']) {
                                if (!bg['frustumCulled'] || cs['intersectsSprite'](bg)) {
                                    bF && cx['setFromMatrixPosition'](bg['matrixWorld'])['applyMatrix4'](cw);
                                    var bH = bZ['update'](bg)
                                      , bI = bg['material'];
                                    bI['visible'] && bN['push'](bg, bH, bI, bi, cx['z'], null);
                                }
                            } else if (bg['isImmediateRenderObject'])
                                bF && cx['setFromMatrixPosition'](bg['matrixWorld'])['applyMatrix4'](cw),
                                bN['push'](bg, null, bg['material'], bi, cx['z'], null);
                            else if ((bg['isMesh'] || bg['isLine'] || bg['isPoints']) && (bg['isSkinnedMesh'] && bg['skeleton']['update'](),
                            !bg['frustumCulled'] || cs['intersectsObject'](bg))) {
                                bF && cx['setFromMatrixPosition'](bg['matrixWorld'])['applyMatrix4'](cw);
                                var bH = bZ['update'](bg)
                                  , bI = bg['material'];
                                if (Array['isArray'](bI))
                                    for (var bJ = bH['groups'], bK = 0x0, bL = bJ['length']; bK < bL; bK++) {
                                        var bM = bJ[bK]
                                          , bP = bI[bM['materialIndex']];
                                        bP && bP['visible'] && bN['push'](bg, bH, bP, bi, cx['z'], bM);
                                    }
                                else
                                    bI['visible'] && bN['push'](bg, bH, bI, bi, cx['z'], null);
                            }
                        var bQ = bg['children'];
                        for (var bK = 0x0, bL = bQ['length']; bK < bL; bK++)
                            bf(bQ[bK], bh, bi, bF);
                    }(bf, bg, 0x0, c8['sortObjects']),
                    !0x0 === c8['sortObjects'] && bN['sort'](),
                    cu && ct['beginShadows']();
                    var bF = bO['state']['shadowsArray'];
                    cD['render'](bF, bf, bg),
                    bO['setupLights'](bg),
                    cu && ct['endShadows'](),
                    this['info']['autoReset'] && this['info']['reset'](),
                    void 0x0 !== bh && this['setRenderTarget'](bh),
                    c3['render'](bN, bf, bg, bi);
                    var bG = bN['opaque']
                      , bH = bN['transparent'];
                    if (bf['overrideMaterial']) {
                        var bI = bf['overrideMaterial'];
                        bG['length'] && cK(bG, bf, bg, bI),
                        bH['length'] && cK(bH, bf, bg, bI);
                    } else
                        bG['length'] && cK(bG, bf, bg),
                        bH['length'] && cK(bH, bf, bg);
                    bf['onAfterRender'](c8, bf, bg),
                    null !== cd && (bW['updateRenderTargetMipmap'](cd),
                    bW['updateMultisampleRenderTarget'](cd)),
                    bS['buffers']['depth']['setTest'](!0x0),
                    bS['buffers']['depth']['setMask'](!0x0),
                    bS['buffers']['color']['setMask'](!0x0),
                    bS['setPolygonOffset'](!0x1),
                    cC['enabled'] && cC['submitFrame'](),
                    bN = null,
                    bO = null;
                }
            } else
                console['error']('THREE.WebGLRenderer.render:\x20camera\x20is\x20not\x20an\x20instance\x20of\x20THREE.Camera.');
        }
        ,
        this['setFramebuffer'] = function(bf) {
            ca !== bf && bP['bindFramebuffer'](0x8d40, bf),
            ca = bf;
        }
        ,
        this['getActiveCubeFace'] = function() {
            return cb;
        }
        ,
        this['getActiveMipMapLevel'] = function() {
            return cc;
        }
        ,
        this['getRenderTarget'] = function() {
            return cd;
        }
        ,
        this['setRenderTarget'] = function(bf, bg, bh) {
            cd = bf,
            cb = bg,
            cc = bh,
            bf && void 0x0 === bV['get'](bf)['__webglFramebuffer'] && bW['setupRenderTarget'](bf);
            var bi = ca
              , bF = !0x1;
            if (bf) {
                var bG = bV['get'](bf)['__webglFramebuffer'];
                bf['isWebGLRenderTargetCube'] ? (bi = bG[bg || 0x0],
                bF = !0x0) : bi = bf['isWebGLMultisampleRenderTarget'] ? bV['get'](bf)['__webglMultisampledFramebuffer'] : bG,
                cj['copy'](bf['viewport']),
                ck['copy'](bf['scissor']),
                cl = bf['scissorTest'];
            } else
                cj['copy'](cp)['multiplyScalar'](co),
                ck['copy'](cq)['multiplyScalar'](co),
                cl = cr;
            if (ce !== bi && (bP['bindFramebuffer'](0x8d40, bi),
            ce = bi),
            bS['viewport'](cj),
            bS['scissor'](ck),
            bS['setScissorTest'](cl),
            bF) {
                var bH = bV['get'](bf['texture']);
                bP['framebufferTexture2D'](0x8d40, 0x8ce0, 0x8515 + (bg || 0x0), bH['__webglTexture'], bh || 0x0);
            }
        }
        ,
        this['readRenderTargetPixels'] = function(bf, bg, bh, bi, bF, bG, bH) {
            if (bf && bf['isWebGLRenderTarget']) {
                var bI = bV['get'](bf)['__webglFramebuffer'];
                if (bf['isWebGLRenderTargetCube'] && void 0x0 !== bH && (bI = bI[bH]),
                bI) {
                    var bJ = !0x1;
                    bI !== ce && (bP['bindFramebuffer'](0x8d40, bI),
                    bJ = !0x0);
                    try {
                        var bK = bf['texture']
                          , bL = bK['format']
                          , bM = bK['type'];
                        if (bL !== d9 && c7['convert'](bL) !== bP['getParameter'](0x8b9b))
                            return void console['error']('THREE.WebGLRenderer.readRenderTargetPixels:\x20renderTarget\x20is\x20not\x20in\x20RGBA\x20or\x20implementation\x20defined\x20format.');
                        if (!(bM === cV || c7['convert'](bM) === bP['getParameter'](0x8b9a) || bM === d1 && (bR['isWebGL2'] || bQ['get']('OES_texture_float') || bQ['get']('WEBGL_color_buffer_float')) || bM === d2 && (bR['isWebGL2'] ? bQ['get']('EXT_color_buffer_float') : bQ['get']('EXT_color_buffer_half_float'))))
                            return void console['error']('THREE.WebGLRenderer.readRenderTargetPixels:\x20renderTarget\x20is\x20not\x20in\x20UnsignedByteType\x20or\x20implementation\x20defined\x20type.');
                        0x8cd5 === bP['checkFramebufferStatus'](0x8d40) ? bg >= 0x0 && bg <= bf['width'] - bi && bh >= 0x0 && bh <= bf['height'] - bF && bP['readPixels'](bg, bh, bi, bF, c7['convert'](bL), c7['convert'](bM), bG) : console['error']('THREE.WebGLRenderer.readRenderTargetPixels:\x20readPixels\x20from\x20renderTarget\x20failed.\x20Framebuffer\x20not\x20complete.');
                    } finally {
                        bJ && bP['bindFramebuffer'](0x8d40, ce);
                    }
                }
            } else
                console['error']('THREE.WebGLRenderer.readRenderTargetPixels:\x20renderTarget\x20is\x20not\x20THREE.WebGLRenderTarget.');
        }
        ,
        this['copyFramebufferToTexture'] = function(bf, bg, bh) {
            var bi = bg['image']['width']
              , bF = bg['image']['height']
              , bG = c7['convert'](bg['format']);
            bW['setTexture2D'](bg, 0x0),
            bP['copyTexImage2D'](0xde1, bh || 0x0, bG, bf['x'], bf['y'], bi, bF, 0x0);
        }
        ,
        this['copyTextureToTexture'] = function(bf, bg, bh, bi) {
            var bF = bg['image']['width']
              , bG = bg['image']['height']
              , bH = c7['convert'](bh['format'])
              , bI = c7['convert'](bh['type']);
            bW['setTexture2D'](bh, 0x0),
            bg['isDataTexture'] ? bP['texSubImage2D'](0xde1, bi || 0x0, bf['x'], bf['y'], bF, bG, bH, bI, bg['image']['data']) : bP['texSubImage2D'](0xde1, bi || 0x0, bf['x'], bf['y'], bH, bI, bg['image']);
        }
        ;
    }
    function ae3(bf, bg) {
        this['name'] = '',
        this['color'] = new w7(bf),
        this['density'] = void 0x0 !== bg ? bg : 0.00025;
    }
    function ae6(bf, bg, bh) {
        this['name'] = '',
        this['color'] = new w7(bf),
        this['near'] = void 0x0 !== bg ? bg : 0x1,
        this['far'] = void 0x0 !== bh ? bh : 0x3e8;
    }
    function aea() {
        yT['call'](this),
        this['type'] = 'Scene',
        this['background'] = null,
        this['fog'] = null,
        this['overrideMaterial'] = null,
        this['autoUpdate'] = !0x0;
    }
    function aeb(bf, bg) {
        this['array'] = bf,
        this['stride'] = bg,
        this['count'] = void 0x0 !== bf ? bf['length'] / bg : 0x0,
        this['dynamic'] = !0x1,
        this['updateRange'] = {
            'offset': 0x0,
            'count': -0x1
        },
        this['version'] = 0x0;
    }
    function aee(bf, bg, bh, bi) {
        this['data'] = bf,
        this['itemSize'] = bg,
        this['offset'] = bh,
        this['normalized'] = !0x0 === bi;
    }
    function aej(bf) {
        Kf['call'](this),
        this['type'] = 'SpriteMaterial',
        this['color'] = new w7(0xffffff),
        this['map'] = null,
        this['rotation'] = 0x0,
        this['sizeAttenuation'] = !0x0,
        this['lights'] = !0x1,
        this['transparent'] = !0x0,
        this['setValues'](bf);
    }
    function ael(bf) {
        if (yT['call'](this),
        this['type'] = 'Sprite',
        void 0x0 === a6I) {
            a6I = new Gf();
            var bg = new aeb(new Float32Array([-0.5, -0.5, 0x0, 0x0, 0x0, 0.5, -0.5, 0x0, 0x1, 0x0, 0.5, 0.5, 0x0, 0x1, 0x1, -0.5, 0.5, 0x0, 0x0, 0x1]),0x5);
            a6I['setIndex']([0x0, 0x1, 0x2, 0x0, 0x2, 0x3]),
            a6I['addAttribute']('position', new aee(bg,0x3,0x0,!0x1)),
            a6I['addAttribute']('uv', new aee(bg,0x2,0x3,!0x1));
        }
        this['geometry'] = a6I,
        this['material'] = void 0x0 !== bf ? bf : new aej(),
        this['center'] = new eC(0.5,0.5);
    }
    function aeo() {
        yT['call'](this),
        this['type'] = 'LOD',
        Object['defineProperties'](this, {
            'levels': {
                'enumerable': !0x0,
                'value': []
            }
        });
    }
    function aep(bf, bg) {
        bf && bf['isGeometry'] && console['error']('THREE.SkinnedMesh\x20no\x20longer\x20supports\x20THREE.Geometry.\x20Use\x20THREE.BufferGeometry\x20instead.'),
        KY['call'](this, bf, bg),
        this['type'] = 'SkinnedMesh',
        this['bindMode'] = 'attached',
        this['bindMatrix'] = new mR(),
        this['bindMatrixInverse'] = new mR();
    }
    function aes(bf, bg) {
        if (bf = bf || [],
        this['bones'] = bf['slice'](0x0),
        this['boneMatrices'] = new Float32Array(0x10 * this['bones']['length']),
        void 0x0 === bg)
            this['calculateInverses']();
        else if (this['bones']['length'] === bg['length'])
            this['boneInverses'] = bg['slice'](0x0);
        else {
            console['warn']('THREE.Skeleton\x20boneInverses\x20is\x20the\x20wrong\x20length.'),
            this['boneInverses'] = [];
            for (var bh = 0x0, bi = this['bones']['length']; bh < bi; bh++)
                this['boneInverses']['push'](new mR());
        }
    }
    function aex() {
        yT['call'](this),
        this['type'] = 'Bone';
    }
    function aey(bf) {
        Kf['call'](this),
        this['type'] = 'LineBasicMaterial',
        this['color'] = new w7(0xffffff),
        this['linewidth'] = 0x1,
        this['linecap'] = 'round',
        this['linejoin'] = 'round',
        this['lights'] = !0x1,
        this['setValues'](bf);
    }
    function aeA(bf, bg, bh) {
        0x1 === bh && console['error']('THREE.Line:\x20parameter\x20THREE.LinePieces\x20no\x20longer\x20supported.\x20Use\x20THREE.LineSegments\x20instead.'),
        yT['call'](this),
        this['type'] = 'Line',
        this['geometry'] = void 0x0 !== bf ? bf : new Gf(),
        this['material'] = void 0x0 !== bg ? bg : new aey({
            'color': 0xffffff * Math['random']()
        });
    }
    function aeE(bf, bg) {
        aeA['call'](this, bf, bg),
        this['type'] = 'LineSegments';
    }
    function aeH(bf, bg) {
        aeA['call'](this, bf, bg),
        this['type'] = 'LineLoop';
    }
    function aeK(bf) {
        Kf['call'](this),
        this['type'] = 'PointsMaterial',
        this['color'] = new w7(0xffffff),
        this['map'] = null,
        this['size'] = 0x1,
        this['sizeAttenuation'] = !0x0,
        this['morphTargets'] = !0x1,
        this['lights'] = !0x1,
        this['setValues'](bf);
    }
    function aeM(bf, bg) {
        yT['call'](this),
        this['type'] = 'Points',
        this['geometry'] = void 0x0 !== bf ? bf : new Gf(),
        this['material'] = void 0x0 !== bg ? bg : new aeK({
            'color': 0xffffff * Math['random']()
        });
    }
    function aeP(bf, bg, bh, bi, bF, bG, bH, bI, bJ) {
        lW['call'](this, bf, bg, bh, bi, bF, bG, bH, bI, bJ),
        this['format'] = void 0x0 !== bH ? bH : d8,
        this['minFilter'] = void 0x0 !== bG ? bG : cS,
        this['magFilter'] = void 0x0 !== bF ? bF : cS,
        this['generateMipmaps'] = !0x1;
    }
    function aeZ(bf, bg, bh, bi, bF, bG, bH, bI, bJ, bK, bL, bM) {
        lW['call'](this, null, bG, bH, bI, bJ, bK, bi, bF, bL, bM),
        this['image'] = {
            'width': bg,
            'height': bh
        },
        this['mipmaps'] = bf,
        this['flipY'] = !0x1,
        this['generateMipmaps'] = !0x1;
    }
    function afc(bf, bg, bh, bi, bF, bG, bH, bI, bJ) {
        lW['call'](this, bf, bg, bh, bi, bF, bG, bH, bI, bJ),
        this['needsUpdate'] = !0x0;
    }
    function afm(bf, bg, bh, bi, bF, bG, bH, bI, bJ, bK) {
        if ((bK = void 0x0 !== bK ? bK : dd) !== dd && bK !== de)
            throw new Error('DepthTexture\x20format\x20must\x20be\x20either\x20THREE.DepthFormat\x20or\x20THREE.DepthStencilFormat');
        void 0x0 === bh && bK === dd && (bh = cY),
        void 0x0 === bh && bK === de && (bh = d6),
        lW['call'](this, null, bi, bF, bG, bH, bI, bK, bh, bJ),
        this['image'] = {
            'width': bf,
            'height': bg
        },
        this['magFilter'] = void 0x0 !== bH ? bH : cP,
        this['minFilter'] = void 0x0 !== bI ? bI : cP,
        this['flipY'] = !0x1,
        this['generateMipmaps'] = !0x1;
    }
    function afx(bf) {
        Gf['call'](this),
        this['type'] = 'WireframeGeometry';
        var bg, bh, bi, bF, bG, bH, bI, bJ, bK, bL, bM = [], bN = [0x0, 0x0], bO = {}, bP = ['a', 'b', 'c'];
        if (bf && bf['isGeometry']) {
            var bQ = bf['faces'];
            for (bg = 0x0,
            bi = bQ['length']; bg < bi; bg++) {
                var bR = bQ[bg];
                for (bh = 0x0; bh < 0x3; bh++)
                    bI = bR[bP[bh]],
                    bJ = bR[bP[(bh + 0x1) % 0x3]],
                    bN[0x0] = Math['min'](bI, bJ),
                    bN[0x1] = Math['max'](bI, bJ),
                    void 0x0 === bO[bK = bN[0x0] + ',' + bN[0x1]] && (bO[bK] = {
                        'index1': bN[0x0],
                        'index2': bN[0x1]
                    });
            }
            for (bK in bO)
                bH = bO[bK],
                bL = bf['vertices'][bH['index1']],
                bM['push'](bL['x'], bL['y'], bL['z']),
                bL = bf['vertices'][bH['index2']],
                bM['push'](bL['x'], bL['y'], bL['z']);
        } else if (bf && bf['isBufferGeometry']) {
            var bS, bT, bU, bV, bW, bX, bY;
            if (bL = new eK(),
            null !== bf['index']) {
                for (bS = bf['attributes']['position'],
                bT = bf['index'],
                0x0 === (bU = bf['groups'])['length'] && (bU = [{
                    'start': 0x0,
                    'count': bT['count'],
                    'materialIndex': 0x0
                }]),
                bF = 0x0,
                bG = bU['length']; bF < bG; ++bF)
                    for (bg = bW = (bV = bU[bF])['start'],
                    bi = bW + bV['count']; bg < bi; bg += 0x3)
                        for (bh = 0x0; bh < 0x3; bh++)
                            bI = bT['getX'](bg + bh),
                            bJ = bT['getX'](bg + (bh + 0x1) % 0x3),
                            bN[0x0] = Math['min'](bI, bJ),
                            bN[0x1] = Math['max'](bI, bJ),
                            void 0x0 === bO[bK = bN[0x0] + ',' + bN[0x1]] && (bO[bK] = {
                                'index1': bN[0x0],
                                'index2': bN[0x1]
                            });
                for (bK in bO)
                    bH = bO[bK],
                    bL['fromBufferAttribute'](bS, bH['index1']),
                    bM['push'](bL['x'], bL['y'], bL['z']),
                    bL['fromBufferAttribute'](bS, bH['index2']),
                    bM['push'](bL['x'], bL['y'], bL['z']);
            } else
                for (bg = 0x0,
                bi = (bS = bf['attributes']['position'])['count'] / 0x3; bg < bi; bg++)
                    for (bh = 0x0; bh < 0x3; bh++)
                        bX = 0x3 * bg + bh,
                        bL['fromBufferAttribute'](bS, bX),
                        bM['push'](bL['x'], bL['y'], bL['z']),
                        bY = 0x3 * bg + (bh + 0x1) % 0x3,
                        bL['fromBufferAttribute'](bS, bY),
                        bM['push'](bL['x'], bL['y'], bL['z']);
        }
        this['addAttribute']('position', new Be(bM,0x3));
    }
    function afW(bf, bg, bh) {
        AH['call'](this),
        this['type'] = 'ParametricGeometry',
        this['parameters'] = {
            'func': bf,
            'slices': bg,
            'stacks': bh
        },
        this['fromBufferGeometry'](new ag0(bf,bg,bh)),
        this['mergeVertices']();
    }
    function ag0(bf, bg, bh) {
        Gf['call'](this),
        this['type'] = 'ParametricBufferGeometry',
        this['parameters'] = {
            'func': bf,
            'slices': bg,
            'stacks': bh
        };
        var bi, bF, bG = [], bH = [], bI = [], bJ = [], bK = new eK(), bL = new eK(), bM = new eK(), bN = new eK(), bO = new eK();
        bf['length'] < 0x3 && console['error']('THREE.ParametricGeometry:\x20Function\x20must\x20now\x20modify\x20a\x20Vector3\x20as\x20third\x20parameter.');
        var bP = bg + 0x1;
        for (bi = 0x0; bi <= bh; bi++) {
            var bQ = bi / bh;
            for (bF = 0x0; bF <= bg; bF++) {
                var bR = bF / bg;
                bf(bR, bQ, bL),
                bH['push'](bL['x'], bL['y'], bL['z']),
                bR - 0.00001 >= 0x0 ? (bf(bR - 0.00001, bQ, bM),
                bN['subVectors'](bL, bM)) : (bf(bR + 0.00001, bQ, bM),
                bN['subVectors'](bM, bL)),
                bQ - 0.00001 >= 0x0 ? (bf(bR, bQ - 0.00001, bM),
                bO['subVectors'](bL, bM)) : (bf(bR, bQ + 0.00001, bM),
                bO['subVectors'](bM, bL)),
                bK['crossVectors'](bN, bO)['normalize'](),
                bI['push'](bK['x'], bK['y'], bK['z']),
                bJ['push'](bR, bQ);
            }
        }
        for (bi = 0x0; bi < bh; bi++)
            for (bF = 0x0; bF < bg; bF++) {
                var bS = bi * bP + bF
                  , bT = bi * bP + bF + 0x1
                  , bU = (bi + 0x1) * bP + bF + 0x1
                  , bV = (bi + 0x1) * bP + bF;
                bG['push'](bS, bT, bV),
                bG['push'](bT, bU, bV);
            }
        this['setIndex'](bG),
        this['addAttribute']('position', new Be(bH,0x3)),
        this['addAttribute']('normal', new Be(bI,0x3)),
        this['addAttribute']('uv', new Be(bJ,0x2));
    }
    function agm(bf, bg, bh, bi) {
        AH['call'](this),
        this['type'] = 'PolyhedronGeometry',
        this['parameters'] = {
            'vertices': bf,
            'indices': bg,
            'radius': bh,
            'detail': bi
        },
        this['fromBufferGeometry'](new agr(bf,bg,bh,bi)),
        this['mergeVertices']();
    }
    function agr(bf, bg, bh, bi) {
        Gf['call'](this),
        this['type'] = 'PolyhedronBufferGeometry',
        this['parameters'] = {
            'vertices': bf,
            'indices': bg,
            'radius': bh,
            'detail': bi
        },
        bh = bh || 0x1;
        var bF = []
          , bG = [];
        function bH(bf, bg, bh, bi) {
            var bF, bG, bH = Math['pow'](0x2, bi), bJ = [];
            for (bF = 0x0; bF <= bH; bF++) {
                bJ[bF] = [];
                var bK = bf['clone']()['lerp'](bh, bF / bH)
                  , bL = bg['clone']()['lerp'](bh, bF / bH)
                  , bM = bH - bF;
                for (bG = 0x0; bG <= bM; bG++)
                    bJ[bF][bG] = 0x0 === bG && bF === bH ? bK : bK['clone']()['lerp'](bL, bG / bM);
            }
            for (bF = 0x0; bF < bH; bF++)
                for (bG = 0x0; bG < 0x2 * (bH - bF) - 0x1; bG++) {
                    var bN = Math['floor'](bG / 0x2);
                    bG % 0x2 == 0x0 ? (bI(bJ[bF][bN + 0x1]),
                    bI(bJ[bF + 0x1][bN]),
                    bI(bJ[bF][bN])) : (bI(bJ[bF][bN + 0x1]),
                    bI(bJ[bF + 0x1][bN + 0x1]),
                    bI(bJ[bF + 0x1][bN]));
                }
        }
        function bI(bf) {
            bF['push'](bf['x'], bf['y'], bf['z']);
        }
        function bJ(bg, bh) {
            var bi = 0x3 * bg;
            bh['x'] = bf[bi + 0x0],
            bh['y'] = bf[bi + 0x1],
            bh['z'] = bf[bi + 0x2];
        }
        function bK(bf, bg, bh, bi) {
            bi < 0x0 && 0x1 === bf['x'] && (bG[bg] = bf['x'] - 0x1),
            0x0 === bh['x'] && 0x0 === bh['z'] && (bG[bg] = bi / 0x2 / Math['PI'] + 0.5);
        }
        function bL(bf) {
            return Math['atan2'](bf['z'], -bf['x']);
        }
        !function(bf) {
            for (var bh = new eK(), bi = new eK(), bF = new eK(), bG = 0x0; bG < bg['length']; bG += 0x3)
                bJ(bg[bG + 0x0], bh),
                bJ(bg[bG + 0x1], bi),
                bJ(bg[bG + 0x2], bF),
                bH(bh, bi, bF, bf);
        }(bi = bi || 0x0),
        function(bf) {
            for (var bg = new eK(), bh = 0x0; bh < bF['length']; bh += 0x3)
                bg['x'] = bF[bh + 0x0],
                bg['y'] = bF[bh + 0x1],
                bg['z'] = bF[bh + 0x2],
                bg['normalize']()['multiplyScalar'](bf),
                bF[bh + 0x0] = bg['x'],
                bF[bh + 0x1] = bg['y'],
                bF[bh + 0x2] = bg['z'];
        }(bh),
        function() {
            for (var bf = new eK(), bg = 0x0; bg < bF['length']; bg += 0x3) {
                bf['x'] = bF[bg + 0x0],
                bf['y'] = bF[bg + 0x1],
                bf['z'] = bF[bg + 0x2];
                var bh = bL(bf) / 0x2 / Math['PI'] + 0.5
                  , bi = (bH = bf,
                Math['atan2'](-bH['y'], Math['sqrt'](bH['x'] * bH['x'] + bH['z'] * bH['z'])) / Math['PI'] + 0.5);
                bG['push'](bh, 0x1 - bi);
            }
            var bH;
            (function() {
                for (var bf = new eK(), bg = new eK(), bh = new eK(), bi = new eK(), bH = new eC(), bI = new eC(), bJ = new eC(), bM = 0x0, bN = 0x0; bM < bF['length']; bM += 0x9,
                bN += 0x6) {
                    bf['set'](bF[bM + 0x0], bF[bM + 0x1], bF[bM + 0x2]),
                    bg['set'](bF[bM + 0x3], bF[bM + 0x4], bF[bM + 0x5]),
                    bh['set'](bF[bM + 0x6], bF[bM + 0x7], bF[bM + 0x8]),
                    bH['set'](bG[bN + 0x0], bG[bN + 0x1]),
                    bI['set'](bG[bN + 0x2], bG[bN + 0x3]),
                    bJ['set'](bG[bN + 0x4], bG[bN + 0x5]),
                    bi['copy'](bf)['add'](bg)['add'](bh)['divideScalar'](0x3);
                    var bO = bL(bi);
                    bK(bH, bN + 0x0, bf, bO),
                    bK(bI, bN + 0x2, bg, bO),
                    bK(bJ, bN + 0x4, bh, bO);
                }
            }(),
            function() {
                for (var bf = 0x0; bf < bG['length']; bf += 0x6) {
                    var bg = bG[bf + 0x0]
                      , bh = bG[bf + 0x2]
                      , bi = bG[bf + 0x4]
                      , bF = Math['max'](bg, bh, bi)
                      , bH = Math['min'](bg, bh, bi);
                    bF > 0.9 && bH < 0.1 && (bg < 0.2 && (bG[bf + 0x0] += 0x1),
                    bh < 0.2 && (bG[bf + 0x2] += 0x1),
                    bi < 0.2 && (bG[bf + 0x4] += 0x1));
                }
            }());
        }(),
        this['addAttribute']('position', new Be(bF,0x3)),
        this['addAttribute']('normal', new Be(bF['slice'](),0x3)),
        this['addAttribute']('uv', new Be(bG,0x2)),
        0x0 === bi ? this['computeVertexNormals']() : this['normalizeNormals']();
    }
    function ahr(bf, bg) {
        AH['call'](this),
        this['type'] = 'TetrahedronGeometry',
        this['parameters'] = {
            'radius': bf,
            'detail': bg
        },
        this['fromBufferGeometry'](new ahu(bf,bg)),
        this['mergeVertices']();
    }
    function ahu(bf, bg) {
        agr['call'](this, [0x1, 0x1, 0x1, -0x1, -0x1, 0x1, -0x1, 0x1, -0x1, 0x1, -0x1, -0x1], [0x2, 0x1, 0x0, 0x0, 0x3, 0x2, 0x1, 0x3, 0x0, 0x2, 0x3, 0x1], bf, bg),
        this['type'] = 'TetrahedronBufferGeometry',
        this['parameters'] = {
            'radius': bf,
            'detail': bg
        };
    }
    function ahx(bf, bg) {
        AH['call'](this),
        this['type'] = 'OctahedronGeometry',
        this['parameters'] = {
            'radius': bf,
            'detail': bg
        },
        this['fromBufferGeometry'](new ahA(bf,bg)),
        this['mergeVertices']();
    }
    function ahA(bf, bg) {
        agr['call'](this, [0x1, 0x0, 0x0, -0x1, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, -0x1, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, -0x1], [0x0, 0x2, 0x4, 0x0, 0x4, 0x3, 0x0, 0x3, 0x5, 0x0, 0x5, 0x2, 0x1, 0x2, 0x5, 0x1, 0x5, 0x3, 0x1, 0x3, 0x4, 0x1, 0x4, 0x2], bf, bg),
        this['type'] = 'OctahedronBufferGeometry',
        this['parameters'] = {
            'radius': bf,
            'detail': bg
        };
    }
    function ahD(bf, bg) {
        AH['call'](this),
        this['type'] = 'IcosahedronGeometry',
        this['parameters'] = {
            'radius': bf,
            'detail': bg
        },
        this['fromBufferGeometry'](new ahG(bf,bg)),
        this['mergeVertices']();
    }
    function ahG(bf, bg) {
        var bh = (0x1 + Math['sqrt'](0x5)) / 0x2
          , bi = [-0x1, bh, 0x0, 0x1, bh, 0x0, -0x1, -bh, 0x0, 0x1, -bh, 0x0, 0x0, -0x1, bh, 0x0, 0x1, bh, 0x0, -0x1, -bh, 0x0, 0x1, -bh, bh, 0x0, -0x1, bh, 0x0, 0x1, -bh, 0x0, -0x1, -bh, 0x0, 0x1];
        agr['call'](this, bi, [0x0, 0xb, 0x5, 0x0, 0x5, 0x1, 0x0, 0x1, 0x7, 0x0, 0x7, 0xa, 0x0, 0xa, 0xb, 0x1, 0x5, 0x9, 0x5, 0xb, 0x4, 0xb, 0xa, 0x2, 0xa, 0x7, 0x6, 0x7, 0x1, 0x8, 0x3, 0x9, 0x4, 0x3, 0x4, 0x2, 0x3, 0x2, 0x6, 0x3, 0x6, 0x8, 0x3, 0x8, 0x9, 0x4, 0x9, 0x5, 0x2, 0x4, 0xb, 0x6, 0x2, 0xa, 0x8, 0x6, 0x7, 0x9, 0x8, 0x1], bf, bg),
        this['type'] = 'IcosahedronBufferGeometry',
        this['parameters'] = {
            'radius': bf,
            'detail': bg
        };
    }
    function ahL(bf, bg) {
        AH['call'](this),
        this['type'] = 'DodecahedronGeometry',
        this['parameters'] = {
            'radius': bf,
            'detail': bg
        },
        this['fromBufferGeometry'](new ahO(bf,bg)),
        this['mergeVertices']();
    }
    function ahO(bf, bg) {
        var bh = (0x1 + Math['sqrt'](0x5)) / 0x2
          , bi = 0x1 / bh
          , bF = [-0x1, -0x1, -0x1, -0x1, -0x1, 0x1, -0x1, 0x1, -0x1, -0x1, 0x1, 0x1, 0x1, -0x1, -0x1, 0x1, -0x1, 0x1, 0x1, 0x1, -0x1, 0x1, 0x1, 0x1, 0x0, -bi, -bh, 0x0, -bi, bh, 0x0, bi, -bh, 0x0, bi, bh, -bi, -bh, 0x0, -bi, bh, 0x0, bi, -bh, 0x0, bi, bh, 0x0, -bh, 0x0, -bi, bh, 0x0, -bi, -bh, 0x0, bi, bh, 0x0, bi];
        agr['call'](this, bF, [0x3, 0xb, 0x7, 0x3, 0x7, 0xf, 0x3, 0xf, 0xd, 0x7, 0x13, 0x11, 0x7, 0x11, 0x6, 0x7, 0x6, 0xf, 0x11, 0x4, 0x8, 0x11, 0x8, 0xa, 0x11, 0xa, 0x6, 0x8, 0x0, 0x10, 0x8, 0x10, 0x2, 0x8, 0x2, 0xa, 0x0, 0xc, 0x1, 0x0, 0x1, 0x12, 0x0, 0x12, 0x10, 0x6, 0xa, 0x2, 0x6, 0x2, 0xd, 0x6, 0xd, 0xf, 0x2, 0x10, 0x12, 0x2, 0x12, 0x3, 0x2, 0x3, 0xd, 0x12, 0x1, 0x9, 0x12, 0x9, 0xb, 0x12, 0xb, 0x3, 0x4, 0xe, 0xc, 0x4, 0xc, 0x0, 0x4, 0x0, 0x8, 0xb, 0x9, 0x5, 0xb, 0x5, 0x13, 0xb, 0x13, 0x7, 0x13, 0x5, 0xe, 0x13, 0xe, 0x4, 0x13, 0x4, 0x11, 0x1, 0xc, 0xe, 0x1, 0xe, 0x5, 0x1, 0x5, 0x9], bf, bg),
        this['type'] = 'DodecahedronBufferGeometry',
        this['parameters'] = {
            'radius': bf,
            'detail': bg
        };
    }
    function ahU(bf, bg, bh, bi, bF, bG) {
        AH['call'](this),
        this['type'] = 'TubeGeometry',
        this['parameters'] = {
            'path': bf,
            'tubularSegments': bg,
            'radius': bh,
            'radialSegments': bi,
            'closed': bF
        },
        void 0x0 !== bG && console['warn']('THREE.TubeGeometry:\x20taper\x20has\x20been\x20removed.');
        var bH = new ai2(bf,bg,bh,bi,bF);
        this['tangents'] = bH['tangents'],
        this['normals'] = bH['normals'],
        this['binormals'] = bH['binormals'],
        this['fromBufferGeometry'](bH),
        this['mergeVertices']();
    }
    function ai2(bf, bg, bh, bi, bF) {
        Gf['call'](this),
        this['type'] = 'TubeBufferGeometry',
        this['parameters'] = {
            'path': bf,
            'tubularSegments': bg,
            'radius': bh,
            'radialSegments': bi,
            'closed': bF
        },
        bg = bg || 0x40,
        bh = bh || 0x1,
        bi = bi || 0x8,
        bF = bF || !0x1;
        var bG = bf['computeFrenetFrames'](bg, bF);
        this['tangents'] = bG['tangents'],
        this['normals'] = bG['normals'],
        this['binormals'] = bG['binormals'];
        var bH, bI, bJ = new eK(), bK = new eK(), bL = new eC(), bM = new eK(), bN = [], bO = [], bP = [], bQ = [];
        function bR(bF) {
            bM = bf['getPointAt'](bF / bg, bM);
            var bH = bG['normals'][bF]
              , bL = bG['binormals'][bF];
            for (bI = 0x0; bI <= bi; bI++) {
                var bP = bI / bi * Math['PI'] * 0x2
                  , bQ = Math['sin'](bP)
                  , bR = -Math['cos'](bP);
                bK['x'] = bR * bH['x'] + bQ * bL['x'],
                bK['y'] = bR * bH['y'] + bQ * bL['y'],
                bK['z'] = bR * bH['z'] + bQ * bL['z'],
                bK['normalize'](),
                bO['push'](bK['x'], bK['y'], bK['z']),
                bJ['x'] = bM['x'] + bh * bK['x'],
                bJ['y'] = bM['y'] + bh * bK['y'],
                bJ['z'] = bM['z'] + bh * bK['z'],
                bN['push'](bJ['x'], bJ['y'], bJ['z']);
            }
        }
        !function() {
            for (bH = 0x0; bH < bg; bH++)
                bR(bH);
            bR(!0x1 === bF ? bg : 0x0),
            function() {
                for (bH = 0x0; bH <= bg; bH++)
                    for (bI = 0x0; bI <= bi; bI++)
                        bL['x'] = bH / bg,
                        bL['y'] = bI / bi,
                        bP['push'](bL['x'], bL['y']);
            }(),
            function() {
                for (bI = 0x1; bI <= bg; bI++)
                    for (bH = 0x1; bH <= bi; bH++) {
                        var bf = (bi + 0x1) * (bI - 0x1) + (bH - 0x1)
                          , bh = (bi + 0x1) * bI + (bH - 0x1)
                          , bF = (bi + 0x1) * bI + bH
                          , bG = (bi + 0x1) * (bI - 0x1) + bH;
                        bQ['push'](bf, bh, bG),
                        bQ['push'](bh, bF, bG);
                    }
            }();
        }(),
        this['setIndex'](bQ),
        this['addAttribute']('position', new Be(bN,0x3)),
        this['addAttribute']('normal', new Be(bO,0x3)),
        this['addAttribute']('uv', new Be(bP,0x2));
    }
    function aiu(bf, bg, bh, bi, bF, bG, bH) {
        AH['call'](this),
        this['type'] = 'TorusKnotGeometry',
        this['parameters'] = {
            'radius': bf,
            'tube': bg,
            'tubularSegments': bh,
            'radialSegments': bi,
            'p': bF,
            'q': bG
        },
        void 0x0 !== bH && console['warn']('THREE.TorusKnotGeometry:\x20heightScale\x20has\x20been\x20deprecated.\x20Use\x20.scale(\x20x,\x20y,\x20z\x20)\x20instead.'),
        this['fromBufferGeometry'](new aiC(bf,bg,bh,bi,bF,bG)),
        this['mergeVertices']();
    }
    function aiC(bf, bg, bh, bi, bF, bG) {
        Gf['call'](this),
        this['type'] = 'TorusKnotBufferGeometry',
        this['parameters'] = {
            'radius': bf,
            'tube': bg,
            'tubularSegments': bh,
            'radialSegments': bi,
            'p': bF,
            'q': bG
        },
        bf = bf || 0x1,
        bg = bg || 0.4,
        bh = Math['floor'](bh) || 0x40,
        bi = Math['floor'](bi) || 0x8,
        bF = bF || 0x2,
        bG = bG || 0x3;
        var bH, bI, bJ = [], bK = [], bL = [], bM = [], bN = new eK(), bO = new eK(), bP = new eK(), bQ = new eK(), bR = new eK(), bS = new eK(), bT = new eK();
        for (bH = 0x0; bH <= bh; ++bH) {
            var bU = bH / bh * bF * Math['PI'] * 0x2;
            for (c2(bU, bF, bG, bf, bP),
            c2(bU + 0.01, bF, bG, bf, bQ),
            bS['subVectors'](bQ, bP),
            bT['addVectors'](bQ, bP),
            bR['crossVectors'](bS, bT),
            bT['crossVectors'](bR, bS),
            bR['normalize'](),
            bT['normalize'](),
            bI = 0x0; bI <= bi; ++bI) {
                var bV = bI / bi * Math['PI'] * 0x2
                  , bW = -bg * Math['cos'](bV)
                  , bX = bg * Math['sin'](bV);
                bN['x'] = bP['x'] + (bW * bT['x'] + bX * bR['x']),
                bN['y'] = bP['y'] + (bW * bT['y'] + bX * bR['y']),
                bN['z'] = bP['z'] + (bW * bT['z'] + bX * bR['z']),
                bK['push'](bN['x'], bN['y'], bN['z']),
                bO['subVectors'](bN, bP)['normalize'](),
                bL['push'](bO['x'], bO['y'], bO['z']),
                bM['push'](bH / bh),
                bM['push'](bI / bi);
            }
        }
        for (bI = 0x1; bI <= bh; bI++)
            for (bH = 0x1; bH <= bi; bH++) {
                var bY = (bi + 0x1) * (bI - 0x1) + (bH - 0x1)
                  , bZ = (bi + 0x1) * bI + (bH - 0x1)
                  , c0 = (bi + 0x1) * bI + bH
                  , c1 = (bi + 0x1) * (bI - 0x1) + bH;
                bJ['push'](bY, bZ, c1),
                bJ['push'](bZ, c0, c1);
            }
        function c2(bf, bg, bh, bi, bF) {
            var bG = Math['cos'](bf)
              , bH = Math['sin'](bf)
              , bI = bh / bg * bf
              , bJ = Math['cos'](bI);
            bF['x'] = bi * (0x2 + bJ) * 0.5 * bG,
            bF['y'] = bi * (0x2 + bJ) * bH * 0.5,
            bF['z'] = bi * Math['sin'](bI) * 0.5;
        }
        this['setIndex'](bJ),
        this['addAttribute']('position', new Be(bK,0x3)),
        this['addAttribute']('normal', new Be(bL,0x3)),
        this['addAttribute']('uv', new Be(bM,0x2));
    }
    function aje(bf, bg, bh, bi, bF) {
        AH['call'](this),
        this['type'] = 'TorusGeometry',
        this['parameters'] = {
            'radius': bf,
            'tube': bg,
            'radialSegments': bh,
            'tubularSegments': bi,
            'arc': bF
        },
        this['fromBufferGeometry'](new ajk(bf,bg,bh,bi,bF)),
        this['mergeVertices']();
    }
    function ajk(bf, bg, bh, bi, bF) {
        Gf['call'](this),
        this['type'] = 'TorusBufferGeometry',
        this['parameters'] = {
            'radius': bf,
            'tube': bg,
            'radialSegments': bh,
            'tubularSegments': bi,
            'arc': bF
        },
        bf = bf || 0x1,
        bg = bg || 0.4,
        bh = Math['floor'](bh) || 0x8,
        bi = Math['floor'](bi) || 0x6,
        bF = bF || 0x2 * Math['PI'];
        var bG, bH, bI = [], bJ = [], bK = [], bL = [], bM = new eK(), bN = new eK(), bO = new eK();
        for (bG = 0x0; bG <= bh; bG++)
            for (bH = 0x0; bH <= bi; bH++) {
                var bP = bH / bi * bF
                  , bQ = bG / bh * Math['PI'] * 0x2;
                bN['x'] = (bf + bg * Math['cos'](bQ)) * Math['cos'](bP),
                bN['y'] = (bf + bg * Math['cos'](bQ)) * Math['sin'](bP),
                bN['z'] = bg * Math['sin'](bQ),
                bJ['push'](bN['x'], bN['y'], bN['z']),
                bM['x'] = bf * Math['cos'](bP),
                bM['y'] = bf * Math['sin'](bP),
                bO['subVectors'](bN, bM)['normalize'](),
                bK['push'](bO['x'], bO['y'], bO['z']),
                bL['push'](bH / bi),
                bL['push'](bG / bh);
            }
        for (bG = 0x1; bG <= bh; bG++)
            for (bH = 0x1; bH <= bi; bH++) {
                var bR = (bi + 0x1) * bG + bH - 0x1
                  , bS = (bi + 0x1) * (bG - 0x1) + bH - 0x1
                  , bT = (bi + 0x1) * (bG - 0x1) + bH
                  , bU = (bi + 0x1) * bG + bH;
                bI['push'](bR, bS, bU),
                bI['push'](bS, bT, bU);
            }
        this['setIndex'](bI),
        this['addAttribute']('position', new Be(bJ,0x3)),
        this['addAttribute']('normal', new Be(bK,0x3)),
        this['addAttribute']('uv', new Be(bL,0x2));
    }
    Object['assign'](ae3['prototype'], {
        'isFogExp2': !0x0,
        'clone': function() {
            return new ae3(this['color'],this['density']);
        },
        'toJSON': function() {
            return {
                'type': 'FogExp2',
                'color': this['color']['getHex'](),
                'density': this['density']
            };
        }
    }),
    Object['assign'](ae6['prototype'], {
        'isFog': !0x0,
        'clone': function() {
            return new ae6(this['color'],this['near'],this['far']);
        },
        'toJSON': function() {
            return {
                'type': 'Fog',
                'color': this['color']['getHex'](),
                'near': this['near'],
                'far': this['far']
            };
        }
    }),
    aea['prototype'] = Object['assign'](Object['create'](yT['prototype']), {
        'constructor': aea,
        'isScene': !0x0,
        'copy': function(bf, bg) {
            return yT['prototype']['copy']['call'](this, bf, bg),
            null !== bf['background'] && (this['background'] = bf['background']['clone']()),
            null !== bf['fog'] && (this['fog'] = bf['fog']['clone']()),
            null !== bf['overrideMaterial'] && (this['overrideMaterial'] = bf['overrideMaterial']['clone']()),
            this['autoUpdate'] = bf['autoUpdate'],
            this['matrixAutoUpdate'] = bf['matrixAutoUpdate'],
            this;
        },
        'toJSON': function(bf) {
            var bg = yT['prototype']['toJSON']['call'](this, bf);
            return null !== this['background'] && (bg['object']['background'] = this['background']['toJSON'](bf)),
            null !== this['fog'] && (bg['object']['fog'] = this['fog']['toJSON']()),
            bg;
        },
        'dispose': function() {
            this['dispatchEvent']({
                'type': 'dispose'
            });
        }
    }),
    Object['defineProperty'](aeb['prototype'], 'needsUpdate', {
        'set': function(bf) {
            !0x0 === bf && this['version']++;
        }
    }),
    Object['assign'](aeb['prototype'], {
        'isInterleavedBuffer': !0x0,
        'onUploadCallback': function() {},
        'setArray': function(bf) {
            if (Array['isArray'](bf))
                throw new TypeError('THREE.BufferAttribute:\x20array\x20should\x20be\x20a\x20Typed\x20Array.');
            return this['count'] = void 0x0 !== bf ? bf['length'] / this['stride'] : 0x0,
            this['array'] = bf,
            this;
        },
        'setDynamic': function(bf) {
            return this['dynamic'] = bf,
            this;
        },
        'copy': function(bf) {
            return this['array'] = new bf['array']['constructor'](bf['array']),
            this['count'] = bf['count'],
            this['stride'] = bf['stride'],
            this['dynamic'] = bf['dynamic'],
            this;
        },
        'copyAt': function(bf, bg, bh) {
            bf *= this['stride'],
            bh *= bg['stride'];
            for (var bi = 0x0, bF = this['stride']; bi < bF; bi++)
                this['array'][bf + bi] = bg['array'][bh + bi];
            return this;
        },
        'set': function(bf, bg) {
            return void 0x0 === bg && (bg = 0x0),
            this['array']['set'](bf, bg),
            this;
        },
        'clone': function() {
            return new this['constructor']()['copy'](this);
        },
        'onUpload': function(bf) {
            return this['onUploadCallback'] = bf,
            this;
        }
    }),
    Object['defineProperties'](aee['prototype'], {
        'count': {
            'get': function() {
                return this['data']['count'];
            }
        },
        'array': {
            'get': function() {
                return this['data']['array'];
            }
        }
    }),
    Object['assign'](aee['prototype'], {
        'isInterleavedBufferAttribute': !0x0,
        'setX': function(bf, bg) {
            return this['data']['array'][bf * this['data']['stride'] + this['offset']] = bg,
            this;
        },
        'setY': function(bf, bg) {
            return this['data']['array'][bf * this['data']['stride'] + this['offset'] + 0x1] = bg,
            this;
        },
        'setZ': function(bf, bg) {
            return this['data']['array'][bf * this['data']['stride'] + this['offset'] + 0x2] = bg,
            this;
        },
        'setW': function(bf, bg) {
            return this['data']['array'][bf * this['data']['stride'] + this['offset'] + 0x3] = bg,
            this;
        },
        'getX': function(bf) {
            return this['data']['array'][bf * this['data']['stride'] + this['offset']];
        },
        'getY': function(bf) {
            return this['data']['array'][bf * this['data']['stride'] + this['offset'] + 0x1];
        },
        'getZ': function(bf) {
            return this['data']['array'][bf * this['data']['stride'] + this['offset'] + 0x2];
        },
        'getW': function(bf) {
            return this['data']['array'][bf * this['data']['stride'] + this['offset'] + 0x3];
        },
        'setXY': function(bf, bg, bh) {
            return bf = bf * this['data']['stride'] + this['offset'],
            this['data']['array'][bf + 0x0] = bg,
            this['data']['array'][bf + 0x1] = bh,
            this;
        },
        'setXYZ': function(bf, bg, bh, bi) {
            return bf = bf * this['data']['stride'] + this['offset'],
            this['data']['array'][bf + 0x0] = bg,
            this['data']['array'][bf + 0x1] = bh,
            this['data']['array'][bf + 0x2] = bi,
            this;
        },
        'setXYZW': function(bf, bg, bh, bi, bF) {
            return bf = bf * this['data']['stride'] + this['offset'],
            this['data']['array'][bf + 0x0] = bg,
            this['data']['array'][bf + 0x1] = bh,
            this['data']['array'][bf + 0x2] = bi,
            this['data']['array'][bf + 0x3] = bF,
            this;
        }
    }),
    aej['prototype'] = Object['create'](Kf['prototype']),
    aej['prototype']['constructor'] = aej,
    aej['prototype']['isSpriteMaterial'] = !0x0,
    aej['prototype']['copy'] = function(bf) {
        return Kf['prototype']['copy']['call'](this, bf),
        this['color']['copy'](bf['color']),
        this['map'] = bf['map'],
        this['rotation'] = bf['rotation'],
        this['sizeAttenuation'] = bf['sizeAttenuation'],
        this;
    }
    ,
    ael['prototype'] = Object['assign'](Object['create'](yT['prototype']), {
        'constructor': ael,
        'isSprite': !0x0,
        'raycast': function() {
            var bf = new eK()
              , bg = new eK()
              , bh = new eK()
              , bi = new eC()
              , bF = new eC()
              , bG = new mR()
              , bH = new eK()
              , bI = new eK()
              , bJ = new eK()
              , bK = new eC()
              , bL = new eC()
              , bM = new eC();
            function bN(bf, bg, bh, bH, bI, bJ) {
                bi['subVectors'](bf, bh)['addScalar'](0.5)['multiply'](bH),
                void 0x0 !== bI ? (bF['x'] = bJ * bi['x'] - bI * bi['y'],
                bF['y'] = bI * bi['x'] + bJ * bi['y']) : bF['copy'](bi),
                bf['copy'](bg),
                bf['x'] += bF['x'],
                bf['y'] += bF['y'],
                bf['applyMatrix4'](bG);
            }
            return function(bi, bF) {
                bg['setFromMatrixScale'](this['matrixWorld']),
                bG['getInverse'](this['modelViewMatrix'])['premultiply'](this['matrixWorld']),
                bh['setFromMatrixPosition'](this['modelViewMatrix']);
                var bO, bP, bQ = this['material']['rotation'];
                0x0 !== bQ && (bP = Math['cos'](bQ),
                bO = Math['sin'](bQ));
                var bR = this['center'];
                bN(bH['set'](-0.5, -0.5, 0x0), bh, bR, bg, bO, bP),
                bN(bI['set'](0.5, -0.5, 0x0), bh, bR, bg, bO, bP),
                bN(bJ['set'](0.5, 0.5, 0x0), bh, bR, bg, bO, bP),
                bK['set'](0x0, 0x0),
                bL['set'](0x1, 0x0),
                bM['set'](0x1, 0x1);
                var bS = bi['ray']['intersectTriangle'](bH, bI, bJ, !0x1, bf);
                if (null !== bS || (bN(bI['set'](-0.5, 0.5, 0x0), bh, bR, bg, bO, bP),
                bL['set'](0x0, 0x1),
                null !== (bS = bi['ray']['intersectTriangle'](bH, bJ, bI, !0x1, bf)))) {
                    var bT = bi['ray']['origin']['distanceTo'](bf);
                    bT < bi['near'] || bT > bi['far'] || bF['push']({
                        'distance': bT,
                        'point': bf['clone'](),
                        'uv': KS['getUV'](bf, bH, bI, bJ, bK, bL, bM, new eC()),
                        'face': null,
                        'object': this
                    });
                }
            }
            ;
        }(),
        'clone': function() {
            return new this['constructor'](this['material'])['copy'](this);
        },
        'copy': function(bf) {
            return yT['prototype']['copy']['call'](this, bf),
            void 0x0 !== bf['center'] && this['center']['copy'](bf['center']),
            this;
        }
    }),
    aeo['prototype'] = Object['assign'](Object['create'](yT['prototype']), {
        'constructor': aeo,
        'isLOD': !0x0,
        'copy': function(bf) {
            yT['prototype']['copy']['call'](this, bf, !0x1);
            for (var bg = bf['levels'], bh = 0x0, bi = bg['length']; bh < bi; bh++) {
                var bF = bg[bh];
                this['addLevel'](bF['object']['clone'](), bF['distance']);
            }
            return this;
        },
        'addLevel': function(bf, bg) {
            void 0x0 === bg && (bg = 0x0),
            bg = Math['abs'](bg);
            for (var bh = this['levels'], bi = 0x0; bi < bh['length'] && !(bg < bh[bi]['distance']); bi++)
                ;
            return bh['splice'](bi, 0x0, {
                'distance': bg,
                'object': bf
            }),
            this['add'](bf),
            this;
        },
        'getObjectForDistance': function(bf) {
            for (var bg = this['levels'], bh = 0x1, bi = bg['length']; bh < bi && !(bf < bg[bh]['distance']); bh++)
                ;
            return bg[bh - 0x1]['object'];
        },
        'raycast': (a6J = new eK(),
        function(bf, bg) {
            a6J['setFromMatrixPosition'](this['matrixWorld']);
            var bh = bf['ray']['origin']['distanceTo'](a6J);
            this['getObjectForDistance'](bh)['raycast'](bf, bg);
        }
        ),
        'update': function() {
            var bf = new eK()
              , bg = new eK();
            return function(bh) {
                var bi = this['levels'];
                if (bi['length'] > 0x1) {
                    bf['setFromMatrixPosition'](bh['matrixWorld']),
                    bg['setFromMatrixPosition'](this['matrixWorld']);
                    var bF = bf['distanceTo'](bg);
                    bi[0x0]['object']['visible'] = !0x0;
                    for (var bG = 0x1, bH = bi['length']; bG < bH && bF >= bi[bG]['distance']; bG++)
                        bi[bG - 0x1]['object']['visible'] = !0x1,
                        bi[bG]['object']['visible'] = !0x0;
                    for (; bG < bH; bG++)
                        bi[bG]['object']['visible'] = !0x1;
                }
            }
            ;
        }(),
        'toJSON': function(bf) {
            var bg = yT['prototype']['toJSON']['call'](this, bf);
            bg['object']['levels'] = [];
            for (var bh = this['levels'], bi = 0x0, bF = bh['length']; bi < bF; bi++) {
                var bG = bh[bi];
                bg['object']['levels']['push']({
                    'object': bG['object']['uuid'],
                    'distance': bG['distance']
                });
            }
            return bg;
        }
    }),
    aep['prototype'] = Object['assign'](Object['create'](KY['prototype']), {
        'constructor': aep,
        'isSkinnedMesh': !0x0,
        'bind': function(bf, bg) {
            this['skeleton'] = bf,
            void 0x0 === bg && (this['updateMatrixWorld'](!0x0),
            this['skeleton']['calculateInverses'](),
            bg = this['matrixWorld']),
            this['bindMatrix']['copy'](bg),
            this['bindMatrixInverse']['getInverse'](bg);
        },
        'pose': function() {
            this['skeleton']['pose']();
        },
        'normalizeSkinWeights': function() {
            for (var bf = new m7(), bg = this['geometry']['attributes']['skinWeight'], bh = 0x0, bi = bg['count']; bh < bi; bh++) {
                bf['x'] = bg['getX'](bh),
                bf['y'] = bg['getY'](bh),
                bf['z'] = bg['getZ'](bh),
                bf['w'] = bg['getW'](bh);
                var bF = 0x1 / bf['manhattanLength']();
                bF !== 0x1 / 0x0 ? bf['multiplyScalar'](bF) : bf['set'](0x1, 0x0, 0x0, 0x0),
                bg['setXYZW'](bh, bf['x'], bf['y'], bf['z'], bf['w']);
            }
        },
        'updateMatrixWorld': function(bf) {
            KY['prototype']['updateMatrixWorld']['call'](this, bf),
            'attached' === this['bindMode'] ? this['bindMatrixInverse']['getInverse'](this['matrixWorld']) : 'detached' === this['bindMode'] ? this['bindMatrixInverse']['getInverse'](this['bindMatrix']) : console['warn']('THREE.SkinnedMesh:\x20Unrecognized\x20bindMode:\x20' + this['bindMode']);
        },
        'clone': function() {
            return new this['constructor'](this['geometry'],this['material'])['copy'](this);
        }
    }),
    Object['assign'](aes['prototype'], {
        'calculateInverses': function() {
            this['boneInverses'] = [];
            for (var bf = 0x0, bg = this['bones']['length']; bf < bg; bf++) {
                var bh = new mR();
                this['bones'][bf] && bh['getInverse'](this['bones'][bf]['matrixWorld']),
                this['boneInverses']['push'](bh);
            }
        },
        'pose': function() {
            var bf, bg, bh;
            for (bg = 0x0,
            bh = this['bones']['length']; bg < bh; bg++)
                (bf = this['bones'][bg]) && bf['matrixWorld']['getInverse'](this['boneInverses'][bg]);
            for (bg = 0x0,
            bh = this['bones']['length']; bg < bh; bg++)
                (bf = this['bones'][bg]) && (bf['parent'] && bf['parent']['isBone'] ? (bf['matrix']['getInverse'](bf['parent']['matrixWorld']),
                bf['matrix']['multiply'](bf['matrixWorld'])) : bf['matrix']['copy'](bf['matrixWorld']),
                bf['matrix']['decompose'](bf['position'], bf['quaternion'], bf['scale']));
        },
        'update': (a6K = new mR(),
        a6L = new mR(),
        function() {
            for (var bf = this['bones'], bg = this['boneInverses'], bh = this['boneMatrices'], bi = this['boneTexture'], bF = 0x0, bG = bf['length']; bF < bG; bF++) {
                var bH = bf[bF] ? bf[bF]['matrixWorld'] : a6L;
                a6K['multiplyMatrices'](bH, bg[bF]),
                a6K['toArray'](bh, 0x10 * bF);
            }
            void 0x0 !== bi && (bi['needsUpdate'] = !0x0);
        }
        ),
        'clone': function() {
            return new aes(this['bones'],this['boneInverses']);
        },
        'getBoneByName': function(bf) {
            for (var bg = 0x0, bh = this['bones']['length']; bg < bh; bg++) {
                var bi = this['bones'][bg];
                if (bi['name'] === bf)
                    return bi;
            }
        }
    }),
    aex['prototype'] = Object['assign'](Object['create'](yT['prototype']), {
        'constructor': aex,
        'isBone': !0x0
    }),
    aey['prototype'] = Object['create'](Kf['prototype']),
    aey['prototype']['constructor'] = aey,
    aey['prototype']['isLineBasicMaterial'] = !0x0,
    aey['prototype']['copy'] = function(bf) {
        return Kf['prototype']['copy']['call'](this, bf),
        this['color']['copy'](bf['color']),
        this['linewidth'] = bf['linewidth'],
        this['linecap'] = bf['linecap'],
        this['linejoin'] = bf['linejoin'],
        this;
    }
    ,
    aeA['prototype'] = Object['assign'](Object['create'](yT['prototype']), {
        'constructor': aeA,
        'isLine': !0x0,
        'computeLineDistances': (a6M = new eK(),
        a6N = new eK(),
        function() {
            var bf = this['geometry'];
            if (bf['isBufferGeometry'])
                if (null === bf['index']) {
                    for (var bg = bf['attributes']['position'], bh = [0x0], bi = 0x1, bF = bg['count']; bi < bF; bi++)
                        a6M['fromBufferAttribute'](bg, bi - 0x1),
                        a6N['fromBufferAttribute'](bg, bi),
                        bh[bi] = bh[bi - 0x1],
                        bh[bi] += a6M['distanceTo'](a6N);
                    bf['addAttribute']('lineDistance', new Be(bh,0x1));
                } else
                    console['warn']('THREE.Line.computeLineDistances():\x20Computation\x20only\x20possible\x20with\x20non-indexed\x20BufferGeometry.');
            else if (bf['isGeometry']) {
                var bG = bf['vertices'];
                for ((bh = bf['lineDistances'])[0x0] = 0x0,
                bi = 0x1,
                bF = bG['length']; bi < bF; bi++)
                    bh[bi] = bh[bi - 0x1],
                    bh[bi] += bG[bi - 0x1]['distanceTo'](bG[bi]);
            }
            return this;
        }
        ),
        'raycast': function() {
            var bf = new mR()
              , bg = new KP()
              , bh = new mE();
            return function(bi, bF) {
                var bG = bi['linePrecision']
                  , bH = this['geometry']
                  , bI = this['matrixWorld'];
                if (null === bH['boundingSphere'] && bH['computeBoundingSphere'](),
                bh['copy'](bH['boundingSphere']),
                bh['applyMatrix4'](bI),
                bh['radius'] += bG,
                !0x1 !== bi['ray']['intersectsSphere'](bh)) {
                    bf['getInverse'](bI),
                    bg['copy'](bi['ray'])['applyMatrix4'](bf);
                    var bJ = bG / ((this['scale']['x'] + this['scale']['y'] + this['scale']['z']) / 0x3)
                      , bK = bJ * bJ
                      , bL = new eK()
                      , bM = new eK()
                      , bN = new eK()
                      , bO = new eK()
                      , bP = this && this['isLineSegments'] ? 0x2 : 0x1;
                    if (bH['isBufferGeometry']) {
                        var bQ = bH['index']
                          , bR = bH['attributes']['position']['array'];
                        if (null !== bQ)
                            for (var bS = bQ['array'], bT = 0x0, bU = bS['length'] - 0x1; bT < bU; bT += bP) {
                                var bV = bS[bT]
                                  , bW = bS[bT + 0x1];
                                if (bL['fromArray'](bR, 0x3 * bV),
                                bM['fromArray'](bR, 0x3 * bW),
                                !(bg['distanceSqToSegment'](bL, bM, bO, bN) > bK))
                                    bO['applyMatrix4'](this['matrixWorld']),
                                    (bZ = bi['ray']['origin']['distanceTo'](bO)) < bi['near'] || bZ > bi['far'] || bF['push']({
                                        'distance': bZ,
                                        'point': bN['clone']()['applyMatrix4'](this['matrixWorld']),
                                        'index': bT,
                                        'face': null,
                                        'faceIndex': null,
                                        'object': this
                                    });
                            }
                        else
                            for (bT = 0x0,
                            bU = bR['length'] / 0x3 - 0x1; bT < bU; bT += bP) {
                                if (bL['fromArray'](bR, 0x3 * bT),
                                bM['fromArray'](bR, 0x3 * bT + 0x3),
                                !(bg['distanceSqToSegment'](bL, bM, bO, bN) > bK))
                                    bO['applyMatrix4'](this['matrixWorld']),
                                    (bZ = bi['ray']['origin']['distanceTo'](bO)) < bi['near'] || bZ > bi['far'] || bF['push']({
                                        'distance': bZ,
                                        'point': bN['clone']()['applyMatrix4'](this['matrixWorld']),
                                        'index': bT,
                                        'face': null,
                                        'faceIndex': null,
                                        'object': this
                                    });
                            }
                    } else if (bH['isGeometry']) {
                        var bX = bH['vertices']
                          , bY = bX['length'];
                        for (bT = 0x0; bT < bY - 0x1; bT += bP) {
                            var bZ;
                            if (!(bg['distanceSqToSegment'](bX[bT], bX[bT + 0x1], bO, bN) > bK))
                                bO['applyMatrix4'](this['matrixWorld']),
                                (bZ = bi['ray']['origin']['distanceTo'](bO)) < bi['near'] || bZ > bi['far'] || bF['push']({
                                    'distance': bZ,
                                    'point': bN['clone']()['applyMatrix4'](this['matrixWorld']),
                                    'index': bT,
                                    'face': null,
                                    'faceIndex': null,
                                    'object': this
                                });
                        }
                    }
                }
            }
            ;
        }(),
        'clone': function() {
            return new this['constructor'](this['geometry'],this['material'])['copy'](this);
        }
    }),
    aeE['prototype'] = Object['assign'](Object['create'](aeA['prototype']), {
        'constructor': aeE,
        'isLineSegments': !0x0,
        'computeLineDistances': function() {
            var bf = new eK()
              , bg = new eK();
            return function() {
                var bh = this['geometry'];
                if (bh['isBufferGeometry'])
                    if (null === bh['index']) {
                        for (var bi = bh['attributes']['position'], bF = [], bG = 0x0, bH = bi['count']; bG < bH; bG += 0x2)
                            bf['fromBufferAttribute'](bi, bG),
                            bg['fromBufferAttribute'](bi, bG + 0x1),
                            bF[bG] = 0x0 === bG ? 0x0 : bF[bG - 0x1],
                            bF[bG + 0x1] = bF[bG] + bf['distanceTo'](bg);
                        bh['addAttribute']('lineDistance', new Be(bF,0x1));
                    } else
                        console['warn']('THREE.LineSegments.computeLineDistances():\x20Computation\x20only\x20possible\x20with\x20non-indexed\x20BufferGeometry.');
                else if (bh['isGeometry']) {
                    var bI = bh['vertices'];
                    for (bF = bh['lineDistances'],
                    bG = 0x0,
                    bH = bI['length']; bG < bH; bG += 0x2)
                        bf['copy'](bI[bG]),
                        bg['copy'](bI[bG + 0x1]),
                        bF[bG] = 0x0 === bG ? 0x0 : bF[bG - 0x1],
                        bF[bG + 0x1] = bF[bG] + bf['distanceTo'](bg);
                }
                return this;
            }
            ;
        }()
    }),
    aeH['prototype'] = Object['assign'](Object['create'](aeA['prototype']), {
        'constructor': aeH,
        'isLineLoop': !0x0
    }),
    aeK['prototype'] = Object['create'](Kf['prototype']),
    aeK['prototype']['constructor'] = aeK,
    aeK['prototype']['isPointsMaterial'] = !0x0,
    aeK['prototype']['copy'] = function(bf) {
        return Kf['prototype']['copy']['call'](this, bf),
        this['color']['copy'](bf['color']),
        this['map'] = bf['map'],
        this['size'] = bf['size'],
        this['sizeAttenuation'] = bf['sizeAttenuation'],
        this['morphTargets'] = bf['morphTargets'],
        this;
    }
    ,
    aeM['prototype'] = Object['assign'](Object['create'](yT['prototype']), {
        'constructor': aeM,
        'isPoints': !0x0,
        'raycast': function() {
            var bf = new mR()
              , bg = new KP()
              , bh = new mE();
            return function(bi, bF) {
                var bG = this
                  , bH = this['geometry']
                  , bI = this['matrixWorld']
                  , bJ = bi['params']['Points']['threshold'];
                if (null === bH['boundingSphere'] && bH['computeBoundingSphere'](),
                bh['copy'](bH['boundingSphere']),
                bh['applyMatrix4'](bI),
                bh['radius'] += bJ,
                !0x1 !== bi['ray']['intersectsSphere'](bh)) {
                    bf['getInverse'](bI),
                    bg['copy'](bi['ray'])['applyMatrix4'](bf);
                    var bK = bJ / ((this['scale']['x'] + this['scale']['y'] + this['scale']['z']) / 0x3)
                      , bL = bK * bK
                      , bM = new eK()
                      , bN = new eK();
                    if (bH['isBufferGeometry']) {
                        var bO = bH['index']
                          , bP = bH['attributes']['position']['array'];
                        if (null !== bO)
                            for (var bQ = bO['array'], bR = 0x0, bS = bQ['length']; bR < bS; bR++) {
                                var bT = bQ[bR];
                                bM['fromArray'](bP, 0x3 * bT),
                                bW(bM, bT);
                            }
                        else {
                            bR = 0x0;
                            for (var bU = bP['length'] / 0x3; bR < bU; bR++)
                                bM['fromArray'](bP, 0x3 * bR),
                                bW(bM, bR);
                        }
                    } else {
                        var bV = bH['vertices'];
                        for (bR = 0x0,
                        bU = bV['length']; bR < bU; bR++)
                            bW(bV[bR], bR);
                    }
                }
                function bW(bf, bh) {
                    var bH = bg['distanceSqToPoint'](bf);
                    if (bH < bL) {
                        bg['closestPointToPoint'](bf, bN),
                        bN['applyMatrix4'](bI);
                        var bJ = bi['ray']['origin']['distanceTo'](bN);
                        if (bJ < bi['near'] || bJ > bi['far'])
                            return;
                        bF['push']({
                            'distance': bJ,
                            'distanceToRay': Math['sqrt'](bH),
                            'point': bN['clone'](),
                            'index': bh,
                            'face': null,
                            'object': bG
                        });
                    }
                }
            }
            ;
        }(),
        'clone': function() {
            return new this['constructor'](this['geometry'],this['material'])['copy'](this);
        }
    }),
    aeP['prototype'] = Object['assign'](Object['create'](lW['prototype']), {
        'constructor': aeP,
        'isVideoTexture': !0x0,
        'update': function() {
            var bf = this['image'];
            bf['readyState'] >= bf['HAVE_CURRENT_DATA'] && (this['needsUpdate'] = !0x0);
        }
    }),
    aeZ['prototype'] = Object['create'](lW['prototype']),
    aeZ['prototype']['constructor'] = aeZ,
    aeZ['prototype']['isCompressedTexture'] = !0x0,
    afc['prototype'] = Object['create'](lW['prototype']),
    afc['prototype']['constructor'] = afc,
    afc['prototype']['isCanvasTexture'] = !0x0,
    afm['prototype'] = Object['create'](lW['prototype']),
    afm['prototype']['constructor'] = afm,
    afm['prototype']['isDepthTexture'] = !0x0,
    afx['prototype'] = Object['create'](Gf['prototype']),
    afx['prototype']['constructor'] = afx,
    afW['prototype'] = Object['create'](AH['prototype']),
    afW['prototype']['constructor'] = afW,
    ag0['prototype'] = Object['create'](Gf['prototype']),
    ag0['prototype']['constructor'] = ag0,
    agm['prototype'] = Object['create'](AH['prototype']),
    agm['prototype']['constructor'] = agm,
    agr['prototype'] = Object['create'](Gf['prototype']),
    agr['prototype']['constructor'] = agr,
    ahr['prototype'] = Object['create'](AH['prototype']),
    ahr['prototype']['constructor'] = ahr,
    ahu['prototype'] = Object['create'](agr['prototype']),
    ahu['prototype']['constructor'] = ahu,
    ahx['prototype'] = Object['create'](AH['prototype']),
    ahx['prototype']['constructor'] = ahx,
    ahA['prototype'] = Object['create'](agr['prototype']),
    ahA['prototype']['constructor'] = ahA,
    ahD['prototype'] = Object['create'](AH['prototype']),
    ahD['prototype']['constructor'] = ahD,
    ahG['prototype'] = Object['create'](agr['prototype']),
    ahG['prototype']['constructor'] = ahG,
    ahL['prototype'] = Object['create'](AH['prototype']),
    ahL['prototype']['constructor'] = ahL,
    ahO['prototype'] = Object['create'](agr['prototype']),
    ahO['prototype']['constructor'] = ahO,
    ahU['prototype'] = Object['create'](AH['prototype']),
    ahU['prototype']['constructor'] = ahU,
    ai2['prototype'] = Object['create'](Gf['prototype']),
    ai2['prototype']['constructor'] = ai2,
    ai2['prototype']['toJSON'] = function() {
        var bf = Gf['prototype']['toJSON']['call'](this);
        return bf['path'] = this['parameters']['path']['toJSON'](),
        bf;
    }
    ,
    aiu['prototype'] = Object['create'](AH['prototype']),
    aiu['prototype']['constructor'] = aiu,
    aiC['prototype'] = Object['create'](Gf['prototype']),
    aiC['prototype']['constructor'] = aiC,
    aje['prototype'] = Object['create'](AH['prototype']),
    aje['prototype']['constructor'] = aje,
    ajk['prototype'] = Object['create'](Gf['prototype']),
    ajk['prototype']['constructor'] = ajk;
    var amL = function(bf, bg, bh) {
        bh = bh || 0x2;
        var bi, bF, bG, bH, bI, bJ, bK, bL = bg && bg['length'], bM = bL ? bg[0x0] * bh : bf['length'], bN = anb(bf, 0x0, bM, bh, !0x0), bO = [];
        if (!bN)
            return bO;
        if (bL && (bN = function(bf, bg, bh, bi) {
            var bF, bG, bH, bI, bJ, bK = [];
            for (bF = 0x0,
            bG = bg['length']; bF < bG; bF++)
                bH = bg[bF] * bi,
                bI = bF < bG - 0x1 ? bg[bF + 0x1] * bi : bf['length'],
                (bJ = anb(bf, bH, bI, bi, !0x1)) === bJ['next'] && (bJ['steiner'] = !0x0),
                bK['push'](aoX(bJ));
            for (bK['sort'](aox),
            bF = 0x0; bF < bK['length']; bF++)
                aoA(bK[bF], bh),
                bh = anq(bh, bh['next']);
            return bh;
        }(bf, bg, bN, bh)),
        bf['length'] > 0x50 * bh) {
            bi = bG = bf[0x0],
            bF = bH = bf[0x1];
            for (var bP = bh; bP < bM; bP += bh)
                (bI = bf[bP]) < bi && (bi = bI),
                (bJ = bf[bP + 0x1]) < bF && (bF = bJ),
                bI > bG && (bG = bI),
                bJ > bH && (bH = bJ);
            bK = 0x0 !== (bK = Math['max'](bG - bi, bH - bF)) ? 0x1 / bK : 0x0;
        }
        return anv(bN, bO, bh, bi, bF, bK),
        bO;
    };
    function anb(bf, bg, bh, bi, bF) {
        var bG, bH;
        if (bF === function(bf, bg, bh, bi) {
            for (var bF = 0x0, bG = bg, bH = bh - bi; bG < bh; bG += bi)
                bF += (bf[bH] - bf[bG]) * (bf[bG + 0x1] + bf[bH + 0x1]),
                bH = bG;
            return bF;
        }(bf, bg, bh, bi) > 0x0)
            for (bG = bg; bG < bh; bG += bi)
                bH = apI(bG, bf[bG], bf[bG + 0x1], bH);
        else
            for (bG = bh - bi; bG >= bg; bG -= bi)
                bH = apI(bG, bf[bG], bf[bG + 0x1], bH);
        return bH && apq(bH, bH['next']) && (apO(bH),
        bH = bH['next']),
        bH;
    }
    function anq(bf, bg) {
        if (!bf)
            return bf;
        bg || (bg = bf);
        var bh, bi = bf;
        do {
            if (bh = !0x1,
            bi['steiner'] || !apq(bi, bi['next']) && 0x0 !== apm(bi['prev'], bi, bi['next']))
                bi = bi['next'];
            else {
                if (apO(bi),
                (bi = bg = bi['prev']) === bi['next'])
                    break;
                bh = !0x0;
            }
        } while (bh || bi !== bg);return bg;
    }
    function anv(bf, bg, bh, bi, bF, bG, bH) {
        if (bf) {
            !bH && bG && function(bf, bg, bh, bi) {
                var bF = bf;
                do {
                    null === bF['z'] && (bF['z'] = aoR(bF['x'], bF['y'], bg, bh, bi)),
                    bF['prevZ'] = bF['prev'],
                    bF['nextZ'] = bF['next'],
                    bF = bF['next'];
                } while (bF !== bf);bF['prevZ']['nextZ'] = null,
                bF['prevZ'] = null,
                function(bf) {
                    var bg, bh, bi, bF, bG, bH, bI, bJ, bK = 0x1;
                    do {
                        for (bh = bf,
                        bf = null,
                        bG = null,
                        bH = 0x0; bh; ) {
                            for (bH++,
                            bi = bh,
                            bI = 0x0,
                            bg = 0x0; bg < bK && (bI++,
                            bi = bi['nextZ']); bg++)
                                ;
                            for (bJ = bK; bI > 0x0 || bJ > 0x0 && bi; )
                                0x0 !== bI && (0x0 === bJ || !bi || bh['z'] <= bi['z']) ? (bF = bh,
                                bh = bh['nextZ'],
                                bI--) : (bF = bi,
                                bi = bi['nextZ'],
                                bJ--),
                                bG ? bG['nextZ'] = bF : bf = bF,
                                bF['prevZ'] = bG,
                                bG = bF;
                            bh = bi;
                        }
                        bG['nextZ'] = null,
                        bK *= 0x2;
                    } while (bH > 0x1);
                }(bF);
            }(bf, bi, bF, bG);
            for (var bI, bJ, bK = bf; bf['prev'] !== bf['next']; )
                if (bI = bf['prev'],
                bJ = bf['next'],
                bG ? ao1(bf, bi, bF, bG) : anV(bf))
                    bg['push'](bI['i'] / bh),
                    bg['push'](bf['i'] / bh),
                    bg['push'](bJ['i'] / bh),
                    apO(bf),
                    bf = bJ['next'],
                    bK = bJ['next'];
                else if ((bf = bJ) === bK) {
                    bH ? 0x1 === bH ? anv(bf = aog(bf, bg, bh), bg, bh, bi, bF, bG, 0x2) : 0x2 === bH && aon(bf, bg, bh, bi, bF, bG) : anv(anq(bf), bg, bh, bi, bF, bG, 0x1);
                    break;
                }
        }
    }
    function anV(bf) {
        var bg = bf['prev']
          , bh = bf
          , bi = bf['next'];
        if (apm(bg, bh, bi) >= 0x0)
            return !0x1;
        for (var bF = bf['next']['next']; bF !== bf['prev']; ) {
            if (ap1(bg['x'], bg['y'], bh['x'], bh['y'], bi['x'], bi['y'], bF['x'], bF['y']) && apm(bF['prev'], bF, bF['next']) >= 0x0)
                return !0x1;
            bF = bF['next'];
        }
        return !0x0;
    }
    function ao1(bf, bg, bh, bi) {
        var bF = bf['prev']
          , bG = bf
          , bH = bf['next'];
        if (apm(bF, bG, bH) >= 0x0)
            return !0x1;
        for (var bI = bF['x'] < bG['x'] ? bF['x'] < bH['x'] ? bF['x'] : bH['x'] : bG['x'] < bH['x'] ? bG['x'] : bH['x'], bJ = bF['y'] < bG['y'] ? bF['y'] < bH['y'] ? bF['y'] : bH['y'] : bG['y'] < bH['y'] ? bG['y'] : bH['y'], bK = bF['x'] > bG['x'] ? bF['x'] > bH['x'] ? bF['x'] : bH['x'] : bG['x'] > bH['x'] ? bG['x'] : bH['x'], bL = bF['y'] > bG['y'] ? bF['y'] > bH['y'] ? bF['y'] : bH['y'] : bG['y'] > bH['y'] ? bG['y'] : bH['y'], bM = aoR(bI, bJ, bg, bh, bi), bN = aoR(bK, bL, bg, bh, bi), bO = bf['nextZ']; bO && bO['z'] <= bN; ) {
            if (bO !== bf['prev'] && bO !== bf['next'] && ap1(bF['x'], bF['y'], bG['x'], bG['y'], bH['x'], bH['y'], bO['x'], bO['y']) && apm(bO['prev'], bO, bO['next']) >= 0x0)
                return !0x1;
            bO = bO['nextZ'];
        }
        for (bO = bf['prevZ']; bO && bO['z'] >= bM; ) {
            if (bO !== bf['prev'] && bO !== bf['next'] && ap1(bF['x'], bF['y'], bG['x'], bG['y'], bH['x'], bH['y'], bO['x'], bO['y']) && apm(bO['prev'], bO, bO['next']) >= 0x0)
                return !0x1;
            bO = bO['prevZ'];
        }
        return !0x0;
    }
    function aog(bf, bg, bh) {
        var bi = bf;
        do {
            var bF = bi['prev']
              , bG = bi['next']['next'];
            !apq(bF, bG) && apt(bF, bi, bi['next'], bG) && apy(bF, bG) && apy(bG, bF) && (bg['push'](bF['i'] / bh),
            bg['push'](bi['i'] / bh),
            bg['push'](bG['i'] / bh),
            apO(bi),
            apO(bi['next']),
            bi = bf = bG),
            bi = bi['next'];
        } while (bi !== bf);return bi;
    }
    function aon(bf, bg, bh, bi, bF, bG) {
        var bH = bf;
        do {
            for (var bI = bH['next']['next']; bI !== bH['prev']; ) {
                if (bH['i'] !== bI['i'] && apa(bH, bI)) {
                    var bJ = apB(bH, bI);
                    return bH = anq(bH, bH['next']),
                    bJ = anq(bJ, bJ['next']),
                    anv(bH, bg, bh, bi, bF, bG),
                    void anv(bJ, bg, bh, bi, bF, bG);
                }
                bI = bI['next'];
            }
            bH = bH['next'];
        } while (bH !== bf);
    }
    function aox(bf, bg) {
        return bf['x'] - bg['x'];
    }
    function aoA(bf, bg) {
        if (bg = function(bf, bg) {
            var bh, bi = bg, bF = bf['x'], bG = bf['y'], bH = -0x1 / 0x0;
            do {
                if (bG <= bi['y'] && bG >= bi['next']['y'] && bi['next']['y'] !== bi['y']) {
                    var bI = bi['x'] + (bG - bi['y']) * (bi['next']['x'] - bi['x']) / (bi['next']['y'] - bi['y']);
                    if (bI <= bF && bI > bH) {
                        if (bH = bI,
                        bI === bF) {
                            if (bG === bi['y'])
                                return bi;
                            if (bG === bi['next']['y'])
                                return bi['next'];
                        }
                        bh = bi['x'] < bi['next']['x'] ? bi : bi['next'];
                    }
                }
                bi = bi['next'];
            } while (bi !== bg);if (!bh)
                return null;
            if (bF === bH)
                return bh['prev'];
            var bJ, bK = bh, bL = bh['x'], bM = bh['y'], bN = 0x1 / 0x0;
            bi = bh['next'];
            for (; bi !== bK; )
                bF >= bi['x'] && bi['x'] >= bL && bF !== bi['x'] && ap1(bG < bM ? bF : bH, bG, bL, bM, bG < bM ? bH : bF, bG, bi['x'], bi['y']) && ((bJ = Math['abs'](bG - bi['y']) / (bF - bi['x'])) < bN || bJ === bN && bi['x'] > bh['x']) && apy(bi, bf) && (bh = bi,
                bN = bJ),
                bi = bi['next'];
            return bh;
        }(bf, bg)) {
            var bh = apB(bg, bf);
            anq(bh, bh['next']);
        }
    }
    function aoR(bf, bg, bh, bi, bF) {
        return (bf = 0x55555555 & ((bf = 0x33333333 & ((bf = 0xf0f0f0f & ((bf = 0xff00ff & ((bf = 0x7fff * (bf - bh) * bF) | bf << 0x8)) | bf << 0x4)) | bf << 0x2)) | bf << 0x1)) | (bg = 0x55555555 & ((bg = 0x33333333 & ((bg = 0xf0f0f0f & ((bg = 0xff00ff & ((bg = 0x7fff * (bg - bi) * bF) | bg << 0x8)) | bg << 0x4)) | bg << 0x2)) | bg << 0x1)) << 0x1;
    }
    function aoX(bf) {
        var bg = bf
          , bh = bf;
        do {
            bg['x'] < bh['x'] && (bh = bg),
            bg = bg['next'];
        } while (bg !== bf);return bh;
    }
    function ap1(bf, bg, bh, bi, bF, bG, bH, bI) {
        return (bF - bH) * (bg - bI) - (bf - bH) * (bG - bI) >= 0x0 && (bf - bH) * (bi - bI) - (bh - bH) * (bg - bI) >= 0x0 && (bh - bH) * (bG - bI) - (bF - bH) * (bi - bI) >= 0x0;
    }
    function apa(bf, bg) {
        return bf['next']['i'] !== bg['i'] && bf['prev']['i'] !== bg['i'] && !function(bf, bg) {
            var bh = bf;
            do {
                if (bh['i'] !== bf['i'] && bh['next']['i'] !== bf['i'] && bh['i'] !== bg['i'] && bh['next']['i'] !== bg['i'] && apt(bh, bh['next'], bf, bg))
                    return !0x0;
                bh = bh['next'];
            } while (bh !== bf);return !0x1;
        }(bf, bg) && apy(bf, bg) && apy(bg, bf) && function(bf, bg) {
            var bh = bf
              , bi = !0x1
              , bF = (bf['x'] + bg['x']) / 0x2
              , bG = (bf['y'] + bg['y']) / 0x2;
            do {
                bh['y'] > bG != bh['next']['y'] > bG && bh['next']['y'] !== bh['y'] && bF < (bh['next']['x'] - bh['x']) * (bG - bh['y']) / (bh['next']['y'] - bh['y']) + bh['x'] && (bi = !bi),
                bh = bh['next'];
            } while (bh !== bf);return bi;
        }(bf, bg);
    }
    function apm(bf, bg, bh) {
        return (bg['y'] - bf['y']) * (bh['x'] - bg['x']) - (bg['x'] - bf['x']) * (bh['y'] - bg['y']);
    }
    function apq(bf, bg) {
        return bf['x'] === bg['x'] && bf['y'] === bg['y'];
    }
    function apt(bf, bg, bh, bi) {
        return !!(apq(bf, bg) && apq(bh, bi) || apq(bf, bi) && apq(bh, bg)) || apm(bf, bg, bh) > 0x0 != apm(bf, bg, bi) > 0x0 && apm(bh, bi, bf) > 0x0 != apm(bh, bi, bg) > 0x0;
    }
    function apy(bf, bg) {
        return apm(bf['prev'], bf, bf['next']) < 0x0 ? apm(bf, bg, bf['next']) >= 0x0 && apm(bf, bf['prev'], bg) >= 0x0 : apm(bf, bg, bf['prev']) < 0x0 || apm(bf, bf['next'], bg) < 0x0;
    }
    function apB(bf, bg) {
        var bh = new apQ(bf['i'],bf['x'],bf['y'])
          , bi = new apQ(bg['i'],bg['x'],bg['y'])
          , bF = bf['next']
          , bG = bg['prev'];
        return bf['next'] = bg,
        bg['prev'] = bf,
        bh['next'] = bF,
        bF['prev'] = bh,
        bi['next'] = bh,
        bh['prev'] = bi,
        bG['next'] = bi,
        bi['prev'] = bG,
        bi;
    }
    function apI(bf, bg, bh, bi) {
        var bF = new apQ(bf,bg,bh);
        return bi ? (bF['next'] = bi['next'],
        bF['prev'] = bi,
        bi['next']['prev'] = bF,
        bi['next'] = bF) : (bF['prev'] = bF,
        bF['next'] = bF),
        bF;
    }
    function apO(bf) {
        bf['next']['prev'] = bf['prev'],
        bf['prev']['next'] = bf['next'],
        bf['prevZ'] && (bf['prevZ']['nextZ'] = bf['nextZ']),
        bf['nextZ'] && (bf['nextZ']['prevZ'] = bf['prevZ']);
    }
    function apQ(bf, bg, bh) {
        this['i'] = bf,
        this['x'] = bg,
        this['y'] = bh,
        this['prev'] = null,
        this['next'] = null,
        this['z'] = null,
        this['prevZ'] = null,
        this['nextZ'] = null,
        this['steiner'] = !0x1;
    }
    var apU = {
        'area': function(bf) {
            for (var bg = bf['length'], bh = 0x0, bi = bg - 0x1, bF = 0x0; bF < bg; bi = bF++)
                bh += bf[bi]['x'] * bf[bF]['y'] - bf[bF]['x'] * bf[bi]['y'];
            return 0.5 * bh;
        },
        'isClockWise': function(bf) {
            return apU['area'](bf) < 0x0;
        },
        'triangulateShape': function(bf, bg) {
            var bh = []
              , bi = []
              , bF = [];
            aq9(bf),
            aqc(bh, bf);
            var bG = bf['length'];
            bg['forEach'](aq9);
            for (var bH = 0x0; bH < bg['length']; bH++)
                bi['push'](bG),
                bG += bg[bH]['length'],
                aqc(bh, bg[bH]);
            var bI = amL(bh, bi);
            for (bH = 0x0; bH < bI['length']; bH += 0x3)
                bF['push'](bI['slice'](bH, bH + 0x3));
            return bF;
        }
    };
    function aq9(bf) {
        var bg = bf['length'];
        bg > 0x2 && bf[bg - 0x1]['equals'](bf[0x0]) && bf['pop']();
    }
    function aqc(bf, bg) {
        for (var bh = 0x0; bh < bg['length']; bh++)
            bf['push'](bg[bh]['x']),
            bf['push'](bg[bh]['y']);
    }
    function aqg(bf, bg) {
        AH['call'](this),
        this['type'] = 'ExtrudeGeometry',
        this['parameters'] = {
            'shapes': bf,
            'options': bg
        },
        this['fromBufferGeometry'](new aqj(bf,bg)),
        this['mergeVertices']();
    }
    function aqj(bf, bg) {
        Gf['call'](this),
        this['type'] = 'ExtrudeBufferGeometry',
        this['parameters'] = {
            'shapes': bf,
            'options': bg
        },
        bf = Array['isArray'](bf) ? bf : [bf];
        for (var bh = this, bi = [], bF = [], bG = 0x0, bH = bf['length']; bG < bH; bG++) {
            bI(bf[bG]);
        }
        function bI(bf) {
            var bG = []
              , bH = void 0x0 !== bg['curveSegments'] ? bg['curveSegments'] : 0xc
              , bI = void 0x0 !== bg['steps'] ? bg['steps'] : 0x1
              , bJ = void 0x0 !== bg['depth'] ? bg['depth'] : 0x64
              , bK = void 0x0 === bg['bevelEnabled'] || bg['bevelEnabled']
              , bL = void 0x0 !== bg['bevelThickness'] ? bg['bevelThickness'] : 0x6
              , bM = void 0x0 !== bg['bevelSize'] ? bg['bevelSize'] : bL - 0x2
              , bN = void 0x0 !== bg['bevelOffset'] ? bg['bevelOffset'] : 0x0
              , bO = void 0x0 !== bg['bevelSegments'] ? bg['bevelSegments'] : 0x3
              , bP = bg['extrudePath']
              , bQ = void 0x0 !== bg['UVGenerator'] ? bg['UVGenerator'] : as8;
            void 0x0 !== bg['amount'] && (console['warn']('THREE.ExtrudeBufferGeometry:\x20amount\x20has\x20been\x20renamed\x20to\x20depth.'),
            bJ = bg['amount']);
            var bR, bS, bT, bU, bV, bW, bX, bY, bZ = !0x1;
            bP && (bR = bP['getSpacedPoints'](bI),
            bZ = !0x0,
            bK = !0x1,
            bS = bP['computeFrenetFrames'](bI, !0x1),
            bT = new eK(),
            bU = new eK(),
            bV = new eK()),
            bK || (bO = 0x0,
            bL = 0x0,
            bM = 0x0,
            bN = 0x0);
            var c0 = bf['extractPoints'](bH)
              , c1 = c0['shape']
              , c2 = c0['holes'];
            if (!apU['isClockWise'](c1))
                for (c1 = c1['reverse'](),
                bX = 0x0,
                bY = c2['length']; bX < bY; bX++)
                    bW = c2[bX],
                    apU['isClockWise'](bW) && (c2[bX] = bW['reverse']());
            var c3 = apU['triangulateShape'](c1, c2)
              , c4 = c1;
            for (bX = 0x0,
            bY = c2['length']; bX < bY; bX++)
                bW = c2[bX],
                c1 = c1['concat'](bW);
            function c5(bf, bg, bh) {
                return bg || console['error']('THREE.ExtrudeGeometry:\x20vec\x20does\x20not\x20exist'),
                bg['clone']()['multiplyScalar'](bh)['add'](bf);
            }
            var c6, c7, c8, c9, ca, cb, cc = c1['length'], cd = c3['length'];
            function ce(bf, bg, bh) {
                var bi, bF, bG, bH = bf['x'] - bg['x'], bI = bf['y'] - bg['y'], bJ = bh['x'] - bf['x'], bK = bh['y'] - bf['y'], bL = bH * bH + bI * bI, bM = bH * bK - bI * bJ;
                if (Math['abs'](bM) > Number['EPSILON']) {
                    var bN = Math['sqrt'](bL)
                      , bO = Math['sqrt'](bJ * bJ + bK * bK)
                      , bP = bg['x'] - bI / bN
                      , bQ = bg['y'] + bH / bN
                      , bR = ((bh['x'] - bK / bO - bP) * bK - (bh['y'] + bJ / bO - bQ) * bJ) / (bH * bK - bI * bJ)
                      , bS = (bi = bP + bH * bR - bf['x']) * bi + (bF = bQ + bI * bR - bf['y']) * bF;
                    if (bS <= 0x2)
                        return new eC(bi,bF);
                    bG = Math['sqrt'](bS / 0x2);
                } else {
                    var bT = !0x1;
                    bH > Number['EPSILON'] ? bJ > Number['EPSILON'] && (bT = !0x0) : bH < -Number['EPSILON'] ? bJ < -Number['EPSILON'] && (bT = !0x0) : Math['sign'](bI) === Math['sign'](bK) && (bT = !0x0),
                    bT ? (bi = -bI,
                    bF = bH,
                    bG = Math['sqrt'](bL)) : (bi = bH,
                    bF = bI,
                    bG = Math['sqrt'](bL / 0x2));
                }
                return new eC(bi / bG,bF / bG);
            }
            for (var cf = [], cg = 0x0, ch = c4['length'], ci = ch - 0x1, cj = cg + 0x1; cg < ch; cg++,
            ci++,
            cj++)
                ci === ch && (ci = 0x0),
                cj === ch && (cj = 0x0),
                cf[cg] = ce(c4[cg], c4[ci], c4[cj]);
            var ck, cl, cm = [], cn = cf['concat']();
            for (bX = 0x0,
            bY = c2['length']; bX < bY; bX++) {
                for (bW = c2[bX],
                ck = [],
                cg = 0x0,
                ci = (ch = bW['length']) - 0x1,
                cj = cg + 0x1; cg < ch; cg++,
                ci++,
                cj++)
                    ci === ch && (ci = 0x0),
                    cj === ch && (cj = 0x0),
                    ck[cg] = ce(bW[cg], bW[ci], bW[cj]);
                cm['push'](ck),
                cn = cn['concat'](ck);
            }
            for (c6 = 0x0; c6 < bO; c6++) {
                for (c8 = c6 / bO,
                c9 = bL * Math['cos'](c8 * Math['PI'] / 0x2),
                c7 = bM * Math['sin'](c8 * Math['PI'] / 0x2) + bN,
                cg = 0x0,
                ch = c4['length']; cg < ch; cg++)
                    cp((ca = c5(c4[cg], cf[cg], c7))['x'], ca['y'], -c9);
                for (bX = 0x0,
                bY = c2['length']; bX < bY; bX++)
                    for (bW = c2[bX],
                    ck = cm[bX],
                    cg = 0x0,
                    ch = bW['length']; cg < ch; cg++)
                        cp((ca = c5(bW[cg], ck[cg], c7))['x'], ca['y'], -c9);
            }
            for (c7 = bM + bN,
            cg = 0x0; cg < cc; cg++)
                ca = bK ? c5(c1[cg], cn[cg], c7) : c1[cg],
                bZ ? (bU['copy'](bS['normals'][0x0])['multiplyScalar'](ca['x']),
                bT['copy'](bS['binormals'][0x0])['multiplyScalar'](ca['y']),
                bV['copy'](bR[0x0])['add'](bU)['add'](bT),
                cp(bV['x'], bV['y'], bV['z'])) : cp(ca['x'], ca['y'], 0x0);
            for (cl = 0x1; cl <= bI; cl++)
                for (cg = 0x0; cg < cc; cg++)
                    ca = bK ? c5(c1[cg], cn[cg], c7) : c1[cg],
                    bZ ? (bU['copy'](bS['normals'][cl])['multiplyScalar'](ca['x']),
                    bT['copy'](bS['binormals'][cl])['multiplyScalar'](ca['y']),
                    bV['copy'](bR[cl])['add'](bU)['add'](bT),
                    cp(bV['x'], bV['y'], bV['z'])) : cp(ca['x'], ca['y'], bJ / bI * cl);
            for (c6 = bO - 0x1; c6 >= 0x0; c6--) {
                for (c8 = c6 / bO,
                c9 = bL * Math['cos'](c8 * Math['PI'] / 0x2),
                c7 = bM * Math['sin'](c8 * Math['PI'] / 0x2) + bN,
                cg = 0x0,
                ch = c4['length']; cg < ch; cg++)
                    cp((ca = c5(c4[cg], cf[cg], c7))['x'], ca['y'], bJ + c9);
                for (bX = 0x0,
                bY = c2['length']; bX < bY; bX++)
                    for (bW = c2[bX],
                    ck = cm[bX],
                    cg = 0x0,
                    ch = bW['length']; cg < ch; cg++)
                        ca = c5(bW[cg], ck[cg], c7),
                        bZ ? cp(ca['x'], ca['y'] + bR[bI - 0x1]['y'], bR[bI - 0x1]['x'] + c9) : cp(ca['x'], ca['y'], bJ + c9);
            }
            function co(bf, bg) {
                var bh, bi;
                for (cg = bf['length']; --cg >= 0x0; ) {
                    bh = cg,
                    (bi = cg - 0x1) < 0x0 && (bi = bf['length'] - 0x1);
                    var bF = 0x0
                      , bG = bI + 0x2 * bO;
                    for (bF = 0x0; bF < bG; bF++) {
                        var bH = cc * bF
                          , bJ = cc * (bF + 0x1);
                        cr(bg + bh + bH, bg + bi + bH, bg + bi + bJ, bg + bh + bJ);
                    }
                }
            }
            function cp(bf, bg, bh) {
                bG['push'](bf),
                bG['push'](bg),
                bG['push'](bh);
            }
            function cq(bf, bg, bF) {
                cs(bf),
                cs(bg),
                cs(bF);
                var bG = bi['length'] / 0x3
                  , bH = bQ['generateTopUV'](bh, bi, bG - 0x3, bG - 0x2, bG - 0x1);
                ct(bH[0x0]),
                ct(bH[0x1]),
                ct(bH[0x2]);
            }
            function cr(bf, bg, bF, bG) {
                cs(bf),
                cs(bg),
                cs(bG),
                cs(bg),
                cs(bF),
                cs(bG);
                var bH = bi['length'] / 0x3
                  , bI = bQ['generateSideWallUV'](bh, bi, bH - 0x6, bH - 0x3, bH - 0x2, bH - 0x1);
                ct(bI[0x0]),
                ct(bI[0x1]),
                ct(bI[0x3]),
                ct(bI[0x1]),
                ct(bI[0x2]),
                ct(bI[0x3]);
            }
            function cs(bf) {
                bi['push'](bG[0x3 * bf + 0x0]),
                bi['push'](bG[0x3 * bf + 0x1]),
                bi['push'](bG[0x3 * bf + 0x2]);
            }
            function ct(bf) {
                bF['push'](bf['x']),
                bF['push'](bf['y']);
            }
            !function() {
                var bf = bi['length'] / 0x3;
                if (bK) {
                    var bg = 0x0
                      , bF = cc * bg;
                    for (cg = 0x0; cg < cd; cg++)
                        cq((cb = c3[cg])[0x2] + bF, cb[0x1] + bF, cb[0x0] + bF);
                    for (bF = cc * (bg = bI + 0x2 * bO),
                    cg = 0x0; cg < cd; cg++)
                        cq((cb = c3[cg])[0x0] + bF, cb[0x1] + bF, cb[0x2] + bF);
                } else {
                    for (cg = 0x0; cg < cd; cg++)
                        cq((cb = c3[cg])[0x2], cb[0x1], cb[0x0]);
                    for (cg = 0x0; cg < cd; cg++)
                        cq((cb = c3[cg])[0x0] + cc * bI, cb[0x1] + cc * bI, cb[0x2] + cc * bI);
                }
                bh['addGroup'](bf, bi['length'] / 0x3 - bf, 0x0);
            }(),
            function() {
                var bf = bi['length'] / 0x3
                  , bg = 0x0;
                for (co(c4, bg),
                bg += c4['length'],
                bX = 0x0,
                bY = c2['length']; bX < bY; bX++)
                    co(bW = c2[bX], bg),
                    bg += bW['length'];
                bh['addGroup'](bf, bi['length'] / 0x3 - bf, 0x1);
            }();
        }
        this['addAttribute']('position', new Be(bi,0x3)),
        this['addAttribute']('uv', new Be(bF,0x2)),
        this['computeVertexNormals']();
    }
    aqg['prototype'] = Object['create'](AH['prototype']),
    aqg['prototype']['constructor'] = aqg,
    aqg['prototype']['toJSON'] = function() {
        var bf = AH['prototype']['toJSON']['call'](this);
        return asC(this['parameters']['shapes'], this['parameters']['options'], bf);
    }
    ,
    aqj['prototype'] = Object['create'](Gf['prototype']),
    aqj['prototype']['constructor'] = aqj,
    aqj['prototype']['toJSON'] = function() {
        var bf = Gf['prototype']['toJSON']['call'](this);
        return asC(this['parameters']['shapes'], this['parameters']['options'], bf);
    }
    ;
    var as8 = {
        'generateTopUV': function(bf, bg, bh, bi, bF) {
            var bG = bg[0x3 * bh]
              , bH = bg[0x3 * bh + 0x1]
              , bI = bg[0x3 * bi]
              , bJ = bg[0x3 * bi + 0x1]
              , bK = bg[0x3 * bF]
              , bL = bg[0x3 * bF + 0x1];
            return [new eC(bG,bH), new eC(bI,bJ), new eC(bK,bL)];
        },
        'generateSideWallUV': function(bf, bg, bh, bi, bF, bG) {
            var bH = bg[0x3 * bh]
              , bI = bg[0x3 * bh + 0x1]
              , bJ = bg[0x3 * bh + 0x2]
              , bK = bg[0x3 * bi]
              , bL = bg[0x3 * bi + 0x1]
              , bM = bg[0x3 * bi + 0x2]
              , bN = bg[0x3 * bF]
              , bO = bg[0x3 * bF + 0x1]
              , bP = bg[0x3 * bF + 0x2]
              , bQ = bg[0x3 * bG]
              , bR = bg[0x3 * bG + 0x1]
              , bS = bg[0x3 * bG + 0x2];
            return Math['abs'](bI - bL) < 0.01 ? [new eC(bH,0x1 - bJ), new eC(bK,0x1 - bM), new eC(bN,0x1 - bP), new eC(bQ,0x1 - bS)] : [new eC(bI,0x1 - bJ), new eC(bL,0x1 - bM), new eC(bO,0x1 - bP), new eC(bR,0x1 - bS)];
        }
    };
    function asC(bf, bg, bh) {
        if (bh['shapes'] = [],
        Array['isArray'](bf))
            for (var bi = 0x0, bF = bf['length']; bi < bF; bi++) {
                var bG = bf[bi];
                bh['shapes']['push'](bG['uuid']);
            }
        else
            bh['shapes']['push'](bf['uuid']);
        return void 0x0 !== bg['extrudePath'] && (bh['options']['extrudePath'] = bg['extrudePath']['toJSON']()),
        bh;
    }
    function asJ(bf, bg) {
        AH['call'](this),
        this['type'] = 'TextGeometry',
        this['parameters'] = {
            'text': bf,
            'parameters': bg
        },
        this['fromBufferGeometry'](new asM(bf,bg)),
        this['mergeVertices']();
    }
    function asM(bf, bg) {
        var bh = (bg = bg || {})['font'];
        if (!bh || !bh['isFont'])
            return console['error']('THREE.TextGeometry:\x20font\x20parameter\x20is\x20not\x20an\x20instance\x20of\x20THREE.Font.'),
            new AH();
        var bi = bh['generateShapes'](bf, bg['size']);
        bg['depth'] = void 0x0 !== bg['height'] ? bg['height'] : 0x32,
        void 0x0 === bg['bevelThickness'] && (bg['bevelThickness'] = 0xa),
        void 0x0 === bg['bevelSize'] && (bg['bevelSize'] = 0x8),
        void 0x0 === bg['bevelEnabled'] && (bg['bevelEnabled'] = !0x1),
        aqj['call'](this, bi, bg),
        this['type'] = 'TextBufferGeometry';
    }
    function asR(bf, bg, bh, bi, bF, bG, bH) {
        AH['call'](this),
        this['type'] = 'SphereGeometry',
        this['parameters'] = {
            'radius': bf,
            'widthSegments': bg,
            'heightSegments': bh,
            'phiStart': bi,
            'phiLength': bF,
            'thetaStart': bG,
            'thetaLength': bH
        },
        this['fromBufferGeometry'](new asZ(bf,bg,bh,bi,bF,bG,bH)),
        this['mergeVertices']();
    }
    function asZ(bf, bg, bh, bi, bF, bG, bH) {
        Gf['call'](this),
        this['type'] = 'SphereBufferGeometry',
        this['parameters'] = {
            'radius': bf,
            'widthSegments': bg,
            'heightSegments': bh,
            'phiStart': bi,
            'phiLength': bF,
            'thetaStart': bG,
            'thetaLength': bH
        },
        bf = bf || 0x1,
        bg = Math['max'](0x3, Math['floor'](bg) || 0x8),
        bh = Math['max'](0x2, Math['floor'](bh) || 0x6),
        bi = void 0x0 !== bi ? bi : 0x0,
        bF = void 0x0 !== bF ? bF : 0x2 * Math['PI'],
        bG = void 0x0 !== bG ? bG : 0x0,
        bH = void 0x0 !== bH ? bH : Math['PI'];
        var bI, bJ, bK = Math['min'](bG + bH, Math['PI']), bL = 0x0, bM = [], bN = new eK(), bO = new eK(), bP = [], bQ = [], bR = [], bS = [];
        for (bJ = 0x0; bJ <= bh; bJ++) {
            var bT = []
              , bU = bJ / bh
              , bV = 0x0;
            for (0x0 == bJ && 0x0 == bG ? bV = 0.5 / bg : bJ == bh && bK == Math['PI'] && (bV = -0.5 / bg),
            bI = 0x0; bI <= bg; bI++) {
                var bW = bI / bg;
                bN['x'] = -bf * Math['cos'](bi + bW * bF) * Math['sin'](bG + bU * bH),
                bN['y'] = bf * Math['cos'](bG + bU * bH),
                bN['z'] = bf * Math['sin'](bi + bW * bF) * Math['sin'](bG + bU * bH),
                bQ['push'](bN['x'], bN['y'], bN['z']),
                bO['copy'](bN)['normalize'](),
                bR['push'](bO['x'], bO['y'], bO['z']),
                bS['push'](bW + bV, 0x1 - bU),
                bT['push'](bL++);
            }
            bM['push'](bT);
        }
        for (bJ = 0x0; bJ < bh; bJ++)
            for (bI = 0x0; bI < bg; bI++) {
                var bX = bM[bJ][bI + 0x1]
                  , bY = bM[bJ][bI]
                  , bZ = bM[bJ + 0x1][bI]
                  , c0 = bM[bJ + 0x1][bI + 0x1];
                (0x0 !== bJ || bG > 0x0) && bP['push'](bX, bY, c0),
                (bJ !== bh - 0x1 || bK < Math['PI']) && bP['push'](bY, bZ, c0);
            }
        this['setIndex'](bP),
        this['addAttribute']('position', new Be(bQ,0x3)),
        this['addAttribute']('normal', new Be(bR,0x3)),
        this['addAttribute']('uv', new Be(bS,0x2));
    }
    function atq(bf, bg, bh, bi, bF, bG) {
        AH['call'](this),
        this['type'] = 'RingGeometry',
        this['parameters'] = {
            'innerRadius': bf,
            'outerRadius': bg,
            'thetaSegments': bh,
            'phiSegments': bi,
            'thetaStart': bF,
            'thetaLength': bG
        },
        this['fromBufferGeometry'](new atx(bf,bg,bh,bi,bF,bG)),
        this['mergeVertices']();
    }
    function atx(bf, bg, bh, bi, bF, bG) {
        Gf['call'](this),
        this['type'] = 'RingBufferGeometry',
        this['parameters'] = {
            'innerRadius': bf,
            'outerRadius': bg,
            'thetaSegments': bh,
            'phiSegments': bi,
            'thetaStart': bF,
            'thetaLength': bG
        },
        bf = bf || 0.5,
        bg = bg || 0x1,
        bF = void 0x0 !== bF ? bF : 0x0,
        bG = void 0x0 !== bG ? bG : 0x2 * Math['PI'],
        bh = void 0x0 !== bh ? Math['max'](0x3, bh) : 0x8;
        var bH, bI, bJ, bK = [], bL = [], bM = [], bN = [], bO = bf, bP = (bg - bf) / (bi = void 0x0 !== bi ? Math['max'](0x1, bi) : 0x1), bQ = new eK(), bR = new eC();
        for (bI = 0x0; bI <= bi; bI++) {
            for (bJ = 0x0; bJ <= bh; bJ++)
                bH = bF + bJ / bh * bG,
                bQ['x'] = bO * Math['cos'](bH),
                bQ['y'] = bO * Math['sin'](bH),
                bL['push'](bQ['x'], bQ['y'], bQ['z']),
                bM['push'](0x0, 0x0, 0x1),
                bR['x'] = (bQ['x'] / bg + 0x1) / 0x2,
                bR['y'] = (bQ['y'] / bg + 0x1) / 0x2,
                bN['push'](bR['x'], bR['y']);
            bO += bP;
        }
        for (bI = 0x0; bI < bi; bI++) {
            var bS = bI * (bh + 0x1);
            for (bJ = 0x0; bJ < bh; bJ++) {
                var bT = bH = bJ + bS
                  , bU = bH + bh + 0x1
                  , bV = bH + bh + 0x2
                  , bW = bH + 0x1;
                bK['push'](bT, bU, bW),
                bK['push'](bU, bV, bW);
            }
        }
        this['setIndex'](bK),
        this['addAttribute']('position', new Be(bL,0x3)),
        this['addAttribute']('normal', new Be(bM,0x3)),
        this['addAttribute']('uv', new Be(bN,0x2));
    }
    function atU(bf, bg, bh, bi) {
        AH['call'](this),
        this['type'] = 'LatheGeometry',
        this['parameters'] = {
            'points': bf,
            'segments': bg,
            'phiStart': bh,
            'phiLength': bi
        },
        this['fromBufferGeometry'](new atZ(bf,bg,bh,bi)),
        this['mergeVertices']();
    }
    function atZ(bf, bg, bh, bi) {
        Gf['call'](this),
        this['type'] = 'LatheBufferGeometry',
        this['parameters'] = {
            'points': bf,
            'segments': bg,
            'phiStart': bh,
            'phiLength': bi
        },
        bg = Math['floor'](bg) || 0xc,
        bh = bh || 0x0,
        bi = bi || 0x2 * Math['PI'],
        bi = e2['clamp'](bi, 0x0, 0x2 * Math['PI']);
        var bF, bG, bH, bI = [], bJ = [], bK = [], bL = 0x1 / bg, bM = new eK(), bN = new eC();
        for (bG = 0x0; bG <= bg; bG++) {
            var bO = bh + bG * bL * bi
              , bP = Math['sin'](bO)
              , bQ = Math['cos'](bO);
            for (bH = 0x0; bH <= bf['length'] - 0x1; bH++)
                bM['x'] = bf[bH]['x'] * bP,
                bM['y'] = bf[bH]['y'],
                bM['z'] = bf[bH]['x'] * bQ,
                bJ['push'](bM['x'], bM['y'], bM['z']),
                bN['x'] = bG / bg,
                bN['y'] = bH / (bf['length'] - 0x1),
                bK['push'](bN['x'], bN['y']);
        }
        for (bG = 0x0; bG < bg; bG++)
            for (bH = 0x0; bH < bf['length'] - 0x1; bH++) {
                var bR = bF = bH + bG * bf['length']
                  , bS = bF + bf['length']
                  , bT = bF + bf['length'] + 0x1
                  , bU = bF + 0x1;
                bI['push'](bR, bS, bU),
                bI['push'](bS, bT, bU);
            }
        if (this['setIndex'](bI),
        this['addAttribute']('position', new Be(bJ,0x3)),
        this['addAttribute']('uv', new Be(bK,0x2)),
        this['computeVertexNormals'](),
        bi === 0x2 * Math['PI']) {
            var bV = this['attributes']['normal']['array']
              , bW = new eK()
              , bX = new eK()
              , bY = new eK();
            for (bF = bg * bf['length'] * 0x3,
            bG = 0x0,
            bH = 0x0; bG < bf['length']; bG++,
            bH += 0x3)
                bW['x'] = bV[bH + 0x0],
                bW['y'] = bV[bH + 0x1],
                bW['z'] = bV[bH + 0x2],
                bX['x'] = bV[bF + bH + 0x0],
                bX['y'] = bV[bF + bH + 0x1],
                bX['z'] = bV[bF + bH + 0x2],
                bY['addVectors'](bW, bX)['normalize'](),
                bV[bH + 0x0] = bV[bF + bH + 0x0] = bY['x'],
                bV[bH + 0x1] = bV[bF + bH + 0x1] = bY['y'],
                bV[bH + 0x2] = bV[bF + bH + 0x2] = bY['z'];
        }
    }
    function auo(bf, bg) {
        AH['call'](this),
        this['type'] = 'ShapeGeometry',
        'object' == typeof bg && (console['warn']('THREE.ShapeGeometry:\x20Options\x20parameter\x20has\x20been\x20removed.'),
        bg = bg['curveSegments']),
        this['parameters'] = {
            'shapes': bf,
            'curveSegments': bg
        },
        this['fromBufferGeometry'](new aur(bf,bg)),
        this['mergeVertices']();
    }
    function aur(bf, bg) {
        Gf['call'](this),
        this['type'] = 'ShapeBufferGeometry',
        this['parameters'] = {
            'shapes': bf,
            'curveSegments': bg
        },
        bg = bg || 0xc;
        var bh = []
          , bi = []
          , bF = []
          , bG = []
          , bH = 0x0
          , bI = 0x0;
        if (!0x1 === Array['isArray'](bf))
            bK(bf);
        else
            for (var bJ = 0x0; bJ < bf['length']; bJ++)
                bK(bf[bJ]),
                this['addGroup'](bH, bI, bJ),
                bH += bI,
                bI = 0x0;
        function bK(bf) {
            var bH, bJ, bK, bL = bi['length'] / 0x3, bM = bf['extractPoints'](bg), bN = bM['shape'], bO = bM['holes'];
            for (!0x1 === apU['isClockWise'](bN) && (bN = bN['reverse']()),
            bH = 0x0,
            bJ = bO['length']; bH < bJ; bH++)
                bK = bO[bH],
                !0x0 === apU['isClockWise'](bK) && (bO[bH] = bK['reverse']());
            var bP = apU['triangulateShape'](bN, bO);
            for (bH = 0x0,
            bJ = bO['length']; bH < bJ; bH++)
                bK = bO[bH],
                bN = bN['concat'](bK);
            for (bH = 0x0,
            bJ = bN['length']; bH < bJ; bH++) {
                var bQ = bN[bH];
                bi['push'](bQ['x'], bQ['y'], 0x0),
                bF['push'](0x0, 0x0, 0x1),
                bG['push'](bQ['x'], bQ['y']);
            }
            for (bH = 0x0,
            bJ = bP['length']; bH < bJ; bH++) {
                var bR = bP[bH]
                  , bS = bR[0x0] + bL
                  , bT = bR[0x1] + bL
                  , bU = bR[0x2] + bL;
                bh['push'](bS, bT, bU),
                bI += 0x3;
            }
        }
        this['setIndex'](bh),
        this['addAttribute']('position', new Be(bi,0x3)),
        this['addAttribute']('normal', new Be(bF,0x3)),
        this['addAttribute']('uv', new Be(bG,0x2));
    }
    function auQ(bf, bg) {
        if (bg['shapes'] = [],
        Array['isArray'](bf))
            for (var bh = 0x0, bi = bf['length']; bh < bi; bh++) {
                var bF = bf[bh];
                bg['shapes']['push'](bF['uuid']);
            }
        else
            bg['shapes']['push'](bf['uuid']);
        return bg;
    }
    function auW(bf, bg) {
        Gf['call'](this),
        this['type'] = 'EdgesGeometry',
        this['parameters'] = {
            'thresholdAngle': bg
        },
        bg = void 0x0 !== bg ? bg : 0x1;
        var bh, bi, bF, bG, bH = [], bI = Math['cos'](e2['DEG2RAD'] * bg), bJ = [0x0, 0x0], bK = {}, bL = ['a', 'b', 'c'];
        bf['isBufferGeometry'] ? (bG = new AH())['fromBufferGeometry'](bf) : bG = bf['clone'](),
        bG['mergeVertices'](),
        bG['computeFaceNormals']();
        for (var bM = bG['vertices'], bN = bG['faces'], bO = 0x0, bP = bN['length']; bO < bP; bO++)
            for (var bQ = bN[bO], bR = 0x0; bR < 0x3; bR++)
                bh = bQ[bL[bR]],
                bi = bQ[bL[(bR + 0x1) % 0x3]],
                bJ[0x0] = Math['min'](bh, bi),
                bJ[0x1] = Math['max'](bh, bi),
                void 0x0 === bK[bF = bJ[0x0] + ',' + bJ[0x1]] ? bK[bF] = {
                    'index1': bJ[0x0],
                    'index2': bJ[0x1],
                    'face1': bO,
                    'face2': void 0x0
                } : bK[bF]['face2'] = bO;
        for (bF in bK) {
            var bS = bK[bF];
            if (void 0x0 === bS['face2'] || bN[bS['face1']]['normal']['dot'](bN[bS['face2']]['normal']) <= bI) {
                var bT = bM[bS['index1']];
                bH['push'](bT['x'], bT['y'], bT['z']),
                bT = bM[bS['index2']],
                bH['push'](bT['x'], bT['y'], bT['z']);
            }
        }
        this['addAttribute']('position', new Be(bH,0x3));
    }
    function avg(bf, bg, bh, bi, bF, bG, bH, bI) {
        AH['call'](this),
        this['type'] = 'CylinderGeometry',
        this['parameters'] = {
            'radiusTop': bf,
            'radiusBottom': bg,
            'height': bh,
            'radialSegments': bi,
            'heightSegments': bF,
            'openEnded': bG,
            'thetaStart': bH,
            'thetaLength': bI
        },
        this['fromBufferGeometry'](new avp(bf,bg,bh,bi,bF,bG,bH,bI)),
        this['mergeVertices']();
    }
    function avp(bf, bg, bh, bi, bF, bG, bH, bI) {
        Gf['call'](this),
        this['type'] = 'CylinderBufferGeometry',
        this['parameters'] = {
            'radiusTop': bf,
            'radiusBottom': bg,
            'height': bh,
            'radialSegments': bi,
            'heightSegments': bF,
            'openEnded': bG,
            'thetaStart': bH,
            'thetaLength': bI
        };
        var bJ = this;
        bf = void 0x0 !== bf ? bf : 0x1,
        bg = void 0x0 !== bg ? bg : 0x1,
        bh = bh || 0x1,
        bi = Math['floor'](bi) || 0x8,
        bF = Math['floor'](bF) || 0x1,
        bG = void 0x0 !== bG && bG,
        bH = void 0x0 !== bH ? bH : 0x0,
        bI = void 0x0 !== bI ? bI : 0x2 * Math['PI'];
        var bK = []
          , bL = []
          , bM = []
          , bN = []
          , bO = 0x0
          , bP = []
          , bQ = bh / 0x2
          , bR = 0x0;
        function bS(bh) {
            var bF, bG, bP, bS = new eC(), bT = new eK(), bU = 0x0, bV = !0x0 === bh ? bf : bg, bW = !0x0 === bh ? 0x1 : -0x1;
            for (bG = bO,
            bF = 0x1; bF <= bi; bF++)
                bL['push'](0x0, bQ * bW, 0x0),
                bM['push'](0x0, bW, 0x0),
                bN['push'](0.5, 0.5),
                bO++;
            for (bP = bO,
            bF = 0x0; bF <= bi; bF++) {
                var bX = bF / bi * bI + bH
                  , bY = Math['cos'](bX)
                  , bZ = Math['sin'](bX);
                bT['x'] = bV * bZ,
                bT['y'] = bQ * bW,
                bT['z'] = bV * bY,
                bL['push'](bT['x'], bT['y'], bT['z']),
                bM['push'](0x0, bW, 0x0),
                bS['x'] = 0.5 * bY + 0.5,
                bS['y'] = 0.5 * bZ * bW + 0.5,
                bN['push'](bS['x'], bS['y']),
                bO++;
            }
            for (bF = 0x0; bF < bi; bF++) {
                var c0 = bG + bF
                  , c1 = bP + bF;
                !0x0 === bh ? bK['push'](c1, c1 + 0x1, c0) : bK['push'](c1 + 0x1, c1, c0),
                bU += 0x3;
            }
            bJ['addGroup'](bR, bU, !0x0 === bh ? 0x1 : 0x2),
            bR += bU;
        }
        !function() {
            var bG, bS, bT = new eK(), bU = new eK(), bV = 0x0, bW = (bg - bf) / bh;
            for (bS = 0x0; bS <= bF; bS++) {
                var bX = []
                  , bY = bS / bF
                  , bZ = bY * (bg - bf) + bf;
                for (bG = 0x0; bG <= bi; bG++) {
                    var c0 = bG / bi
                      , c1 = c0 * bI + bH
                      , c2 = Math['sin'](c1)
                      , c3 = Math['cos'](c1);
                    bU['x'] = bZ * c2,
                    bU['y'] = -bY * bh + bQ,
                    bU['z'] = bZ * c3,
                    bL['push'](bU['x'], bU['y'], bU['z']),
                    bT['set'](c2, bW, c3)['normalize'](),
                    bM['push'](bT['x'], bT['y'], bT['z']),
                    bN['push'](c0, 0x1 - bY),
                    bX['push'](bO++);
                }
                bP['push'](bX);
            }
            for (bG = 0x0; bG < bi; bG++)
                for (bS = 0x0; bS < bF; bS++) {
                    var c4 = bP[bS][bG]
                      , c5 = bP[bS + 0x1][bG]
                      , c6 = bP[bS + 0x1][bG + 0x1]
                      , c7 = bP[bS][bG + 0x1];
                    bK['push'](c4, c5, c7),
                    bK['push'](c5, c6, c7),
                    bV += 0x6;
                }
            bJ['addGroup'](bR, bV, 0x0),
            bR += bV;
        }(),
        !0x1 === bG && (bf > 0x0 && bS(!0x0),
        bg > 0x0 && bS(!0x1)),
        this['setIndex'](bK),
        this['addAttribute']('position', new Be(bL,0x3)),
        this['addAttribute']('normal', new Be(bM,0x3)),
        this['addAttribute']('uv', new Be(bN,0x2));
    }
    function awd(bf, bg, bh, bi, bF, bG, bH) {
        avg['call'](this, 0x0, bf, bg, bh, bi, bF, bG, bH),
        this['type'] = 'ConeGeometry',
        this['parameters'] = {
            'radius': bf,
            'height': bg,
            'radialSegments': bh,
            'heightSegments': bi,
            'openEnded': bF,
            'thetaStart': bG,
            'thetaLength': bH
        };
    }
    function awl(bf, bg, bh, bi, bF, bG, bH) {
        avp['call'](this, 0x0, bf, bg, bh, bi, bF, bG, bH),
        this['type'] = 'ConeBufferGeometry',
        this['parameters'] = {
            'radius': bf,
            'height': bg,
            'radialSegments': bh,
            'heightSegments': bi,
            'openEnded': bF,
            'thetaStart': bG,
            'thetaLength': bH
        };
    }
    function awt(bf, bg, bh, bi) {
        AH['call'](this),
        this['type'] = 'CircleGeometry',
        this['parameters'] = {
            'radius': bf,
            'segments': bg,
            'thetaStart': bh,
            'thetaLength': bi
        },
        this['fromBufferGeometry'](new awy(bf,bg,bh,bi)),
        this['mergeVertices']();
    }
    function awy(bf, bg, bh, bi) {
        Gf['call'](this),
        this['type'] = 'CircleBufferGeometry',
        this['parameters'] = {
            'radius': bf,
            'segments': bg,
            'thetaStart': bh,
            'thetaLength': bi
        },
        bf = bf || 0x1,
        bg = void 0x0 !== bg ? Math['max'](0x3, bg) : 0x8,
        bh = void 0x0 !== bh ? bh : 0x0,
        bi = void 0x0 !== bi ? bi : 0x2 * Math['PI'];
        var bF, bG, bH = [], bI = [], bJ = [], bK = [], bL = new eK(), bM = new eC();
        for (bI['push'](0x0, 0x0, 0x0),
        bJ['push'](0x0, 0x0, 0x1),
        bK['push'](0.5, 0.5),
        bG = 0x0,
        bF = 0x3; bG <= bg; bG++,
        bF += 0x3) {
            var bN = bh + bG / bg * bi;
            bL['x'] = bf * Math['cos'](bN),
            bL['y'] = bf * Math['sin'](bN),
            bI['push'](bL['x'], bL['y'], bL['z']),
            bJ['push'](0x0, 0x0, 0x1),
            bM['x'] = (bI[bF] / bf + 0x1) / 0x2,
            bM['y'] = (bI[bF + 0x1] / bf + 0x1) / 0x2,
            bK['push'](bM['x'], bM['y']);
        }
        for (bF = 0x1; bF <= bg; bF++)
            bH['push'](bF, bF + 0x1, 0x0);
        this['setIndex'](bH),
        this['addAttribute']('position', new Be(bI,0x3)),
        this['addAttribute']('normal', new Be(bJ,0x3)),
        this['addAttribute']('uv', new Be(bK,0x2));
    }
    asJ['prototype'] = Object['create'](AH['prototype']),
    asJ['prototype']['constructor'] = asJ,
    asM['prototype'] = Object['create'](aqj['prototype']),
    asM['prototype']['constructor'] = asM,
    asR['prototype'] = Object['create'](AH['prototype']),
    asR['prototype']['constructor'] = asR,
    asZ['prototype'] = Object['create'](Gf['prototype']),
    asZ['prototype']['constructor'] = asZ,
    atq['prototype'] = Object['create'](AH['prototype']),
    atq['prototype']['constructor'] = atq,
    atx['prototype'] = Object['create'](Gf['prototype']),
    atx['prototype']['constructor'] = atx,
    atU['prototype'] = Object['create'](AH['prototype']),
    atU['prototype']['constructor'] = atU,
    atZ['prototype'] = Object['create'](Gf['prototype']),
    atZ['prototype']['constructor'] = atZ,
    auo['prototype'] = Object['create'](AH['prototype']),
    auo['prototype']['constructor'] = auo,
    auo['prototype']['toJSON'] = function() {
        var bf = AH['prototype']['toJSON']['call'](this);
        return auQ(this['parameters']['shapes'], bf);
    }
    ,
    aur['prototype'] = Object['create'](Gf['prototype']),
    aur['prototype']['constructor'] = aur,
    aur['prototype']['toJSON'] = function() {
        var bf = Gf['prototype']['toJSON']['call'](this);
        return auQ(this['parameters']['shapes'], bf);
    }
    ,
    auW['prototype'] = Object['create'](Gf['prototype']),
    auW['prototype']['constructor'] = auW,
    avg['prototype'] = Object['create'](AH['prototype']),
    avg['prototype']['constructor'] = avg,
    avp['prototype'] = Object['create'](Gf['prototype']),
    avp['prototype']['constructor'] = avp,
    awd['prototype'] = Object['create'](avg['prototype']),
    awd['prototype']['constructor'] = awd,
    awl['prototype'] = Object['create'](avp['prototype']),
    awl['prototype']['constructor'] = awl,
    awt['prototype'] = Object['create'](AH['prototype']),
    awt['prototype']['constructor'] = awt,
    awy['prototype'] = Object['create'](Gf['prototype']),
    awy['prototype']['constructor'] = awy;
    var awO = Object['freeze']({
        'WireframeGeometry': afx,
        'ParametricGeometry': afW,
        'ParametricBufferGeometry': ag0,
        'TetrahedronGeometry': ahr,
        'TetrahedronBufferGeometry': ahu,
        'OctahedronGeometry': ahx,
        'OctahedronBufferGeometry': ahA,
        'IcosahedronGeometry': ahD,
        'IcosahedronBufferGeometry': ahG,
        'DodecahedronGeometry': ahL,
        'DodecahedronBufferGeometry': ahO,
        'PolyhedronGeometry': agm,
        'PolyhedronBufferGeometry': agr,
        'TubeGeometry': ahU,
        'TubeBufferGeometry': ai2,
        'TorusKnotGeometry': aiu,
        'TorusKnotBufferGeometry': aiC,
        'TorusGeometry': aje,
        'TorusBufferGeometry': ajk,
        'TextGeometry': asJ,
        'TextBufferGeometry': asM,
        'SphereGeometry': asR,
        'SphereBufferGeometry': asZ,
        'RingGeometry': atq,
        'RingBufferGeometry': atx,
        'PlaneGeometry': H5,
        'PlaneBufferGeometry': Ha,
        'LatheGeometry': atU,
        'LatheBufferGeometry': atZ,
        'ShapeGeometry': auo,
        'ShapeBufferGeometry': aur,
        'ExtrudeGeometry': aqg,
        'ExtrudeBufferGeometry': aqj,
        'EdgesGeometry': auW,
        'ConeGeometry': awd,
        'ConeBufferGeometry': awl,
        'CylinderGeometry': avg,
        'CylinderBufferGeometry': avp,
        'CircleGeometry': awt,
        'CircleBufferGeometry': awy,
        'BoxGeometry': Gg,
        'BoxBufferGeometry': Gn
    });
    function awP(bf) {
        Kf['call'](this),
        this['type'] = 'ShadowMaterial',
        this['color'] = new w7(0x0),
        this['transparent'] = !0x0,
        this['setValues'](bf);
    }
    function awR(bf) {
        KN['call'](this, bf),
        this['type'] = 'RawShaderMaterial';
    }
    function awT(bf) {
        Kf['call'](this),
        this['defines'] = {
            'STANDARD': ''
        },
        this['type'] = 'MeshStandardMaterial',
        this['color'] = new w7(0xffffff),
        this['roughness'] = 0.5,
        this['metalness'] = 0.5,
        this['map'] = null,
        this['lightMap'] = null,
        this['lightMapIntensity'] = 0x1,
        this['aoMap'] = null,
        this['aoMapIntensity'] = 0x1,
        this['emissive'] = new w7(0x0),
        this['emissiveIntensity'] = 0x1,
        this['emissiveMap'] = null,
        this['bumpMap'] = null,
        this['bumpScale'] = 0x1,
        this['normalMap'] = null,
        this['normalMapType'] = e0,
        this['normalScale'] = new eC(0x1,0x1),
        this['displacementMap'] = null,
        this['displacementScale'] = 0x1,
        this['displacementBias'] = 0x0,
        this['roughnessMap'] = null,
        this['metalnessMap'] = null,
        this['alphaMap'] = null,
        this['envMap'] = null,
        this['envMapIntensity'] = 0x1,
        this['refractionRatio'] = 0.98,
        this['wireframe'] = !0x1,
        this['wireframeLinewidth'] = 0x1,
        this['wireframeLinecap'] = 'round',
        this['wireframeLinejoin'] = 'round',
        this['skinning'] = !0x1,
        this['morphTargets'] = !0x1,
        this['morphNormals'] = !0x1,
        this['setValues'](bf);
    }
    function awV(bf) {
        awT['call'](this),
        this['defines'] = {
            'PHYSICAL': ''
        },
        this['type'] = 'MeshPhysicalMaterial',
        this['reflectivity'] = 0.5,
        this['clearCoat'] = 0x0,
        this['clearCoatRoughness'] = 0x0,
        this['setValues'](bf);
    }
    function awX(bf) {
        Kf['call'](this),
        this['type'] = 'MeshPhongMaterial',
        this['color'] = new w7(0xffffff),
        this['specular'] = new w7(0x111111),
        this['shininess'] = 0x1e,
        this['map'] = null,
        this['lightMap'] = null,
        this['lightMapIntensity'] = 0x1,
        this['aoMap'] = null,
        this['aoMapIntensity'] = 0x1,
        this['emissive'] = new w7(0x0),
        this['emissiveIntensity'] = 0x1,
        this['emissiveMap'] = null,
        this['bumpMap'] = null,
        this['bumpScale'] = 0x1,
        this['normalMap'] = null,
        this['normalMapType'] = e0,
        this['normalScale'] = new eC(0x1,0x1),
        this['displacementMap'] = null,
        this['displacementScale'] = 0x1,
        this['displacementBias'] = 0x0,
        this['specularMap'] = null,
        this['alphaMap'] = null,
        this['envMap'] = null,
        this['combine'] = cv,
        this['reflectivity'] = 0x1,
        this['refractionRatio'] = 0.98,
        this['wireframe'] = !0x1,
        this['wireframeLinewidth'] = 0x1,
        this['wireframeLinecap'] = 'round',
        this['wireframeLinejoin'] = 'round',
        this['skinning'] = !0x1,
        this['morphTargets'] = !0x1,
        this['morphNormals'] = !0x1,
        this['setValues'](bf);
    }
    function awZ(bf) {
        awX['call'](this),
        this['defines'] = {
            'TOON': ''
        },
        this['type'] = 'MeshToonMaterial',
        this['gradientMap'] = null,
        this['setValues'](bf);
    }
    function ax1(bf) {
        Kf['call'](this),
        this['type'] = 'MeshNormalMaterial',
        this['bumpMap'] = null,
        this['bumpScale'] = 0x1,
        this['normalMap'] = null,
        this['normalMapType'] = e0,
        this['normalScale'] = new eC(0x1,0x1),
        this['displacementMap'] = null,
        this['displacementScale'] = 0x1,
        this['displacementBias'] = 0x0,
        this['wireframe'] = !0x1,
        this['wireframeLinewidth'] = 0x1,
        this['fog'] = !0x1,
        this['lights'] = !0x1,
        this['skinning'] = !0x1,
        this['morphTargets'] = !0x1,
        this['morphNormals'] = !0x1,
        this['setValues'](bf);
    }
    function ax3(bf) {
        Kf['call'](this),
        this['type'] = 'MeshLambertMaterial',
        this['color'] = new w7(0xffffff),
        this['map'] = null,
        this['lightMap'] = null,
        this['lightMapIntensity'] = 0x1,
        this['aoMap'] = null,
        this['aoMapIntensity'] = 0x1,
        this['emissive'] = new w7(0x0),
        this['emissiveIntensity'] = 0x1,
        this['emissiveMap'] = null,
        this['specularMap'] = null,
        this['alphaMap'] = null,
        this['envMap'] = null,
        this['combine'] = cv,
        this['reflectivity'] = 0x1,
        this['refractionRatio'] = 0.98,
        this['wireframe'] = !0x1,
        this['wireframeLinewidth'] = 0x1,
        this['wireframeLinecap'] = 'round',
        this['wireframeLinejoin'] = 'round',
        this['skinning'] = !0x1,
        this['morphTargets'] = !0x1,
        this['morphNormals'] = !0x1,
        this['setValues'](bf);
    }
    function ax5(bf) {
        Kf['call'](this),
        this['defines'] = {
            'MATCAP': ''
        },
        this['type'] = 'MeshMatcapMaterial',
        this['color'] = new w7(0xffffff),
        this['matcap'] = null,
        this['map'] = null,
        this['bumpMap'] = null,
        this['bumpScale'] = 0x1,
        this['normalMap'] = null,
        this['normalMapType'] = e0,
        this['normalScale'] = new eC(0x1,0x1),
        this['displacementMap'] = null,
        this['displacementScale'] = 0x1,
        this['displacementBias'] = 0x0,
        this['alphaMap'] = null,
        this['skinning'] = !0x1,
        this['morphTargets'] = !0x1,
        this['morphNormals'] = !0x1,
        this['lights'] = !0x1,
        this['setValues'](bf);
    }
    function ax7(bf) {
        aey['call'](this),
        this['type'] = 'LineDashedMaterial',
        this['scale'] = 0x1,
        this['dashSize'] = 0x3,
        this['gapSize'] = 0x1,
        this['setValues'](bf);
    }
    awP['prototype'] = Object['create'](Kf['prototype']),
    awP['prototype']['constructor'] = awP,
    awP['prototype']['isShadowMaterial'] = !0x0,
    awP['prototype']['copy'] = function(bf) {
        return Kf['prototype']['copy']['call'](this, bf),
        this['color']['copy'](bf['color']),
        this;
    }
    ,
    awR['prototype'] = Object['create'](KN['prototype']),
    awR['prototype']['constructor'] = awR,
    awR['prototype']['isRawShaderMaterial'] = !0x0,
    awT['prototype'] = Object['create'](Kf['prototype']),
    awT['prototype']['constructor'] = awT,
    awT['prototype']['isMeshStandardMaterial'] = !0x0,
    awT['prototype']['copy'] = function(bf) {
        return Kf['prototype']['copy']['call'](this, bf),
        this['defines'] = {
            'STANDARD': ''
        },
        this['color']['copy'](bf['color']),
        this['roughness'] = bf['roughness'],
        this['metalness'] = bf['metalness'],
        this['map'] = bf['map'],
        this['lightMap'] = bf['lightMap'],
        this['lightMapIntensity'] = bf['lightMapIntensity'],
        this['aoMap'] = bf['aoMap'],
        this['aoMapIntensity'] = bf['aoMapIntensity'],
        this['emissive']['copy'](bf['emissive']),
        this['emissiveMap'] = bf['emissiveMap'],
        this['emissiveIntensity'] = bf['emissiveIntensity'],
        this['bumpMap'] = bf['bumpMap'],
        this['bumpScale'] = bf['bumpScale'],
        this['normalMap'] = bf['normalMap'],
        this['normalMapType'] = bf['normalMapType'],
        this['normalScale']['copy'](bf['normalScale']),
        this['displacementMap'] = bf['displacementMap'],
        this['displacementScale'] = bf['displacementScale'],
        this['displacementBias'] = bf['displacementBias'],
        this['roughnessMap'] = bf['roughnessMap'],
        this['metalnessMap'] = bf['metalnessMap'],
        this['alphaMap'] = bf['alphaMap'],
        this['envMap'] = bf['envMap'],
        this['envMapIntensity'] = bf['envMapIntensity'],
        this['refractionRatio'] = bf['refractionRatio'],
        this['wireframe'] = bf['wireframe'],
        this['wireframeLinewidth'] = bf['wireframeLinewidth'],
        this['wireframeLinecap'] = bf['wireframeLinecap'],
        this['wireframeLinejoin'] = bf['wireframeLinejoin'],
        this['skinning'] = bf['skinning'],
        this['morphTargets'] = bf['morphTargets'],
        this['morphNormals'] = bf['morphNormals'],
        this;
    }
    ,
    awV['prototype'] = Object['create'](awT['prototype']),
    awV['prototype']['constructor'] = awV,
    awV['prototype']['isMeshPhysicalMaterial'] = !0x0,
    awV['prototype']['copy'] = function(bf) {
        return awT['prototype']['copy']['call'](this, bf),
        this['defines'] = {
            'PHYSICAL': ''
        },
        this['reflectivity'] = bf['reflectivity'],
        this['clearCoat'] = bf['clearCoat'],
        this['clearCoatRoughness'] = bf['clearCoatRoughness'],
        this;
    }
    ,
    awX['prototype'] = Object['create'](Kf['prototype']),
    awX['prototype']['constructor'] = awX,
    awX['prototype']['isMeshPhongMaterial'] = !0x0,
    awX['prototype']['copy'] = function(bf) {
        return Kf['prototype']['copy']['call'](this, bf),
        this['color']['copy'](bf['color']),
        this['specular']['copy'](bf['specular']),
        this['shininess'] = bf['shininess'],
        this['map'] = bf['map'],
        this['lightMap'] = bf['lightMap'],
        this['lightMapIntensity'] = bf['lightMapIntensity'],
        this['aoMap'] = bf['aoMap'],
        this['aoMapIntensity'] = bf['aoMapIntensity'],
        this['emissive']['copy'](bf['emissive']),
        this['emissiveMap'] = bf['emissiveMap'],
        this['emissiveIntensity'] = bf['emissiveIntensity'],
        this['bumpMap'] = bf['bumpMap'],
        this['bumpScale'] = bf['bumpScale'],
        this['normalMap'] = bf['normalMap'],
        this['normalMapType'] = bf['normalMapType'],
        this['normalScale']['copy'](bf['normalScale']),
        this['displacementMap'] = bf['displacementMap'],
        this['displacementScale'] = bf['displacementScale'],
        this['displacementBias'] = bf['displacementBias'],
        this['specularMap'] = bf['specularMap'],
        this['alphaMap'] = bf['alphaMap'],
        this['envMap'] = bf['envMap'],
        this['combine'] = bf['combine'],
        this['reflectivity'] = bf['reflectivity'],
        this['refractionRatio'] = bf['refractionRatio'],
        this['wireframe'] = bf['wireframe'],
        this['wireframeLinewidth'] = bf['wireframeLinewidth'],
        this['wireframeLinecap'] = bf['wireframeLinecap'],
        this['wireframeLinejoin'] = bf['wireframeLinejoin'],
        this['skinning'] = bf['skinning'],
        this['morphTargets'] = bf['morphTargets'],
        this['morphNormals'] = bf['morphNormals'],
        this;
    }
    ,
    awZ['prototype'] = Object['create'](awX['prototype']),
    awZ['prototype']['constructor'] = awZ,
    awZ['prototype']['isMeshToonMaterial'] = !0x0,
    awZ['prototype']['copy'] = function(bf) {
        return awX['prototype']['copy']['call'](this, bf),
        this['gradientMap'] = bf['gradientMap'],
        this;
    }
    ,
    ax1['prototype'] = Object['create'](Kf['prototype']),
    ax1['prototype']['constructor'] = ax1,
    ax1['prototype']['isMeshNormalMaterial'] = !0x0,
    ax1['prototype']['copy'] = function(bf) {
        return Kf['prototype']['copy']['call'](this, bf),
        this['bumpMap'] = bf['bumpMap'],
        this['bumpScale'] = bf['bumpScale'],
        this['normalMap'] = bf['normalMap'],
        this['normalMapType'] = bf['normalMapType'],
        this['normalScale']['copy'](bf['normalScale']),
        this['displacementMap'] = bf['displacementMap'],
        this['displacementScale'] = bf['displacementScale'],
        this['displacementBias'] = bf['displacementBias'],
        this['wireframe'] = bf['wireframe'],
        this['wireframeLinewidth'] = bf['wireframeLinewidth'],
        this['skinning'] = bf['skinning'],
        this['morphTargets'] = bf['morphTargets'],
        this['morphNormals'] = bf['morphNormals'],
        this;
    }
    ,
    ax3['prototype'] = Object['create'](Kf['prototype']),
    ax3['prototype']['constructor'] = ax3,
    ax3['prototype']['isMeshLambertMaterial'] = !0x0,
    ax3['prototype']['copy'] = function(bf) {
        return Kf['prototype']['copy']['call'](this, bf),
        this['color']['copy'](bf['color']),
        this['map'] = bf['map'],
        this['lightMap'] = bf['lightMap'],
        this['lightMapIntensity'] = bf['lightMapIntensity'],
        this['aoMap'] = bf['aoMap'],
        this['aoMapIntensity'] = bf['aoMapIntensity'],
        this['emissive']['copy'](bf['emissive']),
        this['emissiveMap'] = bf['emissiveMap'],
        this['emissiveIntensity'] = bf['emissiveIntensity'],
        this['specularMap'] = bf['specularMap'],
        this['alphaMap'] = bf['alphaMap'],
        this['envMap'] = bf['envMap'],
        this['combine'] = bf['combine'],
        this['reflectivity'] = bf['reflectivity'],
        this['refractionRatio'] = bf['refractionRatio'],
        this['wireframe'] = bf['wireframe'],
        this['wireframeLinewidth'] = bf['wireframeLinewidth'],
        this['wireframeLinecap'] = bf['wireframeLinecap'],
        this['wireframeLinejoin'] = bf['wireframeLinejoin'],
        this['skinning'] = bf['skinning'],
        this['morphTargets'] = bf['morphTargets'],
        this['morphNormals'] = bf['morphNormals'],
        this;
    }
    ,
    ax5['prototype'] = Object['create'](Kf['prototype']),
    ax5['prototype']['constructor'] = ax5,
    ax5['prototype']['isMeshMatcapMaterial'] = !0x0,
    ax5['prototype']['copy'] = function(bf) {
        return Kf['prototype']['copy']['call'](this, bf),
        this['defines'] = {
            'MATCAP': ''
        },
        this['color']['copy'](bf['color']),
        this['matcap'] = bf['matcap'],
        this['map'] = bf['map'],
        this['bumpMap'] = bf['bumpMap'],
        this['bumpScale'] = bf['bumpScale'],
        this['normalMap'] = bf['normalMap'],
        this['normalMapType'] = bf['normalMapType'],
        this['normalScale']['copy'](bf['normalScale']),
        this['displacementMap'] = bf['displacementMap'],
        this['displacementScale'] = bf['displacementScale'],
        this['displacementBias'] = bf['displacementBias'],
        this['alphaMap'] = bf['alphaMap'],
        this['skinning'] = bf['skinning'],
        this['morphTargets'] = bf['morphTargets'],
        this['morphNormals'] = bf['morphNormals'],
        this;
    }
    ,
    ax7['prototype'] = Object['create'](aey['prototype']),
    ax7['prototype']['constructor'] = ax7,
    ax7['prototype']['isLineDashedMaterial'] = !0x0,
    ax7['prototype']['copy'] = function(bf) {
        return aey['prototype']['copy']['call'](this, bf),
        this['scale'] = bf['scale'],
        this['dashSize'] = bf['dashSize'],
        this['gapSize'] = bf['gapSize'],
        this;
    }
    ;
    var axi = Object['freeze']({
        'ShadowMaterial': awP,
        'SpriteMaterial': aej,
        'RawShaderMaterial': awR,
        'ShaderMaterial': KN,
        'PointsMaterial': aeK,
        'MeshPhysicalMaterial': awV,
        'MeshStandardMaterial': awT,
        'MeshPhongMaterial': awX,
        'MeshToonMaterial': awZ,
        'MeshNormalMaterial': ax1,
        'MeshLambertMaterial': ax3,
        'MeshDepthMaterial': ZV,
        'MeshDistanceMaterial': ZX,
        'MeshBasicMaterial': KW,
        'MeshMatcapMaterial': ax5,
        'LineDashedMaterial': ax7,
        'LineBasicMaterial': aey,
        'Material': Kf
    })
      , axj = {
        'arraySlice': function(bf, bg, bh) {
            return axj['isTypedArray'](bf) ? new bf['constructor'](bf['subarray'](bg, void 0x0 !== bh ? bh : bf['length'])) : bf['slice'](bg, bh);
        },
        'convertArray': function(bf, bg, bh) {
            return !bf || !bh && bf['constructor'] === bg ? bf : 'number' == typeof bg['BYTES_PER_ELEMENT'] ? new bg(bf) : Array['prototype']['slice']['call'](bf);
        },
        'isTypedArray': function(bf) {
            return ArrayBuffer['isView'](bf) && !(bf instanceof DataView);
        },
        'getKeyframeOrder': function(bf) {
            for (var bg = bf['length'], bh = new Array(bg), bi = 0x0; bi !== bg; ++bi)
                bh[bi] = bi;
            return bh['sort'](function(bg, bh) {
                return bf[bg] - bf[bh];
            }),
            bh;
        },
        'sortedArray': function(bf, bg, bh) {
            for (var bi = bf['length'], bF = new bf['constructor'](bi), bG = 0x0, bH = 0x0; bH !== bi; ++bG)
                for (var bI = bh[bG] * bg, bJ = 0x0; bJ !== bg; ++bJ)
                    bF[bH++] = bf[bI + bJ];
            return bF;
        },
        'flattenJSON': function(bf, bg, bh, bi) {
            for (var bF = 0x1, bG = bf[0x0]; void 0x0 !== bG && void 0x0 === bG[bi]; )
                bG = bf[bF++];
            if (void 0x0 !== bG) {
                var bH = bG[bi];
                if (void 0x0 !== bH)
                    if (Array['isArray'](bH))
                        do {
                            void 0x0 !== (bH = bG[bi]) && (bg['push'](bG['time']),
                            bh['push']['apply'](bh, bH)),
                            bG = bf[bF++];
                        } while (void 0x0 !== bG);
                    else if (void 0x0 !== bH['toArray'])
                        do {
                            void 0x0 !== (bH = bG[bi]) && (bg['push'](bG['time']),
                            bH['toArray'](bh, bh['length'])),
                            bG = bf[bF++];
                        } while (void 0x0 !== bG);
                    else
                        do {
                            void 0x0 !== (bH = bG[bi]) && (bg['push'](bG['time']),
                            bh['push'](bH)),
                            bG = bf[bF++];
                        } while (void 0x0 !== bG);
            }
        }
    };
    function axN(bf, bg, bh, bi) {
        this['parameterPositions'] = bf,
        this['_cachedIndex'] = 0x0,
        this['resultBuffer'] = void 0x0 !== bi ? bi : new bg['constructor'](bh),
        this['sampleValues'] = bg,
        this['valueSize'] = bh;
    }
    function axS(bf, bg, bh, bi) {
        axN['call'](this, bf, bg, bh, bi),
        this['_weightPrev'] = -0x0,
        this['_offsetPrev'] = -0x0,
        this['_weightNext'] = -0x0,
        this['_offsetNext'] = -0x0;
    }
    function axX(bf, bg, bh, bi) {
        axN['call'](this, bf, bg, bh, bi);
    }
    function ay2(bf, bg, bh, bi) {
        axN['call'](this, bf, bg, bh, bi);
    }
    function ay7(bf, bg, bh, bi) {
        if (void 0x0 === bf)
            throw new Error('THREE.KeyframeTrack:\x20track\x20name\x20is\x20undefined');
        if (void 0x0 === bg || 0x0 === bg['length'])
            throw new Error('THREE.KeyframeTrack:\x20no\x20keyframes\x20in\x20track\x20named\x20' + bf);
        this['name'] = bf,
        this['times'] = axj['convertArray'](bg, this['TimeBufferType']),
        this['values'] = axj['convertArray'](bh, this['ValueBufferType']),
        this['setInterpolation'](bi || this['DefaultInterpolation']);
    }
    function ayc(bf, bg, bh) {
        ay7['call'](this, bf, bg, bh);
    }
    function ayg(bf, bg, bh, bi) {
        ay7['call'](this, bf, bg, bh, bi);
    }
    function ayl(bf, bg, bh, bi) {
        ay7['call'](this, bf, bg, bh, bi);
    }
    function ayq(bf, bg, bh, bi) {
        axN['call'](this, bf, bg, bh, bi);
    }
    function ayv(bf, bg, bh, bi) {
        ay7['call'](this, bf, bg, bh, bi);
    }
    function ayA(bf, bg, bh, bi) {
        ay7['call'](this, bf, bg, bh, bi);
    }
    function ayF(bf, bg, bh, bi) {
        ay7['call'](this, bf, bg, bh, bi);
    }
    function ayK(bf, bg, bh) {
        this['name'] = bf,
        this['tracks'] = bh,
        this['duration'] = void 0x0 !== bg ? bg : -0x1,
        this['uuid'] = e2['generateUUID'](),
        this['duration'] < 0x0 && this['resetDuration']();
    }
    function ayO(bf) {
        if (void 0x0 === bf['type'])
            throw new Error('THREE.KeyframeTrack:\x20track\x20type\x20undefined,\x20can\x20not\x20parse');
        var bg = function(bf) {
            switch (bf['toLowerCase']()) {
            case 'scalar':
            case 'double':
            case 'float':
            case 'number':
            case 'integer':
                return ayl;
            case 'vector':
            case 'vector2':
            case 'vector3':
            case 'vector4':
                return ayF;
            case 'color':
                return ayg;
            case 'quaternion':
                return ayv;
            case 'bool':
            case 'boolean':
                return ayc;
            case 'string':
                return ayA;
            }
            throw new Error('THREE.KeyframeTrack:\x20Unsupported\x20typeName:\x20' + bf);
        }(bf['type']);
        if (void 0x0 === bf['times']) {
            var bh = []
              , bi = [];
            axj['flattenJSON'](bf['keys'], bh, bi, 'value'),
            bf['times'] = bh,
            bf['values'] = bi;
        }
        return void 0x0 !== bg['parse'] ? bg['parse'](bf) : new bg(bf['name'],bf['times'],bf['values'],bf['interpolation']);
    }
    Object['assign'](axN['prototype'], {
        'evaluate': function(bf) {
            var bg = this['parameterPositions']
              , bh = this['_cachedIndex']
              , bi = bg[bh]
              , bF = bg[bh - 0x1];
            ayZ: {
                az0: {
                    var bG;
                    az2: {
                        az3: if (!(bf < bi)) {
                            for (var bH = bh + 0x2; ; ) {
                                if (void 0x0 === bi) {
                                    if (bf < bF)
                                        break az3;
                                    return bh = bg['length'],
                                    this['_cachedIndex'] = bh,
                                    this['afterEnd_'](bh - 0x1, bf, bF);
                                }
                                if (bh === bH)
                                    break;
                                if (bF = bi,
                                bf < (bi = bg[++bh]))
                                    break az0;
                            }
                            bG = bg['length'];
                            break az2;
                        }
                        if (bf >= bF)
                            break ayZ;
                        var bI = bg[0x1];
                        bf < bI && (bh = 0x2,
                        bF = bI);
                        for (bH = bh - 0x2; ; ) {
                            if (void 0x0 === bF)
                                return this['_cachedIndex'] = 0x0,
                                this['beforeStart_'](0x0, bf, bi);
                            if (bh === bH)
                                break;
                            if (bi = bF,
                            bf >= (bF = bg[--bh - 0x1]))
                                break az0;
                        }
                        bG = bh,
                        bh = 0x0;
                    }
                    for (; bh < bG; ) {
                        var bJ = bh + bG >>> 0x1;
                        bf < bg[bJ] ? bG = bJ : bh = bJ + 0x1;
                    }
                    if (bi = bg[bh],
                    void 0x0 === (bF = bg[bh - 0x1]))
                        return this['_cachedIndex'] = 0x0,
                        this['beforeStart_'](0x0, bf, bi);
                    if (void 0x0 === bi)
                        return bh = bg['length'],
                        this['_cachedIndex'] = bh,
                        this['afterEnd_'](bh - 0x1, bF, bf);
                }
                this['_cachedIndex'] = bh,
                this['intervalChanged_'](bh, bF, bi);
            }
            return this['interpolate_'](bh, bF, bf, bi);
        },
        'settings': null,
        'DefaultSettings_': {},
        'getSettings_': function() {
            return this['settings'] || this['DefaultSettings_'];
        },
        'copySampleValue_': function(bf) {
            for (var bg = this['resultBuffer'], bh = this['sampleValues'], bi = this['valueSize'], bF = bf * bi, bG = 0x0; bG !== bi; ++bG)
                bg[bG] = bh[bF + bG];
            return bg;
        },
        'interpolate_': function() {
            throw new Error('call\x20to\x20abstract\x20method');
        },
        'intervalChanged_': function() {}
    }),
    Object['assign'](axN['prototype'], {
        'beforeStart_': axN['prototype']['copySampleValue_'],
        'afterEnd_': axN['prototype']['copySampleValue_']
    }),
    axS['prototype'] = Object['assign'](Object['create'](axN['prototype']), {
        'constructor': axS,
        'DefaultSettings_': {
            'endingStart': dK,
            'endingEnd': dK
        },
        'intervalChanged_': function(bf, bg, bh) {
            var bi = this['parameterPositions']
              , bF = bf - 0x2
              , bG = bf + 0x1
              , bH = bi[bF]
              , bI = bi[bG];
            if (void 0x0 === bH)
                switch (this['getSettings_']()['endingStart']) {
                case dL:
                    bF = bf,
                    bH = 0x2 * bg - bh;
                    break;
                case dM:
                    bH = bg + bi[bF = bi['length'] - 0x2] - bi[bF + 0x1];
                    break;
                default:
                    bF = bf,
                    bH = bh;
                }
            if (void 0x0 === bI)
                switch (this['getSettings_']()['endingEnd']) {
                case dL:
                    bG = bf,
                    bI = 0x2 * bh - bg;
                    break;
                case dM:
                    bG = 0x1,
                    bI = bh + bi[0x1] - bi[0x0];
                    break;
                default:
                    bG = bf - 0x1,
                    bI = bg;
                }
            var bJ = 0.5 * (bh - bg)
              , bK = this['valueSize'];
            this['_weightPrev'] = bJ / (bg - bH),
            this['_weightNext'] = bJ / (bI - bh),
            this['_offsetPrev'] = bF * bK,
            this['_offsetNext'] = bG * bK;
        },
        'interpolate_': function(bf, bg, bh, bi) {
            for (var bF = this['resultBuffer'], bG = this['sampleValues'], bH = this['valueSize'], bI = bf * bH, bJ = bI - bH, bK = this['_offsetPrev'], bL = this['_offsetNext'], bM = this['_weightPrev'], bN = this['_weightNext'], bO = (bh - bg) / (bi - bg), bP = bO * bO, bQ = bP * bO, bR = -bM * bQ + 0x2 * bM * bP - bM * bO, bS = (0x1 + bM) * bQ + (-1.5 - 0x2 * bM) * bP + (-0.5 + bM) * bO + 0x1, bT = (-0x1 - bN) * bQ + (1.5 + bN) * bP + 0.5 * bO, bU = bN * bQ - bN * bP, bV = 0x0; bV !== bH; ++bV)
                bF[bV] = bR * bG[bK + bV] + bS * bG[bJ + bV] + bT * bG[bI + bV] + bU * bG[bL + bV];
            return bF;
        }
    }),
    axX['prototype'] = Object['assign'](Object['create'](axN['prototype']), {
        'constructor': axX,
        'interpolate_': function(bf, bg, bh, bi) {
            for (var bF = this['resultBuffer'], bG = this['sampleValues'], bH = this['valueSize'], bI = bf * bH, bJ = bI - bH, bK = (bh - bg) / (bi - bg), bL = 0x1 - bK, bM = 0x0; bM !== bH; ++bM)
                bF[bM] = bG[bJ + bM] * bL + bG[bI + bM] * bK;
            return bF;
        }
    }),
    ay2['prototype'] = Object['assign'](Object['create'](axN['prototype']), {
        'constructor': ay2,
        'interpolate_': function(bf) {
            return this['copySampleValue_'](bf - 0x1);
        }
    }),
    Object['assign'](ay7, {
        'toJSON': function(bf) {
            var bg, bh = bf['constructor'];
            if (void 0x0 !== bh['toJSON'])
                bg = bh['toJSON'](bf);
            else {
                bg = {
                    'name': bf['name'],
                    'times': axj['convertArray'](bf['times'], Array),
                    'values': axj['convertArray'](bf['values'], Array)
                };
                var bi = bf['getInterpolation']();
                bi !== bf['DefaultInterpolation'] && (bg['interpolation'] = bi);
            }
            return bg['type'] = bf['ValueTypeName'],
            bg;
        }
    }),
    Object['assign'](ay7['prototype'], {
        'constructor': ay7,
        'TimeBufferType': Float32Array,
        'ValueBufferType': Float32Array,
        'DefaultInterpolation': dI,
        'InterpolantFactoryMethodDiscrete': function(bf) {
            return new ay2(this['times'],this['values'],this['getValueSize'](),bf);
        },
        'InterpolantFactoryMethodLinear': function(bf) {
            return new axX(this['times'],this['values'],this['getValueSize'](),bf);
        },
        'InterpolantFactoryMethodSmooth': function(bf) {
            return new axS(this['times'],this['values'],this['getValueSize'](),bf);
        },
        'setInterpolation': function(bf) {
            var bg;
            switch (bf) {
            case dH:
                bg = this['InterpolantFactoryMethodDiscrete'];
                break;
            case dI:
                bg = this['InterpolantFactoryMethodLinear'];
                break;
            case dJ:
                bg = this['InterpolantFactoryMethodSmooth'];
            }
            if (void 0x0 === bg) {
                var bh = 'unsupported\x20interpolation\x20for\x20' + this['ValueTypeName'] + '\x20keyframe\x20track\x20named\x20' + this['name'];
                if (void 0x0 === this['createInterpolant']) {
                    if (bf === this['DefaultInterpolation'])
                        throw new Error(bh);
                    this['setInterpolation'](this['DefaultInterpolation']);
                }
                return console['warn']('THREE.KeyframeTrack:', bh),
                this;
            }
            return this['createInterpolant'] = bg,
            this;
        },
        'getInterpolation': function() {
            switch (this['createInterpolant']) {
            case this['InterpolantFactoryMethodDiscrete']:
                return dH;
            case this['InterpolantFactoryMethodLinear']:
                return dI;
            case this['InterpolantFactoryMethodSmooth']:
                return dJ;
            }
        },
        'getValueSize': function() {
            return this['values']['length'] / this['times']['length'];
        },
        'shift': function(bf) {
            if (0x0 !== bf)
                for (var bg = this['times'], bh = 0x0, bi = bg['length']; bh !== bi; ++bh)
                    bg[bh] += bf;
            return this;
        },
        'scale': function(bf) {
            if (0x1 !== bf)
                for (var bg = this['times'], bh = 0x0, bi = bg['length']; bh !== bi; ++bh)
                    bg[bh] *= bf;
            return this;
        },
        'trim': function(bf, bg) {
            for (var bh = this['times'], bi = bh['length'], bF = 0x0, bG = bi - 0x1; bF !== bi && bh[bF] < bf; )
                ++bF;
            for (; -0x1 !== bG && bh[bG] > bg; )
                --bG;
            if (++bG,
            0x0 !== bF || bG !== bi) {
                bF >= bG && (bF = (bG = Math['max'](bG, 0x1)) - 0x1);
                var bH = this['getValueSize']();
                this['times'] = axj['arraySlice'](bh, bF, bG),
                this['values'] = axj['arraySlice'](this['values'], bF * bH, bG * bH);
            }
            return this;
        },
        'validate': function() {
            var bf = !0x0
              , bg = this['getValueSize']();
            bg - Math['floor'](bg) != 0x0 && (console['error']('THREE.KeyframeTrack:\x20Invalid\x20value\x20size\x20in\x20track.', this),
            bf = !0x1);
            var bh = this['times']
              , bi = this['values']
              , bF = bh['length'];
            0x0 === bF && (console['error']('THREE.KeyframeTrack:\x20Track\x20is\x20empty.', this),
            bf = !0x1);
            for (var bG = null, bH = 0x0; bH !== bF; bH++) {
                var bI = bh[bH];
                if ('number' == typeof bI && isNaN(bI)) {
                    console['error']('THREE.KeyframeTrack:\x20Time\x20is\x20not\x20a\x20valid\x20number.', this, bH, bI),
                    bf = !0x1;
                    break;
                }
                if (null !== bG && bG > bI) {
                    console['error']('THREE.KeyframeTrack:\x20Out\x20of\x20order\x20keys.', this, bH, bI, bG),
                    bf = !0x1;
                    break;
                }
                bG = bI;
            }
            if (void 0x0 !== bi && axj['isTypedArray'](bi)) {
                bH = 0x0;
                for (var bJ = bi['length']; bH !== bJ; ++bH) {
                    var bK = bi[bH];
                    if (isNaN(bK)) {
                        console['error']('THREE.KeyframeTrack:\x20Value\x20is\x20not\x20a\x20valid\x20number.', this, bH, bK),
                        bf = !0x1;
                        break;
                    }
                }
            }
            return bf;
        },
        'optimize': function() {
            for (var bf = this['times'], bg = this['values'], bh = this['getValueSize'](), bi = this['getInterpolation']() === dJ, bF = 0x1, bG = bf['length'] - 0x1, bH = 0x1; bH < bG; ++bH) {
                var bI = !0x1
                  , bJ = bf[bH];
                if (bJ !== bf[bH + 0x1] && (0x1 !== bH || bJ !== bJ[0x0]))
                    if (bi)
                        bI = !0x0;
                    else
                        for (var bK = bH * bh, bL = bK - bh, bM = bK + bh, bN = 0x0; bN !== bh; ++bN) {
                            var bO = bg[bK + bN];
                            if (bO !== bg[bL + bN] || bO !== bg[bM + bN]) {
                                bI = !0x0;
                                break;
                            }
                        }
                if (bI) {
                    if (bH !== bF) {
                        bf[bF] = bf[bH];
                        var bP = bH * bh
                          , bQ = bF * bh;
                        for (bN = 0x0; bN !== bh; ++bN)
                            bg[bQ + bN] = bg[bP + bN];
                    }
                    ++bF;
                }
            }
            if (bG > 0x0) {
                bf[bF] = bf[bG];
                for (bP = bG * bh,
                bQ = bF * bh,
                bN = 0x0; bN !== bh; ++bN)
                    bg[bQ + bN] = bg[bP + bN];
                ++bF;
            }
            return bF !== bf['length'] && (this['times'] = axj['arraySlice'](bf, 0x0, bF),
            this['values'] = axj['arraySlice'](bg, 0x0, bF * bh)),
            this;
        },
        'clone': function() {
            var bf = axj['arraySlice'](this['times'], 0x0)
              , bg = axj['arraySlice'](this['values'], 0x0)
              , bh = new (0x0,
            this['constructor'])(this['name'],bf,bg);
            return bh['createInterpolant'] = this['createInterpolant'],
            bh;
        }
    }),
    ayc['prototype'] = Object['assign'](Object['create'](ay7['prototype']), {
        'constructor': ayc,
        'ValueTypeName': 'bool',
        'ValueBufferType': Array,
        'DefaultInterpolation': dH,
        'InterpolantFactoryMethodLinear': void 0x0,
        'InterpolantFactoryMethodSmooth': void 0x0
    }),
    ayg['prototype'] = Object['assign'](Object['create'](ay7['prototype']), {
        'constructor': ayg,
        'ValueTypeName': 'color'
    }),
    ayl['prototype'] = Object['assign'](Object['create'](ay7['prototype']), {
        'constructor': ayl,
        'ValueTypeName': 'number'
    }),
    ayq['prototype'] = Object['assign'](Object['create'](axN['prototype']), {
        'constructor': ayq,
        'interpolate_': function(bf, bg, bh, bi) {
            for (var bF = this['resultBuffer'], bG = this['sampleValues'], bH = this['valueSize'], bI = bf * bH, bJ = (bh - bg) / (bi - bg), bK = bI + bH; bI !== bK; bI += 0x4)
                eF['slerpFlat'](bF, 0x0, bG, bI - bH, bG, bI, bJ);
            return bF;
        }
    }),
    ayv['prototype'] = Object['assign'](Object['create'](ay7['prototype']), {
        'constructor': ayv,
        'ValueTypeName': 'quaternion',
        'DefaultInterpolation': dI,
        'InterpolantFactoryMethodLinear': function(bf) {
            return new ayq(this['times'],this['values'],this['getValueSize'](),bf);
        },
        'InterpolantFactoryMethodSmooth': void 0x0
    }),
    ayA['prototype'] = Object['assign'](Object['create'](ay7['prototype']), {
        'constructor': ayA,
        'ValueTypeName': 'string',
        'ValueBufferType': Array,
        'DefaultInterpolation': dH,
        'InterpolantFactoryMethodLinear': void 0x0,
        'InterpolantFactoryMethodSmooth': void 0x0
    }),
    ayF['prototype'] = Object['assign'](Object['create'](ay7['prototype']), {
        'constructor': ayF,
        'ValueTypeName': 'vector'
    }),
    Object['assign'](ayK, {
        'parse': function(bf) {
            for (var bg = [], bh = bf['tracks'], bi = 0x1 / (bf['fps'] || 0x1), bF = 0x0, bG = bh['length']; bF !== bG; ++bF)
                bg['push'](ayO(bh[bF])['scale'](bi));
            return new ayK(bf['name'],bf['duration'],bg);
        },
        'toJSON': function(bf) {
            for (var bg = [], bh = bf['tracks'], bi = {
                'name': bf['name'],
                'duration': bf['duration'],
                'tracks': bg,
                'uuid': bf['uuid']
            }, bF = 0x0, bG = bh['length']; bF !== bG; ++bF)
                bg['push'](ay7['toJSON'](bh[bF]));
            return bi;
        },
        'CreateFromMorphTargetSequence': function(bf, bg, bh, bi) {
            for (var bF = bg['length'], bG = [], bH = 0x0; bH < bF; bH++) {
                var bI = []
                  , bJ = [];
                bI['push']((bH + bF - 0x1) % bF, bH, (bH + 0x1) % bF),
                bJ['push'](0x0, 0x1, 0x0);
                var bK = axj['getKeyframeOrder'](bI);
                bI = axj['sortedArray'](bI, 0x1, bK),
                bJ = axj['sortedArray'](bJ, 0x1, bK),
                bi || 0x0 !== bI[0x0] || (bI['push'](bF),
                bJ['push'](bJ[0x0])),
                bG['push'](new ayl('.morphTargetInfluences[' + bg[bH]['name'] + ']',bI,bJ)['scale'](0x1 / bh));
            }
            return new ayK(bf,-0x1,bG);
        },
        'findByName': function(bf, bg) {
            var bh = bf;
            if (!Array['isArray'](bf)) {
                var bi = bf;
                bh = bi['geometry'] && bi['geometry']['animations'] || bi['animations'];
            }
            for (var bF = 0x0; bF < bh['length']; bF++)
                if (bh[bF]['name'] === bg)
                    return bh[bF];
            return null;
        },
        'CreateClipsFromMorphTargetSequences': function(bf, bg, bh) {
            for (var bi = {}, bF = /^([\w-]*?)([\d]+)$/, bG = 0x0, bH = bf['length']; bG < bH; bG++) {
                var bI = bf[bG]
                  , bJ = bI['name']['match'](bF);
                if (bJ && bJ['length'] > 0x1) {
                    var bK = bi[bM = bJ[0x1]];
                    bK || (bi[bM] = bK = []),
                    bK['push'](bI);
                }
            }
            var bL = [];
            for (var bM in bi)
                bL['push'](ayK['CreateFromMorphTargetSequence'](bM, bi[bM], bg, bh));
            return bL;
        },
        'parseAnimation': function(bf, bg) {
            if (!bf)
                return console['error']('THREE.AnimationClip:\x20No\x20animation\x20in\x20JSONLoader\x20data.'),
                null;
            for (var bh = function(bf, bg, bh, bi, bF) {
                if (0x0 !== bh['length']) {
                    var bG = []
                      , bH = [];
                    axj['flattenJSON'](bh, bG, bH, bi),
                    0x0 !== bG['length'] && bF['push'](new bf(bg,bG,bH));
                }
            }, bi = [], bF = bf['name'] || 'default', bG = bf['length'] || -0x1, bH = bf['fps'] || 0x1e, bI = bf['hierarchy'] || [], bJ = 0x0; bJ < bI['length']; bJ++) {
                var bK = bI[bJ]['keys'];
                if (bK && 0x0 !== bK['length'])
                    if (bK[0x0]['morphTargets']) {
                        for (var bL = {}, bM = 0x0; bM < bK['length']; bM++)
                            if (bK[bM]['morphTargets'])
                                for (var bN = 0x0; bN < bK[bM]['morphTargets']['length']; bN++)
                                    bL[bK[bM]['morphTargets'][bN]] = -0x1;
                        for (var bO in bL) {
                            var bP = []
                              , bQ = [];
                            for (bN = 0x0; bN !== bK[bM]['morphTargets']['length']; ++bN) {
                                var bR = bK[bM];
                                bP['push'](bR['time']),
                                bQ['push'](bR['morphTarget'] === bO ? 0x1 : 0x0);
                            }
                            bi['push'](new ayl('.morphTargetInfluence[' + bO + ']',bP,bQ));
                        }
                        bG = bL['length'] * (bH || 0x1);
                    } else {
                        var bS = '.bones[' + bg[bJ]['name'] + ']';
                        bh(ayF, bS + '.position', bK, 'pos', bi),
                        bh(ayv, bS + '.quaternion', bK, 'rot', bi),
                        bh(ayF, bS + '.scale', bK, 'scl', bi);
                    }
            }
            return 0x0 === bi['length'] ? null : new ayK(bF,bG,bi);
        }
    }),
    Object['assign'](ayK['prototype'], {
        'resetDuration': function() {
            for (var bf = 0x0, bg = 0x0, bh = this['tracks']['length']; bg !== bh; ++bg) {
                var bi = this['tracks'][bg];
                bf = Math['max'](bf, bi['times'][bi['times']['length'] - 0x1]);
            }
            return this['duration'] = bf,
            this;
        },
        'trim': function() {
            for (var bf = 0x0; bf < this['tracks']['length']; bf++)
                this['tracks'][bf]['trim'](0x0, this['duration']);
            return this;
        },
        'validate': function() {
            for (var bf = !0x0, bg = 0x0; bg < this['tracks']['length']; bg++)
                bf = bf && this['tracks'][bg]['validate']();
            return bf;
        },
        'optimize': function() {
            for (var bf = 0x0; bf < this['tracks']['length']; bf++)
                this['tracks'][bf]['optimize']();
            return this;
        },
        'clone': function() {
            for (var bf = [], bg = 0x0; bg < this['tracks']['length']; bg++)
                bf['push'](this['tracks'][bg]['clone']());
            return new ayK(this['name'],this['duration'],bf);
        }
    });
    var aCa = {
        'enabled': !0x1,
        'files': {},
        'add': function(bf, bg) {
            !0x1 !== this['enabled'] && (this['files'][bf] = bg);
        },
        'get': function(bf) {
            if (!0x1 !== this['enabled'])
                return this['files'][bf];
        },
        'remove': function(bf) {
            delete this['files'][bf];
        },
        'clear': function() {
            this['files'] = {};
        }
    };
    function aCf(bf, bg, bh) {
        var bi = this
          , bF = !0x1
          , bG = 0x0
          , bH = 0x0
          , bI = void 0x0;
        this['onStart'] = void 0x0,
        this['onLoad'] = bf,
        this['onProgress'] = bg,
        this['onError'] = bh,
        this['itemStart'] = function(bf) {
            bH++,
            !0x1 === bF && void 0x0 !== bi['onStart'] && bi['onStart'](bf, bG, bH),
            bF = !0x0;
        }
        ,
        this['itemEnd'] = function(bf) {
            bG++,
            void 0x0 !== bi['onProgress'] && bi['onProgress'](bf, bG, bH),
            bG === bH && (bF = !0x1,
            void 0x0 !== bi['onLoad'] && bi['onLoad']());
        }
        ,
        this['itemError'] = function(bf) {
            void 0x0 !== bi['onError'] && bi['onError'](bf);
        }
        ,
        this['resolveURL'] = function(bf) {
            return bI ? bI(bf) : bf;
        }
        ,
        this['setURLModifier'] = function(bf) {
            return bI = bf,
            this;
        }
        ;
    }
    var aCt = new aCf()
      , aCu = {};
    function aCv(bf) {
        this['manager'] = void 0x0 !== bf ? bf : aCt;
    }
    function aCx(bf) {
        this['manager'] = void 0x0 !== bf ? bf : aCt;
    }
    function aCz(bf) {
        this['manager'] = void 0x0 !== bf ? bf : aCt,
        this['_parser'] = null;
    }
    function aCB(bf) {
        this['manager'] = void 0x0 !== bf ? bf : aCt,
        this['_parser'] = null;
    }
    function aCD(bf) {
        this['manager'] = void 0x0 !== bf ? bf : aCt;
    }
    function aCF(bf) {
        this['manager'] = void 0x0 !== bf ? bf : aCt;
    }
    function aCH(bf) {
        this['manager'] = void 0x0 !== bf ? bf : aCt;
    }
    function aCJ() {
        this['type'] = 'Curve',
        this['arcLengthDivisions'] = 0xc8;
    }
    function aCK(bf, bg, bh, bi, bF, bG, bH, bI) {
        aCJ['call'](this),
        this['type'] = 'EllipseCurve',
        this['aX'] = bf || 0x0,
        this['aY'] = bg || 0x0,
        this['xRadius'] = bh || 0x1,
        this['yRadius'] = bi || 0x1,
        this['aStartAngle'] = bF || 0x0,
        this['aEndAngle'] = bG || 0x2 * Math['PI'],
        this['aClockwise'] = bH || !0x1,
        this['aRotation'] = bI || 0x0;
    }
    function aCT(bf, bg, bh, bi, bF, bG) {
        aCK['call'](this, bf, bg, bh, bh, bi, bF, bG),
        this['type'] = 'ArcCurve';
    }
    function aD0() {
        var bf = 0x0
          , bg = 0x0
          , bh = 0x0
          , bi = 0x0;
        function bF(bF, bG, bH, bI) {
            bf = bF,
            bg = bH,
            bh = -0x3 * bF + 0x3 * bG - 0x2 * bH - bI,
            bi = 0x2 * bF - 0x2 * bG + bH + bI;
        }
        return {
            'initCatmullRom': function(bf, bg, bh, bi, bG) {
                bF(bg, bh, bG * (bh - bf), bG * (bi - bg));
            },
            'initNonuniformCatmullRom': function(bf, bg, bh, bi, bG, bH, bI) {
                var bJ = (bg - bf) / bG - (bh - bf) / (bG + bH) + (bh - bg) / bH
                  , bK = (bh - bg) / bH - (bi - bg) / (bH + bI) + (bi - bh) / bI;
                bF(bg, bh, bJ *= bH, bK *= bH);
            },
            'calc': function(bF) {
                var bG = bF * bF;
                return bf + bg * bF + bh * bG + bi * (bG * bF);
            }
        };
    }
    Object['assign'](aCv['prototype'], {
        'load': function(bf, bg, bh, bi) {
            void 0x0 === bf && (bf = ''),
            void 0x0 !== this['path'] && (bf = this['path'] + bf),
            bf = this['manager']['resolveURL'](bf);
            var bF = this
              , bG = aCa['get'](bf);
            if (void 0x0 !== bG)
                return bF['manager']['itemStart'](bf),
                setTimeout(function() {
                    bg && bg(bG),
                    bF['manager']['itemEnd'](bf);
                }, 0x0),
                bG;
            if (void 0x0 === aCu[bf]) {
                var bH = bf['match'](/^data:(.*?)(;base64)?,(.*)$/);
                if (bH) {
                    var bI = bH[0x1]
                      , bJ = !!bH[0x2]
                      , bK = bH[0x3];
                    bK = decodeURIComponent(bK),
                    bJ && (bK = atob(bK));
                    try {
                        var bL, bM = (this['responseType'] || '')['toLowerCase']();
                        switch (bM) {
                        case 'arraybuffer':
                        case 'blob':
                            for (var bN = new Uint8Array(bK['length']), bO = 0x0; bO < bK['length']; bO++)
                                bN[bO] = bK['charCodeAt'](bO);
                            bL = 'blob' === bM ? new Blob([bN['buffer']],{
                                'type': bI
                            }) : bN['buffer'];
                            break;
                        case 'document':
                            var bP = new DOMParser();
                            bL = bP['parseFromString'](bK, bI);
                            break;
                        case 'json':
                            bL = JSON['parse'](bK);
                            break;
                        default:
                            bL = bK;
                        }
                        setTimeout(function() {
                            bg && bg(bL),
                            bF['manager']['itemEnd'](bf);
                        }, 0x0);
                    } catch (aDF) {
                        setTimeout(function() {
                            bi && bi(aDF),
                            bF['manager']['itemError'](bf),
                            bF['manager']['itemEnd'](bf);
                        }, 0x0);
                    }
                } else {
                    aCu[bf] = [],
                    aCu[bf]['push']({
                        'onLoad': bg,
                        'onProgress': bh,
                        'onError': bi
                    });
                    var bQ = new XMLHttpRequest();
                    for (var bR in bQ['open']('GET', bf, !0x0),
                    bQ['addEventListener']('load', function(bg) {
                        var bh = this['response'];
                        aCa['add'](bf, bh);
                        var bi = aCu[bf];
                        if (delete aCu[bf],
                        0xc8 === this['status'] || 0x0 === this['status']) {
                            0x0 === this['status'] && console['warn']('THREE.FileLoader:\x20HTTP\x20Status\x200\x20received.');
                            for (var bG = 0x0, bH = bi['length']; bG < bH; bG++) {
                                (bI = bi[bG])['onLoad'] && bI['onLoad'](bh);
                            }
                            bF['manager']['itemEnd'](bf);
                        } else {
                            for (bG = 0x0,
                            bH = bi['length']; bG < bH; bG++) {
                                var bI;
                                (bI = bi[bG])['onError'] && bI['onError'](bg);
                            }
                            bF['manager']['itemError'](bf),
                            bF['manager']['itemEnd'](bf);
                        }
                    }, !0x1),
                    bQ['addEventListener']('progress', function(bg) {
                        for (var bh = aCu[bf], bi = 0x0, bF = bh['length']; bi < bF; bi++) {
                            var bG = bh[bi];
                            bG['onProgress'] && bG['onProgress'](bg);
                        }
                    }, !0x1),
                    bQ['addEventListener']('error', function(bg) {
                        var bh = aCu[bf];
                        delete aCu[bf];
                        for (var bi = 0x0, bG = bh['length']; bi < bG; bi++) {
                            var bH = bh[bi];
                            bH['onError'] && bH['onError'](bg);
                        }
                        bF['manager']['itemError'](bf),
                        bF['manager']['itemEnd'](bf);
                    }, !0x1),
                    bQ['addEventListener']('abort', function(bg) {
                        var bh = aCu[bf];
                        delete aCu[bf];
                        for (var bi = 0x0, bG = bh['length']; bi < bG; bi++) {
                            var bH = bh[bi];
                            bH['onError'] && bH['onError'](bg);
                        }
                        bF['manager']['itemError'](bf),
                        bF['manager']['itemEnd'](bf);
                    }, !0x1),
                    void 0x0 !== this['responseType'] && (bQ['responseType'] = this['responseType']),
                    void 0x0 !== this['withCredentials'] && (bQ['withCredentials'] = this['withCredentials']),
                    bQ['overrideMimeType'] && bQ['overrideMimeType'](void 0x0 !== this['mimeType'] ? this['mimeType'] : 'text/plain'),
                    this['requestHeader'])
                        bQ['setRequestHeader'](bR, this['requestHeader'][bR]);
                    bQ['send'](null);
                }
                return bF['manager']['itemStart'](bf),
                bQ;
            }
            aCu[bf]['push']({
                'onLoad': bg,
                'onProgress': bh,
                'onError': bi
            });
        },
        'setPath': function(bf) {
            return this['path'] = bf,
            this;
        },
        'setResponseType': function(bf) {
            return this['responseType'] = bf,
            this;
        },
        'setWithCredentials': function(bf) {
            return this['withCredentials'] = bf,
            this;
        },
        'setMimeType': function(bf) {
            return this['mimeType'] = bf,
            this;
        },
        'setRequestHeader': function(bf) {
            return this['requestHeader'] = bf,
            this;
        }
    }),
    Object['assign'](aCx['prototype'], {
        'load': function(bf, bg, bh, bi) {
            var bF = this
              , bG = new aCv(bF['manager']);
            bG['setPath'](bF['path']),
            bG['load'](bf, function(bf) {
                bg(bF['parse'](JSON['parse'](bf)));
            }, bh, bi);
        },
        'parse': function(bf) {
            for (var bg = [], bh = 0x0; bh < bf['length']; bh++) {
                var bi = ayK['parse'](bf[bh]);
                bg['push'](bi);
            }
            return bg;
        },
        'setPath': function(bf) {
            return this['path'] = bf,
            this;
        }
    }),
    Object['assign'](aCz['prototype'], {
        'load': function(bf, bg, bh, bi) {
            var bF = this
              , bG = []
              , bH = new aeZ();
            bH['image'] = bG;
            var bI = new aCv(this['manager']);
            function bJ(bJ) {
                bI['load'](bf[bJ], function(bf) {
                    var bh = bF['_parser'](bf, !0x0);
                    bG[bJ] = {
                        'width': bh['width'],
                        'height': bh['height'],
                        'format': bh['format'],
                        'mipmaps': bh['mipmaps']
                    },
                    0x6 === (bK += 0x1) && (0x1 === bh['mipmapCount'] && (bH['minFilter'] = cS),
                    bH['format'] = bh['format'],
                    bH['needsUpdate'] = !0x0,
                    bg && bg(bH));
                }, bh, bi);
            }
            if (bI['setPath'](this['path']),
            bI['setResponseType']('arraybuffer'),
            Array['isArray'](bf))
                for (var bK = 0x0, bL = 0x0, bM = bf['length']; bL < bM; ++bL)
                    bJ(bL);
            else
                bI['load'](bf, function(bf) {
                    var bh = bF['_parser'](bf, !0x0);
                    if (bh['isCubemap'])
                        for (var bi = bh['mipmaps']['length'] / bh['mipmapCount'], bI = 0x0; bI < bi; bI++) {
                            bG[bI] = {
                                'mipmaps': []
                            };
                            for (var bJ = 0x0; bJ < bh['mipmapCount']; bJ++)
                                bG[bI]['mipmaps']['push'](bh['mipmaps'][bI * bh['mipmapCount'] + bJ]),
                                bG[bI]['format'] = bh['format'],
                                bG[bI]['width'] = bh['width'],
                                bG[bI]['height'] = bh['height'];
                        }
                    else
                        bH['image']['width'] = bh['width'],
                        bH['image']['height'] = bh['height'],
                        bH['mipmaps'] = bh['mipmaps'];
                    0x1 === bh['mipmapCount'] && (bH['minFilter'] = cS),
                    bH['format'] = bh['format'],
                    bH['needsUpdate'] = !0x0,
                    bg && bg(bH);
                }, bh, bi);
            return bH;
        },
        'setPath': function(bf) {
            return this['path'] = bf,
            this;
        }
    }),
    Object['assign'](aCB['prototype'], {
        'load': function(bf, bg, bh, bi) {
            var bF = this
              , bG = new mo()
              , bH = new aCv(this['manager']);
            return bH['setResponseType']('arraybuffer'),
            bH['setPath'](this['path']),
            bH['load'](bf, function(bf) {
                var bh = bF['_parser'](bf);
                bh && (void 0x0 !== bh['image'] ? bG['image'] = bh['image'] : void 0x0 !== bh['data'] && (bG['image']['width'] = bh['width'],
                bG['image']['height'] = bh['height'],
                bG['image']['data'] = bh['data']),
                bG['wrapS'] = void 0x0 !== bh['wrapS'] ? bh['wrapS'] : cN,
                bG['wrapT'] = void 0x0 !== bh['wrapT'] ? bh['wrapT'] : cN,
                bG['magFilter'] = void 0x0 !== bh['magFilter'] ? bh['magFilter'] : cS,
                bG['minFilter'] = void 0x0 !== bh['minFilter'] ? bh['minFilter'] : cU,
                bG['anisotropy'] = void 0x0 !== bh['anisotropy'] ? bh['anisotropy'] : 0x1,
                void 0x0 !== bh['format'] && (bG['format'] = bh['format']),
                void 0x0 !== bh['type'] && (bG['type'] = bh['type']),
                void 0x0 !== bh['mipmaps'] && (bG['mipmaps'] = bh['mipmaps']),
                0x1 === bh['mipmapCount'] && (bG['minFilter'] = cS),
                bG['needsUpdate'] = !0x0,
                bg && bg(bG, bh));
            }, bh, bi),
            bG;
        },
        'setPath': function(bf) {
            return this['path'] = bf,
            this;
        }
    }),
    Object['assign'](aCD['prototype'], {
        'crossOrigin': 'anonymous',
        'load': function(bf, bg, bh, bi) {
            void 0x0 === bf && (bf = ''),
            void 0x0 !== this['path'] && (bf = this['path'] + bf),
            bf = this['manager']['resolveURL'](bf);
            var bF = this
              , bG = aCa['get'](bf);
            if (void 0x0 !== bG)
                return bF['manager']['itemStart'](bf),
                setTimeout(function() {
                    bg && bg(bG),
                    bF['manager']['itemEnd'](bf);
                }, 0x0),
                bG;
            var bH = document['createElementNS']('http://www.w3.org/1999/xhtml', 'img');
            function bI() {
                bH['removeEventListener']('load', bI, !0x1),
                bH['removeEventListener']('error', bJ, !0x1),
                aCa['add'](bf, this),
                bg && bg(this),
                bF['manager']['itemEnd'](bf);
            }
            function bJ(bg) {
                bH['removeEventListener']('load', bI, !0x1),
                bH['removeEventListener']('error', bJ, !0x1),
                bi && bi(bg),
                bF['manager']['itemError'](bf),
                bF['manager']['itemEnd'](bf);
            }
            return bH['addEventListener']('load', bI, !0x1),
            bH['addEventListener']('error', bJ, !0x1),
            'data:' !== bf['substr'](0x0, 0x5) && void 0x0 !== this['crossOrigin'] && (bH['crossOrigin'] = this['crossOrigin']),
            bF['manager']['itemStart'](bf),
            bH['src'] = bf,
            bH;
        },
        'setCrossOrigin': function(bf) {
            return this['crossOrigin'] = bf,
            this;
        },
        'setPath': function(bf) {
            return this['path'] = bf,
            this;
        }
    }),
    Object['assign'](aCF['prototype'], {
        'crossOrigin': 'anonymous',
        'load': function(bf, bg, bh, bi) {
            var bF = new O3()
              , bG = new aCD(this['manager']);
            bG['setCrossOrigin'](this['crossOrigin']),
            bG['setPath'](this['path']);
            var bH = 0x0;
            function bI(bh) {
                bG['load'](bf[bh], function(bf) {
                    bF['images'][bh] = bf,
                    0x6 === ++bH && (bF['needsUpdate'] = !0x0,
                    bg && bg(bF));
                }, void 0x0, bi);
            }
            for (var bJ = 0x0; bJ < bf['length']; ++bJ)
                bI(bJ);
            return bF;
        },
        'setCrossOrigin': function(bf) {
            return this['crossOrigin'] = bf,
            this;
        },
        'setPath': function(bf) {
            return this['path'] = bf,
            this;
        }
    }),
    Object['assign'](aCH['prototype'], {
        'crossOrigin': 'anonymous',
        'load': function(bf, bg, bh, bi) {
            var bF = new lW()
              , bG = new aCD(this['manager']);
            return bG['setCrossOrigin'](this['crossOrigin']),
            bG['setPath'](this['path']),
            bG['load'](bf, function(bh) {
                bF['image'] = bh;
                var bi = bf['search'](/\.jpe?g($|\?)/i) > 0x0 || 0x0 === bf['search'](/^data\:image\/jpeg/);
                bF['format'] = bi ? d8 : d9,
                bF['needsUpdate'] = !0x0,
                void 0x0 !== bg && bg(bF);
            }, bh, bi),
            bF;
        },
        'setCrossOrigin': function(bf) {
            return this['crossOrigin'] = bf,
            this;
        },
        'setPath': function(bf) {
            return this['path'] = bf,
            this;
        }
    }),
    Object['assign'](aCJ['prototype'], {
        'getPoint': function() {
            return console['warn']('THREE.Curve:\x20.getPoint()\x20not\x20implemented.'),
            null;
        },
        'getPointAt': function(bf, bg) {
            var bh = this['getUtoTmapping'](bf);
            return this['getPoint'](bh, bg);
        },
        'getPoints': function(bf) {
            void 0x0 === bf && (bf = 0x5);
            for (var bg = [], bh = 0x0; bh <= bf; bh++)
                bg['push'](this['getPoint'](bh / bf));
            return bg;
        },
        'getSpacedPoints': function(bf) {
            void 0x0 === bf && (bf = 0x5);
            for (var bg = [], bh = 0x0; bh <= bf; bh++)
                bg['push'](this['getPointAt'](bh / bf));
            return bg;
        },
        'getLength': function() {
            var bf = this['getLengths']();
            return bf[bf['length'] - 0x1];
        },
        'getLengths': function(bf) {
            if (void 0x0 === bf && (bf = this['arcLengthDivisions']),
            this['cacheArcLengths'] && this['cacheArcLengths']['length'] === bf + 0x1 && !this['needsUpdate'])
                return this['cacheArcLengths'];
            this['needsUpdate'] = !0x1;
            var bg, bh, bi = [], bF = this['getPoint'](0x0), bG = 0x0;
            for (bi['push'](0x0),
            bh = 0x1; bh <= bf; bh++)
                bG += (bg = this['getPoint'](bh / bf))['distanceTo'](bF),
                bi['push'](bG),
                bF = bg;
            return this['cacheArcLengths'] = bi,
            bi;
        },
        'updateArcLengths': function() {
            this['needsUpdate'] = !0x0,
            this['getLengths']();
        },
        'getUtoTmapping': function(bf, bg) {
            var bh, bi = this['getLengths'](), bF = 0x0, bG = bi['length'];
            bh = bg || bf * bi[bG - 0x1];
            for (var bH, bI = 0x0, bJ = bG - 0x1; bI <= bJ; )
                if ((bH = bi[bF = Math['floor'](bI + (bJ - bI) / 0x2)] - bh) < 0x0)
                    bI = bF + 0x1;
                else {
                    if (!(bH > 0x0)) {
                        bJ = bF;
                        break;
                    }
                    bJ = bF - 0x1;
                }
            if (bi[bF = bJ] === bh)
                return bF / (bG - 0x1);
            var bK = bi[bF];
            return (bF + (bh - bK) / (bi[bF + 0x1] - bK)) / (bG - 0x1);
        },
        'getTangent': function(bf) {
            var bg = bf - 0.0001
              , bh = bf + 0.0001;
            bg < 0x0 && (bg = 0x0),
            bh > 0x1 && (bh = 0x1);
            var bi = this['getPoint'](bg);
            return this['getPoint'](bh)['clone']()['sub'](bi)['normalize']();
        },
        'getTangentAt': function(bf) {
            var bg = this['getUtoTmapping'](bf);
            return this['getTangent'](bg);
        },
        'computeFrenetFrames': function(bf, bg) {
            var bh, bi, bF, bG = new eK(), bH = [], bI = [], bJ = [], bK = new eK(), bL = new mR();
            for (bh = 0x0; bh <= bf; bh++)
                bi = bh / bf,
                bH[bh] = this['getTangentAt'](bi),
                bH[bh]['normalize']();
            bI[0x0] = new eK(),
            bJ[0x0] = new eK();
            var bM = Number['MAX_VALUE']
              , bN = Math['abs'](bH[0x0]['x'])
              , bO = Math['abs'](bH[0x0]['y'])
              , bP = Math['abs'](bH[0x0]['z']);
            for (bN <= bM && (bM = bN,
            bG['set'](0x1, 0x0, 0x0)),
            bO <= bM && (bM = bO,
            bG['set'](0x0, 0x1, 0x0)),
            bP <= bM && bG['set'](0x0, 0x0, 0x1),
            bK['crossVectors'](bH[0x0], bG)['normalize'](),
            bI[0x0]['crossVectors'](bH[0x0], bK),
            bJ[0x0]['crossVectors'](bH[0x0], bI[0x0]),
            bh = 0x1; bh <= bf; bh++)
                bI[bh] = bI[bh - 0x1]['clone'](),
                bJ[bh] = bJ[bh - 0x1]['clone'](),
                bK['crossVectors'](bH[bh - 0x1], bH[bh]),
                bK['length']() > Number['EPSILON'] && (bK['normalize'](),
                bF = Math['acos'](e2['clamp'](bH[bh - 0x1]['dot'](bH[bh]), -0x1, 0x1)),
                bI[bh]['applyMatrix4'](bL['makeRotationAxis'](bK, bF))),
                bJ[bh]['crossVectors'](bH[bh], bI[bh]);
            if (!0x0 === bg)
                for (bF = Math['acos'](e2['clamp'](bI[0x0]['dot'](bI[bf]), -0x1, 0x1)),
                bF /= bf,
                bH[0x0]['dot'](bK['crossVectors'](bI[0x0], bI[bf])) > 0x0 && (bF = -bF),
                bh = 0x1; bh <= bf; bh++)
                    bI[bh]['applyMatrix4'](bL['makeRotationAxis'](bH[bh], bF * bh)),
                    bJ[bh]['crossVectors'](bH[bh], bI[bh]);
            return {
                'tangents': bH,
                'normals': bI,
                'binormals': bJ
            };
        },
        'clone': function() {
            return new this['constructor']()['copy'](this);
        },
        'copy': function(bf) {
            return this['arcLengthDivisions'] = bf['arcLengthDivisions'],
            this;
        },
        'toJSON': function() {
            var bf = {
                'metadata': {
                    'version': 4.5,
                    'type': 'Curve',
                    'generator': 'Curve.toJSON'
                }
            };
            return bf['arcLengthDivisions'] = this['arcLengthDivisions'],
            bf['type'] = this['type'],
            bf;
        },
        'fromJSON': function(bf) {
            return this['arcLengthDivisions'] = bf['arcLengthDivisions'],
            this;
        }
    }),
    aCK['prototype'] = Object['create'](aCJ['prototype']),
    aCK['prototype']['constructor'] = aCK,
    aCK['prototype']['isEllipseCurve'] = !0x0,
    aCK['prototype']['getPoint'] = function(bf, bg) {
        for (var bh = bg || new eC(), bi = 0x2 * Math['PI'], bF = this['aEndAngle'] - this['aStartAngle'], bG = Math['abs'](bF) < Number['EPSILON']; bF < 0x0; )
            bF += bi;
        for (; bF > bi; )
            bF -= bi;
        bF < Number['EPSILON'] && (bF = bG ? 0x0 : bi),
        !0x0 !== this['aClockwise'] || bG || (bF === bi ? bF = -bi : bF -= bi);
        var bH = this['aStartAngle'] + bf * bF
          , bI = this['aX'] + this['xRadius'] * Math['cos'](bH)
          , bJ = this['aY'] + this['yRadius'] * Math['sin'](bH);
        if (0x0 !== this['aRotation']) {
            var bK = Math['cos'](this['aRotation'])
              , bL = Math['sin'](this['aRotation'])
              , bM = bI - this['aX']
              , bN = bJ - this['aY'];
            bI = bM * bK - bN * bL + this['aX'],
            bJ = bM * bL + bN * bK + this['aY'];
        }
        return bh['set'](bI, bJ);
    }
    ,
    aCK['prototype']['copy'] = function(bf) {
        return aCJ['prototype']['copy']['call'](this, bf),
        this['aX'] = bf['aX'],
        this['aY'] = bf['aY'],
        this['xRadius'] = bf['xRadius'],
        this['yRadius'] = bf['yRadius'],
        this['aStartAngle'] = bf['aStartAngle'],
        this['aEndAngle'] = bf['aEndAngle'],
        this['aClockwise'] = bf['aClockwise'],
        this['aRotation'] = bf['aRotation'],
        this;
    }
    ,
    aCK['prototype']['toJSON'] = function() {
        var bf = aCJ['prototype']['toJSON']['call'](this);
        return bf['aX'] = this['aX'],
        bf['aY'] = this['aY'],
        bf['xRadius'] = this['xRadius'],
        bf['yRadius'] = this['yRadius'],
        bf['aStartAngle'] = this['aStartAngle'],
        bf['aEndAngle'] = this['aEndAngle'],
        bf['aClockwise'] = this['aClockwise'],
        bf['aRotation'] = this['aRotation'],
        bf;
    }
    ,
    aCK['prototype']['fromJSON'] = function(bf) {
        return aCJ['prototype']['fromJSON']['call'](this, bf),
        this['aX'] = bf['aX'],
        this['aY'] = bf['aY'],
        this['xRadius'] = bf['xRadius'],
        this['yRadius'] = bf['yRadius'],
        this['aStartAngle'] = bf['aStartAngle'],
        this['aEndAngle'] = bf['aEndAngle'],
        this['aClockwise'] = bf['aClockwise'],
        this['aRotation'] = bf['aRotation'],
        this;
    }
    ,
    aCT['prototype'] = Object['create'](aCK['prototype']),
    aCT['prototype']['constructor'] = aCT,
    aCT['prototype']['isArcCurve'] = !0x0;
    var aGs = new eK()
      , aGt = new aD0()
      , aGu = new aD0()
      , aGv = new aD0();
    function aGw(bf, bg, bh, bi) {
        aCJ['call'](this),
        this['type'] = 'CatmullRomCurve3',
        this['points'] = bf || [],
        this['closed'] = bg || !0x1,
        this['curveType'] = bh || 'centripetal',
        this['tension'] = bi || 0.5;
    }
    function aGB(bf, bg, bh, bi, bF) {
        var bG = 0.5 * (bi - bg)
          , bH = 0.5 * (bF - bh)
          , bI = bf * bf;
        return (0x2 * bh - 0x2 * bi + bG + bH) * (bf * bI) + (-0x3 * bh + 0x3 * bi - 0x2 * bG - bH) * bI + bG * bf + bh;
    }
    function aGK(bf, bg, bh, bi) {
        return function(bf, bg) {
            var bh = 0x1 - bf;
            return bh * bh * bg;
        }(bf, bg) + function(bf, bg) {
            return 0x2 * (0x1 - bf) * bf * bg;
        }(bf, bh) + function(bf, bg) {
            return bf * bf * bg;
        }(bf, bi);
    }
    function aGW(bf, bg, bh, bi, bF) {
        return function(bf, bg) {
            var bh = 0x1 - bf;
            return bh * bh * bh * bg;
        }(bf, bg) + function(bf, bg) {
            var bh = 0x1 - bf;
            return 0x3 * bh * bh * bf * bg;
        }(bf, bh) + function(bf, bg) {
            return 0x3 * (0x1 - bf) * bf * bf * bg;
        }(bf, bi) + function(bf, bg) {
            return bf * bf * bf * bg;
        }(bf, bF);
    }
    function aHc(bf, bg, bh, bi) {
        aCJ['call'](this),
        this['type'] = 'CubicBezierCurve',
        this['v0'] = bf || new eC(),
        this['v1'] = bg || new eC(),
        this['v2'] = bh || new eC(),
        this['v3'] = bi || new eC();
    }
    function aHh(bf, bg, bh, bi) {
        aCJ['call'](this),
        this['type'] = 'CubicBezierCurve3',
        this['v0'] = bf || new eK(),
        this['v1'] = bg || new eK(),
        this['v2'] = bh || new eK(),
        this['v3'] = bi || new eK();
    }
    function aHm(bf, bg) {
        aCJ['call'](this),
        this['type'] = 'LineCurve',
        this['v1'] = bf || new eC(),
        this['v2'] = bg || new eC();
    }
    function aHp(bf, bg) {
        aCJ['call'](this),
        this['type'] = 'LineCurve3',
        this['v1'] = bf || new eK(),
        this['v2'] = bg || new eK();
    }
    function aHs(bf, bg, bh) {
        aCJ['call'](this),
        this['type'] = 'QuadraticBezierCurve',
        this['v0'] = bf || new eC(),
        this['v1'] = bg || new eC(),
        this['v2'] = bh || new eC();
    }
    function aHw(bf, bg, bh) {
        aCJ['call'](this),
        this['type'] = 'QuadraticBezierCurve3',
        this['v0'] = bf || new eK(),
        this['v1'] = bg || new eK(),
        this['v2'] = bh || new eK();
    }
    function aHA(bf) {
        aCJ['call'](this),
        this['type'] = 'SplineCurve',
        this['points'] = bf || [];
    }
    aGw['prototype'] = Object['create'](aCJ['prototype']),
    aGw['prototype']['constructor'] = aGw,
    aGw['prototype']['isCatmullRomCurve3'] = !0x0,
    aGw['prototype']['getPoint'] = function(bf, bg) {
        var bh, bi, bF, bG, bH = bg || new eK(), bI = this['points'], bJ = bI['length'], bK = (bJ - (this['closed'] ? 0x0 : 0x1)) * bf, bL = Math['floor'](bK), bM = bK - bL;
        if (this['closed'] ? bL += bL > 0x0 ? 0x0 : (Math['floor'](Math['abs'](bL) / bJ) + 0x1) * bJ : 0x0 === bM && bL === bJ - 0x1 && (bL = bJ - 0x2,
        bM = 0x1),
        this['closed'] || bL > 0x0 ? bh = bI[(bL - 0x1) % bJ] : (aGs['subVectors'](bI[0x0], bI[0x1])['add'](bI[0x0]),
        bh = aGs),
        bi = bI[bL % bJ],
        bF = bI[(bL + 0x1) % bJ],
        this['closed'] || bL + 0x2 < bJ ? bG = bI[(bL + 0x2) % bJ] : (aGs['subVectors'](bI[bJ - 0x1], bI[bJ - 0x2])['add'](bI[bJ - 0x1]),
        bG = aGs),
        'centripetal' === this['curveType'] || 'chordal' === this['curveType']) {
            var bN = 'chordal' === this['curveType'] ? 0.5 : 0.25
              , bO = Math['pow'](bh['distanceToSquared'](bi), bN)
              , bP = Math['pow'](bi['distanceToSquared'](bF), bN)
              , bQ = Math['pow'](bF['distanceToSquared'](bG), bN);
            bP < 0.0001 && (bP = 0x1),
            bO < 0.0001 && (bO = bP),
            bQ < 0.0001 && (bQ = bP),
            aGt['initNonuniformCatmullRom'](bh['x'], bi['x'], bF['x'], bG['x'], bO, bP, bQ),
            aGu['initNonuniformCatmullRom'](bh['y'], bi['y'], bF['y'], bG['y'], bO, bP, bQ),
            aGv['initNonuniformCatmullRom'](bh['z'], bi['z'], bF['z'], bG['z'], bO, bP, bQ);
        } else
            'catmullrom' === this['curveType'] && (aGt['initCatmullRom'](bh['x'], bi['x'], bF['x'], bG['x'], this['tension']),
            aGu['initCatmullRom'](bh['y'], bi['y'], bF['y'], bG['y'], this['tension']),
            aGv['initCatmullRom'](bh['z'], bi['z'], bF['z'], bG['z'], this['tension']));
        return bH['set'](aGt['calc'](bM), aGu['calc'](bM), aGv['calc'](bM)),
        bH;
    }
    ,
    aGw['prototype']['copy'] = function(bf) {
        aCJ['prototype']['copy']['call'](this, bf),
        this['points'] = [];
        for (var bg = 0x0, bh = bf['points']['length']; bg < bh; bg++) {
            var bi = bf['points'][bg];
            this['points']['push'](bi['clone']());
        }
        return this['closed'] = bf['closed'],
        this['curveType'] = bf['curveType'],
        this['tension'] = bf['tension'],
        this;
    }
    ,
    aGw['prototype']['toJSON'] = function() {
        var bf = aCJ['prototype']['toJSON']['call'](this);
        bf['points'] = [];
        for (var bg = 0x0, bh = this['points']['length']; bg < bh; bg++) {
            var bi = this['points'][bg];
            bf['points']['push'](bi['toArray']());
        }
        return bf['closed'] = this['closed'],
        bf['curveType'] = this['curveType'],
        bf['tension'] = this['tension'],
        bf;
    }
    ,
    aGw['prototype']['fromJSON'] = function(bf) {
        aCJ['prototype']['fromJSON']['call'](this, bf),
        this['points'] = [];
        for (var bg = 0x0, bh = bf['points']['length']; bg < bh; bg++) {
            var bi = bf['points'][bg];
            this['points']['push'](new eK()['fromArray'](bi));
        }
        return this['closed'] = bf['closed'],
        this['curveType'] = bf['curveType'],
        this['tension'] = bf['tension'],
        this;
    }
    ,
    aHc['prototype'] = Object['create'](aCJ['prototype']),
    aHc['prototype']['constructor'] = aHc,
    aHc['prototype']['isCubicBezierCurve'] = !0x0,
    aHc['prototype']['getPoint'] = function(bf, bg) {
        var bh = bg || new eC()
          , bi = this['v0']
          , bF = this['v1']
          , bG = this['v2']
          , bH = this['v3'];
        return bh['set'](aGW(bf, bi['x'], bF['x'], bG['x'], bH['x']), aGW(bf, bi['y'], bF['y'], bG['y'], bH['y'])),
        bh;
    }
    ,
    aHc['prototype']['copy'] = function(bf) {
        return aCJ['prototype']['copy']['call'](this, bf),
        this['v0']['copy'](bf['v0']),
        this['v1']['copy'](bf['v1']),
        this['v2']['copy'](bf['v2']),
        this['v3']['copy'](bf['v3']),
        this;
    }
    ,
    aHc['prototype']['toJSON'] = function() {
        var bf = aCJ['prototype']['toJSON']['call'](this);
        return bf['v0'] = this['v0']['toArray'](),
        bf['v1'] = this['v1']['toArray'](),
        bf['v2'] = this['v2']['toArray'](),
        bf['v3'] = this['v3']['toArray'](),
        bf;
    }
    ,
    aHc['prototype']['fromJSON'] = function(bf) {
        return aCJ['prototype']['fromJSON']['call'](this, bf),
        this['v0']['fromArray'](bf['v0']),
        this['v1']['fromArray'](bf['v1']),
        this['v2']['fromArray'](bf['v2']),
        this['v3']['fromArray'](bf['v3']),
        this;
    }
    ,
    aHh['prototype'] = Object['create'](aCJ['prototype']),
    aHh['prototype']['constructor'] = aHh,
    aHh['prototype']['isCubicBezierCurve3'] = !0x0,
    aHh['prototype']['getPoint'] = function(bf, bg) {
        var bh = bg || new eK()
          , bi = this['v0']
          , bF = this['v1']
          , bG = this['v2']
          , bH = this['v3'];
        return bh['set'](aGW(bf, bi['x'], bF['x'], bG['x'], bH['x']), aGW(bf, bi['y'], bF['y'], bG['y'], bH['y']), aGW(bf, bi['z'], bF['z'], bG['z'], bH['z'])),
        bh;
    }
    ,
    aHh['prototype']['copy'] = function(bf) {
        return aCJ['prototype']['copy']['call'](this, bf),
        this['v0']['copy'](bf['v0']),
        this['v1']['copy'](bf['v1']),
        this['v2']['copy'](bf['v2']),
        this['v3']['copy'](bf['v3']),
        this;
    }
    ,
    aHh['prototype']['toJSON'] = function() {
        var bf = aCJ['prototype']['toJSON']['call'](this);
        return bf['v0'] = this['v0']['toArray'](),
        bf['v1'] = this['v1']['toArray'](),
        bf['v2'] = this['v2']['toArray'](),
        bf['v3'] = this['v3']['toArray'](),
        bf;
    }
    ,
    aHh['prototype']['fromJSON'] = function(bf) {
        return aCJ['prototype']['fromJSON']['call'](this, bf),
        this['v0']['fromArray'](bf['v0']),
        this['v1']['fromArray'](bf['v1']),
        this['v2']['fromArray'](bf['v2']),
        this['v3']['fromArray'](bf['v3']),
        this;
    }
    ,
    aHm['prototype'] = Object['create'](aCJ['prototype']),
    aHm['prototype']['constructor'] = aHm,
    aHm['prototype']['isLineCurve'] = !0x0,
    aHm['prototype']['getPoint'] = function(bf, bg) {
        var bh = bg || new eC();
        return 0x1 === bf ? bh['copy'](this['v2']) : (bh['copy'](this['v2'])['sub'](this['v1']),
        bh['multiplyScalar'](bf)['add'](this['v1'])),
        bh;
    }
    ,
    aHm['prototype']['getPointAt'] = function(bf, bg) {
        return this['getPoint'](bf, bg);
    }
    ,
    aHm['prototype']['getTangent'] = function() {
        return this['v2']['clone']()['sub'](this['v1'])['normalize']();
    }
    ,
    aHm['prototype']['copy'] = function(bf) {
        return aCJ['prototype']['copy']['call'](this, bf),
        this['v1']['copy'](bf['v1']),
        this['v2']['copy'](bf['v2']),
        this;
    }
    ,
    aHm['prototype']['toJSON'] = function() {
        var bf = aCJ['prototype']['toJSON']['call'](this);
        return bf['v1'] = this['v1']['toArray'](),
        bf['v2'] = this['v2']['toArray'](),
        bf;
    }
    ,
    aHm['prototype']['fromJSON'] = function(bf) {
        return aCJ['prototype']['fromJSON']['call'](this, bf),
        this['v1']['fromArray'](bf['v1']),
        this['v2']['fromArray'](bf['v2']),
        this;
    }
    ,
    aHp['prototype'] = Object['create'](aCJ['prototype']),
    aHp['prototype']['constructor'] = aHp,
    aHp['prototype']['isLineCurve3'] = !0x0,
    aHp['prototype']['getPoint'] = function(bf, bg) {
        var bh = bg || new eK();
        return 0x1 === bf ? bh['copy'](this['v2']) : (bh['copy'](this['v2'])['sub'](this['v1']),
        bh['multiplyScalar'](bf)['add'](this['v1'])),
        bh;
    }
    ,
    aHp['prototype']['getPointAt'] = function(bf, bg) {
        return this['getPoint'](bf, bg);
    }
    ,
    aHp['prototype']['copy'] = function(bf) {
        return aCJ['prototype']['copy']['call'](this, bf),
        this['v1']['copy'](bf['v1']),
        this['v2']['copy'](bf['v2']),
        this;
    }
    ,
    aHp['prototype']['toJSON'] = function() {
        var bf = aCJ['prototype']['toJSON']['call'](this);
        return bf['v1'] = this['v1']['toArray'](),
        bf['v2'] = this['v2']['toArray'](),
        bf;
    }
    ,
    aHp['prototype']['fromJSON'] = function(bf) {
        return aCJ['prototype']['fromJSON']['call'](this, bf),
        this['v1']['fromArray'](bf['v1']),
        this['v2']['fromArray'](bf['v2']),
        this;
    }
    ,
    aHs['prototype'] = Object['create'](aCJ['prototype']),
    aHs['prototype']['constructor'] = aHs,
    aHs['prototype']['isQuadraticBezierCurve'] = !0x0,
    aHs['prototype']['getPoint'] = function(bf, bg) {
        var bh = bg || new eC()
          , bi = this['v0']
          , bF = this['v1']
          , bG = this['v2'];
        return bh['set'](aGK(bf, bi['x'], bF['x'], bG['x']), aGK(bf, bi['y'], bF['y'], bG['y'])),
        bh;
    }
    ,
    aHs['prototype']['copy'] = function(bf) {
        return aCJ['prototype']['copy']['call'](this, bf),
        this['v0']['copy'](bf['v0']),
        this['v1']['copy'](bf['v1']),
        this['v2']['copy'](bf['v2']),
        this;
    }
    ,
    aHs['prototype']['toJSON'] = function() {
        var bf = aCJ['prototype']['toJSON']['call'](this);
        return bf['v0'] = this['v0']['toArray'](),
        bf['v1'] = this['v1']['toArray'](),
        bf['v2'] = this['v2']['toArray'](),
        bf;
    }
    ,
    aHs['prototype']['fromJSON'] = function(bf) {
        return aCJ['prototype']['fromJSON']['call'](this, bf),
        this['v0']['fromArray'](bf['v0']),
        this['v1']['fromArray'](bf['v1']),
        this['v2']['fromArray'](bf['v2']),
        this;
    }
    ,
    aHw['prototype'] = Object['create'](aCJ['prototype']),
    aHw['prototype']['constructor'] = aHw,
    aHw['prototype']['isQuadraticBezierCurve3'] = !0x0,
    aHw['prototype']['getPoint'] = function(bf, bg) {
        var bh = bg || new eK()
          , bi = this['v0']
          , bF = this['v1']
          , bG = this['v2'];
        return bh['set'](aGK(bf, bi['x'], bF['x'], bG['x']), aGK(bf, bi['y'], bF['y'], bG['y']), aGK(bf, bi['z'], bF['z'], bG['z'])),
        bh;
    }
    ,
    aHw['prototype']['copy'] = function(bf) {
        return aCJ['prototype']['copy']['call'](this, bf),
        this['v0']['copy'](bf['v0']),
        this['v1']['copy'](bf['v1']),
        this['v2']['copy'](bf['v2']),
        this;
    }
    ,
    aHw['prototype']['toJSON'] = function() {
        var bf = aCJ['prototype']['toJSON']['call'](this);
        return bf['v0'] = this['v0']['toArray'](),
        bf['v1'] = this['v1']['toArray'](),
        bf['v2'] = this['v2']['toArray'](),
        bf;
    }
    ,
    aHw['prototype']['fromJSON'] = function(bf) {
        return aCJ['prototype']['fromJSON']['call'](this, bf),
        this['v0']['fromArray'](bf['v0']),
        this['v1']['fromArray'](bf['v1']),
        this['v2']['fromArray'](bf['v2']),
        this;
    }
    ,
    aHA['prototype'] = Object['create'](aCJ['prototype']),
    aHA['prototype']['constructor'] = aHA,
    aHA['prototype']['isSplineCurve'] = !0x0,
    aHA['prototype']['getPoint'] = function(bf, bg) {
        var bh = bg || new eC()
          , bi = this['points']
          , bF = (bi['length'] - 0x1) * bf
          , bG = Math['floor'](bF)
          , bH = bF - bG
          , bI = bi[0x0 === bG ? bG : bG - 0x1]
          , bJ = bi[bG]
          , bK = bi[bG > bi['length'] - 0x2 ? bi['length'] - 0x1 : bG + 0x1]
          , bL = bi[bG > bi['length'] - 0x3 ? bi['length'] - 0x1 : bG + 0x2];
        return bh['set'](aGB(bH, bI['x'], bJ['x'], bK['x'], bL['x']), aGB(bH, bI['y'], bJ['y'], bK['y'], bL['y'])),
        bh;
    }
    ,
    aHA['prototype']['copy'] = function(bf) {
        aCJ['prototype']['copy']['call'](this, bf),
        this['points'] = [];
        for (var bg = 0x0, bh = bf['points']['length']; bg < bh; bg++) {
            var bi = bf['points'][bg];
            this['points']['push'](bi['clone']());
        }
        return this;
    }
    ,
    aHA['prototype']['toJSON'] = function() {
        var bf = aCJ['prototype']['toJSON']['call'](this);
        bf['points'] = [];
        for (var bg = 0x0, bh = this['points']['length']; bg < bh; bg++) {
            var bi = this['points'][bg];
            bf['points']['push'](bi['toArray']());
        }
        return bf;
    }
    ,
    aHA['prototype']['fromJSON'] = function(bf) {
        aCJ['prototype']['fromJSON']['call'](this, bf),
        this['points'] = [];
        for (var bg = 0x0, bh = bf['points']['length']; bg < bh; bg++) {
            var bi = bf['points'][bg];
            this['points']['push'](new eC()['fromArray'](bi));
        }
        return this;
    }
    ;
    var aJj = Object['freeze']({
        'ArcCurve': aCT,
        'CatmullRomCurve3': aGw,
        'CubicBezierCurve': aHc,
        'CubicBezierCurve3': aHh,
        'EllipseCurve': aCK,
        'LineCurve': aHm,
        'LineCurve3': aHp,
        'QuadraticBezierCurve': aHs,
        'QuadraticBezierCurve3': aHw,
        'SplineCurve': aHA
    });
    function aJk() {
        aCJ['call'](this),
        this['type'] = 'CurvePath',
        this['curves'] = [],
        this['autoClose'] = !0x1;
    }
    function aJl(bf) {
        aJk['call'](this),
        this['type'] = 'Path',
        this['currentPoint'] = new eC(),
        bf && this['setFromPoints'](bf);
    }
    function aJn(bf) {
        aJl['call'](this, bf),
        this['uuid'] = e2['generateUUID'](),
        this['type'] = 'Shape',
        this['holes'] = [];
    }
    function aJp(bf, bg) {
        yT['call'](this),
        this['type'] = 'Light',
        this['color'] = new w7(bf),
        this['intensity'] = void 0x0 !== bg ? bg : 0x1,
        this['receiveShadow'] = void 0x0;
    }
    function aJs(bf, bg, bh) {
        aJp['call'](this, bf, bh),
        this['type'] = 'HemisphereLight',
        this['castShadow'] = void 0x0,
        this['position']['copy'](yT['DefaultUp']),
        this['updateMatrix'](),
        this['groundColor'] = new w7(bg);
    }
    function aJw(bf) {
        this['camera'] = bf,
        this['bias'] = 0x0,
        this['radius'] = 0x1,
        this['mapSize'] = new eC(0x200,0x200),
        this['map'] = null,
        this['matrix'] = new mR();
    }
    function aJy() {
        aJw['call'](this, new a68(0x32,0x1,0.5,0x1f4));
    }
    function aJz(bf, bg, bh, bi, bF, bG) {
        aJp['call'](this, bf, bg),
        this['type'] = 'SpotLight',
        this['position']['copy'](yT['DefaultUp']),
        this['updateMatrix'](),
        this['target'] = new yT(),
        Object['defineProperty'](this, 'power', {
            'get': function() {
                return this['intensity'] * Math['PI'];
            },
            'set': function(bf) {
                this['intensity'] = bf / Math['PI'];
            }
        }),
        this['distance'] = void 0x0 !== bh ? bh : 0x0,
        this['angle'] = void 0x0 !== bi ? bi : Math['PI'] / 0x3,
        this['penumbra'] = void 0x0 !== bF ? bF : 0x0,
        this['decay'] = void 0x0 !== bG ? bG : 0x1,
        this['shadow'] = new aJy();
    }
    function aJH(bf, bg, bh, bi) {
        aJp['call'](this, bf, bg),
        this['type'] = 'PointLight',
        Object['defineProperty'](this, 'power', {
            'get': function() {
                return 0x4 * this['intensity'] * Math['PI'];
            },
            'set': function(bf) {
                this['intensity'] = bf / (0x4 * Math['PI']);
            }
        }),
        this['distance'] = void 0x0 !== bh ? bh : 0x0,
        this['decay'] = void 0x0 !== bi ? bi : 0x1,
        this['shadow'] = new aJw(new a68(0x5a,0x1,0.5,0x1f4));
    }
    function aJN(bf, bg, bh, bi, bF, bG) {
        a67['call'](this),
        this['type'] = 'OrthographicCamera',
        this['zoom'] = 0x1,
        this['view'] = null,
        this['left'] = void 0x0 !== bf ? bf : -0x1,
        this['right'] = void 0x0 !== bg ? bg : 0x1,
        this['top'] = void 0x0 !== bh ? bh : 0x1,
        this['bottom'] = void 0x0 !== bi ? bi : -0x1,
        this['near'] = void 0x0 !== bF ? bF : 0.1,
        this['far'] = void 0x0 !== bG ? bG : 0x7d0,
        this['updateProjectionMatrix']();
    }
    function aJU() {
        aJw['call'](this, new aJN(-0x5,0x5,0x5,-0x5,0.5,0x1f4));
    }
    function aJV(bf, bg) {
        aJp['call'](this, bf, bg),
        this['type'] = 'DirectionalLight',
        this['position']['copy'](yT['DefaultUp']),
        this['updateMatrix'](),
        this['target'] = new yT(),
        this['shadow'] = new aJU();
    }
    function aJY(bf, bg) {
        aJp['call'](this, bf, bg),
        this['type'] = 'AmbientLight',
        this['castShadow'] = void 0x0;
    }
    function aK1(bf, bg, bh, bi) {
        aJp['call'](this, bf, bg),
        this['type'] = 'RectAreaLight',
        this['width'] = void 0x0 !== bh ? bh : 0xa,
        this['height'] = void 0x0 !== bi ? bi : 0xa;
    }
    function aK6(bf) {
        this['manager'] = void 0x0 !== bf ? bf : aCt,
        this['textures'] = {};
    }
    aJk['prototype'] = Object['assign'](Object['create'](aCJ['prototype']), {
        'constructor': aJk,
        'add': function(bf) {
            this['curves']['push'](bf);
        },
        'closePath': function() {
            var bf = this['curves'][0x0]['getPoint'](0x0)
              , bg = this['curves'][this['curves']['length'] - 0x1]['getPoint'](0x1);
            bf['equals'](bg) || this['curves']['push'](new aHm(bg,bf));
        },
        'getPoint': function(bf) {
            for (var bg = bf * this['getLength'](), bh = this['getCurveLengths'](), bi = 0x0; bi < bh['length']; ) {
                if (bh[bi] >= bg) {
                    var bF = bh[bi] - bg
                      , bG = this['curves'][bi]
                      , bH = bG['getLength']()
                      , bI = 0x0 === bH ? 0x0 : 0x1 - bF / bH;
                    return bG['getPointAt'](bI);
                }
                bi++;
            }
            return null;
        },
        'getLength': function() {
            var bf = this['getCurveLengths']();
            return bf[bf['length'] - 0x1];
        },
        'updateArcLengths': function() {
            this['needsUpdate'] = !0x0,
            this['cacheLengths'] = null,
            this['getCurveLengths']();
        },
        'getCurveLengths': function() {
            if (this['cacheLengths'] && this['cacheLengths']['length'] === this['curves']['length'])
                return this['cacheLengths'];
            for (var bf = [], bg = 0x0, bh = 0x0, bi = this['curves']['length']; bh < bi; bh++)
                bg += this['curves'][bh]['getLength'](),
                bf['push'](bg);
            return this['cacheLengths'] = bf,
            bf;
        },
        'getSpacedPoints': function(bf) {
            void 0x0 === bf && (bf = 0x28);
            for (var bg = [], bh = 0x0; bh <= bf; bh++)
                bg['push'](this['getPoint'](bh / bf));
            return this['autoClose'] && bg['push'](bg[0x0]),
            bg;
        },
        'getPoints': function(bf) {
            bf = bf || 0xc;
            for (var bg, bh = [], bi = 0x0, bF = this['curves']; bi < bF['length']; bi++)
                for (var bG = bF[bi], bH = bG && bG['isEllipseCurve'] ? 0x2 * bf : bG && (bG['isLineCurve'] || bG['isLineCurve3']) ? 0x1 : bG && bG['isSplineCurve'] ? bf * bG['points']['length'] : bf, bI = bG['getPoints'](bH), bJ = 0x0; bJ < bI['length']; bJ++) {
                    var bK = bI[bJ];
                    bg && bg['equals'](bK) || (bh['push'](bK),
                    bg = bK);
                }
            return this['autoClose'] && bh['length'] > 0x1 && !bh[bh['length'] - 0x1]['equals'](bh[0x0]) && bh['push'](bh[0x0]),
            bh;
        },
        'copy': function(bf) {
            aCJ['prototype']['copy']['call'](this, bf),
            this['curves'] = [];
            for (var bg = 0x0, bh = bf['curves']['length']; bg < bh; bg++) {
                var bi = bf['curves'][bg];
                this['curves']['push'](bi['clone']());
            }
            return this['autoClose'] = bf['autoClose'],
            this;
        },
        'toJSON': function() {
            var bf = aCJ['prototype']['toJSON']['call'](this);
            bf['autoClose'] = this['autoClose'],
            bf['curves'] = [];
            for (var bg = 0x0, bh = this['curves']['length']; bg < bh; bg++) {
                var bi = this['curves'][bg];
                bf['curves']['push'](bi['toJSON']());
            }
            return bf;
        },
        'fromJSON': function(bf) {
            aCJ['prototype']['fromJSON']['call'](this, bf),
            this['autoClose'] = bf['autoClose'],
            this['curves'] = [];
            for (var bg = 0x0, bh = bf['curves']['length']; bg < bh; bg++) {
                var bi = bf['curves'][bg];
                this['curves']['push'](new aJj[bi['type']]()['fromJSON'](bi));
            }
            return this;
        }
    }),
    aJl['prototype'] = Object['assign'](Object['create'](aJk['prototype']), {
        'constructor': aJl,
        'setFromPoints': function(bf) {
            this['moveTo'](bf[0x0]['x'], bf[0x0]['y']);
            for (var bg = 0x1, bh = bf['length']; bg < bh; bg++)
                this['lineTo'](bf[bg]['x'], bf[bg]['y']);
        },
        'moveTo': function(bf, bg) {
            this['currentPoint']['set'](bf, bg);
        },
        'lineTo': function(bf, bg) {
            var bh = new aHm(this['currentPoint']['clone'](),new eC(bf,bg));
            this['curves']['push'](bh),
            this['currentPoint']['set'](bf, bg);
        },
        'quadraticCurveTo': function(bf, bg, bh, bi) {
            var bF = new aHs(this['currentPoint']['clone'](),new eC(bf,bg),new eC(bh,bi));
            this['curves']['push'](bF),
            this['currentPoint']['set'](bh, bi);
        },
        'bezierCurveTo': function(bf, bg, bh, bi, bF, bG) {
            var bH = new aHc(this['currentPoint']['clone'](),new eC(bf,bg),new eC(bh,bi),new eC(bF,bG));
            this['curves']['push'](bH),
            this['currentPoint']['set'](bF, bG);
        },
        'splineThru': function(bf) {
            var bg = new aHA([this['currentPoint']['clone']()]['concat'](bf));
            this['curves']['push'](bg),
            this['currentPoint']['copy'](bf[bf['length'] - 0x1]);
        },
        'arc': function(bf, bg, bh, bi, bF, bG) {
            var bH = this['currentPoint']['x']
              , bI = this['currentPoint']['y'];
            this['absarc'](bf + bH, bg + bI, bh, bi, bF, bG);
        },
        'absarc': function(bf, bg, bh, bi, bF, bG) {
            this['absellipse'](bf, bg, bh, bh, bi, bF, bG);
        },
        'ellipse': function(bf, bg, bh, bi, bF, bG, bH, bI) {
            var bJ = this['currentPoint']['x']
              , bK = this['currentPoint']['y'];
            this['absellipse'](bf + bJ, bg + bK, bh, bi, bF, bG, bH, bI);
        },
        'absellipse': function(bf, bg, bh, bi, bF, bG, bH, bI) {
            var bJ = new aCK(bf,bg,bh,bi,bF,bG,bH,bI);
            if (this['curves']['length'] > 0x0) {
                var bK = bJ['getPoint'](0x0);
                bK['equals'](this['currentPoint']) || this['lineTo'](bK['x'], bK['y']);
            }
            this['curves']['push'](bJ);
            var bL = bJ['getPoint'](0x1);
            this['currentPoint']['copy'](bL);
        },
        'copy': function(bf) {
            return aJk['prototype']['copy']['call'](this, bf),
            this['currentPoint']['copy'](bf['currentPoint']),
            this;
        },
        'toJSON': function() {
            var bf = aJk['prototype']['toJSON']['call'](this);
            return bf['currentPoint'] = this['currentPoint']['toArray'](),
            bf;
        },
        'fromJSON': function(bf) {
            return aJk['prototype']['fromJSON']['call'](this, bf),
            this['currentPoint']['fromArray'](bf['currentPoint']),
            this;
        }
    }),
    aJn['prototype'] = Object['assign'](Object['create'](aJl['prototype']), {
        'constructor': aJn,
        'getPointsHoles': function(bf) {
            for (var bg = [], bh = 0x0, bi = this['holes']['length']; bh < bi; bh++)
                bg[bh] = this['holes'][bh]['getPoints'](bf);
            return bg;
        },
        'extractPoints': function(bf) {
            return {
                'shape': this['getPoints'](bf),
                'holes': this['getPointsHoles'](bf)
            };
        },
        'copy': function(bf) {
            aJl['prototype']['copy']['call'](this, bf),
            this['holes'] = [];
            for (var bg = 0x0, bh = bf['holes']['length']; bg < bh; bg++) {
                var bi = bf['holes'][bg];
                this['holes']['push'](bi['clone']());
            }
            return this;
        },
        'toJSON': function() {
            var bf = aJl['prototype']['toJSON']['call'](this);
            bf['uuid'] = this['uuid'],
            bf['holes'] = [];
            for (var bg = 0x0, bh = this['holes']['length']; bg < bh; bg++) {
                var bi = this['holes'][bg];
                bf['holes']['push'](bi['toJSON']());
            }
            return bf;
        },
        'fromJSON': function(bf) {
            aJl['prototype']['fromJSON']['call'](this, bf),
            this['uuid'] = bf['uuid'],
            this['holes'] = [];
            for (var bg = 0x0, bh = bf['holes']['length']; bg < bh; bg++) {
                var bi = bf['holes'][bg];
                this['holes']['push'](new aJl()['fromJSON'](bi));
            }
            return this;
        }
    }),
    aJp['prototype'] = Object['assign'](Object['create'](yT['prototype']), {
        'constructor': aJp,
        'isLight': !0x0,
        'copy': function(bf) {
            return yT['prototype']['copy']['call'](this, bf),
            this['color']['copy'](bf['color']),
            this['intensity'] = bf['intensity'],
            this;
        },
        'toJSON': function(bf) {
            var bg = yT['prototype']['toJSON']['call'](this, bf);
            return bg['object']['color'] = this['color']['getHex'](),
            bg['object']['intensity'] = this['intensity'],
            void 0x0 !== this['groundColor'] && (bg['object']['groundColor'] = this['groundColor']['getHex']()),
            void 0x0 !== this['distance'] && (bg['object']['distance'] = this['distance']),
            void 0x0 !== this['angle'] && (bg['object']['angle'] = this['angle']),
            void 0x0 !== this['decay'] && (bg['object']['decay'] = this['decay']),
            void 0x0 !== this['penumbra'] && (bg['object']['penumbra'] = this['penumbra']),
            void 0x0 !== this['shadow'] && (bg['object']['shadow'] = this['shadow']['toJSON']()),
            bg;
        }
    }),
    aJs['prototype'] = Object['assign'](Object['create'](aJp['prototype']), {
        'constructor': aJs,
        'isHemisphereLight': !0x0,
        'copy': function(bf) {
            return aJp['prototype']['copy']['call'](this, bf),
            this['groundColor']['copy'](bf['groundColor']),
            this;
        }
    }),
    Object['assign'](aJw['prototype'], {
        'copy': function(bf) {
            return this['camera'] = bf['camera']['clone'](),
            this['bias'] = bf['bias'],
            this['radius'] = bf['radius'],
            this['mapSize']['copy'](bf['mapSize']),
            this;
        },
        'clone': function() {
            return new this['constructor']()['copy'](this);
        },
        'toJSON': function() {
            var bf = {};
            return 0x0 !== this['bias'] && (bf['bias'] = this['bias']),
            0x1 !== this['radius'] && (bf['radius'] = this['radius']),
            0x200 === this['mapSize']['x'] && 0x200 === this['mapSize']['y'] || (bf['mapSize'] = this['mapSize']['toArray']()),
            bf['camera'] = this['camera']['toJSON'](!0x1)['object'],
            delete bf['camera']['matrix'],
            bf;
        }
    }),
    aJy['prototype'] = Object['assign'](Object['create'](aJw['prototype']), {
        'constructor': aJy,
        'isSpotLightShadow': !0x0,
        'update': function(bf) {
            var bg = this['camera']
              , bh = 0x2 * e2['RAD2DEG'] * bf['angle']
              , bi = this['mapSize']['width'] / this['mapSize']['height']
              , bF = bf['distance'] || bg['far'];
            bh === bg['fov'] && bi === bg['aspect'] && bF === bg['far'] || (bg['fov'] = bh,
            bg['aspect'] = bi,
            bg['far'] = bF,
            bg['updateProjectionMatrix']());
        }
    }),
    aJz['prototype'] = Object['assign'](Object['create'](aJp['prototype']), {
        'constructor': aJz,
        'isSpotLight': !0x0,
        'copy': function(bf) {
            return aJp['prototype']['copy']['call'](this, bf),
            this['distance'] = bf['distance'],
            this['angle'] = bf['angle'],
            this['penumbra'] = bf['penumbra'],
            this['decay'] = bf['decay'],
            this['target'] = bf['target']['clone'](),
            this['shadow'] = bf['shadow']['clone'](),
            this;
        }
    }),
    aJH['prototype'] = Object['assign'](Object['create'](aJp['prototype']), {
        'constructor': aJH,
        'isPointLight': !0x0,
        'copy': function(bf) {
            return aJp['prototype']['copy']['call'](this, bf),
            this['distance'] = bf['distance'],
            this['decay'] = bf['decay'],
            this['shadow'] = bf['shadow']['clone'](),
            this;
        }
    }),
    aJN['prototype'] = Object['assign'](Object['create'](a67['prototype']), {
        'constructor': aJN,
        'isOrthographicCamera': !0x0,
        'copy': function(bf, bg) {
            return a67['prototype']['copy']['call'](this, bf, bg),
            this['left'] = bf['left'],
            this['right'] = bf['right'],
            this['top'] = bf['top'],
            this['bottom'] = bf['bottom'],
            this['near'] = bf['near'],
            this['far'] = bf['far'],
            this['zoom'] = bf['zoom'],
            this['view'] = null === bf['view'] ? null : Object['assign']({}, bf['view']),
            this;
        },
        'setViewOffset': function(bf, bg, bh, bi, bF, bG) {
            null === this['view'] && (this['view'] = {
                'enabled': !0x0,
                'fullWidth': 0x1,
                'fullHeight': 0x1,
                'offsetX': 0x0,
                'offsetY': 0x0,
                'width': 0x1,
                'height': 0x1
            }),
            this['view']['enabled'] = !0x0,
            this['view']['fullWidth'] = bf,
            this['view']['fullHeight'] = bg,
            this['view']['offsetX'] = bh,
            this['view']['offsetY'] = bi,
            this['view']['width'] = bF,
            this['view']['height'] = bG,
            this['updateProjectionMatrix']();
        },
        'clearViewOffset': function() {
            null !== this['view'] && (this['view']['enabled'] = !0x1),
            this['updateProjectionMatrix']();
        },
        'updateProjectionMatrix': function() {
            var bf = (this['right'] - this['left']) / (0x2 * this['zoom'])
              , bg = (this['top'] - this['bottom']) / (0x2 * this['zoom'])
              , bh = (this['right'] + this['left']) / 0x2
              , bi = (this['top'] + this['bottom']) / 0x2
              , bF = bh - bf
              , bG = bh + bf
              , bH = bi + bg
              , bI = bi - bg;
            if (null !== this['view'] && this['view']['enabled']) {
                var bJ = this['zoom'] / (this['view']['width'] / this['view']['fullWidth'])
                  , bK = this['zoom'] / (this['view']['height'] / this['view']['fullHeight'])
                  , bL = (this['right'] - this['left']) / this['view']['width']
                  , bM = (this['top'] - this['bottom']) / this['view']['height'];
                bG = (bF += bL * (this['view']['offsetX'] / bJ)) + bL * (this['view']['width'] / bJ),
                bI = (bH -= bM * (this['view']['offsetY'] / bK)) - bM * (this['view']['height'] / bK);
            }
            this['projectionMatrix']['makeOrthographic'](bF, bG, bH, bI, this['near'], this['far']),
            this['projectionMatrixInverse']['getInverse'](this['projectionMatrix']);
        },
        'toJSON': function(bf) {
            var bg = yT['prototype']['toJSON']['call'](this, bf);
            return bg['object']['zoom'] = this['zoom'],
            bg['object']['left'] = this['left'],
            bg['object']['right'] = this['right'],
            bg['object']['top'] = this['top'],
            bg['object']['bottom'] = this['bottom'],
            bg['object']['near'] = this['near'],
            bg['object']['far'] = this['far'],
            null !== this['view'] && (bg['object']['view'] = Object['assign']({}, this['view'])),
            bg;
        }
    }),
    aJU['prototype'] = Object['assign'](Object['create'](aJw['prototype']), {
        'constructor': aJU
    }),
    aJV['prototype'] = Object['assign'](Object['create'](aJp['prototype']), {
        'constructor': aJV,
        'isDirectionalLight': !0x0,
        'copy': function(bf) {
            return aJp['prototype']['copy']['call'](this, bf),
            this['target'] = bf['target']['clone'](),
            this['shadow'] = bf['shadow']['clone'](),
            this;
        }
    }),
    aJY['prototype'] = Object['assign'](Object['create'](aJp['prototype']), {
        'constructor': aJY,
        'isAmbientLight': !0x0
    }),
    aK1['prototype'] = Object['assign'](Object['create'](aJp['prototype']), {
        'constructor': aK1,
        'isRectAreaLight': !0x0,
        'copy': function(bf) {
            return aJp['prototype']['copy']['call'](this, bf),
            this['width'] = bf['width'],
            this['height'] = bf['height'],
            this;
        },
        'toJSON': function(bf) {
            var bg = aJp['prototype']['toJSON']['call'](this, bf);
            return bg['object']['width'] = this['width'],
            bg['object']['height'] = this['height'],
            bg;
        }
    }),
    Object['assign'](aK6['prototype'], {
        'load': function(bf, bg, bh, bi) {
            var bF = this
              , bG = new aCv(bF['manager']);
            bG['setPath'](bF['path']),
            bG['load'](bf, function(bf) {
                bg(bF['parse'](JSON['parse'](bf)));
            }, bh, bi);
        },
        'parse': function(bf) {
            var bg = this['textures'];
            function bh(bf) {
                return void 0x0 === bg[bf] && console['warn']('THREE.MaterialLoader:\x20Undefined\x20texture', bf),
                bg[bf];
            }
            var bi = new axi[bf['type']]();
            if (void 0x0 !== bf['uuid'] && (bi['uuid'] = bf['uuid']),
            void 0x0 !== bf['name'] && (bi['name'] = bf['name']),
            void 0x0 !== bf['color'] && bi['color']['setHex'](bf['color']),
            void 0x0 !== bf['roughness'] && (bi['roughness'] = bf['roughness']),
            void 0x0 !== bf['metalness'] && (bi['metalness'] = bf['metalness']),
            void 0x0 !== bf['emissive'] && bi['emissive']['setHex'](bf['emissive']),
            void 0x0 !== bf['specular'] && bi['specular']['setHex'](bf['specular']),
            void 0x0 !== bf['shininess'] && (bi['shininess'] = bf['shininess']),
            void 0x0 !== bf['clearCoat'] && (bi['clearCoat'] = bf['clearCoat']),
            void 0x0 !== bf['clearCoatRoughness'] && (bi['clearCoatRoughness'] = bf['clearCoatRoughness']),
            void 0x0 !== bf['vertexColors'] && (bi['vertexColors'] = bf['vertexColors']),
            void 0x0 !== bf['fog'] && (bi['fog'] = bf['fog']),
            void 0x0 !== bf['flatShading'] && (bi['flatShading'] = bf['flatShading']),
            void 0x0 !== bf['blending'] && (bi['blending'] = bf['blending']),
            void 0x0 !== bf['combine'] && (bi['combine'] = bf['combine']),
            void 0x0 !== bf['side'] && (bi['side'] = bf['side']),
            void 0x0 !== bf['opacity'] && (bi['opacity'] = bf['opacity']),
            void 0x0 !== bf['transparent'] && (bi['transparent'] = bf['transparent']),
            void 0x0 !== bf['alphaTest'] && (bi['alphaTest'] = bf['alphaTest']),
            void 0x0 !== bf['depthTest'] && (bi['depthTest'] = bf['depthTest']),
            void 0x0 !== bf['depthWrite'] && (bi['depthWrite'] = bf['depthWrite']),
            void 0x0 !== bf['colorWrite'] && (bi['colorWrite'] = bf['colorWrite']),
            void 0x0 !== bf['wireframe'] && (bi['wireframe'] = bf['wireframe']),
            void 0x0 !== bf['wireframeLinewidth'] && (bi['wireframeLinewidth'] = bf['wireframeLinewidth']),
            void 0x0 !== bf['wireframeLinecap'] && (bi['wireframeLinecap'] = bf['wireframeLinecap']),
            void 0x0 !== bf['wireframeLinejoin'] && (bi['wireframeLinejoin'] = bf['wireframeLinejoin']),
            void 0x0 !== bf['rotation'] && (bi['rotation'] = bf['rotation']),
            0x1 !== bf['linewidth'] && (bi['linewidth'] = bf['linewidth']),
            void 0x0 !== bf['dashSize'] && (bi['dashSize'] = bf['dashSize']),
            void 0x0 !== bf['gapSize'] && (bi['gapSize'] = bf['gapSize']),
            void 0x0 !== bf['scale'] && (bi['scale'] = bf['scale']),
            void 0x0 !== bf['polygonOffset'] && (bi['polygonOffset'] = bf['polygonOffset']),
            void 0x0 !== bf['polygonOffsetFactor'] && (bi['polygonOffsetFactor'] = bf['polygonOffsetFactor']),
            void 0x0 !== bf['polygonOffsetUnits'] && (bi['polygonOffsetUnits'] = bf['polygonOffsetUnits']),
            void 0x0 !== bf['skinning'] && (bi['skinning'] = bf['skinning']),
            void 0x0 !== bf['morphTargets'] && (bi['morphTargets'] = bf['morphTargets']),
            void 0x0 !== bf['dithering'] && (bi['dithering'] = bf['dithering']),
            void 0x0 !== bf['visible'] && (bi['visible'] = bf['visible']),
            void 0x0 !== bf['userData'] && (bi['userData'] = bf['userData']),
            void 0x0 !== bf['uniforms'])
                for (var bF in bf['uniforms']) {
                    var bG = bf['uniforms'][bF];
                    switch (bi['uniforms'][bF] = {},
                    bG['type']) {
                    case 't':
                        bi['uniforms'][bF]['value'] = bh(bG['value']);
                        break;
                    case 'c':
                        bi['uniforms'][bF]['value'] = new w7()['setHex'](bG['value']);
                        break;
                    case 'v2':
                        bi['uniforms'][bF]['value'] = new eC()['fromArray'](bG['value']);
                        break;
                    case 'v3':
                        bi['uniforms'][bF]['value'] = new eK()['fromArray'](bG['value']);
                        break;
                    case 'v4':
                        bi['uniforms'][bF]['value'] = new m7()['fromArray'](bG['value']);
                        break;
                    case 'm3':
                        bi['uniforms'][bF]['value'] = new eO()['fromArray'](bG['value']);
                    case 'm4':
                        bi['uniforms'][bF]['value'] = new mR()['fromArray'](bG['value']);
                        break;
                    default:
                        bi['uniforms'][bF]['value'] = bG['value'];
                    }
                }
            if (void 0x0 !== bf['defines'] && (bi['defines'] = bf['defines']),
            void 0x0 !== bf['vertexShader'] && (bi['vertexShader'] = bf['vertexShader']),
            void 0x0 !== bf['fragmentShader'] && (bi['fragmentShader'] = bf['fragmentShader']),
            void 0x0 !== bf['extensions'])
                for (var bH in bf['extensions'])
                    bi['extensions'][bH] = bf['extensions'][bH];
            if (void 0x0 !== bf['shading'] && (bi['flatShading'] = 0x1 === bf['shading']),
            void 0x0 !== bf['size'] && (bi['size'] = bf['size']),
            void 0x0 !== bf['sizeAttenuation'] && (bi['sizeAttenuation'] = bf['sizeAttenuation']),
            void 0x0 !== bf['map'] && (bi['map'] = bh(bf['map'])),
            void 0x0 !== bf['matcap'] && (bi['matcap'] = bh(bf['matcap'])),
            void 0x0 !== bf['alphaMap'] && (bi['alphaMap'] = bh(bf['alphaMap']),
            bi['transparent'] = !0x0),
            void 0x0 !== bf['bumpMap'] && (bi['bumpMap'] = bh(bf['bumpMap'])),
            void 0x0 !== bf['bumpScale'] && (bi['bumpScale'] = bf['bumpScale']),
            void 0x0 !== bf['normalMap'] && (bi['normalMap'] = bh(bf['normalMap'])),
            void 0x0 !== bf['normalMapType'] && (bi['normalMapType'] = bf['normalMapType']),
            void 0x0 !== bf['normalScale']) {
                var bI = bf['normalScale'];
                !0x1 === Array['isArray'](bI) && (bI = [bI, bI]),
                bi['normalScale'] = new eC()['fromArray'](bI);
            }
            return void 0x0 !== bf['displacementMap'] && (bi['displacementMap'] = bh(bf['displacementMap'])),
            void 0x0 !== bf['displacementScale'] && (bi['displacementScale'] = bf['displacementScale']),
            void 0x0 !== bf['displacementBias'] && (bi['displacementBias'] = bf['displacementBias']),
            void 0x0 !== bf['roughnessMap'] && (bi['roughnessMap'] = bh(bf['roughnessMap'])),
            void 0x0 !== bf['metalnessMap'] && (bi['metalnessMap'] = bh(bf['metalnessMap'])),
            void 0x0 !== bf['emissiveMap'] && (bi['emissiveMap'] = bh(bf['emissiveMap'])),
            void 0x0 !== bf['emissiveIntensity'] && (bi['emissiveIntensity'] = bf['emissiveIntensity']),
            void 0x0 !== bf['specularMap'] && (bi['specularMap'] = bh(bf['specularMap'])),
            void 0x0 !== bf['envMap'] && (bi['envMap'] = bh(bf['envMap'])),
            void 0x0 !== bf['envMapIntensity'] && (bi['envMapIntensity'] = bf['envMapIntensity']),
            void 0x0 !== bf['reflectivity'] && (bi['reflectivity'] = bf['reflectivity']),
            void 0x0 !== bf['lightMap'] && (bi['lightMap'] = bh(bf['lightMap'])),
            void 0x0 !== bf['lightMapIntensity'] && (bi['lightMapIntensity'] = bf['lightMapIntensity']),
            void 0x0 !== bf['aoMap'] && (bi['aoMap'] = bh(bf['aoMap'])),
            void 0x0 !== bf['aoMapIntensity'] && (bi['aoMapIntensity'] = bf['aoMapIntensity']),
            void 0x0 !== bf['gradientMap'] && (bi['gradientMap'] = bh(bf['gradientMap'])),
            bi;
        },
        'setPath': function(bf) {
            return this['path'] = bf,
            this;
        },
        'setTextures': function(bf) {
            return this['textures'] = bf,
            this;
        }
    });
    var aMX = {
        'decodeText': function(bf) {
            if ('undefined' != typeof TextDecoder)
                return new TextDecoder()['decode'](bf);
            for (var bg = '', bh = 0x0, bi = bf['length']; bh < bi; bh++)
                bg += String['fromCharCode'](bf[bh]);
            try {
                return decodeURIComponent(escape(bg));
            } catch (aN2) {
                return bg;
            }
        },
        'extractUrlBase': function(bf) {
            var bg = bf['lastIndexOf']('/');
            return -0x1 === bg ? './' : bf['substr'](0x0, bg + 0x1);
        }
    };
    function aN5() {
        Gf['call'](this),
        this['type'] = 'InstancedBufferGeometry',
        this['maxInstancedCount'] = void 0x0;
    }
    function aN6(bf, bg, bh, bi) {
        'number' == typeof bh && (bi = bh,
        bh = !0x1,
        console['error']('THREE.InstancedBufferAttribute:\x20The\x20constructor\x20now\x20expects\x20normalized\x20as\x20the\x20third\x20argument.')),
        AI['call'](this, bf, bg, bh),
        this['meshPerAttribute'] = bi || 0x1;
    }
    function aNb(bf) {
        this['manager'] = void 0x0 !== bf ? bf : aCt;
    }
    aN5['prototype'] = Object['assign'](Object['create'](Gf['prototype']), {
        'constructor': aN5,
        'isInstancedBufferGeometry': !0x0,
        'copy': function(bf) {
            return Gf['prototype']['copy']['call'](this, bf),
            this['maxInstancedCount'] = bf['maxInstancedCount'],
            this;
        },
        'clone': function() {
            return new this['constructor']()['copy'](this);
        },
        'toJSON': function() {
            var bf = Gf['prototype']['toJSON']['call'](this);
            return bf['maxInstancedCount'] = this['maxInstancedCount'],
            bf['isInstancedBufferGeometry'] = !0x0,
            bf;
        }
    }),
    aN6['prototype'] = Object['assign'](Object['create'](AI['prototype']), {
        'constructor': aN6,
        'isInstancedBufferAttribute': !0x0,
        'copy': function(bf) {
            return AI['prototype']['copy']['call'](this, bf),
            this['meshPerAttribute'] = bf['meshPerAttribute'],
            this;
        },
        'toJSON': function() {
            var bf = AI['prototype']['toJSON']['call'](this);
            return bf['meshPerAttribute'] = this['meshPerAttribute'],
            bf['isInstancedBufferAttribute'] = !0x0,
            bf;
        }
    }),
    Object['assign'](aNb['prototype'], {
        'load': function(bf, bg, bh, bi) {
            var bF = this
              , bG = new aCv(bF['manager']);
            bG['setPath'](bF['path']),
            bG['load'](bf, function(bf) {
                bg(bF['parse'](JSON['parse'](bf)));
            }, bh, bi);
        },
        'parse': function(bf) {
            var bg = bf['isInstancedBufferGeometry'] ? new aN5() : new Gf()
              , bh = bf['data']['index'];
            if (void 0x0 !== bh) {
                var bi = new aNI[bh['type']](bh['array']);
                bg['setIndex'](new AI(bi,0x1));
            }
            var bF = bf['data']['attributes'];
            for (var bG in bF) {
                var bH = bF[bG]
                  , bI = (bi = new aNI[bH['type']](bH['array']),
                new (bH['isInstancedBufferAttribute'] ? aN6 : AI)(bi,bH['itemSize'],bH['normalized']));
                void 0x0 !== bH['name'] && (bI['name'] = bH['name']),
                bg['addAttribute'](bG, bI);
            }
            var bJ = bf['data']['morphAttributes'];
            if (bJ)
                for (var bG in bJ) {
                    for (var bK = bJ[bG], bL = [], bM = 0x0, bN = bK['length']; bM < bN; bM++) {
                        bH = bK[bM],
                        bI = new AI(bi = new aNI[bH['type']](bH['array']),bH['itemSize'],bH['normalized']);
                        void 0x0 !== bH['name'] && (bI['name'] = bH['name']),
                        bL['push'](bI);
                    }
                    bg['morphAttributes'][bG] = bL;
                }
            var bO = bf['data']['groups'] || bf['data']['drawcalls'] || bf['data']['offsets'];
            if (void 0x0 !== bO) {
                bM = 0x0;
                for (var bP = bO['length']; bM !== bP; ++bM) {
                    var bQ = bO[bM];
                    bg['addGroup'](bQ['start'], bQ['count'], bQ['materialIndex']);
                }
            }
            var bR = bf['data']['boundingSphere'];
            if (void 0x0 !== bR) {
                var bS = new eK();
                void 0x0 !== bR['center'] && bS['fromArray'](bR['center']),
                bg['boundingSphere'] = new mE(bS,bR['radius']);
            }
            return bf['name'] && (bg['name'] = bf['name']),
            bf['userData'] && (bg['userData'] = bf['userData']),
            bg;
        },
        'setPath': function(bf) {
            return this['path'] = bf,
            this;
        }
    });
    var aNI = {
        'Int8Array': Int8Array,
        'Uint8Array': Uint8Array,
        'Uint8ClampedArray': 'undefined' != typeof Uint8ClampedArray ? Uint8ClampedArray : Uint8Array,
        'Int16Array': Int16Array,
        'Uint16Array': Uint16Array,
        'Int32Array': Int32Array,
        'Uint32Array': Uint32Array,
        'Float32Array': Float32Array,
        'Float64Array': Float64Array
    };
    function aNJ(bf) {
        this['manager'] = void 0x0 !== bf ? bf : aCt,
        this['resourcePath'] = '';
    }
    Object['assign'](aNJ['prototype'], {
        'crossOrigin': 'anonymous',
        'load': function(bf, bg, bh, bi) {
            var bF = this
              , bG = void 0x0 === this['path'] ? aMX['extractUrlBase'](bf) : this['path'];
            this['resourcePath'] = this['resourcePath'] || bG;
            var bH = new aCv(bF['manager']);
            bH['setPath'](this['path']),
            bH['load'](bf, function(bh) {
                var bG = null;
                try {
                    bG = JSON['parse'](bh);
                } catch (aNU) {
                    return void 0x0 !== bi && bi(aNU),
                    void console['error']('THREE:ObjectLoader:\x20Can\x27t\x20parse\x20' + bf + '.', aNU['message']);
                }
                var bH = bG['metadata'];
                void 0x0 !== bH && void 0x0 !== bH['type'] && 'geometry' !== bH['type']['toLowerCase']() ? bF['parse'](bG, bg) : console['error']('THREE.ObjectLoader:\x20Can\x27t\x20load\x20' + bf);
            }, bh, bi);
        },
        'setPath': function(bf) {
            return this['path'] = bf,
            this;
        },
        'setResourcePath': function(bf) {
            return this['resourcePath'] = bf,
            this;
        },
        'setCrossOrigin': function(bf) {
            return this['crossOrigin'] = bf,
            this;
        },
        'parse': function(bf, bg) {
            var bh = this['parseShape'](bf['shapes'])
              , bi = this['parseGeometries'](bf['geometries'], bh)
              , bF = this['parseImages'](bf['images'], function() {
                void 0x0 !== bg && bg(bI);
            })
              , bG = this['parseTextures'](bf['textures'], bF)
              , bH = this['parseMaterials'](bf['materials'], bG)
              , bI = this['parseObject'](bf['object'], bi, bH);
            return bf['animations'] && (bI['animations'] = this['parseAnimations'](bf['animations'])),
            void 0x0 !== bf['images'] && 0x0 !== bf['images']['length'] || void 0x0 !== bg && bg(bI),
            bI;
        },
        'parseShape': function(bf) {
            var bg = {};
            if (void 0x0 !== bf)
                for (var bh = 0x0, bi = bf['length']; bh < bi; bh++) {
                    var bF = new aJn()['fromJSON'](bf[bh]);
                    bg[bF['uuid']] = bF;
                }
            return bg;
        },
        'parseGeometries': function(bf, bg) {
            var bh = {};
            if (void 0x0 !== bf)
                for (var bi = new aNb(), bF = 0x0, bG = bf['length']; bF < bG; bF++) {
                    var bH, bI = bf[bF];
                    switch (bI['type']) {
                    case 'PlaneGeometry':
                    case 'PlaneBufferGeometry':
                        bH = new awO[bI['type']](bI['width'],bI['height'],bI['widthSegments'],bI['heightSegments']);
                        break;
                    case 'BoxGeometry':
                    case 'BoxBufferGeometry':
                    case 'CubeGeometry':
                        bH = new awO[bI['type']](bI['width'],bI['height'],bI['depth'],bI['widthSegments'],bI['heightSegments'],bI['depthSegments']);
                        break;
                    case 'CircleGeometry':
                    case 'CircleBufferGeometry':
                        bH = new awO[bI['type']](bI['radius'],bI['segments'],bI['thetaStart'],bI['thetaLength']);
                        break;
                    case 'CylinderGeometry':
                    case 'CylinderBufferGeometry':
                        bH = new awO[bI['type']](bI['radiusTop'],bI['radiusBottom'],bI['height'],bI['radialSegments'],bI['heightSegments'],bI['openEnded'],bI['thetaStart'],bI['thetaLength']);
                        break;
                    case 'ConeGeometry':
                    case 'ConeBufferGeometry':
                        bH = new awO[bI['type']](bI['radius'],bI['height'],bI['radialSegments'],bI['heightSegments'],bI['openEnded'],bI['thetaStart'],bI['thetaLength']);
                        break;
                    case 'SphereGeometry':
                    case 'SphereBufferGeometry':
                        bH = new awO[bI['type']](bI['radius'],bI['widthSegments'],bI['heightSegments'],bI['phiStart'],bI['phiLength'],bI['thetaStart'],bI['thetaLength']);
                        break;
                    case 'DodecahedronGeometry':
                    case 'DodecahedronBufferGeometry':
                    case 'IcosahedronGeometry':
                    case 'IcosahedronBufferGeometry':
                    case 'OctahedronGeometry':
                    case 'OctahedronBufferGeometry':
                    case 'TetrahedronGeometry':
                    case 'TetrahedronBufferGeometry':
                        bH = new awO[bI['type']](bI['radius'],bI['detail']);
                        break;
                    case 'RingGeometry':
                    case 'RingBufferGeometry':
                        bH = new awO[bI['type']](bI['innerRadius'],bI['outerRadius'],bI['thetaSegments'],bI['phiSegments'],bI['thetaStart'],bI['thetaLength']);
                        break;
                    case 'TorusGeometry':
                    case 'TorusBufferGeometry':
                        bH = new awO[bI['type']](bI['radius'],bI['tube'],bI['radialSegments'],bI['tubularSegments'],bI['arc']);
                        break;
                    case 'TorusKnotGeometry':
                    case 'TorusKnotBufferGeometry':
                        bH = new awO[bI['type']](bI['radius'],bI['tube'],bI['tubularSegments'],bI['radialSegments'],bI['p'],bI['q']);
                        break;
                    case 'TubeGeometry':
                    case 'TubeBufferGeometry':
                        bH = new awO[bI['type']](new aJj[bI['path']['type']]()['fromJSON'](bI['path']),bI['tubularSegments'],bI['radius'],bI['radialSegments'],bI['closed']);
                        break;
                    case 'LatheGeometry':
                    case 'LatheBufferGeometry':
                        bH = new awO[bI['type']](bI['points'],bI['segments'],bI['phiStart'],bI['phiLength']);
                        break;
                    case 'PolyhedronGeometry':
                    case 'PolyhedronBufferGeometry':
                        bH = new awO[bI['type']](bI['vertices'],bI['indices'],bI['radius'],bI['details']);
                        break;
                    case 'ShapeGeometry':
                    case 'ShapeBufferGeometry':
                        for (var bJ = [], bK = 0x0, bL = bI['shapes']['length']; bK < bL; bK++) {
                            var bM = bg[bI['shapes'][bK]];
                            bJ['push'](bM);
                        }
                        bH = new awO[bI['type']](bJ,bI['curveSegments']);
                        break;
                    case 'ExtrudeGeometry':
                    case 'ExtrudeBufferGeometry':
                        for (bJ = [],
                        bK = 0x0,
                        bL = bI['shapes']['length']; bK < bL; bK++) {
                            bM = bg[bI['shapes'][bK]];
                            bJ['push'](bM);
                        }
                        var bN = bI['options']['extrudePath'];
                        void 0x0 !== bN && (bI['options']['extrudePath'] = new aJj[bN['type']]()['fromJSON'](bN)),
                        bH = new awO[bI['type']](bJ,bI['options']);
                        break;
                    case 'BufferGeometry':
                    case 'InstancedBufferGeometry':
                        bH = bi['parse'](bI);
                        break;
                    case 'Geometry':
                        if ('THREE'in window && 'LegacyJSONLoader'in THREE)
                            bH = new THREE['LegacyJSONLoader']()['parse'](bI, this['resourcePath'])['geometry'];
                        else
                            console['error']('THREE.ObjectLoader:\x20You\x20have\x20to\x20import\x20LegacyJSONLoader\x20in\x20order\x20load\x20geometry\x20data\x20of\x20type\x20\x22Geometry\x22.');
                        break;
                    default:
                        console['warn']('THREE.ObjectLoader:\x20Unsupported\x20geometry\x20type\x20\x22' + bI['type'] + '\x22');
                        continue;
                    }
                    bH['uuid'] = bI['uuid'],
                    void 0x0 !== bI['name'] && (bH['name'] = bI['name']),
                    !0x0 === bH['isBufferGeometry'] && void 0x0 !== bI['userData'] && (bH['userData'] = bI['userData']),
                    bh[bI['uuid']] = bH;
                }
            return bh;
        },
        'parseMaterials': function(bf, bg) {
            var bh = {}
              , bi = {};
            if (void 0x0 !== bf) {
                var bF = new aK6();
                bF['setTextures'](bg);
                for (var bG = 0x0, bH = bf['length']; bG < bH; bG++) {
                    var bI = bf[bG];
                    if ('MultiMaterial' === bI['type']) {
                        for (var bJ = [], bK = 0x0; bK < bI['materials']['length']; bK++) {
                            var bL = bI['materials'][bK];
                            void 0x0 === bh[bL['uuid']] && (bh[bL['uuid']] = bF['parse'](bL)),
                            bJ['push'](bh[bL['uuid']]);
                        }
                        bi[bI['uuid']] = bJ;
                    } else
                        void 0x0 === bh[bI['uuid']] && (bh[bI['uuid']] = bF['parse'](bI)),
                        bi[bI['uuid']] = bh[bI['uuid']];
                }
            }
            return bi;
        },
        'parseAnimations': function(bf) {
            for (var bg = [], bh = 0x0; bh < bf['length']; bh++) {
                var bi = bf[bh]
                  , bF = ayK['parse'](bi);
                void 0x0 !== bi['uuid'] && (bF['uuid'] = bi['uuid']),
                bg['push'](bF);
            }
            return bg;
        },
        'parseImages': function(bf, bg) {
            var bh = this
              , bi = {};
            function bF(bf) {
                return bh['manager']['itemStart'](bf),
                bG['load'](bf, function() {
                    bh['manager']['itemEnd'](bf);
                }, void 0x0, function() {
                    bh['manager']['itemError'](bf),
                    bh['manager']['itemEnd'](bf);
                });
            }
            if (void 0x0 !== bf && bf['length'] > 0x0) {
                var bG = new aCD(new aCf(bg));
                bG['setCrossOrigin'](this['crossOrigin']);
                for (var bH = 0x0, bI = bf['length']; bH < bI; bH++) {
                    var bJ = bf[bH]
                      , bK = bJ['url'];
                    if (Array['isArray'](bK)) {
                        bi[bJ['uuid']] = [];
                        for (var bL = 0x0, bM = bK['length']; bL < bM; bL++) {
                            var bN = bK[bL]
                              , bO = /^(\/\/)|([a-z]+:(\/\/)?)/i['test'](bN) ? bN : bh['resourcePath'] + bN;
                            bi[bJ['uuid']]['push'](bF(bO));
                        }
                    } else {
                        bO = /^(\/\/)|([a-z]+:(\/\/)?)/i['test'](bJ['url']) ? bJ['url'] : bh['resourcePath'] + bJ['url'];
                        bi[bJ['uuid']] = bF(bO);
                    }
                }
            }
            return bi;
        },
        'parseTextures': function(bf, bg) {
            function bh(bf, bg) {
                return 'number' == typeof bf ? bf : (console['warn']('THREE.ObjectLoader.parseTexture:\x20Constant\x20should\x20be\x20in\x20numeric\x20form.', bf),
                bg[bf]);
            }
            var bi = {};
            if (void 0x0 !== bf)
                for (var bF = 0x0, bG = bf['length']; bF < bG; bF++) {
                    var bH, bI = bf[bF];
                    void 0x0 === bI['image'] && console['warn']('THREE.ObjectLoader:\x20No\x20\x22image\x22\x20specified\x20for', bI['uuid']),
                    void 0x0 === bg[bI['image']] && console['warn']('THREE.ObjectLoader:\x20Undefined\x20image', bI['image']),
                    (bH = Array['isArray'](bg[bI['image']]) ? new O3(bg[bI['image']]) : new lW(bg[bI['image']]))['needsUpdate'] = !0x0,
                    bH['uuid'] = bI['uuid'],
                    void 0x0 !== bI['name'] && (bH['name'] = bI['name']),
                    void 0x0 !== bI['mapping'] && (bH['mapping'] = bh(bI['mapping'], aPt)),
                    void 0x0 !== bI['offset'] && bH['offset']['fromArray'](bI['offset']),
                    void 0x0 !== bI['repeat'] && bH['repeat']['fromArray'](bI['repeat']),
                    void 0x0 !== bI['center'] && bH['center']['fromArray'](bI['center']),
                    void 0x0 !== bI['rotation'] && (bH['rotation'] = bI['rotation']),
                    void 0x0 !== bI['wrap'] && (bH['wrapS'] = bh(bI['wrap'][0x0], aPu),
                    bH['wrapT'] = bh(bI['wrap'][0x1], aPu)),
                    void 0x0 !== bI['format'] && (bH['format'] = bI['format']),
                    void 0x0 !== bI['type'] && (bH['type'] = bI['type']),
                    void 0x0 !== bI['encoding'] && (bH['encoding'] = bI['encoding']),
                    void 0x0 !== bI['minFilter'] && (bH['minFilter'] = bh(bI['minFilter'], aPv)),
                    void 0x0 !== bI['magFilter'] && (bH['magFilter'] = bh(bI['magFilter'], aPv)),
                    void 0x0 !== bI['anisotropy'] && (bH['anisotropy'] = bI['anisotropy']),
                    void 0x0 !== bI['flipY'] && (bH['flipY'] = bI['flipY']),
                    void 0x0 !== bI['premultiplyAlpha'] && (bH['premultiplyAlpha'] = bI['premultiplyAlpha']),
                    void 0x0 !== bI['unpackAlignment'] && (bH['unpackAlignment'] = bI['unpackAlignment']),
                    bi[bI['uuid']] = bH;
                }
            return bi;
        },
        'parseObject': function(bf, bg, bh) {
            var bi;
            function bF(bf) {
                return void 0x0 === bg[bf] && console['warn']('THREE.ObjectLoader:\x20Undefined\x20geometry', bf),
                bg[bf];
            }
            function bG(bf) {
                if (void 0x0 !== bf) {
                    if (Array['isArray'](bf)) {
                        for (var bg = [], bi = 0x0, bF = bf['length']; bi < bF; bi++) {
                            var bG = bf[bi];
                            void 0x0 === bh[bG] && console['warn']('THREE.ObjectLoader:\x20Undefined\x20material', bG),
                            bg['push'](bh[bG]);
                        }
                        return bg;
                    }
                    return void 0x0 === bh[bf] && console['warn']('THREE.ObjectLoader:\x20Undefined\x20material', bf),
                    bh[bf];
                }
            }
            switch (bf['type']) {
            case 'Scene':
                bi = new aea(),
                void 0x0 !== bf['background'] && Number['isInteger'](bf['background']) && (bi['background'] = new w7(bf['background'])),
                void 0x0 !== bf['fog'] && ('Fog' === bf['fog']['type'] ? bi['fog'] = new ae6(bf['fog']['color'],bf['fog']['near'],bf['fog']['far']) : 'FogExp2' === bf['fog']['type'] && (bi['fog'] = new ae3(bf['fog']['color'],bf['fog']['density'])));
                break;
            case 'PerspectiveCamera':
                bi = new a68(bf['fov'],bf['aspect'],bf['near'],bf['far']),
                void 0x0 !== bf['focus'] && (bi['focus'] = bf['focus']),
                void 0x0 !== bf['zoom'] && (bi['zoom'] = bf['zoom']),
                void 0x0 !== bf['filmGauge'] && (bi['filmGauge'] = bf['filmGauge']),
                void 0x0 !== bf['filmOffset'] && (bi['filmOffset'] = bf['filmOffset']),
                void 0x0 !== bf['view'] && (bi['view'] = Object['assign']({}, bf['view']));
                break;
            case 'OrthographicCamera':
                bi = new aJN(bf['left'],bf['right'],bf['top'],bf['bottom'],bf['near'],bf['far']),
                void 0x0 !== bf['zoom'] && (bi['zoom'] = bf['zoom']),
                void 0x0 !== bf['view'] && (bi['view'] = Object['assign']({}, bf['view']));
                break;
            case 'AmbientLight':
                bi = new aJY(bf['color'],bf['intensity']);
                break;
            case 'DirectionalLight':
                bi = new aJV(bf['color'],bf['intensity']);
                break;
            case 'PointLight':
                bi = new aJH(bf['color'],bf['intensity'],bf['distance'],bf['decay']);
                break;
            case 'RectAreaLight':
                bi = new aK1(bf['color'],bf['intensity'],bf['width'],bf['height']);
                break;
            case 'SpotLight':
                bi = new aJz(bf['color'],bf['intensity'],bf['distance'],bf['angle'],bf['penumbra'],bf['decay']);
                break;
            case 'HemisphereLight':
                bi = new aJs(bf['color'],bf['groundColor'],bf['intensity']);
                break;
            case 'SkinnedMesh':
                console['warn']('THREE.ObjectLoader.parseObject()\x20does\x20not\x20support\x20SkinnedMesh\x20yet.');
            case 'Mesh':
                var bH = bF(bf['geometry'])
                  , bI = bG(bf['material']);
                bi = bH['bones'] && bH['bones']['length'] > 0x0 ? new aep(bH,bI) : new KY(bH,bI),
                void 0x0 !== bf['drawMode'] && bi['setDrawMode'](bf['drawMode']);
                break;
            case 'LOD':
                bi = new aeo();
                break;
            case 'Line':
                bi = new aeA(bF(bf['geometry']),bG(bf['material']),bf['mode']);
                break;
            case 'LineLoop':
                bi = new aeH(bF(bf['geometry']),bG(bf['material']));
                break;
            case 'LineSegments':
                bi = new aeE(bF(bf['geometry']),bG(bf['material']));
                break;
            case 'PointCloud':
            case 'Points':
                bi = new aeM(bF(bf['geometry']),bG(bf['material']));
                break;
            case 'Sprite':
                bi = new ael(bG(bf['material']));
                break;
            case 'Group':
                bi = new a66();
                break;
            default:
                bi = new yT();
            }
            if (bi['uuid'] = bf['uuid'],
            void 0x0 !== bf['name'] && (bi['name'] = bf['name']),
            void 0x0 !== bf['matrix'] ? (bi['matrix']['fromArray'](bf['matrix']),
            void 0x0 !== bf['matrixAutoUpdate'] && (bi['matrixAutoUpdate'] = bf['matrixAutoUpdate']),
            bi['matrixAutoUpdate'] && bi['matrix']['decompose'](bi['position'], bi['quaternion'], bi['scale'])) : (void 0x0 !== bf['position'] && bi['position']['fromArray'](bf['position']),
            void 0x0 !== bf['rotation'] && bi['rotation']['fromArray'](bf['rotation']),
            void 0x0 !== bf['quaternion'] && bi['quaternion']['fromArray'](bf['quaternion']),
            void 0x0 !== bf['scale'] && bi['scale']['fromArray'](bf['scale'])),
            void 0x0 !== bf['castShadow'] && (bi['castShadow'] = bf['castShadow']),
            void 0x0 !== bf['receiveShadow'] && (bi['receiveShadow'] = bf['receiveShadow']),
            bf['shadow'] && (void 0x0 !== bf['shadow']['bias'] && (bi['shadow']['bias'] = bf['shadow']['bias']),
            void 0x0 !== bf['shadow']['radius'] && (bi['shadow']['radius'] = bf['shadow']['radius']),
            void 0x0 !== bf['shadow']['mapSize'] && bi['shadow']['mapSize']['fromArray'](bf['shadow']['mapSize']),
            void 0x0 !== bf['shadow']['camera'] && (bi['shadow']['camera'] = this['parseObject'](bf['shadow']['camera']))),
            void 0x0 !== bf['visible'] && (bi['visible'] = bf['visible']),
            void 0x0 !== bf['frustumCulled'] && (bi['frustumCulled'] = bf['frustumCulled']),
            void 0x0 !== bf['renderOrder'] && (bi['renderOrder'] = bf['renderOrder']),
            void 0x0 !== bf['userData'] && (bi['userData'] = bf['userData']),
            void 0x0 !== bf['layers'] && (bi['layers']['mask'] = bf['layers']),
            void 0x0 !== bf['children'])
                for (var bJ = bf['children'], bK = 0x0; bK < bJ['length']; bK++)
                    bi['add'](this['parseObject'](bJ[bK], bg, bh));
            if ('LOD' === bf['type'])
                for (var bL = bf['levels'], bM = 0x0; bM < bL['length']; bM++) {
                    var bN = bL[bM]
                      , bO = bi['getObjectByProperty']('uuid', bN['object']);
                    void 0x0 !== bO && bi['addLevel'](bO, bN['distance']);
                }
            return bi;
        }
    });
    var aPo, aPp, aPq, aPr, aPs, aPt = {
        'UVMapping': cE,
        'CubeReflectionMapping': cF,
        'CubeRefractionMapping': cG,
        'EquirectangularReflectionMapping': cH,
        'EquirectangularRefractionMapping': cI,
        'SphericalReflectionMapping': cJ,
        'CubeUVReflectionMapping': cK,
        'CubeUVRefractionMapping': cL
    }, aPu = {
        'RepeatWrapping': cM,
        'ClampToEdgeWrapping': cN,
        'MirroredRepeatWrapping': cO
    }, aPv = {
        'NearestFilter': cP,
        'NearestMipMapNearestFilter': cQ,
        'NearestMipMapLinearFilter': cR,
        'LinearFilter': cS,
        'LinearMipMapNearestFilter': cT,
        'LinearMipMapLinearFilter': cU
    };
    function aPw(bf) {
        'undefined' == typeof createImageBitmap && console['warn']('THREE.ImageBitmapLoader:\x20createImageBitmap()\x20not\x20supported.'),
        'undefined' == typeof fetch && console['warn']('THREE.ImageBitmapLoader:\x20fetch()\x20not\x20supported.'),
        this['manager'] = void 0x0 !== bf ? bf : aCt,
        this['options'] = void 0x0;
    }
    function aPy() {
        this['type'] = 'ShapePath',
        this['color'] = new w7(),
        this['subPaths'] = [],
        this['currentPath'] = null;
    }
    function aPz(bf) {
        this['type'] = 'Font',
        this['data'] = bf;
    }
    function aPB(bf, bg, bh, bi, bF) {
        var bG = bF['glyphs'][bf] || bF['glyphs']['?'];
        if (bG) {
            var bH, bI, bJ, bK, bL, bM, bN, bO, bP = new aPy();
            if (bG['o'])
                for (var bQ = bG['_cachedOutline'] || (bG['_cachedOutline'] = bG['o']['split']('\x20')), bR = 0x0, bS = bQ['length']; bR < bS; ) {
                    switch (bQ[bR++]) {
                    case 'm':
                        bH = bQ[bR++] * bg + bh,
                        bI = bQ[bR++] * bg + bi,
                        bP['moveTo'](bH, bI);
                        break;
                    case 'l':
                        bH = bQ[bR++] * bg + bh,
                        bI = bQ[bR++] * bg + bi,
                        bP['lineTo'](bH, bI);
                        break;
                    case 'q':
                        bJ = bQ[bR++] * bg + bh,
                        bK = bQ[bR++] * bg + bi,
                        bL = bQ[bR++] * bg + bh,
                        bM = bQ[bR++] * bg + bi,
                        bP['quadraticCurveTo'](bL, bM, bJ, bK);
                        break;
                    case 'b':
                        bJ = bQ[bR++] * bg + bh,
                        bK = bQ[bR++] * bg + bi,
                        bL = bQ[bR++] * bg + bh,
                        bM = bQ[bR++] * bg + bi,
                        bN = bQ[bR++] * bg + bh,
                        bO = bQ[bR++] * bg + bi,
                        bP['bezierCurveTo'](bL, bM, bN, bO, bJ, bK);
                    }
                }
            return {
                'offsetX': bG['ha'] * bg,
                'path': bP
            };
        }
    }
    function aPU(bf) {
        this['manager'] = void 0x0 !== bf ? bf : aCt;
    }
    function aPW() {}
    aPw['prototype'] = {
        'constructor': aPw,
        'setOptions': function(bf) {
            return this['options'] = bf,
            this;
        },
        'load': function(bf, bg, bh, bi) {
            void 0x0 === bf && (bf = ''),
            void 0x0 !== this['path'] && (bf = this['path'] + bf),
            bf = this['manager']['resolveURL'](bf);
            var bF = this
              , bG = aCa['get'](bf);
            if (void 0x0 !== bG)
                return bF['manager']['itemStart'](bf),
                setTimeout(function() {
                    bg && bg(bG),
                    bF['manager']['itemEnd'](bf);
                }, 0x0),
                bG;
            fetch(bf)['then'](function(bf) {
                return bf['blob']();
            })['then'](function(bf) {
                return void 0x0 === bF['options'] ? createImageBitmap(bf) : createImageBitmap(bf, bF['options']);
            })['then'](function(bh) {
                aCa['add'](bf, bh),
                bg && bg(bh),
                bF['manager']['itemEnd'](bf);
            })['catch'](function(bg) {
                bi && bi(bg),
                bF['manager']['itemError'](bf),
                bF['manager']['itemEnd'](bf);
            }),
            bF['manager']['itemStart'](bf);
        },
        'setCrossOrigin': function() {
            return this;
        },
        'setPath': function(bf) {
            return this['path'] = bf,
            this;
        }
    },
    Object['assign'](aPy['prototype'], {
        'moveTo': function(bf, bg) {
            this['currentPath'] = new aJl(),
            this['subPaths']['push'](this['currentPath']),
            this['currentPath']['moveTo'](bf, bg);
        },
        'lineTo': function(bf, bg) {
            this['currentPath']['lineTo'](bf, bg);
        },
        'quadraticCurveTo': function(bf, bg, bh, bi) {
            this['currentPath']['quadraticCurveTo'](bf, bg, bh, bi);
        },
        'bezierCurveTo': function(bf, bg, bh, bi, bF, bG) {
            this['currentPath']['bezierCurveTo'](bf, bg, bh, bi, bF, bG);
        },
        'splineThru': function(bf) {
            this['currentPath']['splineThru'](bf);
        },
        'toShapes': function(bf, bg) {
            function bh(bf) {
                for (var bg = [], bh = 0x0, bi = bf['length']; bh < bi; bh++) {
                    var bF = bf[bh]
                      , bG = new aJn();
                    bG['curves'] = bF['curves'],
                    bg['push'](bG);
                }
                return bg;
            }
            function bi(bf, bg) {
                for (var bh = bg['length'], bi = !0x1, bF = bh - 0x1, bG = 0x0; bG < bh; bF = bG++) {
                    var bH = bg[bF]
                      , bI = bg[bG]
                      , bJ = bI['x'] - bH['x']
                      , bK = bI['y'] - bH['y'];
                    if (Math['abs'](bK) > Number['EPSILON']) {
                        if (bK < 0x0 && (bH = bg[bG],
                        bJ = -bJ,
                        bI = bg[bF],
                        bK = -bK),
                        bf['y'] < bH['y'] || bf['y'] > bI['y'])
                            continue;
                        if (bf['y'] === bH['y']) {
                            if (bf['x'] === bH['x'])
                                return !0x0;
                        } else {
                            var bL = bK * (bf['x'] - bH['x']) - bJ * (bf['y'] - bH['y']);
                            if (0x0 === bL)
                                return !0x0;
                            if (bL < 0x0)
                                continue;
                            bi = !bi;
                        }
                    } else {
                        if (bf['y'] !== bH['y'])
                            continue;
                        if (bI['x'] <= bf['x'] && bf['x'] <= bH['x'] || bH['x'] <= bf['x'] && bf['x'] <= bI['x'])
                            return !0x0;
                    }
                }
                return bi;
            }
            var bF = apU['isClockWise']
              , bG = this['subPaths'];
            if (0x0 === bG['length'])
                return [];
            if (!0x0 === bg)
                return bh(bG);
            var bH, bI, bJ, bK = [];
            if (0x1 === bG['length'])
                return bI = bG[0x0],
                (bJ = new aJn())['curves'] = bI['curves'],
                bK['push'](bJ),
                bK;
            var bL = !bF(bG[0x0]['getPoints']());
            bL = bf ? !bL : bL;
            var bM, bN, bO = [], bP = [], bQ = [], bR = 0x0;
            bP[bR] = void 0x0,
            bQ[bR] = [];
            for (var bS = 0x0, bT = bG['length']; bS < bT; bS++)
                bH = bF(bM = (bI = bG[bS])['getPoints']()),
                (bH = bf ? !bH : bH) ? (!bL && bP[bR] && bR++,
                bP[bR] = {
                    's': new aJn(),
                    'p': bM
                },
                bP[bR]['s']['curves'] = bI['curves'],
                bL && bR++,
                bQ[bR] = []) : bQ[bR]['push']({
                    'h': bI,
                    'p': bM[0x0]
                });
            if (!bP[0x0])
                return bh(bG);
            if (bP['length'] > 0x1) {
                for (var bU = !0x1, bV = [], bW = 0x0, bX = bP['length']; bW < bX; bW++)
                    bO[bW] = [];
                for (bW = 0x0,
                bX = bP['length']; bW < bX; bW++)
                    for (var bY = bQ[bW], bZ = 0x0; bZ < bY['length']; bZ++) {
                        for (var c0 = bY[bZ], c1 = !0x0, c2 = 0x0; c2 < bP['length']; c2++)
                            bi(c0['p'], bP[c2]['p']) && (bW !== c2 && bV['push']({
                                'froms': bW,
                                'tos': c2,
                                'hole': bZ
                            }),
                            c1 ? (c1 = !0x1,
                            bO[c2]['push'](c0)) : bU = !0x0);
                        c1 && bO[bW]['push'](c0);
                    }
                bV['length'] > 0x0 && (bU || (bQ = bO));
            }
            bS = 0x0;
            for (var c3 = bP['length']; bS < c3; bS++) {
                bJ = bP[bS]['s'],
                bK['push'](bJ);
                for (var c4 = 0x0, c5 = (bN = bQ[bS])['length']; c4 < c5; c4++)
                    bJ['holes']['push'](bN[c4]['h']);
            }
            return bK;
        }
    }),
    Object['assign'](aPz['prototype'], {
        'isFont': !0x0,
        'generateShapes': function(bf, bg) {
            void 0x0 === bg && (bg = 0x64);
            for (var bh = [], bi = function(bf, bg, bh) {
                for (var bi = Array['from'] ? Array['from'](bf) : String(bf)['split'](''), bF = bg / bh['resolution'], bG = (bh['boundingBox']['yMax'] - bh['boundingBox']['yMin'] + bh['underlineThickness']) * bF, bH = [], bI = 0x0, bJ = 0x0, bK = 0x0; bK < bi['length']; bK++) {
                    var bL = bi[bK];
                    if ('\x0a' === bL)
                        bI = 0x0,
                        bJ -= bG;
                    else {
                        var bM = aPB(bL, bF, bI, bJ, bh);
                        bI += bM['offsetX'],
                        bH['push'](bM['path']);
                    }
                }
                return bH;
            }(bf, bg, this['data']), bF = 0x0, bG = bi['length']; bF < bG; bF++)
                Array['prototype']['push']['apply'](bh, bi[bF]['toShapes']());
            return bh;
        }
    }),
    Object['assign'](aPU['prototype'], {
        'load': function(bf, bg, bh, bi) {
            var bF = this
              , bG = new aCv(this['manager']);
            bG['setPath'](this['path']),
            bG['load'](bf, function(bf) {
                var bh;
                try {
                    bh = JSON['parse'](bf);
                } catch (aRA) {
                    console['warn']('THREE.FontLoader:\x20typeface.js\x20support\x20is\x20being\x20deprecated.\x20Use\x20typeface.json\x20instead.'),
                    bh = JSON['parse'](bf['substring'](0x41, bf['length'] - 0x2));
                }
                var bi = bF['parse'](bh);
                bg && bg(bi);
            }, bh, bi);
        },
        'parse': function(bf) {
            return new aPz(bf);
        },
        'setPath': function(bf) {
            return this['path'] = bf,
            this;
        }
    }),
    aPW['Handlers'] = {
        'handlers': [],
        'add': function(bf, bg) {
            this['handlers']['push'](bf, bg);
        },
        'get': function(bf) {
            for (var bg = this['handlers'], bh = 0x0, bi = bg['length']; bh < bi; bh += 0x2) {
                var bF = bg[bh]
                  , bG = bg[bh + 0x1];
                if (bF['test'](bf))
                    return bG;
            }
            return null;
        }
    },
    Object['assign'](aPW['prototype'], {
        'crossOrigin': 'anonymous',
        'onLoadStart': function() {},
        'onLoadProgress': function() {},
        'onLoadComplete': function() {},
        'initMaterials': function(bf, bg, bh) {
            for (var bi = [], bF = 0x0; bF < bf['length']; ++bF)
                bi[bF] = this['createMaterial'](bf[bF], bg, bh);
            return bi;
        },
        'createMaterial': (aPo = {
            'NoBlending': c1,
            'NormalBlending': c2,
            'AdditiveBlending': c3,
            'SubtractiveBlending': c4,
            'MultiplyBlending': c5,
            'CustomBlending': c6
        },
        aPp = new w7(),
        aPq = new aCH(),
        aPr = new aK6(),
        function(bf, bg, bh) {
            var bi = {};
            function bF(bf, bF, bG, bH, bI) {
                var bJ, bK = bg + bf, bL = aPW['Handlers']['get'](bK);
                null !== bL ? bJ = bL['load'](bK) : (aPq['setCrossOrigin'](bh),
                bJ = aPq['load'](bK)),
                void 0x0 !== bF && (bJ['repeat']['fromArray'](bF),
                0x1 !== bF[0x0] && (bJ['wrapS'] = cM),
                0x1 !== bF[0x1] && (bJ['wrapT'] = cM)),
                void 0x0 !== bG && bJ['offset']['fromArray'](bG),
                void 0x0 !== bH && ('repeat' === bH[0x0] && (bJ['wrapS'] = cM),
                'mirror' === bH[0x0] && (bJ['wrapS'] = cO),
                'repeat' === bH[0x1] && (bJ['wrapT'] = cM),
                'mirror' === bH[0x1] && (bJ['wrapT'] = cO)),
                void 0x0 !== bI && (bJ['anisotropy'] = bI);
                var bM = e2['generateUUID']();
                return bi[bM] = bJ,
                bM;
            }
            var bG = {
                'uuid': e2['generateUUID'](),
                'type': 'MeshLambertMaterial'
            };
            for (var bH in bf) {
                var bI = bf[bH];
                switch (bH) {
                case 'DbgColor':
                case 'DbgIndex':
                case 'opticalDensity':
                case 'illumination':
                    break;
                case 'DbgName':
                    bG['name'] = bI;
                    break;
                case 'blending':
                    bG['blending'] = aPo[bI];
                    break;
                case 'colorAmbient':
                case 'mapAmbient':
                    console['warn']('THREE.Loader.createMaterial:', bH, 'is\x20no\x20longer\x20supported.');
                    break;
                case 'colorDiffuse':
                    bG['color'] = aPp['fromArray'](bI)['getHex']();
                    break;
                case 'colorSpecular':
                    bG['specular'] = aPp['fromArray'](bI)['getHex']();
                    break;
                case 'colorEmissive':
                    bG['emissive'] = aPp['fromArray'](bI)['getHex']();
                    break;
                case 'specularCoef':
                    bG['shininess'] = bI;
                    break;
                case 'shading':
                    'basic' === bI['toLowerCase']() && (bG['type'] = 'MeshBasicMaterial'),
                    'phong' === bI['toLowerCase']() && (bG['type'] = 'MeshPhongMaterial'),
                    'standard' === bI['toLowerCase']() && (bG['type'] = 'MeshStandardMaterial');
                    break;
                case 'mapDiffuse':
                    bG['map'] = bF(bI, bf['mapDiffuseRepeat'], bf['mapDiffuseOffset'], bf['mapDiffuseWrap'], bf['mapDiffuseAnisotropy']);
                    break;
                case 'mapDiffuseRepeat':
                case 'mapDiffuseOffset':
                case 'mapDiffuseWrap':
                case 'mapDiffuseAnisotropy':
                    break;
                case 'mapEmissive':
                    bG['emissiveMap'] = bF(bI, bf['mapEmissiveRepeat'], bf['mapEmissiveOffset'], bf['mapEmissiveWrap'], bf['mapEmissiveAnisotropy']);
                    break;
                case 'mapEmissiveRepeat':
                case 'mapEmissiveOffset':
                case 'mapEmissiveWrap':
                case 'mapEmissiveAnisotropy':
                    break;
                case 'mapLight':
                    bG['lightMap'] = bF(bI, bf['mapLightRepeat'], bf['mapLightOffset'], bf['mapLightWrap'], bf['mapLightAnisotropy']);
                    break;
                case 'mapLightRepeat':
                case 'mapLightOffset':
                case 'mapLightWrap':
                case 'mapLightAnisotropy':
                    break;
                case 'mapAO':
                    bG['aoMap'] = bF(bI, bf['mapAORepeat'], bf['mapAOOffset'], bf['mapAOWrap'], bf['mapAOAnisotropy']);
                    break;
                case 'mapAORepeat':
                case 'mapAOOffset':
                case 'mapAOWrap':
                case 'mapAOAnisotropy':
                    break;
                case 'mapBump':
                    bG['bumpMap'] = bF(bI, bf['mapBumpRepeat'], bf['mapBumpOffset'], bf['mapBumpWrap'], bf['mapBumpAnisotropy']);
                    break;
                case 'mapBumpScale':
                    bG['bumpScale'] = bI;
                    break;
                case 'mapBumpRepeat':
                case 'mapBumpOffset':
                case 'mapBumpWrap':
                case 'mapBumpAnisotropy':
                    break;
                case 'mapNormal':
                    bG['normalMap'] = bF(bI, bf['mapNormalRepeat'], bf['mapNormalOffset'], bf['mapNormalWrap'], bf['mapNormalAnisotropy']);
                    break;
                case 'mapNormalFactor':
                    bG['normalScale'] = bI;
                    break;
                case 'mapNormalRepeat':
                case 'mapNormalOffset':
                case 'mapNormalWrap':
                case 'mapNormalAnisotropy':
                    break;
                case 'mapSpecular':
                    bG['specularMap'] = bF(bI, bf['mapSpecularRepeat'], bf['mapSpecularOffset'], bf['mapSpecularWrap'], bf['mapSpecularAnisotropy']);
                    break;
                case 'mapSpecularRepeat':
                case 'mapSpecularOffset':
                case 'mapSpecularWrap':
                case 'mapSpecularAnisotropy':
                    break;
                case 'mapMetalness':
                    bG['metalnessMap'] = bF(bI, bf['mapMetalnessRepeat'], bf['mapMetalnessOffset'], bf['mapMetalnessWrap'], bf['mapMetalnessAnisotropy']);
                    break;
                case 'mapMetalnessRepeat':
                case 'mapMetalnessOffset':
                case 'mapMetalnessWrap':
                case 'mapMetalnessAnisotropy':
                    break;
                case 'mapRoughness':
                    bG['roughnessMap'] = bF(bI, bf['mapRoughnessRepeat'], bf['mapRoughnessOffset'], bf['mapRoughnessWrap'], bf['mapRoughnessAnisotropy']);
                    break;
                case 'mapRoughnessRepeat':
                case 'mapRoughnessOffset':
                case 'mapRoughnessWrap':
                case 'mapRoughnessAnisotropy':
                    break;
                case 'mapAlpha':
                    bG['alphaMap'] = bF(bI, bf['mapAlphaRepeat'], bf['mapAlphaOffset'], bf['mapAlphaWrap'], bf['mapAlphaAnisotropy']);
                    break;
                case 'mapAlphaRepeat':
                case 'mapAlphaOffset':
                case 'mapAlphaWrap':
                case 'mapAlphaAnisotropy':
                    break;
                case 'flipSided':
                    bG['side'] = bU;
                    break;
                case 'doubleSided':
                    bG['side'] = bV;
                    break;
                case 'transparency':
                    console['warn']('THREE.Loader.createMaterial:\x20transparency\x20has\x20been\x20renamed\x20to\x20opacity'),
                    bG['opacity'] = bI;
                    break;
                case 'depthTest':
                case 'depthWrite':
                case 'colorWrite':
                case 'opacity':
                case 'reflectivity':
                case 'transparent':
                case 'visible':
                case 'wireframe':
                    bG[bH] = bI;
                    break;
                case 'vertexColors':
                    !0x0 === bI && (bG['vertexColors'] = c0),
                    'face' === bI && (bG['vertexColors'] = bZ);
                    break;
                default:
                    console['error']('THREE.Loader.createMaterial:\x20Unsupported', bH, bI);
                }
            }
            return 'MeshBasicMaterial' === bG['type'] && delete bG['emissive'],
            'MeshPhongMaterial' !== bG['type'] && delete bG['specular'],
            bG['opacity'] < 0x1 && (bG['transparent'] = !0x0),
            aPr['setTextures'](bi),
            aPr['parse'](bG);
        }
        )
    });
    var aS8 = {
        'getContext': function() {
            return void 0x0 === aPs && (aPs = new (window['AudioContext'] || window['webkitAudioContext'])()),
            aPs;
        },
        'setContext': function(bf) {
            aPs = bf;
        }
    };
    function aSa(bf) {
        this['manager'] = void 0x0 !== bf ? bf : aCt;
    }
    function aSc() {
        this['coefficients'] = [];
        for (var bf = 0x0; bf < 0x9; bf++)
            this['coefficients']['push'](new eK());
    }
    function aSe(bf, bg) {
        aJp['call'](this, void 0x0, bg),
        this['sh'] = void 0x0 !== bf ? bf : new aSc();
    }
    function aSh(bf, bg, bh) {
        aSe['call'](this, void 0x0, bh);
        var bi = new w7()['set'](bf)
          , bF = new w7()['set'](bg)
          , bG = new eK(bi['r'],bi['g'],bi['b'])
          , bH = new eK(bF['r'],bF['g'],bF['b'])
          , bI = Math['sqrt'](Math['PI'])
          , bJ = bI * Math['sqrt'](0.75);
        this['sh']['coefficients'][0x0]['copy'](bG)['add'](bH)['multiplyScalar'](bI),
        this['sh']['coefficients'][0x1]['copy'](bG)['sub'](bH)['multiplyScalar'](bJ);
    }
    function aSr(bf, bg) {
        aSe['call'](this, void 0x0, bg);
        var bh = new w7()['set'](bf);
        this['sh']['coefficients'][0x0]['set'](bh['r'], bh['g'], bh['b'])['multiplyScalar'](0x2 * Math['sqrt'](Math['PI']));
    }
    function aSv() {
        this['type'] = 'StereoCamera',
        this['aspect'] = 0x1,
        this['eyeSep'] = 0.064,
        this['cameraL'] = new a68(),
        this['cameraL']['layers']['enable'](0x1),
        this['cameraL']['matrixAutoUpdate'] = !0x1,
        this['cameraR'] = new a68(),
        this['cameraR']['layers']['enable'](0x2),
        this['cameraR']['matrixAutoUpdate'] = !0x1;
    }
    Object['assign'](aSa['prototype'], {
        'load': function(bf, bg, bh, bi) {
            var bF = new aCv(this['manager']);
            bF['setResponseType']('arraybuffer'),
            bF['setPath'](this['path']),
            bF['load'](bf, function(bf) {
                var bh = bf['slice'](0x0);
                aS8['getContext']()['decodeAudioData'](bh, function(bf) {
                    bg(bf);
                });
            }, bh, bi);
        },
        'setPath': function(bf) {
            return this['path'] = bf,
            this;
        }
    }),
    Object['assign'](aSc['prototype'], {
        'isSphericalHarmonics3': !0x0,
        'set': function(bf) {
            for (var bg = 0x0; bg < 0x9; bg++)
                this['coefficients'][bg]['copy'](bf[bg]);
            return this;
        },
        'zero': function() {
            for (var bf = 0x0; bf < 0x9; bf++)
                this['coefficients'][bf]['set'](0x0, 0x0, 0x0);
            return this;
        },
        'getAt': function(bf, bg) {
            var bh = bf['x']
              , bi = bf['y']
              , bF = bf['z']
              , bG = this['coefficients'];
            return bg = 0.282095 * bG[0x0],
            bg += 0.488603 * bG[0x1] * bi,
            bg += 0.488603 * bG[0x2] * bF,
            bg += 0.488603 * bG[0x3] * bh,
            bg += 1.092548 * bG[0x4] * (bh * bi),
            bg += 1.092548 * bG[0x5] * (bi * bF),
            bg += 0.315392 * bG[0x6] * (0x3 * bF * bF - 0x1),
            bg += 1.092548 * bG[0x7] * (bh * bF),
            bg += 0.546274 * bG[0x8] * (bh * bh - bi * bi);
        },
        'getIrradianceAt': function(bf, bg) {
            var bh = bf['x']
              , bi = bf['y']
              , bF = bf['z']
              , bG = this['coefficients'];
            return bg = 0.886227 * bG[0x0],
            bg += 0x2 * bG[0x1] * 0.511664 * bi,
            bg += 0x2 * bG[0x2] * 0.511664 * bF,
            bg += 0x2 * bG[0x3] * 0.511664 * bh,
            bg += 0x2 * bG[0x4] * 0.429043 * bh * bi,
            bg += 0x2 * bG[0x5] * 0.429043 * bi * bF,
            bg += bG[0x6] * (0.743125 * bF * bF - 0.247708),
            bg += 0x2 * bG[0x7] * 0.429043 * bh * bF,
            bg += 0.429043 * bG[0x8] * (bh * bh - bi * bi);
        },
        'add': function(bf) {
            for (var bg = 0x0; bg < 0x9; bg++)
                this['coefficients'][bg]['add'](bf['coefficients'][bg]);
            return this;
        },
        'scale': function(bf) {
            for (var bg = 0x0; bg < 0x9; bg++)
                this['coefficients'][bg]['multiplyScalar'](bf);
            return this;
        },
        'lerp': function(bf, bg) {
            for (var bh = 0x0; bh < 0x9; bh++)
                this['coefficients'][bh]['lerp'](bf['coefficients'][bh], bg);
            return this;
        },
        'equals': function(bf) {
            for (var bg = 0x0; bg < 0x9; bg++)
                if (!this['coefficients'][bg]['equals'](bf['coefficients'][bg]))
                    return !0x1;
            return !0x0;
        },
        'copy': function(bf) {
            return this['set'](bf['coefficients']);
        },
        'clone': function() {
            return new this['constructor']()['copy'](this);
        },
        'fromArray': function(bf) {
            for (var bg = this['coefficients'], bh = 0x0; bh < 0x9; bh++)
                bg[bh]['fromArray'](bf, 0x3 * bh);
            return this;
        },
        'toArray': function() {
            for (var bf = [], bg = this['coefficients'], bh = 0x0; bh < 0x9; bh++)
                bg[bh]['toArray'](bf, 0x3 * bh);
            return bf;
        }
    }),
    Object['assign'](aSc, {
        'getBasisAt': function(bf, bg) {
            var bh = bf['x']
              , bi = bf['y']
              , bF = bf['z'];
            bg[0x0] = 0.282095,
            bg[0x1] = 0.488603 * bi,
            bg[0x2] = 0.488603 * bF,
            bg[0x3] = 0.488603 * bh,
            bg[0x4] = 1.092548 * bh * bi,
            bg[0x5] = 1.092548 * bi * bF,
            bg[0x6] = 0.315392 * (0x3 * bF * bF - 0x1),
            bg[0x7] = 1.092548 * bh * bF,
            bg[0x8] = 0.546274 * (bh * bh - bi * bi);
        }
    }),
    aSe['prototype'] = Object['assign'](Object['create'](aJp['prototype']), {
        'constructor': aSe,
        'isLightProbe': !0x0,
        'copy': function(bf) {
            return aJp['prototype']['copy']['call'](this, bf),
            this['sh']['copy'](bf['sh']),
            this['intensity'] = bf['intensity'],
            this;
        },
        'toJSON': function(bf) {
            return aJp['prototype']['toJSON']['call'](this, bf);
        }
    }),
    aSh['prototype'] = Object['assign'](Object['create'](aSe['prototype']), {
        'constructor': aSh,
        'isHemisphereLightProbe': !0x0,
        'copy': function(bf) {
            return aSe['prototype']['copy']['call'](this, bf),
            this;
        },
        'toJSON': function(bf) {
            return aSe['prototype']['toJSON']['call'](this, bf);
        }
    }),
    aSr['prototype'] = Object['assign'](Object['create'](aSe['prototype']), {
        'constructor': aSr,
        'isAmbientLightProbe': !0x0,
        'copy': function(bf) {
            return aSe['prototype']['copy']['call'](this, bf),
            this;
        },
        'toJSON': function(bf) {
            return aSe['prototype']['toJSON']['call'](this, bf);
        }
    }),
    Object['assign'](aSv['prototype'], {
        'update': function() {
            var bf, bg, bh, bi, bF, bG, bH, bI, bJ = new mR(), bK = new mR();
            return function(bL) {
                if (bf !== this || bg !== bL['focus'] || bh !== bL['fov'] || bi !== bL['aspect'] * this['aspect'] || bF !== bL['near'] || bG !== bL['far'] || bH !== bL['zoom'] || bI !== this['eyeSep']) {
                    bf = this,
                    bg = bL['focus'],
                    bh = bL['fov'],
                    bi = bL['aspect'] * this['aspect'],
                    bF = bL['near'],
                    bG = bL['far'],
                    bH = bL['zoom'];
                    var bM, bN, bO = bL['projectionMatrix']['clone'](), bP = (bI = this['eyeSep'] / 0x2) * bF / bg, bQ = bF * Math['tan'](e2['DEG2RAD'] * bh * 0.5) / bH;
                    bK['elements'][0xc] = -bI,
                    bJ['elements'][0xc] = bI,
                    bM = -bQ * bi + bP,
                    bN = bQ * bi + bP,
                    bO['elements'][0x0] = 0x2 * bF / (bN - bM),
                    bO['elements'][0x8] = (bN + bM) / (bN - bM),
                    this['cameraL']['projectionMatrix']['copy'](bO),
                    bM = -bQ * bi - bP,
                    bN = bQ * bi - bP,
                    bO['elements'][0x0] = 0x2 * bF / (bN - bM),
                    bO['elements'][0x8] = (bN + bM) / (bN - bM),
                    this['cameraR']['projectionMatrix']['copy'](bO);
                }
                this['cameraL']['matrixWorld']['copy'](bL['matrixWorld'])['multiply'](bK),
                this['cameraR']['matrixWorld']['copy'](bL['matrixWorld'])['multiply'](bJ);
            }
            ;
        }()
    });
    var aTB = 0x5a
      , aTC = 0x1;
    function aTD(bf, bg, bh, bi) {
        yT['call'](this),
        this['type'] = 'CubeCamera';
        var bF = new a68(aTB,aTC,bf,bg);
        bF['up']['set'](0x0, -0x1, 0x0),
        bF['lookAt'](new eK(0x1,0x0,0x0)),
        this['add'](bF);
        var bG = new a68(aTB,aTC,bf,bg);
        bG['up']['set'](0x0, -0x1, 0x0),
        bG['lookAt'](new eK(-0x1,0x0,0x0)),
        this['add'](bG);
        var bH = new a68(aTB,aTC,bf,bg);
        bH['up']['set'](0x0, 0x0, 0x1),
        bH['lookAt'](new eK(0x0,0x1,0x0)),
        this['add'](bH);
        var bI = new a68(aTB,aTC,bf,bg);
        bI['up']['set'](0x0, 0x0, -0x1),
        bI['lookAt'](new eK(0x0,-0x1,0x0)),
        this['add'](bI);
        var bJ = new a68(aTB,aTC,bf,bg);
        bJ['up']['set'](0x0, -0x1, 0x0),
        bJ['lookAt'](new eK(0x0,0x0,0x1)),
        this['add'](bJ);
        var bK = new a68(aTB,aTC,bf,bg);
        bK['up']['set'](0x0, -0x1, 0x0),
        bK['lookAt'](new eK(0x0,0x0,-0x1)),
        this['add'](bK),
        bi = bi || {
            'format': d8,
            'magFilter': cS,
            'minFilter': cS
        },
        this['renderTarget'] = new mk(bh,bh,bi),
        this['renderTarget']['texture']['name'] = 'CubeCamera',
        this['update'] = function(bf, bg) {
            null === this['parent'] && this['updateMatrixWorld']();
            var bh = bf['getRenderTarget']()
              , bi = this['renderTarget']
              , bL = bi['texture']['generateMipmaps'];
            bi['texture']['generateMipmaps'] = !0x1,
            bf['setRenderTarget'](bi, 0x0),
            bf['render'](bg, bF),
            bf['setRenderTarget'](bi, 0x1),
            bf['render'](bg, bG),
            bf['setRenderTarget'](bi, 0x2),
            bf['render'](bg, bH),
            bf['setRenderTarget'](bi, 0x3),
            bf['render'](bg, bI),
            bf['setRenderTarget'](bi, 0x4),
            bf['render'](bg, bJ),
            bi['texture']['generateMipmaps'] = bL,
            bf['setRenderTarget'](bi, 0x5),
            bf['render'](bg, bK),
            bf['setRenderTarget'](bh);
        }
        ,
        this['clear'] = function(bf, bg, bh, bi) {
            for (var bF = bf['getRenderTarget'](), bG = this['renderTarget'], bH = 0x0; bH < 0x6; bH++)
                bf['setRenderTarget'](bG, bH),
                bf['clear'](bg, bh, bi);
            bf['setRenderTarget'](bF);
        }
        ;
    }
    function aU0(bf) {
        this['autoStart'] = void 0x0 === bf || bf,
        this['startTime'] = 0x0,
        this['oldTime'] = 0x0,
        this['elapsedTime'] = 0x0,
        this['running'] = !0x1;
    }
    function aU2() {
        yT['call'](this),
        this['type'] = 'AudioListener',
        this['context'] = aS8['getContext'](),
        this['gain'] = this['context']['createGain'](),
        this['gain']['connect'](this['context']['destination']),
        this['filter'] = null,
        this['timeDelta'] = 0x0;
    }
    function aU3(bf) {
        yT['call'](this),
        this['type'] = 'Audio',
        this['listener'] = bf,
        this['context'] = bf['context'],
        this['gain'] = this['context']['createGain'](),
        this['gain']['connect'](bf['getInput']()),
        this['autoplay'] = !0x1,
        this['buffer'] = null,
        this['detune'] = 0x0,
        this['loop'] = !0x1,
        this['startTime'] = 0x0,
        this['offset'] = 0x0,
        this['playbackRate'] = 0x1,
        this['isPlaying'] = !0x1,
        this['hasPlaybackControl'] = !0x0,
        this['sourceType'] = 'empty',
        this['filters'] = [];
    }
    function aU5(bf) {
        aU3['call'](this, bf),
        this['panner'] = this['context']['createPanner'](),
        this['panner']['panningModel'] = 'HRTF',
        this['panner']['connect'](this['gain']);
    }
    function aU7(bf, bg) {
        this['analyser'] = bf['context']['createAnalyser'](),
        this['analyser']['fftSize'] = void 0x0 !== bg ? bg : 0x800,
        this['data'] = new Uint8Array(this['analyser']['frequencyBinCount']),
        bf['getOutput']()['connect'](this['analyser']);
    }
    function aUa(bf, bg, bh) {
        this['binding'] = bf,
        this['valueSize'] = bh;
        var bi, bF = Float64Array;
        switch (bg) {
        case 'quaternion':
            bi = this['_slerp'];
            break;
        case 'string':
        case 'bool':
            bF = Array,
            bi = this['_select'];
            break;
        default:
            bi = this['_lerp'];
        }
        this['buffer'] = new bF(0x4 * bh),
        this['_mixBufferRegion'] = bi,
        this['cumulativeWeight'] = 0x0,
        this['useCount'] = 0x0,
        this['referenceCount'] = 0x0;
    }
    aTD['prototype'] = Object['create'](yT['prototype']),
    aTD['prototype']['constructor'] = aTD,
    Object['assign'](aU0['prototype'], {
        'start': function() {
            this['startTime'] = ('undefined' == typeof performance ? Date : performance)['now'](),
            this['oldTime'] = this['startTime'],
            this['elapsedTime'] = 0x0,
            this['running'] = !0x0;
        },
        'stop': function() {
            this['getElapsedTime'](),
            this['running'] = !0x1,
            this['autoStart'] = !0x1;
        },
        'getElapsedTime': function() {
            return this['getDelta'](),
            this['elapsedTime'];
        },
        'getDelta': function() {
            var bf = 0x0;
            if (this['autoStart'] && !this['running'])
                return this['start'](),
                0x0;
            if (this['running']) {
                var bg = ('undefined' == typeof performance ? Date : performance)['now']();
                bf = (bg - this['oldTime']) / 0x3e8,
                this['oldTime'] = bg,
                this['elapsedTime'] += bf;
            }
            return bf;
        }
    }),
    aU2['prototype'] = Object['assign'](Object['create'](yT['prototype']), {
        'constructor': aU2,
        'getInput': function() {
            return this['gain'];
        },
        'removeFilter': function() {
            return null !== this['filter'] && (this['gain']['disconnect'](this['filter']),
            this['filter']['disconnect'](this['context']['destination']),
            this['gain']['connect'](this['context']['destination']),
            this['filter'] = null),
            this;
        },
        'getFilter': function() {
            return this['filter'];
        },
        'setFilter': function(bf) {
            return null !== this['filter'] ? (this['gain']['disconnect'](this['filter']),
            this['filter']['disconnect'](this['context']['destination'])) : this['gain']['disconnect'](this['context']['destination']),
            this['filter'] = bf,
            this['gain']['connect'](this['filter']),
            this['filter']['connect'](this['context']['destination']),
            this;
        },
        'getMasterVolume': function() {
            return this['gain']['gain']['value'];
        },
        'setMasterVolume': function(bf) {
            return this['gain']['gain']['setTargetAtTime'](bf, this['context']['currentTime'], 0.01),
            this;
        },
        'updateMatrixWorld': function() {
            var bf = new eK()
              , bg = new eF()
              , bh = new eK()
              , bi = new eK()
              , bF = new aU0();
            return function(bG) {
                yT['prototype']['updateMatrixWorld']['call'](this, bG);
                var bH = this['context']['listener']
                  , bI = this['up'];
                if (this['timeDelta'] = bF['getDelta'](),
                this['matrixWorld']['decompose'](bf, bg, bh),
                bi['set'](0x0, 0x0, -0x1)['applyQuaternion'](bg),
                bH['positionX']) {
                    var bJ = this['context']['currentTime'] + this['timeDelta'];
                    bH['positionX']['linearRampToValueAtTime'](bf['x'], bJ),
                    bH['positionY']['linearRampToValueAtTime'](bf['y'], bJ),
                    bH['positionZ']['linearRampToValueAtTime'](bf['z'], bJ),
                    bH['forwardX']['linearRampToValueAtTime'](bi['x'], bJ),
                    bH['forwardY']['linearRampToValueAtTime'](bi['y'], bJ),
                    bH['forwardZ']['linearRampToValueAtTime'](bi['z'], bJ),
                    bH['upX']['linearRampToValueAtTime'](bI['x'], bJ),
                    bH['upY']['linearRampToValueAtTime'](bI['y'], bJ),
                    bH['upZ']['linearRampToValueAtTime'](bI['z'], bJ);
                } else
                    bH['setPosition'](bf['x'], bf['y'], bf['z']),
                    bH['setOrientation'](bi['x'], bi['y'], bi['z'], bI['x'], bI['y'], bI['z']);
            }
            ;
        }()
    }),
    aU3['prototype'] = Object['assign'](Object['create'](yT['prototype']), {
        'constructor': aU3,
        'getOutput': function() {
            return this['gain'];
        },
        'setNodeSource': function(bf) {
            return this['hasPlaybackControl'] = !0x1,
            this['sourceType'] = 'audioNode',
            this['source'] = bf,
            this['connect'](),
            this;
        },
        'setMediaElementSource': function(bf) {
            return this['hasPlaybackControl'] = !0x1,
            this['sourceType'] = 'mediaNode',
            this['source'] = this['context']['createMediaElementSource'](bf),
            this['connect'](),
            this;
        },
        'setBuffer': function(bf) {
            return this['buffer'] = bf,
            this['sourceType'] = 'buffer',
            this['autoplay'] && this['play'](),
            this;
        },
        'play': function() {
            if (!0x0 !== this['isPlaying']) {
                if (!0x1 !== this['hasPlaybackControl']) {
                    var bf = this['context']['createBufferSource']();
                    return bf['buffer'] = this['buffer'],
                    bf['loop'] = this['loop'],
                    bf['onended'] = this['onEnded']['bind'](this),
                    this['startTime'] = this['context']['currentTime'],
                    bf['start'](this['startTime'], this['offset']),
                    this['isPlaying'] = !0x0,
                    this['source'] = bf,
                    this['setDetune'](this['detune']),
                    this['setPlaybackRate'](this['playbackRate']),
                    this['connect']();
                }
                console['warn']('THREE.Audio:\x20this\x20Audio\x20has\x20no\x20playback\x20control.');
            } else
                console['warn']('THREE.Audio:\x20Audio\x20is\x20already\x20playing.');
        },
        'pause': function() {
            if (!0x1 !== this['hasPlaybackControl'])
                return !0x0 === this['isPlaying'] && (this['source']['stop'](),
                this['source']['onended'] = null,
                this['offset'] += (this['context']['currentTime'] - this['startTime']) * this['playbackRate'],
                this['isPlaying'] = !0x1),
                this;
            console['warn']('THREE.Audio:\x20this\x20Audio\x20has\x20no\x20playback\x20control.');
        },
        'stop': function() {
            if (!0x1 !== this['hasPlaybackControl'])
                return this['source']['stop'](),
                this['source']['onended'] = null,
                this['offset'] = 0x0,
                this['isPlaying'] = !0x1,
                this;
            console['warn']('THREE.Audio:\x20this\x20Audio\x20has\x20no\x20playback\x20control.');
        },
        'connect': function() {
            if (this['filters']['length'] > 0x0) {
                this['source']['connect'](this['filters'][0x0]);
                for (var bf = 0x1, bg = this['filters']['length']; bf < bg; bf++)
                    this['filters'][bf - 0x1]['connect'](this['filters'][bf]);
                this['filters'][this['filters']['length'] - 0x1]['connect'](this['getOutput']());
            } else
                this['source']['connect'](this['getOutput']());
            return this;
        },
        'disconnect': function() {
            if (this['filters']['length'] > 0x0) {
                this['source']['disconnect'](this['filters'][0x0]);
                for (var bf = 0x1, bg = this['filters']['length']; bf < bg; bf++)
                    this['filters'][bf - 0x1]['disconnect'](this['filters'][bf]);
                this['filters'][this['filters']['length'] - 0x1]['disconnect'](this['getOutput']());
            } else
                this['source']['disconnect'](this['getOutput']());
            return this;
        },
        'getFilters': function() {
            return this['filters'];
        },
        'setFilters': function(bf) {
            return bf || (bf = []),
            !0x0 === this['isPlaying'] ? (this['disconnect'](),
            this['filters'] = bf,
            this['connect']()) : this['filters'] = bf,
            this;
        },
        'setDetune': function(bf) {
            if (this['detune'] = bf,
            void 0x0 !== this['source']['detune'])
                return !0x0 === this['isPlaying'] && this['source']['detune']['setTargetAtTime'](this['detune'], this['context']['currentTime'], 0.01),
                this;
        },
        'getDetune': function() {
            return this['detune'];
        },
        'getFilter': function() {
            return this['getFilters']()[0x0];
        },
        'setFilter': function(bf) {
            return this['setFilters'](bf ? [bf] : []);
        },
        'setPlaybackRate': function(bf) {
            if (!0x1 !== this['hasPlaybackControl'])
                return this['playbackRate'] = bf,
                !0x0 === this['isPlaying'] && this['source']['playbackRate']['setTargetAtTime'](this['playbackRate'], this['context']['currentTime'], 0.01),
                this;
            console['warn']('THREE.Audio:\x20this\x20Audio\x20has\x20no\x20playback\x20control.');
        },
        'getPlaybackRate': function() {
            return this['playbackRate'];
        },
        'onEnded': function() {
            this['isPlaying'] = !0x1;
        },
        'getLoop': function() {
            return !0x1 === this['hasPlaybackControl'] ? (console['warn']('THREE.Audio:\x20this\x20Audio\x20has\x20no\x20playback\x20control.'),
            !0x1) : this['loop'];
        },
        'setLoop': function(bf) {
            if (!0x1 !== this['hasPlaybackControl'])
                return this['loop'] = bf,
                !0x0 === this['isPlaying'] && (this['source']['loop'] = this['loop']),
                this;
            console['warn']('THREE.Audio:\x20this\x20Audio\x20has\x20no\x20playback\x20control.');
        },
        'getVolume': function() {
            return this['gain']['gain']['value'];
        },
        'setVolume': function(bf) {
            return this['gain']['gain']['setTargetAtTime'](bf, this['context']['currentTime'], 0.01),
            this;
        }
    }),
    aU5['prototype'] = Object['assign'](Object['create'](aU3['prototype']), {
        'constructor': aU5,
        'getOutput': function() {
            return this['panner'];
        },
        'getRefDistance': function() {
            return this['panner']['refDistance'];
        },
        'setRefDistance': function(bf) {
            return this['panner']['refDistance'] = bf,
            this;
        },
        'getRolloffFactor': function() {
            return this['panner']['rolloffFactor'];
        },
        'setRolloffFactor': function(bf) {
            return this['panner']['rolloffFactor'] = bf,
            this;
        },
        'getDistanceModel': function() {
            return this['panner']['distanceModel'];
        },
        'setDistanceModel': function(bf) {
            return this['panner']['distanceModel'] = bf,
            this;
        },
        'getMaxDistance': function() {
            return this['panner']['maxDistance'];
        },
        'setMaxDistance': function(bf) {
            return this['panner']['maxDistance'] = bf,
            this;
        },
        'setDirectionalCone': function(bf, bg, bh) {
            return this['panner']['coneInnerAngle'] = bf,
            this['panner']['coneOuterAngle'] = bg,
            this['panner']['coneOuterGain'] = bh,
            this;
        },
        'updateMatrixWorld': function() {
            var bf = new eK()
              , bg = new eF()
              , bh = new eK()
              , bi = new eK();
            return function(bF) {
                if (yT['prototype']['updateMatrixWorld']['call'](this, bF),
                !0x0 !== this['hasPlaybackControl'] || !0x1 !== this['isPlaying']) {
                    this['matrixWorld']['decompose'](bf, bg, bh),
                    bi['set'](0x0, 0x0, 0x1)['applyQuaternion'](bg);
                    var bG = this['panner'];
                    if (bG['positionX']) {
                        var bH = this['context']['currentTime'] + this['listener']['timeDelta'];
                        bG['positionX']['linearRampToValueAtTime'](bf['x'], bH),
                        bG['positionY']['linearRampToValueAtTime'](bf['y'], bH),
                        bG['positionZ']['linearRampToValueAtTime'](bf['z'], bH),
                        bG['orientationX']['linearRampToValueAtTime'](bi['x'], bH),
                        bG['orientationY']['linearRampToValueAtTime'](bi['y'], bH),
                        bG['orientationZ']['linearRampToValueAtTime'](bi['z'], bH);
                    } else
                        bG['setPosition'](bf['x'], bf['y'], bf['z']),
                        bG['setOrientation'](bi['x'], bi['y'], bi['z']);
                }
            }
            ;
        }()
    }),
    Object['assign'](aU7['prototype'], {
        'getFrequencyData': function() {
            return this['analyser']['getByteFrequencyData'](this['data']),
            this['data'];
        },
        'getAverageFrequency': function() {
            for (var bf = 0x0, bg = this['getFrequencyData'](), bh = 0x0; bh < bg['length']; bh++)
                bf += bg[bh];
            return bf / bg['length'];
        }
    }),
    Object['assign'](aUa['prototype'], {
        'accumulate': function(bf, bg) {
            var bh = this['buffer']
              , bi = this['valueSize']
              , bF = bf * bi + bi
              , bG = this['cumulativeWeight'];
            if (0x0 === bG) {
                for (var bH = 0x0; bH !== bi; ++bH)
                    bh[bF + bH] = bh[bH];
                bG = bg;
            } else {
                var bI = bg / (bG += bg);
                this['_mixBufferRegion'](bh, bF, 0x0, bI, bi);
            }
            this['cumulativeWeight'] = bG;
        },
        'apply': function(bf) {
            var bg = this['valueSize']
              , bh = this['buffer']
              , bi = bf * bg + bg
              , bF = this['cumulativeWeight']
              , bG = this['binding'];
            if (this['cumulativeWeight'] = 0x0,
            bF < 0x1) {
                var bH = 0x3 * bg;
                this['_mixBufferRegion'](bh, bi, bH, 0x1 - bF, bg);
            }
            for (var bI = bg, bJ = bg + bg; bI !== bJ; ++bI)
                if (bh[bI] !== bh[bI + bg]) {
                    bG['setValue'](bh, bi);
                    break;
                }
        },
        'saveOriginalState': function() {
            var bf = this['binding']
              , bg = this['buffer']
              , bh = this['valueSize']
              , bi = 0x3 * bh;
            bf['getValue'](bg, bi);
            for (var bF = bh, bG = bi; bF !== bG; ++bF)
                bg[bF] = bg[bi + bF % bh];
            this['cumulativeWeight'] = 0x0;
        },
        'restoreOriginalState': function() {
            var bf = 0x3 * this['valueSize'];
            this['binding']['setValue'](this['buffer'], bf);
        },
        '_select': function(bf, bg, bh, bi, bF) {
            if (bi >= 0.5)
                for (var bG = 0x0; bG !== bF; ++bG)
                    bf[bg + bG] = bf[bh + bG];
        },
        '_slerp': function(bf, bg, bh, bi) {
            eF['slerpFlat'](bf, bg, bf, bg, bf, bh, bi);
        },
        '_lerp': function(bf, bg, bh, bi, bF) {
            for (var bG = 0x1 - bi, bH = 0x0; bH !== bF; ++bH) {
                var bI = bg + bH;
                bf[bI] = bf[bI] * bG + bf[bh + bH] * bi;
            }
        }
    });
    var aVE, aVF, aVG, aVH, aVI, aVJ, aVK, aVL, aVM, aVN, aVO, aVP, aVQ, aVR, aVS;
    function aVT(bf, bg, bh) {
        var bi = bh || aVY['parseTrackName'](bg);
        this['_targetGroup'] = bf,
        this['_bindings'] = bf['subscribe_'](bg, bi);
    }
    function aVY(bf, bg, bh) {
        this['path'] = bg,
        this['parsedPath'] = bh || aVY['parseTrackName'](bg),
        this['node'] = aVY['findNode'](bf, this['parsedPath']['nodeName']) || bf,
        this['rootNode'] = bf;
    }
    function aW2() {
        this['uuid'] = e2['generateUUID'](),
        this['_objects'] = Array['prototype']['slice']['call'](arguments),
        this['nCachedObjects_'] = 0x0;
        var bf = {};
        this['_indicesByUUID'] = bf;
        for (var bg = 0x0, bh = arguments['length']; bg !== bh; ++bg)
            bf[arguments[bg]['uuid']] = bg;
        this['_paths'] = [],
        this['_parsedPaths'] = [],
        this['_bindings'] = [],
        this['_bindingsIndicesByPath'] = {};
        var bi = this;
        this['stats'] = {
            'objects': {
                get 'total'() {
                    return bi['_objects']['length'];
                },
                get 'inUse'() {
                    return this['total'] - bi['nCachedObjects_'];
                }
            },
            get 'bindingsPerObject'() {
                return bi['_bindings']['length'];
            }
        };
    }
    function aW7(bf, bg, bh) {
        this['_mixer'] = bf,
        this['_clip'] = bg,
        this['_localRoot'] = bh || null;
        for (var bi = bg['tracks'], bF = bi['length'], bG = new Array(bF), bH = {
            'endingStart': dK,
            'endingEnd': dK
        }, bI = 0x0; bI !== bF; ++bI) {
            var bJ = bi[bI]['createInterpolant'](null);
            bG[bI] = bJ,
            bJ['settings'] = bH;
        }
        this['_interpolantSettings'] = bH,
        this['_interpolants'] = bG,
        this['_propertyBindings'] = new Array(bF),
        this['_cacheIndex'] = null,
        this['_byClipCacheIndex'] = null,
        this['_timeScaleInterpolant'] = null,
        this['_weightInterpolant'] = null,
        this['loop'] = dF,
        this['_loopCount'] = -0x1,
        this['_startTime'] = null,
        this['time'] = 0x0,
        this['timeScale'] = 0x1,
        this['_effectiveTimeScale'] = 0x1,
        this['weight'] = 0x1,
        this['_effectiveWeight'] = 0x1,
        this['repetitions'] = 0x1 / 0x0,
        this['paused'] = !0x1,
        this['enabled'] = !0x0,
        this['clampWhenFinished'] = !0x1,
        this['zeroSlopeAtStart'] = !0x0,
        this['zeroSlopeAtEnd'] = !0x0;
    }
    function aWh(bf) {
        this['_root'] = bf,
        this['_initMemoryManager'](),
        this['_accuIndex'] = 0x0,
        this['time'] = 0x0,
        this['timeScale'] = 0x1;
    }
    function aWj(bf) {
        'string' == typeof bf && (console['warn']('THREE.Uniform:\x20Type\x20parameter\x20is\x20no\x20longer\x20needed.'),
        bf = arguments[0x1]),
        this['value'] = bf;
    }
    function aWl(bf, bg, bh) {
        aeb['call'](this, bf, bg),
        this['meshPerAttribute'] = bh || 0x1;
    }
    function aWp(bf, bg, bh, bi) {
        this['ray'] = new KP(bf,bg),
        this['near'] = bh || 0x0,
        this['far'] = bi || 0x1 / 0x0,
        this['params'] = {
            'Mesh': {},
            'Line': {},
            'LOD': {},
            'Points': {
                'threshold': 0x1
            },
            'Sprite': {}
        },
        Object['defineProperties'](this['params'], {
            'PointCloud': {
                'get': function() {
                    return console['warn']('THREE.Raycaster:\x20params.PointCloud\x20has\x20been\x20renamed\x20to\x20params.Points.'),
                    this['Points'];
                }
            }
        });
    }
    function aWu(bf, bg) {
        return bf['distance'] - bg['distance'];
    }
    function aWx(bf, bg, bh, bi) {
        if (!0x1 !== bf['visible'] && (bf['raycast'](bg, bh),
        !0x0 === bi))
            for (var bF = bf['children'], bG = 0x0, bH = bF['length']; bG < bH; bG++)
                aWx(bF[bG], bg, bh, !0x0);
    }
    function aWF(bf, bg, bh) {
        return this['radius'] = void 0x0 !== bf ? bf : 0x1,
        this['phi'] = void 0x0 !== bg ? bg : 0x0,
        this['theta'] = void 0x0 !== bh ? bh : 0x0,
        this;
    }
    function aWJ(bf, bg, bh) {
        return this['radius'] = void 0x0 !== bf ? bf : 0x1,
        this['theta'] = void 0x0 !== bg ? bg : 0x0,
        this['y'] = void 0x0 !== bh ? bh : 0x0,
        this;
    }
    function aWN(bf, bg) {
        this['min'] = void 0x0 !== bf ? bf : new eC(0x1 / 0x0,0x1 / 0x0),
        this['max'] = void 0x0 !== bg ? bg : new eC(-0x1 / 0x0,-0x1 / 0x0);
    }
    function aWQ(bf, bg) {
        this['start'] = void 0x0 !== bf ? bf : new eK(),
        this['end'] = void 0x0 !== bg ? bg : new eK();
    }
    function aWT(bf) {
        yT['call'](this),
        this['material'] = bf,
        this['render'] = function() {}
        ;
    }
    function aWV(bf, bg, bh, bi) {
        this['object'] = bf,
        this['size'] = void 0x0 !== bg ? bg : 0x1;
        var bF = void 0x0 !== bh ? bh : 0xff0000
          , bG = void 0x0 !== bi ? bi : 0x1
          , bH = 0x0
          , bI = this['object']['geometry'];
        bI && bI['isGeometry'] ? bH = 0x3 * bI['faces']['length'] : bI && bI['isBufferGeometry'] && (bH = bI['attributes']['normal']['count']);
        var bJ = new Gf()
          , bK = new Be(0x2 * bH * 0x3,0x3);
        bJ['addAttribute']('position', bK),
        aeE['call'](this, bJ, new aey({
            'color': bF,
            'linewidth': bG
        })),
        this['matrixAutoUpdate'] = !0x1,
        this['update']();
    }
    function aX6(bf, bg) {
        yT['call'](this),
        this['light'] = bf,
        this['light']['updateMatrixWorld'](),
        this['matrix'] = bf['matrixWorld'],
        this['matrixAutoUpdate'] = !0x1,
        this['color'] = bg;
        for (var bh = new Gf(), bi = [0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0, -0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, -0x1, 0x1], bF = 0x0, bG = 0x1; bF < 0x20; bF++,
        bG++) {
            var bH = bF / 0x20 * Math['PI'] * 0x2
              , bI = bG / 0x20 * Math['PI'] * 0x2;
            bi['push'](Math['cos'](bH), Math['sin'](bH), 0x1, Math['cos'](bI), Math['sin'](bI), 0x1);
        }
        bh['addAttribute']('position', new Be(bi,0x3));
        var bJ = new aey({
            'fog': !0x1
        });
        this['cone'] = new aeE(bh,bJ),
        this['add'](this['cone']),
        this['update']();
    }
    function aXg(bf) {
        for (var bg = function bf(bg) {
            var bh = [];
            bg && bg['isBone'] && bh['push'](bg);
            for (var bi = 0x0; bi < bg['children']['length']; bi++)
                bh['push']['apply'](bh, bf(bg['children'][bi]));
            return bh;
        }(bf), bh = new Gf(), bi = [], bF = [], bG = new w7(0x0,0x0,0x1), bH = new w7(0x0,0x1,0x0), bI = 0x0; bI < bg['length']; bI++) {
            var bJ = bg[bI];
            bJ['parent'] && bJ['parent']['isBone'] && (bi['push'](0x0, 0x0, 0x0),
            bi['push'](0x0, 0x0, 0x0),
            bF['push'](bG['r'], bG['g'], bG['b']),
            bF['push'](bH['r'], bH['g'], bH['b']));
        }
        bh['addAttribute']('position', new Be(bi,0x3)),
        bh['addAttribute']('color', new Be(bF,0x3));
        var bK = new aey({
            'vertexColors': c0,
            'depthTest': !0x1,
            'depthWrite': !0x1,
            'transparent': !0x0
        });
        aeE['call'](this, bh, bK),
        this['root'] = bf,
        this['bones'] = bg,
        this['matrix'] = bf['matrixWorld'],
        this['matrixAutoUpdate'] = !0x1;
    }
    function aXu(bf, bg, bh) {
        this['light'] = bf,
        this['light']['updateMatrixWorld'](),
        this['color'] = bh;
        var bi = new asZ(bg,0x4,0x2)
          , bF = new KW({
            'wireframe': !0x0,
            'fog': !0x1
        });
        KY['call'](this, bi, bF),
        this['matrix'] = this['light']['matrixWorld'],
        this['matrixAutoUpdate'] = !0x1,
        this['update']();
    }
    function aXA(bf, bg) {
        this['type'] = 'RectAreaLightHelper',
        this['light'] = bf,
        this['color'] = bg;
        var bh = new Gf();
        bh['addAttribute']('position', new Be([0x1, 0x1, 0x0, -0x1, 0x1, 0x0, -0x1, -0x1, 0x0, 0x1, -0x1, 0x0, 0x1, 0x1, 0x0],0x3)),
        bh['computeBoundingSphere']();
        var bi = new aey({
            'fog': !0x1
        });
        aeA['call'](this, bh, bi);
        var bF = new Gf();
        bF['addAttribute']('position', new Be([0x1, 0x1, 0x0, -0x1, 0x1, 0x0, -0x1, -0x1, 0x0, 0x1, 0x1, 0x0, -0x1, -0x1, 0x0, 0x1, -0x1, 0x0],0x3)),
        bF['computeBoundingSphere'](),
        this['add'](new KY(bF,new KW({
            'side': bU,
            'fog': !0x1
        }))),
        this['update']();
    }
    function aXG(bf, bg, bh) {
        yT['call'](this),
        this['light'] = bf,
        this['light']['updateMatrixWorld'](),
        this['matrix'] = bf['matrixWorld'],
        this['matrixAutoUpdate'] = !0x1,
        this['color'] = bh;
        var bi = new ahA(bg);
        bi['rotateY'](0.5 * Math['PI']),
        this['material'] = new KW({
            'wireframe': !0x0,
            'fog': !0x1
        }),
        void 0x0 === this['color'] && (this['material']['vertexColors'] = c0);
        var bF = bi['getAttribute']('position')
          , bG = new Float32Array(0x3 * bF['count']);
        bi['addAttribute']('color', new AI(bG,0x3)),
        this['add'](new KY(bi,this['material'])),
        this['update']();
    }
    function aXN(bf, bg) {
        this['lightProbe'] = bf,
        this['size'] = bg;
        var bh = {
            'GAMMA_OUTPUT': ''
        }
          , bi = new KN({
            'defines': bh,
            'uniforms': {
                'sh': {
                    'value': this['lightProbe']['sh']['coefficients']
                },
                'intensity': {
                    'value': this['lightProbe']['intensity']
                }
            },
            'vertexShader': ['varying\x20vec3\x20vNormal;', 'void\x20main()\x20{', '\x09vNormal\x20=\x20normalize(\x20normalMatrix\x20*\x20normal\x20);', '\x09gl_Position\x20=\x20projectionMatrix\x20*\x20modelViewMatrix\x20*\x20vec4(\x20position,\x201.0\x20);', '}']['join']('\x0a'),
            'fragmentShader': ['#define\x20RECIPROCAL_PI\x200.318309886', 'vec3\x20inverseTransformDirection(\x20in\x20vec3\x20normal,\x20in\x20mat4\x20matrix\x20)\x20{', '\x09//\x20matrix\x20is\x20assumed\x20to\x20be\x20orthogonal', '\x09return\x20normalize(\x20(\x20vec4(\x20normal,\x200.0\x20)\x20*\x20matrix\x20).xyz\x20);', '}', 'vec3\x20linearToOutput(\x20in\x20vec3\x20a\x20)\x20{', '\x09#ifdef\x20GAMMA_OUTPUT', '\x09\x09return\x20pow(\x20a,\x20vec3(\x201.0\x20/\x20float(\x20GAMMA_FACTOR\x20)\x20)\x20);', '\x09#else', '\x09\x09return\x20a;', '\x09#endif', '}', '//\x20source:\x20https://graphics.stanford.edu/papers/envmap/envmap.pdf', 'vec3\x20shGetIrradianceAt(\x20in\x20vec3\x20normal,\x20in\x20vec3\x20shCoefficients[\x209\x20]\x20)\x20{', '\x09//\x20normal\x20is\x20assumed\x20to\x20have\x20unit\x20length', '\x09float\x20x\x20=\x20normal.x,\x20y\x20=\x20normal.y,\x20z\x20=\x20normal.z;', '\x09//\x20band\x200', '\x09vec3\x20result\x20=\x20shCoefficients[\x200\x20]\x20*\x200.886227;', '\x09//\x20band\x201', '\x09result\x20+=\x20shCoefficients[\x201\x20]\x20*\x202.0\x20*\x200.511664\x20*\x20y;', '\x09result\x20+=\x20shCoefficients[\x202\x20]\x20*\x202.0\x20*\x200.511664\x20*\x20z;', '\x09result\x20+=\x20shCoefficients[\x203\x20]\x20*\x202.0\x20*\x200.511664\x20*\x20x;', '\x09//\x20band\x202', '\x09result\x20+=\x20shCoefficients[\x204\x20]\x20*\x202.0\x20*\x200.429043\x20*\x20x\x20*\x20y;', '\x09result\x20+=\x20shCoefficients[\x205\x20]\x20*\x202.0\x20*\x200.429043\x20*\x20y\x20*\x20z;', '\x09result\x20+=\x20shCoefficients[\x206\x20]\x20*\x20(\x200.743125\x20*\x20z\x20*\x20z\x20-\x200.247708\x20);', '\x09result\x20+=\x20shCoefficients[\x207\x20]\x20*\x202.0\x20*\x200.429043\x20*\x20x\x20*\x20z;', '\x09result\x20+=\x20shCoefficients[\x208\x20]\x20*\x200.429043\x20*\x20(\x20x\x20*\x20x\x20-\x20y\x20*\x20y\x20);', '\x09return\x20result;', '}', 'uniform\x20vec3\x20sh[\x209\x20];\x20//\x20sh\x20coefficients', 'uniform\x20float\x20intensity;\x20//\x20light\x20probe\x20intensity', 'varying\x20vec3\x20vNormal;', 'void\x20main()\x20{', '\x09vec3\x20normal\x20=\x20normalize(\x20vNormal\x20);', '\x09vec3\x20worldNormal\x20=\x20inverseTransformDirection(\x20normal,\x20viewMatrix\x20);', '\x09vec3\x20irradiance\x20=\x20shGetIrradianceAt(\x20worldNormal,\x20sh\x20);', '\x09vec3\x20outgoingLight\x20=\x20RECIPROCAL_PI\x20*\x20irradiance\x20*\x20intensity;', '\x09outgoingLight\x20=\x20linearToOutput(\x20outgoingLight\x20);', '\x09gl_FragColor\x20=\x20vec4(\x20outgoingLight,\x201.0\x20);', '}']['join']('\x0a')
        })
          , bF = new asZ(0x1,0x20,0x10);
        KY['call'](this, bF, bi),
        this['onBeforeRender']();
    }
    function aXT(bf, bg, bh, bi) {
        bf = bf || 0xa,
        bg = bg || 0xa,
        bh = new w7(void 0x0 !== bh ? bh : 0x444444),
        bi = new w7(void 0x0 !== bi ? bi : 0x888888);
        for (var bF = bg / 0x2, bG = bf / bg, bH = bf / 0x2, bI = [], bJ = [], bK = 0x0, bL = 0x0, bM = -bH; bK <= bg; bK++,
        bM += bG) {
            bI['push'](-bH, 0x0, bM, bH, 0x0, bM),
            bI['push'](bM, 0x0, -bH, bM, 0x0, bH);
            var bN = bK === bF ? bh : bi;
            bN['toArray'](bJ, bL),
            bL += 0x3,
            bN['toArray'](bJ, bL),
            bL += 0x3,
            bN['toArray'](bJ, bL),
            bL += 0x3,
            bN['toArray'](bJ, bL),
            bL += 0x3;
        }
        var bO = new Gf();
        bO['addAttribute']('position', new Be(bI,0x3)),
        bO['addAttribute']('color', new Be(bJ,0x3));
        var bP = new aey({
            'vertexColors': c0
        });
        aeE['call'](this, bO, bP);
    }
    function aY9(bf, bg, bh, bi, bF, bG) {
        bf = bf || 0xa,
        bg = bg || 0x10,
        bh = bh || 0x8,
        bi = bi || 0x40,
        bF = new w7(void 0x0 !== bF ? bF : 0x444444),
        bG = new w7(void 0x0 !== bG ? bG : 0x888888);
        var bH, bI, bJ, bK, bL, bM, bN, bO = [], bP = [];
        for (bK = 0x0; bK <= bg; bK++)
            bJ = bK / bg * (0x2 * Math['PI']),
            bH = Math['sin'](bJ) * bf,
            bI = Math['cos'](bJ) * bf,
            bO['push'](0x0, 0x0, 0x0),
            bO['push'](bH, 0x0, bI),
            bN = 0x1 & bK ? bF : bG,
            bP['push'](bN['r'], bN['g'], bN['b']),
            bP['push'](bN['r'], bN['g'], bN['b']);
        for (bK = 0x0; bK <= bh; bK++)
            for (bN = 0x1 & bK ? bF : bG,
            bM = bf - bf / bh * bK,
            bL = 0x0; bL < bi; bL++)
                bJ = bL / bi * (0x2 * Math['PI']),
                bH = Math['sin'](bJ) * bM,
                bI = Math['cos'](bJ) * bM,
                bO['push'](bH, 0x0, bI),
                bP['push'](bN['r'], bN['g'], bN['b']),
                bJ = (bL + 0x1) / bi * (0x2 * Math['PI']),
                bH = Math['sin'](bJ) * bM,
                bI = Math['cos'](bJ) * bM,
                bO['push'](bH, 0x0, bI),
                bP['push'](bN['r'], bN['g'], bN['b']);
        var bQ = new Gf();
        bQ['addAttribute']('position', new Be(bO,0x3)),
        bQ['addAttribute']('color', new Be(bP,0x3));
        var bR = new aey({
            'vertexColors': c0
        });
        aeE['call'](this, bQ, bR);
    }
    function aYr(bf, bg, bh, bi) {
        this['audio'] = bf,
        this['range'] = bg || 0x1,
        this['divisionsInnerAngle'] = bh || 0x10,
        this['divisionsOuterAngle'] = bi || 0x2;
        var bF = new Gf()
          , bG = this['divisionsInnerAngle'] + 0x2 * this['divisionsOuterAngle']
          , bH = new Float32Array(0x3 * (0x3 * bG + 0x3));
        bF['addAttribute']('position', new AI(bH,0x3));
        var bI = new aey({
            'color': 0xff00
        })
          , bJ = new aey({
            'color': 0xffff00
        });
        aeA['call'](this, bF, [bJ, bI]),
        this['update']();
    }
    function aYB(bf, bg, bh, bi) {
        this['object'] = bf,
        this['size'] = void 0x0 !== bg ? bg : 0x1;
        var bF = void 0x0 !== bh ? bh : 0xffff00
          , bG = void 0x0 !== bi ? bi : 0x1
          , bH = 0x0
          , bI = this['object']['geometry'];
        bI && bI['isGeometry'] ? bH = bI['faces']['length'] : console['warn']('THREE.FaceNormalsHelper:\x20only\x20THREE.Geometry\x20is\x20supported.\x20Use\x20THREE.VertexNormalsHelper,\x20instead.');
        var bJ = new Gf()
          , bK = new Be(0x2 * bH * 0x3,0x3);
        bJ['addAttribute']('position', bK),
        aeE['call'](this, bJ, new aey({
            'color': bF,
            'linewidth': bG
        })),
        this['matrixAutoUpdate'] = !0x1,
        this['update']();
    }
    function aYM(bf, bg, bh) {
        yT['call'](this),
        this['light'] = bf,
        this['light']['updateMatrixWorld'](),
        this['matrix'] = bf['matrixWorld'],
        this['matrixAutoUpdate'] = !0x1,
        this['color'] = bh,
        void 0x0 === bg && (bg = 0x1);
        var bi = new Gf();
        bi['addAttribute']('position', new Be([-bg, bg, 0x0, bg, bg, 0x0, bg, -bg, 0x0, -bg, -bg, 0x0, -bg, bg, 0x0],0x3));
        var bF = new aey({
            'fog': !0x1
        });
        this['lightPlane'] = new aeA(bi,bF),
        this['add'](this['lightPlane']),
        (bi = new Gf())['addAttribute']('position', new Be([0x0, 0x0, 0x0, 0x0, 0x0, 0x1],0x3)),
        this['targetLine'] = new aeA(bi,bF),
        this['add'](this['targetLine']),
        this['update']();
    }
    function aYS(bf) {
        var bg = new Gf()
          , bh = new aey({
            'color': 0xffffff,
            'vertexColors': bZ
        })
          , bi = []
          , bF = []
          , bG = {}
          , bH = new w7(0xffaa00)
          , bI = new w7(0xff0000)
          , bJ = new w7(0xaaff)
          , bK = new w7(0xffffff)
          , bL = new w7(0x333333);
        function bM(bf, bg, bh) {
            bN(bf, bh),
            bN(bg, bh);
        }
        function bN(bf, bg) {
            bi['push'](0x0, 0x0, 0x0),
            bF['push'](bg['r'], bg['g'], bg['b']),
            void 0x0 === bG[bf] && (bG[bf] = []),
            bG[bf]['push'](bi['length'] / 0x3 - 0x1);
        }
        bM('n1', 'n2', bH),
        bM('n2', 'n4', bH),
        bM('n4', 'n3', bH),
        bM('n3', 'n1', bH),
        bM('f1', 'f2', bH),
        bM('f2', 'f4', bH),
        bM('f4', 'f3', bH),
        bM('f3', 'f1', bH),
        bM('n1', 'f1', bH),
        bM('n2', 'f2', bH),
        bM('n3', 'f3', bH),
        bM('n4', 'f4', bH),
        bM('p', 'n1', bI),
        bM('p', 'n2', bI),
        bM('p', 'n3', bI),
        bM('p', 'n4', bI),
        bM('u1', 'u2', bJ),
        bM('u2', 'u3', bJ),
        bM('u3', 'u1', bJ),
        bM('c', 't', bK),
        bM('p', 'c', bL),
        bM('cn1', 'cn2', bL),
        bM('cn3', 'cn4', bL),
        bM('cf1', 'cf2', bL),
        bM('cf3', 'cf4', bL),
        bg['addAttribute']('position', new Be(bi,0x3)),
        bg['addAttribute']('color', new Be(bF,0x3)),
        aeE['call'](this, bg, bh),
        this['camera'] = bf,
        this['camera']['updateProjectionMatrix'] && this['camera']['updateProjectionMatrix'](),
        this['matrix'] = bf['matrixWorld'],
        this['matrixAutoUpdate'] = !0x1,
        this['pointMap'] = bG,
        this['update']();
    }
    function aZb(bf, bg) {
        this['object'] = bf,
        void 0x0 === bg && (bg = 0xffff00);
        var bh = new Uint16Array([0x0, 0x1, 0x1, 0x2, 0x2, 0x3, 0x3, 0x0, 0x4, 0x5, 0x5, 0x6, 0x6, 0x7, 0x7, 0x4, 0x0, 0x4, 0x1, 0x5, 0x2, 0x6, 0x3, 0x7])
          , bi = new Float32Array(0x18)
          , bF = new Gf();
        bF['setIndex'](new AI(bh,0x1)),
        bF['addAttribute']('position', new AI(bi,0x3)),
        aeE['call'](this, bF, new aey({
            'color': bg
        })),
        this['matrixAutoUpdate'] = !0x1,
        this['update']();
    }
    function aZh(bf, bg) {
        this['type'] = 'Box3Helper',
        this['box'] = bf;
        var bh = void 0x0 !== bg ? bg : 0xffff00
          , bi = new Uint16Array([0x0, 0x1, 0x1, 0x2, 0x2, 0x3, 0x3, 0x0, 0x4, 0x5, 0x5, 0x6, 0x6, 0x7, 0x7, 0x4, 0x0, 0x4, 0x1, 0x5, 0x2, 0x6, 0x3, 0x7])
          , bF = new Gf();
        bF['setIndex'](new AI(bi,0x1)),
        bF['addAttribute']('position', new Be([0x1, 0x1, 0x1, -0x1, 0x1, 0x1, -0x1, -0x1, 0x1, 0x1, -0x1, 0x1, 0x1, 0x1, -0x1, -0x1, 0x1, -0x1, -0x1, -0x1, -0x1, 0x1, -0x1, -0x1],0x3)),
        aeE['call'](this, bF, new aey({
            'color': bh
        })),
        this['geometry']['computeBoundingSphere']();
    }
    function aZn(bf, bg, bh) {
        this['type'] = 'PlaneHelper',
        this['plane'] = bf,
        this['size'] = void 0x0 === bg ? 0x1 : bg;
        var bi = void 0x0 !== bh ? bh : 0xffff00
          , bF = new Gf();
        bF['addAttribute']('position', new Be([0x1, -0x1, 0x1, -0x1, 0x1, 0x1, -0x1, -0x1, 0x1, 0x1, 0x1, 0x1, -0x1, 0x1, 0x1, -0x1, -0x1, 0x1, 0x1, -0x1, 0x1, 0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0],0x3)),
        bF['computeBoundingSphere'](),
        aeA['call'](this, bF, new aey({
            'color': bi
        }));
        var bG = new Gf();
        bG['addAttribute']('position', new Be([0x1, 0x1, 0x1, -0x1, 0x1, 0x1, -0x1, -0x1, 0x1, 0x1, 0x1, 0x1, -0x1, -0x1, 0x1, 0x1, -0x1, 0x1],0x3)),
        bG['computeBoundingSphere'](),
        this['add'](new KY(bG,new KW({
            'color': bi,
            'opacity': 0.2,
            'transparent': !0x0,
            'depthWrite': !0x1
        })));
    }
    function aZu(bf, bg, bh, bi, bF, bG) {
        yT['call'](this),
        void 0x0 === bf && (bf = new eK(0x0,0x0,0x1)),
        void 0x0 === bg && (bg = new eK(0x0,0x0,0x0)),
        void 0x0 === bh && (bh = 0x1),
        void 0x0 === bi && (bi = 0xffff00),
        void 0x0 === bF && (bF = 0.2 * bh),
        void 0x0 === bG && (bG = 0.2 * bF),
        void 0x0 === aVP && ((aVP = new Gf())['addAttribute']('position', new Be([0x0, 0x0, 0x0, 0x0, 0x1, 0x0],0x3)),
        (aVQ = new avp(0x0,0.5,0x1,0x5,0x1))['translate'](0x0, -0.5, 0x0)),
        this['position']['copy'](bg),
        this['line'] = new aeA(aVP,new aey({
            'color': bi
        })),
        this['line']['matrixAutoUpdate'] = !0x1,
        this['add'](this['line']),
        this['cone'] = new KY(aVQ,new KW({
            'color': bi
        })),
        this['cone']['matrixAutoUpdate'] = !0x1,
        this['add'](this['cone']),
        this['setDirection'](bf),
        this['setLength'](bh, bF, bG);
    }
    function aZB(bf) {
        var bg = [0x0, 0x0, 0x0, bf = bf || 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, bf, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, bf]
          , bh = new Gf();
        bh['addAttribute']('position', new Be(bg,0x3)),
        bh['addAttribute']('color', new Be([0x1, 0x0, 0x0, 0x1, 0.6, 0x0, 0x0, 0x1, 0x0, 0.6, 0x1, 0x0, 0x0, 0x0, 0x1, 0x0, 0.6, 0x1],0x3));
        var bi = new aey({
            'vertexColors': c0
        });
        aeE['call'](this, bh, bi);
    }
    function aZG(bf, bg, bh, bi, bF, bG, bH) {
        return console['warn']('THREE.Face4\x20has\x20been\x20removed.\x20A\x20THREE.Face3\x20will\x20be\x20created\x20instead.'),
        new xS(bf,bg,bh,bF,bG,bH);
    }
    Object['assign'](aVT['prototype'], {
        'getValue': function(bf, bg) {
            this['bind']();
            var bh = this['_targetGroup']['nCachedObjects_']
              , bi = this['_bindings'][bh];
            void 0x0 !== bi && bi['getValue'](bf, bg);
        },
        'setValue': function(bf, bg) {
            for (var bh = this['_bindings'], bi = this['_targetGroup']['nCachedObjects_'], bF = bh['length']; bi !== bF; ++bi)
                bh[bi]['setValue'](bf, bg);
        },
        'bind': function() {
            for (var bf = this['_bindings'], bg = this['_targetGroup']['nCachedObjects_'], bh = bf['length']; bg !== bh; ++bg)
                bf[bg]['bind']();
        },
        'unbind': function() {
            for (var bf = this['_bindings'], bg = this['_targetGroup']['nCachedObjects_'], bh = bf['length']; bg !== bh; ++bg)
                bf[bg]['unbind']();
        }
    }),
    Object['assign'](aVY, {
        'Composite': aVT,
        'create': function(bf, bg, bh) {
            return bf && bf['isAnimationObjectGroup'] ? new aVY['Composite'](bf,bg,bh) : new aVY(bf,bg,bh);
        },
        'sanitizeNodeName': (aVM = new RegExp('[\x5c[\x5c]\x5c.:\x5c/]','g'),
        function(bf) {
            return bf['replace'](/\s/g, '_')['replace'](aVM, '');
        }
        ),
        'parseTrackName': (aVE = '[^\x5c[\x5c]\x5c.:\x5c/]',
        aVF = '[^' + '\x5c[\x5c]\x5c.:\x5c/'['replace']('\x5c.', '') + ']',
        aVG = /((?:WC+[\/:])*)/['source']['replace']('WC', aVE),
        aVH = /(WCOD+)?/['source']['replace']('WCOD', aVF),
        aVI = /(?:\.(WC+)(?:\[(.+)\])?)?/['source']['replace']('WC', aVE),
        aVJ = /\.(WC+)(?:\[(.+)\])?/['source']['replace']('WC', aVE),
        aVK = new RegExp('^' + aVG + aVH + aVI + aVJ + '$'),
        aVL = ['material', 'materials', 'bones'],
        function(bf) {
            var bg = aVK['exec'](bf);
            if (!bg)
                throw new Error('PropertyBinding:\x20Cannot\x20parse\x20trackName:\x20' + bf);
            var bh = {
                'nodeName': bg[0x2],
                'objectName': bg[0x3],
                'objectIndex': bg[0x4],
                'propertyName': bg[0x5],
                'propertyIndex': bg[0x6]
            }
              , bi = bh['nodeName'] && bh['nodeName']['lastIndexOf']('.');
            if (void 0x0 !== bi && -0x1 !== bi) {
                var bF = bh['nodeName']['substring'](bi + 0x1);
                -0x1 !== aVL['indexOf'](bF) && (bh['nodeName'] = bh['nodeName']['substring'](0x0, bi),
                bh['objectName'] = bF);
            }
            if (null === bh['propertyName'] || 0x0 === bh['propertyName']['length'])
                throw new Error('PropertyBinding:\x20can\x20not\x20parse\x20propertyName\x20from\x20trackName:\x20' + bf);
            return bh;
        }
        ),
        'findNode': function(bf, bg) {
            if (!bg || '' === bg || 'root' === bg || '.' === bg || -0x1 === bg || bg === bf['name'] || bg === bf['uuid'])
                return bf;
            if (bf['skeleton']) {
                var bh = bf['skeleton']['getBoneByName'](bg);
                if (void 0x0 !== bh)
                    return bh;
            }
            if (bf['children']) {
                var bi = function(bf) {
                    for (var bh = 0x0; bh < bf['length']; bh++) {
                        var bF = bf[bh];
                        if (bF['name'] === bg || bF['uuid'] === bg)
                            return bF;
                        var bG = bi(bF['children']);
                        if (bG)
                            return bG;
                    }
                    return null;
                }
                  , bF = bi(bf['children']);
                if (bF)
                    return bF;
            }
            return null;
        }
    }),
    Object['assign'](aVY['prototype'], {
        '_getValue_unavailable': function() {},
        '_setValue_unavailable': function() {},
        'BindingType': {
            'Direct': 0x0,
            'EntireArray': 0x1,
            'ArrayElement': 0x2,
            'HasFromToArray': 0x3
        },
        'Versioning': {
            'None': 0x0,
            'NeedsUpdate': 0x1,
            'MatrixWorldNeedsUpdate': 0x2
        },
        'GetterByBindingType': [function(bf, bg) {
            bf[bg] = this['node'][this['propertyName']];
        }
        , function(bf, bg) {
            for (var bh = this['resolvedProperty'], bi = 0x0, bF = bh['length']; bi !== bF; ++bi)
                bf[bg++] = bh[bi];
        }
        , function(bf, bg) {
            bf[bg] = this['resolvedProperty'][this['propertyIndex']];
        }
        , function(bf, bg) {
            this['resolvedProperty']['toArray'](bf, bg);
        }
        ],
        'SetterByBindingTypeAndVersioning': [[function(bf, bg) {
            this['targetObject'][this['propertyName']] = bf[bg];
        }
        , function(bf, bg) {
            this['targetObject'][this['propertyName']] = bf[bg],
            this['targetObject']['needsUpdate'] = !0x0;
        }
        , function(bf, bg) {
            this['targetObject'][this['propertyName']] = bf[bg],
            this['targetObject']['matrixWorldNeedsUpdate'] = !0x0;
        }
        ], [function(bf, bg) {
            for (var bh = this['resolvedProperty'], bi = 0x0, bF = bh['length']; bi !== bF; ++bi)
                bh[bi] = bf[bg++];
        }
        , function(bf, bg) {
            for (var bh = this['resolvedProperty'], bi = 0x0, bF = bh['length']; bi !== bF; ++bi)
                bh[bi] = bf[bg++];
            this['targetObject']['needsUpdate'] = !0x0;
        }
        , function(bf, bg) {
            for (var bh = this['resolvedProperty'], bi = 0x0, bF = bh['length']; bi !== bF; ++bi)
                bh[bi] = bf[bg++];
            this['targetObject']['matrixWorldNeedsUpdate'] = !0x0;
        }
        ], [function(bf, bg) {
            this['resolvedProperty'][this['propertyIndex']] = bf[bg];
        }
        , function(bf, bg) {
            this['resolvedProperty'][this['propertyIndex']] = bf[bg],
            this['targetObject']['needsUpdate'] = !0x0;
        }
        , function(bf, bg) {
            this['resolvedProperty'][this['propertyIndex']] = bf[bg],
            this['targetObject']['matrixWorldNeedsUpdate'] = !0x0;
        }
        ], [function(bf, bg) {
            this['resolvedProperty']['fromArray'](bf, bg);
        }
        , function(bf, bg) {
            this['resolvedProperty']['fromArray'](bf, bg),
            this['targetObject']['needsUpdate'] = !0x0;
        }
        , function(bf, bg) {
            this['resolvedProperty']['fromArray'](bf, bg),
            this['targetObject']['matrixWorldNeedsUpdate'] = !0x0;
        }
        ]],
        'getValue': function(bf, bg) {
            this['bind'](),
            this['getValue'](bf, bg);
        },
        'setValue': function(bf, bg) {
            this['bind'](),
            this['setValue'](bf, bg);
        },
        'bind': function() {
            var bf = this['node']
              , bg = this['parsedPath']
              , bh = bg['objectName']
              , bi = bg['propertyName']
              , bF = bg['propertyIndex'];
            if (bf || (bf = aVY['findNode'](this['rootNode'], bg['nodeName']) || this['rootNode'],
            this['node'] = bf),
            this['getValue'] = this['_getValue_unavailable'],
            this['setValue'] = this['_setValue_unavailable'],
            bf) {
                if (bh) {
                    var bG = bg['objectIndex'];
                    switch (bh) {
                    case 'materials':
                        if (!bf['material'])
                            return void console['error']('THREE.PropertyBinding:\x20Can\x20not\x20bind\x20to\x20material\x20as\x20node\x20does\x20not\x20have\x20a\x20material.', this);
                        if (!bf['material']['materials'])
                            return void console['error']('THREE.PropertyBinding:\x20Can\x20not\x20bind\x20to\x20material.materials\x20as\x20node.material\x20does\x20not\x20have\x20a\x20materials\x20array.', this);
                        bf = bf['material']['materials'];
                        break;
                    case 'bones':
                        if (!bf['skeleton'])
                            return void console['error']('THREE.PropertyBinding:\x20Can\x20not\x20bind\x20to\x20bones\x20as\x20node\x20does\x20not\x20have\x20a\x20skeleton.', this);
                        bf = bf['skeleton']['bones'];
                        for (var bH = 0x0; bH < bf['length']; bH++)
                            if (bf[bH]['name'] === bG) {
                                bG = bH;
                                break;
                            }
                        break;
                    default:
                        if (void 0x0 === bf[bh])
                            return void console['error']('THREE.PropertyBinding:\x20Can\x20not\x20bind\x20to\x20objectName\x20of\x20node\x20undefined.', this);
                        bf = bf[bh];
                    }
                    if (void 0x0 !== bG) {
                        if (void 0x0 === bf[bG])
                            return void console['error']('THREE.PropertyBinding:\x20Trying\x20to\x20bind\x20to\x20objectIndex\x20of\x20objectName,\x20but\x20is\x20undefined.', this, bf);
                        bf = bf[bG];
                    }
                }
                var bI = bf[bi];
                if (void 0x0 !== bI) {
                    var bJ = this['Versioning']['None'];
                    this['targetObject'] = bf,
                    void 0x0 !== bf['needsUpdate'] ? bJ = this['Versioning']['NeedsUpdate'] : void 0x0 !== bf['matrixWorldNeedsUpdate'] && (bJ = this['Versioning']['MatrixWorldNeedsUpdate']);
                    var bK = this['BindingType']['Direct'];
                    if (void 0x0 !== bF) {
                        if ('morphTargetInfluences' === bi) {
                            if (!bf['geometry'])
                                return void console['error']('THREE.PropertyBinding:\x20Can\x20not\x20bind\x20to\x20morphTargetInfluences\x20because\x20node\x20does\x20not\x20have\x20a\x20geometry.', this);
                            if (bf['geometry']['isBufferGeometry']) {
                                if (!bf['geometry']['morphAttributes'])
                                    return void console['error']('THREE.PropertyBinding:\x20Can\x20not\x20bind\x20to\x20morphTargetInfluences\x20because\x20node\x20does\x20not\x20have\x20a\x20geometry.morphAttributes.', this);
                                for (bH = 0x0; bH < this['node']['geometry']['morphAttributes']['position']['length']; bH++)
                                    if (bf['geometry']['morphAttributes']['position'][bH]['name'] === bF) {
                                        bF = bH;
                                        break;
                                    }
                            } else {
                                if (!bf['geometry']['morphTargets'])
                                    return void console['error']('THREE.PropertyBinding:\x20Can\x20not\x20bind\x20to\x20morphTargetInfluences\x20because\x20node\x20does\x20not\x20have\x20a\x20geometry.morphTargets.', this);
                                for (bH = 0x0; bH < this['node']['geometry']['morphTargets']['length']; bH++)
                                    if (bf['geometry']['morphTargets'][bH]['name'] === bF) {
                                        bF = bH;
                                        break;
                                    }
                            }
                        }
                        bK = this['BindingType']['ArrayElement'],
                        this['resolvedProperty'] = bI,
                        this['propertyIndex'] = bF;
                    } else
                        void 0x0 !== bI['fromArray'] && void 0x0 !== bI['toArray'] ? (bK = this['BindingType']['HasFromToArray'],
                        this['resolvedProperty'] = bI) : Array['isArray'](bI) ? (bK = this['BindingType']['EntireArray'],
                        this['resolvedProperty'] = bI) : this['propertyName'] = bi;
                    this['getValue'] = this['GetterByBindingType'][bK],
                    this['setValue'] = this['SetterByBindingTypeAndVersioning'][bK][bJ];
                } else {
                    var bL = bg['nodeName'];
                    console['error']('THREE.PropertyBinding:\x20Trying\x20to\x20update\x20property\x20for\x20track:\x20' + bL + '.' + bi + '\x20but\x20it\x20wasn\x27t\x20found.', bf);
                }
            } else
                console['error']('THREE.PropertyBinding:\x20Trying\x20to\x20update\x20node\x20for\x20track:\x20' + this['path'] + '\x20but\x20it\x20wasn\x27t\x20found.');
        },
        'unbind': function() {
            this['node'] = null,
            this['getValue'] = this['_getValue_unbound'],
            this['setValue'] = this['_setValue_unbound'];
        }
    }),
    Object['assign'](aVY['prototype'], {
        '_getValue_unbound': aVY['prototype']['getValue'],
        '_setValue_unbound': aVY['prototype']['setValue']
    }),
    Object['assign'](aW2['prototype'], {
        'isAnimationObjectGroup': !0x0,
        'add': function() {
            for (var bf = this['_objects'], bg = bf['length'], bh = this['nCachedObjects_'], bi = this['_indicesByUUID'], bF = this['_paths'], bG = this['_parsedPaths'], bH = this['_bindings'], bI = bH['length'], bJ = void 0x0, bK = 0x0, bL = arguments['length']; bK !== bL; ++bK) {
                var bM = arguments[bK]
                  , bN = bM['uuid']
                  , bO = bi[bN];
                if (void 0x0 === bO) {
                    bO = bg++,
                    bi[bN] = bO,
                    bf['push'](bM);
                    for (var bP = 0x0, bQ = bI; bP !== bQ; ++bP)
                        bH[bP]['push'](new aVY(bM,bF[bP],bG[bP]));
                } else if (bO < bh) {
                    bJ = bf[bO];
                    var bR = --bh
                      , bS = bf[bR];
                    bi[bS['uuid']] = bO,
                    bf[bO] = bS,
                    bi[bN] = bR,
                    bf[bR] = bM;
                    for (bP = 0x0,
                    bQ = bI; bP !== bQ; ++bP) {
                        var bT = bH[bP]
                          , bU = bT[bR]
                          , bV = bT[bO];
                        bT[bO] = bU,
                        void 0x0 === bV && (bV = new aVY(bM,bF[bP],bG[bP])),
                        bT[bR] = bV;
                    }
                } else
                    bf[bO] !== bJ && console['error']('THREE.AnimationObjectGroup:\x20Different\x20objects\x20with\x20the\x20same\x20UUID\x20detected.\x20Clean\x20the\x20caches\x20or\x20recreate\x20your\x20infrastructure\x20when\x20reloading\x20scenes.');
            }
            this['nCachedObjects_'] = bh;
        },
        'remove': function() {
            for (var bf = this['_objects'], bg = this['nCachedObjects_'], bh = this['_indicesByUUID'], bi = this['_bindings'], bF = bi['length'], bG = 0x0, bH = arguments['length']; bG !== bH; ++bG) {
                var bI = arguments[bG]
                  , bJ = bI['uuid']
                  , bK = bh[bJ];
                if (void 0x0 !== bK && bK >= bg) {
                    var bL = bg++
                      , bM = bf[bL];
                    bh[bM['uuid']] = bK,
                    bf[bK] = bM,
                    bh[bJ] = bL,
                    bf[bL] = bI;
                    for (var bN = 0x0, bO = bF; bN !== bO; ++bN) {
                        var bP = bi[bN]
                          , bQ = bP[bL]
                          , bR = bP[bK];
                        bP[bK] = bQ,
                        bP[bL] = bR;
                    }
                }
            }
            this['nCachedObjects_'] = bg;
        },
        'uncache': function() {
            for (var bf = this['_objects'], bg = bf['length'], bh = this['nCachedObjects_'], bi = this['_indicesByUUID'], bF = this['_bindings'], bG = bF['length'], bH = 0x0, bI = arguments['length']; bH !== bI; ++bH) {
                var bJ = arguments[bH]['uuid']
                  , bK = bi[bJ];
                if (void 0x0 !== bK)
                    if (delete bi[bJ],
                    bK < bh) {
                        var bL = --bh
                          , bM = bf[bL]
                          , bN = bf[bS = --bg];
                        bi[bM['uuid']] = bK,
                        bf[bK] = bM,
                        bi[bN['uuid']] = bL,
                        bf[bL] = bN,
                        bf['pop']();
                        for (var bO = 0x0, bP = bG; bO !== bP; ++bO) {
                            var bQ = (bT = bF[bO])[bL]
                              , bR = bT[bS];
                            bT[bK] = bQ,
                            bT[bL] = bR,
                            bT['pop']();
                        }
                    } else {
                        var bS;
                        bi[(bN = bf[bS = --bg])['uuid']] = bK,
                        bf[bK] = bN,
                        bf['pop']();
                        for (bO = 0x0,
                        bP = bG; bO !== bP; ++bO) {
                            var bT;
                            (bT = bF[bO])[bK] = bT[bS],
                            bT['pop']();
                        }
                    }
            }
            this['nCachedObjects_'] = bh;
        },
        'subscribe_': function(bf, bg) {
            var bh = this['_bindingsIndicesByPath']
              , bi = bh[bf]
              , bF = this['_bindings'];
            if (void 0x0 !== bi)
                return bF[bi];
            var bG = this['_paths']
              , bH = this['_parsedPaths']
              , bI = this['_objects']
              , bJ = bI['length']
              , bK = this['nCachedObjects_']
              , bL = new Array(bJ);
            bi = bF['length'],
            bh[bf] = bi,
            bG['push'](bf),
            bH['push'](bg),
            bF['push'](bL);
            for (var bM = bK, bN = bI['length']; bM !== bN; ++bM) {
                var bO = bI[bM];
                bL[bM] = new aVY(bO,bf,bg);
            }
            return bL;
        },
        'unsubscribe_': function(bf) {
            var bg = this['_bindingsIndicesByPath']
              , bh = bg[bf];
            if (void 0x0 !== bh) {
                var bi = this['_paths']
                  , bF = this['_parsedPaths']
                  , bG = this['_bindings']
                  , bH = bG['length'] - 0x1
                  , bI = bG[bH];
                bg[bf[bH]] = bh,
                bG[bh] = bI,
                bG['pop'](),
                bF[bh] = bF[bH],
                bF['pop'](),
                bi[bh] = bi[bH],
                bi['pop']();
            }
        }
    }),
    Object['assign'](aW7['prototype'], {
        'play': function() {
            return this['_mixer']['_activateAction'](this),
            this;
        },
        'stop': function() {
            return this['_mixer']['_deactivateAction'](this),
            this['reset']();
        },
        'reset': function() {
            return this['paused'] = !0x1,
            this['enabled'] = !0x0,
            this['time'] = 0x0,
            this['_loopCount'] = -0x1,
            this['_startTime'] = null,
            this['stopFading']()['stopWarping']();
        },
        'isRunning': function() {
            return this['enabled'] && !this['paused'] && 0x0 !== this['timeScale'] && null === this['_startTime'] && this['_mixer']['_isActiveAction'](this);
        },
        'isScheduled': function() {
            return this['_mixer']['_isActiveAction'](this);
        },
        'startAt': function(bf) {
            return this['_startTime'] = bf,
            this;
        },
        'setLoop': function(bf, bg) {
            return this['loop'] = bf,
            this['repetitions'] = bg,
            this;
        },
        'setEffectiveWeight': function(bf) {
            return this['weight'] = bf,
            this['_effectiveWeight'] = this['enabled'] ? bf : 0x0,
            this['stopFading']();
        },
        'getEffectiveWeight': function() {
            return this['_effectiveWeight'];
        },
        'fadeIn': function(bf) {
            return this['_scheduleFading'](bf, 0x0, 0x1);
        },
        'fadeOut': function(bf) {
            return this['_scheduleFading'](bf, 0x1, 0x0);
        },
        'crossFadeFrom': function(bf, bg, bh) {
            if (bf['fadeOut'](bg),
            this['fadeIn'](bg),
            bh) {
                var bi = this['_clip']['duration']
                  , bF = bf['_clip']['duration']
                  , bG = bF / bi
                  , bH = bi / bF;
                bf['warp'](0x1, bG, bg),
                this['warp'](bH, 0x1, bg);
            }
            return this;
        },
        'crossFadeTo': function(bf, bg, bh) {
            return bf['crossFadeFrom'](this, bg, bh);
        },
        'stopFading': function() {
            var bf = this['_weightInterpolant'];
            return null !== bf && (this['_weightInterpolant'] = null,
            this['_mixer']['_takeBackControlInterpolant'](bf)),
            this;
        },
        'setEffectiveTimeScale': function(bf) {
            return this['timeScale'] = bf,
            this['_effectiveTimeScale'] = this['paused'] ? 0x0 : bf,
            this['stopWarping']();
        },
        'getEffectiveTimeScale': function() {
            return this['_effectiveTimeScale'];
        },
        'setDuration': function(bf) {
            return this['timeScale'] = this['_clip']['duration'] / bf,
            this['stopWarping']();
        },
        'syncWith': function(bf) {
            return this['time'] = bf['time'],
            this['timeScale'] = bf['timeScale'],
            this['stopWarping']();
        },
        'halt': function(bf) {
            return this['warp'](this['_effectiveTimeScale'], 0x0, bf);
        },
        'warp': function(bf, bg, bh) {
            var bi = this['_mixer']
              , bF = bi['time']
              , bG = this['_timeScaleInterpolant']
              , bH = this['timeScale'];
            null === bG && (bG = bi['_lendControlInterpolant'](),
            this['_timeScaleInterpolant'] = bG);
            var bI = bG['parameterPositions']
              , bJ = bG['sampleValues'];
            return bI[0x0] = bF,
            bI[0x1] = bF + bh,
            bJ[0x0] = bf / bH,
            bJ[0x1] = bg / bH,
            this;
        },
        'stopWarping': function() {
            var bf = this['_timeScaleInterpolant'];
            return null !== bf && (this['_timeScaleInterpolant'] = null,
            this['_mixer']['_takeBackControlInterpolant'](bf)),
            this;
        },
        'getMixer': function() {
            return this['_mixer'];
        },
        'getClip': function() {
            return this['_clip'];
        },
        'getRoot': function() {
            return this['_localRoot'] || this['_mixer']['_root'];
        },
        '_update': function(bf, bg, bh, bi) {
            if (this['enabled']) {
                var bF = this['_startTime'];
                if (null !== bF) {
                    var bG = (bf - bF) * bh;
                    if (bG < 0x0 || 0x0 === bh)
                        return;
                    this['_startTime'] = null,
                    bg = bh * bG;
                }
                bg *= this['_updateTimeScale'](bf);
                var bH = this['_updateTime'](bg)
                  , bI = this['_updateWeight'](bf);
                if (bI > 0x0)
                    for (var bJ = this['_interpolants'], bK = this['_propertyBindings'], bL = 0x0, bM = bJ['length']; bL !== bM; ++bL)
                        bJ[bL]['evaluate'](bH),
                        bK[bL]['accumulate'](bi, bI);
            } else
                this['_updateWeight'](bf);
        },
        '_updateWeight': function(bf) {
            var bg = 0x0;
            if (this['enabled']) {
                bg = this['weight'];
                var bh = this['_weightInterpolant'];
                if (null !== bh) {
                    var bi = bh['evaluate'](bf)[0x0];
                    bg *= bi,
                    bf > bh['parameterPositions'][0x1] && (this['stopFading'](),
                    0x0 === bi && (this['enabled'] = !0x1));
                }
            }
            return this['_effectiveWeight'] = bg,
            bg;
        },
        '_updateTimeScale': function(bf) {
            var bg = 0x0;
            if (!this['paused']) {
                bg = this['timeScale'];
                var bh = this['_timeScaleInterpolant'];
                if (null !== bh)
                    bg *= bh['evaluate'](bf)[0x0],
                    bf > bh['parameterPositions'][0x1] && (this['stopWarping'](),
                    0x0 === bg ? this['paused'] = !0x0 : this['timeScale'] = bg);
            }
            return this['_effectiveTimeScale'] = bg,
            bg;
        },
        '_updateTime': function(bf) {
            var bg = this['time'] + bf
              , bh = this['_clip']['duration']
              , bi = this['loop']
              , bF = this['_loopCount']
              , bG = bi === dG;
            if (0x0 === bf)
                return -0x1 === bF ? bg : bG && 0x1 == (0x1 & bF) ? bh - bg : bg;
            if (bi === dE) {
                -0x1 === bF && (this['_loopCount'] = 0x0,
                this['_setEndings'](!0x0, !0x0, !0x1));
                b3t: {
                    if (bg >= bh)
                        bg = bh;
                    else {
                        if (!(bg < 0x0)) {
                            this['time'] = bg;
                            break b3t;
                        }
                        bg = 0x0;
                    }
                    this['clampWhenFinished'] ? this['paused'] = !0x0 : this['enabled'] = !0x1,
                    this['time'] = bg,
                    this['_mixer']['dispatchEvent']({
                        'type': 'finished',
                        'action': this,
                        'direction': bf < 0x0 ? -0x1 : 0x1
                    });
                }
            } else {
                if (-0x1 === bF && (bf >= 0x0 ? (bF = 0x0,
                this['_setEndings'](!0x0, 0x0 === this['repetitions'], bG)) : this['_setEndings'](0x0 === this['repetitions'], !0x0, bG)),
                bg >= bh || bg < 0x0) {
                    var bH = Math['floor'](bg / bh);
                    bg -= bh * bH,
                    bF += Math['abs'](bH);
                    var bI = this['repetitions'] - bF;
                    if (bI <= 0x0)
                        this['clampWhenFinished'] ? this['paused'] = !0x0 : this['enabled'] = !0x1,
                        bg = bf > 0x0 ? bh : 0x0,
                        this['time'] = bg,
                        this['_mixer']['dispatchEvent']({
                            'type': 'finished',
                            'action': this,
                            'direction': bf > 0x0 ? 0x1 : -0x1
                        });
                    else {
                        if (0x1 === bI) {
                            var bJ = bf < 0x0;
                            this['_setEndings'](bJ, !bJ, bG);
                        } else
                            this['_setEndings'](!0x1, !0x1, bG);
                        this['_loopCount'] = bF,
                        this['time'] = bg,
                        this['_mixer']['dispatchEvent']({
                            'type': 'loop',
                            'action': this,
                            'loopDelta': bH
                        });
                    }
                } else
                    this['time'] = bg;
                if (bG && 0x1 == (0x1 & bF))
                    return bh - bg;
            }
            return bg;
        },
        '_setEndings': function(bf, bg, bh) {
            var bi = this['_interpolantSettings'];
            bh ? (bi['endingStart'] = dL,
            bi['endingEnd'] = dL) : (bi['endingStart'] = bf ? this['zeroSlopeAtStart'] ? dL : dK : dM,
            bi['endingEnd'] = bg ? this['zeroSlopeAtEnd'] ? dL : dK : dM);
        },
        '_scheduleFading': function(bf, bg, bh) {
            var bi = this['_mixer']
              , bF = bi['time']
              , bG = this['_weightInterpolant'];
            null === bG && (bG = bi['_lendControlInterpolant'](),
            this['_weightInterpolant'] = bG);
            var bH = bG['parameterPositions']
              , bI = bG['sampleValues'];
            return bH[0x0] = bF,
            bI[0x0] = bg,
            bH[0x1] = bF + bf,
            bI[0x1] = bh,
            this;
        }
    }),
    aWh['prototype'] = Object['assign'](Object['create'](bi['prototype']), {
        'constructor': aWh,
        '_bindAction': function(bf, bg) {
            var bh = bf['_localRoot'] || this['_root']
              , bi = bf['_clip']['tracks']
              , bF = bi['length']
              , bG = bf['_propertyBindings']
              , bH = bf['_interpolants']
              , bI = bh['uuid']
              , bJ = this['_bindingsByRootAndName']
              , bK = bJ[bI];
            void 0x0 === bK && (bK = {},
            bJ[bI] = bK);
            for (var bL = 0x0; bL !== bF; ++bL) {
                var bM = bi[bL]
                  , bN = bM['name']
                  , bO = bK[bN];
                if (void 0x0 !== bO)
                    bG[bL] = bO;
                else {
                    if (void 0x0 !== (bO = bG[bL])) {
                        null === bO['_cacheIndex'] && (++bO['referenceCount'],
                        this['_addInactiveBinding'](bO, bI, bN));
                        continue;
                    }
                    var bP = bg && bg['_propertyBindings'][bL]['binding']['parsedPath'];
                    ++(bO = new aUa(aVY['create'](bh, bN, bP),bM['ValueTypeName'],bM['getValueSize']()))['referenceCount'],
                    this['_addInactiveBinding'](bO, bI, bN),
                    bG[bL] = bO;
                }
                bH[bL]['resultBuffer'] = bO['buffer'];
            }
        },
        '_activateAction': function(bf) {
            if (!this['_isActiveAction'](bf)) {
                if (null === bf['_cacheIndex']) {
                    var bg = (bf['_localRoot'] || this['_root'])['uuid']
                      , bh = bf['_clip']['uuid']
                      , bi = this['_actionsByClip'][bh];
                    this['_bindAction'](bf, bi && bi['knownActions'][0x0]),
                    this['_addInactiveAction'](bf, bh, bg);
                }
                for (var bF = bf['_propertyBindings'], bG = 0x0, bH = bF['length']; bG !== bH; ++bG) {
                    var bI = bF[bG];
                    0x0 == bI['useCount']++ && (this['_lendBinding'](bI),
                    bI['saveOriginalState']());
                }
                this['_lendAction'](bf);
            }
        },
        '_deactivateAction': function(bf) {
            if (this['_isActiveAction'](bf)) {
                for (var bg = bf['_propertyBindings'], bh = 0x0, bi = bg['length']; bh !== bi; ++bh) {
                    var bF = bg[bh];
                    0x0 == --bF['useCount'] && (bF['restoreOriginalState'](),
                    this['_takeBackBinding'](bF));
                }
                this['_takeBackAction'](bf);
            }
        },
        '_initMemoryManager': function() {
            this['_actions'] = [],
            this['_nActiveActions'] = 0x0,
            this['_actionsByClip'] = {},
            this['_bindings'] = [],
            this['_nActiveBindings'] = 0x0,
            this['_bindingsByRootAndName'] = {},
            this['_controlInterpolants'] = [],
            this['_nActiveControlInterpolants'] = 0x0;
            var bf = this;
            this['stats'] = {
                'actions': {
                    get 'total'() {
                        return bf['_actions']['length'];
                    },
                    get 'inUse'() {
                        return bf['_nActiveActions'];
                    }
                },
                'bindings': {
                    get 'total'() {
                        return bf['_bindings']['length'];
                    },
                    get 'inUse'() {
                        return bf['_nActiveBindings'];
                    }
                },
                'controlInterpolants': {
                    get 'total'() {
                        return bf['_controlInterpolants']['length'];
                    },
                    get 'inUse'() {
                        return bf['_nActiveControlInterpolants'];
                    }
                }
            };
        },
        '_isActiveAction': function(bf) {
            var bg = bf['_cacheIndex'];
            return null !== bg && bg < this['_nActiveActions'];
        },
        '_addInactiveAction': function(bf, bg, bh) {
            var bi = this['_actions']
              , bF = this['_actionsByClip']
              , bG = bF[bg];
            if (void 0x0 === bG)
                bG = {
                    'knownActions': [bf],
                    'actionByRoot': {}
                },
                bf['_byClipCacheIndex'] = 0x0,
                bF[bg] = bG;
            else {
                var bH = bG['knownActions'];
                bf['_byClipCacheIndex'] = bH['length'],
                bH['push'](bf);
            }
            bf['_cacheIndex'] = bi['length'],
            bi['push'](bf),
            bG['actionByRoot'][bh] = bf;
        },
        '_removeInactiveAction': function(bf) {
            var bg = this['_actions']
              , bh = bg[bg['length'] - 0x1]
              , bi = bf['_cacheIndex'];
            bh['_cacheIndex'] = bi,
            bg[bi] = bh,
            bg['pop'](),
            bf['_cacheIndex'] = null;
            var bF = bf['_clip']['uuid']
              , bG = this['_actionsByClip']
              , bH = bG[bF]
              , bI = bH['knownActions']
              , bJ = bI[bI['length'] - 0x1]
              , bK = bf['_byClipCacheIndex'];
            bJ['_byClipCacheIndex'] = bK,
            bI[bK] = bJ,
            bI['pop'](),
            bf['_byClipCacheIndex'] = null,
            delete bH['actionByRoot'][(bf['_localRoot'] || this['_root'])['uuid']],
            0x0 === bI['length'] && delete bG[bF],
            this['_removeInactiveBindingsForAction'](bf);
        },
        '_removeInactiveBindingsForAction': function(bf) {
            for (var bg = bf['_propertyBindings'], bh = 0x0, bi = bg['length']; bh !== bi; ++bh) {
                var bF = bg[bh];
                0x0 == --bF['referenceCount'] && this['_removeInactiveBinding'](bF);
            }
        },
        '_lendAction': function(bf) {
            var bg = this['_actions']
              , bh = bf['_cacheIndex']
              , bi = this['_nActiveActions']++
              , bF = bg[bi];
            bf['_cacheIndex'] = bi,
            bg[bi] = bf,
            bF['_cacheIndex'] = bh,
            bg[bh] = bF;
        },
        '_takeBackAction': function(bf) {
            var bg = this['_actions']
              , bh = bf['_cacheIndex']
              , bi = --this['_nActiveActions']
              , bF = bg[bi];
            bf['_cacheIndex'] = bi,
            bg[bi] = bf,
            bF['_cacheIndex'] = bh,
            bg[bh] = bF;
        },
        '_addInactiveBinding': function(bf, bg, bh) {
            var bi = this['_bindingsByRootAndName']
              , bF = bi[bg]
              , bG = this['_bindings'];
            void 0x0 === bF && (bF = {},
            bi[bg] = bF),
            bF[bh] = bf,
            bf['_cacheIndex'] = bG['length'],
            bG['push'](bf);
        },
        '_removeInactiveBinding': function(bf) {
            var bg = this['_bindings']
              , bh = bf['binding']
              , bi = bh['rootNode']['uuid']
              , bF = bh['path']
              , bG = this['_bindingsByRootAndName']
              , bH = bG[bi]
              , bI = bg[bg['length'] - 0x1]
              , bJ = bf['_cacheIndex'];
            bI['_cacheIndex'] = bJ,
            bg[bJ] = bI,
            bg['pop'](),
            delete bH[bF];
            b4Z: {
                for (var bK in bH)
                    break b4Z;
                delete bG[bi];
            }
        },
        '_lendBinding': function(bf) {
            var bg = this['_bindings']
              , bh = bf['_cacheIndex']
              , bi = this['_nActiveBindings']++
              , bF = bg[bi];
            bf['_cacheIndex'] = bi,
            bg[bi] = bf,
            bF['_cacheIndex'] = bh,
            bg[bh] = bF;
        },
        '_takeBackBinding': function(bf) {
            var bg = this['_bindings']
              , bh = bf['_cacheIndex']
              , bi = --this['_nActiveBindings']
              , bF = bg[bi];
            bf['_cacheIndex'] = bi,
            bg[bi] = bf,
            bF['_cacheIndex'] = bh,
            bg[bh] = bF;
        },
        '_lendControlInterpolant': function() {
            var bf = this['_controlInterpolants']
              , bg = this['_nActiveControlInterpolants']++
              , bh = bf[bg];
            return void 0x0 === bh && ((bh = new axX(new Float32Array(0x2),new Float32Array(0x2),0x1,this['_controlInterpolantsResultBuffer']))['__cacheIndex'] = bg,
            bf[bg] = bh),
            bh;
        },
        '_takeBackControlInterpolant': function(bf) {
            var bg = this['_controlInterpolants']
              , bh = bf['__cacheIndex']
              , bi = --this['_nActiveControlInterpolants']
              , bF = bg[bi];
            bf['__cacheIndex'] = bi,
            bg[bi] = bf,
            bF['__cacheIndex'] = bh,
            bg[bh] = bF;
        },
        '_controlInterpolantsResultBuffer': new Float32Array(0x1),
        'clipAction': function(bf, bg) {
            var bh = bg || this['_root']
              , bi = bh['uuid']
              , bF = 'string' == typeof bf ? ayK['findByName'](bh, bf) : bf
              , bG = null !== bF ? bF['uuid'] : bf
              , bH = this['_actionsByClip'][bG]
              , bI = null;
            if (void 0x0 !== bH) {
                var bJ = bH['actionByRoot'][bi];
                if (void 0x0 !== bJ)
                    return bJ;
                bI = bH['knownActions'][0x0],
                null === bF && (bF = bI['_clip']);
            }
            if (null === bF)
                return null;
            var bK = new aW7(this,bF,bg);
            return this['_bindAction'](bK, bI),
            this['_addInactiveAction'](bK, bG, bi),
            bK;
        },
        'existingAction': function(bf, bg) {
            var bh = bg || this['_root']
              , bi = bh['uuid']
              , bF = 'string' == typeof bf ? ayK['findByName'](bh, bf) : bf
              , bG = bF ? bF['uuid'] : bf
              , bH = this['_actionsByClip'][bG];
            return void 0x0 !== bH && bH['actionByRoot'][bi] || null;
        },
        'stopAllAction': function() {
            var bf = this['_actions']
              , bg = this['_nActiveActions']
              , bh = this['_bindings']
              , bi = this['_nActiveBindings'];
            this['_nActiveActions'] = 0x0,
            this['_nActiveBindings'] = 0x0;
            for (var bF = 0x0; bF !== bg; ++bF)
                bf[bF]['reset']();
            for (bF = 0x0; bF !== bi; ++bF)
                bh[bF]['useCount'] = 0x0;
            return this;
        },
        'update': function(bf) {
            bf *= this['timeScale'];
            for (var bg = this['_actions'], bh = this['_nActiveActions'], bi = this['time'] += bf, bF = Math['sign'](bf), bG = this['_accuIndex'] ^= 0x1, bH = 0x0; bH !== bh; ++bH) {
                bg[bH]['_update'](bi, bf, bF, bG);
            }
            var bI = this['_bindings']
              , bJ = this['_nActiveBindings'];
            for (bH = 0x0; bH !== bJ; ++bH)
                bI[bH]['apply'](bG);
            return this;
        },
        'getRoot': function() {
            return this['_root'];
        },
        'uncacheClip': function(bf) {
            var bg = this['_actions']
              , bh = bf['uuid']
              , bi = this['_actionsByClip']
              , bF = bi[bh];
            if (void 0x0 !== bF) {
                for (var bG = bF['knownActions'], bH = 0x0, bI = bG['length']; bH !== bI; ++bH) {
                    var bJ = bG[bH];
                    this['_deactivateAction'](bJ);
                    var bK = bJ['_cacheIndex']
                      , bL = bg[bg['length'] - 0x1];
                    bJ['_cacheIndex'] = null,
                    bJ['_byClipCacheIndex'] = null,
                    bL['_cacheIndex'] = bK,
                    bg[bK] = bL,
                    bg['pop'](),
                    this['_removeInactiveBindingsForAction'](bJ);
                }
                delete bi[bh];
            }
        },
        'uncacheRoot': function(bf) {
            var bg = bf['uuid']
              , bh = this['_actionsByClip'];
            for (var bi in bh) {
                var bF = bh[bi]['actionByRoot'][bg];
                void 0x0 !== bF && (this['_deactivateAction'](bF),
                this['_removeInactiveAction'](bF));
            }
            var bG = this['_bindingsByRootAndName'][bg];
            if (void 0x0 !== bG)
                for (var bH in bG) {
                    var bI = bG[bH];
                    bI['restoreOriginalState'](),
                    this['_removeInactiveBinding'](bI);
                }
        },
        'uncacheAction': function(bf, bg) {
            var bh = this['existingAction'](bf, bg);
            null !== bh && (this['_deactivateAction'](bh),
            this['_removeInactiveAction'](bh));
        }
    }),
    aWj['prototype']['clone'] = function() {
        return new aWj(void 0x0 === this['value']['clone'] ? this['value'] : this['value']['clone']());
    }
    ,
    aWl['prototype'] = Object['assign'](Object['create'](aeb['prototype']), {
        'constructor': aWl,
        'isInstancedInterleavedBuffer': !0x0,
        'copy': function(bf) {
            return aeb['prototype']['copy']['call'](this, bf),
            this['meshPerAttribute'] = bf['meshPerAttribute'],
            this;
        }
    }),
    Object['assign'](aWp['prototype'], {
        'linePrecision': 0x1,
        'set': function(bf, bg) {
            this['ray']['set'](bf, bg);
        },
        'setFromCamera': function(bf, bg) {
            bg && bg['isPerspectiveCamera'] ? (this['ray']['origin']['setFromMatrixPosition'](bg['matrixWorld']),
            this['ray']['direction']['set'](bf['x'], bf['y'], 0.5)['unproject'](bg)['sub'](this['ray']['origin'])['normalize']()) : bg && bg['isOrthographicCamera'] ? (this['ray']['origin']['set'](bf['x'], bf['y'], (bg['near'] + bg['far']) / (bg['near'] - bg['far']))['unproject'](bg),
            this['ray']['direction']['set'](0x0, 0x0, -0x1)['transformDirection'](bg['matrixWorld'])) : console['error']('THREE.Raycaster:\x20Unsupported\x20camera\x20type.');
        },
        'intersectObject': function(bf, bg, bh) {
            var bi = bh || [];
            return aWx(bf, this, bi, bg),
            bi['sort'](aWu),
            bi;
        },
        'intersectObjects': function(bf, bg, bh) {
            var bi = bh || [];
            if (!0x1 === Array['isArray'](bf))
                return console['warn']('THREE.Raycaster.intersectObjects:\x20objects\x20is\x20not\x20an\x20Array.'),
                bi;
            for (var bF = 0x0, bG = bf['length']; bF < bG; bF++)
                aWx(bf[bF], this, bi, bg);
            return bi['sort'](aWu),
            bi;
        }
    }),
    Object['assign'](aWF['prototype'], {
        'set': function(bf, bg, bh) {
            return this['radius'] = bf,
            this['phi'] = bg,
            this['theta'] = bh,
            this;
        },
        'clone': function() {
            return new this['constructor']()['copy'](this);
        },
        'copy': function(bf) {
            return this['radius'] = bf['radius'],
            this['phi'] = bf['phi'],
            this['theta'] = bf['theta'],
            this;
        },
        'makeSafe': function() {
            return this['phi'] = Math['max'](0.000001, Math['min'](Math['PI'] - 0.000001, this['phi'])),
            this;
        },
        'setFromVector3': function(bf) {
            return this['setFromCartesianCoords'](bf['x'], bf['y'], bf['z']);
        },
        'setFromCartesianCoords': function(bf, bg, bh) {
            return this['radius'] = Math['sqrt'](bf * bf + bg * bg + bh * bh),
            0x0 === this['radius'] ? (this['theta'] = 0x0,
            this['phi'] = 0x0) : (this['theta'] = Math['atan2'](bf, bh),
            this['phi'] = Math['acos'](e2['clamp'](bg / this['radius'], -0x1, 0x1))),
            this;
        }
    }),
    Object['assign'](aWJ['prototype'], {
        'set': function(bf, bg, bh) {
            return this['radius'] = bf,
            this['theta'] = bg,
            this['y'] = bh,
            this;
        },
        'clone': function() {
            return new this['constructor']()['copy'](this);
        },
        'copy': function(bf) {
            return this['radius'] = bf['radius'],
            this['theta'] = bf['theta'],
            this['y'] = bf['y'],
            this;
        },
        'setFromVector3': function(bf) {
            return this['setFromCartesianCoords'](bf['x'], bf['y'], bf['z']);
        },
        'setFromCartesianCoords': function(bf, bg, bh) {
            return this['radius'] = Math['sqrt'](bf * bf + bh * bh),
            this['theta'] = Math['atan2'](bf, bh),
            this['y'] = bg,
            this;
        }
    }),
    Object['assign'](aWN['prototype'], {
        'set': function(bf, bg) {
            return this['min']['copy'](bf),
            this['max']['copy'](bg),
            this;
        },
        'setFromPoints': function(bf) {
            this['makeEmpty']();
            for (var bg = 0x0, bh = bf['length']; bg < bh; bg++)
                this['expandByPoint'](bf[bg]);
            return this;
        },
        'setFromCenterAndSize': function() {
            var bf = new eC();
            return function(bg, bh) {
                var bi = bf['copy'](bh)['multiplyScalar'](0.5);
                return this['min']['copy'](bg)['sub'](bi),
                this['max']['copy'](bg)['add'](bi),
                this;
            }
            ;
        }(),
        'clone': function() {
            return new this['constructor']()['copy'](this);
        },
        'copy': function(bf) {
            return this['min']['copy'](bf['min']),
            this['max']['copy'](bf['max']),
            this;
        },
        'makeEmpty': function() {
            return this['min']['x'] = this['min']['y'] = 0x1 / 0x0,
            this['max']['x'] = this['max']['y'] = -0x1 / 0x0,
            this;
        },
        'isEmpty': function() {
            return this['max']['x'] < this['min']['x'] || this['max']['y'] < this['min']['y'];
        },
        'getCenter': function(bf) {
            return void 0x0 === bf && (console['warn']('THREE.Box2:\x20.getCenter()\x20target\x20is\x20now\x20required'),
            bf = new eC()),
            this['isEmpty']() ? bf['set'](0x0, 0x0) : bf['addVectors'](this['min'], this['max'])['multiplyScalar'](0.5);
        },
        'getSize': function(bf) {
            return void 0x0 === bf && (console['warn']('THREE.Box2:\x20.getSize()\x20target\x20is\x20now\x20required'),
            bf = new eC()),
            this['isEmpty']() ? bf['set'](0x0, 0x0) : bf['subVectors'](this['max'], this['min']);
        },
        'expandByPoint': function(bf) {
            return this['min']['min'](bf),
            this['max']['max'](bf),
            this;
        },
        'expandByVector': function(bf) {
            return this['min']['sub'](bf),
            this['max']['add'](bf),
            this;
        },
        'expandByScalar': function(bf) {
            return this['min']['addScalar'](-bf),
            this['max']['addScalar'](bf),
            this;
        },
        'containsPoint': function(bf) {
            return !(bf['x'] < this['min']['x'] || bf['x'] > this['max']['x'] || bf['y'] < this['min']['y'] || bf['y'] > this['max']['y']);
        },
        'containsBox': function(bf) {
            return this['min']['x'] <= bf['min']['x'] && bf['max']['x'] <= this['max']['x'] && this['min']['y'] <= bf['min']['y'] && bf['max']['y'] <= this['max']['y'];
        },
        'getParameter': function(bf, bg) {
            return void 0x0 === bg && (console['warn']('THREE.Box2:\x20.getParameter()\x20target\x20is\x20now\x20required'),
            bg = new eC()),
            bg['set']((bf['x'] - this['min']['x']) / (this['max']['x'] - this['min']['x']), (bf['y'] - this['min']['y']) / (this['max']['y'] - this['min']['y']));
        },
        'intersectsBox': function(bf) {
            return !(bf['max']['x'] < this['min']['x'] || bf['min']['x'] > this['max']['x'] || bf['max']['y'] < this['min']['y'] || bf['min']['y'] > this['max']['y']);
        },
        'clampPoint': function(bf, bg) {
            return void 0x0 === bg && (console['warn']('THREE.Box2:\x20.clampPoint()\x20target\x20is\x20now\x20required'),
            bg = new eC()),
            bg['copy'](bf)['clamp'](this['min'], this['max']);
        },
        'distanceToPoint': function() {
            var bf = new eC();
            return function(bg) {
                return bf['copy'](bg)['clamp'](this['min'], this['max'])['sub'](bg)['length']();
            }
            ;
        }(),
        'intersect': function(bf) {
            return this['min']['max'](bf['min']),
            this['max']['min'](bf['max']),
            this;
        },
        'union': function(bf) {
            return this['min']['min'](bf['min']),
            this['max']['max'](bf['max']),
            this;
        },
        'translate': function(bf) {
            return this['min']['add'](bf),
            this['max']['add'](bf),
            this;
        },
        'equals': function(bf) {
            return bf['min']['equals'](this['min']) && bf['max']['equals'](this['max']);
        }
    }),
    Object['assign'](aWQ['prototype'], {
        'set': function(bf, bg) {
            return this['start']['copy'](bf),
            this['end']['copy'](bg),
            this;
        },
        'clone': function() {
            return new this['constructor']()['copy'](this);
        },
        'copy': function(bf) {
            return this['start']['copy'](bf['start']),
            this['end']['copy'](bf['end']),
            this;
        },
        'getCenter': function(bf) {
            return void 0x0 === bf && (console['warn']('THREE.Line3:\x20.getCenter()\x20target\x20is\x20now\x20required'),
            bf = new eK()),
            bf['addVectors'](this['start'], this['end'])['multiplyScalar'](0.5);
        },
        'delta': function(bf) {
            return void 0x0 === bf && (console['warn']('THREE.Line3:\x20.delta()\x20target\x20is\x20now\x20required'),
            bf = new eK()),
            bf['subVectors'](this['end'], this['start']);
        },
        'distanceSq': function() {
            return this['start']['distanceToSquared'](this['end']);
        },
        'distance': function() {
            return this['start']['distanceTo'](this['end']);
        },
        'at': function(bf, bg) {
            return void 0x0 === bg && (console['warn']('THREE.Line3:\x20.at()\x20target\x20is\x20now\x20required'),
            bg = new eK()),
            this['delta'](bg)['multiplyScalar'](bf)['add'](this['start']);
        },
        'closestPointToPointParameter': (aVN = new eK(),
        aVO = new eK(),
        function(bf, bg) {
            aVN['subVectors'](bf, this['start']),
            aVO['subVectors'](this['end'], this['start']);
            var bh = aVO['dot'](aVO)
              , bi = aVO['dot'](aVN) / bh;
            return bg && (bi = e2['clamp'](bi, 0x0, 0x1)),
            bi;
        }
        ),
        'closestPointToPoint': function(bf, bg, bh) {
            var bi = this['closestPointToPointParameter'](bf, bg);
            return void 0x0 === bh && (console['warn']('THREE.Line3:\x20.closestPointToPoint()\x20target\x20is\x20now\x20required'),
            bh = new eK()),
            this['delta'](bh)['multiplyScalar'](bi)['add'](this['start']);
        },
        'applyMatrix4': function(bf) {
            return this['start']['applyMatrix4'](bf),
            this['end']['applyMatrix4'](bf),
            this;
        },
        'equals': function(bf) {
            return bf['start']['equals'](this['start']) && bf['end']['equals'](this['end']);
        }
    }),
    aWT['prototype'] = Object['create'](yT['prototype']),
    aWT['prototype']['constructor'] = aWT,
    aWT['prototype']['isImmediateRenderObject'] = !0x0,
    aWV['prototype'] = Object['create'](aeE['prototype']),
    aWV['prototype']['constructor'] = aWV,
    aWV['prototype']['update'] = function() {
        var bf = new eK()
          , bg = new eK()
          , bh = new eO();
        return function() {
            var bi = ['a', 'b', 'c'];
            this['object']['updateMatrixWorld'](!0x0),
            bh['getNormalMatrix'](this['object']['matrixWorld']);
            var bF = this['object']['matrixWorld']
              , bG = this['geometry']['attributes']['position']
              , bH = this['object']['geometry'];
            if (bH && bH['isGeometry'])
                for (var bI = bH['vertices'], bJ = bH['faces'], bK = 0x0, bL = 0x0, bM = bJ['length']; bL < bM; bL++)
                    for (var bN = bJ[bL], bO = 0x0, bP = bN['vertexNormals']['length']; bO < bP; bO++) {
                        var bQ = bI[bN[bi[bO]]]
                          , bR = bN['vertexNormals'][bO];
                        bf['copy'](bQ)['applyMatrix4'](bF),
                        bg['copy'](bR)['applyMatrix3'](bh)['normalize']()['multiplyScalar'](this['size'])['add'](bf),
                        bG['setXYZ'](bK, bf['x'], bf['y'], bf['z']),
                        bK += 0x1,
                        bG['setXYZ'](bK, bg['x'], bg['y'], bg['z']),
                        bK += 0x1;
                    }
            else if (bH && bH['isBufferGeometry']) {
                var bS = bH['attributes']['position']
                  , bT = bH['attributes']['normal'];
                for (bK = 0x0,
                bO = 0x0,
                bP = bS['count']; bO < bP; bO++)
                    bf['set'](bS['getX'](bO), bS['getY'](bO), bS['getZ'](bO))['applyMatrix4'](bF),
                    bg['set'](bT['getX'](bO), bT['getY'](bO), bT['getZ'](bO)),
                    bg['applyMatrix3'](bh)['normalize']()['multiplyScalar'](this['size'])['add'](bf),
                    bG['setXYZ'](bK, bf['x'], bf['y'], bf['z']),
                    bK += 0x1,
                    bG['setXYZ'](bK, bg['x'], bg['y'], bg['z']),
                    bK += 0x1;
            }
            bG['needsUpdate'] = !0x0;
        }
        ;
    }(),
    aX6['prototype'] = Object['create'](yT['prototype']),
    aX6['prototype']['constructor'] = aX6,
    aX6['prototype']['dispose'] = function() {
        this['cone']['geometry']['dispose'](),
        this['cone']['material']['dispose']();
    }
    ,
    aX6['prototype']['update'] = function() {
        var bf = new eK();
        return function() {
            this['light']['updateMatrixWorld']();
            var bg = this['light']['distance'] ? this['light']['distance'] : 0x3e8
              , bh = bg * Math['tan'](this['light']['angle']);
            this['cone']['scale']['set'](bh, bh, bg),
            bf['setFromMatrixPosition'](this['light']['target']['matrixWorld']),
            this['cone']['lookAt'](bf),
            void 0x0 !== this['color'] ? this['cone']['material']['color']['set'](this['color']) : this['cone']['material']['color']['copy'](this['light']['color']);
        }
        ;
    }(),
    aXg['prototype'] = Object['create'](aeE['prototype']),
    aXg['prototype']['constructor'] = aXg,
    aXg['prototype']['updateMatrixWorld'] = function() {
        var bf = new eK()
          , bg = new mR()
          , bh = new mR();
        return function(bi) {
            var bF = this['bones']
              , bG = this['geometry']
              , bH = bG['getAttribute']('position');
            bh['getInverse'](this['root']['matrixWorld']);
            for (var bI = 0x0, bJ = 0x0; bI < bF['length']; bI++) {
                var bK = bF[bI];
                bK['parent'] && bK['parent']['isBone'] && (bg['multiplyMatrices'](bh, bK['matrixWorld']),
                bf['setFromMatrixPosition'](bg),
                bH['setXYZ'](bJ, bf['x'], bf['y'], bf['z']),
                bg['multiplyMatrices'](bh, bK['parent']['matrixWorld']),
                bf['setFromMatrixPosition'](bg),
                bH['setXYZ'](bJ + 0x1, bf['x'], bf['y'], bf['z']),
                bJ += 0x2);
            }
            bG['getAttribute']('position')['needsUpdate'] = !0x0,
            yT['prototype']['updateMatrixWorld']['call'](this, bi);
        }
        ;
    }(),
    aXu['prototype'] = Object['create'](KY['prototype']),
    aXu['prototype']['constructor'] = aXu,
    aXu['prototype']['dispose'] = function() {
        this['geometry']['dispose'](),
        this['material']['dispose']();
    }
    ,
    aXu['prototype']['update'] = function() {
        void 0x0 !== this['color'] ? this['material']['color']['set'](this['color']) : this['material']['color']['copy'](this['light']['color']);
    }
    ,
    aXA['prototype'] = Object['create'](aeA['prototype']),
    aXA['prototype']['constructor'] = aXA,
    aXA['prototype']['update'] = function() {
        if (this['scale']['set'](0.5 * this['light']['width'], 0.5 * this['light']['height'], 0x1),
        void 0x0 !== this['color'])
            this['material']['color']['set'](this['color']),
            this['children'][0x0]['material']['color']['set'](this['color']);
        else {
            this['material']['color']['copy'](this['light']['color'])['multiplyScalar'](this['light']['intensity']);
            var bf = this['material']['color']
              , bg = Math['max'](bf['r'], bf['g'], bf['b']);
            bg > 0x1 && bf['multiplyScalar'](0x1 / bg),
            this['children'][0x0]['material']['color']['copy'](this['material']['color']);
        }
    }
    ,
    aXA['prototype']['dispose'] = function() {
        this['geometry']['dispose'](),
        this['material']['dispose'](),
        this['children'][0x0]['geometry']['dispose'](),
        this['children'][0x0]['material']['dispose']();
    }
    ,
    aXG['prototype'] = Object['create'](yT['prototype']),
    aXG['prototype']['constructor'] = aXG,
    aXG['prototype']['dispose'] = function() {
        this['children'][0x0]['geometry']['dispose'](),
        this['children'][0x0]['material']['dispose']();
    }
    ,
    aXG['prototype']['update'] = function() {
        var bf = new eK()
          , bg = new w7()
          , bh = new w7();
        return function() {
            var bi = this['children'][0x0];
            if (void 0x0 !== this['color'])
                this['material']['color']['set'](this['color']);
            else {
                var bF = bi['geometry']['getAttribute']('color');
                bg['copy'](this['light']['color']),
                bh['copy'](this['light']['groundColor']);
                for (var bG = 0x0, bH = bF['count']; bG < bH; bG++) {
                    var bI = bG < bH / 0x2 ? bg : bh;
                    bF['setXYZ'](bG, bI['r'], bI['g'], bI['b']);
                }
                bF['needsUpdate'] = !0x0;
            }
            bi['lookAt'](bf['setFromMatrixPosition'](this['light']['matrixWorld'])['negate']());
        }
        ;
    }(),
    aXN['prototype'] = Object['create'](KY['prototype']),
    aXN['prototype']['constructor'] = aXN,
    aXN['prototype']['dispose'] = function() {
        this['geometry']['dispose'](),
        this['material']['dispose']();
    }
    ,
    aXN['prototype']['onBeforeRender'] = function() {
        this['position']['copy'](this['lightProbe']['position']),
        this['scale']['set'](0x1, 0x1, 0x1)['multiplyScalar'](this['size']),
        this['material']['uniforms']['intensity']['value'] = this['lightProbe']['intensity'];
    }
    ,
    aXT['prototype'] = Object['assign'](Object['create'](aeE['prototype']), {
        'constructor': aXT,
        'copy': function(bf) {
            return aeE['prototype']['copy']['call'](this, bf),
            this['geometry']['copy'](bf['geometry']),
            this['material']['copy'](bf['material']),
            this;
        },
        'clone': function() {
            return new this['constructor']()['copy'](this);
        }
    }),
    aY9['prototype'] = Object['create'](aeE['prototype']),
    aY9['prototype']['constructor'] = aY9,
    aYr['prototype'] = Object['create'](aeA['prototype']),
    aYr['prototype']['constructor'] = aYr,
    aYr['prototype']['update'] = function() {
        var bf, bg, bh = this['audio'], bi = this['range'], bF = this['divisionsInnerAngle'], bG = this['divisionsOuterAngle'], bH = e2['degToRad'](bh['panner']['coneInnerAngle']), bI = e2['degToRad'](bh['panner']['coneOuterAngle']), bJ = bH / 0x2, bK = bI / 0x2, bL = 0x0, bM = 0x0, bN = this['geometry'], bO = bN['attributes']['position'];
        function bP(bh, bF, bG, bH) {
            var bI = (bF - bh) / bG;
            for (bO['setXYZ'](bL, 0x0, 0x0, 0x0),
            bM++,
            bf = bh; bf < bF; bf += bI)
                bg = bL + bM,
                bO['setXYZ'](bg, Math['sin'](bf) * bi, 0x0, Math['cos'](bf) * bi),
                bO['setXYZ'](bg + 0x1, Math['sin'](Math['min'](bf + bI, bF)) * bi, 0x0, Math['cos'](Math['min'](bf + bI, bF)) * bi),
                bO['setXYZ'](bg + 0x2, 0x0, 0x0, 0x0),
                bM += 0x3;
            bN['addGroup'](bL, bM, bH),
            bL += bM,
            bM = 0x0;
        }
        bN['clearGroups'](),
        bP(-bK, -bJ, bG, 0x0),
        bP(-bJ, bJ, bF, 0x1),
        bP(bJ, bK, bG, 0x0),
        bO['needsUpdate'] = !0x0,
        bH === bI && (this['material'][0x0]['visible'] = !0x1);
    }
    ,
    aYr['prototype']['dispose'] = function() {
        this['geometry']['dispose'](),
        this['material'][0x0]['dispose'](),
        this['material'][0x1]['dispose']();
    }
    ,
    aYB['prototype'] = Object['create'](aeE['prototype']),
    aYB['prototype']['constructor'] = aYB,
    aYB['prototype']['update'] = function() {
        var bf = new eK()
          , bg = new eK()
          , bh = new eO();
        return function() {
            this['object']['updateMatrixWorld'](!0x0),
            bh['getNormalMatrix'](this['object']['matrixWorld']);
            for (var bi = this['object']['matrixWorld'], bF = this['geometry']['attributes']['position'], bG = this['object']['geometry'], bH = bG['vertices'], bI = bG['faces'], bJ = 0x0, bK = 0x0, bL = bI['length']; bK < bL; bK++) {
                var bM = bI[bK]
                  , bN = bM['normal'];
                bf['copy'](bH[bM['a']])['add'](bH[bM['b']])['add'](bH[bM['c']])['divideScalar'](0x3)['applyMatrix4'](bi),
                bg['copy'](bN)['applyMatrix3'](bh)['normalize']()['multiplyScalar'](this['size'])['add'](bf),
                bF['setXYZ'](bJ, bf['x'], bf['y'], bf['z']),
                bJ += 0x1,
                bF['setXYZ'](bJ, bg['x'], bg['y'], bg['z']),
                bJ += 0x1;
            }
            bF['needsUpdate'] = !0x0;
        }
        ;
    }(),
    aYM['prototype'] = Object['create'](yT['prototype']),
    aYM['prototype']['constructor'] = aYM,
    aYM['prototype']['dispose'] = function() {
        this['lightPlane']['geometry']['dispose'](),
        this['lightPlane']['material']['dispose'](),
        this['targetLine']['geometry']['dispose'](),
        this['targetLine']['material']['dispose']();
    }
    ,
    aYM['prototype']['update'] = function() {
        var bf = new eK()
          , bg = new eK()
          , bh = new eK();
        return function() {
            bf['setFromMatrixPosition'](this['light']['matrixWorld']),
            bg['setFromMatrixPosition'](this['light']['target']['matrixWorld']),
            bh['subVectors'](bg, bf),
            this['lightPlane']['lookAt'](bg),
            void 0x0 !== this['color'] ? (this['lightPlane']['material']['color']['set'](this['color']),
            this['targetLine']['material']['color']['set'](this['color'])) : (this['lightPlane']['material']['color']['copy'](this['light']['color']),
            this['targetLine']['material']['color']['copy'](this['light']['color'])),
            this['targetLine']['lookAt'](bg),
            this['targetLine']['scale']['z'] = bh['length']();
        }
        ;
    }(),
    aYS['prototype'] = Object['create'](aeE['prototype']),
    aYS['prototype']['constructor'] = aYS,
    aYS['prototype']['update'] = function() {
        var bf, bg, bh = new eK(), bi = new a67();
        function bF(bF, bG, bH, bI) {
            bh['set'](bG, bH, bI)['unproject'](bi);
            var bJ = bg[bF];
            if (void 0x0 !== bJ)
                for (var bK = bf['getAttribute']('position'), bL = 0x0, bM = bJ['length']; bL < bM; bL++)
                    bK['setXYZ'](bJ[bL], bh['x'], bh['y'], bh['z']);
        }
        return function() {
            bf = this['geometry'],
            bg = this['pointMap'];
            bi['projectionMatrixInverse']['copy'](this['camera']['projectionMatrixInverse']),
            bF('c', 0x0, 0x0, -0x1),
            bF('t', 0x0, 0x0, 0x1),
            bF('n1', -0x1, -0x1, -0x1),
            bF('n2', 0x1, -0x1, -0x1),
            bF('n3', -0x1, 0x1, -0x1),
            bF('n4', 0x1, 0x1, -0x1),
            bF('f1', -0x1, -0x1, 0x1),
            bF('f2', 0x1, -0x1, 0x1),
            bF('f3', -0x1, 0x1, 0x1),
            bF('f4', 0x1, 0x1, 0x1),
            bF('u1', 0.7, 1.1, -0x1),
            bF('u2', -0.7, 1.1, -0x1),
            bF('u3', 0x0, 0x2, -0x1),
            bF('cf1', -0x1, 0x0, 0x1),
            bF('cf2', 0x1, 0x0, 0x1),
            bF('cf3', 0x0, -0x1, 0x1),
            bF('cf4', 0x0, 0x1, 0x1),
            bF('cn1', -0x1, 0x0, -0x1),
            bF('cn2', 0x1, 0x0, -0x1),
            bF('cn3', 0x0, -0x1, -0x1),
            bF('cn4', 0x0, 0x1, -0x1),
            bf['getAttribute']('position')['needsUpdate'] = !0x0;
        }
        ;
    }(),
    aZb['prototype'] = Object['create'](aeE['prototype']),
    aZb['prototype']['constructor'] = aZb,
    aZb['prototype']['update'] = function() {
        var bf = new mB();
        return function(bg) {
            if (void 0x0 !== bg && console['warn']('THREE.BoxHelper:\x20.update()\x20has\x20no\x20longer\x20arguments.'),
            void 0x0 !== this['object'] && bf['setFromObject'](this['object']),
            !bf['isEmpty']()) {
                var bh = bf['min']
                  , bi = bf['max']
                  , bF = this['geometry']['attributes']['position']
                  , bG = bF['array'];
                bG[0x0] = bi['x'],
                bG[0x1] = bi['y'],
                bG[0x2] = bi['z'],
                bG[0x3] = bh['x'],
                bG[0x4] = bi['y'],
                bG[0x5] = bi['z'],
                bG[0x6] = bh['x'],
                bG[0x7] = bh['y'],
                bG[0x8] = bi['z'],
                bG[0x9] = bi['x'],
                bG[0xa] = bh['y'],
                bG[0xb] = bi['z'],
                bG[0xc] = bi['x'],
                bG[0xd] = bi['y'],
                bG[0xe] = bh['z'],
                bG[0xf] = bh['x'],
                bG[0x10] = bi['y'],
                bG[0x11] = bh['z'],
                bG[0x12] = bh['x'],
                bG[0x13] = bh['y'],
                bG[0x14] = bh['z'],
                bG[0x15] = bi['x'],
                bG[0x16] = bh['y'],
                bG[0x17] = bh['z'],
                bF['needsUpdate'] = !0x0,
                this['geometry']['computeBoundingSphere']();
            }
        }
        ;
    }(),
    aZb['prototype']['setFromObject'] = function(bf) {
        return this['object'] = bf,
        this['update'](),
        this;
    }
    ,
    aZb['prototype']['copy'] = function(bf) {
        return aeE['prototype']['copy']['call'](this, bf),
        this['object'] = bf['object'],
        this;
    }
    ,
    aZb['prototype']['clone'] = function() {
        return new this['constructor']()['copy'](this);
    }
    ,
    aZh['prototype'] = Object['create'](aeE['prototype']),
    aZh['prototype']['constructor'] = aZh,
    aZh['prototype']['updateMatrixWorld'] = function(bf) {
        var bg = this['box'];
        bg['isEmpty']() || (bg['getCenter'](this['position']),
        bg['getSize'](this['scale']),
        this['scale']['multiplyScalar'](0.5),
        yT['prototype']['updateMatrixWorld']['call'](this, bf));
    }
    ,
    aZn['prototype'] = Object['create'](aeA['prototype']),
    aZn['prototype']['constructor'] = aZn,
    aZn['prototype']['updateMatrixWorld'] = function(bf) {
        var bg = -this['plane']['constant'];
        Math['abs'](bg) < 1e-8 && (bg = 1e-8),
        this['scale']['set'](0.5 * this['size'], 0.5 * this['size'], bg),
        this['children'][0x0]['material']['side'] = bg < 0x0 ? bU : bT,
        this['lookAt'](this['plane']['normal']),
        yT['prototype']['updateMatrixWorld']['call'](this, bf);
    }
    ,
    aZu['prototype'] = Object['create'](yT['prototype']),
    aZu['prototype']['constructor'] = aZu,
    aZu['prototype']['setDirection'] = (aVS = new eK(),
    function(bf) {
        bf['y'] > 0.99999 ? this['quaternion']['set'](0x0, 0x0, 0x0, 0x1) : bf['y'] < -0.99999 ? this['quaternion']['set'](0x1, 0x0, 0x0, 0x0) : (aVS['set'](bf['z'], 0x0, -bf['x'])['normalize'](),
        aVR = Math['acos'](bf['y']),
        this['quaternion']['setFromAxisAngle'](aVS, aVR));
    }
    ),
    aZu['prototype']['setLength'] = function(bf, bg, bh) {
        void 0x0 === bg && (bg = 0.2 * bf),
        void 0x0 === bh && (bh = 0.2 * bg),
        this['line']['scale']['set'](0x1, Math['max'](0x0, bf - bg), 0x1),
        this['line']['updateMatrix'](),
        this['cone']['scale']['set'](bh, bg, bh),
        this['cone']['position']['y'] = bf,
        this['cone']['updateMatrix']();
    }
    ,
    aZu['prototype']['setColor'] = function(bf) {
        this['line']['material']['color']['copy'](bf),
        this['cone']['material']['color']['copy'](bf);
    }
    ,
    aZu['prototype']['copy'] = function(bf) {
        return yT['prototype']['copy']['call'](this, bf, !0x1),
        this['line']['copy'](bf['line']),
        this['cone']['copy'](bf['cone']),
        this;
    }
    ,
    aZu['prototype']['clone'] = function() {
        return new this['constructor']()['copy'](this);
    }
    ,
    aZB['prototype'] = Object['create'](aeE['prototype']),
    aZB['prototype']['constructor'] = aZB;
    var b9a = 0x0
      , b9b = 0x1;
    function b9c(bf) {
        return console['warn']('THREE.MeshFaceMaterial\x20has\x20been\x20removed.\x20Use\x20an\x20Array\x20instead.'),
        bf;
    }
    function b9e(bf) {
        return void 0x0 === bf && (bf = []),
        console['warn']('THREE.MultiMaterial\x20has\x20been\x20removed.\x20Use\x20an\x20Array\x20instead.'),
        bf['isMultiMaterial'] = !0x0,
        bf['materials'] = bf,
        bf['clone'] = function() {
            return bf['slice']();
        }
        ,
        bf;
    }
    function b9g(bf, bg) {
        return console['warn']('THREE.PointCloud\x20has\x20been\x20renamed\x20to\x20THREE.Points.'),
        new aeM(bf,bg);
    }
    function b9j(bf) {
        return console['warn']('THREE.Particle\x20has\x20been\x20renamed\x20to\x20THREE.Sprite.'),
        new ael(bf);
    }
    function b9l(bf, bg) {
        return console['warn']('THREE.ParticleSystem\x20has\x20been\x20renamed\x20to\x20THREE.Points.'),
        new aeM(bf,bg);
    }
    function b9o(bf) {
        return console['warn']('THREE.PointCloudMaterial\x20has\x20been\x20renamed\x20to\x20THREE.PointsMaterial.'),
        new aeK(bf);
    }
    function b9q(bf) {
        return console['warn']('THREE.ParticleBasicMaterial\x20has\x20been\x20renamed\x20to\x20THREE.PointsMaterial.'),
        new aeK(bf);
    }
    function b9s(bf) {
        return console['warn']('THREE.ParticleSystemMaterial\x20has\x20been\x20renamed\x20to\x20THREE.PointsMaterial.'),
        new aeK(bf);
    }
    function b9u(bf, bg, bh) {
        return console['warn']('THREE.Vertex\x20has\x20been\x20removed.\x20Use\x20THREE.Vector3\x20instead.'),
        new eK(bf,bg,bh);
    }
    function b9y(bf, bg) {
        return console['warn']('THREE.DynamicBufferAttribute\x20has\x20been\x20removed.\x20Use\x20new\x20THREE.BufferAttribute().setDynamic(\x20true\x20)\x20instead.'),
        new AI(bf,bg)['setDynamic'](!0x0);
    }
    function b9B(bf, bg) {
        return console['warn']('THREE.Int8Attribute\x20has\x20been\x20removed.\x20Use\x20new\x20THREE.Int8BufferAttribute()\x20instead.'),
        new AM(bf,bg);
    }
    function b9E(bf, bg) {
        return console['warn']('THREE.Uint8Attribute\x20has\x20been\x20removed.\x20Use\x20new\x20THREE.Uint8BufferAttribute()\x20instead.'),
        new AQ(bf,bg);
    }
    function b9H(bf, bg) {
        return console['warn']('THREE.Uint8ClampedAttribute\x20has\x20been\x20removed.\x20Use\x20new\x20THREE.Uint8ClampedBufferAttribute()\x20instead.'),
        new AU(bf,bg);
    }
    function b9K(bf, bg) {
        return console['warn']('THREE.Int16Attribute\x20has\x20been\x20removed.\x20Use\x20new\x20THREE.Int16BufferAttribute()\x20instead.'),
        new AY(bf,bg);
    }
    function b9N(bf, bg) {
        return console['warn']('THREE.Uint16Attribute\x20has\x20been\x20removed.\x20Use\x20new\x20THREE.Uint16BufferAttribute()\x20instead.'),
        new B2(bf,bg);
    }
    function b9Q(bf, bg) {
        return console['warn']('THREE.Int32Attribute\x20has\x20been\x20removed.\x20Use\x20new\x20THREE.Int32BufferAttribute()\x20instead.'),
        new B6(bf,bg);
    }
    function b9T(bf, bg) {
        return console['warn']('THREE.Uint32Attribute\x20has\x20been\x20removed.\x20Use\x20new\x20THREE.Uint32BufferAttribute()\x20instead.'),
        new Ba(bf,bg);
    }
    function b9W(bf, bg) {
        return console['warn']('THREE.Float32Attribute\x20has\x20been\x20removed.\x20Use\x20new\x20THREE.Float32BufferAttribute()\x20instead.'),
        new Be(bf,bg);
    }
    function b9Z(bf, bg) {
        return console['warn']('THREE.Float64Attribute\x20has\x20been\x20removed.\x20Use\x20new\x20THREE.Float64BufferAttribute()\x20instead.'),
        new Bi(bf,bg);
    }
    function ba2(bf) {
        console['warn']('THREE.ClosedSplineCurve3\x20has\x20been\x20deprecated.\x20Use\x20THREE.CatmullRomCurve3\x20instead.'),
        aGw['call'](this, bf),
        this['type'] = 'catmullrom',
        this['closed'] = !0x0;
    }
    function ba4(bf) {
        console['warn']('THREE.SplineCurve3\x20has\x20been\x20deprecated.\x20Use\x20THREE.CatmullRomCurve3\x20instead.'),
        aGw['call'](this, bf),
        this['type'] = 'catmullrom';
    }
    function ba6(bf) {
        console['warn']('THREE.Spline\x20has\x20been\x20removed.\x20Use\x20THREE.CatmullRomCurve3\x20instead.'),
        aGw['call'](this, bf),
        this['type'] = 'catmullrom';
    }
    function ba8(bf) {
        return console['warn']('THREE.AxisHelper\x20has\x20been\x20renamed\x20to\x20THREE.AxesHelper.'),
        new aZB(bf);
    }
    function baa(bf, bg) {
        return console['warn']('THREE.BoundingBoxHelper\x20has\x20been\x20deprecated.\x20Creating\x20a\x20THREE.BoxHelper\x20instead.'),
        new aZb(bf,bg);
    }
    function bad(bf, bg) {
        return console['warn']('THREE.EdgesHelper\x20has\x20been\x20removed.\x20Use\x20THREE.EdgesGeometry\x20instead.'),
        new aeE(new auW(bf['geometry']),new aey({
            'color': void 0x0 !== bg ? bg : 0xffffff
        }));
    }
    function bag(bf, bg) {
        return console['warn']('THREE.WireframeHelper\x20has\x20been\x20removed.\x20Use\x20THREE.WireframeGeometry\x20instead.'),
        new aeE(new afx(bf['geometry']),new aey({
            'color': void 0x0 !== bg ? bg : 0xffffff
        }));
    }
    function baj(bf) {
        return console['warn']('THREE.XHRLoader\x20has\x20been\x20renamed\x20to\x20THREE.FileLoader.'),
        new aCv(bf);
    }
    function bal(bf) {
        return console['warn']('THREE.BinaryTextureLoader\x20has\x20been\x20renamed\x20to\x20THREE.DataTextureLoader.'),
        new aCB(bf);
    }
    aCJ['create'] = function(bf, bg) {
        return console['log']('THREE.Curve.create()\x20has\x20been\x20deprecated'),
        bf['prototype'] = Object['create'](aCJ['prototype']),
        bf['prototype']['constructor'] = bf,
        bf['prototype']['getPoint'] = bg,
        bf;
    }
    ,
    Object['assign'](aJk['prototype'], {
        'createPointsGeometry': function(bf) {
            console['warn']('THREE.CurvePath:\x20.createPointsGeometry()\x20has\x20been\x20removed.\x20Use\x20new\x20THREE.Geometry().setFromPoints(\x20points\x20)\x20instead.');
            var bg = this['getPoints'](bf);
            return this['createGeometry'](bg);
        },
        'createSpacedPointsGeometry': function(bf) {
            console['warn']('THREE.CurvePath:\x20.createSpacedPointsGeometry()\x20has\x20been\x20removed.\x20Use\x20new\x20THREE.Geometry().setFromPoints(\x20points\x20)\x20instead.');
            var bg = this['getSpacedPoints'](bf);
            return this['createGeometry'](bg);
        },
        'createGeometry': function(bf) {
            console['warn']('THREE.CurvePath:\x20.createGeometry()\x20has\x20been\x20removed.\x20Use\x20new\x20THREE.Geometry().setFromPoints(\x20points\x20)\x20instead.');
            for (var bg = new AH(), bh = 0x0, bi = bf['length']; bh < bi; bh++) {
                var bF = bf[bh];
                bg['vertices']['push'](new eK(bF['x'],bF['y'],bF['z'] || 0x0));
            }
            return bg;
        }
    }),
    Object['assign'](aJl['prototype'], {
        'fromPoints': function(bf) {
            console['warn']('THREE.Path:\x20.fromPoints()\x20has\x20been\x20renamed\x20to\x20.setFromPoints().'),
            this['setFromPoints'](bf);
        }
    }),
    ba2['prototype'] = Object['create'](aGw['prototype']),
    ba4['prototype'] = Object['create'](aGw['prototype']),
    ba6['prototype'] = Object['create'](aGw['prototype']),
    Object['assign'](ba6['prototype'], {
        'initFromArray': function() {
            console['error']('THREE.Spline:\x20.initFromArray()\x20has\x20been\x20removed.');
        },
        'getControlPointsArray': function() {
            console['error']('THREE.Spline:\x20.getControlPointsArray()\x20has\x20been\x20removed.');
        },
        'reparametrizeByArcLength': function() {
            console['error']('THREE.Spline:\x20.reparametrizeByArcLength()\x20has\x20been\x20removed.');
        }
    }),
    aXT['prototype']['setColors'] = function() {
        console['error']('THREE.GridHelper:\x20setColors()\x20has\x20been\x20deprecated,\x20pass\x20them\x20in\x20the\x20constructor\x20instead.');
    }
    ,
    aXg['prototype']['update'] = function() {
        console['error']('THREE.SkeletonHelper:\x20update()\x20no\x20longer\x20needs\x20to\x20be\x20called.');
    }
    ,
    Object['assign'](aPW['prototype'], {
        'extractUrlBase': function(bf) {
            return console['warn']('THREE.Loader:\x20.extractUrlBase()\x20has\x20been\x20deprecated.\x20Use\x20THREE.LoaderUtils.extractUrlBase()\x20instead.'),
            aMX['extractUrlBase'](bf);
        }
    }),
    Object['assign'](aNJ['prototype'], {
        'setTexturePath': function(bf) {
            return console['warn']('THREE.ObjectLoader:\x20.setTexturePath()\x20has\x20been\x20renamed\x20to\x20.setResourcePath().'),
            this['setResourcePath'](bf);
        }
    }),
    Object['assign'](aWN['prototype'], {
        'center': function(bf) {
            return console['warn']('THREE.Box2:\x20.center()\x20has\x20been\x20renamed\x20to\x20.getCenter().'),
            this['getCenter'](bf);
        },
        'empty': function() {
            return console['warn']('THREE.Box2:\x20.empty()\x20has\x20been\x20renamed\x20to\x20.isEmpty().'),
            this['isEmpty']();
        },
        'isIntersectionBox': function(bf) {
            return console['warn']('THREE.Box2:\x20.isIntersectionBox()\x20has\x20been\x20renamed\x20to\x20.intersectsBox().'),
            this['intersectsBox'](bf);
        },
        'size': function(bf) {
            return console['warn']('THREE.Box2:\x20.size()\x20has\x20been\x20renamed\x20to\x20.getSize().'),
            this['getSize'](bf);
        }
    }),
    Object['assign'](mB['prototype'], {
        'center': function(bf) {
            return console['warn']('THREE.Box3:\x20.center()\x20has\x20been\x20renamed\x20to\x20.getCenter().'),
            this['getCenter'](bf);
        },
        'empty': function() {
            return console['warn']('THREE.Box3:\x20.empty()\x20has\x20been\x20renamed\x20to\x20.isEmpty().'),
            this['isEmpty']();
        },
        'isIntersectionBox': function(bf) {
            return console['warn']('THREE.Box3:\x20.isIntersectionBox()\x20has\x20been\x20renamed\x20to\x20.intersectsBox().'),
            this['intersectsBox'](bf);
        },
        'isIntersectionSphere': function(bf) {
            return console['warn']('THREE.Box3:\x20.isIntersectionSphere()\x20has\x20been\x20renamed\x20to\x20.intersectsSphere().'),
            this['intersectsSphere'](bf);
        },
        'size': function(bf) {
            return console['warn']('THREE.Box3:\x20.size()\x20has\x20been\x20renamed\x20to\x20.getSize().'),
            this['getSize'](bf);
        }
    }),
    aWQ['prototype']['center'] = function(bf) {
        return console['warn']('THREE.Line3:\x20.center()\x20has\x20been\x20renamed\x20to\x20.getCenter().'),
        this['getCenter'](bf);
    }
    ,
    Object['assign'](e2, {
        'random16': function() {
            return console['warn']('THREE.Math:\x20.random16()\x20has\x20been\x20deprecated.\x20Use\x20Math.random()\x20instead.'),
            Math['random']();
        },
        'nearestPowerOfTwo': function(bf) {
            return console['warn']('THREE.Math:\x20.nearestPowerOfTwo()\x20has\x20been\x20renamed\x20to\x20.floorPowerOfTwo().'),
            e2['floorPowerOfTwo'](bf);
        },
        'nextPowerOfTwo': function(bf) {
            return console['warn']('THREE.Math:\x20.nextPowerOfTwo()\x20has\x20been\x20renamed\x20to\x20.ceilPowerOfTwo().'),
            e2['ceilPowerOfTwo'](bf);
        }
    }),
    Object['assign'](eO['prototype'], {
        'flattenToArrayOffset': function(bf, bg) {
            return console['warn']('THREE.Matrix3:\x20.flattenToArrayOffset()\x20has\x20been\x20deprecated.\x20Use\x20.toArray()\x20instead.'),
            this['toArray'](bf, bg);
        },
        'multiplyVector3': function(bf) {
            return console['warn']('THREE.Matrix3:\x20.multiplyVector3()\x20has\x20been\x20removed.\x20Use\x20vector.applyMatrix3(\x20matrix\x20)\x20instead.'),
            bf['applyMatrix3'](this);
        },
        'multiplyVector3Array': function() {
            console['error']('THREE.Matrix3:\x20.multiplyVector3Array()\x20has\x20been\x20removed.');
        },
        'applyToBuffer': function(bf) {
            return console['warn']('THREE.Matrix3:\x20.applyToBuffer()\x20has\x20been\x20removed.\x20Use\x20matrix.applyToBufferAttribute(\x20attribute\x20)\x20instead.'),
            this['applyToBufferAttribute'](bf);
        },
        'applyToVector3Array': function() {
            console['error']('THREE.Matrix3:\x20.applyToVector3Array()\x20has\x20been\x20removed.');
        }
    }),
    Object['assign'](mR['prototype'], {
        'extractPosition': function(bf) {
            return console['warn']('THREE.Matrix4:\x20.extractPosition()\x20has\x20been\x20renamed\x20to\x20.copyPosition().'),
            this['copyPosition'](bf);
        },
        'flattenToArrayOffset': function(bf, bg) {
            return console['warn']('THREE.Matrix4:\x20.flattenToArrayOffset()\x20has\x20been\x20deprecated.\x20Use\x20.toArray()\x20instead.'),
            this['toArray'](bf, bg);
        },
        'getPosition': function() {
            var bf;
            return function() {
                return void 0x0 === bf && (bf = new eK()),
                console['warn']('THREE.Matrix4:\x20.getPosition()\x20has\x20been\x20removed.\x20Use\x20Vector3.setFromMatrixPosition(\x20matrix\x20)\x20instead.'),
                bf['setFromMatrixColumn'](this, 0x3);
            }
            ;
        }(),
        'setRotationFromQuaternion': function(bf) {
            return console['warn']('THREE.Matrix4:\x20.setRotationFromQuaternion()\x20has\x20been\x20renamed\x20to\x20.makeRotationFromQuaternion().'),
            this['makeRotationFromQuaternion'](bf);
        },
        'multiplyToArray': function() {
            console['warn']('THREE.Matrix4:\x20.multiplyToArray()\x20has\x20been\x20removed.');
        },
        'multiplyVector3': function(bf) {
            return console['warn']('THREE.Matrix4:\x20.multiplyVector3()\x20has\x20been\x20removed.\x20Use\x20vector.applyMatrix4(\x20matrix\x20)\x20instead.'),
            bf['applyMatrix4'](this);
        },
        'multiplyVector4': function(bf) {
            return console['warn']('THREE.Matrix4:\x20.multiplyVector4()\x20has\x20been\x20removed.\x20Use\x20vector.applyMatrix4(\x20matrix\x20)\x20instead.'),
            bf['applyMatrix4'](this);
        },
        'multiplyVector3Array': function() {
            console['error']('THREE.Matrix4:\x20.multiplyVector3Array()\x20has\x20been\x20removed.');
        },
        'rotateAxis': function(bf) {
            console['warn']('THREE.Matrix4:\x20.rotateAxis()\x20has\x20been\x20removed.\x20Use\x20Vector3.transformDirection(\x20matrix\x20)\x20instead.'),
            bf['transformDirection'](this);
        },
        'crossVector': function(bf) {
            return console['warn']('THREE.Matrix4:\x20.crossVector()\x20has\x20been\x20removed.\x20Use\x20vector.applyMatrix4(\x20matrix\x20)\x20instead.'),
            bf['applyMatrix4'](this);
        },
        'translate': function() {
            console['error']('THREE.Matrix4:\x20.translate()\x20has\x20been\x20removed.');
        },
        'rotateX': function() {
            console['error']('THREE.Matrix4:\x20.rotateX()\x20has\x20been\x20removed.');
        },
        'rotateY': function() {
            console['error']('THREE.Matrix4:\x20.rotateY()\x20has\x20been\x20removed.');
        },
        'rotateZ': function() {
            console['error']('THREE.Matrix4:\x20.rotateZ()\x20has\x20been\x20removed.');
        },
        'rotateByAxis': function() {
            console['error']('THREE.Matrix4:\x20.rotateByAxis()\x20has\x20been\x20removed.');
        },
        'applyToBuffer': function(bf) {
            return console['warn']('THREE.Matrix4:\x20.applyToBuffer()\x20has\x20been\x20removed.\x20Use\x20matrix.applyToBufferAttribute(\x20attribute\x20)\x20instead.'),
            this['applyToBufferAttribute'](bf);
        },
        'applyToVector3Array': function() {
            console['error']('THREE.Matrix4:\x20.applyToVector3Array()\x20has\x20been\x20removed.');
        },
        'makeFrustum': function(bf, bg, bh, bi, bF, bG) {
            return console['warn']('THREE.Matrix4:\x20.makeFrustum()\x20has\x20been\x20removed.\x20Use\x20.makePerspective(\x20left,\x20right,\x20top,\x20bottom,\x20near,\x20far\x20)\x20instead.'),
            this['makePerspective'](bf, bg, bi, bh, bF, bG);
        }
    }),
    mH['prototype']['isIntersectionLine'] = function(bf) {
        return console['warn']('THREE.Plane:\x20.isIntersectionLine()\x20has\x20been\x20renamed\x20to\x20.intersectsLine().'),
        this['intersectsLine'](bf);
    }
    ,
    eF['prototype']['multiplyVector3'] = function(bf) {
        return console['warn']('THREE.Quaternion:\x20.multiplyVector3()\x20has\x20been\x20removed.\x20Use\x20is\x20now\x20vector.applyQuaternion(\x20quaternion\x20)\x20instead.'),
        bf['applyQuaternion'](this);
    }
    ,
    Object['assign'](KP['prototype'], {
        'isIntersectionBox': function(bf) {
            return console['warn']('THREE.Ray:\x20.isIntersectionBox()\x20has\x20been\x20renamed\x20to\x20.intersectsBox().'),
            this['intersectsBox'](bf);
        },
        'isIntersectionPlane': function(bf) {
            return console['warn']('THREE.Ray:\x20.isIntersectionPlane()\x20has\x20been\x20renamed\x20to\x20.intersectsPlane().'),
            this['intersectsPlane'](bf);
        },
        'isIntersectionSphere': function(bf) {
            return console['warn']('THREE.Ray:\x20.isIntersectionSphere()\x20has\x20been\x20renamed\x20to\x20.intersectsSphere().'),
            this['intersectsSphere'](bf);
        }
    }),
    Object['assign'](KS['prototype'], {
        'area': function() {
            return console['warn']('THREE.Triangle:\x20.area()\x20has\x20been\x20renamed\x20to\x20.getArea().'),
            this['getArea']();
        },
        'barycoordFromPoint': function(bf, bg) {
            return console['warn']('THREE.Triangle:\x20.barycoordFromPoint()\x20has\x20been\x20renamed\x20to\x20.getBarycoord().'),
            this['getBarycoord'](bf, bg);
        },
        'midpoint': function(bf) {
            return console['warn']('THREE.Triangle:\x20.midpoint()\x20has\x20been\x20renamed\x20to\x20.getMidpoint().'),
            this['getMidpoint'](bf);
        },
        'normal': function(bf) {
            return console['warn']('THREE.Triangle:\x20.normal()\x20has\x20been\x20renamed\x20to\x20.getNormal().'),
            this['getNormal'](bf);
        },
        'plane': function(bf) {
            return console['warn']('THREE.Triangle:\x20.plane()\x20has\x20been\x20renamed\x20to\x20.getPlane().'),
            this['getPlane'](bf);
        }
    }),
    Object['assign'](KS, {
        'barycoordFromPoint': function(bf, bg, bh, bi, bF) {
            return console['warn']('THREE.Triangle:\x20.barycoordFromPoint()\x20has\x20been\x20renamed\x20to\x20.getBarycoord().'),
            KS['getBarycoord'](bf, bg, bh, bi, bF);
        },
        'normal': function(bf, bg, bh, bi) {
            return console['warn']('THREE.Triangle:\x20.normal()\x20has\x20been\x20renamed\x20to\x20.getNormal().'),
            KS['getNormal'](bf, bg, bh, bi);
        }
    }),
    Object['assign'](aJn['prototype'], {
        'extractAllPoints': function(bf) {
            return console['warn']('THREE.Shape:\x20.extractAllPoints()\x20has\x20been\x20removed.\x20Use\x20.extractPoints()\x20instead.'),
            this['extractPoints'](bf);
        },
        'extrude': function(bf) {
            return console['warn']('THREE.Shape:\x20.extrude()\x20has\x20been\x20removed.\x20Use\x20ExtrudeGeometry()\x20instead.'),
            new aqg(this,bf);
        },
        'makeGeometry': function(bf) {
            return console['warn']('THREE.Shape:\x20.makeGeometry()\x20has\x20been\x20removed.\x20Use\x20ShapeGeometry()\x20instead.'),
            new auo(this,bf);
        }
    }),
    Object['assign'](eC['prototype'], {
        'fromAttribute': function(bf, bg, bh) {
            return console['warn']('THREE.Vector2:\x20.fromAttribute()\x20has\x20been\x20renamed\x20to\x20.fromBufferAttribute().'),
            this['fromBufferAttribute'](bf, bg, bh);
        },
        'distanceToManhattan': function(bf) {
            return console['warn']('THREE.Vector2:\x20.distanceToManhattan()\x20has\x20been\x20renamed\x20to\x20.manhattanDistanceTo().'),
            this['manhattanDistanceTo'](bf);
        },
        'lengthManhattan': function() {
            return console['warn']('THREE.Vector2:\x20.lengthManhattan()\x20has\x20been\x20renamed\x20to\x20.manhattanLength().'),
            this['manhattanLength']();
        }
    }),
    Object['assign'](eK['prototype'], {
        'setEulerFromRotationMatrix': function() {
            console['error']('THREE.Vector3:\x20.setEulerFromRotationMatrix()\x20has\x20been\x20removed.\x20Use\x20Euler.setFromRotationMatrix()\x20instead.');
        },
        'setEulerFromQuaternion': function() {
            console['error']('THREE.Vector3:\x20.setEulerFromQuaternion()\x20has\x20been\x20removed.\x20Use\x20Euler.setFromQuaternion()\x20instead.');
        },
        'getPositionFromMatrix': function(bf) {
            return console['warn']('THREE.Vector3:\x20.getPositionFromMatrix()\x20has\x20been\x20renamed\x20to\x20.setFromMatrixPosition().'),
            this['setFromMatrixPosition'](bf);
        },
        'getScaleFromMatrix': function(bf) {
            return console['warn']('THREE.Vector3:\x20.getScaleFromMatrix()\x20has\x20been\x20renamed\x20to\x20.setFromMatrixScale().'),
            this['setFromMatrixScale'](bf);
        },
        'getColumnFromMatrix': function(bf, bg) {
            return console['warn']('THREE.Vector3:\x20.getColumnFromMatrix()\x20has\x20been\x20renamed\x20to\x20.setFromMatrixColumn().'),
            this['setFromMatrixColumn'](bg, bf);
        },
        'applyProjection': function(bf) {
            return console['warn']('THREE.Vector3:\x20.applyProjection()\x20has\x20been\x20removed.\x20Use\x20.applyMatrix4(\x20m\x20)\x20instead.'),
            this['applyMatrix4'](bf);
        },
        'fromAttribute': function(bf, bg, bh) {
            return console['warn']('THREE.Vector3:\x20.fromAttribute()\x20has\x20been\x20renamed\x20to\x20.fromBufferAttribute().'),
            this['fromBufferAttribute'](bf, bg, bh);
        },
        'distanceToManhattan': function(bf) {
            return console['warn']('THREE.Vector3:\x20.distanceToManhattan()\x20has\x20been\x20renamed\x20to\x20.manhattanDistanceTo().'),
            this['manhattanDistanceTo'](bf);
        },
        'lengthManhattan': function() {
            return console['warn']('THREE.Vector3:\x20.lengthManhattan()\x20has\x20been\x20renamed\x20to\x20.manhattanLength().'),
            this['manhattanLength']();
        }
    }),
    Object['assign'](m7['prototype'], {
        'fromAttribute': function(bf, bg, bh) {
            return console['warn']('THREE.Vector4:\x20.fromAttribute()\x20has\x20been\x20renamed\x20to\x20.fromBufferAttribute().'),
            this['fromBufferAttribute'](bf, bg, bh);
        },
        'lengthManhattan': function() {
            return console['warn']('THREE.Vector4:\x20.lengthManhattan()\x20has\x20been\x20renamed\x20to\x20.manhattanLength().'),
            this['manhattanLength']();
        }
    }),
    Object['assign'](AH['prototype'], {
        'computeTangents': function() {
            console['error']('THREE.Geometry:\x20.computeTangents()\x20has\x20been\x20removed.');
        },
        'computeLineDistances': function() {
            console['error']('THREE.Geometry:\x20.computeLineDistances()\x20has\x20been\x20removed.\x20Use\x20THREE.Line.computeLineDistances()\x20instead.');
        }
    }),
    Object['assign'](yT['prototype'], {
        'getChildByName': function(bf) {
            return console['warn']('THREE.Object3D:\x20.getChildByName()\x20has\x20been\x20renamed\x20to\x20.getObjectByName().'),
            this['getObjectByName'](bf);
        },
        'renderDepth': function() {
            console['warn']('THREE.Object3D:\x20.renderDepth\x20has\x20been\x20removed.\x20Use\x20.renderOrder,\x20instead.');
        },
        'translate': function(bf, bg) {
            return console['warn']('THREE.Object3D:\x20.translate()\x20has\x20been\x20removed.\x20Use\x20.translateOnAxis(\x20axis,\x20distance\x20)\x20instead.'),
            this['translateOnAxis'](bg, bf);
        },
        'getWorldRotation': function() {
            console['error']('THREE.Object3D:\x20.getWorldRotation()\x20has\x20been\x20removed.\x20Use\x20THREE.Object3D.getWorldQuaternion(\x20target\x20)\x20instead.');
        }
    }),
    Object['defineProperties'](yT['prototype'], {
        'eulerOrder': {
            'get': function() {
                return console['warn']('THREE.Object3D:\x20.eulerOrder\x20is\x20now\x20.rotation.order.'),
                this['rotation']['order'];
            },
            'set': function(bf) {
                console['warn']('THREE.Object3D:\x20.eulerOrder\x20is\x20now\x20.rotation.order.'),
                this['rotation']['order'] = bf;
            }
        },
        'useQuaternion': {
            'get': function() {
                console['warn']('THREE.Object3D:\x20.useQuaternion\x20has\x20been\x20removed.\x20The\x20library\x20now\x20uses\x20quaternions\x20by\x20default.');
            },
            'set': function() {
                console['warn']('THREE.Object3D:\x20.useQuaternion\x20has\x20been\x20removed.\x20The\x20library\x20now\x20uses\x20quaternions\x20by\x20default.');
            }
        }
    }),
    Object['defineProperties'](aeo['prototype'], {
        'objects': {
            'get': function() {
                return console['warn']('THREE.LOD:\x20.objects\x20has\x20been\x20renamed\x20to\x20.levels.'),
                this['levels'];
            }
        }
    }),
    Object['defineProperty'](aes['prototype'], 'useVertexTexture', {
        'get': function() {
            console['warn']('THREE.Skeleton:\x20useVertexTexture\x20has\x20been\x20removed.');
        },
        'set': function() {
            console['warn']('THREE.Skeleton:\x20useVertexTexture\x20has\x20been\x20removed.');
        }
    }),
    aep['prototype']['initBones'] = function() {
        console['error']('THREE.SkinnedMesh:\x20initBones()\x20has\x20been\x20removed.');
    }
    ,
    Object['defineProperty'](aCJ['prototype'], '__arcLengthDivisions', {
        'get': function() {
            return console['warn']('THREE.Curve:\x20.__arcLengthDivisions\x20is\x20now\x20.arcLengthDivisions.'),
            this['arcLengthDivisions'];
        },
        'set': function(bf) {
            console['warn']('THREE.Curve:\x20.__arcLengthDivisions\x20is\x20now\x20.arcLengthDivisions.'),
            this['arcLengthDivisions'] = bf;
        }
    }),
    a68['prototype']['setLens'] = function(bf, bg) {
        console['warn']('THREE.PerspectiveCamera.setLens\x20is\x20deprecated.\x20Use\x20.setFocalLength\x20and\x20.filmGauge\x20for\x20a\x20photographic\x20setup.'),
        void 0x0 !== bg && (this['filmGauge'] = bg),
        this['setFocalLength'](bf);
    }
    ,
    Object['defineProperties'](aJp['prototype'], {
        'onlyShadow': {
            'set': function() {
                console['warn']('THREE.Light:\x20.onlyShadow\x20has\x20been\x20removed.');
            }
        },
        'shadowCameraFov': {
            'set': function(bf) {
                console['warn']('THREE.Light:\x20.shadowCameraFov\x20is\x20now\x20.shadow.camera.fov.'),
                this['shadow']['camera']['fov'] = bf;
            }
        },
        'shadowCameraLeft': {
            'set': function(bf) {
                console['warn']('THREE.Light:\x20.shadowCameraLeft\x20is\x20now\x20.shadow.camera.left.'),
                this['shadow']['camera']['left'] = bf;
            }
        },
        'shadowCameraRight': {
            'set': function(bf) {
                console['warn']('THREE.Light:\x20.shadowCameraRight\x20is\x20now\x20.shadow.camera.right.'),
                this['shadow']['camera']['right'] = bf;
            }
        },
        'shadowCameraTop': {
            'set': function(bf) {
                console['warn']('THREE.Light:\x20.shadowCameraTop\x20is\x20now\x20.shadow.camera.top.'),
                this['shadow']['camera']['top'] = bf;
            }
        },
        'shadowCameraBottom': {
            'set': function(bf) {
                console['warn']('THREE.Light:\x20.shadowCameraBottom\x20is\x20now\x20.shadow.camera.bottom.'),
                this['shadow']['camera']['bottom'] = bf;
            }
        },
        'shadowCameraNear': {
            'set': function(bf) {
                console['warn']('THREE.Light:\x20.shadowCameraNear\x20is\x20now\x20.shadow.camera.near.'),
                this['shadow']['camera']['near'] = bf;
            }
        },
        'shadowCameraFar': {
            'set': function(bf) {
                console['warn']('THREE.Light:\x20.shadowCameraFar\x20is\x20now\x20.shadow.camera.far.'),
                this['shadow']['camera']['far'] = bf;
            }
        },
        'shadowCameraVisible': {
            'set': function() {
                console['warn']('THREE.Light:\x20.shadowCameraVisible\x20has\x20been\x20removed.\x20Use\x20new\x20THREE.CameraHelper(\x20light.shadow.camera\x20)\x20instead.');
            }
        },
        'shadowBias': {
            'set': function(bf) {
                console['warn']('THREE.Light:\x20.shadowBias\x20is\x20now\x20.shadow.bias.'),
                this['shadow']['bias'] = bf;
            }
        },
        'shadowDarkness': {
            'set': function() {
                console['warn']('THREE.Light:\x20.shadowDarkness\x20has\x20been\x20removed.');
            }
        },
        'shadowMapWidth': {
            'set': function(bf) {
                console['warn']('THREE.Light:\x20.shadowMapWidth\x20is\x20now\x20.shadow.mapSize.width.'),
                this['shadow']['mapSize']['width'] = bf;
            }
        },
        'shadowMapHeight': {
            'set': function(bf) {
                console['warn']('THREE.Light:\x20.shadowMapHeight\x20is\x20now\x20.shadow.mapSize.height.'),
                this['shadow']['mapSize']['height'] = bf;
            }
        }
    }),
    Object['defineProperties'](AI['prototype'], {
        'length': {
            'get': function() {
                return console['warn']('THREE.BufferAttribute:\x20.length\x20has\x20been\x20deprecated.\x20Use\x20.count\x20instead.'),
                this['array']['length'];
            }
        },
        'copyIndicesArray': function() {
            console['error']('THREE.BufferAttribute:\x20.copyIndicesArray()\x20has\x20been\x20removed.');
        }
    }),
    Object['assign'](Gf['prototype'], {
        'addIndex': function(bf) {
            console['warn']('THREE.BufferGeometry:\x20.addIndex()\x20has\x20been\x20renamed\x20to\x20.setIndex().'),
            this['setIndex'](bf);
        },
        'addDrawCall': function(bf, bg, bh) {
            void 0x0 !== bh && console['warn']('THREE.BufferGeometry:\x20.addDrawCall()\x20no\x20longer\x20supports\x20indexOffset.'),
            console['warn']('THREE.BufferGeometry:\x20.addDrawCall()\x20is\x20now\x20.addGroup().'),
            this['addGroup'](bf, bg);
        },
        'clearDrawCalls': function() {
            console['warn']('THREE.BufferGeometry:\x20.clearDrawCalls()\x20is\x20now\x20.clearGroups().'),
            this['clearGroups']();
        },
        'computeTangents': function() {
            console['warn']('THREE.BufferGeometry:\x20.computeTangents()\x20has\x20been\x20removed.');
        },
        'computeOffsets': function() {
            console['warn']('THREE.BufferGeometry:\x20.computeOffsets()\x20has\x20been\x20removed.');
        }
    }),
    Object['defineProperties'](Gf['prototype'], {
        'drawcalls': {
            'get': function() {
                return console['error']('THREE.BufferGeometry:\x20.drawcalls\x20has\x20been\x20renamed\x20to\x20.groups.'),
                this['groups'];
            }
        },
        'offsets': {
            'get': function() {
                return console['warn']('THREE.BufferGeometry:\x20.offsets\x20has\x20been\x20renamed\x20to\x20.groups.'),
                this['groups'];
            }
        }
    }),
    Object['assign'](aqj['prototype'], {
        'getArrays': function() {
            console['error']('THREE.ExtrudeBufferGeometry:\x20.getArrays()\x20has\x20been\x20removed.');
        },
        'addShapeList': function() {
            console['error']('THREE.ExtrudeBufferGeometry:\x20.addShapeList()\x20has\x20been\x20removed.');
        },
        'addShape': function() {
            console['error']('THREE.ExtrudeBufferGeometry:\x20.addShape()\x20has\x20been\x20removed.');
        }
    }),
    Object['defineProperties'](aWj['prototype'], {
        'dynamic': {
            'set': function() {
                console['warn']('THREE.Uniform:\x20.dynamic\x20has\x20been\x20removed.\x20Use\x20object.onBeforeRender()\x20instead.');
            }
        },
        'onUpdate': {
            'value': function() {
                return console['warn']('THREE.Uniform:\x20.onUpdate()\x20has\x20been\x20removed.\x20Use\x20object.onBeforeRender()\x20instead.'),
                this;
            }
        }
    }),
    Object['defineProperties'](Kf['prototype'], {
        'wrapAround': {
            'get': function() {
                console['warn']('THREE.Material:\x20.wrapAround\x20has\x20been\x20removed.');
            },
            'set': function() {
                console['warn']('THREE.Material:\x20.wrapAround\x20has\x20been\x20removed.');
            }
        },
        'overdraw': {
            'get': function() {
                console['warn']('THREE.Material:\x20.overdraw\x20has\x20been\x20removed.');
            },
            'set': function() {
                console['warn']('THREE.Material:\x20.overdraw\x20has\x20been\x20removed.');
            }
        },
        'wrapRGB': {
            'get': function() {
                return console['warn']('THREE.Material:\x20.wrapRGB\x20has\x20been\x20removed.'),
                new w7();
            }
        },
        'shading': {
            'get': function() {
                console['error']('THREE.' + this['type'] + ':\x20.shading\x20has\x20been\x20removed.\x20Use\x20the\x20boolean\x20.flatShading\x20instead.');
            },
            'set': function(bf) {
                console['warn']('THREE.' + this['type'] + ':\x20.shading\x20has\x20been\x20removed.\x20Use\x20the\x20boolean\x20.flatShading\x20instead.'),
                this['flatShading'] = bf === bW;
            }
        }
    }),
    Object['defineProperties'](awX['prototype'], {
        'metal': {
            'get': function() {
                return console['warn']('THREE.MeshPhongMaterial:\x20.metal\x20has\x20been\x20removed.\x20Use\x20THREE.MeshStandardMaterial\x20instead.'),
                !0x1;
            },
            'set': function() {
                console['warn']('THREE.MeshPhongMaterial:\x20.metal\x20has\x20been\x20removed.\x20Use\x20THREE.MeshStandardMaterial\x20instead');
            }
        }
    }),
    Object['defineProperties'](KN['prototype'], {
        'derivatives': {
            'get': function() {
                return console['warn']('THREE.ShaderMaterial:\x20.derivatives\x20has\x20been\x20moved\x20to\x20.extensions.derivatives.'),
                this['extensions']['derivatives'];
            },
            'set': function(bf) {
                console['warn']('THREE.\x20ShaderMaterial:\x20.derivatives\x20has\x20been\x20moved\x20to\x20.extensions.derivatives.'),
                this['extensions']['derivatives'] = bf;
            }
        }
    }),
    Object['assign'](a8U['prototype'], {
        'clearTarget': function(bf, bg, bh, bi) {
            console['warn']('THREE.WebGLRenderer:\x20.clearTarget()\x20has\x20been\x20deprecated.\x20Use\x20.setRenderTarget()\x20and\x20.clear()\x20instead.'),
            this['setRenderTarget'](bf),
            this['clear'](bg, bh, bi);
        },
        'animate': function(bf) {
            console['warn']('THREE.WebGLRenderer:\x20.animate()\x20is\x20now\x20.setAnimationLoop().'),
            this['setAnimationLoop'](bf);
        },
        'getCurrentRenderTarget': function() {
            return console['warn']('THREE.WebGLRenderer:\x20.getCurrentRenderTarget()\x20is\x20now\x20.getRenderTarget().'),
            this['getRenderTarget']();
        },
        'getMaxAnisotropy': function() {
            return console['warn']('THREE.WebGLRenderer:\x20.getMaxAnisotropy()\x20is\x20now\x20.capabilities.getMaxAnisotropy().'),
            this['capabilities']['getMaxAnisotropy']();
        },
        'getPrecision': function() {
            return console['warn']('THREE.WebGLRenderer:\x20.getPrecision()\x20is\x20now\x20.capabilities.precision.'),
            this['capabilities']['precision'];
        },
        'resetGLState': function() {
            return console['warn']('THREE.WebGLRenderer:\x20.resetGLState()\x20is\x20now\x20.state.reset().'),
            this['state']['reset']();
        },
        'supportsFloatTextures': function() {
            return console['warn']('THREE.WebGLRenderer:\x20.supportsFloatTextures()\x20is\x20now\x20.extensions.get(\x20\x27OES_texture_float\x27\x20).'),
            this['extensions']['get']('OES_texture_float');
        },
        'supportsHalfFloatTextures': function() {
            return console['warn']('THREE.WebGLRenderer:\x20.supportsHalfFloatTextures()\x20is\x20now\x20.extensions.get(\x20\x27OES_texture_half_float\x27\x20).'),
            this['extensions']['get']('OES_texture_half_float');
        },
        'supportsStandardDerivatives': function() {
            return console['warn']('THREE.WebGLRenderer:\x20.supportsStandardDerivatives()\x20is\x20now\x20.extensions.get(\x20\x27OES_standard_derivatives\x27\x20).'),
            this['extensions']['get']('OES_standard_derivatives');
        },
        'supportsCompressedTextureS3TC': function() {
            return console['warn']('THREE.WebGLRenderer:\x20.supportsCompressedTextureS3TC()\x20is\x20now\x20.extensions.get(\x20\x27WEBGL_compressed_texture_s3tc\x27\x20).'),
            this['extensions']['get']('WEBGL_compressed_texture_s3tc');
        },
        'supportsCompressedTexturePVRTC': function() {
            return console['warn']('THREE.WebGLRenderer:\x20.supportsCompressedTexturePVRTC()\x20is\x20now\x20.extensions.get(\x20\x27WEBGL_compressed_texture_pvrtc\x27\x20).'),
            this['extensions']['get']('WEBGL_compressed_texture_pvrtc');
        },
        'supportsBlendMinMax': function() {
            return console['warn']('THREE.WebGLRenderer:\x20.supportsBlendMinMax()\x20is\x20now\x20.extensions.get(\x20\x27EXT_blend_minmax\x27\x20).'),
            this['extensions']['get']('EXT_blend_minmax');
        },
        'supportsVertexTextures': function() {
            return console['warn']('THREE.WebGLRenderer:\x20.supportsVertexTextures()\x20is\x20now\x20.capabilities.vertexTextures.'),
            this['capabilities']['vertexTextures'];
        },
        'supportsInstancedArrays': function() {
            return console['warn']('THREE.WebGLRenderer:\x20.supportsInstancedArrays()\x20is\x20now\x20.extensions.get(\x20\x27ANGLE_instanced_arrays\x27\x20).'),
            this['extensions']['get']('ANGLE_instanced_arrays');
        },
        'enableScissorTest': function(bf) {
            console['warn']('THREE.WebGLRenderer:\x20.enableScissorTest()\x20is\x20now\x20.setScissorTest().'),
            this['setScissorTest'](bf);
        },
        'initMaterial': function() {
            console['warn']('THREE.WebGLRenderer:\x20.initMaterial()\x20has\x20been\x20removed.');
        },
        'addPrePlugin': function() {
            console['warn']('THREE.WebGLRenderer:\x20.addPrePlugin()\x20has\x20been\x20removed.');
        },
        'addPostPlugin': function() {
            console['warn']('THREE.WebGLRenderer:\x20.addPostPlugin()\x20has\x20been\x20removed.');
        },
        'updateShadowMap': function() {
            console['warn']('THREE.WebGLRenderer:\x20.updateShadowMap()\x20has\x20been\x20removed.');
        },
        'setFaceCulling': function() {
            console['warn']('THREE.WebGLRenderer:\x20.setFaceCulling()\x20has\x20been\x20removed.');
        },
        'allocTextureUnit': function() {
            console['warn']('THREE.WebGLRenderer:\x20.allocTextureUnit()\x20has\x20been\x20removed.');
        },
        'setTexture': function() {
            console['warn']('THREE.WebGLRenderer:\x20.setTexture()\x20has\x20been\x20removed.');
        },
        'setTexture2D': function() {
            console['warn']('THREE.WebGLRenderer:\x20.setTexture2D()\x20has\x20been\x20removed.');
        },
        'setTextureCube': function() {
            console['warn']('THREE.WebGLRenderer:\x20.setTextureCube()\x20has\x20been\x20removed.');
        }
    }),
    Object['defineProperties'](a8U['prototype'], {
        'shadowMapEnabled': {
            'get': function() {
                return this['shadowMap']['enabled'];
            },
            'set': function(bf) {
                console['warn']('THREE.WebGLRenderer:\x20.shadowMapEnabled\x20is\x20now\x20.shadowMap.enabled.'),
                this['shadowMap']['enabled'] = bf;
            }
        },
        'shadowMapType': {
            'get': function() {
                return this['shadowMap']['type'];
            },
            'set': function(bf) {
                console['warn']('THREE.WebGLRenderer:\x20.shadowMapType\x20is\x20now\x20.shadowMap.type.'),
                this['shadowMap']['type'] = bf;
            }
        },
        'shadowMapCullFace': {
            'get': function() {
                console['warn']('THREE.WebGLRenderer:\x20.shadowMapCullFace\x20has\x20been\x20removed.\x20Set\x20Material.shadowSide\x20instead.');
            },
            'set': function() {
                console['warn']('THREE.WebGLRenderer:\x20.shadowMapCullFace\x20has\x20been\x20removed.\x20Set\x20Material.shadowSide\x20instead.');
            }
        }
    }),
    Object['defineProperties'](ZZ['prototype'], {
        'cullFace': {
            'get': function() {
                console['warn']('THREE.WebGLRenderer:\x20.shadowMap.cullFace\x20has\x20been\x20removed.\x20Set\x20Material.shadowSide\x20instead.');
            },
            'set': function() {
                console['warn']('THREE.WebGLRenderer:\x20.shadowMap.cullFace\x20has\x20been\x20removed.\x20Set\x20Material.shadowSide\x20instead.');
            }
        },
        'renderReverseSided': {
            'get': function() {
                console['warn']('THREE.WebGLRenderer:\x20.shadowMap.renderReverseSided\x20has\x20been\x20removed.\x20Set\x20Material.shadowSide\x20instead.');
            },
            'set': function() {
                console['warn']('THREE.WebGLRenderer:\x20.shadowMap.renderReverseSided\x20has\x20been\x20removed.\x20Set\x20Material.shadowSide\x20instead.');
            }
        },
        'renderSingleSided': {
            'get': function() {
                console['warn']('THREE.WebGLRenderer:\x20.shadowMap.renderSingleSided\x20has\x20been\x20removed.\x20Set\x20Material.shadowSide\x20instead.');
            },
            'set': function() {
                console['warn']('THREE.WebGLRenderer:\x20.shadowMap.renderSingleSided\x20has\x20been\x20removed.\x20Set\x20Material.shadowSide\x20instead.');
            }
        }
    }),
    Object['defineProperties'](mk['prototype'], {
        'activeCubeFace': {
            'set': function() {
                console['warn']('THREE.WebGLRenderTargetCube:\x20.activeCubeFace\x20has\x20been\x20removed.\x20It\x20is\x20now\x20the\x20second\x20parameter\x20of\x20WebGLRenderer.setRenderTarget().');
            }
        },
        'activeMipMapLevel': {
            'set': function() {
                console['warn']('THREE.WebGLRenderTargetCube:\x20.activeMipMapLevel\x20has\x20been\x20removed.\x20It\x20is\x20now\x20the\x20third\x20parameter\x20of\x20WebGLRenderer.setRenderTarget().');
            }
        }
    }),
    Object['defineProperties'](mc['prototype'], {
        'wrapS': {
            'get': function() {
                return console['warn']('THREE.WebGLRenderTarget:\x20.wrapS\x20is\x20now\x20.texture.wrapS.'),
                this['texture']['wrapS'];
            },
            'set': function(bf) {
                console['warn']('THREE.WebGLRenderTarget:\x20.wrapS\x20is\x20now\x20.texture.wrapS.'),
                this['texture']['wrapS'] = bf;
            }
        },
        'wrapT': {
            'get': function() {
                return console['warn']('THREE.WebGLRenderTarget:\x20.wrapT\x20is\x20now\x20.texture.wrapT.'),
                this['texture']['wrapT'];
            },
            'set': function(bf) {
                console['warn']('THREE.WebGLRenderTarget:\x20.wrapT\x20is\x20now\x20.texture.wrapT.'),
                this['texture']['wrapT'] = bf;
            }
        },
        'magFilter': {
            'get': function() {
                return console['warn']('THREE.WebGLRenderTarget:\x20.magFilter\x20is\x20now\x20.texture.magFilter.'),
                this['texture']['magFilter'];
            },
            'set': function(bf) {
                console['warn']('THREE.WebGLRenderTarget:\x20.magFilter\x20is\x20now\x20.texture.magFilter.'),
                this['texture']['magFilter'] = bf;
            }
        },
        'minFilter': {
            'get': function() {
                return console['warn']('THREE.WebGLRenderTarget:\x20.minFilter\x20is\x20now\x20.texture.minFilter.'),
                this['texture']['minFilter'];
            },
            'set': function(bf) {
                console['warn']('THREE.WebGLRenderTarget:\x20.minFilter\x20is\x20now\x20.texture.minFilter.'),
                this['texture']['minFilter'] = bf;
            }
        },
        'anisotropy': {
            'get': function() {
                return console['warn']('THREE.WebGLRenderTarget:\x20.anisotropy\x20is\x20now\x20.texture.anisotropy.'),
                this['texture']['anisotropy'];
            },
            'set': function(bf) {
                console['warn']('THREE.WebGLRenderTarget:\x20.anisotropy\x20is\x20now\x20.texture.anisotropy.'),
                this['texture']['anisotropy'] = bf;
            }
        },
        'offset': {
            'get': function() {
                return console['warn']('THREE.WebGLRenderTarget:\x20.offset\x20is\x20now\x20.texture.offset.'),
                this['texture']['offset'];
            },
            'set': function(bf) {
                console['warn']('THREE.WebGLRenderTarget:\x20.offset\x20is\x20now\x20.texture.offset.'),
                this['texture']['offset'] = bf;
            }
        },
        'repeat': {
            'get': function() {
                return console['warn']('THREE.WebGLRenderTarget:\x20.repeat\x20is\x20now\x20.texture.repeat.'),
                this['texture']['repeat'];
            },
            'set': function(bf) {
                console['warn']('THREE.WebGLRenderTarget:\x20.repeat\x20is\x20now\x20.texture.repeat.'),
                this['texture']['repeat'] = bf;
            }
        },
        'format': {
            'get': function() {
                return console['warn']('THREE.WebGLRenderTarget:\x20.format\x20is\x20now\x20.texture.format.'),
                this['texture']['format'];
            },
            'set': function(bf) {
                console['warn']('THREE.WebGLRenderTarget:\x20.format\x20is\x20now\x20.texture.format.'),
                this['texture']['format'] = bf;
            }
        },
        'type': {
            'get': function() {
                return console['warn']('THREE.WebGLRenderTarget:\x20.type\x20is\x20now\x20.texture.type.'),
                this['texture']['type'];
            },
            'set': function(bf) {
                console['warn']('THREE.WebGLRenderTarget:\x20.type\x20is\x20now\x20.texture.type.'),
                this['texture']['type'] = bf;
            }
        },
        'generateMipmaps': {
            'get': function() {
                return console['warn']('THREE.WebGLRenderTarget:\x20.generateMipmaps\x20is\x20now\x20.texture.generateMipmaps.'),
                this['texture']['generateMipmaps'];
            },
            'set': function(bf) {
                console['warn']('THREE.WebGLRenderTarget:\x20.generateMipmaps\x20is\x20now\x20.texture.generateMipmaps.'),
                this['texture']['generateMipmaps'] = bf;
            }
        }
    }),
    Object['defineProperties'](a7d['prototype'], {
        'standing': {
            'set': function() {
                console['warn']('THREE.WebVRManager:\x20.standing\x20has\x20been\x20removed.');
            }
        },
        'userHeight': {
            'set': function() {
                console['warn']('THREE.WebVRManager:\x20.userHeight\x20has\x20been\x20removed.');
            }
        }
    }),
    aU3['prototype']['load'] = function(bf) {
        console['warn']('THREE.Audio:\x20.load\x20has\x20been\x20deprecated.\x20Use\x20THREE.AudioLoader\x20instead.');
        var bg = this;
        return new aSa()['load'](bf, function(bf) {
            bg['setBuffer'](bf);
        }),
        this;
    }
    ,
    aU7['prototype']['getData'] = function() {
        return console['warn']('THREE.AudioAnalyser:\x20.getData()\x20is\x20now\x20.getFrequencyData().'),
        this['getFrequencyData']();
    }
    ,
    aTD['prototype']['updateCubeMap'] = function(bf, bg) {
        return console['warn']('THREE.CubeCamera:\x20.updateCubeMap()\x20is\x20now\x20.update().'),
        this['update'](bf, bg);
    }
    ;
    var bcr = {
        'merge': function(bf, bg, bh) {
            var bi;
            console['warn']('THREE.GeometryUtils:\x20.merge()\x20has\x20been\x20moved\x20to\x20Geometry.\x20Use\x20geometry.merge(\x20geometry2,\x20matrix,\x20materialIndexOffset\x20)\x20instead.'),
            bg['isMesh'] && (bg['matrixAutoUpdate'] && bg['updateMatrix'](),
            bi = bg['matrix'],
            bg = bg['geometry']),
            bf['merge'](bg, bi, bh);
        },
        'center': function(bf) {
            return console['warn']('THREE.GeometryUtils:\x20.center()\x20has\x20been\x20moved\x20to\x20Geometry.\x20Use\x20geometry.center()\x20instead.'),
            bf['center']();
        }
    };
    function bcx() {
        console['error']('THREE.CanvasRenderer\x20has\x20been\x20removed');
    }
    function bcy() {
        console['error']('THREE.JSONLoader\x20has\x20been\x20removed.');
    }
    lR['crossOrigin'] = void 0x0,
    lR['loadTexture'] = function(bf, bg, bh, bi) {
        console['warn']('THREE.ImageUtils.loadTexture\x20has\x20been\x20deprecated.\x20Use\x20THREE.TextureLoader()\x20instead.');
        var bF = new aCH();
        bF['setCrossOrigin'](this['crossOrigin']);
        var bG = bF['load'](bf, bh, void 0x0, bi);
        return bg && (bG['mapping'] = bg),
        bG;
    }
    ,
    lR['loadTextureCube'] = function(bf, bg, bh, bi) {
        console['warn']('THREE.ImageUtils.loadTextureCube\x20has\x20been\x20deprecated.\x20Use\x20THREE.CubeTextureLoader()\x20instead.');
        var bF = new aCF();
        bF['setCrossOrigin'](this['crossOrigin']);
        var bG = bF['load'](bf, bh, void 0x0, bi);
        return bg && (bG['mapping'] = bg),
        bG;
    }
    ,
    lR['loadCompressedTexture'] = function() {
        console['error']('THREE.ImageUtils.loadCompressedTexture\x20has\x20been\x20removed.\x20Use\x20THREE.DDSLoader\x20instead.');
    }
    ,
    lR['loadCompressedTextureCube'] = function() {
        console['error']('THREE.ImageUtils.loadCompressedTextureCube\x20has\x20been\x20removed.\x20Use\x20THREE.DDSLoader\x20instead.');
    }
    ;
    var bcL = {
        'createMultiMaterialObject': function() {
            console['error']('THREE.SceneUtils\x20has\x20been\x20moved\x20to\x20/examples/js/utils/SceneUtils.js');
        },
        'detach': function() {
            console['error']('THREE.SceneUtils\x20has\x20been\x20moved\x20to\x20/examples/js/utils/SceneUtils.js');
        },
        'attach': function() {
            console['error']('THREE.SceneUtils\x20has\x20been\x20moved\x20to\x20/examples/js/utils/SceneUtils.js');
        }
    };
    function bcM() {
        console['error']('THREE.LensFlare\x20has\x20been\x20moved\x20to\x20/examples/js/objects/Lensflare.js');
    }
}
, function(bcN, bcO, bcP) {
    function bcQ(bcN) {
        switch (Object['prototype']['toString']['call'](bcN)) {
        case '[object\x20Error]':
        case '[object\x20Exception]':
        case '[object\x20DOMException]':
            return !0x0;
        default:
            return bcN instanceof Error;
        }
    }
    function bcS(bcN) {
        return '[object\x20ErrorEvent]' === Object['prototype']['toString']['call'](bcN);
    }
    function bcU(bcN) {
        return '[object\x20DOMError]' === Object['prototype']['toString']['call'](bcN);
    }
    function bcW(bcN) {
        return '[object\x20DOMException]' === Object['prototype']['toString']['call'](bcN);
    }
    function bcY(bcN) {
        return '[object\x20String]' === Object['prototype']['toString']['call'](bcN);
    }
    function bd0(bcN) {
        return null === bcN || 'object' != typeof bcN && 'function' != typeof bcN;
    }
    function bd2(bcN) {
        return '[object\x20Object]' === Object['prototype']['toString']['call'](bcN);
    }
    function bd4(bcN) {
        return '[object\x20RegExp]' === Object['prototype']['toString']['call'](bcN);
    }
    function bd6(bcN) {
        return !(!bcN || !bcN['then'] || 'function' != typeof bcN['then']);
    }
    function bd8(bcN) {
        return bd2(bcN) && 'nativeEvent'in bcN && 'preventDefault'in bcN && 'stopPropagation'in bcN;
    }
    bcP['d'](bcO, 'c', function() {
        return bcQ;
    }),
    bcP['d'](bcO, 'd', function() {
        return bcS;
    }),
    bcP['d'](bcO, 'a', function() {
        return bcU;
    }),
    bcP['d'](bcO, 'b', function() {
        return bcW;
    }),
    bcP['d'](bcO, 'h', function() {
        return bcY;
    }),
    bcP['d'](bcO, 'f', function() {
        return bd0;
    }),
    bcP['d'](bcO, 'e', function() {
        return bd2;
    }),
    bcP['d'](bcO, 'g', function() {
        return bd4;
    }),
    bcP['d'](bcO, 'j', function() {
        return bd6;
    }),
    bcP['d'](bcO, 'i', function() {
        return bd8;
    });
}
, function(bda, bdb, bdc) {
    (function(bda) {
        bdc['d'](bdb, 'a', function() {
            return bdg;
        }),
        bdc['d'](bdb, 'd', function() {
            return bdn;
        }),
        bdc['d'](bdb, 'c', function() {
            return bdt;
        }),
        bdc['d'](bdb, 'b', function() {
            return bdQ;
        });
        var bde = bdc(0x5)
          , bdf = bdc(0x26);
        function bdg(bda, bdb, bdc) {
            if (bdb in bda) {
                var bde = bda[bdb]
                  , bdf = bdc(bde);
                if ('function' == typeof bdf)
                    try {
                        bdf['prototype'] = bdf['prototype'] || {},
                        Object['defineProperties'](bdf, {
                            '__sentry__': {
                                'enumerable': !0x1,
                                'value': !0x0
                            },
                            '__sentry_original__': {
                                'enumerable': !0x1,
                                'value': bde
                            },
                            '__sentry_wrapped__': {
                                'enumerable': !0x1,
                                'value': bdf
                            }
                        });
                    } catch (bdm) {}
                bda[bdb] = bdf;
            }
        }
        function bdn(bda) {
            return Object['keys'](bda)['map'](function(bdb) {
                return encodeURIComponent(bdb) + '=' + encodeURIComponent(bda[bdb]);
            })['join']('&');
        }
        function bdq(bda) {
            return function(bda) {
                return ~-encodeURI(bda)['split'](/%..|./)['length'];
            }(JSON['stringify'](bda));
        }
        function bdt(bda, bdb, bdc) {
            void 0x0 === bdb && (bdb = 0x3),
            void 0x0 === bdc && (bdc = 0x19000);
            var bde = bdQ(bda, bdb);
            return bdq(bde) > bdc ? bdt(bda, bdb - 0x1, bdc) : bde;
        }
        function bdy(bdb, bdc) {
            return 'domain' === bdc && 'object' == typeof bdb && bdb['_events'] ? '[Domain]' : 'domainEmitter' === bdc ? '[DomainEmitter]' : void 0x0 !== bda && bdb === bda ? '[Global]' : 'undefined' != typeof window && bdb === window ? '[Window]' : 'undefined' != typeof document && bdb === document ? '[Document]' : 'undefined' != typeof Event && bdb instanceof Event ? Object['getPrototypeOf'](bdb) ? bdb['constructor']['name'] : 'Event' : Object(bde['i'])(bdb) ? '[SyntheticEvent]' : Number['isNaN'](bdb) ? '[NaN]' : void 0x0 === bdb ? '[undefined]' : 'function' == typeof bdb ? '[Function:\x20' + (bdb['name'] || '<unknown-function-name>') + ']' : bdb;
        }
        function bdB(bda, bdb, bdc, bdg) {
            if (void 0x0 === bdc && (bdc = 0x1 / 0x0),
            void 0x0 === bdg && (bdg = new bdf['a']()),
            0x0 === bdc)
                return function(bda) {
                    var bdb = Object['prototype']['toString']['call'](bda);
                    if ('string' == typeof bda)
                        return bda;
                    if ('[object\x20Object]' === bdb)
                        return '[Object]';
                    if ('[object\x20Array]' === bdb)
                        return '[Array]';
                    var bdc = bdy(bda);
                    return Object(bde['f'])(bdc) ? bdc : bdb;
                }(bdb);
            if (null != bdb && 'function' == typeof bdb['toJSON'])
                return bdb['toJSON']();
            var bdn = bdy(bdb, bda);
            if (Object(bde['f'])(bdn))
                return bdn;
            var bdq = Object(bde['c'])(bdb) ? function(bda) {
                var bdb = {
                    'message': bda['message'],
                    'name': bda['name'],
                    'stack': bda['stack']
                };
                for (var bdc in bda)
                    Object['prototype']['hasOwnProperty']['call'](bda, bdc) && (bdb[bdc] = bda[bdc]);
                return bdb;
            }(bdb) : bdb
              , bdt = Array['isArray'](bdb) ? [] : {};
            if (bdg['memoize'](bdb))
                return '[Circular\x20~]';
            for (var bdP in bdq)
                Object['prototype']['hasOwnProperty']['call'](bdq, bdP) && (bdt[bdP] = bdB(bdP, bdq[bdP], bdc - 0x1, bdg));
            return bdg['unmemoize'](bdb),
            bdt;
        }
        function bdQ(bda, bdb) {
            try {
                return JSON['parse'](JSON['stringify'](bda, function(bda, bdc) {
                    return bdB(bda, bdc, bdb);
                }));
            } catch (bdV) {
                return '**non-serializable**';
            }
        }
    }
    ['call'](this, bdc(0x15)));
}
, function(bdW, bdX, bdY) {
    (function(bdX) {
        bdW['exports']['isNode'] = void 0x0 !== bdX && void 0x0 !== bdX['release'] && -0x1 !== bdX['release']['name']['search'](/node|io.js/),
        bdW['exports']['isProd'] = bdW['exports']['isNode'] ? !!bdX['env']['IS_PROD'] : '127.0.0.1' !== location['hostname'] && 'localhost' !== location['hostname'] && !location['hostname']['startsWith']('192.168.'),
        bdW['exports']['enableHttps'] = bdW['exports']['isProd'],
        bdW['exports']['serverTickRate'] = 0x3e8 / 0x1e,
        bdW['exports']['serverSendRate'] = 0x64,
        bdW['exports']['clientSendRate'] = 0x3e8 / 0x1e,
        bdW['exports']['dltMx'] = Math['round'](0x3e8 / 0x1e),
        bdW['exports']['streamUpdate'] = 0x2710,
        bdW['exports']['maxPlayers'] = 0x8,
        bdW['exports']['serverSpread'] = 0x3,
        bdW['exports']['minServerSpace'] = 0x3,
        bdW['exports']['gamesPerServer'] = 0x5,
        bdW['exports']['serverBrowserRate'] = 0x2710,
        bdW['exports']['maxPlayersTotal'] = bdW['exports']['maxPlayers'] * bdW['exports']['gamesPerServer'] + 0x32,
        bdW['exports']['kickTimer'] = 0x15f90,
        bdW['exports']['isNode'] ? (bdW['exports']['matchmakerURL'] = bdW['exports']['isProd'] ? 'krunker_prod' == bdX['env']['VULTR_SCHEME'] ? 'https://matchmaker.krunker.io' : 'https://matchmaker_beta.krunker.io' : 'http://127.0.0.1:5050',
        bdW['exports']['apiURL'] = bdW['exports']['isProd'] ? 'krunker_prod' == bdX['env']['VULTR_SCHEME'] || 'krunker_social' == bdX['env']['VULTR_SCHEME'] ? 'https://api.krunker.io' : 'https://api_beta.krunker.io' : 'http://127.0.0.1:5060') : (bdW['exports']['matchmakerURL'] = bdW['exports']['isProd'] ? 'krunker.io' == location['hostname'] ? 'https://matchmaker.krunker.io' : 'https://matchmaker_beta.krunker.io' : 'http://127.0.0.1:5050',
        bdW['exports']['apiURL'] = bdW['exports']['isProd'] ? 'krunker.io' == location['hostname'] ? 'https://api.krunker.io' : 'https://api_beta.krunker.io' : 'http://127.0.0.1:5060'),
        bdW['exports']['needsRestart'] = !0x1,
        bdW['exports']['useLooseClient'] = !0x1,
        bdW['exports']['rewardTime'] = 0x1499700,
        bdW['exports']['rewardMinLvl'] = 0x5,
        bdW['exports']['compRegions'] = [{
            'name': 'EU',
            'icon': 'eu',
            'data': [{
                'name': 'KRUNKEUR',
                'prize': 0x578,
                'roster': ['VoKUS', 'ronics', 'AlexDoubleU', 'Nitrahh']
            }, {
                'name': 'UUED\x20GUMMID',
                'prize': 0x258,
                'roster': ['kiiturii', 'WasabiS', 'xXNONUTTERXx', 'BLNCR']
            }, {
                'name': 'Nine',
                'prize': 0x0,
                'roster': ['Chupacabra', 'The_Zionist', 'Tatsuu', 'ZR1']
            }, {
                'name': 'DOOM',
                'prize': 0x0,
                'roster': ['Viiper', 'Jbusom', 'Tahha', 'kari:D']
            }, {
                'name': 'OxicPoonTang',
                'prize': 0x0,
                'roster': ['cato818', 'Amuu123', 'Darebydare', 'Fortysevens']
            }]
        }, {
            'name': 'NA',
            'icon': 'na',
            'data': [{
                'name': 'nV',
                'prize': 0x578,
                'roster': ['RandomExport', 'Rickabonkers', 'Kouka', 'TaylorFerguson']
            }, {
                'name': 'BAKA',
                'prize': 0x258,
                'roster': ['4tapp', 'Gxngu', '魔42', 'Friendlies']
            }, {
                'name': 'Krunky\x20Boys',
                'prize': 0x0,
                'roster': ['bububoosh', 'GGkns', 'chazzychaz', 'ev0xge0']
            }, {
                'name': 'RIP\x20Theta',
                'prize': 0x0,
                'roster': ['UB_Caboose', 'Applechase', 'Predixtions', 'Visuall']
            }, {
                'name': 'Nine\x20NA',
                'prize': 0x0,
                'roster': ['Aoqii', 'Keyown', 'TristanTu', 'Byto']
            }]
        }, {
            'name': 'OCE',
            'icon': 'oce',
            'data': [{
                'name': 'Lore',
                'prize': 0x578,
                'roster': ['Mosswi', 'Agent_Chicken', 'Stazza', 'ShiraishiEZ']
            }, {
                'name': 'Omen',
                'prize': 0x258,
                'roster': ['Equinoxian', 'iiBazza', 'vEternity', 'Equaus']
            }, {
                'name': 'Tokgang',
                'prize': 0x0,
                'roster': ['caL_Tv', 'gymgoer31', 'maxmillion', 'peepoglad']
            }, {
                'name': 'Lore\x20v2',
                'prize': 0x0,
                'roster': ['ZaneAU', 'JamemesG', 'riderrr', '*Void']
            }, {
                'name': 'EXLE',
                'prize': 0x0,
                'roster': ['Tatti123', 'Kurocchi', 'F24CTAL', '-Gaze']
            }]
        }],
        bdW['exports']['queues'] = [{
            'id': 'r1v1',
            'name': 'windows.ranked.mode.r1v1'
        }, {
            'id': 'r2v2',
            'name': 'windows.ranked.mode.r2v2'
        }, {
            'id': 'r4v4',
            'name': 'windows.ranked.mode.r4v4'
        }],
        bdW['exports']['minRankedLevel'] = 0x14,
        bdW['exports']['endTimer'] = 0x61a8,
        bdW['exports']['endAnim'] = 0x1388,
        bdW['exports']['thirdPZ'] = 0xe,
        bdW['exports']['thirdPX'] = 0x5,
        bdW['exports']['serverConfig'] = [{
            'name': 'Players',
            'varN': 'maxPlayers',
            'def': 0x2,
            'max': 0xa,
            'maxF': 0x10,
            'min': 0x1,
            'step': 0x1
        }, {
            'name': 'Min\x20Players',
            'varN': 'minPlayers',
            'def': 0x0,
            'max': 0xa,
            'maxF': 0x10,
            'min': 0x0,
            'step': 0x1
        }, {
            'name': 'Lives',
            'varN': 'lives',
            'def': 0x0,
            'max': 0xa,
            'min': 0x0,
            'step': 0x1
        }, {
            'name': 'Minutes',
            'varN': 'gameTime',
            'def': 0x4,
            'max': 0x3c,
            'min': 0x0,
            'step': 0x1
        }, {
            'name': 'Gravity',
            'varN': 'gravMlt',
            'dontChange': !0x0,
            'def': 0x1,
            'max': 0x2,
            'min': 0.1,
            'step': 0.1
        }, {
            'name': 'Jump\x20Force',
            'varN': 'jumpMlt',
            'dontChange': !0x0,
            'def': 0x1,
            'max': 0x3,
            'min': 0.1,
            'step': 0.1
        }, {
            'name': 'Time\x20Scale',
            'varN': 'deltaMlt',
            'dontChange': !0x0,
            'def': 0x1,
            'max': 1.5,
            'min': 0.1,
            'step': 0.1
        }, {
            'name': 'Strafe\x20Speed',
            'varN': 'strafeSpd',
            'dontChange': !0x0,
            'def': 1.2,
            'max': 0x2,
            'min': 0x1,
            'step': 0.1
        }, {
            'name': 'Health\x20Multiplier',
            'varN': 'healthMlt',
            'dontChange': !0x0,
            'def': 0x1,
            'max': 0x3,
            'min': 0.1,
            'step': 0.1
        }, {
            'name': 'Weapon\x20Impulse',
            'varN': 'impulseMlt',
            'dontChange': !0x0,
            'def': 0x1,
            'max': 0x3,
            'min': 0x0,
            'step': 0.1
        }, {
            'name': 'Team\x201\x20Name',
            'varN': 'nameTeam1',
            'def': 'Team\x201',
            'hideE': !0x0,
            'input': !0x0
        }, {
            'name': 'Team\x202\x20Name',
            'varN': 'nameTeam2',
            'def': 'Team\x202',
            'hideE': !0x0,
            'input': !0x0
        }, {
            'name': 'Select\x20Team',
            'varN': 'selTeam',
            'def': !0x1,
            'bool': !0x0
        }, {
            'name': 'Spectating',
            'varN': 'allowSpect',
            'def': !0x0,
            'bool': !0x0
        }, {
            'name': 'Kill\x20Rewards',
            'varN': 'killRewards',
            'dontChange': !0x0,
            'def': !0x0,
            'bool': !0x0
        }, {
            'name': 'Headshots\x20Only',
            'varN': 'headshotOnly',
            'dontChange': !0x0,
            'def': !0x1,
            'bool': !0x0
        }, {
            'name': 'Sliding',
            'varN': 'canSlide',
            'def': !0x0,
            'bool': !0x0
        }, {
            'name': 'Auto\x20Jump',
            'varN': 'autoJump',
            'def': !0x1,
            'bool': !0x0
        }, {
            'name': '3rd\x20Person',
            'varN': 'thirdPerson',
            'def': !0x1,
            'bool': !0x0
        }, {
            'name': 'Hide\x20Nametags',
            'varN': 'nameTags',
            'def': !0x1,
            'bool': !0x0
        }],
        bdW['exports']['prefabIDS'] = ['CUBE', 'CRATE', 'BARREL', 'LADDER', 'PLANE', 'SPAWN_POINT', 'CAMERA_POSITION', 'VEHICLE', 'STACK', 'RAMP', 'SCORE_ZONE', 'BILLBOARD', 'DEATH_ZONE', 'PARTICLES', 'OBJECTIVE', 'TREE', 'CONE', 'CONTAINER', 'GRASS', 'CONTAINERR', 'ACIDBARREL', 'DOOR', 'WINDOW', 'FLAG', 'POINT_GATE', 'CHECK_POINT', 'WEAPON_PICKUP', 'TELEPORTER'],
        bdW['exports']['textureIDS'] = ['WALL', 'DIRT', 'FLOOR', 'GRID', 'GREY', 'DEFAULT', 'ROOF', 'FLAG', 'GRASS', 'CHECK', 'LINES', 'BRICK', 'LINK'],
        bdW['exports']['objectLimit'] = 0xdac,
        bdW['exports']['objectLimitF'] = 0x1770,
        bdW['exports']['spawnLimit'] = 0x14,
        bdW['exports']['billboardCnt'] = 0x5,
        bdW['exports']['followURLS'] = ['https://www.instagram.com/sidney.devries/', 'https://www.instagram.com/sidney.devries/', 'https://www.instagram.com/sidney.devries/', 'https://www.instagram.com/sidney.devries/', 'https://www.instagram.com/sidney.devries/', 'https://www.instagram.com/sidney.devries/', 'https://www.instagram.com/vincent.de.vries/'],
        bdW['exports']['gravity'] = 0.00015,
        bdW['exports']['deathY'] = -0x64,
        bdW['exports']['skyScale'] = 0x4650,
        bdW['exports']['shadowDst'] = 0x4b0,
        bdW['exports']['shadowRes'] = 0x400,
        bdW['exports']['shadowOff'] = 0.004,
        bdW['exports']['lightDistance'] = 0x1f4,
        bdW['exports']['cornerPad'] = 0x1,
        bdW['exports']['cornerScl'] = 2.5,
        bdW['exports']['cornerH'] = 0x7,
        bdW['exports']['wallH'] = 0x5,
        bdW['exports']['wallW'] = 0.8,
        bdW['exports']['propsH'] = ['crate', 'barrel', 'cone', 'stack', 'acidbarrel'],
        bdW['exports']['propsCP'] = {
            'barrel': -0x1,
            'cone': -0x2
        },
        bdW['exports']['crateScale'] = 0x6,
        bdW['exports']['stackScale'] = 0x6,
        bdW['exports']['barrelScale'] = 0x4,
        bdW['exports']['acidbarrelScale'] = bdW['exports']['barrelScale'],
        bdW['exports']['treeScale'] = 0xa,
        bdW['exports']['doorScale'] = 0x5,
        bdW['exports']['windowScale'] = 0x6,
        bdW['exports']['coneScale'] = 0x4,
        bdW['exports']['containerScale'] = 0x7,
        bdW['exports']['containerrScale'] = bdW['exports']['containerScale'],
        bdW['exports']['grassScale'] = 0x20,
        bdW['exports']['vehicleScale'] = 0x14,
        bdW['exports']['barrelMlt'] = 0x1,
        bdW['exports']['ladderWidth'] = 3.2,
        bdW['exports']['ladderScale'] = 0.5,
        bdW['exports']['terrainGrid'] = 0x8,
        bdW['exports']['maxTerrainS'] = 0xfa0,
        bdW['exports']['otherSoundMlt'] = 0.55,
        bdW['exports']['maxParticles'] = 0x64,
        bdW['exports']['explosionRange'] = 0xc8,
        bdW['exports']['chatMaxLength'] = 0x46,
        bdW['exports']['chatInterval'] = 0x320,
        bdW['exports']['voiceChatInterval'] = 0x7d0,
        bdW['exports']['voiceChatMaxLength'] = 0x5,
        bdW['exports']['movDirs'] = [];
        for (var bdY = 0x0; 0x8 > bdY; ++bdY)
            bdW['exports']['movDirs']['push'](-Math['PI'] + (bdY + 0x1) * Math['PI'] / 0x4);
        bdW['exports']['interpolation'] = 1.1,
        bdW['exports']['stateHistory'] = 0x3e8,
        bdW['exports']['syncFreq'] = 0x320,
        bdW['exports']['pingCount'] = 0xa,
        bdW['exports']['mouseSens'] = 0.0024,
        bdW['exports']['camChaseTrn'] = 0.0022,
        bdW['exports']['camChaseSpd'] = 0.0012,
        bdW['exports']['camChaseSen'] = 0.2,
        bdW['exports']['camChaseDst'] = 0x18,
        bdW['exports']['specMinD'] = 0xa,
        bdW['exports']['specMaxD'] = 0xa0,
        bdW['exports']['menuCamDist'] = 0xc8,
        bdW['exports']['menuCamAngle'] = -0.5,
        bdW['exports']['menuCamSpeed'] = 0.1,
        bdW['exports']['idleAnimS'] = 0.0015,
        bdW['exports']['animMult'] = 1.2,
        bdW['exports']['leanPull'] = 0.99,
        bdW['exports']['leanSens'] = 0.05,
        bdW['exports']['leanMax'] = 0.16,
        bdW['exports']['leanPullZ'] = 0.99,
        bdW['exports']['leanMltZ'] = 0.03,
        bdW['exports']['bobMltY'] = 0.024,
        bdW['exports']['bobMltZ'] = 0.02,
        bdW['exports']['bobPullY'] = 0.985,
        bdW['exports']['bobPullZ'] = 0.99,
        bdW['exports']['landPull'] = 0.994,
        bdW['exports']['landPullV'] = 0.985,
        bdW['exports']['landOff'] = 0.15,
        bdW['exports']['aimAnimMlt'] = 0.18,
        bdW['exports']['aimSlow'] = 0.55,
        bdW['exports']['aimJumpSlow'] = 0.85,
        bdW['exports']['stepAnim'] = 0.075,
        bdW['exports']['stepMlt'] = 0.25,
        bdW['exports']['stepPull'] = 0.995,
        bdW['exports']['hpSegments'] = 0x7,
        bdW['exports']['maxHealth'] = 0x64,
        bdW['exports']['passiveInc'] = 0x1f4,
        bdW['exports']['cameraHeight'] = 1.5,
        bdW['exports']['playerSpeed'] = 0.00042,
        bdW['exports']['slippingSpeed'] = 0.0003,
        bdW['exports']['ladderSpeed'] = 0.035,
        bdW['exports']['ladderDecel'] = 0.97,
        bdW['exports']['slideDecel'] = 0.999,
        bdW['exports']['slideTime'] = 0x15e,
        bdW['exports']['terrainSlideDecel'] = 0.9996,
        bdW['exports']['groundDecel'] = 0.99,
        bdW['exports']['terrainDecel'] = 0.99,
        bdW['exports']['terrainSlipDecel'] = 0.99,
        bdW['exports']['airSpeed'] = 0.000047,
        bdW['exports']['airDecel'] = 0.9996,
        bdW['exports']['jumpVel'] = 0.072,
        bdW['exports']['jumpPush'] = 0.1,
        bdW['exports']['decelMin'] = 0.0001,
        bdW['exports']['climbHeight'] = 0x3,
        bdW['exports']['wpnSpin'] = 0.018,
        bdW['exports']['terrainSlideThreshold'] = 1.2,
        bdW['exports']['terrainGravityMlt'] = 1.85,
        bdW['exports']['playerSlideVelMlt'] = 1.2,
        bdW['exports']['playerTerrainSlideVelMlt'] = 0.4,
        bdW['exports']['playerSlippingJumpCooldown'] = 0x1f4,
        bdW['exports']['materialDens'] = {
            'flesh': 0.2,
            'default': 0.5
        },
        bdW['exports']['nameOffset'] = 0.6,
        bdW['exports']['nameOffsetHat'] = 0.8,
        bdW['exports']['maxNameLength'] = 0xe,
        bdW['exports']['maxPassLength'] = 0x10,
        bdW['exports']['playerHeight'] = 0xb,
        bdW['exports']['chestWidth'] = 2.6,
        bdW['exports']['chestScale'] = 1.3,
        bdW['exports']['armScale'] = 1.3,
        bdW['exports']['legScale'] = 1.3,
        bdW['exports']['uArmLength'] = 2.7,
        bdW['exports']['armInset'] = -0.1,
        bdW['exports']['lArmLength'] = 2.7,
        bdW['exports']['headScale'] = 0x2,
        bdW['exports']['armOff'] = -0.8,
        bdW['exports']['legHeight'] = 4.2,
        bdW['exports']['playerScale'] = (0x2 * bdW['exports']['armScale'] + bdW['exports']['chestWidth'] + bdW['exports']['armInset']) / 0x2,
        bdW['exports']['hitBoxPad'] = 0x1,
        bdW['exports']['tracerMinDst'] = 0x14,
        bdW['exports']['tracerMaxDst'] = 0x1f4,
        bdW['exports']['tracerChance'] = 0x1,
        bdW['exports']['crouchLean'] = -0.1 * Math['PI'],
        bdW['exports']['crouchDst'] = 0x3,
        bdW['exports']['crouchSlow'] = 0.3,
        bdW['exports']['crouchSpeed'] = 0.007,
        bdW['exports']['crouchJump'] = 0.25,
        bdW['exports']['crouchSpread'] = 0.4,
        bdW['exports']['crouchAnim'] = 0.0008,
        bdW['exports']['crouchAnimMlt'] = 0.5,
        bdW['exports']['spreadMove'] = 0x1e,
        bdW['exports']['spreadFall'] = 0x23,
        bdW['exports']['spreadRecover'] = 0.985,
        bdW['exports']['spreadAdj'] = 0.00063,
        bdW['exports']['spreadMlt'] = 0x190,
        bdW['exports']['recoilMlt'] = 0.3,
        bdW['exports']['flagMsg'] = 'You\x20have\x20the\x20Flag',
        bdW['exports']['flagMsgE'] = 'Enemy\x20has\x20your\x20Flag',
        bdW['exports']['flagMsgRC'] = 'Enemy\x20has\x20your\x20Flag',
        bdW['exports']['flagZoneS'] = 0x18,
        bdW['exports']['flagZoneH'] = 0x24,
        bdW['exports']['flagScale'] = 0xc,
        bdW['exports']['flagOff'] = 0x6,
        bdW['exports']['flagHOff'] = 0xf,
        bdW['exports']['interactTimer'] = 0x64,
        bdW['exports']['pickupZoneX'] = 0xc,
        bdW['exports']['pickupZoneZ'] = 0x4,
        bdW['exports']['pickupZoneH'] = 0x2,
        bdW['exports']['pickupScale'] = 0x6,
        bdW['exports']['pickupOff'] = 0x1,
        bdW['exports']['maxLevel'] = 0x66,
        bdW['exports']['assistTime'] = 0x1388,
        bdW['exports']['assistScore'] = 0x19,
        bdW['exports']['assistMin'] = 0x14,
        bdW['exports']['medalAnim'] = 0x3e8,
        bdW['exports']['medalDelay'] = 0x384,
        bdW['exports']['scoreStreak'] = 0x7d0,
        bdW['exports']['feedTimer'] = 0x7d0,
        bdW['exports']['spinTimer'] = 0x708,
        bdW['exports']['endStats'] = ['sid', 'name', 'score', 'kills', 'deaths', 'reward'],
        bdW['exports']['endForm'] = {
            'reward': function(bdW) {
                return bdW ? '<span\x20style=\x27color:#F8C55C\x27>+' + bdW + '</span>\x20KR' : 'NONE';
            },
            'time': function(bdW, bdX, bdY) {
                return bdY['timer'] || 'DNF';
            },
            'infected': function(bdW, bdX, bdY) {
                return bdY['convs'];
            },
            'found': function(bdW, bdX, bdY) {
                return bdY['convs'];
            },
            'weapon': function(bdW, bdX, bdY) {
                return bdY['killList']['length'];
            }
        },
        bdW['exports']['hitLife'] = 0x7d0,
        bdW['exports']['regenDelay'] = 0x1388,
        bdW['exports']['regenVal'] = 0.1,
        bdW['exports']['sprayTimer'] = 0x3e8,
        bdW['exports']['sprayRange'] = 0x19,
        bdW['exports']['sprayScale'] = 0xf,
        bdW['exports']['deathDelay'] = 0xaf0,
        bdW['exports']['deathFollowD'] = 0x64,
        bdW['exports']['suicides'] = ['uninstall\x20life', 'toaster\x20bath', 'alt\x20f4', 'not\x20alive', 'neck\x20rope', 'scooter\x20ankle', 'death.exe'],
        bdW['exports']['fov'] = 0x46,
        bdW['exports']['viewDist'] = 0x7d0,
        bdW['exports']['nameVisRate'] = 0xc8,
        bdW['exports']['worldUV'] = 0x3c,
        bdW['exports']['ambientVal'] = 0.5,
        bdW['exports']['ambD'] = 0x2,
        bdW['exports']['ambMlt'] = 0xf,
        bdW['exports']['ambOff'] = 0.09,
        bdW['exports']['ambScale'] = 0xa,
        bdW['exports']['ambDiv'] = 0x14,
        bdW['exports']['ambSFactor'] = 0x1,
        bdW['exports']['ambBleed'] = 0x0,
        bdW['exports']['boosterSpd'] = 0.002,
        bdW['exports']['borderH'] = 0x3e8,
        bdW['exports']['soundScapes'] = {
            'Default': 0x1,
            'City': 0x2,
            'Desert': 0x3,
            'Market': 0x4
        },
        bdW['exports']['mapTabs'] = [{
            'n': 'Hot',
            'c': 0x4e,
            't': 'recent'
        }, {
            'n': 'New',
            'c': 0x3c,
            't': 'initialdate'
        }, {
            'n': 'Favorites',
            'c': 0x24,
            't': 'votes'
        }, {
            'n': 'My\x20Maps',
            'c': 0x2d,
            'sendID': !0x0,
            't': 'votes'
        }, {
            'n': 'Search',
            'search': !0x0,
            't': 'votes'
        }],
        bdW['exports']['modTabs'] = [{
            'n': 'Hot',
            't': 'recent'
        }, {
            'n': 'New',
            't': 'initialdate'
        }, {
            'n': 'Favorites',
            't': 'votes'
        }, {
            'n': 'My\x20Mods',
            'sendID': !0x0,
            't': 'votes'
        }, {
            'n': 'Search',
            'search': !0x0,
            't': 'votes'
        }],
        bdW['exports']['saleMax'] = 0x989680,
        bdW['exports']['saleGrace'] = 0x927c0,
        bdW['exports']['marketMinLVl'] = 0x14,
        bdW['exports']['verClans'] = ['DEV', 'FaZe', 'Lore', 'nV', 'Oxic', 'Verb', 'Omen', 'ロリ幼女', 'VOID', 'JBP', 'PHIL', 'TIMP', '24/7', 'g59'],
        bdW['exports']['rankVar'] = 0.03,
        bdW['exports']['newDataInterval'] = 0x1d4c0,
        bdW['exports']['socials'] = ['leaders', 'profile', 'maps', 'tourney', 'market'],
        bdW['exports']['marketQueries'] = {
            'market': {
                'btn': 'Info',
                'checkItem': function(bdW) {
                    return !!bdW['funds'];
                }
            },
            'inventory': {
                'btn': 'List\x20to\x20Sell',
                'checkItem': function(bdW) {
                    return !bdW['funds'] && bdW['cnt'];
                }
            },
            'sales': {
                'btn': 'Unlist',
                'checkItem': function(bdW) {
                    return !!bdW['funds'];
                }
            }
        },
        bdW['exports']['leaderQueries'] = ['player_score', 'player_kills', 'player_wins', 'player_timeplayed', 'player_funds', 'player_clan'],
        bdW['exports']['leaderCal'] = {
            'player_score': function(bdX) {
                var bdY = Math['max'](0x1, Math['floor'](bdW['exports']['rankVar'] * Math['sqrt'](bdX)));
                return '<span\x20class=\x27floatR\x27><img\x20src=\x27./img/levels/' + Math['max'](Math['min'](bdW['exports']['maxLevel'] - 0x1, bdY['roundToNearest'](0x2) - 0x1), 0x0) + '.png\x27\x20class=\x27rnkIcon\x27>' + bdY + '</span>';
            },
            'player_kills': function(bdW) {
                return bdW + '<span\x20class=\x27lName\x27>\x20kills</span>';
            },
            'player_wins': function(bdW) {
                return bdW + '<span\x20class=\x27lName\x27>\x20wins</span>';
            },
            'player_funds': function(bdW) {
                return '<span\x20style=\x27color:rgba(0,0,0,0.4)\x27>' + bdW['toString']()['replace'](/\B(?=(\d{3})+(?!\d))/g, ',') + '</span>\x20KR';
            },
            'player_timeplayed': function(bdW) {
                var bdX = bdW / 0x3e8 / 0x3c
                  , bdY = parseInt(bdX % 0x3c);
                bdX /= 0x3c;
                var bep = parseInt(bdX % 0x18);
                bdX /= 0x18;
                var beq = parseInt(bdX);
                return (beq ? beq + 'd\x20' : '') + (bep ? bep + 'h\x20' : '') + (bdY || 0x0) + 'm\x20';
            }
        },
        bdW['exports']['regionNames'] = {
            'local': 'Local',
            'us-nj': 'New\x20York',
            'us-il': 'Chicago',
            'us-tx': 'Dallas',
            'us-wa': 'Seattle',
            'us-ca-la': 'Los\x20Angeles',
            'us-ga': 'Atlanta',
            'nl-ams': 'Amsterdam',
            'gb-lon': 'London',
            'de-fra': 'Frankfurt',
            'us-ca-sv': 'Silicon\x20Valley',
            'au-syd': 'Sydney',
            'fr-par': 'Paris',
            'jb-hnd': 'Tokyo',
            'us-fl': 'Miami',
            'sgp': 'Singapore'
        },
        bdW['exports']['langNames'] = {
            'en': 'English',
            'es': 'Spanish',
            'de': 'German',
            'kr': 'Korean'
        },
        bdW['exports']['skinColors'] = [0x805c4a, 0xa77860, 0xd38d6f, 0xcc997e, 0xedbfa6];
    }
    ['call'](this, bdY(0xe)));
}
, function(ber, bes, bet) {
    (function(bes) {
        const bev = bet(0x7)
          , bew = bet(0x23);
        ber['exports']['keyboardMap'] = ['', '', '', 'CANCEL', '', '', 'HELP', '', 'BACK_SPACE', 'TAB', '', '', 'CLEAR', 'ENTER', 'ENTER_SPECIAL', '', 'SHIFT', 'CONTROL', 'ALT', 'PAUSE', 'CAPS_LOCK', 'KANA', 'EISU', 'JUNJA', 'FINAL', 'HANJA', '', 'ESCAPE', 'CONVERT', 'NONCONVERT', 'ACCEPT', 'MODECHANGE', 'SPACE', 'PAGE_UP', 'PAGE_DOWN', 'END', 'HOME', 'LEFT', 'UP', 'RIGHT', 'DOWN', 'SELECT', 'PRINT', 'EXECUTE', 'PRINTSCREEN', 'INSERT', 'DELETE', '', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'COLON', 'SEMICOLON', 'LESS_THAN', 'EQUALS', 'GREATER_THAN', 'QUESTION_MARK', 'AT', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'OS_KEY', '', 'CONTEXT_MENU', '', 'SLEEP', 'NUMPAD0', 'NUMPAD1', 'NUMPAD2', 'NUMPAD3', 'NUMPAD4', 'NUMPAD5', 'NUMPAD6', 'NUMPAD7', 'NUMPAD8', 'NUMPAD9', 'MULTIPLY', 'ADD', 'SEPARATOR', 'SUBTRACT', 'DECIMAL', 'DIVIDE', 'F1', 'F2', 'F3', 'F4', 'F5', 'F6', 'F7', 'F8', 'F9', 'F10', 'F11', 'F12', 'F13', 'F14', 'F15', 'F16', 'F17', 'F18', 'F19', 'F20', 'F21', 'F22', 'F23', 'F24', '', '', '', '', '', '', '', '', 'NUM_LOCK', 'SCROLL_LOCK', 'WIN_OEM_FJ_JISHO', 'WIN_OEM_FJ_MASSHOU', 'WIN_OEM_FJ_TOUROKU', 'WIN_OEM_FJ_LOYA', 'WIN_OEM_FJ_ROYA', '', '', '', '', '', '', '', '', '', 'CIRCUMFLEX', 'EXCLAMATION', 'DOUBLE_QUOTE', 'HASH', 'DOLLAR', 'PERCENT', 'AMPERSAND', 'UNDERSCORE', 'OPEN_PAREN', 'CLOSE_PAREN', 'ASTERISK', 'PLUS', 'PIPE', 'HYPHEN_MINUS', 'OPEN_CURLY_BRACKET', 'CLOSE_CURLY_BRACKET', 'TILDE', '', '', '', '', 'VOLUME_MUTE', 'VOLUME_DOWN', 'VOLUME_UP', '', '', 'SEMICOLON', 'EQUALS', 'COMMA', 'MINUS', 'PERIOD', 'SLASH', 'BACK_QUOTE', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'OPEN_BRACKET', 'BACK_SLASH', 'CLOSE_BRACKET', 'QUOTE', '', 'META', 'ALTGR', '', 'WIN_ICO_HELP', 'WIN_ICO_00', '', 'WIN_ICO_CLEAR', '', '', 'WIN_OEM_RESET', 'WIN_OEM_JUMP', 'WIN_OEM_PA1', 'WIN_OEM_PA2', 'WIN_OEM_PA3', 'WIN_OEM_WSCTRL', 'WIN_OEM_CUSEL', 'WIN_OEM_ATTN', 'WIN_OEM_FINISH', 'WIN_OEM_COPY', 'WIN_OEM_AUTO', 'WIN_OEM_ENLW', 'WIN_OEM_BACKTAB', 'ATTN', 'CRSEL', 'EXSEL', 'EREOF', 'PLAY', 'ZOOM', '', 'PA1', 'WIN_OEM_CLEAR', ''],
        ber['exports']['getB64Size'] = function() {}
        ,
        Number['prototype']['round'] = function(ber) {
            return +this['toFixed'](ber);
        }
        ,
        String['prototype']['escape'] = function() {
            return (this + '')['replace'](/[\\"']/g, '\x5c$&')['replace'](/\u0000/g, '\x5c0');
        }
        ,
        Number['prototype']['roundToNearest'] = function(ber) {
            return 0x0 < this ? Math['ceil'](this / ber) * ber : 0x0 > this ? Math['floor'](this / ber) * ber : this;
        }
        ,
        ber['exports']['capFirst'] = function(ber) {
            return ber['charAt'](0x0)['toUpperCase']() + ber['slice'](0x1);
        }
        ,
        ber['exports']['isURL'] = function(ber) {
            try {
                return /^(https?:\/\/)?((([a-z\d]([a-z\d-]*[a-z\d])*)\.)+[a-z]{2,}|((\d{1,3}\.){3}\d{1,3}))(\:\d+)?(\/[-a-z\d%@_.~+&:]*)*(\?[;&a-z\d%@_.,~+&:=-]*)?(\#[-a-z\d_]*)?$/i['test'](ber);
            } catch (beB) {}
            return !0x1;
        }
        ,
        ber['exports']['arrayAverage'] = function(ber) {
            for (var bes = 0x0, bet = 0x0; bet < ber['length']; bet++)
                bes += ber[bet];
            return bes / ber['length'];
        }
        ,
        ber['exports']['countInArray'] = function(ber, bes) {
            for (var bet = 0x0, bev = 0x0; bev < ber['length']; bev++)
                ber[bev] === bes && bet++;
            return bet;
        }
        ,
        ber['exports']['formatNum'] = function(ber) {
            var bes = Math['floor'](Math['log'](Math['abs'](ber)) / Math['log'](0x3e8))
              , bet = 'kmb'[bes - 0x1];
            return bet ? (ber / Math['pow'](0x3e8, bes))['toFixed'](0x1) + bet : '' + ber;
        }
        ,
        ber['exports']['randInt'] = function(ber, bes) {
            return Math['floor'](Math['random']() * (bes - ber + 0x1)) + ber;
        }
        ,
        ber['exports']['randFloat'] = function(ber, bes) {
            return Math['random']() * (bes - ber) + ber;
        }
        ,
        ber['exports']['getRandom'] = function(bes) {
            return bes[ber['exports']['randInt'](0x0, bes['length'] - 0x1)];
        }
        ,
        ber['exports']['getDistance'] = function(ber, bes, bet, bev) {
            return Math['sqrt']((bet -= ber) * bet + (bev -= bes) * bev);
        }
        ,
        ber['exports']['getDistance3D'] = function(ber, bes, bet, bev, bew, bf0) {
            var bf1 = ber - bev
              , bf2 = bes - bew
              , bf3 = bet - bf0;
            return Math['sqrt'](bf1 * bf1 + bf2 * bf2 + bf3 * bf3);
        }
        ,
        ber['exports']['getAnglesSSS'] = function(ber, bes, bet) {
            var bev = Math['acos']((bes * bes + bet * bet - ber * ber) / (0x2 * bes * bet))
              , bew = Math['acos']((bet * bet + ber * ber - bes * bes) / (0x2 * bet * ber))
              , bf9 = Math['PI'] - bev - bew;
            return [-bev - Math['PI'] / 0x2, bew, bf9];
        }
        ,
        ber['exports']['getXDir'] = function(bes, bet, bev, bew, bfe, bff) {
            var bfg = Math['abs'](bet - bfe)
              , bfh = ber['exports']['getDistance3D'](bes, bet, bev, bew, bfe, bff);
            return Math['asin'](bfg / bfh) * (bet > bfe ? -0x1 : 0x1);
        }
        ,
        ber['exports']['getAngleDst'] = function(ber, bes) {
            return Math['atan2'](Math['sin'](bes - ber), Math['cos'](ber - bes));
        }
        ,
        ber['exports']['getAngleDist2'] = function(ber, bes) {
            var bet = Math['abs'](bes - ber) % (0x2 * Math['PI']);
            return bet > Math['PI'] ? 0x2 * Math['PI'] - bet : bet;
        }
        ,
        ber['exports']['toRad'] = function(ber) {
            return ber * (Math['PI'] / 0xb4);
        }
        ,
        ber['exports']['getDirection'] = function(ber, bes, bet, bev) {
            return Math['atan2'](bes - bev, ber - bet);
        }
        ,
        ber['exports']['lerp'] = function(ber, bes, bet) {
            return ber + (bes - ber) * bet;
        }
        ,
        ber['exports']['orderByScore'] = function(ber, bes) {
            return bes['score'] - ber['score'];
        }
        ,
        ber['exports']['orderByKills'] = function(ber, bes) {
            return bes['kills'] - ber['kills'];
        }
        ,
        ber['exports']['orderByDst'] = function(ber, bes) {
            return ber['dst'] - bes['dst'];
        }
        ,
        ber['exports']['orderByNum'] = function(ber, bes) {
            return ber - bes;
        }
        ,
        ber['exports']['capFirst'] = function(ber) {
            return ber['charAt'](0x0)['toUpperCase']() + ber['slice'](0x1);
        }
        ,
        ber['exports']['truncateText'] = function(ber, bes) {
            return ber['length'] > bes ? ber['substring'](0x0, bes) + '...' : ber;
        }
        ,
        ber['exports']['cleanseString'] = function(ber) {
            return ber ? ber['replace'](/['"]+/g, '') : ber;
        }
        ,
        ber['exports']['randomString'] = function(ber) {
            for (var bes = '', bet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789', bev = 0x0; bev < ber; bev++)
                bes += bet['charAt'](Math['floor'](Math['random']() * bet['length']));
            return bes;
        }
        ,
        ber['exports']['formatNumCash'] = function(ber) {
            return parseFloat(Math['round'](0x64 * ber) / 0x64)['toFixed'](0x2);
        }
        ,
        ber['exports']['getKeyName'] = function(bes) {
            return 0x2710 < bes ? 'M' + (bes - 0x2710) : ber['exports']['keyboardMap'][bes];
        }
        ;
        var bfN = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];
        ber['exports']['getDate'] = function(ber) {
            if (!ber)
                return 'None';
            ber = ber['split'](/[-A-Z :\.]/i);
            var bes = new Date(ber[0x0],--ber[0x1],ber[0x2],ber[0x3],ber[0x4],ber[0x5])
              , bet = new Date(bes['getTime']());
            return bet['getDate']() + '\x20' + bfN[bet['getMonth']()] + '\x20' + bet['getFullYear']();
        }
        ,
        ber['exports']['getTime'] = function(ber, bes) {
            if ('inf' == ber)
                return 'Infinite';
            var bet = parseInt(ber % 0x3e8 / 0x64)
              , bev = parseInt(ber / 0x3e8 % 0x3c)
              , bew = parseInt(ber / 0xea60 % 0x3c);
            return (bew = 0xa > bew ? '0' + bew : bew) + ':' + (bev = 0xa > bev ? '0' + bev : bev) + (bes ? '.' + bet : '');
        }
        ,
        ber['exports']['commaFormatNum'] = function(ber) {
            return ber['toString']()['replace'](/\B(?=(\d{3})+(?!\d))/g, ',');
        }
        ,
        ber['exports']['getReadableTime'] = function(ber, bes) {
            var bet = Math['floor'](ber / 0x3e8)
              , bev = Math['floor'](bet / 0x3c);
            bet %= 0x3c;
            var bew = Math['floor'](bev / 0x3c);
            bev %= 0x3c;
            var bfN = Math['floor'](bew / 0x18);
            return (bfN ? bfN + 'd\x20' : '') + ((bew %= 0x18) ? bew + 'h\x20' : '') + (bev || 0x0) + 'm\x20' + (bes ? bet + 's' : '');
        }
        ,
        ber['exports']['getTimeH'] = function(ber) {
            parseInt(ber % 0x3e8 / 0x64);
            var bes = Math['floor'](ber / 0x3e8 % 0x3c)
              , bet = Math['floor'](ber / 0xea60 % 0x3c)
              , bev = Math['floor'](ber / 0x36ee80 % 0x18);
            return (bev = 0xa > bev ? '0' + bev : bev) + ':' + (bet = 0xa > bet ? '0' + bet : bet) + ':' + (bes = 0xa > bes ? '0' + bes : bes);
        }
        ,
        ber['exports']['scrambleS'] = function(ber) {
            return ber && ber['replace'] ? ber['replace'](/.(.)?/g, '$1') + ('d' + ber)['replace'](/.(.)?/g, '$1') : ber;
        }
        ,
        ber['exports']['sanitizeStr'] = function(ber) {
            return ber && ber['replace'] ? ber['replace'](/<|>/g, '')['replace'](/[^\x00-\x7F]/g, '') : ber;
        }
        ,
        ber['exports']['fixTo'] = function(ber, bes) {
            return parseFloat(ber['toFixed'](bes));
        }
        ,
        ber['exports']['limit'] = function(ber, bes) {
            return ber < -bes ? -bes : ber > bes ? bes : ber;
        }
        ,
        ber['exports']['limitMM'] = function(ber, bes, bet) {
            return ber < bes ? bes : ber > bet ? bet : ber;
        }
        ,
        ber['exports']['cropVal'] = function(ber, bes) {
            return ber <= bes && ber >= -bes ? 0x0 : ber;
        }
        ,
        ber['exports']['isNumber'] = function(ber) {
            return null != ber && 'number' == typeof ber && !isNaN(ber) && isFinite(ber);
        }
        ,
        ber['exports']['arrayInts'] = function(bes) {
            for (var bet = 0x0; bet < bes['length']; ++bet)
                if (!ber['exports']['isNumber'](bes[bet]))
                    return !0x1;
            return !0x0;
        }
        ,
        ber['exports']['isArray'] = function(ber) {
            return !!ber && ber['constructor'] === Array;
        }
        ,
        ber['exports']['isString'] = function(ber) {
            return ber && 'string' == typeof ber;
        }
        ,
        ber['exports']['emptyString'] = function(ber) {
            return !ber || 0x0 === ber['length'] || /^\s*$/['test'](ber) || !ber['trim']();
        }
        ,
        ber['exports']['compareString'] = function(ber, bes) {
            return 0x0 <= ber['toLowerCase']()['indexOf'](bes['toLowerCase']()) || 0x0 <= bes['toLowerCase']()['indexOf'](ber['toLowerCase']());
        }
        ;
        ber['exports']['lineInRect'] = function(ber, bes, bet, bev, bew, bfN, bgw, bgx, bgy, bgz, bgA, bgB) {
            var bgC = (bgw - ber) * bev
              , bgD = (bgz - ber) * bev
              , bgE = (bgy - bet) * bfN
              , bgF = (bgB - bet) * bfN
              , bgG = (bgx - bes) * bew
              , bgH = (bgA - bes) * bew
              , bgI = Math['max'](Math['max'](Math['min'](bgC, bgD), Math['min'](bgE, bgF)), Math['min'](bgG, bgH))
              , bgJ = Math['min'](Math['min'](Math['max'](bgC, bgD), Math['max'](bgE, bgF)), Math['max'](bgG, bgH));
            return !(0x0 > bgJ) && !(bgI > bgJ) && bgI;
        }
        ,
        ber['exports']['pointInBox3D'] = function(ber, bes, bet, bev, bew) {
            return bew = bew || 0x0,
            ber >= bev['x'] - bev['width'] - bew && ber <= bev['x'] + bev['width'] + bew && bes >= bev['y'] - bev['height'] - bew && bes <= bev['y'] + bev['height'] + bew && bet >= bev['z'] - bev['length'] - bew && bet <= bev['z'] + bev['length'] + bew;
        }
        ,
        ber['exports']['similar'] = function(ber, bes, bet) {
            return bet = bet || 0x0,
            Math['abs'](ber - bes) <= bet;
        }
        ,
        ber['exports']['pointInBox'] = function(ber, bes, bet, bev, bew, bfN, bgY) {
            return bgY ? ber >= bet && ber <= bew && bes >= bev && bes <= bfN : ber > bet && ber < bew && bes > bev && bes < bfN;
        }
        ,
        ber['exports']['sharePos'] = function(ber, bes, bet) {
            return bet = bet || 0x0,
            Math['abs'](ber['x'] - bes['x']) <= bet && Math['abs'](ber['y'] - bes['y']) <= bet && Math['abs'](ber['z'] - bes['z']) <= bet && Math['abs'](ber['d'] - bes['d']) <= bet;
        }
        ,
        ber['exports']['cdv'] = {
            'x': 'width',
            'y': 'height',
            'z': 'length'
        },
        ber['exports']['boxIntersection'] = function(bes, bet, bev, bew, bfN) {
            var bh7 = ber['exports']['cdv'][bev]
              , bh8 = ber['exports']['cdv'][bew]
              , bh9 = bes[bev] - bes[bh7] - 0.1
              , bha = bet[bev] - bet[bh7] - 0.1
              , bhb = bes[bev] + bes[bh7] + 0.1
              , bhc = bet[bev] + bet[bh7] + 0.1
              , bhd = bes[bew] - bes[bh8] - 0.1
              , bhe = bet[bew] - bet[bh8] - 0.1
              , bhf = bes[bew] + bes[bh8] + 0.1
              , bhg = bet[bew] + bet[bh8] + 0.1
              , bhh = Math['max'](bh9, bha)
              , bhi = Math['min'](bhb, bhc);
            if (bhi >= bhh) {
                var bhj = Math['max'](bhd, bhe)
                  , bhk = Math['min'](bhf, bhg);
                if (bhk >= bhj) {
                    for (var bhl = [{
                        [bev]: bhh,
                        [bew]: bhj,
                        'd': bfN[0x0]
                    }, {
                        [bev]: bhi,
                        [bew]: bhk,
                        'd': bfN[0x1]
                    }, {
                        [bev]: bhh,
                        [bew]: bhk,
                        'd': bfN[0x2]
                    }, {
                        [bev]: bhi,
                        [bew]: bhj,
                        'd': bfN[0x3]
                    }], bhm = bhl['length'] - 0x1; 0x0 <= bhm; --bhm)
                        (bhl[bhm][bev] == bhb && bhl[bhm][bev] == bhc || bhl[bhm][bev] == bh9 && bhl[bhm][bev] == bha || bhl[bhm][bew] == bhf && bhl[bhm][bew] == bhg || bhl[bhm][bew] == bhd && bhl[bhm][bew] == bhe || ber['exports']['pointInBox'](bhl[bhm][bev], bhl[bhm][bew], bh9, bhd, bhb, bhf) || ber['exports']['pointInBox'](bhl[bhm][bev], bhl[bhm][bew], bha, bhe, bhc, bhg)) && (bhl[bhm]['dontUse'] = !0x0);
                    return bhl;
                }
            }
            return null;
        }
        ,
        ber['exports']['boxCornerIntersection'] = function(bes, bet, bev, bew) {
            for (var bfN = ber['exports']['cdv'][bev], bhs = ber['exports']['cdv'][bew], bht = bes[bev] - bes[bfN], bhu = bet[bev] - bet[bfN], bhv = bes[bev] + bes[bfN], bhw = bet[bev] + bet[bfN], bhx = bes[bew] - bes[bhs], bhy = bet[bew] - bet[bhs], bhz = bes[bew] + bes[bhs], bhA = bet[bew] + bet[bhs], bhB = [{
                [bev]: bht,
                [bew]: bhx,
                'd': Math['PI'] / 0x2
            }, {
                [bev]: bht,
                [bew]: bhz,
                'd': Math['PI']
            }, {
                [bev]: bhv,
                [bew]: bhx,
                'd': 0x0
            }, {
                [bev]: bhv,
                [bew]: bhz,
                'd': -Math['PI'] / 0x2
            }], bhC = bhB['length'] - 0x1; 0x0 <= bhC; --bhC)
                bhB[bhC]['i'] = bhC,
                ber['exports']['pointInBox'](bhB[bhC][bev], bhB[bhC][bew], bhu, bhy, bhw, bhA, !0x0) || bhB['splice'](bhC, 0x1);
            return bhB['length'] ? bhB : null;
        }
        ,
        ber['exports']['getIntersection'] = function(bes, bet, bev) {
            var bew = ber['exports']['cdv'][bev]
              , bfN = bes[bev] - bes[bew]
              , bhI = bet[bev] - bet[bew]
              , bhJ = bes[bev] + bes[bew]
              , bhK = bet[bev] + bet[bew]
              , bhL = Math['max'](bfN, bhI)
              , bhM = Math['min'](bhJ, bhK);
            if (bhM >= bhL) {
                var bhN = (bhM - bhL) / 0x2;
                return {
                    [bev]: bhL + bhN,
                    [bew]: bhN
                };
            }
            return null;
        }
        ,
        ber['exports']['limitRectVal'] = function(bes, bet, bev) {
            var bew = ber['exports']['cdv'][bev];
            if (bes[bev] - bes[bew] < bet[bev] - bet[bew]) {
                var bfN = (bet[bev] - bet[bew] - (bes[bev] - bes[bew])) / 0x2;
                bes[bew] -= bfN,
                bes[bev] += bfN;
            }
            if (bes[bev] + bes[bew] > bet[bev] + bet[bew]) {
                bfN = (bes[bev] + bes[bew] - (bet[bev] + bet[bew])) / 0x2;
                bes[bew] -= bfN,
                bes[bev] -= bfN;
            }
        }
        ,
        ber['exports']['getMaxRect'] = function(bes, bet, bev) {
            for (var bew, bfN, bhY, bhZ, bi0 = ber['exports']['cdv'][bet], bi1 = ber['exports']['cdv'][bev], bi2 = 0x0; bi2 < bes['length']; ++bi2)
                bew = null == bew ? bes[bi2][bet] - bes[bi2][bi0] : Math['min'](bes[bi2][bet] - bes[bi2][bi0], bew),
                bhY = null == bhY ? bes[bi2][bet] + bes[bi2][bi0] : Math['max'](bes[bi2][bet] + bes[bi2][bi0], bhY),
                bfN = null == bfN ? bes[bi2][bev] - bes[bi2][bi1] : Math['min'](bes[bi2][bev] - bes[bi2][bi1], bfN),
                bhZ = null == bhZ ? bes[bi2][bev] + bes[bi2][bi1] : Math['max'](bes[bi2][bev] + bes[bi2][bi1], bhZ);
            return {
                [bet]: (bew + bhY) / 0x2,
                [bev]: (bfN + bhZ) / 0x2,
                [bi0]: Math['abs'](bhY - bew) / 0x2,
                [bi1]: Math['abs'](bhZ - bfN) / 0x2
            };
        }
        ,
        ber['exports']['limitRect'] = function(bes, bet, bev, bew, bfN, bi8, bi9, bia) {
            var bib = ber['exports']['getMaxRect'](bi8, bi9, bia)
              , bic = ber['exports']['cdv'][bi9]
              , bid = ber['exports']['cdv'][bia]
              , bie = {};
            if (bie[bi9] = bes,
            bie[bia] = bet,
            bie[bic] = bev,
            bie[bid] = bew,
            ber['exports']['limitRectVal'](bie, bib, bi9),
            ber['exports']['limitRectVal'](bie, bib, bia),
            0x0 == bfN || bfN == Math['PI']) {
                var bif = bie[bic];
                bie[bic] = bie[bid],
                bie[bid] = bif;
            }
            return bie;
        }
        ,
        ber['exports']['progressOnLine'] = function(ber, bes, bet, bev, bew, bfN) {
            var bim = bet - ber
              , bin = bev - bes
              , bio = Math['sqrt'](bim * bim + bin * bin);
            return ((bim /= bio) * (bew - ber) + (bin /= bio) * (bfN - bes)) / Math['sqrt'](Math['pow'](bet - ber, 0x2) + Math['pow'](bev - bes, 0x2));
        }
        ,
        ber['exports']['generateSID'] = function(ber) {
            for (var bes = 0x0, bet = !0x0; bet; ) {
                bet = !0x1,
                bes++;
                for (var bev = 0x0; bev < ber['length']; ++bev)
                    if (ber[bev]['sid'] == bes) {
                        bet = !0x0;
                        break;
                    }
            }
            return bes;
        }
        ,
        ber['exports']['levelIconId'] = function(ber) {
            return Math['max'](Math['min'](bev['maxLevel'] - 0x1, ber['roundToNearest'](0x2) - 0x1), 0x0);
        }
        ,
        ber['exports']['copyToClipboard'] = function(ber) {
            const bes = document['createElement']('textarea');
            bes['value'] = ber,
            bes['setAttribute']('readonly', ''),
            bes['style']['position'] = 'absolute',
            bes['style']['left'] = '-9999px',
            document['body']['appendChild'](bes);
            const bet = !!(0x0 < document['getSelection']()['rangeCount']) && document['getSelection']()['getRangeAt'](0x0);
            bes['select'](),
            document['execCommand']('copy'),
            document['body']['removeChild'](bes),
            bet && (document['getSelection']()['removeAllRanges'](),
            document['getSelection']()['addRange'](bet));
        }
        ;
        var bix = function(ber, bes) {
            return ber['concat'](bes);
        };
        Array['prototype']['flatMap'] = function(ber) {
            return function(ber, bes) {
                return bes['map'](ber)['reduce'](bix, []);
            }(ber, this);
        }
        ;
        var biD = bet(0x28);
        ber['exports']['ARXDLtBjX'] = function(bes, bet) {
            let bev = biD['encode'](bes)
              , bew = new Uint8Array(bev['length'] + 0x2);
            return bew['set'](ber['exports']['vxrSwxC'](bet), bew['length'] - 0x2),
            bew['set'](bev, 0x0),
            bew;
        }
        ,
        ber['exports']['aLechyQEYY'] = function(bes) {
            bes = new Uint8Array(bes);
            let bet = ber['exports']['YFvl'](bes[bes['length'] - 0x2], bes[bes['length'] - 0x1])
              , bev = bes['slice'](0x0, bes['length'] - 0x2);
            return [biD['decode'](bev), bet];
        }
        ,
        ber['exports']['qanEEF'] = function(ber, bes) {
            return 0xff & ber + bes;
        }
        ,
        ber['exports']['vxrSwxC'] = function(ber) {
            return [0xf & ber >> 0x4, 0xf & ber];
        }
        ,
        ber['exports']['YFvl'] = function(ber, bes) {
            return (ber << 0x4) + bes;
        }
        ,
        ber['exports']['restartIfNeeded'] = function(ber) {
            if (bev['needsRestart']) {
                for (var bet in ber['sockets']) {
                    var bew = ber['sockets'][bet];
                    bew['send']('error', 'GAME\x20UPDATING'),
                    bew['close']();
                }
                setTimeout(function() {
                    bes['exit']();
                }, 0x3e8);
            }
        }
        ,
        ber['exports']['picSize'] = /userscript/,
        ber['exports']['picSize2'] = /game\.([^\.]+)\.js/,
        ber['exports']['thumbnailSize'] = function(ber) {
            return parseInt(0.75 * ber['replace'](/=/g, '')['length']) / 0x3e8;
        }
        ,
        ber['exports']['hexToRGB'] = ber=>ber['replace'](/^#?([a-f\d])([a-f\d])([a-f\d])$/i, (ber,bes,bet,bev)=>'#' + bes + bes + bet + bet + bev + bev)['substring'](0x1)['match'](/.{2}/g)['map'](ber=>parseInt(ber, 0x10)),
        ber['exports']['versionifyUrl'] = function(ber) {
            return ber + '?build=' + bew;
        }
        ,
        ber['exports']['getPreview'] = function(bes, bet) {
            return ber['exports']['versionifyUrl']('./textures/previews/' + (bes['type'] && 0x3 > bes['type'] ? 'cosmetics/' + bes['type'] + '_' + bes['id'] + (bes['tex'] ? '_' + bes['tex'] : '') : bet['types'][bes['type'] || 0x0] + (bes['type'] && 0x3 == bes['type'] ? bes['id'] + (bes['tex'] ? '_' + bes['tex'] : '') : (bes['weapon'] || 0x0) + '_' + (null == bes['pat'] ? bes['tex'] ? bes['tex'] : bes['id'] : 'c' + bes['pat']))) + '.png');
        }
        ;
    }
    ['call'](this, bet(0xe)));
}
, function(bj3, bj4, bj5) {
    (function(bj3) {
        bj5['d'](bj4, 'a', function() {
            return bjc;
        }),
        bj5['d'](bj4, 'b', function() {
            return bki;
        }),
        bj5['d'](bj4, 'c', function() {
            return bkp;
        });
        var bj7 = bj5(0x0)
          , bj8 = bj5(0x2)
          , bj9 = bj5(0x18)
          , bja = bj5(0xa)
          , bjb = 0x3
          , bjc = function() {
            function bj3(bj3, bj4, bj5) {
                void 0x0 === bj4 && (bj4 = new bja['a']()),
                void 0x0 === bj5 && (bj5 = bjb),
                this['_version'] = bj5,
                this['_stack'] = [],
                this['_stack']['push']({
                    'client': bj3,
                    'scope': bj4
                });
            }
            return bj3['prototype']['_invokeClient'] = function(bj3) {
                for (var bj4, bj5 = [], bj8 = 0x1; bj8 < arguments['length']; bj8++)
                    bj5[bj8 - 0x1] = arguments[bj8];
                var bj9 = this['getStackTop']();
                bj9 && bj9['client'] && bj9['client'][bj3] && (bj4 = bj9['client'])[bj3]['apply'](bj4, bj7['d'](bj5, [bj9['scope']]));
            }
            ,
            bj3['prototype']['isOlderThan'] = function(bj3) {
                return this['_version'] < bj3;
            }
            ,
            bj3['prototype']['bindClient'] = function(bj3) {
                this['getStackTop']()['client'] = bj3;
            }
            ,
            bj3['prototype']['pushScope'] = function() {
                var bj3 = this['getStack']()
                  , bj4 = 0x0 < bj3['length'] ? bj3[bj3['length'] - 0x1]['scope'] : void 0x0
                  , bj5 = bja['a']['clone'](bj4);
                return this['getStack']()['push']({
                    'client': this['getClient'](),
                    'scope': bj5
                }),
                bj5;
            }
            ,
            bj3['prototype']['popScope'] = function() {
                return void 0x0 !== this['getStack']()['pop']();
            }
            ,
            bj3['prototype']['withScope'] = function(bj3) {
                var bj4 = this['pushScope']();
                try {
                    bj3(bj4);
                } finally {
                    this['popScope']();
                }
            }
            ,
            bj3['prototype']['getClient'] = function() {
                return this['getStackTop']()['client'];
            }
            ,
            bj3['prototype']['getScope'] = function() {
                return this['getStackTop']()['scope'];
            }
            ,
            bj3['prototype']['getStack'] = function() {
                return this['_stack'];
            }
            ,
            bj3['prototype']['getStackTop'] = function() {
                return this['_stack'][this['_stack']['length'] - 0x1];
            }
            ,
            bj3['prototype']['captureException'] = function(bj3, bj4) {
                var bj5 = this['_lastEventId'] = Object(bj8['g'])();
                return this['_invokeClient']('captureException', bj3, bj7['a']({}, bj4, {
                    'event_id': bj5
                })),
                bj5;
            }
            ,
            bj3['prototype']['captureMessage'] = function(bj3, bj4, bj5) {
                var bj9 = this['_lastEventId'] = Object(bj8['g'])();
                return this['_invokeClient']('captureMessage', bj3, bj4, bj7['a']({}, bj5, {
                    'event_id': bj9
                })),
                bj9;
            }
            ,
            bj3['prototype']['captureEvent'] = function(bj3, bj4) {
                var bj5 = this['_lastEventId'] = Object(bj8['g'])();
                return this['_invokeClient']('captureEvent', bj3, bj7['a']({}, bj4, {
                    'event_id': bj5
                })),
                bj5;
            }
            ,
            bj3['prototype']['lastEventId'] = function() {
                return this['_lastEventId'];
            }
            ,
            bj3['prototype']['addBreadcrumb'] = function(bj3, bj4) {
                var bj5 = this['getStackTop']();
                if (bj5['scope'] && bj5['client']) {
                    var bj9 = bj5['client']['getOptions'] && bj5['client']['getOptions']() || {}
                      , bja = bj9['beforeBreadcrumb']
                      , bjb = void 0x0 === bja ? null : bja
                      , bjc = bj9['maxBreadcrumbs']
                      , bjK = void 0x0 === bjc ? 0x1e : bjc;
                    if (!(0x0 >= bjK)) {
                        var bjL = new Date()['getTime']() / 0x3e8
                          , bjM = bj7['a']({
                            'timestamp': bjL
                        }, bj3)
                          , bjN = bjb ? Object(bj8['b'])(function() {
                            return bjb(bjM, bj4);
                        }) : bjM;
                        null === bjN || bj5['scope']['addBreadcrumb'](bjN, Math['min'](bjK, 0x64));
                    }
                }
            }
            ,
            bj3['prototype']['setUser'] = function(bj3) {
                var bj4 = this['getStackTop']();
                bj4['scope'] && bj4['scope']['setUser'](bj3);
            }
            ,
            bj3['prototype']['setTags'] = function(bj3) {
                var bj4 = this['getStackTop']();
                bj4['scope'] && bj4['scope']['setTags'](bj3);
            }
            ,
            bj3['prototype']['setExtras'] = function(bj3) {
                var bj4 = this['getStackTop']();
                bj4['scope'] && bj4['scope']['setExtras'](bj3);
            }
            ,
            bj3['prototype']['setTag'] = function(bj3, bj4) {
                var bj5 = this['getStackTop']();
                bj5['scope'] && bj5['scope']['setTag'](bj3, bj4);
            }
            ,
            bj3['prototype']['setExtra'] = function(bj3, bj4) {
                var bj5 = this['getStackTop']();
                bj5['scope'] && bj5['scope']['setExtra'](bj3, bj4);
            }
            ,
            bj3['prototype']['setContext'] = function(bj3, bj4) {
                var bj5 = this['getStackTop']();
                bj5['scope'] && bj5['scope']['setContext'](bj3, bj4);
            }
            ,
            bj3['prototype']['configureScope'] = function(bj3) {
                var bj4 = this['getStackTop']();
                bj4['scope'] && bj4['client'] && bj3(bj4['scope']);
            }
            ,
            bj3['prototype']['run'] = function(bj3) {
                var bj4 = bke(this);
                try {
                    bj3(this);
                } finally {
                    bke(bj4);
                }
            }
            ,
            bj3['prototype']['getIntegration'] = function(bj3) {
                var bj4 = this['getClient']();
                if (!bj4)
                    return null;
                try {
                    return bj4['getIntegration'](bj3);
                } catch (bk9) {
                    return bj9['a']['warn']('Cannot\x20retrieve\x20integration\x20' + bj3['id'] + '\x20from\x20the\x20current\x20Hub'),
                    null;
                }
            }
            ,
            bj3['prototype']['traceHeaders'] = function() {
                var bj3 = this['getStackTop']();
                if (bj3['scope'] && bj3['client']) {
                    var bj4 = bj3['scope']['getSpan']();
                    if (bj4)
                        return {
                            'sentry-trace': bj4['toTraceparent']()
                        };
                }
                return {};
            }
            ,
            bj3;
        }();
        function bkc() {
            var bj3 = Object(bj8['e'])();
            return bj3['__SENTRY__'] = bj3['__SENTRY__'] || {
                'hub': void 0x0
            },
            bj3;
        }
        function bke(bj3) {
            var bj4 = bkc()
              , bj5 = bkp(bj4);
            return bkr(bj4, bj3),
            bj5;
        }
        function bki() {
            var bj4 = bkc();
            (!bkn(bj4) || bkp(bj4)['isOlderThan'](bjb)) && bkr(bj4, new bjc());
            try {
                var bj5 = Object(bj8['c'])(bj3, 'domain')['active'];
                if (!bj5)
                    return bkp(bj4);
                if (!bkn(bj5) || bkp(bj5)['isOlderThan'](bjb)) {
                    var bj7 = bkp(bj4)['getStackTop']();
                    bkr(bj5, new bjc(bj7['client'],bja['a']['clone'](bj7['scope'])));
                }
                return bkp(bj5);
            } catch (bkm) {
                return bkp(bj4);
            }
        }
        function bkn(bj3) {
            return !!(bj3 && bj3['__SENTRY__'] && bj3['__SENTRY__']['hub']);
        }
        function bkp(bj3) {
            return bj3 && bj3['__SENTRY__'] && bj3['__SENTRY__']['hub'] ? bj3['__SENTRY__']['hub'] : (bj3['__SENTRY__'] = bj3['__SENTRY__'] || {},
            bj3['__SENTRY__']['hub'] = new bjc(),
            bj3['__SENTRY__']['hub']);
        }
        function bkr(bj3, bj4) {
            return !!bj3 && (bj3['__SENTRY__'] = bj3['__SENTRY__'] || {},
            bj3['__SENTRY__']['hub'] = bj4,
            !0x0);
        }
    }
    ['call'](this, bj5(0x3e)(bj3)));
}
, function(bku, bkv, bkw) {
    bkw['d'](bkv, 'a', function() {
        return bkD;
    }),
    bkw['d'](bkv, 'b', function() {
        return bll;
    });
    var bkx = bkw(0x0)
      , bky = bkw(0x48)
      , bkz = bkw(0x5)
      , bkA = bkw(0x6)
      , bkB = bkw(0x2)
      , bkC = bkw(0xd)
      , bkD = function() {
        function bku() {
            this['_notifyingListeners'] = !0x1,
            this['_scopeListeners'] = [],
            this['_eventProcessors'] = [],
            this['_breadcrumbs'] = [],
            this['_user'] = {},
            this['_tags'] = {},
            this['_extra'] = {},
            this['_context'] = {};
        }
        return bku['prototype']['addScopeListener'] = function(bku) {
            this['_scopeListeners']['push'](bku);
        }
        ,
        bku['prototype']['addEventProcessor'] = function(bku) {
            return this['_eventProcessors']['push'](bku),
            this;
        }
        ,
        bku['prototype']['_notifyScopeListeners'] = function() {
            var bku = this;
            this['_notifyingListeners'] || (this['_notifyingListeners'] = !0x0,
            setTimeout(function() {
                bku['_scopeListeners']['forEach'](function(bkv) {
                    bkv(bku);
                }),
                bku['_notifyingListeners'] = !0x1;
            }));
        }
        ,
        bku['prototype']['_notifyEventProcessors'] = function(bku, bkv, bkw, bkA) {
            var bkB = this;
            return void 0x0 === bkA && (bkA = 0x0),
            new bky['a'](function(bky, bkC) {
                var bkD = bku[bkA];
                if (null === bkv || 'function' != typeof bkD)
                    bky(bkv);
                else {
                    var bkR = bkD(bkx['a']({}, bkv), bkw);
                    Object(bkz['j'])(bkR) ? bkR['then'](function(bkv) {
                        return bkB['_notifyEventProcessors'](bku, bkv, bkw, bkA + 0x1)['then'](bky);
                    })['catch'](bkC) : bkB['_notifyEventProcessors'](bku, bkR, bkw, bkA + 0x1)['then'](bky)['catch'](bkC);
                }
            }
            );
        }
        ,
        bku['prototype']['setUser'] = function(bku) {
            return this['_user'] = Object(bkA['b'])(bku),
            this['_notifyScopeListeners'](),
            this;
        }
        ,
        bku['prototype']['setTags'] = function(bku) {
            return this['_tags'] = bkx['a']({}, this['_tags'], Object(bkA['b'])(bku)),
            this['_notifyScopeListeners'](),
            this;
        }
        ,
        bku['prototype']['setTag'] = function(bku, bkv) {
            var bkw;
            return this['_tags'] = bkx['a']({}, this['_tags'], ((bkw = {})[bku] = Object(bkA['b'])(bkv),
            bkw)),
            this['_notifyScopeListeners'](),
            this;
        }
        ,
        bku['prototype']['setExtras'] = function(bku) {
            return this['_extra'] = bkx['a']({}, this['_extra'], Object(bkA['b'])(bku)),
            this['_notifyScopeListeners'](),
            this;
        }
        ,
        bku['prototype']['setExtra'] = function(bku, bkv) {
            var bkw;
            return this['_extra'] = bkx['a']({}, this['_extra'], ((bkw = {})[bku] = Object(bkA['b'])(bkv),
            bkw)),
            this['_notifyScopeListeners'](),
            this;
        }
        ,
        bku['prototype']['setFingerprint'] = function(bku) {
            return this['_fingerprint'] = Object(bkA['b'])(bku),
            this['_notifyScopeListeners'](),
            this;
        }
        ,
        bku['prototype']['setLevel'] = function(bku) {
            return this['_level'] = Object(bkA['b'])(bku),
            this['_notifyScopeListeners'](),
            this;
        }
        ,
        bku['prototype']['setTransaction'] = function(bku) {
            return this['_transaction'] = bku,
            this['_notifyScopeListeners'](),
            this;
        }
        ,
        bku['prototype']['setContext'] = function(bku, bkv) {
            return this['_context'][bku] = bkv ? Object(bkA['b'])(bkv) : void 0x0,
            this['_notifyScopeListeners'](),
            this;
        }
        ,
        bku['prototype']['setSpan'] = function(bku) {
            return this['_span'] = bku,
            this['_notifyScopeListeners'](),
            this;
        }
        ,
        bku['prototype']['startSpan'] = function(bku) {
            var bkv = new bkC['a']();
            return bkv['setParent'](bku),
            this['setSpan'](bkv),
            bkv;
        }
        ,
        bku['prototype']['getSpan'] = function() {
            return this['_span'];
        }
        ,
        bku['clone'] = function(bkv) {
            var bkw = new bku();
            return Object['assign'](bkw, bkv, {
                '_scopeListeners': []
            }),
            bkv && (bkw['_breadcrumbs'] = bkx['d'](bkv['_breadcrumbs']),
            bkw['_tags'] = bkx['a']({}, bkv['_tags']),
            bkw['_extra'] = bkx['a']({}, bkv['_extra']),
            bkw['_context'] = bkx['a']({}, bkv['_context']),
            bkw['_user'] = bkv['_user'],
            bkw['_level'] = bkv['_level'],
            bkw['_span'] = bkv['_span'],
            bkw['_transaction'] = bkv['_transaction'],
            bkw['_fingerprint'] = bkv['_fingerprint'],
            bkw['_eventProcessors'] = bkx['d'](bkv['_eventProcessors'])),
            bkw;
        }
        ,
        bku['prototype']['clear'] = function() {
            return this['_breadcrumbs'] = [],
            this['_tags'] = {},
            this['_extra'] = {},
            this['_user'] = {},
            this['_context'] = {},
            this['_level'] = void 0x0,
            this['_transaction'] = void 0x0,
            this['_fingerprint'] = void 0x0,
            this['_span'] = void 0x0,
            this['_notifyScopeListeners'](),
            this;
        }
        ,
        bku['prototype']['addBreadcrumb'] = function(bku, bkv) {
            var bkw = new Date()['getTime']() / 0x3e8
              , bky = bkx['a']({
                'timestamp': bkw
            }, bku);
            return this['_breadcrumbs'] = void 0x0 !== bkv && 0x0 <= bkv ? bkx['d'](this['_breadcrumbs'], [Object(bkA['b'])(bky)])['slice'](-bkv) : bkx['d'](this['_breadcrumbs'], [Object(bkA['b'])(bky)]),
            this['_notifyScopeListeners'](),
            this;
        }
        ,
        bku['prototype']['clearBreadcrumbs'] = function() {
            return this['_breadcrumbs'] = [],
            this['_notifyScopeListeners'](),
            this;
        }
        ,
        bku['prototype']['_applyFingerprint'] = function(bku) {
            bku['fingerprint'] = bku['fingerprint'] ? Array['isArray'](bku['fingerprint']) ? bku['fingerprint'] : [bku['fingerprint']] : [],
            this['_fingerprint'] && (bku['fingerprint'] = bku['fingerprint']['concat'](this['_fingerprint'])),
            bku['fingerprint'] && !bku['fingerprint']['length'] && delete bku['fingerprint'];
        }
        ,
        bku['prototype']['applyToEvent'] = function(bku, bkv) {
            return this['_extra'] && Object['keys'](this['_extra'])['length'] && (bku['extra'] = bkx['a']({}, this['_extra'], bku['extra'])),
            this['_tags'] && Object['keys'](this['_tags'])['length'] && (bku['tags'] = bkx['a']({}, this['_tags'], bku['tags'])),
            this['_user'] && Object['keys'](this['_user'])['length'] && (bku['user'] = bkx['a']({}, this['_user'], bku['user'])),
            this['_context'] && Object['keys'](this['_context'])['length'] && (bku['contexts'] = bkx['a']({}, this['_context'], bku['contexts'])),
            this['_level'] && (bku['level'] = this['_level']),
            this['_transaction'] && (bku['transaction'] = this['_transaction']),
            this['_span'] && (bku['contexts'] = bku['contexts'] || {},
            bku['contexts']['trace'] = this['_span']),
            this['_applyFingerprint'](bku),
            bku['breadcrumbs'] = bkx['d'](bku['breadcrumbs'] || [], this['_breadcrumbs']),
            bku['breadcrumbs'] = 0x0 < bku['breadcrumbs']['length'] ? bku['breadcrumbs'] : void 0x0,
            this['_notifyEventProcessors'](bkx['d'](blj(), this['_eventProcessors']), bku, bkv);
        }
        ,
        bku;
    }();
    function blj() {
        var bku = Object(bkB['e'])();
        return bku['__SENTRY__'] = bku['__SENTRY__'] || {},
        bku['__SENTRY__']['globalEventProcessors'] = bku['__SENTRY__']['globalEventProcessors'] || [],
        bku['__SENTRY__']['globalEventProcessors'];
    }
    function bll(bku) {
        blj()['push'](bku);
    }
}
, function(bln, blo) {
    var blp = {}['toString'];
    bln['exports'] = Array['isArray'] || function(bln) {
        return '[object\x20Array]' == blp['call'](bln);
    }
    ;
}
, function(blr, bls, blt) {
    var blu = blt(0xb);
    bls['createCodec'] = blJ,
    bls['install'] = function(blr) {
        for (var bls in blr)
            blE['prototype'][bls] = blG(blE['prototype'][bls], blr[bls]);
    }
    ,
    bls['filter'] = function(blr) {
        return blu(blr) ? function(blr) {
            function bls(blr, bls) {
                return bls(blr);
            }
            return blr = blr['slice'](),
            function(blt) {
                return blr['reduce'](bls, blt);
            }
            ;
        }(blr) : blr;
    }
    ;
    var blD = blt(0x3);
    function blE(blr) {
        return this instanceof blE ? (this['options'] = blr,
        void this['init']()) : new blE(blr);
    }
    function blG(blr, bls) {
        return blr && bls ? function() {
            return blr['apply'](this, arguments),
            bls['apply'](this, arguments);
        }
        : blr || bls;
    }
    function blJ(blr) {
        return new blE(blr);
    }
    blE['prototype']['init'] = function() {
        var blr = this['options'];
        return blr && blr['uint8array'] && (this['bufferish'] = blD['Uint8Array']),
        this;
    }
    ,
    bls['preset'] = blJ({
        'preset': !0x0
    });
}
, function(blM, blN, blO) {
    blO['d'](blN, 'a', function() {
        return blR;
    });
    var blP = blO(0x2)
      , blQ = /^[ \t]*([0-9a-f]{32})?-?([0-9a-f]{16})?-?([01])?[ \t]*$/
      , blR = function() {
        function blM(blM, blN, blO, blQ) {
            void 0x0 === blM && (blM = Object(blP['g'])()),
            void 0x0 === blN && (blN = Object(blP['g'])()['substring'](0x10)),
            this['_traceId'] = blM,
            this['_spanId'] = blN,
            this['_sampled'] = blO,
            this['_parent'] = blQ;
        }
        return blM['prototype']['setParent'] = function(blM) {
            return this['_parent'] = blM,
            this;
        }
        ,
        blM['prototype']['setSampled'] = function(blM) {
            return this['_sampled'] = blM,
            this;
        }
        ,
        blM['fromTraceparent'] = function(blN) {
            var blO = blN['match'](blQ);
            if (blO) {
                var blP;
                '1' === blO[0x3] ? blP = !0x0 : '0' === blO[0x3] && (blP = !0x1);
                var blR = new blM(blO[0x1],blO[0x2],blP);
                return new blM(blO[0x1],void 0x0,blP,blR);
            }
        }
        ,
        blM['prototype']['toTraceparent'] = function() {
            var blM = '';
            return !0x0 === this['_sampled'] ? blM = '-1' : !0x1 === this['_sampled'] && (blM = '-0'),
            this['_traceId'] + '-' + this['_spanId'] + blM;
        }
        ,
        blM['prototype']['toJSON'] = function() {
            return {
                'parent': this['_parent'] && this['_parent']['toJSON']() || void 0x0,
                'sampled': this['_sampled'],
                'span_id': this['_spanId'],
                'trace_id': this['_traceId']
            };
        }
        ,
        blM;
    }();
}
, function(bm4, bm5) {
    var bm6, bm7, bm8 = bm4['exports'] = {};
    function bm9() {
        throw new Error('setTimeout\x20has\x20not\x20been\x20defined');
    }
    function bma() {
        throw new Error('clearTimeout\x20has\x20not\x20been\x20defined');
    }
    function bmb(bm4) {
        if (bm6 === setTimeout)
            return setTimeout(bm4, 0x0);
        if ((bm6 === bm9 || !bm6) && setTimeout)
            return bm6 = setTimeout,
            setTimeout(bm4, 0x0);
        try {
            return bm6(bm4, 0x0);
        } catch (bmd) {
            try {
                return bm6['call'](null, bm4, 0x0);
            } catch (bme) {
                return bm6['call'](this, bm4, 0x0);
            }
        }
    }
    !function() {
        try {
            bm6 = 'function' == typeof setTimeout ? setTimeout : bm9;
        } catch (bmf) {
            bm6 = bm9;
        }
        try {
            bm7 = 'function' == typeof clearTimeout ? clearTimeout : bma;
        } catch (bmg) {
            bm7 = bma;
        }
    }();
    var bmh, bmi = [], bmj = !0x1, bmk = -0x1;
    function bml() {
        bmj && bmh && (bmj = !0x1,
        bmh['length'] ? bmi = bmh['concat'](bmi) : bmk = -0x1,
        bmi['length'] && bmm());
    }
    function bmm() {
        if (!bmj) {
            var bm4 = bmb(bml);
            bmj = !0x0;
            for (var bm5 = bmi['length']; bm5; ) {
                for (bmh = bmi,
                bmi = []; ++bmk < bm5; )
                    bmh && bmh[bmk]['run']();
                bmk = -0x1,
                bm5 = bmi['length'];
            }
            bmh = null,
            bmj = !0x1,
            function(bm4) {
                if (bm7 === clearTimeout)
                    return clearTimeout(bm4);
                if ((bm7 === bma || !bm7) && clearTimeout)
                    return bm7 = clearTimeout,
                    clearTimeout(bm4);
                try {
                    bm7(bm4);
                } catch (bmq) {
                    try {
                        return bm7['call'](null, bm4);
                    } catch (bmr) {
                        return bm7['call'](this, bm4);
                    }
                }
            }(bm4);
        }
    }
    function bms(bm4, bm5) {
        this['fun'] = bm4,
        this['array'] = bm5;
    }
    function bmv() {}
    bm8['nextTick'] = function(bm4) {
        var bm5 = Array(arguments['length'] - 0x1);
        if (0x1 < arguments['length'])
            for (var bm6 = 0x1; bm6 < arguments['length']; bm6++)
                bm5[bm6 - 0x1] = arguments[bm6];
        bmi['push'](new bms(bm4,bm5)),
        0x1 !== bmi['length'] || bmj || bmb(bmm);
    }
    ,
    bms['prototype']['run'] = function() {
        this['fun']['apply'](null, this['array']);
    }
    ,
    bm8['title'] = 'browser',
    bm8['browser'] = !0x0,
    bm8['env'] = {},
    bm8['argv'] = [],
    bm8['version'] = '',
    bm8['versions'] = {},
    bm8['on'] = bmv,
    bm8['addListener'] = bmv,
    bm8['once'] = bmv,
    bm8['off'] = bmv,
    bm8['removeListener'] = bmv,
    bm8['removeAllListeners'] = bmv,
    bm8['emit'] = bmv,
    bm8['prependListener'] = bmv,
    bm8['prependOnceListener'] = bmv,
    bm8['listeners'] = function() {
        return [];
    }
    ,
    bm8['binding'] = function() {
        throw new Error('process.binding\x20is\x20not\x20supported');
    }
    ,
    bm8['cwd'] = function() {
        return '/';
    }
    ,
    bm8['chdir'] = function() {
        throw new Error('process.chdir\x20is\x20not\x20supported');
    }
    ,
    bm8['umask'] = function() {
        return 0x0;
    }
    ;
}
, function(bmz, bmA, bmB) {
    var bmC = bmB(0x10)['ExtBuffer']
      , bmD = bmB(0x2f)
      , bmE = bmB(0x30)
      , bmF = bmB(0xc);
    function bmG() {
        var bmz = this['options'];
        return this['encode'] = function(bmz) {
            var bmA = bmE['getWriteType'](bmz);
            return function(bmz, bmB) {
                var bmC = bmA[typeof bmB];
                if (!bmC)
                    throw new Error('Unsupported\x20type\x20\x22' + typeof bmB + '\x22:\x20' + bmB);
                bmC(bmz, bmB);
            }
            ;
        }(bmz),
        bmz && bmz['preset'] && bmD['setExtPackers'](this),
        this;
    }
    bmF['install']({
        'addExtPacker': function(bmz, bmA, bmB) {
            function bmD(bmA) {
                return bmB && (bmA = bmB(bmA)),
                new bmC(bmA,bmz);
            }
            bmB = bmF['filter'](bmB);
            var bmE = bmA['name'];
            if (bmE && 'Object' !== bmE) {
                var bmG = this['extPackers'] || (this['extPackers'] = {});
                bmG[bmE] = bmD;
            } else {
                var bmU = this['extEncoderList'] || (this['extEncoderList'] = []);
                bmU['unshift']([bmA, bmD]);
            }
        },
        'getExtPacker': function(bmz) {
            var bmA = this['extPackers'] || (this['extPackers'] = {})
              , bmB = bmz['constructor']
              , bmC = bmB && bmB['name'] && bmA[bmB['name']];
            if (bmC)
                return bmC;
            for (var bmD, bmE = this['extEncoderList'] || (this['extEncoderList'] = []), bmF = bmE['length'], bmG = 0x0; bmG < bmF; bmG++)
                if (bmD = bmE[bmG],
                bmB === bmD[0x0])
                    return bmD[0x1];
        },
        'init': bmG
    }),
    bmA['preset'] = bmG['call'](bmF['preset']);
}
, function(bn3, bn4, bn5) {
    bn4['ExtBuffer'] = function bn3(bn4, bn5) {
        return this instanceof bn3 ? (this['buffer'] = bn8['from'](bn4),
        void (this['type'] = bn5)) : new bn3(bn4,bn5);
    }
    ;
    var bn8 = bn5(0x3);
}
, function(bn9, bna) {
    bna['read'] = function(bn9, bna, bnd, bne, bnf) {
        var bng, bnh, bni = 0x8 * bnf - bne - 0x1, bnj = (0x1 << bni) - 0x1, bnk = bnj >> 0x1, bnl = -0x7, bnm = bnd ? bnf - 0x1 : 0x0, bnn = bnd ? -0x1 : 0x1, bno = bn9[bna + bnm];
        for (bnm += bnn,
        bng = bno & (0x1 << -bnl) - 0x1,
        bno >>= -bnl,
        bnl += bni; 0x0 < bnl; bng = 0x100 * bng + bn9[bna + bnm],
        bnm += bnn,
        bnl -= 0x8)
            ;
        for (bnh = bng & (0x1 << -bnl) - 0x1,
        bng >>= -bnl,
        bnl += bne; 0x0 < bnl; bnh = 0x100 * bnh + bn9[bna + bnm],
        bnm += bnn,
        bnl -= 0x8)
            ;
        if (0x0 === bng)
            bng = 0x1 - bnk;
        else {
            if (bng === bnj)
                return bnh ? NaN : 0x1 / 0x0 * (bno ? -0x1 : 0x1);
            bnh += Math['pow'](0x2, bne),
            bng -= bnk;
        }
        return (bno ? -0x1 : 0x1) * bnh * Math['pow'](0x2, bng - bne);
    }
    ,
    bna['write'] = function(bn9, bna, bnr, bns, bnt, bnu) {
        var bnv, bnw, bnx, bny = 0x8 * bnu - bnt - 0x1, bnz = (0x1 << bny) - 0x1, bnA = bnz >> 0x1, bnB = 0x17 === bnt ? Math['pow'](0x2, -0x18) - Math['pow'](0x2, -0x4d) : 0x0, bnC = bns ? 0x0 : bnu - 0x1, bnD = bns ? 0x1 : -0x1, bnE = 0x0 > bna || 0x0 === bna && 0x0 > 0x1 / bna ? 0x1 : 0x0;
        for (bna = Math['abs'](bna),
        isNaN(bna) || bna === 0x1 / 0x0 ? (bnw = isNaN(bna) ? 0x1 : 0x0,
        bnv = bnz) : (bnv = Math['floor'](Math['log'](bna) / Math['LN2']),
        0x1 > bna * (bnx = Math['pow'](0x2, -bnv)) && (bnv--,
        bnx *= 0x2),
        0x2 <= (bna += 0x1 <= bnv + bnA ? bnB / bnx : bnB * Math['pow'](0x2, 0x1 - bnA)) * bnx && (bnv++,
        bnx /= 0x2),
        bnv + bnA >= bnz ? (bnw = 0x0,
        bnv = bnz) : 0x1 <= bnv + bnA ? (bnw = (bna * bnx - 0x1) * Math['pow'](0x2, bnt),
        bnv += bnA) : (bnw = bna * Math['pow'](0x2, bnA - 0x1) * Math['pow'](0x2, bnt),
        bnv = 0x0)); 0x8 <= bnt; bn9[bnr + bnC] = 0xff & bnw,
        bnC += bnD,
        bnw /= 0x100,
        bnt -= 0x8)
            ;
        for (bnv = bnv << bnt | bnw,
        bny += bnt; 0x0 < bny; bn9[bnr + bnC] = 0xff & bnv,
        bnC += bnD,
        bnv /= 0x100,
        bny -= 0x8)
            ;
        bn9[bnr + bnC - bnD] |= 0x80 * bnE;
    }
    ;
}
, function(bnF, bnG, bnH) {
    var bnI, bnJ = bnH(0x2e);
    bnG['copy'] = bnP,
    bnG['slice'] = bnX,
    bnG['toString'] = function() {
        return (!bnN && bnL['isBuffer'](this) ? this['toString'] : bnJ['toString'])['apply'](this, arguments);
    }
    ,
    bnG['write'] = (bnI = 'write',
    function() {
        var bnF = this[bnI] || bnJ[bnI];
        return bnF['apply'](this, arguments);
    }
    );
    var bnL = bnH(0x3)
      , bnM = bnL['global']
      , bnN = bnL['hasBuffer'] && 'TYPED_ARRAY_SUPPORT'in bnM
      , bnO = bnN && !bnM['TYPED_ARRAY_SUPPORT'];
    function bnP(bnF, bnG, bnH, bnI) {
        var bnM = bnL['isBuffer'](this)
          , bnN = bnL['isBuffer'](bnF);
        if (bnM && bnN)
            return this['copy'](bnF, bnG, bnH, bnI);
        if (!bnO && !bnM && !bnN && bnL['isView'](this) && bnL['isView'](bnF)) {
            var bnP = bnH || null != bnI ? bnX['call'](this, bnH, bnI) : this;
            return bnF['set'](bnP, bnG),
            bnP['length'];
        }
        return bnJ['copy']['call'](this, bnF, bnG, bnH, bnI);
    }
    function bnX(bnF, bnG) {
        var bnH = this['slice'] || !bnO && this['subarray'];
        if (bnH)
            return bnH['call'](this, bnF, bnG);
        var bnI = bnL['alloc']['call'](this, bnG - bnF);
        return bnP['call'](this, bnI, 0x0, bnF, bnG),
        bnI;
    }
}
, function(bo2, bo3, bo4) {
    (function(bo2) {
        !function(bo3) {
            function bo4(bo2, bo4, boa) {
                function bob(bo2, bo3, bo4, bof) {
                    return this instanceof bob ? function(bo2, bo3, bo4, bof, bok) {
                        if (bpQ && bpR && (bo3 instanceof bpR && (bo3 = new bpQ(bo3)),
                        bof instanceof bpR && (bof = new bpQ(bof))),
                        !(bo3 || bo4 || bof || bpO))
                            return void (bo2['buffer'] = bpr(bpS, 0x0));
                        if (!bph(bo3, bo4)) {
                            var bol = bpO || Array;
                            bok = bo4,
                            bof = bo3,
                            bo4 = 0x0,
                            bo3 = new bol(0x8);
                        }
                        bo2['buffer'] = bo3,
                        bo2['offset'] = bo4 |= 0x0,
                        void 0x0 === bof || ('string' == typeof bof ? function(bo2, bo3, bo4, bof) {
                            var bok = 0x0
                              , bol = bo4['length']
                              , bos = 0x0
                              , bot = 0x0;
                            '-' === bo4[0x0] && bok++;
                            for (var bou, bov = bok; bok < bol && 0x0 <= (bou = parseInt(bo4[bok++], bof)); )
                                bot = bot * bof + bou,
                                bos = bos * bof + Math['floor'](bot / 0x100000000),
                                bot %= 0x100000000;
                            bov && (bos = ~bos,
                            bot ? bot = 0x100000000 - bot : bos++),
                            boB(bo2, bo3 + boI, bos),
                            boB(bo2, bo3 + boJ, bot);
                        }(bo3, bo4, bof, bok || 0xa) : bph(bof, bok) ? bpl(bo3, bo4, bof, bok) : 'number' == typeof bok ? (boB(bo3, bo4 + boI, bof),
                        boB(bo3, bo4 + boJ, bok)) : 0x0 < bof ? boO(bo3, bo4, bof) : 0x0 > bof ? boP(bo3, bo4, bof) : bpl(bo3, bo4, bpS, 0x0));
                    }(this, bo2, bo3, bo4, bof) : new bob(bo2,bo3,bo4,bof);
                }
                function bow() {
                    var bo2 = this['buffer']
                      , bo3 = this['offset']
                      , bo4 = boF(bo2, bo3 + boI)
                      , boA = boF(bo2, bo3 + boJ);
                    return boa || (bo4 |= 0x0),
                    bo4 ? 0x100000000 * bo4 + boA : boA;
                }
                function boB(bo2, bo3, bo4) {
                    bo2[bo3 + boN] = 0xff & bo4,
                    bo4 >>= 0x8,
                    bo2[bo3 + boM] = 0xff & bo4,
                    bo4 >>= 0x8,
                    bo2[bo3 + boL] = 0xff & bo4,
                    bo4 >>= 0x8,
                    bo2[bo3 + boK] = 0xff & bo4;
                }
                function boF(bo2, bo3) {
                    return 0x1000000 * bo2[bo3 + boK] + (bo2[bo3 + boL] << 0x10) + (bo2[bo3 + boM] << 0x8) + bo2[bo3 + boN];
                }
                var boI = bo4 ? 0x0 : 0x4
                  , boJ = bo4 ? 0x4 : 0x0
                  , boK = bo4 ? 0x0 : 0x3
                  , boL = bo4 ? 0x1 : 0x2
                  , boM = bo4 ? 0x2 : 0x1
                  , boN = bo4 ? 0x3 : 0x0
                  , boO = bo4 ? bpu : bpE
                  , boP = bo4 ? bpz : bpJ
                  , boQ = bob['prototype']
                  , boR = 'is' + bo2
                  , boS = '_' + boR;
                return boQ['buffer'] = void 0x0,
                boQ['offset'] = 0x0,
                boQ[boS] = !0x0,
                boQ['toNumber'] = bow,
                boQ['toString'] = function(bo2) {
                    var bo3 = this['buffer']
                      , bo4 = this['offset']
                      , boW = boF(bo3, bo4 + boI)
                      , boX = boF(bo3, bo4 + boJ)
                      , boY = ''
                      , boZ = !boa && 0x80000000 & boW;
                    for (boZ && (boW = ~boW,
                    boX = 0x100000000 - boX),
                    bo2 = bo2 || 0xa; ; ) {
                        var bp0 = boW % bo2 * 0x100000000 + boX;
                        if (boW = Math['floor'](boW / bo2),
                        boX = Math['floor'](bp0 / bo2),
                        boY = (bp0 % bo2)['toString'](bo2) + boY,
                        !boW && !boX)
                            break;
                    }
                    return boZ && (boY = '-' + boY),
                    boY;
                }
                ,
                boQ['toJSON'] = bow,
                boQ['toArray'] = bp2,
                bpP && (boQ['toBuffer'] = bp6),
                bpQ && (boQ['toArrayBuffer'] = bpb),
                bob[boR] = function(bo2) {
                    return !(!bo2 || !bo2[boS]);
                }
                ,
                bo3[bo2] = bob,
                bob;
            }
            function bp2(bo2) {
                var bo3 = this['buffer']
                  , bo4 = this['offset'];
                return bpO = null,
                !0x1 !== bo2 && 0x0 === bo4 && 0x8 === bo3['length'] && bpT(bo3) ? bo3 : bpr(bo3, bo4);
            }
            function bp6(bo3) {
                var bo4 = this['buffer']
                  , bp2 = this['offset'];
                if (bpO = bpP,
                !0x1 !== bo3 && 0x0 === bp2 && 0x8 === bo4['length'] && bo2['isBuffer'](bo4))
                    return bo4;
                var bp6 = new bpP(0x8);
                return bpl(bp6, 0x0, bo4, bp2),
                bp6;
            }
            function bpb(bo2) {
                var bo3 = this['buffer']
                  , bo4 = this['offset']
                  , bp2 = bo3['buffer'];
                if (bpO = bpQ,
                !0x1 !== bo2 && 0x0 === bo4 && bp2 instanceof bpR && 0x8 === bp2['byteLength'])
                    return bp2;
                var bp6 = new bpQ(0x8);
                return bpl(bp6, 0x0, bo3, bo4),
                bp6['buffer'];
            }
            function bph(bo2, bo3) {
                var bo4 = bo2 && bo2['length'];
                return bo3 |= 0x0,
                bo4 && bo3 + 0x8 <= bo4 && 'string' != typeof bo2[bo3];
            }
            function bpl(bo2, bo3, bo4, bp2) {
                bo3 |= 0x0,
                bp2 |= 0x0;
                for (var bp6 = 0x0; 0x8 > bp6; bp6++)
                    bo2[bo3++] = 0xff & bo4[bp2++];
            }
            function bpr(bo2, bo3) {
                return Array['prototype']['slice']['call'](bo2, bo3, bo3 + 0x8);
            }
            function bpu(bo2, bo3, bo4) {
                for (var bp2 = bo3 + 0x8; bp2 > bo3; )
                    bo2[--bp2] = 0xff & bo4,
                    bo4 /= 0x100;
            }
            function bpz(bo2, bo3, bo4) {
                var bp2 = bo3 + 0x8;
                for (bo4++; bp2 > bo3; )
                    bo2[--bp2] = 0xff ^ 0xff & -bo4,
                    bo4 /= 0x100;
            }
            function bpE(bo2, bo3, bo4) {
                for (var bp2 = bo3 + 0x8; bo3 < bp2; )
                    bo2[bo3++] = 0xff & bo4,
                    bo4 /= 0x100;
            }
            function bpJ(bo2, bo3, bo4) {
                var bp2 = bo3 + 0x8;
                for (bo4++; bo3 < bp2; )
                    bo2[bo3++] = 0xff ^ 0xff & -bo4,
                    bo4 /= 0x100;
            }
            var bpO, bpP = void 0x0 !== bo2 && bo2, bpQ = 'undefined' != typeof Uint8Array && Uint8Array, bpR = 'undefined' != typeof ArrayBuffer && ArrayBuffer, bpS = [0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0], bpT = Array['isArray'] || function(bo2) {
                return !!bo2 && '[object\x20Array]' == Object['prototype']['toString']['call'](bo2);
            }
            ;
            bo4('Uint64BE', !0x0, !0x0),
            bo4('Int64BE', !0x0, !0x1),
            bo4('Uint64LE', !0x1, !0x0),
            bo4('Int64LE', !0x1, !0x1);
        }('string' != typeof bo3['nodeName'] ? bo3 : this || {});
    }
    ['call'](this, bo4(0x1b)['Buffer']));
}
, function(bpV, bpW, bpX) {
    var bpY = bpX(0x10)['ExtBuffer']
      , bpZ = bpX(0x32)
      , bq0 = bpX(0x20)['readUint8']
      , bq1 = bpX(0x33)
      , bq2 = bpX(0xc);
    function bq3() {
        var bpV = this['options'];
        return this['decode'] = function(bpV) {
            var bpW = bq1['getReadToken'](bpV);
            return function(bpV) {
                var bpX = bq0(bpV)
                  , bpY = bpW[bpX];
                if (!bpY)
                    throw new Error('Invalid\x20type:\x20' + (bpX ? '0x' + bpX['toString'](0x10) : bpX));
                return bpY(bpV);
            }
            ;
        }(bpV),
        bpV && bpV['preset'] && bpZ['setExtUnpackers'](this),
        this;
    }
    bq2['install']({
        'addExtUnpacker': function(bpV, bpW) {
            (this['extUnpackers'] || (this['extUnpackers'] = []))[bpV] = bq2['filter'](bpW);
        },
        'getExtUnpacker': function(bpV) {
            return (this['extUnpackers'] || (this['extUnpackers'] = []))[bpV] || function(bpW) {
                return new bpY(bpW,bpV);
            }
            ;
        },
        'init': bq3
    }),
    bpW['preset'] = bq3['call'](bq2['preset']);
}
, function(bqe, bqf) {
    var bqg = function() {
        return this;
    }();
    try {
        bqg = bqg || new Function('return\x20this')();
    } catch (bqh) {
        'object' == typeof window && (bqg = window);
    }
    bqe['exports'] = bqg;
}
, function(bqi, bqj) {
    bqi['exports'] = [{
        'name': 'Sniper\x20Rifle',
        'src': 'weapon_1',
        'icon': 'icon_1',
        'sound': 'weapon_1',
        'animWhileAim': !0x0,
        'trail': !0x0,
        'flap': {
            'src': 'flap_0',
            'rot': 2.1,
            'scl': 0x1,
            'zOff': 0.43,
            'xOff': 0.17,
            'yOff': 0.53
        },
        'noAo': !0x0,
        'nAuto': !0x0,
        'type': 0x0,
        'scope': !0x0,
        'swapTime': 0x12c,
        'aimSpeed': 0x78,
        'spdMlt': 0.95,
        'ammo': 0x3,
        'reload': 0x5dc,
        'dmg': 0x64,
        'pierce': 0.2,
        'range': 0x3e8,
        'dropStart': 0xe6,
        'dmgDrop': 0x1e,
        'scale': 0.00115608717587935,
        'leftHoldY': -0.7,
        'rightHoldY': -0.75,
        'leftHoldZ': 2.4,
        'rightHoldZ': 0.4,
        'xOff': 0.8,
        'yOff': -0.68,
        'zOff': -1.8,
        'xOrg': 0x0,
        'yOrg': -0.55,
        'zOrg': -0.8,
        'cLean': 0.2,
        'cRot': 0.2,
        'cDrop': 0.1,
        'inspectR': 0.2,
        'inspectM': 0.1,
        'muzOff': 0x8,
        'muzMlt': 1.6,
        'rate': 0x384,
        'spread': 0x104,
        'zoom': 1,
        'leanMlt': 1.5,
        'recoil': 0.009,
        'recoilR': 0.02,
        'recover': 0.993,
        'recoverY': 0.997,
        'recoverF': 0.975,
        'recoilYM': 0.35,
        'recoilZ': 1.4,
        'recoilAnim': {
            'time': 0x118,
            'aimTime': 0x1f4,
            'recoilTweenY': 0.2
        },
        'jumpYM': 0.15,
        'rumble': 0.9,
        'rumbleDur': 0x1f4
    }, {
        'name': 'Assault\x20Rifle',
        'src': 'weapon_2',
        'icon': 'icon_2',
        'sound': 'weapon_2',
        'noAo': !0x0,
        'swapWiggle': 0.3,
        'attach': 0x0,
        'attachYOff': -0.1,
        'attachZOff': -0.8,
        'zRot': 0x1,
        'type': 0x0,
        'swapTime': 0x12c,
        'aimSpeed': 0x82,
        'spdMlt': 0.95,
        'ammo': 0x1e,
        'rate': 0x6e,
        'reload': 0x4b0,
        'dmg': 0x17,
        'pierce': 0x1,
        'range': 0x2bc,
        'dmgDrop': 0x5,
        'scale': 0.00095745145728643,
        'leftHoldY': -0.45,
        'rightHoldY': -0.6,
        'leftHoldZ': 0.65,
        'rightHoldZ': -1.3,
        'xOff': 0x1,
        'yOff': -0.7,
        'yRot': 0.0018,
        'zOff': -3.6,
        'xOrg': 0x0,
        'yOrg': -0.625,
        'zOrg': -2.3,
        'cLean': 0.2,
        'cRot': 0.2,
        'cDrop': 0.1,
        'inspectR': 0.1,
        'inspectM': 1.5,
        'caseZOff': -1.7,
        'caseYOff': -0.2,
        'muzOff': 5.1,
        'muzOffY': -0.05,
        'muzMlt': 1.4,
        'spread': 0x64,
        'minSpread': 0x5,
        'zoom': 1,
        'leanMlt': 1.5,
        'recoil': 0.003,
        'recoilR': 0.02,
        'recover': 0.978,
        'recoverY': 0.995,
        'recoverF': 0.975,
        'jYMlt': 0.9,
        'recoilYM': 0.32,
        'recoilZ': 0x5,
        'recoilZM': -0.05,
        'aimRecMlt': 0.8,
        'recoilAnim': {
            'time': 0x12c,
            'recoilTweenY': 0.05
        },
        'jumpYM': 0.6,
        'rumble': 0.5
    }, {
        'name': 'Pistol',
        'src': 'weapon_3',
        'icon': 'icon_3',
        'sound': 'weapon_3',
        'secondary': !0x0,
        'noAo': !0x0,
        'transp': !0x0,
        'nAuto': !0x0,
        'kill': ['', 0x4b],
        'swapWiggle': 0.3,
        'type': 0x1,
        'shine': 0xa,
        'swapTime': 0x15e,
        'aimSpeed': 0x78,
        'spdMlt': 1.05,
        'ammo': 0xa,
        'reload': 0x2bc,
        'dmg': 0x14,
        'range': 0x2bc,
        'dmgDrop': 0xa,
        'scale': 0.0003158947055276376,
        'leftHoldY': -1.1,
        'rightHoldY': -0.62,
        'leftHoldZ': -0.55,
        'rightHoldZ': -0.5,
        'xOff': 0.7,
        'yOff': -0.6,
        'zOff': -3.7,
        'xOrg': 0x0,
        'yRot': -0.005,
        'yOrg': -0.23,
        'zOrg': -3.9,
        'jYMlt': 0.1,
        'cLean': 0.3,
        'cRot': 0.3,
        'caseZOff': 0.2,
        'caseYOff': 0x0,
        'inspectR': 0.3,
        'inspectM': 0.8,
        'muzOff': 1.5,
        'muzOffY': 0x0,
        'muzMlt': 0.95,
        'rate': 0x96,
        'spread': 0x5a,
        'zoom': 1,
        'leanMlt': 0x1,
        'recoil': 0.006,
        'recoilR': 0.01,
        'recover': 0.98,
        'recoverY': 0.99,
        'recoverF': 0.98,
        'recoilYM': 0.2,
        'aimRecMlt': 0.4,
        'recoilZ': 3.6,
        'recoilZM': -0.4,
        'recoilAnim': {
            'time': 0xc8,
            'recoilTweenY': 0.2
        },
        'rumble': 0.4
    }, {
        'name': 'Submachine\x20Gun',
        'src': 'weapon_4',
        'icon': 'icon_4',
        'sound': 'weapon_4',
        'swapWiggle': 0.5,
        'attach': 0x0,
        'attachYOff': -0.09,
        'attachZOff': -1.1,
        'zRot': 0.75,
        'noAo': !0x0,
        'type': 0x0,
        'swapTime': 0x12c,
        'aimSpeed': 0x78,
        'spdMlt': 1.04,
        'ammo': 0x18,
        'reload': 0x3e8,
        'dmg': 0x12,
        'pierce': 0x1,
        'range': 0x2bc,
        'dmgDrop': 0xc,
        'scale': 0.000574897587939697,
        'leftHoldY': -0.4,
        'leftHoldX': -0.1,
        'rightHoldY': -0.5,
        'leftHoldZ': 1.1,
        'rightHoldZ': -0.95,
        'xOff': 0.85,
        'yOff': -0.86,
        'zOff': -0x3,
        'xOrg': 0x0,
        'yOrg': -0.59,
        'zOrg': -2.5,
        'cRot': 0.18,
        'cLean': 0.16,
        'inspectR': 0.2,
        'inspectM': 1.2,
        'caseYOff': -0.15,
        'caseZOff': -0.4,
        'muzOff': 2.15,
        'muzOffY': 0.1,
        'rate': 0x5a,
        'spread': 0x46,
        'minSpread': 0x5,
        'zoom': 1,
        'jYMlt': 0.8,
        'leanMlt': 0x1,
        'recoil': 0.0034,
        'recoilY': 0.77,
        'recoilR': 0.02,
        'recover': 0.975,
        'recoverY': 0.996,
        'recoverF': 0.975,
        'recoilZ': 3.2,
        'recoilZM': -0.1,
        'aimRecMlt': 0.7,
        'recoilAnim': {
            'time': 0xc8,
            'recoilTweenYM': 0.05,
            'recoilTweenY': 0.06
        },
        'expScale': 0.8,
        'rumble': 0.4
    }, {
        'name': 'Revolver',
        'src': 'weapon_5',
        'icon': 'icon_5',
        'sound': 'weapon_5',
        'nAuto': !0x0,
        'nCase': !0x0,
        'transp': !0x0,
        'kill': ['', 0x32],
        'type': 0x0,
        'swapTime': 0xc8,
        'aimSpeed': 0x78,
        'spdMlt': 1.04,
        'ammo': 0x6,
        'reload': 0x384,
        'dmg': 0x42,
        'pierce': 0.85,
        'dmgDrop': 0xa,
        'scale': 1.3,
        'leftHoldY': -1.1,
        'rightHoldY': -0.8,
        'leftHoldZ': -0.5,
        'rightHoldZ': -0.5,
        'xOff': 0.7,
        'yOff': -0.7,
        'zOff': -4.1,
        'xOrg': 0x0,
        'yOrg': -0.31,
        'zOrg': -3.8,
        'jYMlt': 0.5,
        'cLean': 0.5,
        'cRot': 0.4,
        'cDrop': 0.1,
        'inspectR': 0.1,
        'inspectM': 0.3,
        'muzOff': 2.75,
        'muzOffY': 0.2,
        'muzMlt': 0.95,
        'range': 0x2bc,
        'rate': 0x186,
        'spread': 0x64,
        'zoom': 1,
        'leanMlt': 1.6,
        'recoil': 0.013,
        'recoilR': 0.035,
        'recover': 0.982,
        'recoverY': 0.992,
        'recoverF': 0.98,
        'recoilYM': 0.2,
        'aimRecMlt': 0.6,
        'recoilZM': -1.4,
        'recoilZ': 0x2,
        'recoilAnim': {
            'time': 0x12c,
            'recoilTweenY': 0.4
        },
        'expScale': 0.9,
        'rumble': 0.7
    }, {
        'name': 'Shotgun',
        'src': 'weapon_6',
        'icon': 'icon_6',
        'sound': 'weapon_6',
        'noAo': !0x0,
        'nAuto': !0x0,
        'nCase': !0x0,
        'transp': !0x0,
        'nRing': !0x0,
        'swapWiggle': 0.4,
        'shine': 0x23,
        'type': 0x0,
        'physRang': 0x23,
        'physPow': 0.085,
        'swapTime': 0x12c,
        'aimSpeed': 0x78,
        'spdMlt': 0x1,
        'ammo': 0x2,
        'shots': 0x5,
        'reload': 0x44c,
        'dmg': 0x32,
        'dmgDrop': 0x32,
        'scale': 0.00082934281407035,
        'rightHoldX': 0.1,
        'leftHoldY': -0.5,
        'rightHoldY': -0.7,
        'leftHoldZ': 0.4,
        'rightHoldZ': -1.5,
        'xOff': 0.95,
        'yOff': -0.65,
        'zOff': -3.8,
        'xOrg': 0x0,
        'yOrg': -0.3,
        'zOrg': -2.8,
        'cLean': 0.2,
        'cRot': 0.2,
        'cDrop': 0.1,
        'jYMlt': 0.2,
        'inspectR': 0.1,
        'inspectM': 1.9,
        'muzOff': 0x6,
        'muzMlt': 1.8,
        'range': 0xf0,
        'rate': 0x190,
        'innac': 0x6e,
        'spread': 0x78,
        'minSpread': 0x14,
        'zoom': 1,
        'leanMlt': 1.6,
        'recoil': 0.016,
        'recoilR': 0.015,
        'recover': 0.99,
        'recoverF': 0.97,
        'recoilZ': 0x2,
        'recoilZM': 0.2,
        'aimRecMlt': 0.5,
        'recoilYM': 0.6,
        'recoilAnim': {
            'time': 0x154,
            'recoilTweenY': 0.2
        },
        'jumpYM': 0.5,
        'rumble': 0.8
    }, {
        'name': 'Light\x20Machine\x20Gun',
        'src': 'weapon_7',
        'icon': 'icon_7',
        'sound': 'weapon_7',
        'type': 0x0,
        'attach': 0x0,
        'swapWiggle': 0.3,
        'attachYOff': -0.085,
        'attachZOff': -0.7,
        'zRot': 0.75,
        'noAo': !0x0,
        'swapTime': 0x2bc,
        'aimSpeed': 0xc8,
        'spdMlt': 0.79,
        'ammo': 0x3c,
        'reload': 0xdac,
        'dmg': 0x14,
        'pierce': 0x1,
        'range': 0x2bc,
        'dmgDrop': 0xa,
        'jYMlt': 0.8,
        'scale': 0.0008856008924623108,
        'leftHoldY': -0.85,
        'leftHoldX': 0.4,
        'rightHoldY': -0.75,
        'leftHoldZ': 1.1,
        'rightHoldZ': -0.2,
        'yRot': -0.01,
        'xOff': 0.95,
        'yOff': -0.75,
        'zOff': -2.8,
        'xOrg': 0x0,
        'yOrg': -0.6,
        'zOrg': -1.8,
        'cLean': 0.1,
        'cRot': 0.1,
        'cDrop': 0.1,
        'inspectR': 0.2,
        'inspectM': 0.6,
        'caseInd': 0x2,
        'caseZOff': -0.5,
        'caseYOff': -0.1,
        'muzOff': 5.5,
        'muzOffY': -0.14,
        'muzMlt': 1.7,
        'rate': 0x78,
        'spread': 0x12c,
        'minSpread': 0xa,
        'zoom': 1,
        'leanMlt': 1.6,
        'recoil': 0.0032,
        'recoilR': 0.014,
        'recover': 0.98,
        'recoverY': 0.9975,
        'recoverF': 0.975,
        'recoilZ': 3.8,
        'recoilYM': 0.25,
        'recoilZ': 0x3,
        'recoilZM': -0.1,
        'aimRecMlt': 0.5,
        'recoilAnim': {
            'time': 0xc8,
            'recoilTweenY': 0.03
        },
        'jumpYM': 0.5,
        'expScale': 0.85,
        'rumble': 0.65
    }, {
        'name': 'Semi\x20Auto',
        'src': 'weapon_8',
        'icon': 'icon_8',
        'sound': 'weapon_8',
        'attach': 0x0,
        'attachYOff': -0.08,
        'attachZOff': -1.55,
        'nAuto': !0x0,
        'zRot': 0.7,
        'type': 0x0,
        'noAo': !0x0,
        'swapWiggle': 0.4,
        'swapTime': 0x12c,
        'aimSpeed': 0x78,
        'spdMlt': 0x1,
        'ammo': 0x8,
        'reload': 0x5dc,
        'dmg': 0x22,
        'pierce': 0.2,
        'range': 0x3e8,
        'dmgDrop': 0x0,
        'scale': 0.00093686221105528,
        'leftHoldY': -0.5,
        'rightHoldY': -0.45,
        'leftHoldZ': 0.4,
        'rightHoldZ': -1.85,
        'jYMlt': 0.9,
        'xOff': 0.8,
        'yOff': -0.55,
        'zOff': -3.5,
        'xOrg': 0x0,
        'yOrg': -0.395,
        'yRot': -0.005,
        'zOrg': -3.4,
        'cLean': 0.2,
        'cRot': 0.2,
        'cDrop': 0.1,
        'inspectR': 0.2,
        'inspectM': 1.4,
        'muzOff': 0x4,
        'muzOffY': -0.05,
        'muzMlt': 1.1,
        'rate': 0x78,
        'spread': 0xfa,
        'caseZOff': -1.3,
        'zoom': 1,
        'recoil': 0.01,
        'recoilR': 0.012,
        'recover': 0.98,
        'recoilY': 0.36,
        'recoverY': 0.994,
        'recoverF': 0.975,
        'recoilYM': 0.6,
        'recoilZ': 0x2,
        'recoilZM': 0.2,
        'aimRecMlt': 0.8,
        'recoilAnim': {
            'time': 0xfa,
            'recoilTweenY': 0.11
        },
        'jumpYM': 0.5,
        'rumble': 0.75
    }, {
        'name': 'Rocket\x20Launcher',
        'src': 'weapon_9',
        'icon': 'icon_9',
        'sound': 'weapon_9',
        'nInsp': !0x0,
        'nSkill': !0x0,
        'nAuto': !0x0,
        'nCase': !0x0,
        'nRing': !0x0,
        'noAo': !0x0,
        'projectile': 0x0,
        'type': 0x0,
        'swapTime': 0x190,
        'swapWiggle': 0.4,
        'aimSpeed': 0xc8,
        'spdMlt': 0.9,
        'ammo': 0x1,
        'reload': 0x640,
        'scale': 0.00076263407035176,
        'leftHoldX': -0.1,
        'leftHoldY': -0.36,
        'rightHoldY': -0.3,
        'leftHoldZ': 1.2,
        'rightHoldX': -0.15,
        'rightHoldZ': -0.2,
        'jYMlt': 0.4,
        'xOff': 0.95,
        'yOff': -0.56,
        'zOff': -2.6,
        'xOrg': 0x0,
        'yOrg': -0.945,
        'zOrg': -0x3,
        'zRot': 0.9,
        'cLean': 0.2,
        'cRot': 0.2,
        'cDrop': 0.1,
        'muzOff': 0x5,
        'muzOffY': 0x0,
        'muzMlt': 1.5,
        'rate': 0x1,
        'spread': 0x78,
        'minSpread': 0xf,
        'zoom': 1,
        'leanMlt': 1.4,
        'landBob': 0.8,
        'recoil': 0.008,
        'recoilR': 0.012,
        'recover': 0.99,
        'recoverY': 0.998,
        'recoverF': 0.975,
        'recoilZ': 0x4,
        'recoilZM': -0.5,
        'aimRecMlt': 0.9,
        'recoilAnim': {
            'time': 0x190,
            'recoilTweenY': 0.25
        },
        'jumpYM': 0.3,
        'expScale': 0.7,
        'rumble': 0x1,
        'rumbleDur': 0x2ee
    }, {
        'name': 'Akimbo\x20Uzi',
        'src': 'weapon_10',
        'icon': 'icon_10',
        'sound': 'weapon_10',
        'nInsp': !0x0,
        'noAim': !0x0,
        'akimbo': !0x0,
        'type': 0x0,
        'swapTime': 0x12c,
        'aimSpeed': 0x78,
        'spdMlt': 1.04,
        'ammo': 0x12,
        'reload': 0x4b0,
        'dmg': 0x12,
        'pierce': 0x1,
        'range': 0x2bc,
        'dmgDrop': 0xc,
        'scale': 0.9,
        'rightHoldY': -0.55,
        'leftHoldZ': 0.3,
        'leftHoldX': -0.25,
        'leftHoldY': -0.55,
        'rightHoldZ': 0.3,
        'rightHoldX': -0.25,
        'holdW': 1.3,
        'xOff': 1.5,
        'yOff': -0.95,
        'zOff': -3.3,
        'xOrg': 0x0,
        'yOrg': -0.62,
        'zOrg': -2.5,
        'zLnM': 0.4,
        'cLean': 0.1,
        'cRot': 0.1,
        'cDrop': 0.2,
        'caseYOff': -0.15,
        'caseZOff': -0.4,
        'muzOff': 3.6,
        'rate': 0x3c,
        'spread': 0x28,
        'spreadInc': 1.5,
        'minSpread': 0xa,
        'zoom': 1,
        'leanMlt': 0.6,
        'recoil': 0.0034,
        'recoilR': 0.015,
        'recover': 0.978,
        'recoverY': 0.996,
        'recoverF': 0.975,
        'recoilZ': 0x5,
        'recoilYM': 0.6,
        'recoilAnim': {
            'recoilTweenY': 0.01
        },
        'expScale': 0.7,
        'rumble': 0.4
    }, {
        'name': 'Desert\x20Eagle',
        'src': 'weapon_11',
        'icon': 'icon_11',
        'sound': 'weapon_11',
        'secondary': !0x0,
        'minRec': 0xf,
        'nAuto': !0x0,
        'noAo': !0x0,
        'transp': !0x0,
        'kill': ['', 0x32],
        'type': 0x1,
        'swapTime': 0xc8,
        'aimSpeed': 0x78,
        'spdMlt': 0x1,
        'ammo': 0x6,
        'reload': 0x3e8,
        'dmg': 0x32,
        'pierce': 0.85,
        'dmgDrop': 0xa,
        'scale': 0.94,
        'leftHoldY': -0.9,
        'rightHoldY': -0.7,
        'leftHoldZ': -0.5,
        'rightHoldZ': -0.5,
        'holdW': 0.95,
        'xOff': 0x1,
        'yOff': -0.7,
        'zOff': -4.1,
        'xOrg': 0x0,
        'yOrg': -0.195,
        'zOrg': -3.8,
        'cLean': 0.3,
        'cRot': 0.3,
        'inspectR': 0.35,
        'inspectM': 0.9,
        'muzOff': 0x2,
        'muzMlt': 1.1,
        'range': 0x2bc,
        'rate': 0x190,
        'spread': 0x96,
        'jYMlt': 0.5,
        'zoom': 1,
        'leanMlt': 1.6,
        'recoil': 0.01,
        'recoilR': 0.01,
        'recover': 0.985,
        'recoverY': 0.996,
        'recoverF': 0.98,
        'recoilYM': 0.4,
        'aimRecMlt': 0.5,
        'recoilZ': 2.5,
        'recoilZM': 0.2,
        'recoilAnim': {
            'time': 0x122,
            'recoilTweenY': 0.35
        },
        'rumble': 0.8
    }, {
        'name': 'Alien\x20Blaster',
        'src': 'weapon_13',
        'icon': 'icon_13',
        'sound': 'weapon_13',
        'secondary': !0x0,
        'nRing': !0x0,
        'nAuto': !0x0,
        'transp': !0x0,
        'nCase': !0x0,
        'minRec': 0x32,
        'kill': ['', 0x32],
        'type': 0x1,
        'swapTime': 0xc8,
        'aimSpeed': 0x78,
        'spdMlt': 0x1,
        'ammo': 0x4,
        'reload': 0x5dc,
        'dmg': 0x32,
        'pierce': 0.85,
        'dmgDrop': 0xa,
        'scale': 1.1,
        'leftHoldY': -0x1,
        'rightHoldY': -0.65,
        'leftHoldZ': -0.2,
        'rightHoldZ': -0.2,
        'xOff': 1.3,
        'yOff': -0.83,
        'zOff': -4.1,
        'xOrg': 0x0,
        'yRot': -0.01,
        'yOrg': -0.53,
        'zOrg': -3.8,
        'cLean': 0.2,
        'cRot': 0.2,
        'cDrop': 0x0,
        'inspectR': 0.1,
        'inspectM': 0.8,
        'holdW': 0.7,
        'muzOff': 2.2,
        'muzOffY': 0.1,
        'muzID': 0x3,
        'muzMlt': 1.1,
        'jYMlt': 0.8,
        'range': 0x2bc,
        'rate': 0x96,
        'spread': 0x96,
        'zoom': 1,
        'leanMlt': 1.6,
        'recoil': 0.006,
        'recoilR': 0.01,
        'recover': 0.98,
        'recoverY': 0.99,
        'recoverF': 0.98,
        'recoilYM': 0.2,
        'recoilZ': 0x2,
        'aimRecMlt': 0.6,
        'recoilAnim': {
            'time': 0xc8,
            'recoilTweenY': 0.3
        },
        'rumble': 0.4
    }, {
        'name': 'Combat\x20Knife',
        'icon': 'icon_0',
        'melee': !0x0,
        'nInsp': !0x0,
        'noSkins': !0x0,
        'holdW': 0.9,
        'swapWiggle': 0.3,
        'sounds': ['swish_0', 'swish_1'],
        'noAim': !0x0,
        'anim': function(bqi, bqj, bqm) {
            if (0x1 == bqm) {
                bqi['handAnimInd'] = -0x1 * (bqi['handAnimInd'] || 0x1);
                var bqn = !0x1;
                bqi['meleeAnim']['anim'] && (bqi['meleeAnim']['anim']['stop'](),
                bqn = 0x2 <= bqi['meleeAnim']['armM']),
                bqi['resetMeleeAnim']();
                var bqo = -1.2
                  , bqp = 0.7
                  , bqq = -0.4;
                bqn ? (bqo += 0.1,
                bqi['meleeAnim']['weaR'] = bqo,
                bqq += 0.8,
                bqi['meleeAnim']['armR'] = bqq,
                bqp += 0.2,
                bqi['meleeAnim']['weaM'] = bqp,
                bqi['meleeAnim']['flipW'] = Math['PI']) : bqo -= 0.4,
                bqi['meleeAnim']['anim'] = new bqj['Tween'](bqi['meleeAnim'])['to']({
                    'armR': bqq,
                    'lArm': 0x1,
                    'armT': bqn ? -0.2 : -0.8,
                    'armY': -0x3,
                    'armM': bqn ? -0xa : 0xd,
                    'armE': -0x2,
                    'weaR': bqo,
                    'weaM': bqp
                }, 0xdc * (bqn ? 1.3 : 0x1))['easing'](bqj['Easing']['Cubic']['Out'])['onComplete'](function() {
                    bqi['meleeAnim']['anim'] = new bqj['Tween'](bqi['meleeAnim'])['to']({
                        'armR': 0x0,
                        'armT': 0x0,
                        'armY': 0x0,
                        'lArm': 0x0,
                        'armM': 0x0,
                        'armE': 0x0,
                        'weaR': 0x0,
                        'weaM': 0x0,
                        'flipW': 0x0
                    }, 0x15e)['easing'](bqj['Easing']['Cubic']['Out'])['start']();
                })['start']();
            } else {
                bqi['handAnimInd'] = -0x1 * (bqi['handAnimInd'] || 0x1);
                var bqr = (0x1 == bqi['handAnimInd'] ? 'l' : 'r') + 'HndTween';
                bqi[bqr] && bqi[bqr]['stop'](),
                bqi[bqr + 'A'] = bqi[bqr + 'A'] || 0x0,
                bqi[bqr] = new bqj['Tween'](bqi)['to']({
                    [bqr + 'A']: 2.4
                }, 0x1e)['easing'](bqj['Easing']['Linear']['None'])['onComplete'](function() {
                    bqi[bqr] = new bqj['Tween'](bqi)['to']({
                        [bqr + 'A']: 0x0
                    }, 0xc8)['easing'](bqj['Easing']['Linear']['None'])['delay'](0x64)['start']();
                })['start']();
            }
        },
        'type': 0x1,
        'swapTime': 0x15e,
        'aimSpeed': 0x78,
        'rate': 0xfa,
        'dmg': 0x32,
        'dmgDrop': 0x0,
        'range': 0xf,
        'spdMlt': 1.1,
        'spread': 0x64,
        'leftHoldY': -0.82,
        'leftHoldX': 1.5,
        'rightHoldX': -1.5,
        'rightHoldY': -0.82,
        'leftHoldZ': -0.5,
        'rightHoldZ': -0.5,
        'xOff': 0x0,
        'yOff': -0.6,
        'zOff': -3.6,
        'xOrg': 0.5,
        'yOrg': 0x0,
        'zOrg': -3.6,
        'zRM': 0.35,
        'zoom': 1,
        'leanMlt': 0.8,
        'recoil': 0.006,
        'recoilR': 0.01,
        'recover': 0.98,
        'recoverF': 0.98,
        'rumble': 0x1
    }, {
        'name': 'Crossbow',
        'src': 'weapon_17',
        'icon': 'icon_17',
        'sound': 'weapon_17',
        'noSkins': !0x0,
        'nInsp': !0x0,
        'nRing': !0x0,
        'nAuto': !0x0,
        'noAo': !0x0,
        'nCase': !0x0,
        'nMuz': !0x0,
        'attach': 0x0,
        'attachYOff': -0.1,
        'attachZOff': 0.65,
        'kill': ['', 0x64],
        'type': 0x0,
        'projectile': 0x1,
        'swapTime': 0xc8,
        'aimSpeed': 0x78,
        'spdMlt': 0x1,
        'ammo': 0x1,
        'reload': 0x3e8,
        'dmg': 0x64,
        'pierce': 0x0,
        'dmgDrop': 0x0,
        'scale': 0.0007303348040201011,
        'leftHoldY': -0.33,
        'rightHoldY': -0.28,
        'leftHoldZ': 2.2,
        'leftHoldX': 0x0,
        'rightHoldZ': 0.9,
        'xOff': 1.3,
        'yOff': -0.95,
        'zOff': -1.9,
        'xOrg': 0x0,
        'yOrg': -0.72,
        'zOrg': -0x1,
        'cLean': 0.1,
        'cRot': 0.1,
        'zRot': 0.9,
        'cDrop': 0.2,
        'holdW': 0.5,
        'muzOff': 2.2,
        'muzOffY': 0.1,
        'muzID': 0x3,
        'muzMlt': 1.1,
        'jYMlt': 0.95,
        'range': 0x2bc,
        'rate': 0x96,
        'spread': 0x12c,
        'zoom': 1,
        'leanMlt': 0.3,
        'recoil': 0.007,
        'recoilR': 0.01,
        'recover': 0.985,
        'recoverY': 0.996,
        'recoverF': 0.98,
        'recoilZ': 0x4,
        'recoilAnim': {
            'time': 0x12c,
            'recoilTweenY': 0.1
        },
        'rumble': 0.5
    }, {
        'name': 'Famas',
        'src': 'weapon_18',
        'icon': 'icon_18',
        'sound': 'weapon_18',
        'noAo': !0x0,
        'nAuto': !0x0,
        'burst': {
            'c': 0x3,
            'r': 0x5a
        },
        'swapWiggle': 0.6,
        'attach': 0x0,
        'attachYOff': -0.1,
        'attachZOff': -0.5,
        'zRot': 0x1,
        'type': 0x0,
        'swapTime': 0x12c,
        'aimSpeed': 0x82,
        'spdMlt': 0.95,
        'ammo': 0x1e,
        'rate': 0x12c,
        'reload': 0x4b0,
        'dmg': 0x1c,
        'pierce': 0x1,
        'range': 0x2bc,
        'dmgDrop': 0x5,
        'scale': 0.0008858419597989991,
        'leftHoldY': -0.45,
        'rightHoldY': -0.5,
        'leftHoldZ': 0.72,
        'rightHoldZ': -0x1,
        'xOff': 0x1,
        'yOff': -0.86,
        'yRot': 0.0018,
        'zOff': -0x3,
        'xOrg': 0x0,
        'yOrg': -1.14,
        'zOrg': -0x2,
        'cLean': 0.2,
        'cRot': 0.2,
        'cDrop': 0.1,
        'inspectR': 0.1,
        'inspectM': 1.5,
        'caseZOff': -1.7,
        'caseYOff': -0.2,
        'muzOff': 4.9,
        'muzOffY': -0.05,
        'muzMlt': 1.4,
        'spread': 0x5a,
        'minSpread': 0x5,
        'zoom': 1,
        'leanMlt': 1.5,
        'recoil': 0.0032,
        'recoilR': 0.02,
        'recover': 0.978,
        'recoverY': 0.995,
        'recoverF': 0.975,
        'jYMlt': 0.9,
        'recoilYM': 0.32,
        'recoilZ': 0x5,
        'recoilZM': 0.05,
        'aimRecMlt': 0.8,
        'recoilAnim': {
            'time': 0x12c,
            'recoilTweenY': 0.05
        },
        'jumpYM': 0.6,
        'rumble': 0.5
    }],
    bqi['exports']['findWeaponBySrc'] = function(bqj) {
        for (var bqt = 0x0; bqt < bqi['exports']['length']; ++bqt)
            if (bqi['exports'][bqt]['src'] == 'weapon_' + bqj)
                return bqi['exports'][bqt];
        return null;
    }
    ;
}
, function(bqu, bqv, bqw) {
    var bqx = bqw(0x4);
    const bqy = bqw(0x7);
    bqw(0x8);
    var bqz = {};
    bqu['exports']['getColor'] = function(bqu, bqv) {
        var bqw = bqu + '-' + (bqv || '')
          , bqy = bqz[bqw];
        return bqy || (bqy = new bqx['Color'](bqu),
        bqv && bqy['multiplyScalar'](bqv),
        bqz[bqw] = bqy),
        bqy;
    }
    ,
    bqu['exports']['colorize'] = function(bqv, bqw, bqx) {
        bqw = bqx || bqu['exports']['getColor'](bqw);
        for (var bqy = 0x0; bqy < bqv['faces']['length']; ++bqy)
            bqv['faces'][bqy]['vertexColors'][0x0] = bqw,
            bqv['faces'][bqy]['vertexColors'][0x1] = bqw,
            bqv['faces'][bqy]['vertexColors'][0x2] = bqw;
    }
    ;
    var bqI, bqJ = function(bqu, bqv, bqw, bqy) {
        for (var bqz, bqI = new bqx['Vector2'](bqv,bqw)['multiplyScalar'](bqy || 0x1), bqJ = 0x0; bqJ < bqu['faceVertexUvs']['length']; bqJ++) {
            bqz = bqu['faceVertexUvs'][bqJ];
            for (var bqK = 0x0; bqK < bqz['length']; bqK++)
                for (var bqL, bqM = 0x0; 0x3 > bqM; bqM++)
                    (bqL = bqz[bqK][bqM]['multiply'](bqI))['x'] = 0.5 + bqL['x'] - bqI['x'] / 0x2;
        }
    }, bqK = function(bqu, bqv, bqw, bqx, bqy, bqz) {
        return bqu >= bqw - bqy && bqu <= bqw + bqy && bqv >= bqx - bqz && bqv <= bqx + bqz;
    }, bqL = [], bqM = ['a', 'b', 'c', 'd'];
    bqu['exports']['generatePlane'] = function(bqv, bqw, bqz, br6, br7, br8) {
        bqv *= bqz['ratio'] || 0x1;
        var br9 = (bqz['scale'] ? bqv + '_' + bqw + '_' : '') + (bqz['scale'] || '') + (bqz['tilesX'] || '') + (bqz['tilesZ'] || '') + (bqz['noise'] ? br6 + '_' + br7 + '_' + br8 : '') + (null == bqz['colr'] ? '' : bqz['colr']) + (bqz['dark'] || '');
        if (!(bqI = bqL[br9])) {
            if (bqI = new bqx['PlaneGeometry'](0x1,0x1,bqz['tilesX'] || 0x1,bqz['tilesZ'] || 0x1),
            bqz['noise']) {
                for (var bra = {}, brb = bqz['margin'] || 0x0, brc = 0x0; brc < bqI['vertices']['length']; ++brc) {
                    var brd = bqI['vertices'][brc]['x']
                      , bre = bqI['vertices'][brc]['y'];
                    if (!bqz['pinEdges'] || -0.5 != brd && 0.5 != brd && -0.5 != bre && 0.5 != bre)
                        if (bqz['objects']) {
                            for (var brf = 0x0; brf < bqz['objects']['length']; ++brf)
                                if (bqz['objects'][brf]['y'] - bqz['objects'][brf]['height'] <= br7 + 0.1 && bqz['objects'][brf]['y'] + bqz['objects'][brf]['height'] > br7 + bqz['noise'] && bqK(br8 + -bre * bqv * 0x2, br6 + brd * bqw * 0x2, bqz['objects'][brf]['z'], bqz['objects'][brf]['x'], bqz['objects'][brf]['length'] + brb, bqz['objects'][brf]['width'] + brb)) {
                                    bqI['vertices'][brc]['z'] = Math['random']() * bqz['noise'] + 0x1,
                                    bra[brc] = bqu['exports']['getColor'](bqz['colr'], 0.6);
                                    break;
                                }
                        } else
                            bqI['vertices'][brc]['z'] = Math['random']() * bqz['noise'];
                    bra[brc] || (bra[brc] = bqu['exports']['getColor'](bqz['colr']));
                }
                for (brc = 0x0; brc < bqI['faces']['length']; brc++) {
                    for (var brg = bqI['faces'][brc], brh = 0x0, bri = 0x0; 0x3 > bri; bri++)
                        brg['vertexColors'][bri] = bra[brg[bqM[bri]]],
                        0x0 >= bqI['vertices'][brg[bqM[bri]]]['z'] && brh++;
                    0x3 <= brh && delete bqI['faces'][brc];
                }
                bqI['faces'] = bqI['faces']['filter'](function(bqu) {
                    return bqu;
                }),
                bqI['elementsNeedUpdate'] = !0x0;
            } else
                bqu['exports']['colorize'](bqI, null, bqu['exports']['getColor'](bqz['colr'] || 0xffffff, bqz['dark'] || 0x1));
            bqz['scale'] && bqJ(bqI, bqw / bqy['worldUV'], bqv / bqy['worldUV'], bqz['scale']),
            bqI['computeVertexNormals'](),
            bqL[br9] = bqI;
        }
        return bqI;
    }
    ;
    var brk = [];
    bqu['exports']['generateCube'] = function(bqv, bqw, bqz, bqK, bqL) {
        bqv = bqv || [0x1, 0x1, 0x1, 0x1, 0x1, 0x1],
        bqL['flipp'] = (bqw > bqz || bqK > bqz) && 'floor_0' == bqL['src'],
        bqL['flippW'] = bqw > bqK && 'floor_0' == bqL['src'];
        for (var bqM = (bqL['scale'] ? bqw + '_' + bqz + '_' + bqK + '_' : '') + (null == bqL['colr'] ? '' : bqL['colr']) + (bqL['scale'] || '') + (bqL['flippW'] ? 'flw' : 'fnw') + (bqL['flipp'] ? 'fl' : 'fn') + (bqL['amb'] || '') + (bqL['fAmb'] || '') + (bqL['useScale'] || ''), brr = 0x0; brr < bqv['length']; ++brr)
            bqM += '_' + bqv[brr];
        if (!(bqI = brk[bqM])) {
            bqL['colr'] = null == bqL['colr'] ? 0xffffff : bqL['colr'];
            var brs = bqu['exports']['getColor'](bqL['colr'])
              , brt = bqL['amb'] ? bqu['exports']['getColor'](bqL['colr'], bqL['amb']) : brs;
            if (bqL['fAmb']) {
                var bru = brs;
                brs = brt,
                brt = bru;
            }
            bqI = new bqx['Geometry']();
            var brv, brw = [];
            bqv[0x0] && ((brv = new bqx['PlaneGeometry'](0x1,0x1))['rotateY'](Math['PI'] / 0x2),
            bqL['flipp'] && brv['rotateX'](Math['PI'] / 0x2),
            brv['translate'](0.5, 0.5, 0x0),
            brv['faces'][0x0]['vertexColors'] = [brs, brt, brs],
            brv['faces'][0x1]['vertexColors'] = [brt, brt, brs],
            bqL['scale'] && bqJ(brv, (bqL['flipp'] ? bqz : bqK) / bqy['worldUV'], (bqL['flipp'] ? bqK : bqz) / bqy['worldUV'], bqL['scale']),
            brw['push'](brv)),
            bqv[0x1] && ((brv = new bqx['PlaneGeometry'](0x1,0x1))['rotateY'](-Math['PI'] / 0x2),
            bqL['flipp'] && brv['rotateX'](Math['PI'] / 0x2),
            brv['translate'](-0.5, 0.5, 0x0),
            brv['faces'][0x0]['vertexColors'] = [brs, brt, brs],
            brv['faces'][0x1]['vertexColors'] = [brt, brt, brs],
            bqL['scale'] && bqJ(brv, (bqL['flipp'] ? bqz : bqK) / bqy['worldUV'], (bqL['flipp'] ? bqK : bqz) / bqy['worldUV'], bqL['scale']),
            brw['push'](brv)),
            bqv[0x2] && ((brv = new bqx['PlaneGeometry'](0x1,0x1))['rotateX'](-Math['PI'] / 0x2),
            bqL['flippW'] && brv['rotateY'](Math['PI'] / 0x2),
            brv['translate'](0x0, 0x1, 0x0),
            brv['faces'][0x0]['vertexColors'] = [brs, brs, brs],
            brv['faces'][0x1]['vertexColors'] = [brs, brs, brs],
            bqL['scale'] && bqJ(brv, (bqL['flippW'] ? bqK : bqw) / bqy['worldUV'], (bqL['flippW'] ? bqw : bqK) / bqy['worldUV'], bqL['scale']),
            brw['push'](brv)),
            bqv[0x3] && ((brv = new bqx['PlaneGeometry'](0x1,0x1))['rotateX'](Math['PI'] / 0x2),
            bqL['flippW'] && brv['rotateY'](Math['PI'] / 0x2),
            brv['translate'](0x0, 0x0, 0x0),
            brv['faces'][0x0]['vertexColors'] = [brt, brt, brt],
            brv['faces'][0x1]['vertexColors'] = [brt, brt, brt],
            bqL['scale'] && bqJ(brv, (bqL['flippW'] ? bqK : bqw) / bqy['worldUV'], (bqL['flippW'] ? bqw : bqK) / bqy['worldUV'], bqL['scale']),
            brw['push'](brv)),
            bqv[0x4] && (brv = new bqx['PlaneGeometry'](0x1,0x1),
            bqL['flipp'] && brv['rotateZ'](Math['PI'] / 0x2),
            brv['translate'](0x0, 0.5, 0.5),
            brv['faces'][0x0]['vertexColors'] = [brs, brt, brs],
            brv['faces'][0x1]['vertexColors'] = [brt, brt, brs],
            bqL['scale'] && bqJ(brv, (bqL['flipp'] ? bqz : bqw) / bqy['worldUV'], (bqL['flipp'] ? bqw : bqz) / bqy['worldUV'], bqL['scale']),
            brw['push'](brv)),
            bqv[0x5] && ((brv = new bqx['PlaneGeometry'](0x1,0x1))['rotateY'](Math['PI']),
            bqL['flipp'] && brv['rotateZ'](Math['PI'] / 0x2),
            brv['translate'](0x0, 0.5, -0.5),
            brv['faces'][0x0]['vertexColors'] = [brs, brt, brs],
            brv['faces'][0x1]['vertexColors'] = [brt, brt, brs],
            bqL['scale'] && bqJ(brv, (bqL['flipp'] ? bqz : bqw) / bqy['worldUV'], (bqL['flipp'] ? bqw : bqz) / bqy['worldUV'], bqL['scale']),
            brw['push'](brv));
            for (brr = 0x0; brr < brw['length']; brr++)
                bqI['merge'](brw[brr], new bqx['Matrix4']());
            bqL && bqL['useScale'] && (bqI['scale'](bqw, bqz, bqK),
            bqI['translate'](0x0, -bqz / 0x2, 0x0)),
            brk[bqM] = bqI;
        }
        return bqI;
    }
    ;
}
, function(brx, bry, brz) {
    brz['d'](bry, 'a', function() {
        return brL;
    });
    var brA = brz(0x2)
      , brB = Object(brA['e'])()
      , brC = 'Sentry\x20Logger\x20'
      , brD = function() {
        function brx() {
            this['_enabled'] = !0x1;
        }
        return brx['prototype']['disable'] = function() {
            this['_enabled'] = !0x1;
        }
        ,
        brx['prototype']['enable'] = function() {
            this['_enabled'] = !0x0;
        }
        ,
        brx['prototype']['log'] = function() {
            for (var brx = [], bry = 0x0; bry < arguments['length']; bry++)
                brx[bry] = arguments[bry];
            this['_enabled'] && Object(brA['b'])(function() {
                brB['console']['log'](brC + '[Log]:\x20' + brx['join']('\x20'));
            });
        }
        ,
        brx['prototype']['warn'] = function() {
            for (var brx = [], bry = 0x0; bry < arguments['length']; bry++)
                brx[bry] = arguments[bry];
            this['_enabled'] && Object(brA['b'])(function() {
                brB['console']['warn'](brC + '[Warn]:\x20' + brx['join']('\x20'));
            });
        }
        ,
        brx['prototype']['error'] = function() {
            for (var brx = [], bry = 0x0; bry < arguments['length']; bry++)
                brx[bry] = arguments[bry];
            this['_enabled'] && Object(brA['b'])(function() {
                brB['console']['error'](brC + '[Error]:\x20' + brx['join']('\x20'));
            });
        }
        ,
        brx;
    }();
    brB['__SENTRY__'] = brB['__SENTRY__'] || {};
    var brL = brB['__SENTRY__']['logger'] || (brB['__SENTRY__']['logger'] = new brD());
}
, function(brM, brN, brO) {
    brN['encode'] = function(brM, brN) {
        var brO = new brS(brN);
        return brO['write'](brM),
        brO['read']();
    }
    ;
    var brS = brO(0x1a)['EncodeBuffer'];
}
, function(brT, brU, brV) {
    brU['EncodeBuffer'] = brX;
    var brW = brV(0xf)['preset'];
    function brX(brT) {
        if (!(this instanceof brX))
            return new brX(brT);
        if (brT && (this['options'] = brT,
        brT['codec'])) {
            var brU = this['codec'] = brT['codec'];
            brU['bufferish'] && (this['bufferish'] = brU['bufferish']);
        }
    }
    brV(0x1d)['FlexEncoder']['mixin'](brX['prototype']),
    brX['prototype']['codec'] = brW,
    brX['prototype']['write'] = function(brT) {
        this['codec']['encode'](this, brT);
    }
    ;
}
, function(bs1, bs2, bs3) {
    (function(bs1) {
        /*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>
 * @license  MIT
 */
        var bs5 = bs3(0x2a)
          , bs6 = bs3(0x11)
          , bs7 = bs3(0xb);
        function bs8() {
            return bsc['TYPED_ARRAY_SUPPORT'] ? 0x7fffffff : 0x3fffffff;
        }
        function bs9(bs1, bs2) {
            if (bs8() < bs2)
                throw new RangeError('Invalid\x20typed\x20array\x20length');
            return bsc['TYPED_ARRAY_SUPPORT'] ? (bs1 = new Uint8Array(bs2))['__proto__'] = bsc['prototype'] : (null === bs1 && (bs1 = new bsc(bs2)),
            bs1['length'] = bs2),
            bs1;
        }
        function bsc(bs1, bs2, bs3) {
            if (!(bsc['TYPED_ARRAY_SUPPORT'] || this instanceof bsc))
                return new bsc(bs1,bs2,bs3);
            if ('number' == typeof bs1) {
                if ('string' == typeof bs2)
                    throw new Error('If\x20encoding\x20is\x20specified\x20then\x20the\x20first\x20argument\x20must\x20be\x20a\x20string');
                return bsA(this, bs1);
            }
            return bsg(this, bs1, bs2, bs3);
        }
        function bsg(bs1, bs2, bs3, bs5) {
            if ('number' == typeof bs2)
                throw new TypeError('\x22value\x22\x20argument\x20must\x20not\x20be\x20a\x20number');
            return 'undefined' != typeof ArrayBuffer && bs2 instanceof ArrayBuffer ? function(bs1, bs2, bs3, bs5) {
                if (bs2['byteLength'],
                0x0 > bs3 || bs2['byteLength'] < bs3)
                    throw new RangeError('\x27offset\x27\x20is\x20out\x20of\x20bounds');
                if (bs2['byteLength'] < bs3 + (bs5 || 0x0))
                    throw new RangeError('\x27length\x27\x20is\x20out\x20of\x20bounds');
                return bs2 = void 0x0 === bs3 && void 0x0 === bs5 ? new Uint8Array(bs2) : void 0x0 === bs5 ? new Uint8Array(bs2,bs3) : new Uint8Array(bs2,bs3,bs5),
                bsc['TYPED_ARRAY_SUPPORT'] ? (bs1 = bs2)['__proto__'] = bsc['prototype'] : bs1 = bsE(bs1, bs2),
                bs1;
            }(bs1, bs2, bs3, bs5) : 'string' == typeof bs2 ? function(bs1, bs2, bs3) {
                if (('string' != typeof bs3 || '' === bs3) && (bs3 = 'utf8'),
                !bsc['isEncoding'](bs3))
                    throw new TypeError('\x22encoding\x22\x20must\x20be\x20a\x20valid\x20string\x20encoding');
                var bs5 = 0x0 | bsL(bs2, bs3)
                  , bs6 = (bs1 = bs9(bs1, bs5))['write'](bs2, bs3);
                return bs6 !== bs5 && (bs1 = bs1['slice'](0x0, bs6)),
                bs1;
            }(bs1, bs2, bs3) : function(bs1, bs2) {
                if (bsc['isBuffer'](bs2)) {
                    var bs3 = 0x0 | bsJ(bs2['length']);
                    return 0x0 === (bs1 = bs9(bs1, bs3))['length'] ? bs1 : (bs2['copy'](bs1, 0x0, 0x0, bs3),
                    bs1);
                }
                if (bs2) {
                    if ('undefined' != typeof ArrayBuffer && bs2['buffer']instanceof ArrayBuffer || 'length'in bs2)
                        return 'number' != typeof bs2['length'] || function(bs1) {
                            return bs1 != bs1;
                        }(bs2['length']) ? bs9(bs1, 0x0) : bsE(bs1, bs2);
                    if ('Buffer' === bs2['type'] && bs7(bs2['data']))
                        return bsE(bs1, bs2['data']);
                }
                throw new TypeError('First\x20argument\x20must\x20be\x20a\x20string,\x20Buffer,\x20ArrayBuffer,\x20Array,\x20or\x20array-like\x20object.');
            }(bs1, bs2);
        }
        function bsy(bs1) {
            if ('number' != typeof bs1)
                throw new TypeError('\x22size\x22\x20argument\x20must\x20be\x20a\x20number');
            if (0x0 > bs1)
                throw new RangeError('\x22size\x22\x20argument\x20must\x20not\x20be\x20negative');
        }
        function bsA(bs1, bs2) {
            if (bsy(bs2),
            bs1 = bs9(bs1, 0x0 > bs2 ? 0x0 : 0x0 | bsJ(bs2)),
            !bsc['TYPED_ARRAY_SUPPORT'])
                for (var bs3 = 0x0; bs3 < bs2; ++bs3)
                    bs1[bs3] = 0x0;
            return bs1;
        }
        function bsE(bs1, bs2) {
            var bs3 = 0x0 > bs2['length'] ? 0x0 : 0x0 | bsJ(bs2['length']);
            bs1 = bs9(bs1, bs3);
            for (var bs5 = 0x0; bs5 < bs3; bs5 += 0x1)
                bs1[bs5] = 0xff & bs2[bs5];
            return bs1;
        }
        function bsJ(bs1) {
            if (bs1 >= bs8())
                throw new RangeError('Attempt\x20to\x20allocate\x20Buffer\x20larger\x20than\x20maximum\x20size:\x200x' + bs8()['toString'](0x10) + '\x20bytes');
            return 0x0 | bs1;
        }
        function bsL(bs1, bs2) {
            if (bsc['isBuffer'](bs1))
                return bs1['length'];
            if ('undefined' != typeof ArrayBuffer && 'function' == typeof ArrayBuffer['isView'] && (ArrayBuffer['isView'](bs1) || bs1 instanceof ArrayBuffer))
                return bs1['byteLength'];
            'string' != typeof bs1 && (bs1 = '' + bs1);
            var bs3 = bs1['length'];
            if (0x0 === bs3)
                return 0x0;
            for (var bs5 = !0x1; ; )
                switch (bs2) {
                case 'ascii':
                case 'latin1':
                case 'binary':
                    return bs3;
                case 'utf8':
                case 'utf-8':
                case void 0x0:
                    return byV(bs1)['length'];
                case 'ucs2':
                case 'ucs-2':
                case 'utf16le':
                case 'utf-16le':
                    return 0x2 * bs3;
                case 'hex':
                    return bs3 >>> 0x1;
                case 'base64':
                    return bz3(bs1)['length'];
                default:
                    if (bs5)
                        return byV(bs1)['length'];
                    bs2 = ('' + bs2)['toLowerCase'](),
                    bs5 = !0x0;
                }
        }
        function bsQ(bs1, bs2, bs3) {
            var bs5 = bs1[bs2];
            bs1[bs2] = bs1[bs3],
            bs1[bs3] = bs5;
        }
        function bsV(bs1, bs2, bs3, bs5, bs6) {
            if (0x0 === bs1['length'])
                return -0x1;
            if ('string' == typeof bs3 ? (bs5 = bs3,
            bs3 = 0x0) : 0x7fffffff < bs3 ? bs3 = 0x7fffffff : -0x80000000 > bs3 && (bs3 = -0x80000000),
            bs3 = +bs3,
            isNaN(bs3) && (bs3 = bs6 ? 0x0 : bs1['length'] - 0x1),
            0x0 > bs3 && (bs3 = bs1['length'] + bs3),
            bs3 >= bs1['length']) {
                if (bs6)
                    return -0x1;
                bs3 = bs1['length'] - 0x1;
            } else if (0x0 > bs3) {
                if (!bs6)
                    return -0x1;
                bs3 = 0x0;
            }
            if ('string' == typeof bs2 && (bs2 = bsc['from'](bs2, bs5)),
            bsc['isBuffer'](bs2))
                return 0x0 === bs2['length'] ? -0x1 : bt1(bs1, bs2, bs3, bs5, bs6);
            if ('number' == typeof bs2)
                return bs2 &= 0xff,
                bsc['TYPED_ARRAY_SUPPORT'] && 'function' == typeof Uint8Array['prototype']['indexOf'] ? bs6 ? Uint8Array['prototype']['indexOf']['call'](bs1, bs2, bs3) : Uint8Array['prototype']['lastIndexOf']['call'](bs1, bs2, bs3) : bt1(bs1, [bs2], bs3, bs5, bs6);
            throw new TypeError('val\x20must\x20be\x20string,\x20number\x20or\x20Buffer');
        }
        function bt1(bs1, bs2, bs3, bs5, bs6) {
            function bs7(bs1, bs2) {
                return 0x1 === bs9 ? bs1[bs2] : bs1['readUInt16BE'](bs2 * bs9);
            }
            var bs8, bs9 = 0x1, bsc = bs1['length'], bsg = bs2['length'];
            if (void 0x0 !== bs5 && ('ucs2' === (bs5 = (bs5 + '')['toLowerCase']()) || 'ucs-2' === bs5 || 'utf16le' === bs5 || 'utf-16le' === bs5)) {
                if (0x2 > bs1['length'] || 0x2 > bs2['length'])
                    return -0x1;
                bs9 = 0x2,
                bsc /= 0x2,
                bsg /= 0x2,
                bs3 /= 0x2;
            }
            if (bs6) {
                var bsy = -0x1;
                for (bs8 = bs3; bs8 < bsc; bs8++)
                    if (bs7(bs1, bs8) !== bs7(bs2, -0x1 === bsy ? 0x0 : bs8 - bsy))
                        -0x1 !== bsy && (bs8 -= bs8 - bsy),
                        bsy = -0x1;
                    else if (-0x1 === bsy && (bsy = bs8),
                    bs8 - bsy + 0x1 === bsg)
                        return bsy * bs9;
            } else
                for (bs3 + bsg > bsc && (bs3 = bsc - bsg),
                bs8 = bs3; 0x0 <= bs8; bs8--) {
                    for (var bsA = !0x0, bsE = 0x0; bsE < bsg; bsE++)
                        if (bs7(bs1, bs8 + bsE) !== bs7(bs2, bsE)) {
                            bsA = !0x1;
                            break;
                        }
                    if (bsA)
                        return bs8;
                }
            return -0x1;
        }
        function bth(bs1, bs2, bs3, bs5) {
            bs3 = +bs3 || 0x0;
            var bs6 = bs1['length'] - bs3;
            bs5 ? (bs5 = +bs5) > bs6 && (bs5 = bs6) : bs5 = bs6;
            var bs7 = bs2['length'];
            if (0x0 != bs7 % 0x2)
                throw new TypeError('Invalid\x20hex\x20string');
            bs5 > bs7 / 0x2 && (bs5 = bs7 / 0x2);
            for (var bs8, bs9 = 0x0; bs9 < bs5; ++bs9) {
                if (bs8 = parseInt(bs2['substr'](0x2 * bs9, 0x2), 0x10),
                isNaN(bs8))
                    return bs9;
                bs1[bs3 + bs9] = bs8;
            }
            return bs9;
        }
        function btq(bs1, bs2, bs3, bs5) {
            return bz7(byV(bs2, bs1['length'] - bs3), bs1, bs3, bs5);
        }
        function btv(bs1, bs2, bs3, bs5) {
            return bz7(function(bs1) {
                for (var bs2 = [], bs3 = 0x0; bs3 < bs1['length']; ++bs3)
                    bs2['push'](0xff & bs1['charCodeAt'](bs3));
                return bs2;
            }(bs2), bs1, bs3, bs5);
        }
        function btD(bs1, bs2, bs3, bs5) {
            return btv(bs1, bs2, bs3, bs5);
        }
        function btI(bs1, bs2, bs3, bs5) {
            return bz7(bz3(bs2), bs1, bs3, bs5);
        }
        function btN(bs1, bs2, bs3, bs5) {
            return bz7(function(bs1, bs2) {
                for (var bs3, bs5, bs6, bs7 = [], bs8 = 0x0; bs8 < bs1['length'] && !(0x0 > (bs2 -= 0x2)); ++bs8)
                    bs3 = bs1['charCodeAt'](bs8),
                    bs5 = bs3 >> 0x8,
                    bs6 = bs3 % 0x100,
                    bs7['push'](bs6),
                    bs7['push'](bs5);
                return bs7;
            }(bs2, bs1['length'] - bs3), bs1, bs3, bs5);
        }
        function btZ(bs1, bs2, bs3) {
            return 0x0 === bs2 && bs3 === bs1['length'] ? bs5['fromByteArray'](bs1) : bs5['fromByteArray'](bs1['slice'](bs2, bs3));
        }
        function bu3(bs1, bs2, bs3) {
            bs3 = Math['min'](bs1['length'], bs3);
            for (var bs5 = [], bs6 = bs2; bs6 < bs3; ) {
                var bs7, bs8, bs9, bsc, bsg = bs1[bs6], bsy = null, bsA = 0xef < bsg ? 0x4 : 0xdf < bsg ? 0x3 : 0xbf < bsg ? 0x2 : 0x1;
                if (bs6 + bsA <= bs3)
                    0x1 === bsA ? 0x80 > bsg && (bsy = bsg) : 0x2 === bsA ? 0x80 == (0xc0 & (bs7 = bs1[bs6 + 0x1])) && (0x7f < (bsc = (0x1f & bsg) << 0x6 | 0x3f & bs7) && (bsy = bsc)) : 0x3 === bsA ? (bs7 = bs1[bs6 + 0x1],
                    bs8 = bs1[bs6 + 0x2],
                    0x80 == (0xc0 & bs7) && 0x80 == (0xc0 & bs8) && (0x7ff < (bsc = (0xf & bsg) << 0xc | (0x3f & bs7) << 0x6 | 0x3f & bs8) && (0xd800 > bsc || 0xdfff < bsc) && (bsy = bsc))) : 0x4 === bsA && (bs7 = bs1[bs6 + 0x1],
                    bs8 = bs1[bs6 + 0x2],
                    bs9 = bs1[bs6 + 0x3],
                    0x80 == (0xc0 & bs7) && 0x80 == (0xc0 & bs8) && 0x80 == (0xc0 & bs9) && (0xffff < (bsc = (0xf & bsg) << 0x12 | (0x3f & bs7) << 0xc | (0x3f & bs8) << 0x6 | 0x3f & bs9) && 0x110000 > bsc && (bsy = bsc)));
                null === bsy ? (bsy = 0xfffd,
                bsA = 0x1) : 0xffff < bsy && (bsy -= 0x10000,
                bs5['push'](0xd800 | 0x3ff & bsy >>> 0xa),
                bsy = 0xdc00 | 0x3ff & bsy),
                bs5['push'](bsy),
                bs6 += bsA;
            }
            return function(bs1) {
                var bs2 = bs1['length'];
                if (bs2 <= bvs)
                    return String['fromCharCode']['apply'](String, bs1);
                for (var bs3 = '', bs5 = 0x0; bs5 < bs2; )
                    bs3 += String['fromCharCode']['apply'](String, bs1['slice'](bs5, bs5 += bvs));
                return bs3;
            }(bs5);
        }
        bs2['Buffer'] = bsc,
        bs2['SlowBuffer'] = function(bs1) {
            return +bs1 != bs1 && (bs1 = 0x0),
            bsc['alloc'](+bs1);
        }
        ,
        bs2['INSPECT_MAX_BYTES'] = 0x32,
        bsc['TYPED_ARRAY_SUPPORT'] = void 0x0 === bs1['TYPED_ARRAY_SUPPORT'] ? function() {
            try {
                var bs1 = new Uint8Array(0x1);
                return bs1['__proto__'] = {
                    '__proto__': Uint8Array['prototype'],
                    'foo': function() {
                        return 0x2a;
                    }
                },
                0x2a === bs1['foo']() && 'function' == typeof bs1['subarray'] && 0x0 === bs1['subarray'](0x1, 0x1)['byteLength'];
            } catch (bum) {
                return !0x1;
            }
        }() : bs1['TYPED_ARRAY_SUPPORT'],
        bs2['kMaxLength'] = bs8(),
        bsc['poolSize'] = 0x2000,
        bsc['_augment'] = function(bs1) {
            return bs1['__proto__'] = bsc['prototype'],
            bs1;
        }
        ,
        bsc['from'] = function(bs1, bs2, bs3) {
            return bsg(null, bs1, bs2, bs3);
        }
        ,
        bsc['TYPED_ARRAY_SUPPORT'] && (bsc['prototype']['__proto__'] = Uint8Array['prototype'],
        bsc['__proto__'] = Uint8Array,
        'undefined' != typeof Symbol && Symbol['species'] && bsc[Symbol['species']] === bsc && Object['defineProperty'](bsc, Symbol['species'], {
            'value': null,
            'configurable': !0x0
        })),
        bsc['alloc'] = function(bs1, bs2, bs3) {
            return function(bs1, bs2, bs3, bs5) {
                return bsy(bs2),
                0x0 >= bs2 ? bs9(bs1, bs2) : void 0x0 === bs3 ? bs9(bs1, bs2) : 'string' == typeof bs5 ? bs9(bs1, bs2)['fill'](bs3, bs5) : bs9(bs1, bs2)['fill'](bs3);
            }(null, bs1, bs2, bs3);
        }
        ,
        bsc['allocUnsafe'] = function(bs1) {
            return bsA(null, bs1);
        }
        ,
        bsc['allocUnsafeSlow'] = function(bs1) {
            return bsA(null, bs1);
        }
        ,
        bsc['isBuffer'] = function(bs1) {
            return !(null == bs1 || !bs1['_isBuffer']);
        }
        ,
        bsc['compare'] = function(bs1, bs2) {
            if (!bsc['isBuffer'](bs1) || !bsc['isBuffer'](bs2))
                throw new TypeError('Arguments\x20must\x20be\x20Buffers');
            if (bs1 === bs2)
                return 0x0;
            for (var bs3 = bs1['length'], bs5 = bs2['length'], bs6 = 0x0, bs7 = Math['min'](bs3, bs5); bs6 < bs7; ++bs6)
                if (bs1[bs6] !== bs2[bs6]) {
                    bs3 = bs1[bs6],
                    bs5 = bs2[bs6];
                    break;
                }
            return bs3 < bs5 ? -0x1 : bs5 < bs3 ? 0x1 : 0x0;
        }
        ,
        bsc['isEncoding'] = function(bs1) {
            switch ((bs1 + '')['toLowerCase']()) {
            case 'hex':
            case 'utf8':
            case 'utf-8':
            case 'ascii':
            case 'latin1':
            case 'binary':
            case 'base64':
            case 'ucs2':
            case 'ucs-2':
            case 'utf16le':
            case 'utf-16le':
                return !0x0;
            default:
                return !0x1;
            }
        }
        ,
        bsc['concat'] = function(bs1, bs2) {
            if (!bs7(bs1))
                throw new TypeError('\x22list\x22\x20argument\x20must\x20be\x20an\x20Array\x20of\x20Buffers');
            if (0x0 === bs1['length'])
                return bsc['alloc'](0x0);
            var bs3;
            if (void 0x0 === bs2)
                for (bs2 = 0x0,
                bs3 = 0x0; bs3 < bs1['length']; ++bs3)
                    bs2 += bs1[bs3]['length'];
            var bs5 = bsc['allocUnsafe'](bs2)
              , bs6 = 0x0;
            for (bs3 = 0x0; bs3 < bs1['length']; ++bs3) {
                var bs8 = bs1[bs3];
                if (!bsc['isBuffer'](bs8))
                    throw new TypeError('\x22list\x22\x20argument\x20must\x20be\x20an\x20Array\x20of\x20Buffers');
                bs8['copy'](bs5, bs6),
                bs6 += bs8['length'];
            }
            return bs5;
        }
        ,
        bsc['byteLength'] = bsL,
        bsc['prototype']['_isBuffer'] = !0x0,
        bsc['prototype']['swap16'] = function() {
            var bs1 = this['length'];
            if (0x0 != bs1 % 0x2)
                throw new RangeError('Buffer\x20size\x20must\x20be\x20a\x20multiple\x20of\x2016-bits');
            for (var bs2 = 0x0; bs2 < bs1; bs2 += 0x2)
                bsQ(this, bs2, bs2 + 0x1);
            return this;
        }
        ,
        bsc['prototype']['swap32'] = function() {
            var bs1 = this['length'];
            if (0x0 != bs1 % 0x4)
                throw new RangeError('Buffer\x20size\x20must\x20be\x20a\x20multiple\x20of\x2032-bits');
            for (var bs2 = 0x0; bs2 < bs1; bs2 += 0x4)
                bsQ(this, bs2, bs2 + 0x3),
                bsQ(this, bs2 + 0x1, bs2 + 0x2);
            return this;
        }
        ,
        bsc['prototype']['swap64'] = function() {
            var bs1 = this['length'];
            if (0x0 != bs1 % 0x8)
                throw new RangeError('Buffer\x20size\x20must\x20be\x20a\x20multiple\x20of\x2064-bits');
            for (var bs2 = 0x0; bs2 < bs1; bs2 += 0x8)
                bsQ(this, bs2, bs2 + 0x7),
                bsQ(this, bs2 + 0x1, bs2 + 0x6),
                bsQ(this, bs2 + 0x2, bs2 + 0x5),
                bsQ(this, bs2 + 0x3, bs2 + 0x4);
            return this;
        }
        ,
        bsc['prototype']['toString'] = function() {
            var bs1 = 0x0 | this['length'];
            return 0x0 == bs1 ? '' : 0x0 === arguments['length'] ? bu3(this, 0x0, bs1) : function(bs1, bs2, bs3) {
                var bs5 = !0x1;
                if ((void 0x0 === bs2 || 0x0 > bs2) && (bs2 = 0x0),
                bs2 > this['length'])
                    return '';
                if ((void 0x0 === bs3 || bs3 > this['length']) && (bs3 = this['length']),
                0x0 >= bs3)
                    return '';
                if ((bs3 >>>= 0x0) <= (bs2 >>>= 0x0))
                    return '';
                for (bs1 || (bs1 = 'utf8'); ; )
                    switch (bs1) {
                    case 'hex':
                        return bvF(this, bs2, bs3);
                    case 'utf8':
                    case 'utf-8':
                        return bu3(this, bs2, bs3);
                    case 'ascii':
                        return bvt(this, bs2, bs3);
                    case 'latin1':
                    case 'binary':
                        return bvz(this, bs2, bs3);
                    case 'base64':
                        return btZ(this, bs2, bs3);
                    case 'ucs2':
                    case 'ucs-2':
                    case 'utf16le':
                    case 'utf-16le':
                        return bvM(this, bs2, bs3);
                    default:
                        if (bs5)
                            throw new TypeError('Unknown\x20encoding:\x20' + bs1);
                        bs1 = (bs1 + '')['toLowerCase'](),
                        bs5 = !0x0;
                    }
            }
            ['apply'](this, arguments);
        }
        ,
        bsc['prototype']['equals'] = function(bs1) {
            if (!bsc['isBuffer'](bs1))
                throw new TypeError('Argument\x20must\x20be\x20a\x20Buffer');
            return this === bs1 || 0x0 === bsc['compare'](this, bs1);
        }
        ,
        bsc['prototype']['inspect'] = function() {
            var bs1 = ''
              , bs3 = bs2['INSPECT_MAX_BYTES'];
            return 0x0 < this['length'] && (bs1 = this['toString']('hex', 0x0, bs3)['match'](/.{2}/g)['join']('\x20'),
            this['length'] > bs3 && (bs1 += '\x20...\x20')),
            '<Buffer\x20' + bs1 + '>';
        }
        ,
        bsc['prototype']['compare'] = function(bs1, bs2, bs3, bs5, bs6) {
            if (!bsc['isBuffer'](bs1))
                throw new TypeError('Argument\x20must\x20be\x20a\x20Buffer');
            if (void 0x0 === bs2 && (bs2 = 0x0),
            void 0x0 === bs3 && (bs3 = bs1 ? bs1['length'] : 0x0),
            void 0x0 === bs5 && (bs5 = 0x0),
            void 0x0 === bs6 && (bs6 = this['length']),
            0x0 > bs2 || bs3 > bs1['length'] || 0x0 > bs5 || bs6 > this['length'])
                throw new RangeError('out\x20of\x20range\x20index');
            if (bs5 >= bs6 && bs2 >= bs3)
                return 0x0;
            if (bs5 >= bs6)
                return -0x1;
            if (bs2 >= bs3)
                return 0x1;
            if (this === bs1)
                return 0x0;
            for (var bs7 = (bs6 >>>= 0x0) - (bs5 >>>= 0x0), bs8 = (bs3 >>>= 0x0) - (bs2 >>>= 0x0), bs9 = Math['min'](bs7, bs8), bsg = this['slice'](bs5, bs6), bsy = bs1['slice'](bs2, bs3), bsA = 0x0; bsA < bs9; ++bsA)
                if (bsg[bsA] !== bsy[bsA]) {
                    bs7 = bsg[bsA],
                    bs8 = bsy[bsA];
                    break;
                }
            return bs7 < bs8 ? -0x1 : bs8 < bs7 ? 0x1 : 0x0;
        }
        ,
        bsc['prototype']['includes'] = function(bs1, bs2, bs3) {
            return -0x1 !== this['indexOf'](bs1, bs2, bs3);
        }
        ,
        bsc['prototype']['indexOf'] = function(bs1, bs2, bs3) {
            return bsV(this, bs1, bs2, bs3, !0x0);
        }
        ,
        bsc['prototype']['lastIndexOf'] = function(bs1, bs2, bs3) {
            return bsV(this, bs1, bs2, bs3, !0x1);
        }
        ,
        bsc['prototype']['write'] = function(bs1, bs2, bs3, bs5) {
            if (void 0x0 === bs2)
                bs5 = 'utf8',
                bs3 = this['length'],
                bs2 = 0x0;
            else if (void 0x0 === bs3 && 'string' == typeof bs2)
                bs5 = bs2,
                bs3 = this['length'],
                bs2 = 0x0;
            else {
                if (!isFinite(bs2))
                    throw new Error('Buffer.write(string,\x20encoding,\x20offset[,\x20length])\x20is\x20no\x20longer\x20supported');
                bs2 |= 0x0,
                isFinite(bs3) ? (bs3 |= 0x0,
                void 0x0 === bs5 && (bs5 = 'utf8')) : (bs5 = bs3,
                bs3 = void 0x0);
            }
            var bs6 = this['length'] - bs2;
            if ((void 0x0 === bs3 || bs3 > bs6) && (bs3 = bs6),
            0x0 < bs1['length'] && (0x0 > bs3 || 0x0 > bs2) || bs2 > this['length'])
                throw new RangeError('Attempt\x20to\x20write\x20outside\x20buffer\x20bounds');
            bs5 || (bs5 = 'utf8');
            for (var bs7 = !0x1; ; )
                switch (bs5) {
                case 'hex':
                    return bth(this, bs1, bs2, bs3);
                case 'utf8':
                case 'utf-8':
                    return btq(this, bs1, bs2, bs3);
                case 'ascii':
                    return btv(this, bs1, bs2, bs3);
                case 'latin1':
                case 'binary':
                    return btD(this, bs1, bs2, bs3);
                case 'base64':
                    return btI(this, bs1, bs2, bs3);
                case 'ucs2':
                case 'ucs-2':
                case 'utf16le':
                case 'utf-16le':
                    return btN(this, bs1, bs2, bs3);
                default:
                    if (bs7)
                        throw new TypeError('Unknown\x20encoding:\x20' + bs5);
                    bs5 = ('' + bs5)['toLowerCase'](),
                    bs7 = !0x0;
                }
        }
        ,
        bsc['prototype']['toJSON'] = function() {
            return {
                'type': 'Buffer',
                'data': Array['prototype']['slice']['call'](this['_arr'] || this, 0x0)
            };
        }
        ;
        var bvs = 0x1000;
        function bvt(bs1, bs2, bs3) {
            var bs5 = '';
            bs3 = Math['min'](bs1['length'], bs3);
            for (var bs6 = bs2; bs6 < bs3; ++bs6)
                bs5 += String['fromCharCode'](0x7f & bs1[bs6]);
            return bs5;
        }
        function bvz(bs1, bs2, bs3) {
            var bs5 = '';
            bs3 = Math['min'](bs1['length'], bs3);
            for (var bs6 = bs2; bs6 < bs3; ++bs6)
                bs5 += String['fromCharCode'](bs1[bs6]);
            return bs5;
        }
        function bvF(bs1, bs2, bs3) {
            var bs5 = bs1['length'];
            (!bs2 || 0x0 > bs2) && (bs2 = 0x0),
            (!bs3 || 0x0 > bs3 || bs3 > bs5) && (bs3 = bs5);
            for (var bs6 = '', bs7 = bs2; bs7 < bs3; ++bs7)
                bs6 += byT(bs1[bs7]);
            return bs6;
        }
        function bvM(bs1, bs2, bs3) {
            for (var bs5 = bs1['slice'](bs2, bs3), bs6 = '', bs7 = 0x0; bs7 < bs5['length']; bs7 += 0x2)
                bs6 += String['fromCharCode'](bs5[bs7] + 0x100 * bs5[bs7 + 0x1]);
            return bs6;
        }
        function bvT(bs1, bs2, bs3) {
            if (0x0 != bs1 % 0x1 || 0x0 > bs1)
                throw new RangeError('offset\x20is\x20not\x20uint');
            if (bs1 + bs2 > bs3)
                throw new RangeError('Trying\x20to\x20access\x20beyond\x20buffer\x20length');
        }
        function bvX(bs1, bs2, bs3, bs5, bs6, bs7) {
            if (!bsc['isBuffer'](bs1))
                throw new TypeError('\x22buffer\x22\x20argument\x20must\x20be\x20a\x20Buffer\x20instance');
            if (bs2 > bs6 || bs2 < bs7)
                throw new RangeError('\x22value\x22\x20argument\x20is\x20out\x20of\x20bounds');
            if (bs3 + bs5 > bs1['length'])
                throw new RangeError('Index\x20out\x20of\x20range');
        }
        function bw4(bs1, bs2, bs3, bs5) {
            0x0 > bs2 && (bs2 = 0xffff + bs2 + 0x1);
            for (var bs6 = 0x0, bs7 = Math['min'](bs1['length'] - bs3, 0x2); bs6 < bs7; ++bs6)
                bs1[bs3 + bs6] = (bs2 & 0xff << 0x8 * (bs5 ? bs6 : 0x1 - bs6)) >>> 0x8 * (bs5 ? bs6 : 0x1 - bs6);
        }
        function bwb(bs1, bs2, bs3, bs5) {
            0x0 > bs2 && (bs2 = 0xffffffff + bs2 + 0x1);
            for (var bs6 = 0x0, bs7 = Math['min'](bs1['length'] - bs3, 0x4); bs6 < bs7; ++bs6)
                bs1[bs3 + bs6] = 0xff & bs2 >>> 0x8 * (bs5 ? bs6 : 0x3 - bs6);
        }
        function bwi(bs1, bs2, bs3, bs5) {
            if (bs3 + bs5 > bs1['length'])
                throw new RangeError('Index\x20out\x20of\x20range');
            if (0x0 > bs3)
                throw new RangeError('Index\x20out\x20of\x20range');
        }
        function bwn(bs1, bs2, bs3, bs5, bs7) {
            return bs7 || bwi(bs1, 0x0, bs3, 0x4),
            bs6['write'](bs1, bs2, bs3, bs5, 0x17, 0x4),
            bs3 + 0x4;
        }
        function bwt(bs1, bs2, bs3, bs5, bs7) {
            return bs7 || bwi(bs1, 0x0, bs3, 0x8),
            bs6['write'](bs1, bs2, bs3, bs5, 0x34, 0x8),
            bs3 + 0x8;
        }
        bsc['prototype']['slice'] = function(bs1, bs2) {
            var bs3, bs5 = this['length'];
            if (0x0 > (bs1 = ~~bs1) ? 0x0 > (bs1 += bs5) && (bs1 = 0x0) : bs1 > bs5 && (bs1 = bs5),
            0x0 > (bs2 = void 0x0 === bs2 ? bs5 : ~~bs2) ? 0x0 > (bs2 += bs5) && (bs2 = 0x0) : bs2 > bs5 && (bs2 = bs5),
            bs2 < bs1 && (bs2 = bs1),
            bsc['TYPED_ARRAY_SUPPORT'])
                (bs3 = this['subarray'](bs1, bs2))['__proto__'] = bsc['prototype'];
            else {
                var bs6 = bs2 - bs1;
                bs3 = new bsc(bs6,void 0x0);
                for (var bs7 = 0x0; bs7 < bs6; ++bs7)
                    bs3[bs7] = this[bs7 + bs1];
            }
            return bs3;
        }
        ,
        bsc['prototype']['readUIntLE'] = function(bs1, bs2, bs3) {
            bs1 |= 0x0,
            bs2 |= 0x0,
            bs3 || bvT(bs1, bs2, this['length']);
            for (var bs5 = this[bs1], bs6 = 0x1, bs7 = 0x0; ++bs7 < bs2 && (bs6 *= 0x100); )
                bs5 += this[bs1 + bs7] * bs6;
            return bs5;
        }
        ,
        bsc['prototype']['readUIntBE'] = function(bs1, bs2, bs3) {
            bs1 |= 0x0,
            bs2 |= 0x0,
            bs3 || bvT(bs1, bs2, this['length']);
            for (var bs5 = this[bs1 + --bs2], bs6 = 0x1; 0x0 < bs2 && (bs6 *= 0x100); )
                bs5 += this[bs1 + --bs2] * bs6;
            return bs5;
        }
        ,
        bsc['prototype']['readUInt8'] = function(bs1, bs2) {
            return bs2 || bvT(bs1, 0x1, this['length']),
            this[bs1];
        }
        ,
        bsc['prototype']['readUInt16LE'] = function(bs1, bs2) {
            return bs2 || bvT(bs1, 0x2, this['length']),
            this[bs1] | this[bs1 + 0x1] << 0x8;
        }
        ,
        bsc['prototype']['readUInt16BE'] = function(bs1, bs2) {
            return bs2 || bvT(bs1, 0x2, this['length']),
            this[bs1] << 0x8 | this[bs1 + 0x1];
        }
        ,
        bsc['prototype']['readUInt32LE'] = function(bs1, bs2) {
            return bs2 || bvT(bs1, 0x4, this['length']),
            (this[bs1] | this[bs1 + 0x1] << 0x8 | this[bs1 + 0x2] << 0x10) + 0x1000000 * this[bs1 + 0x3];
        }
        ,
        bsc['prototype']['readUInt32BE'] = function(bs1, bs2) {
            return bs2 || bvT(bs1, 0x4, this['length']),
            0x1000000 * this[bs1] + (this[bs1 + 0x1] << 0x10 | this[bs1 + 0x2] << 0x8 | this[bs1 + 0x3]);
        }
        ,
        bsc['prototype']['readIntLE'] = function(bs1, bs2, bs3) {
            bs1 |= 0x0,
            bs2 |= 0x0,
            bs3 || bvT(bs1, bs2, this['length']);
            for (var bs5 = this[bs1], bs6 = 0x1, bs7 = 0x0; ++bs7 < bs2 && (bs6 *= 0x100); )
                bs5 += this[bs1 + bs7] * bs6;
            return bs5 >= (bs6 *= 0x80) && (bs5 -= Math['pow'](0x2, 0x8 * bs2)),
            bs5;
        }
        ,
        bsc['prototype']['readIntBE'] = function(bs1, bs2, bs3) {
            bs1 |= 0x0,
            bs2 |= 0x0,
            bs3 || bvT(bs1, bs2, this['length']);
            for (var bs5 = bs2, bs6 = 0x1, bs7 = this[bs1 + --bs5]; 0x0 < bs5 && (bs6 *= 0x100); )
                bs7 += this[bs1 + --bs5] * bs6;
            return bs7 >= (bs6 *= 0x80) && (bs7 -= Math['pow'](0x2, 0x8 * bs2)),
            bs7;
        }
        ,
        bsc['prototype']['readInt8'] = function(bs1, bs2) {
            return bs2 || bvT(bs1, 0x1, this['length']),
            0x80 & this[bs1] ? -0x1 * (0xff - this[bs1] + 0x1) : this[bs1];
        }
        ,
        bsc['prototype']['readInt16LE'] = function(bs1, bs2) {
            bs2 || bvT(bs1, 0x2, this['length']);
            var bs3 = this[bs1] | this[bs1 + 0x1] << 0x8;
            return 0x8000 & bs3 ? 0xffff0000 | bs3 : bs3;
        }
        ,
        bsc['prototype']['readInt16BE'] = function(bs1, bs2) {
            bs2 || bvT(bs1, 0x2, this['length']);
            var bs3 = this[bs1 + 0x1] | this[bs1] << 0x8;
            return 0x8000 & bs3 ? 0xffff0000 | bs3 : bs3;
        }
        ,
        bsc['prototype']['readInt32LE'] = function(bs1, bs2) {
            return bs2 || bvT(bs1, 0x4, this['length']),
            this[bs1] | this[bs1 + 0x1] << 0x8 | this[bs1 + 0x2] << 0x10 | this[bs1 + 0x3] << 0x18;
        }
        ,
        bsc['prototype']['readInt32BE'] = function(bs1, bs2) {
            return bs2 || bvT(bs1, 0x4, this['length']),
            this[bs1] << 0x18 | this[bs1 + 0x1] << 0x10 | this[bs1 + 0x2] << 0x8 | this[bs1 + 0x3];
        }
        ,
        bsc['prototype']['readFloatLE'] = function(bs1, bs2) {
            return bs2 || bvT(bs1, 0x4, this['length']),
            bs6['read'](this, bs1, !0x0, 0x17, 0x4);
        }
        ,
        bsc['prototype']['readFloatBE'] = function(bs1, bs2) {
            return bs2 || bvT(bs1, 0x4, this['length']),
            bs6['read'](this, bs1, !0x1, 0x17, 0x4);
        }
        ,
        bsc['prototype']['readDoubleLE'] = function(bs1, bs2) {
            return bs2 || bvT(bs1, 0x8, this['length']),
            bs6['read'](this, bs1, !0x0, 0x34, 0x8);
        }
        ,
        bsc['prototype']['readDoubleBE'] = function(bs1, bs2) {
            return bs2 || bvT(bs1, 0x8, this['length']),
            bs6['read'](this, bs1, !0x1, 0x34, 0x8);
        }
        ,
        bsc['prototype']['writeUIntLE'] = function(bs1, bs2, bs3, bs5) {
            (bs1 = +bs1,
            bs2 |= 0x0,
            bs3 |= 0x0,
            bs5) || bvX(this, bs1, bs2, bs3, Math['pow'](0x2, 0x8 * bs3) - 0x1, 0x0);
            var bs6 = 0x1
              , bs7 = 0x0;
            for (this[bs2] = 0xff & bs1; ++bs7 < bs3 && (bs6 *= 0x100); )
                this[bs2 + bs7] = 0xff & bs1 / bs6;
            return bs2 + bs3;
        }
        ,
        bsc['prototype']['writeUIntBE'] = function(bs1, bs2, bs3, bs5) {
            (bs1 = +bs1,
            bs2 |= 0x0,
            bs3 |= 0x0,
            bs5) || bvX(this, bs1, bs2, bs3, Math['pow'](0x2, 0x8 * bs3) - 0x1, 0x0);
            var bs6 = bs3 - 0x1
              , bs7 = 0x1;
            for (this[bs2 + bs6] = 0xff & bs1; 0x0 <= --bs6 && (bs7 *= 0x100); )
                this[bs2 + bs6] = 0xff & bs1 / bs7;
            return bs2 + bs3;
        }
        ,
        bsc['prototype']['writeUInt8'] = function(bs1, bs2, bs3) {
            return bs1 = +bs1,
            bs2 |= 0x0,
            bs3 || bvX(this, bs1, bs2, 0x1, 0xff, 0x0),
            bsc['TYPED_ARRAY_SUPPORT'] || (bs1 = Math['floor'](bs1)),
            this[bs2] = 0xff & bs1,
            bs2 + 0x1;
        }
        ,
        bsc['prototype']['writeUInt16LE'] = function(bs1, bs2, bs3) {
            return bs1 = +bs1,
            bs2 |= 0x0,
            bs3 || bvX(this, bs1, bs2, 0x2, 0xffff, 0x0),
            bsc['TYPED_ARRAY_SUPPORT'] ? (this[bs2] = 0xff & bs1,
            this[bs2 + 0x1] = bs1 >>> 0x8) : bw4(this, bs1, bs2, !0x0),
            bs2 + 0x2;
        }
        ,
        bsc['prototype']['writeUInt16BE'] = function(bs1, bs2, bs3) {
            return bs1 = +bs1,
            bs2 |= 0x0,
            bs3 || bvX(this, bs1, bs2, 0x2, 0xffff, 0x0),
            bsc['TYPED_ARRAY_SUPPORT'] ? (this[bs2] = bs1 >>> 0x8,
            this[bs2 + 0x1] = 0xff & bs1) : bw4(this, bs1, bs2, !0x1),
            bs2 + 0x2;
        }
        ,
        bsc['prototype']['writeUInt32LE'] = function(bs1, bs2, bs3) {
            return bs1 = +bs1,
            bs2 |= 0x0,
            bs3 || bvX(this, bs1, bs2, 0x4, 0xffffffff, 0x0),
            bsc['TYPED_ARRAY_SUPPORT'] ? (this[bs2 + 0x3] = bs1 >>> 0x18,
            this[bs2 + 0x2] = bs1 >>> 0x10,
            this[bs2 + 0x1] = bs1 >>> 0x8,
            this[bs2] = 0xff & bs1) : bwb(this, bs1, bs2, !0x0),
            bs2 + 0x4;
        }
        ,
        bsc['prototype']['writeUInt32BE'] = function(bs1, bs2, bs3) {
            return bs1 = +bs1,
            bs2 |= 0x0,
            bs3 || bvX(this, bs1, bs2, 0x4, 0xffffffff, 0x0),
            bsc['TYPED_ARRAY_SUPPORT'] ? (this[bs2] = bs1 >>> 0x18,
            this[bs2 + 0x1] = bs1 >>> 0x10,
            this[bs2 + 0x2] = bs1 >>> 0x8,
            this[bs2 + 0x3] = 0xff & bs1) : bwb(this, bs1, bs2, !0x1),
            bs2 + 0x4;
        }
        ,
        bsc['prototype']['writeIntLE'] = function(bs1, bs2, bs3, bs5) {
            if (bs1 = +bs1,
            bs2 |= 0x0,
            !bs5) {
                var bs6 = Math['pow'](0x2, 0x8 * bs3 - 0x1);
                bvX(this, bs1, bs2, bs3, bs6 - 0x1, -bs6);
            }
            var bs7 = 0x0
              , bs8 = 0x1
              , bs9 = 0x0;
            for (this[bs2] = 0xff & bs1; ++bs7 < bs3 && (bs8 *= 0x100); )
                0x0 > bs1 && 0x0 === bs9 && 0x0 !== this[bs2 + bs7 - 0x1] && (bs9 = 0x1),
                this[bs2 + bs7] = 0xff & (bs1 / bs8 >> 0x0) - bs9;
            return bs2 + bs3;
        }
        ,
        bsc['prototype']['writeIntBE'] = function(bs1, bs2, bs3, bs5) {
            if (bs1 = +bs1,
            bs2 |= 0x0,
            !bs5) {
                var bs6 = Math['pow'](0x2, 0x8 * bs3 - 0x1);
                bvX(this, bs1, bs2, bs3, bs6 - 0x1, -bs6);
            }
            var bs7 = bs3 - 0x1
              , bs8 = 0x1
              , bs9 = 0x0;
            for (this[bs2 + bs7] = 0xff & bs1; 0x0 <= --bs7 && (bs8 *= 0x100); )
                0x0 > bs1 && 0x0 === bs9 && 0x0 !== this[bs2 + bs7 + 0x1] && (bs9 = 0x1),
                this[bs2 + bs7] = 0xff & (bs1 / bs8 >> 0x0) - bs9;
            return bs2 + bs3;
        }
        ,
        bsc['prototype']['writeInt8'] = function(bs1, bs2, bs3) {
            return bs1 = +bs1,
            bs2 |= 0x0,
            bs3 || bvX(this, bs1, bs2, 0x1, 0x7f, -0x80),
            bsc['TYPED_ARRAY_SUPPORT'] || (bs1 = Math['floor'](bs1)),
            0x0 > bs1 && (bs1 = 0xff + bs1 + 0x1),
            this[bs2] = 0xff & bs1,
            bs2 + 0x1;
        }
        ,
        bsc['prototype']['writeInt16LE'] = function(bs1, bs2, bs3) {
            return bs1 = +bs1,
            bs2 |= 0x0,
            bs3 || bvX(this, bs1, bs2, 0x2, 0x7fff, -0x8000),
            bsc['TYPED_ARRAY_SUPPORT'] ? (this[bs2] = 0xff & bs1,
            this[bs2 + 0x1] = bs1 >>> 0x8) : bw4(this, bs1, bs2, !0x0),
            bs2 + 0x2;
        }
        ,
        bsc['prototype']['writeInt16BE'] = function(bs1, bs2, bs3) {
            return bs1 = +bs1,
            bs2 |= 0x0,
            bs3 || bvX(this, bs1, bs2, 0x2, 0x7fff, -0x8000),
            bsc['TYPED_ARRAY_SUPPORT'] ? (this[bs2] = bs1 >>> 0x8,
            this[bs2 + 0x1] = 0xff & bs1) : bw4(this, bs1, bs2, !0x1),
            bs2 + 0x2;
        }
        ,
        bsc['prototype']['writeInt32LE'] = function(bs1, bs2, bs3) {
            return bs1 = +bs1,
            bs2 |= 0x0,
            bs3 || bvX(this, bs1, bs2, 0x4, 0x7fffffff, -0x80000000),
            bsc['TYPED_ARRAY_SUPPORT'] ? (this[bs2] = 0xff & bs1,
            this[bs2 + 0x1] = bs1 >>> 0x8,
            this[bs2 + 0x2] = bs1 >>> 0x10,
            this[bs2 + 0x3] = bs1 >>> 0x18) : bwb(this, bs1, bs2, !0x0),
            bs2 + 0x4;
        }
        ,
        bsc['prototype']['writeInt32BE'] = function(bs1, bs2, bs3) {
            return bs1 = +bs1,
            bs2 |= 0x0,
            bs3 || bvX(this, bs1, bs2, 0x4, 0x7fffffff, -0x80000000),
            0x0 > bs1 && (bs1 = 0xffffffff + bs1 + 0x1),
            bsc['TYPED_ARRAY_SUPPORT'] ? (this[bs2] = bs1 >>> 0x18,
            this[bs2 + 0x1] = bs1 >>> 0x10,
            this[bs2 + 0x2] = bs1 >>> 0x8,
            this[bs2 + 0x3] = 0xff & bs1) : bwb(this, bs1, bs2, !0x1),
            bs2 + 0x4;
        }
        ,
        bsc['prototype']['writeFloatLE'] = function(bs1, bs2, bs3) {
            return bwn(this, bs1, bs2, !0x0, bs3);
        }
        ,
        bsc['prototype']['writeFloatBE'] = function(bs1, bs2, bs3) {
            return bwn(this, bs1, bs2, !0x1, bs3);
        }
        ,
        bsc['prototype']['writeDoubleLE'] = function(bs1, bs2, bs3) {
            return bwt(this, bs1, bs2, !0x0, bs3);
        }
        ,
        bsc['prototype']['writeDoubleBE'] = function(bs1, bs2, bs3) {
            return bwt(this, bs1, bs2, !0x1, bs3);
        }
        ,
        bsc['prototype']['copy'] = function(bs1, bs2, bs3, bs5) {
            if (bs3 || (bs3 = 0x0),
            bs5 || 0x0 === bs5 || (bs5 = this['length']),
            bs2 >= bs1['length'] && (bs2 = bs1['length']),
            bs2 || (bs2 = 0x0),
            0x0 < bs5 && bs5 < bs3 && (bs5 = bs3),
            bs5 === bs3)
                return 0x0;
            if (0x0 === bs1['length'] || 0x0 === this['length'])
                return 0x0;
            if (0x0 > bs2)
                throw new RangeError('targetStart\x20out\x20of\x20bounds');
            if (0x0 > bs3 || bs3 >= this['length'])
                throw new RangeError('sourceStart\x20out\x20of\x20bounds');
            if (0x0 > bs5)
                throw new RangeError('sourceEnd\x20out\x20of\x20bounds');
            bs5 > this['length'] && (bs5 = this['length']),
            bs1['length'] - bs2 < bs5 - bs3 && (bs5 = bs1['length'] - bs2 + bs3);
            var bs6, bs7 = bs5 - bs3;
            if (this === bs1 && bs3 < bs2 && bs2 < bs5)
                for (bs6 = bs7 - 0x1; 0x0 <= bs6; --bs6)
                    bs1[bs6 + bs2] = this[bs6 + bs3];
            else if (0x3e8 > bs7 || !bsc['TYPED_ARRAY_SUPPORT'])
                for (bs6 = 0x0; bs6 < bs7; ++bs6)
                    bs1[bs6 + bs2] = this[bs6 + bs3];
            else
                Uint8Array['prototype']['set']['call'](bs1, this['subarray'](bs3, bs3 + bs7), bs2);
            return bs7;
        }
        ,
        bsc['prototype']['fill'] = function(bs1, bs2, bs3, bs5) {
            if ('string' == typeof bs1) {
                if ('string' == typeof bs2 ? (bs5 = bs2,
                bs2 = 0x0,
                bs3 = this['length']) : 'string' == typeof bs3 && (bs5 = bs3,
                bs3 = this['length']),
                0x1 === bs1['length']) {
                    var bs6 = bs1['charCodeAt'](0x0);
                    0x100 > bs6 && (bs1 = bs6);
                }
                if (void 0x0 !== bs5 && 'string' != typeof bs5)
                    throw new TypeError('encoding\x20must\x20be\x20a\x20string');
                if ('string' == typeof bs5 && !bsc['isEncoding'](bs5))
                    throw new TypeError('Unknown\x20encoding:\x20' + bs5);
            } else
                'number' == typeof bs1 && (bs1 &= 0xff);
            if (0x0 > bs2 || this['length'] < bs2 || this['length'] < bs3)
                throw new RangeError('Out\x20of\x20range\x20index');
            if (bs3 <= bs2)
                return this;
            var bs7;
            if (bs2 >>>= 0x0,
            bs3 = void 0x0 === bs3 ? this['length'] : bs3 >>> 0x0,
            bs1 || (bs1 = 0x0),
            'number' == typeof bs1)
                for (bs7 = bs2; bs7 < bs3; ++bs7)
                    this[bs7] = bs1;
            else {
                var bs8 = bsc['isBuffer'](bs1) ? bs1 : byV(new bsc(bs1,bs5)['toString']())
                  , bs9 = bs8['length'];
                for (bs7 = 0x0; bs7 < bs3 - bs2; ++bs7)
                    this[bs7 + bs2] = bs8[bs7 % bs9];
            }
            return this;
        }
        ;
        var byS = /[^+\/0-9A-Za-z-_]/g;
        function byT(bs1) {
            return 0x10 > bs1 ? '0' + bs1['toString'](0x10) : bs1['toString'](0x10);
        }
        function byV(bs1, bs2) {
            bs2 = bs2 || 0x1 / 0x0;
            for (var bs3, bs5 = bs1['length'], bs6 = null, bs7 = [], bs8 = 0x0; bs8 < bs5; ++bs8) {
                if (0xd7ff < (bs3 = bs1['charCodeAt'](bs8)) && 0xe000 > bs3) {
                    if (!bs6) {
                        if (0xdbff < bs3) {
                            -0x1 < (bs2 -= 0x3) && bs7['push'](0xef, 0xbf, 0xbd);
                            continue;
                        }
                        if (bs8 + 0x1 === bs5) {
                            -0x1 < (bs2 -= 0x3) && bs7['push'](0xef, 0xbf, 0xbd);
                            continue;
                        }
                        bs6 = bs3;
                        continue;
                    }
                    if (0xdc00 > bs3) {
                        -0x1 < (bs2 -= 0x3) && bs7['push'](0xef, 0xbf, 0xbd),
                        bs6 = bs3;
                        continue;
                    }
                    bs3 = 0x10000 + (bs6 - 0xd800 << 0xa | bs3 - 0xdc00);
                } else
                    bs6 && -0x1 < (bs2 -= 0x3) && bs7['push'](0xef, 0xbf, 0xbd);
                if (bs6 = null,
                0x80 > bs3) {
                    if (0x0 > (bs2 -= 0x1))
                        break;
                    bs7['push'](bs3);
                } else if (0x800 > bs3) {
                    if (0x0 > (bs2 -= 0x2))
                        break;
                    bs7['push'](0xc0 | bs3 >> 0x6, 0x80 | 0x3f & bs3);
                } else if (0x10000 > bs3) {
                    if (0x0 > (bs2 -= 0x3))
                        break;
                    bs7['push'](0xe0 | bs3 >> 0xc, 0x80 | 0x3f & bs3 >> 0x6, 0x80 | 0x3f & bs3);
                } else {
                    if (!(0x110000 > bs3))
                        throw new Error('Invalid\x20code\x20point');
                    if (0x0 > (bs2 -= 0x4))
                        break;
                    bs7['push'](0xf0 | bs3 >> 0x12, 0x80 | 0x3f & bs3 >> 0xc, 0x80 | 0x3f & bs3 >> 0x6, 0x80 | 0x3f & bs3);
                }
            }
            return bs7;
        }
        function bz3(bs1) {
            return bs5['toByteArray'](function(bs1) {
                if (0x2 > (bs1 = function(bs1) {
                    return bs1['trim'] ? bs1['trim']() : bs1['replace'](/^\s+|\s+$/g, '');
                }(bs1)['replace'](byS, ''))['length'])
                    return '';
                for (; 0x0 != bs1['length'] % 0x4; )
                    bs1 += '=';
                return bs1;
            }(bs1));
        }
        function bz7(bs1, bs2, bs3, bs5) {
            for (var bs6 = 0x0; bs6 < bs5 && !(bs6 + bs3 >= bs2['length'] || bs6 >= bs1['length']); ++bs6)
                bs2[bs6 + bs3] = bs1[bs6];
            return bs6;
        }
    }
    ['call'](this, bs3(0x15)));
}
, function(bzd, bze) {
    for (var bzf = bze['uint8'] = Array(0x100), bzg = 0x0; 0xff >= bzg; bzg++)
        bzf[bzg] = bzh(bzg);
    function bzh(bzd) {
        return function(bze) {
            var bzf = bze['reserve'](0x1);
            bze['buffer'][bzf] = bzd;
        }
        ;
    }
}
, function(bzl, bzm, bzn) {
    bzm['FlexDecoder'] = bzs,
    bzm['FlexEncoder'] = bzt;
    var bzo = bzn(0x3)
      , bzp = 0x800
      , bzq = 0x10000
      , bzr = 'BUFFER_SHORTAGE';
    function bzs() {
        if (!(this instanceof bzs))
            return new bzs();
    }
    function bzt() {
        if (!(this instanceof bzt))
            return new bzt();
    }
    function bzu() {
        throw new Error('method\x20not\x20implemented:\x20write()');
    }
    function bzv() {
        throw new Error('method\x20not\x20implemented:\x20fetch()');
    }
    function bzw() {
        return this['buffers'] && this['buffers']['length'] ? (this['flush'](),
        this['pull']()) : this['fetch']();
    }
    function bzx(bzl) {
        (this['buffers'] || (this['buffers'] = []))['push'](bzl);
    }
    function bzz() {
        return (this['buffers'] || (this['buffers'] = []))['shift']();
    }
    function bzA(bzl) {
        return function(bzm) {
            for (var bzn in bzl)
                bzm[bzn] = bzl[bzn];
            return bzm;
        }
        ;
    }
    bzs['mixin'] = bzA({
        'bufferish': bzo,
        'write': function(bzl) {
            var bzm = this['offset'] ? bzo['prototype']['slice']['call'](this['buffer'], this['offset']) : this['buffer'];
            this['buffer'] = bzm ? bzl ? this['bufferish']['concat']([bzm, bzl]) : bzm : bzl,
            this['offset'] = 0x0;
        },
        'fetch': bzv,
        'flush': function() {
            for (; this['offset'] < this['buffer']['length']; ) {
                var bzl, bzm = this['offset'];
                try {
                    bzl = this['fetch']();
                } catch (bzI) {
                    if (bzI && bzI['message'] != bzr)
                        throw bzI;
                    this['offset'] = bzm;
                    break;
                }
                this['push'](bzl);
            }
        },
        'push': bzx,
        'pull': bzz,
        'read': bzw,
        'reserve': function(bzl) {
            var bzm = this['offset']
              , bzn = bzm + bzl;
            if (bzn > this['buffer']['length'])
                throw new Error(bzr);
            return this['offset'] = bzn,
            bzm;
        },
        'offset': 0x0
    }),
    bzs['mixin'](bzs['prototype']),
    bzt['mixin'] = bzA({
        'bufferish': bzo,
        'write': bzu,
        'fetch': function() {
            var bzl = this['start'];
            if (bzl < this['offset']) {
                var bzm = this['start'] = this['offset'];
                return bzo['prototype']['slice']['call'](this['buffer'], bzl, bzm);
            }
        },
        'flush': function() {
            for (; this['start'] < this['offset']; ) {
                var bzl = this['fetch']();
                bzl && this['push'](bzl);
            }
        },
        'push': bzx,
        'pull': function() {
            var bzl = this['buffers'] || (this['buffers'] = [])
              , bzm = 0x1 < bzl['length'] ? this['bufferish']['concat'](bzl) : bzl[0x0];
            return bzl['length'] = 0x0,
            bzm;
        },
        'read': bzw,
        'reserve': function(bzl) {
            var bzm = 0x0 | bzl;
            if (this['buffer']) {
                var bzn = this['buffer']['length']
                  , bzo = 0x0 | this['offset']
                  , bzp = bzo + bzm;
                if (bzp < bzn)
                    return this['offset'] = bzp,
                    bzo;
                this['flush'](),
                bzl = Math['max'](bzl, Math['min'](0x2 * bzn, this['maxBufferSize']));
            }
            return bzl = Math['max'](bzl, this['minBufferSize']),
            this['buffer'] = this['bufferish']['alloc'](bzl),
            this['start'] = 0x0,
            this['offset'] = bzm,
            0x0;
        },
        'send': function(bzl) {
            var bzm = bzl['length'];
            if (bzm > this['minBufferSize'])
                this['flush'](),
                this['push'](bzl);
            else {
                var bzn = this['reserve'](bzm);
                bzo['prototype']['copy']['call'](bzl, this['buffer'], bzn);
            }
        },
        'maxBufferSize': bzq,
        'minBufferSize': bzp,
        'offset': 0x0,
        'start': 0x0
    }),
    bzt['mixin'](bzt['prototype']);
}
, function(bzZ, bA0, bA1) {
    bA0['decode'] = function(bzZ, bA0) {
        var bA1 = new bA5(bA0);
        return bA1['write'](bzZ),
        bA1['read']();
    }
    ;
    var bA5 = bA1(0x1f)['DecodeBuffer'];
}
, function(bA6, bA7, bA8) {
    bA7['DecodeBuffer'] = bAa;
    var bA9 = bA8(0x14)['preset'];
    function bAa(bA6) {
        if (!(this instanceof bAa))
            return new bAa(bA6);
        if (bA6 && (this['options'] = bA6,
        bA6['codec'])) {
            var bA7 = this['codec'] = bA6['codec'];
            bA7['bufferish'] && (this['bufferish'] = bA7['bufferish']);
        }
    }
    bA8(0x1d)['FlexDecoder']['mixin'](bAa['prototype']),
    bAa['prototype']['codec'] = bA9,
    bAa['prototype']['fetch'] = function() {
        return this['codec']['decode'](this);
    }
    ;
}
, function(bAd, bAe, bAf) {
    var bAg = bAf(0x11)
      , bAh = bAf(0x13)
      , bAi = bAh['Uint64BE']
      , bAj = bAh['Int64BE'];
    bAe['getReadFormat'] = function(bAd) {
        var bAe = bAn['hasArrayBuffer'] && bAd && bAd['binarraybuffer']
          , bAf = bAd && bAd['int64'];
        return {
            'map': bAp && bAd && bAd['usemap'] ? bAz : bAr,
            'array': bAH,
            'str': bAN,
            'bin': bAe ? bAW : bAR,
            'ext': bB1,
            'uint8': bB8,
            'uint16': bBf,
            'uint32': bBo,
            'uint64': bBw(0x8, bAf ? bBF : bBB),
            'int8': bBb,
            'int16': bBj,
            'int32': bBs,
            'int64': bBw(0x8, bAf ? bBH : bBD),
            'float32': bBw(0x4, bBJ),
            'float64': bBw(0x8, bBL)
        };
    }
    ,
    bAe['readUint8'] = bB8;
    var bAn = bAf(0x3)
      , bAo = bAf(0x12)
      , bAp = 'undefined' != typeof Map
      , bAq = !0x0;
    function bAr(bAd, bAe) {
        var bAf, bAg = {}, bAh = Array(bAe), bAi = Array(bAe), bAj = bAd['codec']['decode'];
        for (bAf = 0x0; bAf < bAe; bAf++)
            bAh[bAf] = bAj(bAd),
            bAi[bAf] = bAj(bAd);
        for (bAf = 0x0; bAf < bAe; bAf++)
            bAg[bAh[bAf]] = bAi[bAf];
        return bAg;
    }
    function bAz(bAd, bAe) {
        var bAf, bAg = new Map(), bAh = Array(bAe), bAi = Array(bAe), bAj = bAd['codec']['decode'];
        for (bAf = 0x0; bAf < bAe; bAf++)
            bAh[bAf] = bAj(bAd),
            bAi[bAf] = bAj(bAd);
        for (bAf = 0x0; bAf < bAe; bAf++)
            bAg['set'](bAh[bAf], bAi[bAf]);
        return bAg;
    }
    function bAH(bAd, bAe) {
        for (var bAf = Array(bAe), bAg = bAd['codec']['decode'], bAh = 0x0; bAh < bAe; bAh++)
            bAf[bAh] = bAg(bAd);
        return bAf;
    }
    function bAN(bAd, bAe) {
        var bAf = bAd['reserve'](bAe);
        return bAo['toString']['call'](bAd['buffer'], 'utf-8', bAf, bAf + bAe);
    }
    function bAR(bAd, bAe) {
        var bAf = bAd['reserve'](bAe)
          , bAg = bAo['slice']['call'](bAd['buffer'], bAf, bAf + bAe);
        return bAn['from'](bAg);
    }
    function bAW(bAd, bAe) {
        var bAf = bAd['reserve'](bAe)
          , bAg = bAo['slice']['call'](bAd['buffer'], bAf, bAf + bAe);
        return bAn['Uint8Array']['from'](bAg)['buffer'];
    }
    function bB1(bAd, bAe) {
        var bAf = bAd['reserve'](bAe + 0x1)
          , bAg = bAd['buffer'][bAf++]
          , bAh = bAf + bAe
          , bAi = bAd['codec']['getExtUnpacker'](bAg);
        if (!bAi)
            throw new Error('Invalid\x20ext\x20type:\x20' + (bAg ? '0x' + bAg['toString'](0x10) : bAg));
        return bAi(bAo['slice']['call'](bAd['buffer'], bAf, bAh));
    }
    function bB8(bAd) {
        var bAe = bAd['reserve'](0x1);
        return bAd['buffer'][bAe];
    }
    function bBb(bAd) {
        var bAe = bAd['reserve'](0x1)
          , bAf = bAd['buffer'][bAe];
        return 0x80 & bAf ? bAf - 0x100 : bAf;
    }
    function bBf(bAd) {
        var bAe = bAd['reserve'](0x2)
          , bAf = bAd['buffer'];
        return bAf[bAe++] << 0x8 | bAf[bAe];
    }
    function bBj(bAd) {
        var bAe = bAd['reserve'](0x2)
          , bAf = bAd['buffer']
          , bAg = bAf[bAe++] << 0x8 | bAf[bAe];
        return 0x8000 & bAg ? bAg - 0x10000 : bAg;
    }
    function bBo(bAd) {
        var bAe = bAd['reserve'](0x4)
          , bAf = bAd['buffer'];
        return 0x1000000 * bAf[bAe++] + (bAf[bAe++] << 0x10) + (bAf[bAe++] << 0x8) + bAf[bAe];
    }
    function bBs(bAd) {
        var bAe = bAd['reserve'](0x4)
          , bAf = bAd['buffer'];
        return bAf[bAe++] << 0x18 | bAf[bAe++] << 0x10 | bAf[bAe++] << 0x8 | bAf[bAe];
    }
    function bBw(bAd, bAe) {
        return function(bAf) {
            var bAg = bAf['reserve'](bAd);
            return bAe['call'](bAf['buffer'], bAg, bAq);
        }
        ;
    }
    function bBB(bAd) {
        return new bAi(this,bAd)['toNumber']();
    }
    function bBD(bAd) {
        return new bAj(this,bAd)['toNumber']();
    }
    function bBF(bAd) {
        return new bAi(this,bAd);
    }
    function bBH(bAd) {
        return new bAj(this,bAd);
    }
    function bBJ(bAd) {
        return bAg['read'](this, bAd, !0x1, 0x17, 0x4);
    }
    function bBL(bAd) {
        return bAg['read'](this, bAd, !0x1, 0x34, 0x8);
    }
}
, function(bBN, bBO, bBP) {
    !function(bBO) {
        function bBP(bBN) {
            for (var bBO in bC5)
                bBN[bBO] = bC5[bBO];
            return bBN;
        }
        function bBU(bBN, bBO) {
            var bBP, bBY = this;
            if (arguments['length']) {
                if (bBO) {
                    if (bBP = bC0(bBY, bBN, !0x0)) {
                        if (!(bBP = bBP['filter'](function(bBN) {
                            return bBN !== bBO && bBN['originalListener'] !== bBO;
                        }))['length'])
                            return bBU['call'](bBY, bBN);
                        bBY['listeners'][bBN] = bBP;
                    }
                } else if ((bBP = bBY['listeners']) && (delete bBP[bBN],
                !Object['keys'](bBP)['length']))
                    return bBU['call'](bBY);
            } else
                delete bBY['listeners'];
            return bBY;
        }
        function bC0(bBN, bBO, bBP) {
            if (!bBP || bBN['listeners']) {
                var bBU = bBN['listeners'] || (bBN['listeners'] = {});
                return bBU[bBO] || (bBU[bBO] = []);
            }
        }
        bBN['exports'] = bBO;
        var bC5 = {
            'on': function(bBN, bBO) {
                return bC0(this, bBN)['push'](bBO),
                this;
            },
            'once': function(bBN, bBO) {
                function bBP() {
                    bBU['call'](bC5, bBN, bBP),
                    bBO['apply'](this, arguments);
                }
                var bC5 = this;
                return bBP['originalListener'] = bBO,
                bC0(bC5, bBN)['push'](bBP),
                bC5;
            },
            'off': bBU,
            'emit': function(bBN, bBO) {
                var bBP = this
                  , bBU = bC0(bBP, bBN, !0x0);
                if (!bBU)
                    return !0x1;
                var bC5 = arguments['length'];
                if (0x1 === bC5)
                    bBU['forEach'](function(bBN) {
                        bBN['call'](bBP);
                    });
                else if (0x2 === bC5)
                    bBU['forEach'](function(bBN) {
                        bBN['call'](bBP, bBO);
                    });
                else {
                    var bCj = Array['prototype']['slice']['call'](arguments, 0x1);
                    bBU['forEach'](function(bBN) {
                        bBN['apply'](bBP, bCj);
                    });
                }
                return !!bBU['length'];
            }
        };
        bBP(bBO['prototype']),
        bBO['mixin'] = bBP;
    }(/**
 * event-lite.js - Light-weight EventEmitter (less than 1KB when gzipped)
 *
 * @copyright Yusuke Kawasaki
 * @license MIT
 * @constructor
 * @see https://github.com/kawanet/event-lite
 * @see http://kawanet.github.io/event-lite/EventLite.html
 * @example
 * var EventLite = require("event-lite");
 *
 * function MyClass() {...}             // your class
 *
 * EventLite.mixin(MyClass.prototype);  // import event methods
 *
 * var obj = new MyClass();
 * obj.on("foo", function() {...});     // add event listener
 * obj.once("bar", function() {...});   // add one-time event listener
 * obj.emit("foo");                     // dispatch event
 * obj.emit("bar");                     // dispatch another event
 * obj.off("foo");                      // remove event listener
 */
    function bBN() {
        if (!(this instanceof bBN))
            return new bBN();
    });
}
, function(bCl, bCm, bCn) {
    var bCo = bCn(0x63)
      , bCp = bCn(0x87)
      , bCq = Object['prototype']['toString'];
    function bCr(bCl) {
        return '[object\x20Array]' === bCq['call'](bCl);
    }
    function bCt(bCl) {
        return null !== bCl && 'object' == typeof bCl;
    }
    function bCv(bCl) {
        return '[object\x20Function]' === bCq['call'](bCl);
    }
    function bCx(bCl, bCm) {
        if (null != bCl)
            if ('object' != typeof bCl && (bCl = [bCl]),
            bCr(bCl))
                for (var bCn = 0x0, bCo = bCl['length']; bCn < bCo; bCn++)
                    bCm['call'](null, bCl[bCn], bCn, bCl);
            else
                for (var bCp in bCl)
                    Object['prototype']['hasOwnProperty']['call'](bCl, bCp) && bCm['call'](null, bCl[bCp], bCp, bCl);
    }
    bCl['exports'] = {
        'isArray': bCr,
        'isArrayBuffer': function(bCl) {
            return '[object\x20ArrayBuffer]' === bCq['call'](bCl);
        },
        'isBuffer': bCp,
        'isFormData': function(bCl) {
            return 'undefined' != typeof FormData && bCl instanceof FormData;
        },
        'isArrayBufferView': function(bCl) {
            return 'undefined' != typeof ArrayBuffer && ArrayBuffer['isView'] ? ArrayBuffer['isView'](bCl) : bCl && bCl['buffer'] && bCl['buffer']instanceof ArrayBuffer;
        },
        'isString': function(bCl) {
            return 'string' == typeof bCl;
        },
        'isNumber': function(bCl) {
            return 'number' == typeof bCl;
        },
        'isObject': bCt,
        'isUndefined': function(bCl) {
            return void 0x0 === bCl;
        },
        'isDate': function(bCl) {
            return '[object\x20Date]' === bCq['call'](bCl);
        },
        'isFile': function(bCl) {
            return '[object\x20File]' === bCq['call'](bCl);
        },
        'isBlob': function(bCl) {
            return '[object\x20Blob]' === bCq['call'](bCl);
        },
        'isFunction': bCv,
        'isStream': function(bCl) {
            return bCt(bCl) && bCv(bCl['pipe']);
        },
        'isURLSearchParams': function(bCl) {
            return 'undefined' != typeof URLSearchParams && bCl instanceof URLSearchParams;
        },
        'isStandardBrowserEnv': function() {
            return ('undefined' == typeof navigator || 'ReactNative' !== navigator['product'] && 'NativeScript' !== navigator['product'] && 'NS' !== navigator['product']) && 'undefined' != typeof window && 'undefined' != typeof document;
        },
        'forEach': bCx,
        'merge': function bCl() {
            function bCm(bCm, bCo) {
                bCn[bCo] = 'object' == typeof bCn[bCo] && 'object' == typeof bCm ? bCl(bCn[bCo], bCm) : bCm;
            }
            for (var bCn = {}, bCo = 0x0, bCp = arguments['length']; bCo < bCp; bCo++)
                bCx(arguments[bCo], bCm);
            return bCn;
        },
        'deepMerge': function bCl() {
            function bCm(bCm, bCo) {
                bCn[bCo] = 'object' == typeof bCn[bCo] && 'object' == typeof bCm ? bCl(bCn[bCo], bCm) : 'object' == typeof bCm ? bCl({}, bCm) : bCm;
            }
            for (var bCn = {}, bCo = 0x0, bCp = arguments['length']; bCo < bCp; bCo++)
                bCx(arguments[bCo], bCm);
            return bCn;
        },
        'extend': function(bCl, bCm, bCn) {
            return bCx(bCm, function(bCm, bCp) {
                bCl[bCp] = bCn && 'function' == typeof bCm ? bCo(bCm, bCn) : bCm;
            }),
            bCl;
        },
        'trim': function(bCl) {
            return bCl['replace'](/^\s*/, '')['replace'](/\s*$/, '');
        }
    };
}
, function(bD6) {
    bD6['exports'] = '2nVij';
}
, function(bD7, bD8, bD9) {
    var bDa = bD9(0x5d)
      , bDb = bD9(0x72)
      , bDc = Object['prototype']['toString'];
    function bDd(bD7) {
        return '[object\x20Array]' === bDc['call'](bD7);
    }
    function bDf(bD7) {
        return null !== bD7 && 'object' == typeof bD7;
    }
    function bDh(bD7) {
        return '[object\x20Function]' === bDc['call'](bD7);
    }
    function bDj(bD7, bD8) {
        if (null != bD7)
            if ('object' != typeof bD7 && (bD7 = [bD7]),
            bDd(bD7))
                for (var bD9 = 0x0, bDa = bD7['length']; bD9 < bDa; bD9++)
                    bD8['call'](null, bD7[bD9], bD9, bD7);
            else
                for (var bDb in bD7)
                    Object['prototype']['hasOwnProperty']['call'](bD7, bDb) && bD8['call'](null, bD7[bDb], bDb, bD7);
    }
    bD7['exports'] = {
        'isArray': bDd,
        'isArrayBuffer': function(bD7) {
            return '[object\x20ArrayBuffer]' === bDc['call'](bD7);
        },
        'isBuffer': bDb,
        'isFormData': function(bD7) {
            return 'undefined' != typeof FormData && bD7 instanceof FormData;
        },
        'isArrayBufferView': function(bD7) {
            return 'undefined' != typeof ArrayBuffer && ArrayBuffer['isView'] ? ArrayBuffer['isView'](bD7) : bD7 && bD7['buffer'] && bD7['buffer']instanceof ArrayBuffer;
        },
        'isString': function(bD7) {
            return 'string' == typeof bD7;
        },
        'isNumber': function(bD7) {
            return 'number' == typeof bD7;
        },
        'isObject': bDf,
        'isUndefined': function(bD7) {
            return void 0x0 === bD7;
        },
        'isDate': function(bD7) {
            return '[object\x20Date]' === bDc['call'](bD7);
        },
        'isFile': function(bD7) {
            return '[object\x20File]' === bDc['call'](bD7);
        },
        'isBlob': function(bD7) {
            return '[object\x20Blob]' === bDc['call'](bD7);
        },
        'isFunction': bDh,
        'isStream': function(bD7) {
            return bDf(bD7) && bDh(bD7['pipe']);
        },
        'isURLSearchParams': function(bD7) {
            return 'undefined' != typeof URLSearchParams && bD7 instanceof URLSearchParams;
        },
        'isStandardBrowserEnv': function() {
            return ('undefined' == typeof navigator || 'ReactNative' !== navigator['product']) && 'undefined' != typeof window && 'undefined' != typeof document;
        },
        'forEach': bDj,
        'merge': function bD7() {
            function bD8(bD8, bDa) {
                bD9[bDa] = 'object' == typeof bD9[bDa] && 'object' == typeof bD8 ? bD7(bD9[bDa], bD8) : bD8;
            }
            for (var bD9 = {}, bDa = 0x0, bDb = arguments['length']; bDa < bDb; bDa++)
                bDj(arguments[bDa], bD8);
            return bD9;
        },
        'extend': function(bD7, bD8, bD9) {
            return bDj(bD8, function(bD8, bDb) {
                bD7[bDb] = bD9 && 'function' == typeof bD8 ? bDa(bD8, bD9) : bD8;
            }),
            bD7;
        },
        'trim': function(bD7) {
            return bD7['replace'](/^\s*/, '')['replace'](/\s*$/, '');
        }
    };
}
, function(bDM, bDN, bDO) {
    let bDP = bDO(0x4);
    const bDQ = bDO(0x7)
      , bDR = bDO(0x17)
      , bDS = bDO(0x8)
      , bDT = bDO(0x16);
    let bDU = new bDP['TextureLoader']()
      , bDV = new bDP['LoadingManager']()
      , bDW = new bDP['OBJLoader'](bDV);
    function bDX(bDM, bDN, bDO, bDQ, bDR, bDT=0x0, bDV=0x0, bDX=0x0, bE6=null) {
        return new Promise(bE7=>{
            bDW['load'](bDS['versionifyUrl'](bDN), bDN=>{
                let bDW;
                bDO && (bDW = bDU['load'](bDS['versionifyUrl'](bDO), bDM=>{
                    bDM['wrapS'] = bDP['RepeatWrapping'],
                    bDM['wrapT'] = bDP['RepeatWrapping'],
                    bDM['repeat']['set'](0x1, 0x1),
                    bDM['minFilter'] = bDP['NearestFilter'],
                    bDM['magFilter'] = bDP['NearestFilter'],
                    bDM['needsUpdate'] = !0x0;
                }
                ));
                let bEb = new bDP['StrippedLambertMaterial']({
                    'map': bDW
                })
                  , bEc = new bDP['Geometry']();
                bDN['traverse'](bDM=>{
                    bDM instanceof bDP['Mesh'] && (bDM['geometry']['isBufferGeometry'] ? (bEc['fromBufferGeometry'](bDM['geometry']),
                    bEc['computeFlatVertexNormals'](),
                    bDM['geometry']['fromGeometry'](bEc)) : bDM['geometry']['computeFlatVertexNormals'](),
                    bDM['material'] = bEb);
                }
                ),
                bEb['vertexColors'] = bDP['VertexColors'],
                bEb['color']['set'](bDR || 0xffffff),
                bDN['scale']['setScalar'](bDQ || 0x1),
                bDN['position']['y'] += bDT,
                bDN['rotateX'](bDV || 0x0),
                bDN['rotateY'](bDX || 0x0),
                bE6 ? (bDM[bE6] && (bDM['remove'](bDM[bE6]),
                bDM[bE6] = null),
                bDM[bE6] = bDN,
                bDM['add'](bDM[bE6])) : bDM['add'](bDN),
                bE7(bDN);
            }
            );
        }
        );
    }
    new bDP['BoxBufferGeometry'](0x1,0x1,0x1);
    new bDP['PlaneBufferGeometry'](0x1,0x1)['rotateX'](-Math['PI'] / 0x2);
    new bDP['StrippedLambertMaterial']({
        'color': 0xff00
    }),
    new bDP['StrippedLambertMaterial']({
        'color': 0x555555
    });
    function bEe(bDM, bDN, bDO, bDQ) {
        var bDS = bDR['generateCube']([0x1, 0x1, 0x1, 0x1, 0x1, 0x1], bDM, bDN, bDO, {
            'scale': 0x1,
            'amb': bDQ,
            'useScale': !0x0
        });
        return bDS = new bDP['BufferGeometry']()['fromGeometry'](bDS);
    }
    let bEk = (bDM,bDN,bDO,bDQ,bDS,bDT,bDU,bDV,bDW,bDX)=>{
        (bDU = bDU || {})['premultipliedAlpha'] = !0x0;
        var bEe = new bDP['Mesh'](bDR['generatePlane'](bDT, bDS, bDU, bDN, bDO, bDQ));
        bEe['position']['set'](bDN, bDO, bDQ),
        bEe['rotateY'](bDV || 0x0),
        bEe['rotateX']((bDW || 0x0) - Math['PI'] / 0x2),
        bEe['rotateZ'](bDX || 0x0),
        bEe['scale']['set'](0x2 * bDS, 0x2 * bDT, 0x1),
        bEe['updateMatrix'](),
        bDM['merge'](bEe['geometry'], bEe['matrix']);
    }
      , bEl = (bDM,bDN,bDO,bDQ,bDS,bDT,bDU,bDV,bDW)=>{
        bDW = bDW || {};
        var bDX = new bDP['Mesh'](bDR['generateCube'](bDV, bDS, bDT, bDU, bDW));
        return bDX['position']['set'](bDN, bDO, bDQ),
        bDX['rotation']['set'](bDW['yR'] || 0x0, bDW['xR'] || 0x0, bDW['zR'] || 0x0),
        bDX['scale']['set'](bDS, bDT, bDU),
        bDM instanceof bDP['Geometry'] ? (bDX['updateMatrix'](),
        bDM['merge'](bDX['geometry'], bDX['matrix'])) : bDM['add'](bDX),
        bDX;
    }
    ;
    bDM['exports']['prefabs'] = {
        'CRATE': {
            'editColor': !0x0,
            'dontRound': !0x0,
            'gen': bDM=>bDX(bDM, 'models/crate_0.obj', 'textures/crate_0.png', bDQ['crateScale'], bDM['color']),
            'dummy': !0x1,
            'castShadow': !0x0,
            'receiveShadow': !0x0
        },
        'STACK': {
            'editColor': !0x0,
            'dontRound': !0x0,
            'gen': bDM=>bDX(bDM, 'models/stack_0.obj', 'textures/stack_0.png', bDQ['crateScale'], bDM['color']),
            'dummy': !0x1,
            'castShadow': !0x0,
            'receiveShadow': !0x0
        },
        'BARREL': {
            'editColor': !0x0,
            'dontRound': !0x0,
            'gen': bDM=>bDX(bDM, 'models/barrel_0.obj', 'textures/barrel_0.png', bDQ['barrelScale'], bDM['color']),
            'castShadow': !0x0,
            'receiveShadow': !0x0
        },
        'ACIDBARREL': {
            'editColor': !0x0,
            'dontRound': !0x0,
            'emiss': !0x0,
            'gen': bDM=>bDX(bDM, 'models/acidbarrel_0.obj', 'textures/acidbarrel_0.png', bDQ['acidbarrelScale'], bDM['color']),
            'castShadow': !0x0,
            'receiveShadow': !0x0
        },
        'TREE': {
            'editColor': !0x0,
            'dontRound': !0x0,
            'complex': !0x0,
            'gen': bDM=>bDX(bDM, 'models/tree_0.obj', 'textures/tree_0.png', bDQ['treeScale'], bDM['color']),
            'castShadow': !0x0,
            'receiveShadow': !0x0
        },
        'CONE': {
            'editColor': !0x0,
            'dontRound': !0x0,
            'complex': !0x0,
            'gen': bDM=>bDX(bDM, 'models/cone_0.obj', 'textures/cone_0.png', bDQ['coneScale'], bDM['color']),
            'castShadow': !0x0,
            'receiveShadow': !0x0
        },
        'CONTAINER': {
            'editColor': !0x0,
            'dontRound': !0x0,
            'gen': bDM=>bDX(bDM, 'models/container_0.obj', 'textures/container_0.png', bDQ['containerScale'], bDM['color']),
            'castShadow': !0x0,
            'receiveShadow': !0x0
        },
        'CONTAINERR': {
            'editColor': !0x0,
            'dontRound': !0x0,
            'gen': bDM=>bDX(bDM, 'models/containerr_0.obj', 'textures/containerr_0.png', bDQ['containerScale'], bDM['color']),
            'castShadow': !0x0,
            'receiveShadow': !0x0
        },
        'DOOR': {
            'editColor': !0x0,
            'dontRound': !0x0,
            'gen': bDM=>bDX(bDM, 'models/door_0.obj', 'textures/door_0.png', bDQ['doorScale'], bDM['color']),
            'castShadow': !0x0,
            'receiveShadow': !0x0
        },
        'WINDOW': {
            'editColor': !0x0,
            'dontRound': !0x0,
            'gen': bDM=>bDX(bDM, 'models/window_0.obj', 'textures/window_0.png', bDQ['windowScale'], bDM['color']),
            'castShadow': !0x0,
            'transparent': !0x0,
            'receiveShadow': !0x0
        },
        'GRASS': {
            'editColor': !0x0,
            'complex': !0x0,
            'doubleSide': !0x0,
            'transparent': !0x0,
            'gen': bDM=>bDX(bDM, 'models/grass_0.obj', 'textures/grass_0.png', bDQ['grassScale'], bDM['color']),
            'receiveShadow': !0x0
        },
        'WEAPON_PICKUP': {
            'defaultSize': [bDQ['pickupZoneX'], bDQ['pickupZoneH'], bDQ['pickupZoneZ']],
            'scalable': !0x1,
            'tool': !0x0,
            'scaleWithSize': !0x1,
            'lineCol': 0x36dbff,
            'noTexture': !0x0,
            'texturable': !0x1,
            'opacity': 0.1,
            'genGeo': async(bDM,bDN)=>function(bDM, bDN) {
                let bDO = bDR['generateCube']([0x1, 0x1, 0x1, 0x1, 0x1, 0x1], ...bDM['size'], {
                    'scale': 0x1,
                    'amb': bDN,
                    'useScale': !0x0
                });
                return bDO = new bDP['BufferGeometry']()['fromGeometry'](bDO),
                bDX(bDM, 'models/weapons/' + bDT[bDM['weaponId']]['src'] + '.obj', 'textures/weapons/' + bDT[bDM['weaponId']]['src'] + '.png', bDT[bDM['weaponId']]['scale'], 0xffffff, -0.5, -1.6, 0x0, 'wepMesh'),
                bDO;
            }(bDM, bDN),
            'stepSrc': 'a'
        },
        'VEHICLE': {
            'editColor': !0x0,
            'dontRound': !0x0,
            'complex': !0x0,
            'emiss': !0x0,
            'gen': bDM=>bDX(bDM, 'models/vehicle_0.obj', 'textures/vehicle_0.png', bDQ['vehicleScale'], bDM['color']),
            'castShadow': !0x0,
            'receiveShadow': !0x0
        },
        'LADDER': {
            'defaultSize': [0x2, 0xa, 0x4],
            'scalable': !0x0,
            'scaleWithSize': !0x1,
            'editColor': !0x0,
            'hideBoundingBox': !0x1,
            'texturable': !0x0,
            'genGeo': async bDM=>function(bDM, bDN, bDO, bDR) {
                var bDT = new bDP['Geometry']();
                bDR = bDR * Math['PI'] / 0x2;
                let bDU = {
                    'x': 0x0 + bDQ['ladderScale'] * Math['cos'](bDR),
                    'z': 0x0 + bDQ['ladderScale'] * Math['sin'](bDR),
                    'y': 0x0 - bDN / 0x2
                };
                bEl(bDT, bDU['x'] + bDQ['ladderWidth'] * Math['sin'](bDR), bDU['y'], bDU['z'] + bDQ['ladderWidth'] * Math['cos'](bDR), 0x2 * bDQ['ladderScale'], bDN + 0x2, 0x2 * bDQ['ladderScale'], [0x1, 0x1, 0x1, 0x1, 0x1, 0x1], {
                    'scale': 0.02
                }),
                bEl(bDT, bDU['x'] - bDQ['ladderWidth'] * Math['sin'](bDR), bDU['y'], bDU['z'] - bDQ['ladderWidth'] * Math['cos'](bDR), 0x2 * bDQ['ladderScale'], bDN + 0x2, 0x2 * bDQ['ladderScale'], [0x1, 0x1, 0x1, 0x1, 0x1, 0x1], {
                    'scale': 0.02
                });
                for (var bDV = Math['floor'](bDN / 0x6), bDW = 0x0; bDW < bDV; ++bDW)
                    bEk(bDT, bDU['x'], bDU['y'] + 0x6 * (bDW + 0x1) + bDS['randFloat'](-0x1, 0x1), bDU['z'], bDQ['ladderWidth'], bDQ['ladderScale'], {
                        'scale': 0.02
                    }, -bDR + Math['PI'] / 0x2, Math['PI'] / 0x2, bDS['randFloat'](-0.1, 0.1));
                return bDT;
            }(...bDM['size'], bDM['direction']),
            'customDirection': !0x0,
            'stepSrc': 'a',
            'dummy': !0x1,
            'castShadow': !0x0,
            'receiveShadow': !0x0
        },
        'CUBE': {
            'canTrigger': !0x0,
            'movingTexture': !0x0,
            'defaultSize': [0xa, 0xa, 0xa],
            'hasHealth': !0x0,
            'scalable': !0x0,
            'editAmb': !0x0,
            'scaleWithSize': !0x1,
            'editColor': !0x0,
            'editEmissive': !0x0,
            'editOpac': !0x0,
            'hideBoundingBox': !0x1,
            'editPen': !0x0,
            'texturable': !0x0,
            'genGeo': async(bDM,bDN)=>bEe(...bDM['size'], bDN),
            'stepSrc': 'a',
            'dummy': !0x1,
            'castShadow': !0x0,
            'receiveShadow': !0x0,
            'hasBorder': !0x0
        },
        'RAMP': {
            'defaultSize': [0xa, 0x5, 0xa],
            'movingTexture': !0x0,
            'scalable': !0x0,
            'scaleWithSize': !0x1,
            'hideBoundingBox': !0x1,
            'boostable': !0x0,
            'editColor': !0x0,
            'texturable': !0x0,
            'genGeo': async bDM=>function(bDM, bDN, bDO, bDQ, bDS, bDT, bDU) {
                var bDV = new bDP['Geometry']();
                bDN = 0x0 - bDS / 0x2;
                var bDW = 0x0 != (bDU = bDU * Math['PI'] / 0x2) && bDU != Math['PI'];
                return ((bDM,bDN,bDO,bDQ,bDS,bDT,bDU,bDW,bDX)=>{
                    bDW = bDW || {};
                    var bEe = new bDP['Mesh'](bDR['generatePlane'](0x2 * bDT, bDQ, bDW));
                    bEe['position']['set'](bDM, bDN + bDS / 0x2, bDO),
                    bDT *= 0x2;
                    var bEk = Math['sqrt'](bDS * bDS + bDT * bDT);
                    bEe['scale']['set'](bDQ, bEk, 0x2),
                    bEe['rotateY'](-Math['PI'] / 0x2 - bDU),
                    bEe['rotateX'](Math['asin'](bDS / bEk) - Math['PI'] / 0x2),
                    bEe['rotateZ'](bDX || 0x0),
                    bEe['updateMatrix'](),
                    bDV['merge'](bEe['geometry'], bEe['matrix']);
                }
                )(bDM, bDN, bDO, bDW ? bDQ : bDT, bDS, (bDW ? bDT : bDQ) / 0x2, bDU, {
                    'scale': 0x1
                }),
                bDV;
            }(0x0, 0x0, 0x0, ...bDM['size'], bDM['direction']),
            'shootable': !0x0,
            'customDirection': !0x0,
            'stepSrc': 'a',
            'dummy': !0x1,
            'castShadow': !0x0,
            'receiveShadow': !0x0,
            'doubleSide': !0x0
        },
        'PLANE': {
            'defaultSize': [0x4, 0.01, 0x4],
            'movingTexture': !0x0,
            'dontRound': !0x0,
            'scalable': !0x0,
            'canTerrain': !0x0,
            'edgeNoise': !0x0,
            'scaleWithSize': !0x0,
            'editColor': !0x0,
            'editPen': !0x0,
            'editEmissive': !0x0,
            'editOpac': !0x0,
            'hideBoundingBox': !0x1,
            'texturable': !0x0,
            'genGeo': async bDM=>function(bDM, bDN) {
                let bDO = new bDP['PlaneGeometry'](bDM,bDN);
                return bDO['rotateX'](-Math['PI'] / 0x2),
                bDO;
            }(bDM['size'][0x0], bDM['size'][0x2]),
            'stepSrc': 'a',
            'dummy': !0x1,
            'castShadow': !0x0,
            'receiveShadow': !0x0,
            'doubleSide': !0x0
        },
        'OBJECTIVE': {
            'defaultSize': [0x32, 0x32, 0x32],
            'scalable': !0x0,
            'noTexture': !0x0,
            'opacity': 0.2,
            'lineCol': 0xc800ff,
            'tool': !0x0,
            'genGeo': async(bDM,bDN)=>bEe(...bDM['size'], bDN),
            'stepSrc': 'a'
        },
        'PARTICLES': {
            'defaultSize': [0x14, 0x14, 0x14],
            'hasParticles': !0x0,
            'scalable': !0x0,
            'noTexture': !0x0,
            'opacity': 0.3,
            'lineCol': 0x2effff,
            'tool': !0x0,
            'genGeo': async(bDM,bDN)=>bEe(...bDM['size'], bDN),
            'stepSrc': 'a'
        },
        'BILLBOARD': {
            'defaultSize': [0x28, 0.01, 0xa],
            'lineCol': 0xffff00,
            'dontRound': !0x0,
            'scalable': !0x0,
            'canTerrain': !0x0,
            'scaleWithSize': !0x0,
            'hideBoundingBox': !0x1,
            'genGeo': async bDM=>function(bDM, bDN, bDO, bDQ, bDR, bDS) {
                var bDT = new bDP['Geometry']();
                return bEk(bDT, bDM, bDN, bDO, bDQ / 0x2, bDS / 0x2),
                bDT;
            }(0x0, 0x0, 0x0, ...bDM['size']),
            'stepSrc': 'a',
            'dummy': !0x1,
            'castShadow': !0x0,
            'receiveShadow': !0x0,
            'doubleSide': !0x0
        },
        'SCORE_ZONE': {
            'customScore': !0x0,
            'defaultSize': [0xa, 0xa, 0xa],
            'scalable': !0x0,
            'noTexture': !0x0,
            'opacity': 0.3,
            'lineCol': 0xffff00,
            'tool': !0x0,
            'genGeo': async(bDM,bDN)=>bEe(...bDM['size'], bDN),
            'stepSrc': 'a'
        },
        'DEATH_ZONE': {
            'defaultSize': [0xa, 0xa, 0xa],
            'scalable': !0x0,
            'noTexture': !0x0,
            'opacity': 0.3,
            'lineCol': 0xff0000,
            'tool': !0x0,
            'genGeo': async(bDM,bDN)=>bEe(...bDM['size'], bDN),
            'stepSrc': 'a'
        },
        'SPAWN_POINT': {
            'scalable': !0x1,
            'alwaysSee': !0x0,
            'tool': !0x0,
            'scaleWithSize': !0x1,
            'teamable': !0x0,
            'noTexture': !0x0,
            'opacity': 0.00001,
            'stepSrc': 'a',
            'customDirection': !0x0,
            'dontRound': !0x0,
            'genGeo': async(bDM,bDN)=>function(bDM, bDN) {
                bDX(bDM, 'models/spawn_0.obj', 'textures/spawn_0.png', 0x1, 0xffffff, -5.5, 0x0, -((bDM['direction'] || 0x0) + 0x1) * Math['PI'] / 0x2, 'spwnMesh');
                let bDO = bDR['generateCube']([0x1, 0x1, 0x1, 0x1, 0x1, 0x1], 0x7, 0xb, 0x7, {
                    'scale': 0x1,
                    'amb': bDN,
                    'transparent': !0x0,
                    'useScale': !0x0,
                    'depthWrite': !0x1,
                    'side': 0x2
                });
                return bDO = new bDP['BufferGeometry']()['fromGeometry'](bDO);
            }(bDM, bDN),
            'dummy': !0x1,
            'castShadow': !0x1,
            'receiveShadow': !0x1
        },
        'CHECK_POINT': {
            'defaultSize': [0xa, 0xa, 0xa],
            'scalable': !0x0,
            'noTexture': !0x0,
            'opacity': 0.3,
            'lineCol': 0x3dac5,
            'tool': !0x0,
            'customDirection': !0x0,
            'genGeo': async(bDM,bDN)=>bEe(...bDM['size'], bDN),
            'stepSrc': 'a'
        },
        'TELEPORTER': {
            'hasSignals': !0x0,
            'defaultSize': [0xa, 0xa, 0xa],
            'scalable': !0x0,
            'noTexture': !0x0,
            'opacity': 0.3,
            'lineCol': 0xb1fff0,
            'tool': !0x0,
            'genGeo': async(bDM,bDN)=>bEe(...bDM['size'], bDN),
            'stepSrc': 'a'
        },
        'CAMERA_POSITION': {
            'defaultSize': [0x2, 0x2, 0x2],
            'scalable': !0x1,
            'alwaysSee': !0x0,
            'tool': !0x0,
            'scaleWithSize': !0x1,
            'hideBoundingBox': !0x0,
            'editorGen': bDM=>function(bDM, bDN, bDO) {
                let bDQ = new bDP['TextureLoader']()['load'](bDS['versionifyUrl'](bDN));
                bDQ['magFilter'] = bDP['NearestFilter'];
                let bDR = new bDP['SpriteMaterial']({
                    'map': bDQ,
                    'color': 0xffffff
                })
                  , bDT = new bDP['Sprite'](bDR);
                bDO && bDT['scale']['set'](bDO, bDO, 0x1),
                bDM['add'](bDT);
            }(bDM, 'img/crosshair.png', 0x5),
            'stepSrc': 'a',
            'dummy': !0x1,
            'castShadow': !0x1,
            'receiveShadow': !0x1
        },
        'FLAG': {
            'defaultSize': [bDQ['flagZoneS'], bDQ['flagZoneH'], bDQ['flagZoneS']],
            'scalable': !0x1,
            'tool': !0x0,
            'scaleWithSize': !0x1,
            'lineCol': 0xc800ff,
            'teamable': !0x0,
            'noDefault': !0x0,
            'genGeo': async(bDM,bDN)=>function(bDM, bDN) {
                bDX(bDM, 'models/crystal_0.obj', 'textures/crystal_0.png', bDQ['flagScale'], 0xffffff, bDQ['flagOff'] / 0x2);
                var bDO = bDR['generateCube']([0x1, 0x1, 0x0, 0x0, 0x1, 0x1], ...bDM['size'], {
                    'scale': 0x1,
                    'amb': bDN,
                    'useScale': !0x0,
                    'transparent': !0x0,
                    'depthWrite': !0x1,
                    'side': 0x2
                });
                return bDO = new bDP['BufferGeometry']()['fromGeometry'](bDO);
            }(bDM, bDN),
            'stepSrc': 'a',
            'dummy': !0x1,
            'castShadow': !0x1,
            'receiveShadow': !0x1
        },
        'POINT_GATE': {
            'interact': !0x0,
            'customScore': !0x0,
            'movingTexture': !0x0,
            'defaultSize': [0xa, 0xa, 0xa],
            'scalable': !0x0,
            'forceCollision': !0x0,
            'editAmb': !0x0,
            'scaleWithSize': !0x1,
            'editColor': !0x0,
            'editEmissive': !0x0,
            'editOpac': !0x0,
            'lineCol': 0xff00ff,
            'texturable': !0x0,
            'genGeo': async(bDM,bDN)=>bEe(...bDM['size'], bDN),
            'stepSrc': 'a',
            'dummy': !0x1,
            'castShadow': !0x0,
            'receiveShadow': !0x0,
            'complex': !0x0,
            'hasBorder': !0x0
        },
        'PLACEHOLDER': {
            'defaultSize': [0xa, 0xa, 0xa],
            'scalable': !0x0,
            'noTexture': !0x0,
            'noExport': !0x0,
            'tool': !0x0,
            'opacity': 0.1,
            'lineCol': 0x0,
            'genGeo': async(bDM,bDN)=>bEe(...bDM['size'], bDN),
            'stepSrc': 'a'
        }
    },
    bDM['exports']['texturePrefabs'] = {
        'WALL': {
            'src': 'wall_0',
            'filter': bDP['NearestFilter']
        },
        'DIRT': {
            'src': 'dirt_0',
            'filter': bDP['NearestFilter']
        },
        'FLOOR': {
            'src': 'floor_0',
            'filter': bDP['NearestFilter']
        },
        'GRID': {
            'src': 'grid_0',
            'filter': bDP['NearestFilter']
        },
        'GREY': {
            'src': 'grey_0',
            'filter': bDP['NearestFilter']
        },
        'DEFAULT': {
            'src': 'default',
            'filter': bDP['NearestFilter']
        },
        'ROOF': {
            'src': 'roof_0',
            'filter': bDP['NearestFilter']
        },
        'FLAG': {
            'src': 'flag_0',
            'filter': bDP['NearestFilter']
        },
        'CHECK': {
            'src': 'check_0',
            'filter': bDP['NearestFilter']
        },
        'GRASS': {
            'src': 'grass_1',
            'filter': bDP['NearestFilter']
        },
        'LINES': {
            'src': 'lines_0',
            'filter': bDP['NearestFilter']
        },
        'BRICK': {
            'src': 'brick_0',
            'filter': bDP['NearestFilter']
        },
        'LINK': {
            'src': 'link_0',
            'trans': !0x0,
            'filter': bDP['NearestFilter']
        }
    };
    let bGd = bDM=>({
        'src': bDM,
        'filter': bDP['NearestFilter']
    });
    bDM['exports']['loadTexturePrefab'] = function(bDN, bDO=null) {
        let bDR = 'BILLBOARD' == bDO['objType'] ? bGd('pubs/b_' + (bDO['poster'] || bDS['randInt'](0x1, bDQ['billboardCnt']))) : bDM['exports']['texturePrefabs'][bDN];
        return 'default' == (bDR = 'FLAG' == bDO['objType'] ? bGd('zone_r') : bDR)['src'] ? void 0x0 : bDU['load'](bDS['versionifyUrl']('/textures/' + bDR['src'] + '.png'), bDM=>{
            bDM['wrapS'] = bDP['RepeatWrapping'],
            bDM['wrapT'] = bDP['RepeatWrapping'],
            bDM['minFilter'] = bDR['filter'],
            bDM['magFilter'] = bDR['filter'],
            bDM['needsUpdate'] = !0x0;
        }
        );
    }
    ;
}
, function(bGj, bGk, bGl) {
    bGl['d'](bGk, 'a', function() {
        return bGm;
    });
    var bGm = function() {
        function bGj() {
            this['_hasWeakSet'] = 'function' == typeof WeakSet,
            this['_inner'] = this['_hasWeakSet'] ? new WeakSet() : [];
        }
        return bGj['prototype']['memoize'] = function(bGj) {
            if (this['_hasWeakSet'])
                return !!this['_inner']['has'](bGj) || (this['_inner']['add'](bGj),
                !0x1);
            for (var bGk = 0x0; bGk < this['_inner']['length']; bGk++)
                if (this['_inner'][bGk] === bGj)
                    return !0x0;
            return this['_inner']['push'](bGj),
            !0x1;
        }
        ,
        bGj['prototype']['unmemoize'] = function(bGj) {
            if (this['_hasWeakSet'])
                this['_inner']['delete'](bGj);
            else
                for (var bGk = 0x0; bGk < this['_inner']['length']; bGk++)
                    if (this['_inner'][bGk] === bGj) {
                        this['_inner']['splice'](bGk, 0x1);
                        break;
                    }
        }
        ,
        bGj;
    }();
}
, function(bGs, bGt, bGu) {
    const bGv = bGu(0x7)
      , bGw = bGu(0x3a)
      , bGx = bGu(0x3b)
      , bGy = bGu(0x16);
    var bGz = [{
        'id': 'ffa',
        'name': 'Free\x20for\x20All',
        'alias': 'ffa'
    }, {
        'id': 'tdm',
        'name': 'Team\x20Deathmatch',
        'endStats': ['sid', 'name', 'score', 'kills', 'deaths', 'assists', 'reward'],
        'alias': 'tdm',
        'teams': !0x0
    }, {
        'id': 'point',
        'name': 'Hardpoint',
        'alias': 'point',
        'endStats': ['sid', 'name', 'score', 'kills', 'deaths', 'assists', 'reward'],
        'objective': !0x0,
        'teams': !0x0,
        'gameStart': function(bGs) {
            bGs['activeObjective'] = -0x1,
            bGs['nextObjective']();
        }
    }, {
        'id': 'ctf',
        'name': 'Capture\x20the\x20Flag',
        'alias': 'ctf',
        'endStats': ['sid', 'name', 'score', 'kills', 'deaths', 'caps', 'reward'],
        'onKill': function(bGs, bGt) {
            bGs['dropFlag'](bGt['flag']);
        },
        'flags': !0x0,
        'teams': !0x0,
        'noScoreC': !0x0
    }, {
        'id': 'bhop',
        'name': 'Parkour',
        'endStats': ['sid', 'name', 'score', 'deaths'],
        'alias': 'bhop',
        'noKick': !0x0,
        'friendly': !0x0
    }, {
        'id': 'hide',
        'name': 'Hide\x20&\x20Seek',
        'alias': 'hide',
        'endStats': ['sid', 'name', 'score', 'found', 'reward'],
        'winCondition': function(bGs) {
            for (var bGt = 0x0, bGu = 0x0; bGu < bGs['players']['list']['length']; ++bGu)
                bGs['players']['list'][bGu]['active'] && 'hide' == bGs['players']['list'][bGu]['team'] && bGt++;
            return 0x0 < bGt ? 'hide' : 'seek';
        },
        'condition': function(bGs) {
            for (var bGt = 0x0, bGu = 0x0; bGu < bGs['players']['list']['length']; ++bGu)
                bGs['players']['list'][bGu]['active'] && 'hide' == bGs['players']['list'][bGu]['team'] && bGt++;
            return 0x0 < bGt;
        },
        'minPlayers': 0x2,
        'waitTimers': [{
            'time': 0x2710,
            'msg': 'picking\x20seeker\x20in\x20',
            'trigger': function(bGs) {
                bGs['pickSeeker']();
            }
        }, {
            'time': 0xafc8,
            'msg': 'releasing\x20seeker\x20in\x20',
            'trigger': function(bGs) {
                bGs['releaseSeeker']();
            }
        }],
        'spdMlt': {
            'hide': 0.8
        },
        'killConv': !0x0,
        'noKick': !0x0,
        'showTeam': !0x0,
        'startTeam': 'hide',
        'convTeam': 'seek',
        'convWord': 'found',
        'noWeap': !0x0,
        'friendly': !0x0,
        'hideNames': !0x0
    }, {
        'id': 'infect',
        'name': 'Infected',
        'alias': 'infect',
        'endStats': ['sid', 'name', 'score', 'kills', 'infected', 'reward'],
        'winCondition': function(bGs) {
            for (var bGt = 0x0, bGu = 0x0; bGu < bGs['players']['list']['length']; ++bGu)
                bGs['players']['list'][bGu]['active'] && 'surv' == bGs['players']['list'][bGu]['team'] && bGt++;
            return 0x0 < bGt ? 'surv' : 'inf';
        },
        'condition': function(bGs) {
            for (var bGt = 0x0, bGu = 0x0; bGu < bGs['players']['list']['length']; ++bGu)
                bGs['players']['list'][bGu]['active'] && 'surv' == bGs['players']['list'][bGu]['team'] && bGt++;
            return 0x0 < bGt;
        },
        'minPlayers': 0x2,
        'waitTimers': [{
            'time': 0x4e20,
            'msg': 'infection\x20in\x20',
            'trigger': function(bGs) {
                bGs['infectRandom']();
            }
        }],
        'teamClass': {
            'inf': 0x9
        },
        'spdMlt': {
            'inf': 1.15
        },
        'killConv': !0x0,
        'noKick': !0x0,
        'startTeam': 'surv',
        'convWord': 'infected',
        'convTeam': 'inf'
    }, {
        'id': 'race',
        'name': 'Race',
        'alias': 'race',
        'endStats': ['sid', 'name', 'score', 'time'],
        'gameTime': 0x0,
        'showMS': !0x0,
        'timed': !0x0,
        'endSort': function(bGs, bGt) {
            return bGs['score'] === bGt['score'] && bGs['gameTimer'] && bGt['gameTimer'] ? bGs['gameTimer'] - bGt['gameTimer'] : bGt['score'] - bGs['score'];
        },
        'gameStart': function(bGs) {
            bGs['lockMove'] = !0x0,
            bGs['targetScore'] = 0x0;
            for (var bGt = 0x0; bGt < bGs['map']['manager']['objects']['length']; ++bGt)
                bGs['map']['manager']['objects'][bGt]['score'] && (bGs['targetScore'] += bGs['map']['manager']['objects'][bGt]['scoreP']);
        },
        'condition': function(bGs) {
            for (var bGt = 0x0; bGt < bGs['players']['list']['length']; ++bGt)
                bGs['players']['list'][bGt]['score'] >= bGs['targetScore'] && !bGs['players']['list'][bGt]['timer'] && (bGs['players']['list'][bGt]['timer'] = bGs['lastTimer'],
                bGs['players']['list'][bGt]['gameTimer'] = bGs['gameTimer'],
                bGs['waitTimers'] || (bGs['waitTimers'] = [{
                    'time': 0x2710,
                    'contTime': !0x0,
                    'msg': 'race\x20ends\x20in\x20',
                    'trigger': function(bGs) {
                        bGs['gameTimer'] = 'skip';
                    }
                }]));
            return !0x0;
        },
        'waitTimers': [{
            'time': 0x3a98,
            'msg': 'race\x20starting\x20in\x20',
            'trigger': function(bGs) {
                bGs['lockMove'] = !0x1;
            }
        }],
        'noWeap': !0x0,
        'friendly': !0x0
    }, {
        'id': 'lms',
        'name': 'Last\x20Man\x20Standing',
        'alias': 'lms',
        'endStats': ['sid', 'name', 'score', 'kills', 'deaths', 'assists'],
        'noRegen': !0x0,
        'noKick': !0x0,
        'teams': !0x0,
        'lives': 0x1,
        'winCondition': function(bGs) {
            for (var bGt = 0x0, bGu = 0x0, bGv = 0x0; bGv < bGs['players']['list']['length']; ++bGv)
                if (0x0 < bGs['players']['list'][bGv]['lives']) {
                    var bGw = bGs['players']['list'][bGv]['lives'];
                    0x1 == bGs['players']['list'][bGv]['team'] ? bGt += bGw : bGu += bGw;
                }
            return bGt > bGu ? 0x1 : 0x2;
        },
        'gameTime': 0x493e0
    }, {
        'id': 'simon',
        'name': 'Simon\x20Says',
        'alias': 'simon',
        'endStats': ['sid', 'name', 'score', 'reward'],
        'condition': function(bGs) {
            for (var bGt = 0x0, bGu = 0x0; bGu < bGs['players']['list']['length']; ++bGu)
                bGs['players']['list'][bGu]['active'] && 'foll' == bGs['players']['list'][bGu]['team'] && bGt++;
            return 0x0 < bGt;
        },
        'minPlayers': 0x3,
        'waitTimers': [{
            'time': 0x2710,
            'msg': 'starts\x20in\x20',
            'trigger': function(bGs) {
                bGs['pickSimon']();
            }
        }],
        'noKick': !0x0,
        'startTeam': 'foll'
    }, {
        'id': 'gun',
        'name': 'Gun\x20Game',
        'alias': 'gun',
        'endStats': ['sid', 'name', 'weapon', 'kills', 'deaths', 'melees', 'setbacks'],
        'winCondition': function(bGs) {
            for (var bGt = 0x0; bGt < bGs['players']['list']['length']; ++bGt)
                if (bGs['players']['list'][bGt]['killList']['length'] >= bGs['mode']['weaponOrder']['length'])
                    return bGs['players']['list'][bGt];
            return null;
        },
        'condition': function(bGs) {
            for (var bGt = 0x0; bGt < bGs['players']['list']['length']; ++bGt)
                if (bGs['players']['list'][bGt]['killList']['length'] >= bGs['mode']['weaponOrder']['length'])
                    return !0x1;
            return !0x0;
        },
        'onKill': function(bGs, bGt, bGu) {
            bGu && bGu != bGt ? bGs['weapons'][bGu['loadout'][bGu['weaponIndex']]]['melee'] ? bGs['decreaseWeapon'](bGt) : bGs['increaseWeapon'](bGu) : bGs['decreaseWeapon'](bGt);
        },
        'killRes': function(bGs) {
            return [bGs ? bGs['killList']['length'] ? bGs['killList'][bGs['killList']['length'] - 0x1] : bGs['loadout'][bGs['weaponIndex']] : -0x1, bGs ? 0x1 : -0x1];
        },
        'startingLoadout': [0x2],
        'keepLoadout': !0x0,
        'noKillRewards': !0x0,
        'noReward': !0x0,
        'noAssists': !0x0,
        'noStreaks': !0x0,
        'minPlayers': 0x2,
        'noWeap': !0x0,
        'weaponOrder': [0x2, 0xa, 0x4, 0xb, 0x5, 0x3, 0x9, 0x1, 0xe, 0x6, 0x0, 0x7, 0x8, 0xd]
    }, {
        'id': 'prop',
        'name': 'Prop\x20Hunt',
        'alias': 'prop',
        'genID': 'p',
        'endStats': ['sid', 'name', 'score', 'kills'],
        'noRegen': !0x0,
        'noKick': !0x0,
        'teams': !0x0,
        'lives': 0x1,
        'winCondition': function(bGs) {
            for (var bGt = 0x0, bGu = 0x0; bGu < bGs['players']['list']['length']; ++bGu)
                bGs['players']['list'][bGu]['active'] && 'prop' == bGs['players']['list'][bGu]['team'] && bGt++;
            return 0x0 < bGt ? 'prop' : 'seek';
        },
        'condition': function(bGs) {
            for (var bGt = 0x0, bGu = 0x0, bGv = 0x0; bGv < bGs['players']['list']['length']; ++bGv)
                0x0 < bGs['players']['list'][bGv]['lives'] && bGs['players']['list'][bGv]['active'] && ('prop' == bGs['players']['list'][bGv]['team'] ? bGt++ : bGu++);
            return 0x1 <= bGt && 0x1 <= bGu;
        },
        'minPlayers': 0x2,
        'waitTimers': [{
            'time': 0x2710,
            'msg': 'locking\x20seekers\x20in\x20',
            'trigger': function(bGs) {
                bGs['lockSeekers']();
            }
        }, {
            'time': 0x7530,
            'msg': 'releasing\x20seekers\x20in\x20',
            'noJoin': !0x0,
            'trigger': function(bGs) {
                bGs['releaseSeeker']();
            }
        }],
        'teamNs': ['seek', 'prop'],
        'showTeam': !0x0,
        'hideNames': !0x0
    }]
      , bGA = [0x0, 0x1, 0x2, 0x3];
    bGs['exports']['modes'] = bGz;
    for (var bHr = [{
        'name': 'Burg',
        'ambInd': 0x1,
        'modURL': '',
        'terrainSeed': '',
        'terrainWidth': 0x800,
        'terrainHeight': 0x800,
        'terrainMntMlt': 0x1,
        'terrainMntCol': '#a0a0a0',
        'terrainGrsCol': '#4a6904',
        'terrainDrtCol': '#8c6835',
        'skyDome': !0x1,
        'skyDomeCol0': '#ffffff',
        'skyDomeCol1': '#7196a2',
        'skyDomeCol2': '#184452',
        'zone': !0x1,
        'zoneSize': 0x1f4,
        'zoneSpeed': 0x1,
        'zoneCol0': '#c542d9',
        'zoneCol1': '#c542d9',
        'zoneCol2': '#c542d9',
        'sizeMlt': 0x2,
        'shadowR': 0x400,
        'ambient': 0x7d6e6c,
        'light': 0xffe8e8,
        'sky': 0xd7c6c6,
        'fog': 0xd2c1c1,
        'fogD': 918.7540927106669,
        'dthY': -0x64,
        'camPos': [0xb, 0x21, -0xd9],
        'spawns': [[-0x50, 0x12, 0x23, 0x0], [0xb1, 0x0, -0xbc, 0x0], [0xd7, 0xa, -0x1f8, 0x0, 0x1], [-0xa9, 0x2, -0x202, 0x0, 0x2], [-0x148, 0x0, -0xff, 0x0], [-0x9a, 0x0, -0x86, 0x0, 0x1], [-0x7d, -0x1c, -0x155, 0x0], [0x20, -0x1c, -0x1fd, 0x0, 0x1], [0x14b, 0x0, -0xe3, 0x0, 0x2], [0x66, 0x0, -0x16d, 0x0]],
        'ambO': 0.7,
        'ambS': 0x5,
        'modes': [0x0, 0x1],
        'shadScale': 0xaa,
        'objects': [{
            'p': [-0x60, 0x10, 0x29],
            's': [0x120, 0x2, 0x3e],
            't': 0x1
        }, {
            'p': [0x49, 0x0, 0x21],
            's': [0x32, 0x12, 0x2e],
            'i': 0x9,
            't': 0x1,
            'd': 0x2
        }, {
            'p': [0x1c, 0x0, 0x8],
            's': [0x98, 0x18, 0x4]
        }, {
            'p': [0x0, -0x2, -0x47],
            's': [0x204, 0x2, 0xfc],
            't': 0x1
        }, {
            'p': [-0x4c, 0x0, -0x30],
            's': [0x38, 0x4a, 0x7a],
            'bo': 0x1
        }, {
            'p': [0x25, 0x0, -0x44],
            's': [0x6e, 0x36, 0x50],
            'bo': 0x1
        }, {
            'p': [-0x70, 0x0, 0x4a],
            's': [0x7e, 0x4c, 0x26],
            'bo': 0x1
        }, {
            'p': [0x5a, 0x0, 0x4d],
            's': [0x9e, 0x4c, 0x2c],
            'bo': 0x1
        }, {
            'p': [-0x88, 0x10, -0x10],
            's': [0x40, 0x2, 0x34],
            't': 0x1
        }, {
            'p': [-0x88, 0x0, -0x2c],
            's': [0x40, 0x18, 0x4]
        }, {
            'p': [-0xaa, 0x0, -0x12],
            's': [0x4, 0x18, 0x38]
        }, {
            'p': [-0xea, 0x0, -0x1b],
            's': [0x20, 0x3c, 0x61],
            'bo': 0x1
        }, {
            'p': [-0x102, 0x12, 0x29],
            's': [0x2f, 0x20, 0x2c],
            'c': 0xcfcfcf,
            'bo': 0x1
        }, {
            'p': [-0xda, 0xd, 0x4a],
            's': [0x58, 0x26, 0x36],
            'bo': 0x1
        }, {
            'p': [0xb9, 0x0, -0x9],
            's': [0x10, 0x43, 0x54],
            'bo': 0x1
        }, {
            'p': [0xb4, 0x0, 0x2d],
            's': [0x3c, 0x5c, 0x2c],
            'c': 0xb4b4b4,
            'bo': 0x1
        }, {
            'p': [0xd5, 0x0, -0x3d],
            's': [0x5e, 0x5c, 0x3c],
            'c': 0xb1b1b1,
            'bo': 0x1
        }, {
            'p': [0x60, 0x0, -0xaf],
            's': [0x6e, 0x2c, 0x2c],
            'bo': 0x1
        }, {
            'p': [-0x55, 0x0, -0x8c],
            's': [0x38, 0x54, 0x70],
            'bo': 0x1
        }, {
            'p': [0x7e, -0x4, -0x12c],
            's': [0xe4, 0x4, 0xce],
            't': 0x1
        }, {
            'p': [-0x52, -0x1c, -0xfc],
            's': [0x3c, 0x5e, 0x8a],
            'bo': 0x1
        }, {
            'p': [0x9, -0x1c, -0x112],
            's': [0x6, 0x22, 0xa8]
        }, {
            'p': [0x31, -0x1c, -0x181],
            's': [0x60, 0x68, 0x44],
            'bo': 0x1
        }, {
            'p': [-0x17, -0x1c, -0xfc],
            's': [0x3a, 0x1c, 0x6e],
            'i': 0x9,
            't': 0x1,
            'd': 0x1
        }, {
            'p': [0x3b, -0x20, -0x1c4],
            's': [0xda, 0x4, 0x8a],
            't': 0x1
        }, {
            'p': [-0x6c, -0x1c, -0x179],
            's': [0x82, 0x58, 0x2a],
            'bo': 0x1
        }, {
            'p': [-0x15, 0x6, -0x179],
            's': [0x2c, 0x26, 0x14],
            'bo': 0x1
        }, {
            'p': [-0xf3, 0x0, -0x69],
            's': [0x15, 0x32, 0x60],
            'c': 0xbbb9b9,
            'bo': 0x1
        }, {
            'p': [0xbe, 0x0, -0x15a],
            's': [0x75, 0x3a, 0x76],
            'bo': 0x1
        }, {
            'p': [-0xc3, 0x0, -0x11],
            's': [0x2e, 0x12, 0x36],
            'i': 0x9,
            't': 0x1,
            'd': 0x1
        }, {
            'p': [-0x86, 0x0, -0xbf],
            's': [0x5a, 0x4d, 0x4c],
            'bo': 0x1
        }, {
            'p': [-0x116, 0x0, -0xbf],
            's': [0x82, 0x4d, 0x4c],
            'bo': 0x1
        }, {
            'p': [-0xe3, -0x2, -0xfe],
            's': [0xe8, 0x2, 0x32],
            't': 0x1
        }, {
            'p': [-0xd2, -0x1c, -0x143],
            's': [0x84, 0x5a, 0x42],
            'bo': 0x1
        }, {
            'p': [-0x80, -0x1c, -0x12c],
            's': [0x20, 0x1c, 0x2a],
            'i': 0x9,
            't': 0x1,
            'd': 0x1
        }, {
            'p': [-0xe9, -0x2, -0x1a3],
            's': [0xac, 0x2, 0x118],
            't': 0x1
        }, {
            'p': [-0x146, -0x16, -0x141],
            's': [0x22, 0x54, 0x58],
            'bo': 0x1
        }, {
            'p': [-0x172, -0x2, -0xfd],
            's': [0x37, 0x9b, 0x3a],
            'bo': 0x1
        }, {
            'p': [-0x9e, -0x1c, -0x112],
            's': [0x1c, 0x5a, 0x20],
            'bo': 0x1
        }, {
            'p': [-0x107, -0x14, -0x142],
            's': [0x1e, 0x5e, 0x5e],
            'bo': 0x1
        }, {
            'p': [-0x14a, -0x17, -0x18a],
            's': [0x16, 0x51, 0xd2],
            'bo': 0x1
        }, {
            'p': [-0x58, -0x1c, -0x1ad],
            's': [0x4e, 0x1c, 0x3e],
            'i': 0x9,
            't': 0x1,
            'd': 0x2
        }, {
            'p': [-0x67, -0x16, -0x1f1],
            's': [0x31, 0x54, 0x56],
            'bo': 0x1
        }, {
            'p': [-0x89, -0x2, -0x1cf],
            's': [0x14, 0x2, 0x82],
            't': 0x1
        }, {
            'p': [-0xa4, 0x0, -0x223],
            's': [0x62, 0x56, 0x28],
            'bo': 0x1
        }, {
            'p': [-0x11b, 0x0, -0x1fa],
            's': [0x48, 0xa, 0x56],
            't': 0x1
        }, {
            'p': [-0x105, 0x0, -0x1c4],
            's': [0x1c, 0xa, 0x16],
            't': 0x1
        }, {
            'p': [-0x12a, 0x0, -0x1c2],
            's': [0x2a, 0xa, 0x1a],
            'i': 0x9,
            't': 0x1,
            'd': 0x3
        }, {
            'p': [-0x15b, 0x0, -0x217],
            's': [0x48, 0x48, 0x4c],
            'bo': 0x1
        }, {
            'p': [-0x106, 0x0, -0x237],
            's': [0x62, 0x34, 0x28],
            'bo': 0x1
        }, {
            'p': [-0x13f, 0x0, -0x24b],
            's': [0x30, 0x8b, 0x36],
            'c': 0xb1b1b1
        }, {
            'p': [-0x1, -0x1c, -0x179],
            's': [0x4, 0x22, 0x14],
            'bo': 0x1
        }, {
            'p': [-0x29, -0x1c, -0x179],
            's': [0x4, 0x22, 0x14],
            'bo': 0x1
        }, {
            'p': [-0x3f, -0x1c, -0x1fa],
            's': [0x34, 0x76, 0x5c],
            'bo': 0x1
        }, {
            'p': [0x55, -0x1c, -0x1f2],
            's': [0x20, 0x70, 0x58],
            'bo': 0x1
        }, {
            'p': [0xad, 0x8, -0x1f7],
            's': [0x94, 0x2, 0x54],
            't': 0x1
        }, {
            'p': [0x27, -0x1d, -0x220],
            's': [0xda, 0x5e, 0x2e],
            'bo': 0x1
        }, {
            'p': [0xb6, 0xa, -0x21c],
            's': [0x48, 0x57, 0x3c],
            'bo': 0x1
        }, {
            'p': [0x124, -0x4, -0x149],
            's': [0x68, 0x4, 0x108],
            't': 0x1
        }, {
            'p': [0x118, 0x0, -0x1e5],
            's': [0x3a, 0xa, 0x30],
            'i': 0x9,
            't': 0x1,
            'd': 0x3
        }, {
            'p': [0x116, 0x8, -0x20f],
            's': [0x3e, 0x2, 0x24],
            't': 0x1
        }, {
            'p': [0x108, 0x9, -0x22e],
            's': [0x5e, 0x24, 0x1a],
            'bo': 0x1
        }, {
            'p': [0x14b, -0x17, -0x228],
            's': [0x36, 0x87, 0x6e],
            'c': '#aaaaaa',
            'bo': 0x1
        }, {
            'p': [0x14c, 0x0, -0x1f3],
            's': [0x30, 0x37, 0x6e],
            'bo': 0x1
        }, {
            'p': [0x156, 0x1, -0x19b],
            's': [0x14, 0x1f, 0x6e],
            'bo': 0x1
        }, {
            'p': [0x150, 0x0, -0x12f],
            's': [0x36, 0x3d, 0x6e],
            'bo': 0x1
        }, {
            'p': [0x7f, -0x1c, -0x1a9],
            's': [0x40, 0x23, 0x4]
        }, {
            'p': [0xc4, -0x1c, -0x1cd],
            's': [0x6e, 0x2c, 0x4]
        }, {
            'p': [0xf9, 0x0, -0x1e6],
            's': [0x4, 0x10, 0x2e]
        }, {
            'p': [0xcc, -0x1c, -0x1b8],
            's': [0x48, 0x1c, 0x26],
            'i': 0x9,
            't': 0x1
        }, {
            'p': [0x9c, 0x0, -0xbc],
            's': [0x20, 0x46, 0x52],
            'bo': 0x1
        }, {
            'p': [0xe4, 0x0, -0xbc],
            's': [0x20, 0x56, 0x52],
            'bo': 0x1
        }, {
            'p': [0x16f, 0x0, -0x92],
            's': [0x3a, 0x32, 0x76],
            'c': '#a2a2a2',
            'bo': 0x1
        }, {
            'p': [0x14f, 0x51, -0x3e],
            's': [0x3c, 0x3a, 0x3c]
        }, {
            'p': [0x15c, 0x0, -0xe3],
            's': [0x8, 0x2c, 0x34],
            'bo': 0x1
        }, {
            'p': [0x189, 0x0, -0x1a4],
            's': [0x58, 0x40, 0xc5]
        }, {
            'p': [0x18c, 0x0, -0xc4],
            's': [0x3a, 0x51, 0xba]
        }, {
            'p': [-0x164, 0x0, -0x171],
            's': [0x2a, 0x62, 0x32]
        }, {
            'p': [-0x108, 0x0, -0x54],
            's': [0x2a, 0x7c, 0x32],
            'c': 0xacacac
        }, {
            'p': [0x1, 0x0, 0x0],
            's': [0xc, 0xc, 0xc],
            'i': 0x1
        }, {
            'p': [-0x2a, 0x0, -0x4f],
            's': [0xc, 0xc, 0xc],
            'i': 0x1
        }, {
            'p': [-0x2a, 0xc, -0x4f],
            's': [0xc, 0xc, 0xc],
            'i': 0x1
        }, {
            'p': [-0x2a, 0x0, -0x43],
            's': [0xc, 0xc, 0xc],
            'i': 0x1
        }, {
            'p': [0x0, -0x1c, -0x145],
            's': [0xc, 0xc, 0xc],
            'i': 0x1
        }, {
            'p': [0x0, -0x1c, -0x151],
            's': [0xc, 0xc, 0xc],
            'i': 0x1
        }, {
            'p': [0x0, -0x10, -0x14d],
            's': [0xc, 0xc, 0xc],
            'i': 0x1
        }, {
            'p': [-0x4c, -0x1c, -0x147],
            's': [0xc, 0xc, 0xc],
            'i': 0x1
        }, {
            'p': [-0x4c, -0x10, -0x147],
            's': [0xc, 0xc, 0xc],
            'i': 0x1
        }, {
            'p': [0xed, 0xa, -0x1d9],
            's': [0xc, 0xc, 0xc],
            'i': 0x1
        }, {
            'p': [0xe0, 0xa, -0x208],
            's': [0xc, 0xc, 0xc],
            'i': 0x1
        }, {
            'p': [0x9b, 0xa, -0x1f8],
            's': [0xc, 0xc, 0xc],
            'i': 0x1
        }, {
            'p': [0xa7, 0xa, -0x1f8],
            's': [0xc, 0xc, 0xc],
            'i': 0x1
        }, {
            'p': [0xa3, 0x16, -0x1f8],
            's': [0xc, 0xc, 0xc],
            'i': 0x1
        }, {
            'p': [0xd6, 0xa, -0x1d2],
            's': [0x6, 0x8, 0x6],
            'i': 0x2
        }, {
            'p': [0x138, 0x0, -0x18f],
            's': [0x2, 0x2, 0x5c]
        }, {
            'p': [0x13e, 0x0, -0xf2],
            's': [0xc, 0xc, 0xc],
            'i': 0x1
        }, {
            'p': [0xe3, 0x0, -0x119],
            's': [0xc, 0xc, 0xc],
            'i': 0x1
        }, {
            'p': [0xd7, 0x0, -0x119],
            's': [0xc, 0xc, 0xc],
            'i': 0x1
        }, {
            'p': [0xe0, 0xc, -0x119],
            's': [0xc, 0xc, 0xc],
            'i': 0x1
        }, {
            'p': [-0x3b, 0x12, 0x13],
            's': [0xc, 0xc, 0xc],
            'i': 0x1
        }, {
            'p': [-0x6e, 0x12, -0x24],
            's': [0xc, 0xc, 0xc],
            'i': 0x1
        }, {
            'p': [-0x6e, 0x0, -0x34],
            's': [0xc, 0xc, 0xc],
            'i': 0x1
        }, {
            'p': [-0x7a, 0x0, -0x34],
            's': [0xc, 0xc, 0xc],
            'i': 0x1
        }, {
            'p': [-0xa5, 0x12, -0x27],
            's': [0x6, 0x8, 0x6],
            'i': 0x2
        }, {
            'p': [-0xd7, 0x12, 0xd],
            's': [0x6, 0x8, 0x6],
            'i': 0x2
        }, {
            'p': [-0x9a, 0x0, -0xfc],
            's': [0xc, 0xc, 0xc],
            'i': 0x1
        }, {
            'p': [-0x139, 0x0, -0xeb],
            's': [0xc, 0xc, 0xc],
            'i': 0x1
        }, {
            'p': [-0x85, 0x0, -0x1d5],
            's': [0xc, 0xc, 0xc],
            'i': 0x8
        }, {
            'p': [-0xbe, 0x0, -0x1e5],
            's': [0xc, 0xc, 0xc],
            'i': 0x1
        }, {
            'p': [0xce, 0x0, -0xcf],
            's': [0xc, 0xc, 0xc],
            'i': 0x1
        }, {
            'p': [0xce, 0x0, -0xc3],
            's': [0xc, 0xc, 0xc],
            'i': 0x1
        }, {
            'p': [0x62, 0x0, -0x3d],
            's': [0xc, 0xc, 0xc],
            'i': 0x1
        }, {
            'p': [0x62, 0x0, -0x49],
            's': [0xc, 0xc, 0xc],
            'i': 0x1
        }, {
            'p': [0x5f, 0x0, -0x34],
            's': [0x6, 0x8, 0x6],
            'i': 0x2
        }, {
            'p': [0x85, 0x0, -0x96],
            's': [0x6, 0x8, 0x6],
            'i': 0x2
        }, {
            'p': [0xc0, 0x22, -0xbc],
            's': [0x28, 0x18, 0x52],
            'bo': 0x1
        }, {
            'p': [0x80, -0x4, -0x19f],
            's': [0x44, 0xc, 0x14],
            't': 0x1
        }, {
            'p': [0x5d, -0x1c, -0x1a6],
            's': [0x4, 0x2a, 0xa]
        }, {
            'p': [0x151, -0x4, -0x96],
            's': [0x16, 0x4, 0x5e],
            't': 0x1
        }, {
            'p': [-0xb, -0x1c, -0x180],
            's': [0x14, 0x22, 0x2],
            'pe': 0x1,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [-0x20, -0x1c, -0x172],
            's': [0x12, 0x22, 0x2],
            'pe': 0x1,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [0xad, 0x0, -0xe9],
            's': [0x2, 0x22, 0x18],
            'pe': 0x1,
            't': 0x2
        }, {
            'p': [0xca, 0x0, -0xe2],
            's': [0x14, 0x22, 0x2],
            'pe': 0x1,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [0xb6, 0x0, -0x96],
            's': [0x14, 0x22, 0x2],
            'pe': 0x1,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [0xd3, 0x0, -0xa2],
            's': [0x2, 0x22, 0x18],
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [0x14, -0x1c, -0x1b6],
            's': [0x1c, 0x4c, 0x28],
            'bo': 0x1
        }, {
            'p': [0x72, 0x0, -0x184],
            's': [0x24, 0x8, 0x22],
            'i': 0x9,
            't': 0x1,
            'd': 0x3
        }, {
            'p': [-0x151, 0x8b, -0x233],
            's': [0xc, 0x4, 0x6],
            'l': 0x1,
            'c': 0xaaaaaa
        }, {
            'p': [-0x12b, 0x8b, -0x236],
            's': [0x8, 0x4, 0xc],
            'l': 0x1,
            'c': 0xb1afaf
        }, {
            'p': [-0x129, 0x8b, -0x24a],
            's': [0x4, 0x4, 0xc],
            'l': 0x1,
            'c': 0xb4b4b4
        }, {
            'p': [-0x12c, 0x8b, -0x260],
            's': [0xa, 0x4, 0xc],
            'l': 0x1,
            'c': 0xa5a5a5
        }, {
            'p': [-0x13c, 0x8b, -0x233],
            's': [0xc, 0x2, 0x6],
            'l': 0x1,
            'c': 0xaaaaaa
        }, {
            'p': [-0xce, 0x56, -0x217],
            's': [0xe, 0x4, 0x10],
            'l': 0x1
        }, {
            'p': [-0x7e, 0x56, -0x217],
            's': [0x16, 0x4, 0x10],
            'l': 0x1
        }, {
            'p': [-0xa5, 0x56, -0x212],
            's': [0x16, 0x4, 0x6],
            'l': 0x1
        }, {
            'p': [-0xd1, 0x56, -0x230],
            's': [0x8, 0x4, 0xe],
            'l': 0x1
        }, {
            'p': [-0xe6, 0x34, -0x226],
            's': [0x18, 0x2, 0x6],
            'l': 0x1
        }, {
            'p': [-0x108, 0x34, -0x226],
            's': [0x12, 0x2, 0x6],
            'l': 0x1
        }, {
            'p': [-0x127, 0x34, -0x226],
            's': [0xe, 0x4, 0x6],
            'l': 0x1
        }, {
            'p': [-0x13c, 0x46, -0x1f6],
            's': [0x6, 0xc, 0x6],
            'l': 0x1,
            't': 0x2
        }, {
            'p': [-0x17a, 0x49, -0x1f6],
            's': [0x6, 0x8, 0x6],
            'l': 0x1,
            't': 0x2
        }, {
            'p': [-0x13e, 0x48, -0x1f8],
            's': [0xe, 0x4, 0xe],
            'l': 0x1
        }, {
            'p': [-0x17a, 0x48, -0x1f8],
            's': [0xa, 0x2, 0xe],
            'l': 0x1
        }, {
            'p': [-0x166, 0x48, -0x1f3],
            's': [0xe, 0x2, 0x4],
            'l': 0x1
        }, {
            'p': [-0x13a, 0x48, -0x218],
            's': [0x6, 0x4, 0x10],
            'l': 0x1
        }, {
            'p': [-0x141, 0x3a, -0x1e0],
            's': [0x4, 0x2, 0x18],
            'l': 0x1
        }, {
            'p': [-0x141, 0x3a, -0x180],
            's': [0x4, 0x4, 0x10],
            'l': 0x1
        }, {
            'p': [-0x141, 0x3a, -0x19d],
            's': [0x4, 0x3, 0x15],
            'l': 0x1
        }, {
            'p': [-0x141, 0x3a, -0x1be],
            's': [0x4, 0x3, 0x13],
            'l': 0x1
        }, {
            'p': [-0x35, 0x3c, -0x188],
            's': [0x14, 0x6, 0xc],
            'l': 0x1
        }, {
            'p': [-0xa6, 0x3c, -0x16c],
            's': [0xe, 0x4, 0x10],
            'l': 0x1
        }, {
            'p': [0xe9, 0x2d, -0x224],
            's': [0xc, 0x2, 0x6],
            'l': 0x1
        }, {
            'p': [0x106, 0x2d, -0x224],
            's': [0xb, 0x2, 0x6],
            'l': 0x1,
            'c': 0xcacaca
        }, {
            'p': [0x120, 0x2d, -0x224],
            's': [0x10, 0x2, 0x6],
            'l': 0x1
        }, {
            'p': [-0x52, 0x5a, -0x1d2],
            's': [0xe, 0x4, 0xc],
            'l': 0x1
        }, {
            'p': [-0x2b, 0x5a, -0x1d3],
            's': [0xc, 0x4, 0xe],
            'l': 0x1
        }, {
            'p': [-0x2c, 0x5a, -0x207],
            's': [0xe, 0x6, 0x1e],
            'l': 0x1
        }, {
            'p': [-0x3c, 0x5a, -0x1cf],
            's': [0xe, 0x2, 0x6],
            'l': 0x1
        }, {
            'p': [-0x27, 0x5a, -0x1ea],
            's': [0x4, 0x2, 0x10],
            'l': 0x1
        }, {
            'p': [-0x54, 0x5a, -0x20c],
            's': [0xa, 0x3, 0x1a],
            'l': 0x1
        }, {
            'p': [-0x57, 0x5a, -0x1ec],
            's': [0x4, 0x2, 0xa],
            'l': 0x1
        }, {
            'p': [-0x3f, 0x47, -0x1c2],
            's': [0x4, 0x4, 0x14],
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [-0x7a, 0x37, -0x1cb],
            's': [0x6, 0x10, 0x6],
            't': 0x2
        }, {
            'p': [-0x7c, 0x3e, -0x1fb],
            's': [0x6, 0x3, 0x10],
            'l': 0x1,
            'c': 0xdcdcdc
        }, {
            'p': [-0x7c, 0x3e, -0x1dc],
            's': [0x6, 0x2, 0xe],
            'l': 0x1,
            'c': 0xe3e3e3
        }, {
            'p': [-0x58, 0x3e, -0x1c9],
            's': [0x12, 0x3, 0x6],
            'l': 0x1
        }, {
            'p': [-0x74, 0x3c, -0x18c],
            's': [0x1a, 0x4, 0x4],
            'l': 0x1
        }, {
            'p': [-0xa4, 0x3c, -0x188],
            's': [0x12, 0x6, 0xc],
            'l': 0x1
        }, {
            'p': [-0x52, 0x3c, -0x18c],
            's': [0xe, 0x3, 0x4],
            'l': 0x1
        }, {
            'p': [0x55, 0x42, -0x1bf],
            's': [0x4, 0x4, 0x10],
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [-0x1f, 0x2c, -0x179],
            's': [0x9, 0x4, 0x14],
            'bo': 0x1
        }, {
            'p': [-0xe, 0x2c, -0x179],
            's': [0xa, 0x2, 0x14],
            'bo': 0x1
        }, {
            'p': [-0x155, 0x62, -0x183],
            's': [0xc, 0x4, 0xe],
            'l': 0x1
        }, {
            'p': [-0x155, 0x62, -0x15e],
            's': [0xc, 0x6, 0xc],
            'l': 0x1
        }, {
            'p': [-0x152, 0x62, -0x171],
            's': [0x6, 0x2, 0xc],
            'l': 0x1
        }, {
            'p': [-0x173, 0x62, -0x185],
            's': [0xc, 0x4, 0xa],
            'l': 0x1
        }, {
            'p': [-0x164, 0x62, -0x188],
            's': [0x8, 0x2, 0x4],
            'l': 0x1
        }, {
            'p': [0x35, 0x41, -0x20b],
            's': [0x12, 0x4, 0x4],
            'l': 0x1
        }, {
            'p': [0x87, 0x41, -0x20b],
            's': [0xc, 0x4, 0x4],
            'l': 0x1
        }, {
            'p': [0x72, 0x41, -0x20b],
            's': [0xc, 0x4, 0x4],
            'l': 0x1
        }, {
            'p': [0xd3, 0x61, -0x205],
            's': [0xe, 0x6, 0xe],
            'l': 0x1
        }, {
            'p': [0x99, 0x61, -0x206],
            's': [0xe, 0x4, 0x10],
            'l': 0x1
        }, {
            'p': [0xb8, 0x61, -0x202],
            's': [0xc, 0x2, 0x8],
            'l': 0x1
        }, {
            'p': [0xd7, 0x61, -0x21b],
            's': [0x6, 0x2, 0x12],
            'l': 0x1
        }, {
            'p': [0xd3, 0x61, -0x234],
            's': [0xe, 0x6, 0xc],
            'l': 0x1
        }, {
            'p': [0x99, 0x61, -0x232],
            's': [0xe, 0x6, 0x10],
            'l': 0x1
        }, {
            'p': [0x95, 0x61, -0x21b],
            's': [0x6, 0x2, 0xc],
            'l': 0x1
        }, {
            'p': [0x94, 0x10, -0x1cd],
            's': [0xe, 0x1, 0x4]
        }, {
            'p': [0xf2, 0x10, -0x1cd],
            's': [0x12, 0x2, 0x4]
        }, {
            'p': [0xf9, 0x10, -0x1f1],
            's': [0x4, 0x2, 0xa]
        }, {
            'p': [0x60, 0x54, -0x1cb],
            's': [0x6, 0xc, 0x6],
            'l': 0x1,
            't': 0x2
        }, {
            'p': [0x4a, 0x54, -0x1cb],
            's': [0x6, 0xa, 0x6],
            'l': 0x1,
            't': 0x2
        }, {
            'p': [0x61, 0x54, -0x219],
            's': [0x6, 0x14, 0x6],
            'l': 0x1,
            't': 0x2
        }, {
            'p': [0x5e, 0x54, -0x1cf],
            's': [0xe, 0x4, 0x12],
            'l': 0x1
        }, {
            'p': [0x4a, 0x54, -0x1cf],
            's': [0xa, 0x4, 0x12],
            'l': 0x1
        }, {
            'p': [0x4c, 0x54, -0x215],
            's': [0xe, 0x4, 0x12],
            'l': 0x1
        }, {
            'p': [0x60, 0x54, -0x215],
            's': [0xa, 0x4, 0x12],
            'l': 0x1
        }, {
            'p': [0x62, 0x54, -0x1f2],
            's': [0x6, 0x4, 0x14],
            'l': 0x1
        }, {
            'p': [0x48, 0x54, -0x1f2],
            's': [0x6, 0x4, 0x1a],
            'l': 0x1
        }, {
            'p': [0x5b, 0x4c, -0x19e],
            's': [0x6, 0x10, 0x6],
            'l': 0x1,
            't': 0x2
        }, {
            'p': [0x55, 0x4c, -0x19a],
            's': [0x18, 0x6, 0x12],
            'l': 0x1
        }, {
            'p': [0xd, 0x4c, -0x19a],
            's': [0x18, 0x6, 0x12],
            'l': 0x1
        }, {
            'p': [0x30, 0x4c, -0x1a0],
            's': [0x14, 0x4, 0x6],
            'l': 0x1
        }, {
            'p': [0xc, 0x4c, -0x166],
            's': [0x16, 0x6, 0xe],
            'l': 0x1
        }, {
            'p': [0x5, 0x4c, -0x17e],
            's': [0x8, 0x4, 0xe],
            'l': 0x1
        }, {
            'p': [0x35, 0x4c, -0x162],
            's': [0x16, 0x4, 0x6],
            'l': 0x1
        }, {
            'p': [0x55, 0x4c, -0x168],
            's': [0x18, 0x6, 0x12],
            'l': 0x1
        }, {
            'p': [0x5d, 0x4c, -0x183],
            's': [0x8, 0x4, 0xe],
            'l': 0x1
        }, {
            'p': [0x6, 0x4c, -0x19e],
            's': [0x6, 0x14, 0x6],
            'l': 0x1,
            't': 0x2
        }, {
            'p': [0x6, 0x4c, -0x164],
            's': [0x6, 0xe, 0x6],
            'l': 0x1,
            't': 0x2
        }, {
            'p': [0x14e, 0x20, -0x1b0],
            's': [0x4, 0x2, 0x12],
            'l': 0x1
        }, {
            'p': [0x14e, 0x20, -0x178],
            's': [0x4, 0x3, 0x12],
            'l': 0x1
        }, {
            'p': [0x14e, 0x20, -0x196],
            's': [0x4, 0x2, 0x16],
            'l': 0x1
        }, {
            'p': [0x93, 0x3a, -0x192],
            's': [0x1f, 0x9, 0x6],
            'l': 0x1
        }, {
            'p': [0x88, 0x3a, -0x17a],
            's': [0x9, 0xc, 0x2a],
            'l': 0x1
        }, {
            'p': [0xc6, 0x3a, -0x1a2],
            's': [0xa, 0x4, 0x6],
            'l': 0x1
        }, {
            'p': [0xf5, 0x3a, -0x177],
            's': [0x7, 0x4, 0x14],
            'l': 0x1
        }, {
            'p': [0xea, 0x3a, -0x19d],
            's': [0x1d, 0x5, 0x10],
            'l': 0x1
        }, {
            'p': [0xec, 0x3a, -0x12b],
            's': [0x19, 0x4, 0x18],
            'l': 0x1
        }, {
            'p': [0xf5, 0x3a, -0x155],
            's': [0x7, 0x4, 0x14],
            'l': 0x1
        }, {
            'p': [0xf3, 0x3a, -0x1a0],
            's': [0x6, 0x13, 0x6],
            't': 0x2
        }, {
            'p': [0x13a, 0x3d, -0x15d],
            's': [0xa, 0x4, 0x12],
            'l': 0x1
        }, {
            'p': [0x14d, 0x3d, -0x164],
            's': [0xb, 0x3, 0x4],
            'l': 0x1
        }, {
            'p': [0x162, 0x3d, -0x15d],
            's': [0x12, 0x4, 0x12],
            'l': 0x1
        }, {
            'p': [0x138, 0x3d, -0x132],
            's': [0x6, 0x4, 0x1c],
            'l': 0x1
        }, {
            'p': [0x13c, 0x3d, -0x103],
            's': [0xe, 0x4, 0x16],
            'l': 0x1
        }, {
            'p': [0x14e, 0x3d, -0xfa],
            's': [0xb, 0x3, 0x4],
            'l': 0x1
        }, {
            'p': [0x164, 0x3d, -0x101],
            's': [0xe, 0x3, 0x12],
            'l': 0x1
        }, {
            'p': [0x11d, 0x3a, -0x58],
            's': [0x2, 0x28, 0x2],
            'l': 0x1,
            't': 0x2
        }, {
            'p': [0x11d, 0x3a, -0x28],
            's': [0x2, 0x28, 0x2],
            'l': 0x1,
            't': 0x2
        }, {
            'p': [0x126, 0x5d, -0x40],
            's': [0x16, 0x2, 0x35],
            't': 0x2
        }, {
            'p': [0xc1, 0x3a, -0x122],
            's': [0x18, 0x4, 0x6],
            'l': 0x1
        }, {
            'p': [0x88, 0x3a, -0x14c],
            's': [0x9, 0x6, 0x18],
            'l': 0x1
        }, {
            'p': [0x15c, 0x2c, -0xec],
            's': [0x8, 0x4, 0x10],
            'l': 0x1,
            'c': 0xe6e6e6
        }, {
            'p': [0x15c, 0x2c, -0xd8],
            's': [0x8, 0x2, 0x8],
            'l': 0x1
        }, {
            'p': [0x160, 0x40, -0x17b],
            's': [0x6, 0x4, 0x14],
            'l': 0x1
        }, {
            'p': [0x160, 0x40, -0x19f],
            's': [0x6, 0x3, 0xe],
            'l': 0x1
        }, {
            'p': [0x136, 0x37, -0x1ea],
            's': [0x4, 0x4, 0xe],
            'l': 0x1
        }, {
            'p': [0x13b, 0x37, -0x1c3],
            's': [0xe, 0x4, 0xe],
            'l': 0x1
        }, {
            'p': [0x136, 0x37, -0x1d9],
            's': [0x4, 0x2, 0xa],
            'l': 0x1
        }, {
            'p': [0x156, 0x37, -0x1be],
            's': [0xe, 0x4, 0x4],
            'l': 0x1
        }, {
            'p': [0x133, 0x70, -0x240],
            's': [0x6, 0x4, 0x16],
            'l': 0x1,
            'c': '#b1b1b1'
        }, {
            'p': [0x14f, 0x8b, -0x59],
            's': [0xc, 0x4, 0x6],
            'l': 0x1
        }, {
            'p': [0x139, 0x8b, -0x54],
            's': [0x10, 0x6, 0x10],
            'l': 0x1
        }, {
            'p': [0x165, 0x8b, -0x54],
            's': [0x10, 0x6, 0x10],
            'l': 0x1
        }, {
            'p': [0x139, 0x8b, -0x28],
            's': [0x10, 0x6, 0x10],
            'l': 0x1
        }, {
            'p': [0x134, 0x8b, -0x3e],
            's': [0x6, 0x4, 0xc],
            'l': 0x1
        }, {
            'p': [0xe4, 0x30, -0x66],
            's': [0xa, 0x2, 0xe],
            'l': 0x1
        }, {
            'p': [-0x125, 0x28, -0x141],
            's': [0x20, 0x16, 0x58],
            'bo': 0x1
        }, {
            'p': [-0xc0, 0x3e, -0x143],
            's': [0x14, 0x4, 0x42],
            'l': 0x1
        }, {
            'p': [-0x148, 0x3e, -0x169],
            's': [0x14, 0x4, 0x8],
            'l': 0x1
        }, {
            'p': [-0x128, 0x3e, -0x169],
            's': [0x14, 0x4, 0x8],
            'l': 0x1
        }, {
            'p': [-0xfd, 0x49, -0x16c],
            's': [0x6, 0xa, 0x6],
            'l': 0x1,
            't': 0x2
        }, {
            'p': [-0x112, 0x49, -0x16c],
            's': [0x6, 0xe, 0x6],
            'l': 0x1,
            't': 0x2
        }, {
            'p': [-0x112, 0x4a, -0x142],
            's': [0x8, 0x4, 0x5e],
            'l': 0x1
        }, {
            'p': [-0xfc, 0x4a, -0x11b],
            's': [0x8, 0x4, 0x10],
            'l': 0x1
        }, {
            'p': [0x9, 0x6, -0x139],
            's': [0x6, 0x2, 0x12]
        }, {
            'p': [0x9, 0x6, -0xc7],
            's': [0x6, 0x2, 0x12]
        }, {
            'p': [0x9, 0x6, -0xfc],
            's': [0x6, 0x2, 0xa]
        }, {
            'p': [0xa4, 0x0, -0x3d],
            's': [0x4, 0x3e, 0x4],
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [0x9a, 0x36, -0x3d],
            's': [0x10, 0x4, 0x4],
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [0x9e, 0x33, -0x3d],
            's': [0x10, 0x2, 0x2],
            'l': 0x1,
            'r': [0x0, 0x0, -0.7],
            't': 0x2
        }, {
            'p': [-0x107, 0x0, -0x111],
            's': [0x4, 0x36, 0x4],
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [-0x107, 0x2f, -0x107],
            's': [0x4, 0x4, 0x10],
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [-0x107, 0x2b, -0x10c],
            's': [0x2, 0x2, 0x10],
            'l': 0x1,
            'r': [-0.7, 0x0, 0x0],
            't': 0x2
        }, {
            'p': [0xee, 0x56, -0xe0],
            's': [0xc, 0x4, 0xa],
            'l': 0x1
        }, {
            'p': [0xf0, 0x56, -0x98],
            's': [0x8, 0x4, 0xa],
            'l': 0x1
        }, {
            'p': [0xd9, 0x56, -0xde],
            's': [0xa, 0x4, 0xe],
            'l': 0x1
        }, {
            'p': [0xf2, 0x56, -0xbd],
            's': [0x4, 0x4, 0x1c],
            'l': 0x1
        }, {
            'p': [0xfb, 0x5c, -0x52],
            's': [0x12, 0x6, 0x12],
            'l': 0x1,
            'c': 0xaaaaaa
        }, {
            'p': [0xb0, 0x5c, -0x54],
            's': [0x14, 0x4, 0xe],
            'l': 0x1,
            'c': 0xb1b1b1
        }, {
            'p': [0xad, 0x5c, -0x26],
            's': [0xe, 0x4, 0xe],
            'l': 0x1,
            'c': 0xbbbbbb
        }, {
            'p': [0xcf, 0x5c, -0x58],
            's': [0x14, 0x4, 0x6],
            'l': 0x1,
            'c': 0xb9b9b9
        }, {
            'p': [0xa8, 0x5c, -0x3d],
            's': [0x4, 0x2, 0xc],
            'l': 0x1,
            'c': 0xa7a7a7
        }, {
            'p': [0xfe, 0x5c, -0x29],
            's': [0xc, 0x4, 0x14],
            'l': 0x1,
            'c': 0xb6b6b6
        }, {
            'p': [0xd6, 0x5c, -0x22],
            's': [0x18, 0x4, 0x6],
            'l': 0x1,
            'c': 0xafafaf
        }, {
            'p': [0x91, 0x46, -0x9e],
            's': [0xa, 0x4, 0x16],
            'l': 0x1
        }, {
            'p': [0xa8, 0x46, -0x9a],
            's': [0x8, 0x4, 0xe],
            'l': 0x1
        }, {
            'p': [0x91, 0x46, -0xda],
            's': [0xa, 0x4, 0x16],
            'l': 0x1
        }, {
            'p': [0xa8, 0x46, -0xde],
            's': [0x8, 0x4, 0xe],
            'l': 0x1
        }, {
            'p': [0xd6, 0x56, -0xb8],
            's': [0x4, 0x2, 0x18],
            'l': 0x1
        }, {
            'p': [0xd8, 0x56, -0x98],
            's': [0x8, 0x4, 0xa],
            'l': 0x1
        }, {
            'p': [0xb3, 0x43, 0x0],
            's': [0x4, 0x2, 0xa],
            'l': 0x1
        }, {
            'p': [0xb3, 0x43, 0x11],
            's': [0x4, 0x6, 0xf],
            'l': 0x1
        }, {
            'p': [0x88, 0x2c, -0x9d],
            's': [0x4, 0x26, 0x4],
            't': 0x2
        }, {
            'p': [0x2d, 0x2c, -0x9d],
            's': [0x4, 0x26, 0x4],
            't': 0x2
        }, {
            'p': [0x2d, 0x2c, -0xc1],
            's': [0x4, 0x26, 0x4],
            't': 0x2
        }, {
            'p': [0x88, 0x2c, -0xc1],
            's': [0x4, 0x2a, 0x4],
            't': 0x2
        }, {
            'p': [0x5b, 0x3a, -0xaf],
            's': [0x64, 0x2, 0x2c],
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [0x7f, 0x2c, -0x9b],
            's': [0x1a, 0x4, 0x4],
            'l': 0x1
        }, {
            'p': [0x30, 0x2c, -0x9f],
            's': [0xe, 0x4, 0xc],
            'l': 0x1
        }, {
            'p': [0x2e, 0x2c, -0xbf],
            's': [0xa, 0x4, 0xc],
            'l': 0x1
        }, {
            'p': [0x5a, 0x2c, -0x9b],
            's': [0x12, 0x2, 0x4],
            'l': 0x1
        }, {
            'p': [0xc3, 0x3a, -0xe2],
            's': [0x12, 0x4, 0x6],
            'l': 0x1
        }, {
            'p': [0xba, 0x3a, -0x96],
            's': [0x12, 0x4, 0x6],
            'l': 0x1
        }, {
            'p': [-0x3, 0x36, -0x64],
            's': [0x1e, 0x6, 0x10],
            'l': 0x1
        }, {
            'p': [0x4d, 0x36, -0x62],
            's': [0x1e, 0x6, 0x14],
            'l': 0x1
        }, {
            'p': [0x4f, 0x36, -0x23],
            's': [0x1a, 0x6, 0xe],
            'l': 0x1
        }, {
            'p': [-0x5, 0x36, -0x23],
            's': [0x1a, 0x6, 0xe],
            'l': 0x1
        }, {
            'p': [0x59, 0x36, -0x42],
            's': [0x6, 0x4, 0x14],
            'l': 0x1
        }, {
            'p': [0x25, 0x36, -0x69],
            's': [0x1e, 0x4, 0x6],
            'l': 0x1
        }, {
            'p': [-0xf, 0x36, -0x42],
            's': [0x6, 0x4, 0x14],
            'l': 0x1
        }, {
            'p': [0x26, 0x36, -0x1f],
            's': [0x12, 0x4, 0x6],
            'l': 0x1
        }, {
            'p': [-0x35, 0x3c, -0x16c],
            's': [0x14, 0x4, 0x10],
            'l': 0x1
        }, {
            'p': [-0xed, 0x32, 0x23],
            's': [0x5, 0x2, 0xa],
            'l': 0x1,
            'c': 0xc8c8c8
        }, {
            'p': [0xa4, 0x5c, 0x1f],
            's': [0x1c, 0x6, 0x10],
            'l': 0x1,
            'c': 0xb4b4b4
        }, {
            'p': [0xcd, 0x5c, 0x1f],
            's': [0xa, 0x4, 0x10],
            'l': 0x1,
            'c': 0xd2d2d2
        }, {
            'p': [0x9c, 0x5c, 0x3c],
            's': [0xc, 0x6, 0xe],
            'l': 0x1,
            'c': 0xc8c8c8
        }, {
            'p': [-0x104, 0x2f, 0x13],
            's': [0x4, 0x36, 0x9e]
        }, {
            'p': [-0xc5, 0x2f, 0x61],
            's': [0x9e, 0x36, 0x4]
        }, {
            'p': [-0xb2, 0xd, 0x33],
            's': [0x4, 0x4a, 0x4],
            't': 0x2
        }, {
            'p': [-0xfe, 0xd, 0x33],
            's': [0x4, 0x4a, 0x4],
            't': 0x2
        }, {
            'p': [-0xd8, 0x50, 0x48],
            's': [0x54, 0x2, 0x32],
            't': 0x2
        }, {
            'p': [-0x37, 0x4a, 0x2],
            's': [0xe, 0x6, 0x16],
            'l': 0x1
        }, {
            'p': [-0x61, 0x4a, 0x1],
            's': [0xe, 0x6, 0x18],
            'l': 0x1
        }, {
            'p': [-0x66, 0x4a, -0x2a],
            's': [0x4, 0x4, 0x18],
            'l': 0x1
        }, {
            'p': [-0x66, 0x4a, -0x4b],
            's': [0x4, 0x4, 0xe],
            'l': 0x1
        }, {
            'p': [-0x4d, 0x4a, 0xb],
            's': [0xe, 0x4, 0x4],
            'l': 0x1
        }, {
            'p': [-0x32, 0x4a, -0x2d],
            's': [0x4, 0x4, 0x18],
            'l': 0x1
        }, {
            'p': [-0x36, 0x4a, -0x61],
            's': [0xc, 0x4, 0x18],
            'l': 0x1
        }, {
            'p': [-0xec, 0x32, -0x83],
            's': [0x7, 0x4, 0x18],
            'l': 0x1,
            'c': 0xc8c6c6
        }, {
            'p': [-0xec, 0x32, -0x60],
            's': [0x7, 0x4, 0x16],
            'l': 0x1,
            'c': 0xb6b6b6
        }, {
            'p': [-0xdd, 0x3c, 0xe],
            's': [0x6, 0x2, 0xf],
            'l': 0x1
        }, {
            'p': [-0xf4, 0x3c, 0xd],
            's': [0xc, 0x2, 0x11],
            'l': 0x1
        }, {
            'p': [-0xe0, 0x3c, -0x3d],
            's': [0xc, 0x2, 0x1d],
            'l': 0x1
        }, {
            'p': [-0xdc, 0x3c, -0x11],
            's': [0x4, 0x2, 0x8],
            'l': 0x1
        }, {
            'p': [-0xfb, 0x7c, -0x40],
            's': [0x10, 0x4, 0xa],
            'l': 0x1,
            'c': 0xb9b7b7
        }, {
            'p': [-0x117, 0x7c, -0x42],
            's': [0xc, 0x4, 0xe],
            'l': 0x1,
            'c': 0xc3c3c3
        }, {
            'p': [-0x116, 0x7c, -0x69],
            's': [0xe, 0x3, 0x8],
            'l': 0x1
        }, {
            'p': [-0x6d, 0x3c, -0x167],
            's': [0x22, 0x4, 0x6],
            'l': 0x1
        }, {
            'p': [-0x82, 0x4d, -0x9c],
            's': [0xe, 0x3, 0x6],
            'l': 0x1
        }, {
            'p': [0x165, 0x8b, -0x28],
            's': [0x10, 0x6, 0x10],
            'l': 0x1
        }, {
            'p': [-0x128, 0x3e, -0x119],
            's': [0x14, 0x4, 0x8],
            'l': 0x1
        }, {
            'p': [-0x143, 0x3e, -0x119],
            's': [0xe, 0x4, 0x8],
            'l': 0x1
        }, {
            'p': [0x9, 0x0, -0xb4],
            's': [0x4, 0x36, 0x4],
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [0x9, 0x2c, -0xaf],
            's': [0x2, 0x2, 0xc],
            'l': 0x1,
            'r': [-0.7, 0x0, 0x0],
            't': 0x2
        }, {
            'p': [-0x6a, 0x54, -0x60],
            's': [0xe, 0x6, 0x18],
            'l': 0x1
        }, {
            'p': [-0x6e, 0x54, -0x89],
            's': [0x6, 0x4, 0x18],
            'l': 0x1
        }, {
            'p': [-0x40, 0x54, -0x60],
            's': [0xe, 0x6, 0x18],
            'l': 0x1
        }, {
            'p': [-0x40, 0x54, -0xb8],
            's': [0xe, 0x6, 0x18],
            'l': 0x1
        }, {
            'p': [-0x3c, 0x54, -0x89],
            's': [0x6, 0x4, 0x10],
            'l': 0x1
        }, {
            'p': [-0xb6, 0x33, 0x37],
            's': [0x10, 0x4, 0x10],
            'l': 0x1
        }, {
            'p': [-0xfa, 0x33, 0x32],
            's': [0x10, 0x4, 0x6],
            'l': 0x1
        }, {
            'p': [-0xd4, 0x33, 0x32],
            's': [0x10, 0x2, 0x6],
            'l': 0x1
        }, {
            'p': [-0xfc, 0x33, 0x3c],
            's': [0xc, 0xc, 0xc],
            'i': 0x1
        }, {
            'p': [0x157, 0x20, -0x16c],
            's': [0xc, 0xc, 0xc],
            'i': 0x1
        }, {
            'p': [0xf3, 0x38, -0x124],
            's': [0x6, 0x1c, 0x6],
            't': 0x2
        }, {
            'p': [0xa, 0x18, 0x8],
            's': [0x12, 0x2, 0x4]
        }, {
            'p': [0x52, 0x18, 0x8],
            's': [0x14, 0x2, 0x4]
        }, {
            'p': [-0x23, 0x18, 0x8],
            's': [0x9, 0x1, 0x4]
        }, {
            'p': [-0x81, 0x18, -0x2c],
            's': [0x10, 0x2, 0x4]
        }, {
            'p': [-0xa4, 0x18, -0x2c],
            's': [0x10, 0x2, 0x4]
        }, {
            'p': [-0xaa, 0x18, -0x1f],
            's': [0x4, 0x2, 0x16]
        }, {
            'p': [-0xaa, 0x18, 0x4],
            's': [0x4, 0x2, 0xc]
        }, {
            'p': [-0xe3, 0x3e, -0x143],
            's': [0x14, 0x4, 0x42],
            'l': 0x1
        }, {
            'p': [-0x6c, 0x53, -0x59],
            's': [0x6, 0x1a, 0x6],
            't': 0x2
        }, {
            'p': [-0xfa, 0x2c, -0x7c],
            's': [0x4, 0x29, 0x4],
            't': 0x2
        }, {
            'p': [-0x118, 0x2c, -0x7c],
            's': [0x4, 0x28, 0x4],
            't': 0x2
        }, {
            'p': [-0x109, 0x4a, -0x75],
            's': [0x26, 0x2, 0x16],
            't': 0x2
        }, {
            'p': [-0x39, 0x42, -0xc9],
            's': [0xa, 0x6, 0x24],
            'l': 0x1
        }, {
            'p': [-0x39, 0x42, -0x104],
            's': [0xa, 0x4, 0x1a],
            'l': 0x1
        }, {
            'p': [-0x3d, 0x42, -0x134],
            's': [0x12, 0x4, 0x1a],
            'l': 0x1
        }, {
            'p': [-0x67, 0x42, -0x134],
            's': [0x12, 0x4, 0x1a],
            'l': 0x1
        }, {
            'p': [-0x6b, 0x42, -0xfb],
            's': [0xa, 0x4, 0x16],
            'l': 0x1
        }, {
            'p': [-0xa8, 0x3e, -0x10c],
            's': [0x8, 0x2, 0x14],
            'l': 0x1
        }, {
            'p': [-0x96, 0x3e, -0x10c],
            's': [0xc, 0x4, 0x14],
            'l': 0x1
        }, {
            'p': [-0x94, 0x3e, -0x130],
            's': [0x8, 0x4, 0x14],
            'l': 0x1
        }, {
            'p': [-0x94, 0x3e, -0x156],
            's': [0x8, 0x4, 0x1c],
            'l': 0x1
        }, {
            'p': [0x14f, 0x64, -0x5c],
            's': [0x6, 0x14, 0x2],
            'l': 0x1,
            'c': 0x0
        }, {
            'p': [0xc4, 0x33, -0x5b],
            's': [0x6, 0x14, 0x2],
            'l': 0x1,
            'c': 0x0
        }, {
            'p': [-0xf3, 0x5e, -0x54],
            's': [0x2, 0x10, 0x6],
            'l': 0x1,
            'c': 0x0
        }, {
            'p': [-0x127, 0x70, -0x24b],
            's': [0x2, 0xe, 0x6],
            'l': 0x1,
            'c': 0x0
        }, {
            'p': [-0x13f, 0x70, -0x230],
            's': [0x5, 0xe, 0x2],
            'l': 0x1,
            'c': 0x0
        }, {
            'p': [0x131, 0x64, -0x3e],
            's': [0x2, 0x14, 0x6],
            'l': 0x1,
            'c': 0x0
        }, {
            'p': [0x130, 0x4e, -0x206],
            's': [0x2, 0xe, 0x6],
            'l': 0x1,
            'c': 0x0
        }, {
            'p': [0xcb, 0x46, -0x1fe],
            's': [0x5, 0xe, 0x2],
            'l': 0x1,
            'c': 0x0
        }, {
            'p': [0xb7, 0x46, -0x1fe],
            's': [0x5, 0xe, 0x2],
            'l': 0x1,
            'c': 0x0
        }, {
            'p': [0xa2, 0x46, -0x1fe],
            's': [0x5, 0xe, 0x2],
            'l': 0x1,
            'c': 0x0
        }, {
            'p': [0x26, 0x12, 0x34],
            's': [0x6, 0x8, 0x6],
            'i': 0x2
        }, {
            'p': [0x12c, 0x31, -0x12d],
            's': [0x12, 0x4, 0x4],
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [-0xd2, 0x0, -0x9b],
            's': [0x4, 0x1, 0x6],
            'l': 0x1
        }, {
            'p': [-0xb1, 0x0, -0x102],
            's': [0x4, 0x2, 0x6],
            'l': 0x1
        }, {
            'p': [-0x10f, 0x0, -0x10e],
            's': [0x6, 0x2, 0x4],
            'l': 0x1
        }, {
            'p': [-0xf2, 0x0, -0x1af],
            's': [0x8, 0x2, 0x4],
            'l': 0x1
        }, {
            'p': [-0xae, 0x0, -0x193],
            's': [0x4, 0x1, 0x4],
            'l': 0x1
        }, {
            'p': [-0x9a, -0x1, -0x194],
            's': [0x8, 0x2, 0x8],
            'l': 0x1
        }, {
            'p': [-0x5, -0x1c, -0x189],
            's': [0x6, 0x2, 0x4],
            'l': 0x1
        }, {
            'p': [0x133, 0x0, -0x1b7],
            's': [0x4, 0x1, 0x6],
            'l': 0x1
        }, {
            'p': [0x152, 0x0, -0xd4],
            's': [0x4, 0x2, 0x8],
            'l': 0x1
        }, {
            'p': [0x131, 0x0, -0xfe],
            's': [0x4, 0x2, 0x6],
            'l': 0x1
        }, {
            'p': [0xdf, 0x0, -0xe8],
            's': [0x8, 0x2, 0x4],
            'l': 0x1
        }, {
            'p': [0xcb, 0x0, -0x11c],
            's': [0x8, 0x2, 0x4],
            'c': 0xacacac
        }, {
            'p': [0x65, 0x0, -0x163],
            's': [0x4, 0x2, 0x8],
            'l': 0x1
        }, {
            'p': [0xf, 0x0, -0x159],
            's': [0x4, 0x2, 0x8],
            'l': 0x1
        }, {
            'p': [0xf, 0x0, -0xd3],
            's': [0x4, 0x2, 0x8]
        }, {
            'p': [-0x32, 0x0, -0xaf],
            's': [0x6, 0x2, 0x8],
            'l': 0x1
        }, {
            'p': [0x61, 0x0, -0x57],
            's': [0x6, 0x2, 0x8],
            'l': 0x1
        }, {
            'p': [0x5e, 0x0, 0x0],
            's': [0xa, 0x2, 0x4],
            'l': 0x1
        }, {
            'p': [-0x2b, 0x0, -0x1],
            's': [0x6, 0x2, 0x8],
            'l': 0x1
        }, {
            'p': [-0xb, 0x12, 0xf],
            's': [0xa, 0x2, 0x4],
            'l': 0x1
        }, {
            'p': [-0x9a, 0x12, -0x26],
            's': [0x6, 0x1, 0x3],
            'l': 0x1
        }, {
            'p': [-0x6c, 0x12, -0x7],
            's': [0x4, 0x2, 0xa],
            'l': 0x1
        }, {
            'p': [-0x88, 0x0, -0x34],
            's': [0x8, 0x2, 0x6],
            'l': 0x1
        }, {
            'p': [0xa2, 0x0, -0x34],
            's': [0x3, 0x2, 0x5],
            'l': 0x1
        }, {
            'p': [0x2e, 0x0, -0x95],
            's': [0x6, 0x1, 0x5],
            'l': 0x1
        }, {
            'p': [-0x132, 0x0, -0x15d],
            's': [0x4, 0x1, 0x7],
            'l': 0x1
        }, {
            'p': [-0x14c, 0x0, -0x10e],
            's': [0x4, 0x2, 0x8],
            'l': 0x1
        }, {
            'p': [-0x3b, -0x1c, -0x145],
            's': [0x4, 0x2, 0x4]
        }, {
            'p': [-0x8d, -0x1c, -0x15f],
            's': [0x4, 0x2, 0x8]
        }, {
            'p': [-0xb6, 0x0, -0xda],
            's': [0x4, 0x2, 0x8],
            'l': 0x1
        }, {
            'p': [-0xda, 0x12, 0x2b],
            's': [0x8, 0x1, 0x4],
            'l': 0x1
        }, {
            'p': [-0x28, 0x12, 0x34],
            's': [0x6, 0x2, 0x8],
            'l': 0x1
        }, {
            'p': [0x77, 0x0, -0x95],
            's': [0x6, 0x2, 0x6],
            'l': 0x1
        }, {
            'p': [-0xc4, 0x0, -0x20c],
            's': [0x5, 0x1, 0x4],
            'l': 0x1
        }, {
            'p': [0xa0, 0x0, -0x46],
            's': [0x4, 0x2, 0x4],
            'l': 0x1
        }, {
            'p': [-0x34, 0x0, -0xa3],
            's': [0x4, 0x2, 0x4],
            'l': 0x1
        }, {
            'p': [0xfb, 0x0, -0x197],
            's': [0x4, 0x2, 0x6],
            'l': 0x1
        }, {
            'p': [-0x5, -0x1c, -0x198],
            's': [0xc, 0xc, 0xc],
            'i': 0x1
        }, {
            'p': [0xfb, 0x0, -0x120],
            's': [0x3, 0x1, 0x5],
            'l': 0x1,
            'c': 0xc3c3c3
        }, {
            'p': [0x139, 0x0, -0x158],
            's': [0x3, 0x1, 0x4]
        }, {
            'p': [0x141, 0x0, -0x16c],
            's': [0x4, 0x2, 0x4],
            'l': 0x1
        }, {
            'p': [0xca, 0x0, -0x5e],
            's': [0x4, 0x1, 0x4]
        }, {
            'p': [0x10, 0x0, -0x108],
            's': [0x4, 0x1, 0x6]
        }, {
            'p': [0x25, 0x0, -0x133],
            's': [0x4, 0x6, 0x26]
        }, {
            'p': [0x5e, 0x0, -0x145],
            's': [0x16, 0x6, 0x4]
        }, {
            'p': [0x6b, 0x0, -0x13a],
            's': [0x4, 0x6, 0x1a]
        }, {
            'p': [0x25, 0x6, -0x13c],
            's': [0x4, 0x2, 0xa]
        }, {
            'p': [0x6b, 0x6, -0x141],
            's': [0x4, 0x2, 0xc]
        }, {
            'p': [0x63, 0x6, -0x145],
            's': [0xc, 0x4, 0x4]
        }, {
            'p': [0x4c, 0x0, -0x145],
            's': [0xe, 0x2, 0x4]
        }, {
            'p': [0x9, 0x2f, -0xab],
            's': [0x4, 0x4, 0xe],
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [0x55, -0x1, -0xe2],
            's': [0x6, 0x2, 0x4],
            'l': 0x1
        }, {
            'p': [0x41, -0x1, -0xc8],
            's': [0x6, 0x2, 0x4],
            'l': 0x1
        }, {
            'p': [-0x7c, 0x3d, -0x72],
            's': [0x16, 0x4, 0x4],
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [0x16, 0x2d, -0x15f],
            's': [0x6, 0xe, 0x2],
            'l': 0x1,
            'c': 0x0
        }, {
            'p': [0x33, 0x2d, -0x15f],
            's': [0x6, 0xe, 0x2],
            'l': 0x1,
            'c': 0x0
        }, {
            'p': [0x4f, 0x2d, -0x15f],
            's': [0x6, 0xe, 0x2],
            'l': 0x1,
            'c': 0x0
        }, {
            'p': [-0x3f, 0x44, -0x1c8],
            's': [0x2, 0x2, 0xe],
            'l': 0x1,
            'r': [-0.7, 0x0, 0x0],
            't': 0x2
        }, {
            'p': [-0x73, 0x39, -0x72],
            's': [0xe, 0x2, 0x2],
            'l': 0x1,
            'r': [0x0, 0x0, -0.7],
            't': 0x2
        }, {
            'p': [0x5b, 0x4d, -0xaf],
            's': [0x64, 0x2, 0x2c],
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [0x6b, 0xa, -0x1d5],
            's': [0xc, 0xc, 0xc],
            'i': 0x1
        }, {
            'p': [0xcb, -0x1c, -0x19d],
            's': [0x5b, 0x56, 0x10],
            'bo': 0x1
        }, {
            'p': [0xa5, 0x3a, -0x19d],
            's': [0xb, 0x6, 0x10],
            'l': 0x1
        }, {
            'p': [0xb3, 0x10, -0x1cd],
            's': [0x14, 0x2, 0x4]
        }, {
            'p': [0x158, 0x32, -0xc4],
            's': [0xc, 0x3, 0x12],
            'l': 0x1,
            'c': '#b1b1b1'
        }, {
            'p': [0x154, 0x32, -0xa0],
            's': [0x4, 0x2, 0x12],
            'l': 0x1,
            'c': '#b9b9b9'
        }, {
            'p': [0x154, 0x32, -0x7b],
            's': [0x4, 0x4, 0x16],
            'l': 0x1,
            'c': '#b9b9b9'
        }, {
            'p': [0x142, -0x1, -0x191],
            's': [0x14, 0x2, 0x60],
            'c': 0xa7a7a7,
            't': 0x1
        }, {
            'p': [0x90, 0x3a, -0x126],
            's': [0x19, 0x4, 0xe],
            'l': 0x1
        }, {
            'p': [0x131, 0x2d, -0x12d],
            's': [0xe, 0x2, 0x2],
            'l': 0x1,
            'r': [0x0, 0x0, -0.7],
            't': 0x2
        }, {
            'p': [0x55, 0x3e, -0x1c5],
            's': [0x2, 0x2, 0xe],
            'l': 0x1,
            'r': [-0.7, 0x0, 0x0],
            't': 0x2
        }, {
            'p': [-0x16, 0x41, -0x20b],
            's': [0x12, 0x4, 0x4],
            'l': 0x1
        }, {
            'p': [0x10, 0x41, -0x20b],
            's': [0x14, 0x2, 0x4],
            'l': 0x1
        }, {
            'p': [-0x92, 0x0, -0x1db],
            's': [0x8, 0x1a, 0x2],
            'i': 0x3,
            't': 0x2,
            'd': 0x1
        }, {
            'p': [-0xd2, 0x0, -0x114],
            's': [0x4c, 0x5, 0x2],
            'c': 0xc8c8c8
        }, {
            'p': [-0xd2, 0x0, -0x11c],
            's': [0x4c, 0x4, 0xe],
            'l': 0x1,
            'c': 0x1d3d5a,
            'o': 0.8,
            't': 0x5
        }, {
            'p': [-0xfd, 0x0, -0x10d],
            's': [0x4, 0x2, 0x6],
            'l': 0x1
        }, {
            'p': [-0xaf, 0x0, -0x10e],
            's': [0x6, 0x8, 0x6],
            'i': 0x2
        }, {
            'p': [-0x12e, 0x0, -0xe8],
            's': [0x6, 0x8, 0x6],
            'i': 0x2
        }, {
            'p': [-0x80, 0x0, -0x73],
            's': [0x6, 0x2, 0x42],
            't': 0x2
        }, {
            'p': [-0x79, 0x0, -0x72],
            's': [0x6, 0x2, 0x42],
            'c': 0xcacaca,
            't': 0x2
        }, {
            'p': [-0x84, 0x2, -0x71],
            's': [0x6, 0x2, 0x42],
            't': 0x2
        }, {
            'p': [-0x7d, 0x2, -0x72],
            's': [0x6, 0x2, 0x42],
            't': 0x2
        }, {
            'p': [-0x80, 0x4, -0x70],
            's': [0x6, 0x2, 0x42],
            'c': 0xc0c0c0,
            't': 0x2
        }, {
            'p': [-0x87, 0x0, -0x70],
            's': [0x6, 0x2, 0x42],
            'c': 0xbbbbbb,
            't': 0x2
        }, {
            'p': [-0x84, 0x26, -0x72],
            's': [0x1, 0x19, 0x1],
            'l': 0x1,
            'c': 0xb1b1b1,
            't': 0x2
        }, {
            'p': [-0xc4, 0x2e, -0xbf],
            's': [0x22, 0x1f, 0x4c],
            'bo': 0x1
        }, {
            'p': [-0xb7, 0x28, -0x9d],
            's': [0x2, 0x6, 0x2],
            'l': 0x1,
            'c': 0x343434,
            't': 0x5
        }, {
            'p': [-0xc0, 0x2a, -0x9d],
            's': [0x2, 0x6, 0x2],
            'l': 0x1,
            'c': 0x343434,
            't': 0x5
        }, {
            'p': [-0xc9, 0x29, -0x9d],
            's': [0x2, 0x6, 0x2],
            'l': 0x1,
            'c': 0x343434,
            't': 0x5
        }, {
            'p': [-0xd1, 0x28, -0x9d],
            's': [0x2, 0x6, 0x2],
            'l': 0x1,
            'c': 0x343434,
            't': 0x5
        }, {
            'p': [-0xc0, 0x29, -0xe3],
            's': [0x2, 0x6, 0x2],
            'l': 0x1,
            'c': 0x343434,
            't': 0x5
        }, {
            'p': [-0xb7, 0x28, -0xe3],
            's': [0x2, 0x6, 0x2],
            'l': 0x1,
            'c': 0x343434,
            't': 0x5
        }, {
            'p': [-0xc9, 0x2a, -0xe3],
            's': [0x2, 0x4, 0x2],
            'l': 0x1,
            'c': 0x343434,
            't': 0x5
        }, {
            'p': [-0xd1, 0x28, -0xe3],
            's': [0x2, 0x6, 0x2],
            'l': 0x1,
            'c': 0x343434,
            't': 0x5
        }, {
            'p': [-0x1ba, 0x0, 0x9d],
            's': [0x3e, 0xce, 0x48],
            'l': 0x1
        }, {
            'p': [-0x1a2, 0xce, 0x81],
            's': [0xe, 0x6, 0x10],
            'l': 0x1
        }, {
            'p': [-0x19e, 0xce, 0x9d],
            's': [0x6, 0x6, 0x16],
            'l': 0x1
        }, {
            'p': [-0x19e, 0xce, 0xba],
            's': [0x6, 0x4, 0xe],
            'l': 0x1
        }, {
            'p': [-0x1bc, 0xce, 0x7b],
            's': [0x14, 0x6, 0x4],
            'l': 0x1
        }, {
            'p': [-0x1d4, 0xce, 0x7b],
            's': [0xa, 0x6, 0x4],
            'l': 0x1
        }, {
            'p': [-0x1ba, 0xa3, 0x79],
            's': [0x8, 0x14, 0x2],
            'l': 0x1,
            'c': 0x0
        }, {
            'p': [-0xb2, 0xd, 0x5d],
            's': [0x4, 0x4a, 0x4],
            't': 0x2
        }, {
            'p': [-0xfe, 0xd, 0x5d],
            's': [0x4, 0x4a, 0x4],
            't': 0x2
        }, {
            'p': [-0x13, 0x40, 0x4a],
            's': [0x3c, 0xc, 0x26],
            'bo': 0x1
        }, {
            'p': [0x7b, 0x4c, 0x39],
            's': [0x1c, 0x4, 0x4],
            'l': 0x1
        }, {
            'p': [0x46, 0x4c, 0x39],
            's': [0x22, 0x2, 0x4],
            'l': 0x1
        }, {
            'p': [0x15, 0x4c, 0x39],
            's': [0x1a, 0x4, 0x4],
            'l': 0x1
        }, {
            'p': [-0x29, 0x4c, 0x39],
            's': [0xc, 0x2, 0x4],
            'l': 0x1
        }, {
            'p': [-0x4b, 0x4c, 0x39],
            's': [0x10, 0x2, 0x4],
            'l': 0x1
        }, {
            'p': [-0x7f, 0x4c, 0x39],
            's': [0x1a, 0x4, 0x4],
            'l': 0x1
        }, {
            'p': [-0x13, 0x0, 0x49],
            's': [0x3c, 0x40, 0x2],
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [-0x2e, 0x12, 0x3d],
            's': [0x6, 0x8, 0x6],
            'i': 0x2
        }, {
            'p': [-0xd, 0x20, 0x47],
            's': [0x4, 0x4, 0x2],
            'l': 0x1,
            'c': 0x2f2f2f,
            't': 0x5,
            'bo': 0x1
        }, {
            'p': [-0x1a, 0x20, 0x47],
            's': [0x4, 0x4, 0x2],
            'l': 0x1,
            'c': 0x2f2f2f,
            't': 0x5,
            'bo': 0x1
        }, {
            'p': [0x13, 0x3f, 0x30],
            's': [0x4, 0x4, 0x10],
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [-0x38, 0x3f, 0x30],
            's': [0x4, 0x4, 0x10],
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [-0x38, 0x3b, 0x35],
            's': [0x2, 0x2, 0xc],
            'l': 0x1,
            'r': [0.87, 0x0, 0x0],
            't': 0x2
        }, {
            'p': [0x13, 0x3b, 0x35],
            's': [0x2, 0x2, 0xc],
            'l': 0x1,
            'r': [0.87, 0x0, 0x0],
            't': 0x2
        }, {
            'p': [-0x8b, 0x12d, 0x195],
            's': [0x6e, 0x42, 0x56],
            't': 0x5
        }, {
            'p': [-0x49, 0x119, 0x169],
            's': [0x46, 0x2a, 0x38],
            't': 0x5
        }, {
            'p': [-0x20f, 0x19c, 0x175],
            's': [0x92, 0x5a, 0x74],
            't': 0x5
        }, {
            'p': [-0x23b, 0x171, 0x129],
            's': [0x76, 0x48, 0x5e],
            't': 0x5
        }, {
            'p': [0x2a1, 0x13f, 0x78],
            's': [0x6e, 0x42, 0x56],
            't': 0x5
        }, {
            'p': [0x1e5, 0x151, 0xe2],
            's': [0x92, 0x58, 0xc6],
            't': 0x5
        }, {
            'p': [0x14e, 0x151, 0x5f],
            's': [0x3a, 0x1e, 0x61],
            'l': 0x1,
            't': 0x5
        }, {
            'p': [-0x362, 0x143, -0x115],
            's': [0x92, 0x5a, 0xc4],
            'l': 0x1,
            't': 0x5
        }, {
            'p': [-0x39e, 0x12f, -0x204],
            's': [0x7a, 0x4c, 0xa0],
            'l': 0x1,
            't': 0x5
        }, {
            'p': [-0x7ce, 0x168, -0x23],
            's': [0x104, 0x4c, 0x170],
            'l': 0x1,
            't': 0x5
        }, {
            'p': [0x639, 0x18d, -0x8c],
            's': [0xda, 0x84, 0x100],
            't': 0x5
        }, {
            'p': [0x639, 0x179, -0x10b],
            's': [0x76, 0x48, 0x5c],
            't': 0x5
        }, {
            'p': [-0x82, 0xea, -0x392],
            's': [0x92, 0x5a, 0x74],
            't': 0x5
        }, {
            'p': [-0x2e, 0xcc, -0x3b8],
            's': [0x76, 0x4a, 0x5e],
            't': 0x5
        }, {
            'p': [0x62, 0xcc, -0x3b8],
            's': [0x60, 0x26, 0x30],
            'l': 0x1,
            't': 0x5
        }, {
            'p': [0x2df, 0x16b, -0x4e1],
            's': [0xe0, 0x68, 0xb2],
            't': 0x5
        }, {
            'p': [0xba, 0x107, 0x1f4],
            's': [0x68, 0x3a, 0x70],
            'l': 0x1,
            't': 0x5
        }, {
            'p': [0x51, 0x107, 0x1f4],
            's': [0x30, 0x1c, 0x34],
            'l': 0x1,
            't': 0x5
        }, {
            'p': [-0x231, 0xcc, -0x353],
            's': [0x76, 0x4a, 0x5e],
            't': 0x5
        }, {
            'p': [-0x16, -0x1c, -0x206],
            's': [0x6, 0x8, 0x6],
            'i': 0x2
        }, {
            'p': [-0x22, -0x10, -0x206],
            's': [0x6, 0x8, 0x6],
            'i': 0x2
        }, {
            'p': [-0x1f, -0x1c, -0x203],
            's': [0xc, 0xc, 0xc],
            'i': 0x1
        }, {
            'p': [0x3c, -0x1c, -0x1a9],
            's': [0xc, 0xc, 0xc],
            'i': 0x1
        }, {
            'p': [0x3f, -0x1c, -0x203],
            's': [0xc, 0xc, 0xc],
            'i': 0x1
        }, {
            'p': [0x3f, -0x1c, -0x1f7],
            's': [0xc, 0xc, 0xc],
            'i': 0x1
        }, {
            'p': [0x36, -0x1c, -0x206],
            's': [0x6, 0x8, 0x6],
            'i': 0x2
        }, {
            'p': [0xda, 0x46, -0x21d],
            's': [0x2, 0xe, 0x6],
            'l': 0x1,
            'c': 0x0
        }, {
            'p': [-0xd, 0x4c, 0x39],
            's': [0xa, 0x4, 0x4],
            'l': 0x1
        }, {
            'p': [-0x13, 0x46, 0x66],
            's': [0xdc, 0x28, 0x3a],
            'c': 0xbbbbbb,
            'bo': 0x1
        }, {
            'p': [0x59, 0x6e, 0x6c],
            's': [0x4, 0x4, 0x12],
            'l': 0x1,
            'c': 0xd2cbcb
        }, {
            'p': [-0x77, 0x6e, 0x50],
            's': [0x14, 0x4, 0xe],
            'l': 0x1,
            'c': 0xbbbbbb
        }, {
            'p': [0x24, 0x6e, 0x4b],
            's': [0x10, 0x4, 0x4],
            'l': 0x1,
            'c': 0xbebcbc
        }, {
            'p': [-0x2, 0x6e, 0x4b],
            's': [0x18, 0x2, 0x4],
            'l': 0x1,
            'c': 0xc0bcbc
        }, {
            'p': [-0x4e, 0x6e, 0x4b],
            's': [0xe, 0x2, 0x4],
            'l': 0x1,
            'c': 0x9d9d9d
        }, {
            'p': [-0x2c, 0x6e, 0x4b],
            's': [0xe, 0x4, 0x4],
            'l': 0x1,
            'c': 0xc5c5c5
        }, {
            'p': [0x51, 0x6e, 0x50],
            's': [0x14, 0x4, 0xe],
            'l': 0x1,
            'c': 0xbbbbbb
        }, {
            'p': [-0x7f, 0x6e, 0x6c],
            's': [0x4, 0x4, 0x12],
            'l': 0x1,
            'c': 0xb1b1b1
        }, {
            'p': [-0x79, 0x63, 0x46],
            's': [0x4, 0x4, 0x8],
            't': 0x2
        }, {
            'p': [0x52, 0x63, 0x46],
            's': [0x4, 0x4, 0x8],
            't': 0x2
        }, {
            'p': [0x5c, 0x63, 0x52],
            's': [0xc, 0x4, 0x4],
            't': 0x2
        }, {
            'p': [-0x83, 0x63, 0x52],
            's': [0xa, 0x4, 0x4],
            't': 0x2
        }, {
            'p': [0x124, 0x2d, -0x71],
            's': [0x3c, 0x2, 0x14],
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [0x108, 0x0, -0x79],
            's': [0x2, 0x31, 0x2],
            't': 0x2
        }, {
            'p': [0xc, -0x1c, -0x1cd],
            's': [0x6, 0x8, 0x6],
            'i': 0x2
        }, {
            'p': [0x8a, -0x1c, -0x1c8],
            's': [0x6, 0x8, 0x6],
            'i': 0x2
        }, {
            'p': [0x14, 0x30, -0x1b1],
            's': [0x1c, 0x4, 0xe],
            'l': 0x1
        }, {
            'p': [0x14, 0x30, -0x1c5],
            's': [0x1c, 0x2, 0xa],
            'l': 0x1
        }, {
            'p': [0xa1, -0x1c, -0x1a8],
            's': [0x4, 0x2a, 0x6]
        }, {
            'p': [-0x6d, 0x28, -0x194],
            's': [0x4, 0x4, 0xe],
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [-0x6d, 0x25, -0x190],
            's': [0x2, 0x2, 0xe],
            'l': 0x1,
            'r': [0.7, 0x0, 0x0],
            't': 0x2
        }, {
            'p': [0x14, 0x22, -0x1cd],
            's': [0x4, 0x4, 0x14],
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [0x14, 0x20, -0x1cd],
            's': [0x2, 0x2, 0xc],
            'l': 0x1,
            'r': [0.87, 0x0, 0x0],
            't': 0x2
        }, {
            'p': [0x15, -0x1c, -0x1d0],
            's': [0xc, 0xc, 0xc],
            'i': 0x1
        }, {
            'p': [0x15, -0x10, -0x1d0],
            's': [0xc, 0xc, 0xc],
            'i': 0x1
        }, {
            'p': [-0xfd, 0x39, -0x22f],
            's': [0x4a, 0x20, 0x2],
            'c': 0x695b48,
            't': 0x5
        }, {
            'p': [-0x11e, 0x34, -0x232],
            's': [0x4, 0x28, 0x4],
            't': 0x2
        }, {
            'p': [-0xdd, 0x34, -0x232],
            's': [0x4, 0x28, 0x4],
            't': 0x2
        }, {
            'p': [0x104, 0x33, -0x238],
            's': [0x4a, 0x20, 0x2],
            'c': 0x705b4d,
            't': 0x5
        }, {
            'p': [0x104, 0x43, -0x236],
            's': [0x45, 0x0, 0x1d],
            'i': 0xb,
            'l': 0x1,
            'r': [1.57, 0x0, 0x0]
        }, {
            'p': [-0x102, 0x45, -0x12],
            's': [0x2, 0x1a, 0x3e],
            'c': 0x695743,
            't': 0x5
        }, {
            'p': [-0x100, 0x52, -0x12],
            's': [0x39, 0x0, 0x17],
            'i': 0xb,
            'l': 0x1,
            'r': [1.57, 0x0, 1.57]
        }, {
            'p': [0x48, 0x0, -0x115],
            's': [0x40, 0x29, 0x5a],
            'i': 0xe,
            'l': 0x1
        }, {
            'p': [-0x11b, 0xa, -0x1f9],
            's': [0x45, 0x29, 0x4e],
            'i': 0xe,
            'l': 0x1
        }, {
            'p': [0xae, 0xa, -0x1f8],
            's': [0x8e, 0x29, 0x4e],
            'i': 0xe,
            'l': 0x1
        }, {
            'p': [-0x88, 0x12, -0x10],
            's': [0x3b, 0x29, 0x31],
            'i': 0xe,
            'l': 0x1
        }, {
            'p': [0x150, 0x4f, -0x12f],
            's': [0x36, 0x2, 0x6e],
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [0x138, 0x3c, -0xfb],
            's': [0x4, 0x19, 0x4],
            't': 0x2
        }, {
            'p': [0x138, 0x3e, -0x163],
            's': [0x4, 0x19, 0x4],
            't': 0x2
        }, {
            'p': [0x168, 0x3d, -0x163],
            's': [0x4, 0x18, 0x4],
            't': 0x2
        }, {
            'p': [0x168, 0x3d, -0xfb],
            's': [0x4, 0x1a, 0x4],
            't': 0x2
        }, {
            'p': [0x101, 0x2f, -0x160],
            's': [0x12, 0x4, 0x4],
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [0xfc, 0x2c, -0x160],
            's': [0xe, 0x2, 0x2],
            'l': 0x1,
            'r': [0x0, 0x0, 0.7],
            't': 0x2
        }, {
            'p': [0xd5, 0x0, -0x61],
            's': [0xc, 0xc, 0xc],
            'i': 0x1
        }, {
            'p': [0xd2, 0x38, -0x124],
            's': [0x6, 0x1e, 0x6],
            't': 0x2
        }, {
            'p': [0xf3, 0x38, -0x146],
            's': [0x6, 0x1d, 0x6],
            't': 0x2
        }, {
            'p': [0xd2, 0x38, -0x146],
            's': [0x6, 0x1a, 0x6],
            't': 0x2
        }, {
            'p': [0xe3, 0x4d, -0x135],
            's': [0x2a, 0x2, 0x2b],
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [0x89, 0x38, -0x124],
            's': [0x6, 0x16, 0x6],
            't': 0x2
        }, {
            'p': [-0xb, -0x1c, -0x202],
            's': [0x6, 0x2, 0x4],
            'l': 0x1
        }, {
            'p': [0x115, 0xa, -0x21c],
            's': [0x8, 0x1, 0x4],
            'l': 0x1
        }, {
            'p': [0x2, -0x1c, -0x1c0],
            's': [0x6, 0x2, 0x4],
            'l': 0x1
        }, {
            'p': [-0x93, 0x3e, -0x105],
            's': [0x4, 0xc, 0x4],
            't': 0x2
        }, {
            'p': [-0xa9, 0x3e, -0x105],
            's': [0x4, 0xf, 0x4],
            't': 0x2
        }, {
            'p': [-0xa9, 0x3e, -0x11e],
            's': [0x4, 0xb, 0x4],
            't': 0x2
        }, {
            'p': [-0x93, 0x3e, -0x11f],
            's': [0x4, 0xd, 0x4],
            't': 0x2
        }, {
            'p': [-0x9e, 0x46, -0x112],
            's': [0x1c, 0x1, 0x20],
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [-0x76, 0x3d, -0xc5],
            's': [0x30, 0x57, 0x2f],
            'c': 0xa7a7a7
        }, {
            'p': [-0x77, 0x60, -0xc5],
            's': [0x55, 0x2, 0x2e],
            't': 0x2
        }, {
            'p': [-0x9f, 0x48, -0xda],
            's': [0x3, 0x1e, 0x3],
            't': 0x2
        }, {
            'p': [-0x8f, 0x48, -0xda],
            's': [0x3, 0x1c, 0x3],
            't': 0x2
        }, {
            'p': [-0x8f, 0x48, -0xb0],
            's': [0x3, 0x1d, 0x3],
            't': 0x2
        }, {
            'p': [-0x9f, 0x48, -0xb0],
            's': [0x3, 0x1c, 0x3],
            't': 0x2
        }, {
            'p': [0x107, 0x23, -0x160],
            's': [0x1, 0xd, 0x1],
            'l': 0x1,
            'c': 0xb1b1b1,
            't': 0x2
        }, {
            'p': [-0x6d, 0x1c, -0x199],
            's': [0x1, 0xd, 0x1],
            'l': 0x1,
            'c': 0xb1b1b1,
            't': 0x2
        }, {
            'p': [-0xae, 0x0, -0x1d8],
            's': [0x6, 0x1, 0x4],
            'l': 0x1
        }, {
            'p': [-0x93, 0x12, 0x34],
            's': [0x6, 0x1, 0x5],
            'l': 0x1
        }, {
            'p': [0xc8, 0xdc, -0x38f],
            's': [0xae, 0x4a, 0x9b],
            't': 0x5
        }, {
            'p': [0x5c, 0x4c, -0x164],
            's': [0x6, 0x11, 0x6],
            'l': 0x1,
            't': 0x2
        }, {
            'p': [-0x30, 0x3b, -0x169],
            's': [0x6, 0xe, 0x6],
            'l': 0x1,
            't': 0x2
        }, {
            'p': [0xe4, 0x30, -0x89],
            's': [0xa, 0x3, 0xb],
            'l': 0x1
        }, {
            'p': [0x25, 0x0, -0xa0],
            's': [0x8, 0xd, 0x4]
        }, {
            'p': [0x1d, 0x0, -0xa0],
            's': [0x8, 0x6, 0x4]
        }, {
            'p': [0x7, 0x0, -0xad],
            's': [0x4, 0x1, 0x4],
            'l': 0x1
        }, {
            'p': [-0x4f, 0x42, -0xda],
            's': [0x3, 0x21, 0x3],
            't': 0x2
        }, {
            'p': [-0x4f, 0x54, -0xb1],
            's': [0x3, 0x11, 0x3],
            't': 0x2
        }, {
            'p': [-0x5d, 0x54, -0xb1],
            's': [0x3, 0x11, 0x3],
            't': 0x2
        }, {
            'p': [-0x5d, 0x42, -0xda],
            's': [0x3, 0x23, 0x3],
            't': 0x2
        }, {
            'p': [-0x60, 0x94, -0xc5],
            's': [0x4, 0x3, 0xb],
            'l': 0x1,
            'c': 0xa7a7a7
        }, {
            'p': [-0x8c, 0x94, -0xca],
            's': [0x4, 0x3, 0xf],
            'l': 0x1,
            'c': 0x898989
        }, {
            'p': [-0x89, 0x94, -0xb2],
            's': [0xa, 0x3, 0x9],
            'l': 0x1,
            'c': 0xafafaf
        }, {
            'p': [-0x63, 0x94, -0xb2],
            's': [0xa, 0x3, 0x9],
            'l': 0x1,
            'c': 0xb6b2b2
        }, {
            'p': [-0x63, 0x94, -0xd8],
            's': [0xa, 0x4, 0x9],
            'l': 0x1,
            'c': 0xa7a7a7
        }, {
            'p': [-0x75, 0x94, -0xda],
            's': [0xc, 0x2, 0x5],
            'l': 0x1,
            'c': 0xb6b6b6
        }, {
            'p': [-0x8a, 0x94, -0xd9],
            's': [0x8, 0x3, 0x7],
            'l': 0x1,
            'c': 0x9b9b9b
        }, {
            'p': [-0x78, 0x94, -0xb0],
            's': [0x9, 0x2, 0x5],
            'l': 0x1,
            'c': 0xafafaf
        }, {
            'p': [-0x76, 0x75, -0xc5],
            's': [0x32, 0x10, 0x5],
            'l': 0x1,
            'c': 0x0
        }, {
            'p': [-0x76, 0x75, -0xc5],
            's': [0x5, 0x10, 0x31],
            'l': 0x1,
            'c': 0x0
        }, {
            'p': [-0x2b, 0x2b, -0x12a],
            's': [0x12, 0x4, 0x4],
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [-0x30, 0x27, -0x12a],
            's': [0xe, 0x2, 0x2],
            'l': 0x1,
            'r': [0x0, 0x0, 0.7],
            'c': 0xe6e6e6,
            't': 0x2
        }, {
            'p': [-0x25, 0x1f, -0x12a],
            's': [0x1, 0xd, 0x1],
            'l': 0x1,
            'c': 0xb1b1b1,
            't': 0x2
        }, {
            'p': [-0xd4, 0x32, -0x3f],
            's': [0xe, 0x4, 0x4],
            't': 0x2
        }, {
            'p': [-0xa6, 0x0, -0x96],
            's': [0x6, 0x8, 0x6],
            'i': 0x2
        }, {
            'p': [0x16, 0x2a, -0x15e],
            's': [0x9, 0x3, 0x3],
            'c': 0xe3e3e3,
            'bo': 0x1
        }, {
            'p': [0x33, 0x2a, -0x15e],
            's': [0x9, 0x3, 0x3],
            'bo': 0x1
        }, {
            'p': [0x4f, 0x2a, -0x15e],
            's': [0x9, 0x3, 0x3],
            'bo': 0x1
        }, {
            'p': [0xb7, 0x43, -0x1fd],
            's': [0x9, 0x3, 0x3],
            'bo': 0x1
        }, {
            'p': [0xcb, 0x43, -0x1fd],
            's': [0x9, 0x3, 0x3],
            'bo': 0x1
        }, {
            'p': [0xa2, 0x43, -0x1fd],
            's': [0x9, 0x3, 0x3],
            'bo': 0x1
        }, {
            'p': [-0x36, 0x0, -0x73],
            's': [0x4, 0x7, 0x4],
            'i': 0x10
        }, {
            'p': [-0x36, 0x0, -0x79],
            's': [0x4, 0x7, 0x4],
            'i': 0x10
        }, {
            'p': [0x8, 0x12, 0x45],
            's': [0x4, 0x7, 0x4],
            'i': 0x10
        }, {
            'p': [0x132, 0x0, -0x141],
            's': [0x4, 0x7, 0x4],
            'i': 0x10
        }, {
            'p': [0xfb, 0x0, -0x160],
            's': [0x4, 0x7, 0x4],
            'i': 0x10
        }, {
            'p': [-0xa0, 0x0, -0x96],
            's': [0x4, 0x7, 0x4],
            'i': 0x10
        }, {
            'p': [-0x9a, 0x0, -0x96],
            's': [0x4, 0x7, 0x4],
            'i': 0x10
        }, {
            'p': [0x47, 0x0, -0x159],
            's': [0xc, 0xc, 0xc],
            'i': 0x1
        }, {
            'p': [-0x77, 0x12, -0x27],
            's': [0x4, 0x7, 0x4],
            'i': 0x10
        }, {
            'p': [-0x49, 0x11, 0x10],
            's': [0x5, 0x2, 0x4],
            'l': 0x1
        }, {
            'p': [-0x74, 0x0, -0xe9],
            's': [0x4, 0x2, 0x6],
            'l': 0x1
        }, {
            'p': [-0xa9, 0x3e, -0x189],
            's': [0x6, 0xc, 0x6],
            'l': 0x1,
            't': 0x2
        }, {
            'p': [0xae, 0x0, -0x1c],
            's': [0x4, 0x7, 0x4],
            'i': 0x10
        }, {
            'p': [0xae, 0x0, -0x17],
            's': [0x4, 0x7, 0x4],
            'i': 0x10
        }, {
            'p': [0xb0, 0x0, -0x10],
            's': [0x2, 0x13, 0x4],
            't': 0x2
        }, {
            'p': [0x70, 0x0, -0xd1],
            's': [0x39, 0x1a, 0x19],
            'i': 0x11
        }, {
            'p': [0x37, -0x1, -0xff],
            's': [0x6, 0x3, 0x4],
            'l': 0x1
        }, {
            'p': [0x38, 0x0, -0xf9],
            's': [0x4, 0x7, 0x4],
            'i': 0x10
        }, {
            'p': [0x3e, 0x0, -0x15c],
            's': [0x4, 0x7, 0x4],
            'i': 0x10
        }, {
            'p': [0x56, 0x0, -0x129],
            's': [0x4, 0x7, 0x4],
            'i': 0x10
        }, {
            'p': [0x56, 0x0, -0x124],
            's': [0x4, 0x7, 0x4],
            'i': 0x10
        }, {
            'p': [-0xdc, 0x0, -0x68],
            's': [0x39, 0x1a, 0x19],
            'i': 0x11,
            'l': 0x1,
            'r': [0x0, 1.57, 0x0]
        }, {
            'p': [-0xe3, 0x0, -0x8b],
            's': [0xc, 0xc, 0xc],
            'i': 0x8
        }, {
            'p': [0x4e, 0x0, -0xcb],
            's': [0xc, 0xc, 0xc],
            'i': 0x8
        }, {
            'p': [-0xad, 0x0, -0x46],
            's': [0x4, 0x1, 0x4],
            'l': 0x1
        }, {
            'p': [0xa9, 0x0, 0x11],
            's': [0x6, 0x2, 0x8],
            'l': 0x1
        }, {
            'p': [0x93, 0x0, 0x1c],
            's': [0x6, 0x8, 0x6],
            'i': 0x2
        }, {
            'p': [0x121, 0xa, -0x21e],
            's': [0x4, 0x7, 0x4],
            'i': 0x10
        }, {
            'p': [0x127, 0xa, -0x21e],
            's': [0x4, 0x7, 0x4],
            'i': 0x10
        }, {
            'p': [-0xb5, 0x0, -0x1d9],
            's': [0x4, 0x7, 0x4],
            'i': 0x10
        }, {
            'p': [-0x34, 0x15, -0x10d],
            's': [0x1, 0xf, 0x6],
            'l': 0x1,
            'c': 0x0
        }, {
            'p': [-0x34, 0x1d, -0xda],
            's': [0x1, 0xf, 0x6],
            'l': 0x1,
            'c': 0x0
        }, {
            'p': [-0x35, 0x12, -0x10d],
            's': [0x6, 0x3, 0x9],
            'l': 0x1,
            'c': 0xe3e3e3
        }, {
            'p': [-0x35, 0x1a, -0xda],
            's': [0x6, 0x3, 0x9],
            'l': 0x1,
            'c': 0xe3e3e3
        }, {
            'p': [0xd9, 0x43, -0x21d],
            's': [0x6, 0x3, 0x9],
            'c': 0xe3e3e3,
            'bo': 0x1
        }, {
            'p': [0x130, 0x4c, -0x206],
            's': [0x6, 0x3, 0x9],
            'c': 0xb1b1b1,
            'bo': 0x1
        }, {
            'p': [0x5a, 0x2c, -0xc3],
            's': [0x10, 0x2, 0x4],
            'l': 0x1
        }, {
            'p': [0x7f, 0x2c, -0xc3],
            's': [0x1a, 0x4, 0x4],
            'l': 0x1
        }, {
            'p': [0x42, 0x2c, -0xc3],
            's': [0xc, 0x3, 0x4],
            'l': 0x1
        }, {
            'p': [-0x13d, 0x0, -0x19f],
            's': [0x4, 0x7, 0x4],
            'i': 0x10
        }, {
            'p': [-0x35, 0x0, -0x9f],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'c': '#d5e371'
        }, {
            'p': [-0x36, 0x0, -0xa9],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [-3.14, 1.04, -3.14],
            'c': '#d5e371'
        }, {
            'p': [0x24, 0x0, -0xa5],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [0x0, -0.87, 0x0],
            'c': '#d5e371'
        }, {
            'p': [0x25, 0x0, -0xaf],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [0x0, 0.18, 0x0],
            'c': '#d5e371'
        }, {
            'p': [0x5, 0x0, -0xbc],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [-3.14, -0.09, -3.14],
            'c': '#d5e371'
        }, {
            'p': [-0x2a, 0x0, -0x39],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [0x0, 0.18, 0x0],
            'c': '#c9d47c'
        }, {
            'p': [-0x9, 0x0, 0x2],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [0x0, 0.18, 0x0],
            'c': '#c9d47c'
        }, {
            'p': [-0x13, 0x0, -0x1a],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [0x0, 0.18, 0x0],
            'c': '#c9d47c'
        }, {
            'p': [0x15, 0x0, -0x15a],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [0x0, -0.87, 0x0]
        }, {
            'p': [0x3b, 0x0, -0x158],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [0x0, -0.17, 0x0]
        }, {
            'p': [0x50, 0x0, -0xd4],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [0x0, -0.17, 0x0]
        }, {
            'p': [0x1d, 0x0, -0x15a],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [0x0, -0.52, 0x0]
        }, {
            'p': [0x81, 0x0, -0x11e],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [0x0, -0.17, 0x0]
        }, {
            'p': [0x65, 0x0, -0x13e],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [0x0, -0.17, 0x0]
        }, {
            'p': [0x3b, 0x0, -0xf3],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [0x0, -1.04, 0x0]
        }, {
            'p': [0x8b, 0x0, -0xe7],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [0x0, -0.17, 0x0]
        }, {
            'p': [-0x2a, -0x1c, -0x163],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [0x0, 0.18, 0x0]
        }, {
            'p': [-0x5, -0x1c, -0x15b],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [0x0, -0.52, 0x0]
        }, {
            'p': [-0x56, -0x1c, -0x145],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [0x0, -0.34, 0x0]
        }, {
            'p': [-0x104, 0x0, -0x10d],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1
        }, {
            'p': [-0x12a, 0x0, -0xec],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1
        }, {
            'p': [-0x133, 0x0, -0x113],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1
        }, {
            'p': [-0xb6, 0x0, -0x10f],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [0x0, 0.52, 0x0]
        }, {
            'p': [-0xb0, 0x0, -0x108],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1
        }, {
            'p': [-0xd9, 0x0, -0x88],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [0x0, -0.7, 0x0]
        }, {
            'p': [-0xd6, 0x0, -0x48],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [0x0, -0.7, 0x0]
        }, {
            'p': [-0x93, 0x0, -0x95],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [0x0, -0.7, 0x0]
        }, {
            'p': [-0x6d, 0x0, -0x3e],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [0x0, -0.7, 0x0]
        }, {
            'p': [-0x6d, 0x12, -0x19],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [0x0, -0.7, 0x0]
        }, {
            'p': [-0xd7, 0x12, 0x13],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [0x0, -0.7, 0x0]
        }, {
            'p': [-0xe6, 0x12, 0x2b],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [0x0, 0.7, 0x0]
        }, {
            'p': [-0x2e, 0x12, 0x36],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [-3.14, 1.22, -3.14]
        }, {
            'p': [0xa, 0x12, 0x36],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [0x0, 1.57, 0x0]
        }, {
            'p': [-0x30, 0x12, 0x10],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [0x0, 0.7, 0x0]
        }, {
            'p': [0xa0, 0x0, -0x3e],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [0x0, 0.53, 0x0]
        }, {
            'p': [0xa9, 0x0, -0x1b],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [0x0, -0.86, 0x0],
            'c': '#c9d47c'
        }, {
            'p': [0xa2, 0x0, 0x14],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [0x0, -0.86, 0x0],
            'c': '#c9d47c'
        }, {
            'p': [0xad, 0x0, 0xb],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [0x0, -1.38, 0x0],
            'c': '#c9d47c'
        }, {
            'p': [0xa6, 0x0, -0x5c],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [0x0, -0.34, 0x0]
        }, {
            'p': [0x7e, 0x0, -0x96],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [0x0, -0.34, 0x0]
        }, {
            'p': [0x7f, 0x0, -0x41],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [0x0, 0.53, 0x0],
            'c': '#c9d47c'
        }, {
            'p': [0x86, 0x0, -0x46],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [0x0, -0.52, 0x0],
            'c': '#c9d47c'
        }, {
            'p': [0x80, 0x0, -0x4d],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [3.14, -1.23, 3.14],
            'c': '#c9d47c'
        }, {
            'p': [0x60, 0x0, -0x2e],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [0x0, 0.53, 0x0],
            'c': '#c9d47c'
        }, {
            'p': [0x82, 0x0, -0x47],
            's': [0x6, 0x8, 0x6],
            'i': 0x2
        }, {
            'p': [0xae, 0x0, 0x14],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [0x0, -0.86, 0x0],
            'c': '#c9d47c'
        }, {
            'p': [0xb, 0x0, 0x3],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [0x0, 0.53, 0x0],
            'c': '#c9d47c'
        }, {
            'p': [0xce, 0x0, -0xda],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [0x0, -0.34, 0x0]
        }, {
            'p': [0xd0, 0x0, -0xba],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [0x0, -0.51, 0x0]
        }, {
            'p': [0xae, 0x0, -0x9c],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [0x0, -0.51, 0x0]
        }, {
            'p': [0x65, 0x0, 0x2],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [0x0, 0.53, 0x0]
        }, {
            'p': [0xcd, 0x0, -0x117],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [0x0, -0.17, 0x0]
        }, {
            'p': [0xed, 0x0, -0x11b],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [0x0, 0.88, 0x0],
            'c': '#c9d47c'
        }, {
            'p': [0x133, -0x1, -0xf7],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [3.14, -1.41, 3.14],
            'c': '#c9d47c'
        }, {
            'p': [0xfd, 0x0, -0x6c],
            's': [0x6, 0x1, 0x6],
            'l': 0x1
        }, {
            'p': [0x132, 0x0, -0x13c],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [0x0, 0.71, 0x0],
            'c': '#c9d47c'
        }, {
            'p': [0x112, 0x0, -0x15e],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [-3.13, -1.41, -3.13]
        }, {
            'p': [0x140, 0x1, -0x1b8],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [-3.14, -0.71, -3.14]
        }, {
            'p': [0x140, 0x1, -0x1a4],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [0x0, -0.86, 0x0]
        }, {
            'p': [0x13f, 0x1, -0x1ae],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [0x0, -1.56, 0x0]
        }, {
            'p': [0x142, 0x1, -0x174],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [0x0, -1.04, 0x0]
        }, {
            'p': [0x13e, 0x1, -0x181],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [0x0, -1.39, 0x0]
        }, {
            'p': [0x146, 0x1, -0x185],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [0x0, -0.69, 0x0]
        }, {
            'p': [0x149, 0x1, -0x169],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [0x0, -0.69, 0x0]
        }, {
            'p': [0xfb, 0x0, -0x165],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [-3.14, -0.71, -3.14]
        }, {
            'p': [0x147, 0x1, -0x1a6],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [0x0, -1.39, 0x0]
        }, {
            'p': [0x13e, 0x1, -0x18b],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [3.14, -0.18, 3.14]
        }, {
            'p': [0x146, 0x1, -0x1b2],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [-0.1, -1.56, -0.1]
        }, {
            'p': [0x12d, 0xa, -0x21d],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [-3.14, -0.71, -3.14]
        }, {
            'p': [0xde, 0xa, -0x1ff],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [-3.14, -0.71, -3.14]
        }, {
            'p': [0xdd, 0xa, -0x1d3],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [-3.14, -0.71, -3.14]
        }, {
            'p': [-0x28, -0x1c, -0x16a],
            's': [0x4, 0x1, 0x6]
        }, {
            'p': [-0xd6, 0x0, -0x44],
            's': [0x2, 0x1, 0x2],
            'l': 0x1
        }, {
            'p': [-0x118, 0x0, -0x128],
            's': [0x3, 0x1, 0x4],
            'l': 0x1
        }, {
            'p': [0xc3, 0x0, -0x11c],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [0x0, -0.69, 0x0]
        }, {
            'p': [0x131, 0x0, -0x133],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [0x0, 0.88, 0x0],
            'c': '#c9d47c'
        }, {
            'p': [0xa4, -0x1c, -0x1ad],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [-3.14, -0.36, -3.14]
        }, {
            'p': [0x69, -0x1c, -0x1c8],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [-3.14, -0.88, -3.14]
        }, {
            'p': [0x81, -0x1c, -0x1c7],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [-3.14, -0.88, -3.14]
        }, {
            'p': [0xde, 0xa, -0x211],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [-3.14, -0.71, -3.14]
        }, {
            'p': [0xdc, 0xa, -0x21f],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [3.14, 0.51, -3.14]
        }, {
            'p': [0x3d, -0x1d, -0x1b3],
            's': [0x6, 0x2, 0x4],
            'l': 0x1
        }, {
            'p': [0x114, 0x0, -0x15a],
            's': [0x2, 0x1, 0x3],
            'l': 0x1
        }, {
            'p': [0x86, 0x0, -0x4d],
            's': [0x2, 0x1, 0x3],
            'l': 0x1
        }, {
            'p': [-0x9d, 0x0, -0x93],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [0x0, -1.57, 0x0]
        }, {
            'p': [-0xf7, 0x0, -0x10f],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [0x0, 0.52, 0x0]
        }, {
            'p': [0x32, -0x1c, -0x1a7],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [-3.14, -0.88, -3.14]
        }, {
            'p': [0x35, -0x1c, -0x1ff],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [-3.14, -0.71, -3.14]
        }, {
            'p': [0x31, -0x1c, -0x205],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [0x0, -0.51, 0x0]
        }, {
            'p': [-0xf, -0x1c, -0x205],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [0x0, 1.06, 0x0]
        }, {
            'p': [-0x15, -0x1c, -0x200],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [0x0, -0.16, 0x0]
        }, {
            'p': [-0x20, -0x1c, -0x1f9],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [-3.14, 1.56, -3.14]
        }, {
            'p': [0x6, -0x1c, -0x1ce],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [-3.14, 1.21, -3.14]
        }, {
            'p': [0xb, 0x0, -0xba],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [-3.14, 1.04, -3.14],
            'c': '#d5e371'
        }, {
            'p': [0x3, -0x1c, -0x13b],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [0x0, -0.52, 0x0]
        }, {
            'p': [-0x6, -0x1c, -0x13e],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [0x0, -1.39, 0x0]
        }, {
            'p': [0x2, -0x1c, -0x15b],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [0x0, -1.22, 0x0]
        }, {
            'p': [-0x43, -0x1c, -0x145],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [0x0, -0.34, 0x0]
        }, {
            'p': [0x3, -0x1c, -0x1a6],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [-3.14, 1.21, -3.14]
        }, {
            'p': [-0xbb, 0x0, -0x1dd],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [0x0, -0.7, 0x0]
        }, {
            'p': [-0x13c, 0x0, -0x170],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [0x0, -0.7, 0x0]
        }, {
            'p': [-0x13c, 0x0, -0x178],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [0x0, -1.57, 0x0]
        }, {
            'p': [-0x13b, 0x0, -0x19a],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [-3.14, -0.7, -3.14]
        }, {
            'p': [-0xaf, 0x0, -0x18e],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [3.14, -0.7, 3.14]
        }, {
            'p': [-0xba, 0x0, -0x1f3],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [3.14, -0.7, 3.14]
        }, {
            'p': [-0xf5, 0x0, -0x168],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [3.14, -0.7, 3.14]
        }, {
            'p': [-0x2, -0x1c, -0x1a1],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [-3.14, 0.16, -3.14]
        }, {
            'p': [-0xf9, 0x0, -0x1b2],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [-3.14, -0.7, -3.14]
        }, {
            'p': [-0xc2, 0x0, -0x1dc],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [3.14, -0.52, 3.14]
        }, {
            'p': [0x85, 0x0, -0xe0],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [0x0, -0.87, 0x0]
        }, {
            'p': [0x125, 0x27, -0x12d],
            's': [0x1, 0xa, 0x1],
            'l': 0x1,
            'c': 0xb1b1b1,
            't': 0x2
        }, {
            'p': [-0xa5, 0x12, -0x21],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [0x0, -0.7, 0x0]
        }, {
            'p': [0x47, 0x0, -0x112],
            's': [0x39, 0x1a, 0x19],
            'i': 0x13,
            'l': 0x1,
            'r': [0x0, 1.57, 0x0]
        }, {
            'p': [0x47, 0x0, -0x112],
            's': [0x19, 0x2, 0x39],
            'v': 0x1,
            't': 0x5
        }, {
            'p': [0x47, 0x18, -0x112],
            's': [0x19, 0x2, 0x39],
            'v': 0x1,
            't': 0x5
        }, {
            'p': [0x3b, 0x2, -0x112],
            's': [0x1, 0x16, 0x39],
            'pe': 0x1,
            'v': 0x1,
            't': 0x5
        }, {
            'p': [0x53, 0x2, -0x112],
            's': [0x1, 0x16, 0x39],
            'pe': 0x1,
            'v': 0x1,
            't': 0x5
        }, {
            'p': [0x47, -0x1, -0x112],
            's': [0x16, 0x2, 0x36],
            'c': 0x752717,
            't': 0x5
        }, {
            'p': [-0x34, -0x1c, -0x142],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [0x0, 0.53, 0x0]
        }, {
            'p': [-0x30, -0x1c, -0x13b],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [3.14, -0.7, 3.14]
        }, {
            'p': [0x57, 0x0, -0x11f],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [0x0, -0.87, 0x0]
        }, {
            'p': [0xfb, 0x0, -0x19e],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [-3.14, -0.71, -3.14]
        }, {
            'p': [0x44, 0x0, -0x72],
            's': [0xc, 0xc, 0xc],
            'i': 0x8
        }, {
            'p': [0xe4, 0x30, -0x7c],
            's': [0xa, 0x2, 0x6],
            'l': 0x1
        }, {
            'p': [0xdf, 0x0, -0x8f],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [0x0, -0.34, 0x0]
        }, {
            'p': [0x105, 0x0, -0x141],
            's': [0x39, 0x1a, 0x19],
            'i': 0x13,
            'l': 0x1,
            'r': [0x0, 1.57, 0x0]
        }, {
            'p': [0x105, 0x0, -0x141],
            's': [0x19, 0x2, 0x39],
            'v': 0x1,
            't': 0x5
        }, {
            'p': [0x105, 0x18, -0x141],
            's': [0x19, 0x2, 0x39],
            'pe': 0x1,
            'v': 0x1,
            't': 0x5
        }, {
            'p': [0x111, 0x2, -0x141],
            's': [0x1, 0x16, 0x39],
            'pe': 0x1,
            'v': 0x1,
            't': 0x5
        }, {
            'p': [0xf9, 0x2, -0x141],
            's': [0x1, 0x16, 0x37],
            'pe': 0x1,
            't': 0x5
        }, {
            'p': [0x105, 0x0, -0x141],
            's': [0x17, 0x1, 0x36],
            'c': 0x913c31,
            't': 0x5
        }, {
            'p': [0x113, 0x0, -0x123],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [-3.14, -0.19, -3.14],
            'c': '#c9d47c'
        }, {
            'p': [-0xca, 0x0, -0x1e5],
            's': [0xc, 0xc, 0xc],
            'i': 0x1
        }, {
            'p': [-0xbe, 0xc, -0x1e5],
            's': [0xc, 0xc, 0xc],
            'i': 0x1
        }, {
            'p': [-0xbb, 0x0, -0x1ee],
            's': [0x6, 0x8, 0x6],
            'i': 0x2
        }, {
            'p': [-0x9c, 0x0, -0x202],
            's': [0x39, 0x1a, 0x19],
            'i': 0x13,
            'l': 0x1
        }, {
            'p': [-0x9c, 0x0, -0x20f],
            's': [0x39, 0x34, 0x2],
            'c': 0x1b1b1b,
            't': 0x5
        }, {
            'p': [-0x99, 0x0, -0x202],
            's': [0x3f, 0x1, 0x17],
            'c': 0x1b1b1b,
            't': 0x5
        }, {
            'p': [-0xd9, 0x0, -0x220],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [3.14, -0.52, 3.14]
        }, {
            'p': [-0xbb, 0x0, -0x20c],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [3.14, -0.52, 3.14]
        }, {
            'p': [-0x9b, 0x1, -0x1f6],
            's': [0x36, 0x18, 0x2],
            'v': 0x1,
            'c': 0x1b1b1b,
            't': 0x5
        }, {
            'p': [-0x9b, 0x18, -0x202],
            's': [0x39, 0x2, 0x19],
            'pe': 0x1,
            'v': 0x1,
            'c': 0x1b1b1b,
            't': 0x5
        }, {
            'p': [-0xf5, 0x0, -0x1c5],
            's': [0x4, 0xb, 0x17]
        }, {
            'p': [0x144, -0x12, -0x9e],
            's': [0x4, 0x19, 0x50]
        }, {
            'p': [0x104, -0x12, -0x9e],
            's': [0x4, 0x19, 0x50]
        }, {
            'p': [0x124, -0xe, -0xaf],
            's': [0x3d, 0xe, 0x2c],
            'i': 0x9,
            'c': '#ffffff',
            't': 0x1,
            'd': 0x3
        }, {
            'p': [-0x131, 0xa, -0x209],
            's': [0xc, 0xc, 0xc],
            'i': 0x1
        }, {
            'p': [-0x10e, 0xa, -0x1bd],
            's': [0x6, 0x8, 0x6],
            'i': 0x2
        }, {
            'p': [-0x109, 0x0, -0x177],
            's': [0xc, 0xc, 0xc],
            'i': 0x1
        }, {
            'p': [-0xa5, 0x0, -0x194],
            's': [0xc, 0xc, 0xc],
            'i': 0x1
        }, {
            'p': [-0x113, 0x0, -0x1c5],
            's': [0x4, 0x10, 0x18]
        }, {
            'p': [0x144, 0x7, -0x96],
            's': [0x4, 0x2, 0x16]
        }, {
            'p': [0x144, 0x7, -0xb6],
            's': [0x4, 0x2, 0x10]
        }, {
            'p': [-0xf5, 0x10, -0x20a],
            's': [0x4, 0x2, 0xc]
        }, {
            'p': [-0xf5, 0x10, -0x1df],
            's': [0x4, 0x2, 0xc]
        }, {
            'p': [-0xf5, 0x0, -0x1fb],
            's': [0x4, 0x10, 0x50]
        }, {
            'p': [-0xf5, 0x0, -0x1d3],
            's': [0x5, 0x11, 0x5]
        }, {
            'p': [-0x113, 0x10, -0x1c3],
            's': [0x4, 0x2, 0xc]
        }, {
            'p': [0xe4, 0x0, -0x62],
            's': [0xa, 0x30, 0x12],
            'bo': 0x1
        }, {
            'p': [0x124, -0x1, -0x70],
            's': [0x44, 0x1, 0x16],
            't': 0x1
        }, {
            'p': [0x124, -0x12, -0x79],
            's': [0x3c, 0x13, 0x6],
            'c': '#525252',
            't': 0x5
        }, {
            'p': [0xe4, 0x14, -0x6d],
            's': [0xa, 0x1c, 0x4],
            'bo': 0x1
        }, {
            'p': [0x124, 0x24, -0x40],
            's': [0x32, 0x2, 0x50],
            'c': '#3e3e3e',
            't': 0x5,
            'bo': 0x1
        }, {
            'p': [0x124, -0x3, -0x49],
            's': [0x32, 0x4, 0x5a],
            'c': '#525252',
            't': 0x5
        }, {
            'p': [0x103, 0x0, -0x3f],
            's': [0x12, 0x25, 0x50],
            'bo': 0x1
        }, {
            'p': [0x17c, 0x0, -0x3f],
            's': [0x80, 0x25, 0x50],
            'bo': 0x1
        }, {
            'p': [0x131, 0xa, -0x45],
            's': [0x42, 0x16, 0x2],
            'l': 0x1,
            'r': [0x0, -1.57, 0x0],
            'c': '#2c3f55',
            't': 0x5
        }, {
            'p': [0x124, 0xa, -0x45],
            's': [0x42, 0x2, 0x18],
            'l': 0x1,
            'r': [0x0, -1.57, 0x0],
            'c': 0x2c3f55,
            't': 0x5
        }, {
            'p': [0x124, 0x20, -0x45],
            's': [0x42, 0x2, 0x1c],
            'l': 0x1,
            'r': [0x0, -1.57, 0x0],
            'c': '#2c3f55',
            't': 0x5
        }, {
            'p': [0x124, 0x3, -0x4e],
            's': [0x4, 0x4, 0x1b],
            'r': [0x0, -1.57, 0x0],
            'c': 0x827d7d,
            't': 0x5
        }, {
            'p': [0x12f, 0x1, -0x4e],
            's': [0x8, 0x8, 0x4],
            'r': [0x0, -1.57, 0x0],
            'c': 0x161616,
            't': 0x5
        }, {
            'p': [0x12a, 0x1, -0x4e],
            's': [0x8, 0x8, 0x4],
            'r': [0x0, -1.57, 0x0],
            'c': 0x161616,
            't': 0x5
        }, {
            'p': [0x119, 0x1, -0x4e],
            's': [0x8, 0x8, 0x4],
            'r': [0x0, -1.57, 0x0],
            'c': 0x161616,
            't': 0x5
        }, {
            'p': [0x11e, 0x1, -0x4e],
            's': [0x8, 0x8, 0x4],
            'r': [0x0, -1.57, 0x0],
            'c': 0x161616,
            't': 0x5
        }, {
            'p': [0x124, 0x6, -0x43],
            's': [0x42, 0x4, 0x5],
            'l': 0x1,
            'r': [0x0, -1.57, 0x0],
            'c': 0x827d7d,
            't': 0x5
        }, {
            'p': [0x124, 0x6, -0x65],
            's': [0x3, 0x4, 0x18],
            'l': 0x1,
            'r': [0x0, -1.57, 0x0],
            'c': 0x827d7d,
            't': 0x5
        }, {
            'p': [0x11d, 0xc, -0x66],
            's': [0x2, 0x14, 0xc],
            'l': 0x1,
            'r': [0x0, -1.57, 0x0],
            'c': '#6b6b6b',
            't': 0x5
        }, {
            'p': [0x132, 0xc, -0x61],
            's': [0xc, 0x14, 0x2],
            'l': 0x1,
            'r': [0x0, -1.57, 0x0],
            'c': '#6b6b6b',
            't': 0x5
        }, {
            'p': [0x124, 0x5, -0x65],
            's': [0x4, 0x1, 0x1b],
            'l': 0x1,
            'r': [0x0, -1.57, 0x0],
            'c': 0x827d7d,
            't': 0x5
        }, {
            'p': [0x11a, 0x7, -0x66],
            's': [0x2, 0x2, 0x2],
            'l': 0x1,
            'r': [0x0, -1.57, 0x0],
            'c': 0xff4b00,
            'e': 0xff0000,
            'o': 0.8,
            't': 0x5
        }, {
            'p': [0x12e, 0x7, -0x66],
            's': [0x2, 0x2, 0x2],
            'l': 0x1,
            'r': [0x0, -1.57, 0x0],
            'c': '#ff4b00',
            'e': 0xff0000,
            'o': 0.8,
            't': 0x5
        }, {
            'p': [0x13c, 0x0, -0x40],
            's': [0x2, 0x24, 0x50],
            'c': '#3e3e3e',
            't': 0x5,
            'bo': 0x1
        }, {
            'p': [0x124, 0x0, -0x26],
            's': [0x2e, 0x24, 0x1],
            'c': 0x0,
            't': 0x5
        }, {
            'p': [0x124, 0x0, -0x39],
            's': [0x2e, 0x24, 0x1],
            'c': 0x0,
            'o': 0.4,
            't': 0x5
        }, {
            'p': [0x124, 0x0, -0x49],
            's': [0x2e, 0x24, 0x1],
            'c': 0x0,
            'o': 0.4,
            't': 0x5
        }, {
            'p': [0x124, 0x0, -0x49],
            's': [0x2e, 0x24, 0x1],
            'c': 0x0,
            'o': 0.4,
            't': 0x5
        }, {
            'p': [0x124, -0x12, -0x8b],
            's': [0x3c, 0x4, 0x1e],
            'c': '#b6b6b6',
            't': 0x1
        }, {
            'p': [0x124, 0x0, -0x67],
            's': [0x2e, 0x24, 0x1],
            'c': 0x0,
            'o': 0.4,
            't': 0x5,
            'bo': 0x1
        }, {
            'p': [0x124, 0x0, -0x5b],
            's': [0x2e, 0x24, 0x1],
            'c': 0x0,
            'o': 0.4,
            't': 0x5
        }, {
            'p': [0xe4, 0x0, -0x8e],
            's': [0xa, 0x30, 0xe],
            'bo': 0x1
        }, {
            'p': [0xe4, 0x13, -0x85],
            's': [0xa, 0x1d, 0x4],
            'bo': 0x1
        }, {
            'p': [0xe4, 0x1a, -0x79],
            's': [0xa, 0x16, 0x14],
            'bo': 0x1
        }, {
            'p': [0xde, 0x0, -0x83],
            's': [0x7, 0x1, 0x4],
            'l': 0x1
        }, {
            'p': [-0x9c, 0x0, -0x1e8],
            's': [0x39, 0x1a, 0x19],
            'i': 0x11
        }, {
            'p': [-0x109, 0xa, -0x1bb],
            's': [0x4, 0x7, 0x4],
            'i': 0x10
        }, {
            'p': [0x140, 0x0, -0x79],
            's': [0x2, 0x32, 0x2],
            't': 0x2
        }, {
            'p': [0x13d, -0xe, -0x82],
            's': [0x4, 0x1, 0x4],
            'l': 0x1,
            'c': '#c5c5c5'
        }, {
            'p': [0x139, 0x1, -0x64],
            's': [0x4, 0x7, 0x4],
            'i': 0x10
        }, {
            'p': [0x13b, 0x1, -0x77],
            's': [0x6, 0x8, 0x6],
            'i': 0x2
        }, {
            'p': [-0x36, 0x0, -0x76],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [0x0, -0.87, 0x0],
            'c': '#d5e371'
        }, {
            'p': [0xec, 0x0, -0x5e],
            's': [0x6, 0x8, 0x6],
            'i': 0x2
        }, {
            'p': [0xec, 0x0, -0x90],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [0x0, -0.86, 0x0]
        }, {
            'p': [-0xfd, 0x49, -0x22d],
            's': [0x45, 0x0, 0x1c],
            'i': 0xb,
            'l': 0x1,
            'r': [1.57, 0x0, 0x0]
        }, {
            'p': [-0xfa, 0xa, -0x220],
            's': [0x4, 0x7, 0x4],
            'i': 0x10
        }, {
            'p': [-0x81, 0x2, -0x202],
            's': [0x1, 0x18, 0x17],
            'l': 0x1,
            'c': 0x0,
            'o': 0.7000000000000001,
            't': 0x5
        }, {
            'p': [-0x7a, 0x3a, -0x20c],
            's': [0x6, 0xe, 0x6],
            't': 0x2
        }, {
            'p': [-0x53, 0x3e, -0x1cb],
            's': [0x6, 0x10, 0x6],
            't': 0x2
        }, {
            'p': [-0x9c, 0x1a, -0x202],
            's': [0x39, 0x1a, 0x19],
            'i': 0x11
        }, {
            'p': [-0x88, -0x1c, -0x15e],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [0x0, 0.7, 0x0]
        }, {
            'p': [0xb0, 0x0, -0xa],
            's': [0x2, 0x12, 0x4],
            'c': 0xd7d7d7,
            't': 0x2
        }, {
            'p': [-0x38, 0x0, -0x80],
            's': [0x2, 0x12, 0x4],
            'c': 0xd7d7d7,
            't': 0x2
        }, {
            'p': [0x8a, 0x0, -0x11e],
            's': [0x5, 0x13, 0x2],
            't': 0x2
        }, {
            'p': [0x91, 0x0, -0x11e],
            's': [0x5, 0x12, 0x2],
            't': 0x2
        }, {
            'p': [0x1a, 0x0, -0x15e],
            's': [0x5, 0x12, 0x2],
            't': 0x2
        }, {
            'p': [0x135, 0x0, -0x132],
            's': [0x2, 0x13, 0x4],
            't': 0x2
        }, {
            'p': [0x134, 0x0, -0x13c],
            's': [0x2, 0x13, 0x4],
            't': 0x2
        }, {
            'p': [-0x104, 0x0, -0x1b7],
            's': [0x1a, 0x10, 0x4]
        }, {
            'p': [-0x10d, 0xa, -0x1c4],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [3.14, 0.7, -3.14]
        }, {
            'p': [-0xd4, 0x0, -0x181],
            's': [0x33, 0xf, 0x14],
            'i': 0x7,
            'l': 0x1,
            'r': [-3.14, 0x0, -3.14]
        }, {
            'p': [-0xd4, 0x0, -0x180],
            's': [0x31, 0x8, 0x10],
            'v': 0x1
        }, {
            'p': [-0xd9, 0x8, -0x180],
            's': [0x18, 0x7, 0x10],
            'v': 0x1
        }, {
            'p': [-0x9b, 0x0, -0x19c],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [3.14, -0.87, 3.14]
        }, {
            'p': [-0xf1, 0x0, -0x184],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [3.14, -0.7, 3.14]
        }, {
            'p': [-0xc0, 0x0, -0x173],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [3.14, -0.7, 3.14]
        }, {
            'p': [0x117, 0xa, -0x45],
            's': [0x42, 0x16, 0x2],
            'l': 0x1,
            'r': [0x0, -1.57, 0x0],
            'c': '#2c3f55',
            't': 0x5
        }, {
            'p': [0x157, 0x20, -0x178],
            's': [0xc, 0xc, 0xc],
            'i': 0x1
        }, {
            'p': [0x157, 0x2c, -0x171],
            's': [0xc, 0xc, 0xc],
            'i': 0x1
        }, {
            'p': [0xb7, 0x58, -0x4],
            's': [0x4, 0x2, 0x36],
            't': 0x2
        }, {
            'p': [0xc7, 0x58, -0x4],
            's': [0x4, 0x2, 0x36],
            't': 0x2
        }, {
            'p': [0xbe, 0x5a, -0x1b],
            's': [0x1a, 0x1, 0x4],
            'c': 0xd9d9d9,
            't': 0x2
        }, {
            'p': [0xbe, 0x5a, -0x14],
            's': [0x19, 0x1, 0x4],
            't': 0x2
        }, {
            'p': [0xbf, 0x5a, -0xc],
            's': [0x1a, 0x1, 0x4],
            'c': 0xc8c8c8,
            't': 0x2
        }, {
            'p': [0xbf, 0x5a, 0x13],
            's': [0x1a, 0x1, 0x4],
            't': 0x2
        }, {
            'p': [0xbe, 0x5a, -0x5],
            's': [0x18, 0x1, 0x4],
            't': 0x2
        }, {
            'p': [0xbe, 0x5a, 0xc],
            's': [0x17, 0x1, 0x4],
            't': 0x2
        }, {
            'p': [0xbe, 0x5a, 0x4],
            's': [0x17, 0x1, 0x4],
            'c': 0xbbbbbb,
            't': 0x2
        }, {
            'p': [0xaa, 0x57, -0x57],
            's': [0x6, 0x13, 0x6],
            't': 0x2
        }, {
            'p': [0xb1, 0x2b, -0x5],
            's': [0x2, 0xd, 0x4],
            'l': 0x1,
            'c': 0x0
        }, {
            'p': [0x13e, 0x1, -0x193],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [0x0, -0.86, 0x0]
        }, {
            'p': [0x144, 0x1, -0x19a],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [0x0, -0.69, 0x0]
        }, {
            'p': [0x92, 0x0, 0x33],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [0x0, -0.86, 0x0]
        }, {
            'p': [0x12, 0x1c, -0x208],
            's': [0xb, 0x3, 0x3],
            'bo': 0x1
        }, {
            'p': [-0x11, 0x1f, -0x208],
            's': [0xb, 0x3, 0x3],
            'bo': 0x1
        }, {
            'p': [0x33, 0x1f, -0x208],
            's': [0xb, 0x3, 0x3],
            'bo': 0x1
        }, {
            'p': [0x12, 0x1f, -0x209],
            's': [0x7, 0x10, 0x2],
            'l': 0x1,
            'c': 0x0
        }, {
            'p': [0x33, 0x22, -0x209],
            's': [0x7, 0x10, 0x2],
            'l': 0x1,
            'c': 0x0
        }, {
            'p': [-0x11, 0x22, -0x209],
            's': [0x7, 0x10, 0x2],
            'l': 0x1,
            'c': 0x0
        }, {
            'p': [0x96, 0x7, -0x1a9],
            's': [0x12, 0x7, 0x4]
        }, {
            'p': [0x64, 0x7, -0x1a9],
            's': [0xa, 0x7, 0x4]
        }, {
            'p': [0x65, 0xa, -0x1cd],
            's': [0x8, 0x6, 0x4]
        }, {
            'p': [0x70, -0x1c, -0x1cd],
            's': [0x3a, 0x24, 0x4]
        }, {
            'p': [0x7b, 0x4, -0x1bb],
            's': [0x24, 0x1, 0x20]
        }, {
            'p': [0x8f, 0x4, -0x1bb],
            's': [0x4, 0xa, 0x20]
        }, {
            'p': [0x67, 0x4, -0x1bb],
            's': [0x4, 0xa, 0x20]
        }, {
            'p': [0x8f, 0xe, -0x1b3],
            's': [0x4, 0x2, 0x9]
        }, {
            'p': [0x67, 0xe, -0x1c1],
            's': [0x4, 0x2, 0x9]
        }, {
            'p': [0x67, 0xe, -0x1b1],
            's': [0x4, 0x2, 0x9]
        }, {
            'p': [0x7b, 0x8, -0x1bb],
            's': [0x24, 0x2, 0x24],
            'i': 0x9,
            't': 0x1,
            'd': 0x3
        }, {
            'p': [0x98, 0xe, -0x1a9],
            's': [0x8, 0x2, 0x4]
        }, {
            'p': [0x8b, 0x1, -0x1bc],
            's': [0x4, 0x3, 0x22],
            't': 0x2
        }, {
            'p': [0x6b, 0x1, -0x1bc],
            's': [0x4, 0x3, 0x22],
            't': 0x2
        }, {
            'p': [0x8b, -0x1, -0x1c7],
            's': [0x2, 0x2, 0xe],
            'l': 0x1,
            'r': [-0.7, 0x0, 0x0],
            'c': 0xd4d4d4,
            't': 0x2
        }, {
            'p': [0x6b, -0x1, -0x1c7],
            's': [0x2, 0x2, 0xe],
            'l': 0x1,
            'r': [-0.7, 0x0, 0x0],
            'c': 0xd9d9d9,
            't': 0x2
        }, {
            'p': [0x6b, -0x1, -0x1ad],
            's': [0x2, 0x2, 0xe],
            'l': 0x1,
            'r': [0.7, 0x0, 0x0],
            'c': 0xe6e6e6,
            't': 0x2
        }, {
            'p': [0x8b, -0x1, -0x1ae],
            's': [0x2, 0x2, 0xe],
            'l': 0x1,
            'r': [0.7, 0x0, 0x0],
            'c': 0xe1e1e1,
            't': 0x2
        }, {
            'p': [0x9a, 0x8, -0x198],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [0x0, -0.87, 0x0]
        }, {
            'p': [0x65, 0x8, -0x1a3],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [0x0, -0.87, 0x0]
        }, {
            'p': [-0xf1, 0x0, -0x1c5],
            's': [0x4, 0x8, 0x19],
            'l': 0x1
        }, {
            'p': [-0xed, 0x0, -0x1c5],
            's': [0x4, 0x5, 0x19],
            'l': 0x1
        }, {
            'p': [-0xe9, 0x0, -0x1c5],
            's': [0x4, 0x2, 0x19]
        }, {
            'p': [-0xec, 0x0, -0x1c5],
            's': [0xe, 0xb, 0x17],
            'i': 0x9,
            'v': 0x1,
            't': 0x1,
            'd': 0x2
        }, {
            'p': [-0xc1, 0x0, -0x1ee],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [-3.14, 0.53, 3.14]
        }, {
            'p': [0x171, 0x51, -0x79],
            's': [0x4, 0x3, 0x11],
            'l': 0x1
        }, {
            'p': [-0x94, 0x65, 0x61],
            's': [0x14, 0x2, 0x4],
            'l': 0x1
        }, {
            'p': [-0xee, -0x1, -0x24a],
            's': [0xaf, 0x5a, 0xb]
        }, {
            'p': [-0x118, 0x59, -0x24a],
            's': [0x16, 0x4, 0xb],
            'l': 0x1
        }, {
            'p': [-0xfc, 0x32, 0x1b],
            's': [0xc, 0xc, 0xc],
            'i': 0x1
        }, {
            'p': [0xf8, 0xf, -0x23e],
            's': [0x81, 0x4b, 0xb]
        }, {
            'p': [0xdf, 0x5a, -0x23e],
            's': [0x15, 0x3, 0xb],
            'l': 0x1
        }, {
            'p': [0xfd, 0x5a, -0x23e],
            's': [0x15, 0x2, 0xb],
            'l': 0x1
        }, {
            'p': [0x11f, 0x5a, -0x23e],
            's': [0x11, 0x4, 0xb],
            'l': 0x1
        }, {
            'p': [-0xf9, 0x7c, -0x67],
            's': [0xc, 0x4, 0xc],
            'l': 0x1,
            'c': 0xbebaba
        }, {
            'p': [-0xf6, 0x7c, -0x54],
            's': [0x6, 0x2, 0xc],
            'l': 0x1,
            'c': 0xd7d7d7
        }, {
            'p': [-0xb2, 0x65, 0x61],
            's': [0xd, 0x2, 0x4],
            'l': 0x1
        }, {
            'p': [-0xcf, 0x65, 0x61],
            's': [0xd, 0x3, 0x4],
            'l': 0x1
        }, {
            'p': [-0xed, 0x65, 0x61],
            's': [0x10, 0x2, 0x4],
            'l': 0x1
        }, {
            'p': [-0x104, 0x65, 0x49],
            's': [0x4, 0x2, 0x11],
            'l': 0x1
        }, {
            'p': [-0x104, 0x65, 0x29],
            's': [0x4, 0x2, 0xd],
            'l': 0x1
        }, {
            'p': [-0x104, 0x65, 0xc],
            's': [0x4, 0x3, 0xb],
            'l': 0x1
        }, {
            'p': [-0x104, 0x65, -0x15],
            's': [0x4, 0x2, 0x17],
            'l': 0x1
        }, {
            'p': [-0xf3, 0x5b, -0x54],
            's': [0x6, 0x3, 0xa],
            'c': 0xb9b9b9
        }, {
            'p': [-0x9f, 0x4d, -0x9c],
            's': [0xe, 0x4, 0x6],
            'l': 0x1
        }, {
            'p': [-0xb9, 0x4d, -0x9c],
            's': [0xb, 0x3, 0x6],
            'l': 0x1
        }, {
            'p': [-0xdc, 0x4d, -0x9e],
            's': [0xe, 0x3, 0xa],
            'l': 0x1
        }, {
            'p': [-0x116, 0x4d, -0xe2],
            's': [0x17, 0x4, 0x6],
            'l': 0x1
        }, {
            'p': [-0x136, 0x4d, -0x9c],
            's': [0x1b, 0x2, 0x6],
            'l': 0x1
        }, {
            'p': [0x165, 0x62, -0x1c2],
            's': [0x10, 0x3, 0x10],
            'l': 0x1
        }, {
            'p': [0x160, 0x62, -0x1e7],
            's': [0x6, 0x4, 0xc],
            'l': 0x1
        }, {
            'p': [0x171, 0x51, -0xeb],
            's': [0x4, 0x3, 0x11],
            'l': 0x1
        }, {
            'p': [0x171, 0x51, -0xca],
            's': [0x4, 0x2, 0xb],
            'l': 0x1
        }, {
            'p': [0x171, 0x51, -0xa5],
            's': [0x4, 0x2, 0x15],
            'l': 0x1
        }, {
            'p': [0x148, 0x25, -0x3f],
            's': [0x9c, 0x2c, 0x50],
            'bo': 0x1
        }, {
            'p': [0x15b, 0x51, -0x65],
            's': [0xd, 0x2, 0x4],
            'l': 0x1
        }, {
            'p': [0x101, 0x51, -0x64],
            's': [0xe, 0x3, 0x6],
            'l': 0x1
        }, {
            'p': [0x13e, 0x51, -0x65],
            's': [0x10, 0x3, 0x4],
            'l': 0x1
        }, {
            'p': [0x11d, 0x51, -0x65],
            's': [0xe, 0x3, 0x4],
            'l': 0x1
        }, {
            'p': [0x169, 0x32, -0xbc],
            's': [0xc, 0xc, 0xc],
            'i': 0x1
        }, {
            'p': [0x169, 0x32, -0xb0],
            's': [0xc, 0xc, 0xc],
            'i': 0x1
        }, {
            'p': [-0xf2, 0x59, -0x24a],
            's': [0x16, 0x3, 0xb],
            'l': 0x1
        }, {
            'p': [-0xc8, 0x59, -0x24a],
            's': [0x12, 0x4, 0xb],
            'l': 0x1
        }, {
            'p': [-0x100, 0x4d, -0x9c],
            's': [0x11, 0x4, 0x6],
            'l': 0x1
        }, {
            'p': [-0xea, 0x4d, -0xe2],
            's': [0x10, 0x4, 0x6],
            'l': 0x1
        }, {
            'p': [-0x13f, 0x4d, -0xe2],
            's': [0x14, 0x3, 0x6],
            'l': 0x1
        }, {
            'p': [-0xc1, 0x4d, -0xe2],
            's': [0x13, 0x2, 0x6],
            'l': 0x1
        }, {
            'p': [-0x97, 0x4d, -0xe2],
            's': [0x13, 0x3, 0x6],
            'l': 0x1
        }, {
            'p': [-0xab, 0x12, 0x33],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [0x0, -0.7, 0x0]
        }, {
            'p': [-0x76, 0x74, -0xc5],
            's': [0x9, 0x3, 0x34],
            'c': 0xafafaf
        }, {
            'p': [-0x76, 0x74, -0xc5],
            's': [0x34, 0x3, 0x9],
            'c': 0x969696
        }, {
            'p': [-0x8f, 0x0, -0x31],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [-3.14, -1.05, -3.14]
        }, {
            'p': [-0x15c, 0x99, -0xe6],
            's': [0xb, 0x4, 0xc],
            'l': 0x1
        }, {
            'p': [-0x15d, 0x99, -0x114],
            's': [0xd, 0x4, 0xc],
            'l': 0x1
        }, {
            'p': [-0x188, 0x99, -0xe6],
            's': [0xb, 0x4, 0xc],
            'l': 0x1
        }, {
            'p': [-0x186, 0x99, -0x114],
            's': [0xf, 0x4, 0xc],
            'l': 0x1
        }, {
            'p': [-0x172, 0x6e, -0xfd],
            's': [0x48, 0x2, 0x4c],
            't': 0x2
        }, {
            'p': [-0x172, 0x6a, -0xfd],
            's': [0x43, 0x4, 0x4],
            't': 0x2
        }, {
            'p': [-0x172, 0x6a, -0xeb],
            's': [0x43, 0x4, 0x4],
            't': 0x2
        }, {
            'p': [-0x172, 0x6a, -0x110],
            's': [0x43, 0x4, 0x4],
            't': 0x2
        }, {
            'p': [-0x172, 0x6a, -0xfd],
            's': [0x4, 0x4, 0x48],
            't': 0x2
        }, {
            'p': [-0x162, 0x6a, -0xfd],
            's': [0x4, 0x4, 0x48],
            't': 0x2
        }, {
            'p': [-0x183, 0x6a, -0xfd],
            's': [0x4, 0x4, 0x48],
            't': 0x2
        }, {
            'p': [-0x157, 0x7b, -0xfe],
            's': [0x2, 0x10, 0x6],
            'l': 0x1,
            'c': 0x0
        }, {
            'p': [-0x159, 0x99, -0xfc],
            's': [0x5, 0x3, 0xc],
            'l': 0x1
        }, {
            'p': [-0x170, 0x99, -0xe2],
            's': [0xe, 0x2, 0x4],
            'l': 0x1
        }, {
            'p': [-0x170, 0x99, -0x118],
            's': [0xb, 0x3, 0x4],
            'l': 0x1
        }, {
            'p': [-0x13f, 0x67, -0x24b],
            's': [0x3e, 0x2, 0x43],
            'c': 0xbebebe,
            't': 0x2
        }, {
            'p': [-0x13f, 0x64, -0x24b],
            's': [0x4, 0x3, 0x3f],
            'c': 0xe1dede,
            't': 0x2
        }, {
            'p': [-0x14e, 0x64, -0x24b],
            's': [0x4, 0x3, 0x3f],
            'c': 0xd9d5d5,
            't': 0x2
        }, {
            'p': [-0x12f, 0x64, -0x24b],
            's': [0x4, 0x3, 0x3f],
            'c': 0xdcdcdc,
            't': 0x2
        }, {
            'p': [-0x13f, 0x64, -0x24b],
            's': [0x3a, 0x3, 0x3],
            'c': 0xc3c3c3,
            't': 0x2
        }, {
            'p': [-0x13f, 0x64, -0x239],
            's': [0x3a, 0x3, 0x3],
            'c': 0xc8c8c8,
            't': 0x2
        }, {
            'p': [-0x13f, 0x64, -0x25b],
            's': [0x3a, 0x3, 0x3],
            'c': 0xcfcfcf,
            't': 0x2
        }, {
            'p': [0xb7, 0x55, -0x1c],
            's': [0x2, 0x2, 0xb],
            'l': 0x1,
            'r': [-0.7, 0x0, 0x0],
            't': 0x2
        }, {
            'p': [0xc7, 0x55, -0x1c],
            's': [0x2, 0x2, 0xb],
            'l': 0x1,
            'r': [-0.7, 0x0, 0x0],
            't': 0x2
        }, {
            'p': [0xc7, 0x55, 0x14],
            's': [0x2, 0x2, 0xb],
            'l': 0x1,
            'r': [0.7, 0x0, 0x0],
            't': 0x2
        }, {
            'p': [0xb7, 0x55, 0x14],
            's': [0x2, 0x2, 0xb],
            'l': 0x1,
            'r': [0.7, 0x0, 0x0],
            't': 0x2
        }, {
            'p': [0x10e, -0xe, -0x82],
            's': [0xc, 0xc, 0xc],
            'i': 0x8
        }, {
            'p': [-0xe7, 0x0, -0x18e],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [0x0, -1.05, 0x0]
        }, {
            'p': [-0xca, 0x0, -0x18d],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [0x0, -1.05, 0x0]
        }, {
            'p': [-0x104, 0x10, -0x1b7],
            's': [0xc, 0x2, 0x4]
        }, {
            'p': [-0xf5, 0x0, -0x1b7],
            's': [0x5, 0x11, 0x5]
        }, {
            'p': [-0x113, 0x0, -0x1b7],
            's': [0x5, 0x11, 0x5]
        }, {
            'p': [-0xec, 0x0, -0x1d3],
            's': [0xe, 0xd, 0x3]
        }, {
            'p': [-0xec, 0x0, -0x1b7],
            's': [0xe, 0xd, 0x3]
        }, {
            'p': [-0xef, 0x0, -0x1d8],
            's': [0x6, 0x8, 0x6],
            'i': 0x2,
            'r': [-3.14, 0x0, -3.14]
        }, {
            'p': [-0xe5, 0x0, -0x1b7],
            's': [0x4, 0xe, 0x4]
        }, {
            'p': [-0xe5, 0x0, -0x1d3],
            's': [0x4, 0xe, 0x4]
        }, {
            'p': [-0xb2, 0x0, -0x169],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [3.14, -0.7, 3.14]
        }, {
            'p': [-0xcb, 0x0, -0x174],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [0.01, -1.39, 0.01]
        }, {
            'p': [-0xdd, 0x0, -0x173],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [0.01, -1.39, 0.01]
        }, {
            'p': [-0xe8, 0x1, -0x174],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [0x0, 1.23, 0.01]
        }, {
            'p': [-0xb8, 0x0, -0x184],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [0x0, -0.52, 0x0]
        }, {
            'p': [-0xb9, 0x0, -0x17a],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [-3.14, -0.88, -3.14]
        }, {
            'p': [-0xe3, 0x0, -0x165],
            's': [0x4, 0x13, 0x2],
            'l': 0x1,
            't': 0x2
        }, {
            'p': [-0xd9, 0x0, -0x164],
            's': [0x4, 0x13, 0x2],
            'l': 0x1,
            't': 0x2
        }, {
            'p': [-0xde, 0x0, -0x165],
            's': [0x4, 0xe, 0x2],
            'l': 0x1,
            't': 0x2
        }, {
            'p': [0x90, -0x1c, -0x1c7],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [0x0, -1.21, 0x0]
        }, {
            'p': [-0xef, 0x0, -0x1df],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [0x0, -0.88, 0x0]
        }, {
            'p': [0x104, 0x7, -0xb6],
            's': [0x4, 0x2, 0x10]
        }, {
            'p': [0x104, 0x7, -0x96],
            's': [0x4, 0x2, 0x16]
        }, {
            'p': [0x14f, 0x8b, -0x23],
            's': [0xc, 0x4, 0x6],
            'l': 0x1
        }, {
            'p': [0x16a, 0x8b, -0x3e],
            's': [0x6, 0x4, 0xc],
            'l': 0x1
        }, {
            'p': [0xd4, 0x10, -0x1cd],
            's': [0x14, 0x2, 0x4]
        }, {
            'p': [0x8f, 0xe, -0x1c2],
            's': [0x4, 0x2, 0x9]
        }, {
            'p': [0x10c, 0x0, -0x40],
            's': [0x2, 0x24, 0x50],
            'c': '#3e3e3e',
            't': 0x5,
            'bo': 0x1
        }, {
            'p': [-0x45, -0x20, -0x159],
            's': [0x96, 0x4, 0x4c],
            't': 0x1
        }, {
            'p': [-0xc4, -0x2, -0xd5],
            's': [0x22, 0x2, 0x20],
            't': 0x1
        }, {
            'p': [-0xd2, 0x2a, -0x169],
            's': [0x4c, 0x1, 0xc],
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [-0xf7, 0x26, -0x168],
            's': [0x2, 0x2, 0xc],
            'l': 0x1,
            'r': [0.7, 0x0, 0x0],
            't': 0x2
        }, {
            'p': [-0xd2, 0x26, -0x168],
            's': [0x2, 0x2, 0xc],
            'l': 0x1,
            'r': [0.7, 0x0, 0x0],
            't': 0x2
        }, {
            'p': [-0xae, 0x26, -0x168],
            's': [0x2, 0x2, 0xc],
            'l': 0x1,
            'r': [0.7, 0x0, 0x0],
            't': 0x2
        }, {
            'p': [-0xb2, 0x2b, -0x16a],
            's': [0x6, 0x8, 0x6],
            'i': 0x2
        }, {
            'p': [-0xb8, 0x2b, -0x168],
            's': [0x6, 0x8, 0x6],
            'i': 0x2
        }, {
            'p': [-0xb4, 0x33, -0x168],
            's': [0x6, 0x8, 0x6],
            'i': 0x2
        }, {
            'p': [-0xe4, 0x1c, -0x170],
            's': [0x1, 0xd, 0x1],
            'l': 0x1,
            'c': 0xb1b1b1,
            't': 0x2
        }, {
            'p': [-0xd7, 0x0, -0x18b],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [0x0, -1.05, 0x0]
        }, {
            'p': [-0x19f, 0x0, -0x1bc],
            's': [0x3a, 0x7f, 0x5a],
            'c': 0xa7a5a5
        }, {
            'p': [-0x18a, 0x7f, -0x196],
            's': [0x10, 0x3, 0xe],
            'l': 0x1,
            'c': 0xb1b1b1
        }, {
            'p': [-0x18a, 0x7f, -0x1e1],
            's': [0x10, 0x4, 0x10],
            'l': 0x1,
            'c': 0xb1b1b1
        }, {
            'p': [-0x18a, 0x7f, -0x1bc],
            's': [0x10, 0x3, 0x10],
            'l': 0x1,
            'c': 0xaaaaaa
        }, {
            'p': [-0x1b2, 0x7f, -0x197],
            's': [0x14, 0x3, 0x10],
            'l': 0x1,
            'c': 0xa5a3a3
        }, {
            'p': [-0x1b4, 0x7f, -0x1e1],
            's': [0x10, 0x3, 0x10],
            'l': 0x1,
            'c': 0xb1b1b1
        }, {
            'p': [-0xd2, 0x29, -0x170],
            's': [0x4c, 0x2, 0x2],
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [-0x159, 0x48, -0x20e],
            's': [0x28, 0x3, 0x3],
            'c': '#ffffff',
            't': 0x2
        }, {
            'p': [-0x159, 0x48, -0x21c],
            's': [0x28, 0x3, 0x3],
            'c': '#ffffff',
            't': 0x2
        }, {
            'p': [-0x159, 0x48, -0x215],
            's': [0x3, 0x3, 0x28],
            'c': '#ffffff',
            't': 0x2
        }, {
            'p': [-0x160, 0x5a, -0x20e],
            's': [0x28, 0x3, 0x3],
            'l': 0x1,
            'r': [0x0, 0x0, 1.05],
            'c': '#ffffff',
            't': 0x2
        }, {
            'p': [-0x159, 0x48, -0x20e],
            's': [0x3, 0x2a, 0x3],
            'c': '#ffffff',
            't': 0x2
        }, {
            'p': [-0x151, 0x5a, -0x20e],
            's': [0x28, 0x3, 0x3],
            'l': 0x1,
            'r': [0x0, 0x0, -1.05],
            'c': '#ffffff',
            't': 0x2
        }, {
            'p': [-0x151, 0x5a, -0x21c],
            's': [0x28, 0x3, 0x3],
            'l': 0x1,
            'r': [0x0, 0x0, -1.05],
            'c': '#ffffff',
            't': 0x2
        }, {
            'p': [-0x160, 0x5a, -0x21c],
            's': [0x28, 0x3, 0x3],
            'l': 0x1,
            'r': [0x0, 0x0, 1.05],
            'c': '#ffffff',
            't': 0x2
        }, {
            'p': [-0x159, 0x48, -0x21c],
            's': [0x3, 0x26, 0x3],
            'c': '#ffffff',
            't': 0x2
        }, {
            'p': [-0x159, 0x56, -0x215],
            's': [0x3, 0x3, 0x21],
            'c': '#ffffff',
            't': 0x2
        }, {
            'p': [-0x159, 0x56, -0x21c],
            's': [0x15, 0x3, 0x3],
            'c': '#ffffff',
            't': 0x2
        }, {
            'p': [-0x159, 0x56, -0x20e],
            's': [0x15, 0x3, 0x3],
            'c': '#ffffff',
            't': 0x2
        }, {
            'p': [-0x159, 0x48, -0x202],
            's': [0x3, 0x11, 0x3],
            'l': 0x1,
            'r': [-0.26, 0x0, 0x0],
            'c': '#ffffff',
            't': 0x2
        }, {
            'p': [-0x159, 0x48, -0x228],
            's': [0x3, 0x11, 0x3],
            'l': 0x1,
            'r': [0.26, 0x0, 0x0],
            'c': '#ffffff',
            't': 0x2
        }, {
            'p': [-0x164, 0x62, -0x16a],
            's': [0x28, 0x3, 0x3],
            'c': '#ffffff',
            't': 0x2
        }, {
            'p': [-0x164, 0x62, -0x178],
            's': [0x28, 0x3, 0x3],
            'c': '#ffffff',
            't': 0x2
        }, {
            'p': [-0x164, 0x62, -0x171],
            's': [0x3, 0x3, 0x28],
            'c': '#ffffff',
            't': 0x2
        }, {
            'p': [-0x16b, 0x74, -0x16a],
            's': [0x28, 0x3, 0x3],
            'l': 0x1,
            'r': [0x0, 0x0, 1.05],
            'c': '#ffffff',
            't': 0x2
        }, {
            'p': [-0x164, 0x62, -0x16a],
            's': [0x3, 0x2a, 0x3],
            'c': '#ffffff',
            't': 0x2
        }, {
            'p': [-0x15c, 0x74, -0x16a],
            's': [0x28, 0x3, 0x3],
            'l': 0x1,
            'r': [0x0, 0x0, -1.05],
            'c': '#ffffff',
            't': 0x2
        }, {
            'p': [-0x15c, 0x74, -0x178],
            's': [0x28, 0x3, 0x3],
            'l': 0x1,
            'r': [0x0, 0x0, -1.05],
            'c': '#ffffff',
            't': 0x2
        }, {
            'p': [-0x16b, 0x74, -0x178],
            's': [0x28, 0x3, 0x3],
            'l': 0x1,
            'r': [0x0, 0x0, 1.05],
            'c': '#ffffff',
            't': 0x2
        }, {
            'p': [-0x164, 0x62, -0x178],
            's': [0x3, 0x2a, 0x3],
            'c': '#ffffff',
            't': 0x2
        }, {
            'p': [-0x164, 0x70, -0x171],
            's': [0x3, 0x3, 0x21],
            'c': '#ffffff',
            't': 0x2
        }, {
            'p': [-0x164, 0x70, -0x178],
            's': [0x15, 0x3, 0x3],
            'c': '#ffffff',
            't': 0x2
        }, {
            'p': [-0x164, 0x70, -0x16a],
            's': [0x15, 0x3, 0x3],
            'c': '#ffffff',
            't': 0x2
        }, {
            'p': [-0x164, 0x8c, -0x171],
            's': [0x3, 0x3, 0x14],
            'c': '#ffffff',
            't': 0x2
        }, {
            'p': [-0x167, 0x7d, -0x171],
            's': [0x9, 0xb, 0x6],
            'c': '#757575'
        }, {
            'p': [-0x15a, 0x97, -0x171],
            's': [0x29, 0x3, 0x3],
            'l': 0x1,
            'r': [0x0, 0x0, -2.45],
            'c': '#ffffff',
            't': 0x2
        }, {
            'p': [-0x147, 0xa4, -0x171],
            's': [0x5, 0x2, 0x2],
            'l': 0x1,
            'r': [0x0, 0x0, 0.7],
            'c': '#ffffff',
            't': 0x2
        }, {
            'p': [-0x146, 0x84, -0x171],
            's': [0x1, 0x22, 0x1],
            'c': '#ffffff',
            't': 0x2
        }, {
            'p': [-0x146, 0x81, -0x171],
            's': [0x2, 0x3, 0x2],
            'c': '#343434',
            't': 0x5
        }, {
            'p': [-0x164, 0x62, -0x15e],
            's': [0x3, 0x11, 0x3],
            'l': 0x1,
            'r': [-0.26, 0x0, 0x0],
            'c': '#ffffff',
            't': 0x2
        }, {
            'p': [-0x164, 0x62, -0x184],
            's': [0x3, 0x11, 0x3],
            'l': 0x1,
            'r': [0.26, 0x0, 0x0],
            'c': '#ffffff',
            't': 0x2
        }, {
            'p': [-0x168, 0x88, -0x171],
            's': [0x5, 0x3, 0x6],
            'c': '#757575'
        }, {
            'p': [-0x182, 0x5a, -0x1bd],
            's': [0x2, 0x13, 0x6],
            'l': 0x1,
            'c': 0x0
        }, {
            'p': [-0x182, 0x58, -0x1bd],
            's': [0x6, 0x4, 0xc],
            'c': 0xaaa3a3
        }, {
            'p': [-0xd8, 0x30, -0x3f],
            's': [0x8, 0x2, 0x2],
            'l': 0x1,
            'r': [0x0, 0x0, 0.7],
            't': 0x2
        }, {
            'p': [-0xcf, 0x22, -0x3f],
            's': [0x1, 0x12, 0x1],
            'l': 0x1,
            'c': 0xb1b1b1,
            't': 0x2
        }, {
            'p': [0x17a, 0x62, -0x1cf],
            's': [0x28, 0x3, 0x3],
            'c': '#ffffff',
            't': 0x2
        }, {
            'p': [0x17a, 0x62, -0x1dd],
            's': [0x28, 0x3, 0x3],
            'c': '#ffffff',
            't': 0x2
        }, {
            'p': [0x17a, 0x62, -0x1d6],
            's': [0x3, 0x3, 0x28],
            'c': '#ffffff',
            't': 0x2
        }, {
            'p': [0x173, 0x74, -0x1cf],
            's': [0x28, 0x3, 0x3],
            'r': [0x0, 0x0, 1.05],
            'c': '#ffffff',
            't': 0x2
        }, {
            'p': [0x17a, 0x62, -0x1cf],
            's': [0x3, 0x2a, 0x3],
            'c': '#ffffff',
            't': 0x2
        }, {
            'p': [0x182, 0x74, -0x1cf],
            's': [0x28, 0x3, 0x3],
            'r': [0x0, 0x0, -1.05],
            'c': '#ffffff',
            't': 0x2
        }, {
            'p': [0x182, 0x74, -0x1dd],
            's': [0x28, 0x3, 0x3],
            'r': [0x0, 0x0, -1.05],
            'c': '#ffffff',
            't': 0x2
        }, {
            'p': [0x173, 0x74, -0x1dd],
            's': [0x28, 0x3, 0x3],
            'r': [0x0, 0x0, 1.05],
            'c': '#ffffff',
            't': 0x2
        }, {
            'p': [0x17a, 0x62, -0x1dd],
            's': [0x3, 0x2a, 0x3],
            'c': '#ffffff',
            't': 0x2
        }, {
            'p': [0x17a, 0x70, -0x1d6],
            's': [0x3, 0x3, 0x21],
            'c': '#ffffff',
            't': 0x2
        }, {
            'p': [0x17a, 0x70, -0x1dd],
            's': [0x15, 0x3, 0x3],
            'c': '#ffffff',
            't': 0x2
        }, {
            'p': [0x17a, 0x70, -0x1cf],
            's': [0x15, 0x3, 0x3],
            'c': '#ffffff',
            't': 0x2
        }, {
            'p': [0x17a, 0x8c, -0x1d6],
            's': [0x3, 0x3, 0x14],
            'c': '#ffffff',
            't': 0x2
        }, {
            'p': [0x17f, 0x7d, -0x1d6],
            's': [0x9, 0xb, 0x6],
            'c': '#757575'
        }, {
            'p': [0x16f, 0x96, -0x1d6],
            's': [0x29, 0x3, 0x3],
            'l': 0x1,
            'r': [0x0, 0x0, -0.7],
            'c': '#ffffff',
            't': 0x2
        }, {
            'p': [0x161, 0xa5, -0x1d6],
            's': [0x5, 0x2, 0x2],
            'l': 0x1,
            'r': [0x0, 0x0, 2.45],
            'c': '#522505',
            't': 0x5
        }, {
            'p': [0x15f, 0x83, -0x1d6],
            's': [0x1, 0x22, 0x1],
            'c': '#522505',
            't': 0x5
        }, {
            'p': [0x15f, 0x80, -0x1d6],
            's': [0x2, 0x3, 0x2],
            'c': '#343434',
            't': 0x5
        }, {
            'p': [0x17a, 0x62, -0x1c3],
            's': [0x3, 0x11, 0x3],
            'r': [-0.26, 0x0, 0x0],
            'c': '#ffffff',
            't': 0x2
        }, {
            'p': [0x17a, 0x62, -0x1e9],
            's': [0x3, 0x11, 0x3],
            'r': [0.26, 0x0, 0x0],
            'c': '#ffffff',
            't': 0x2
        }, {
            'p': [0x17f, 0x88, -0x1d6],
            's': [0x5, 0x3, 0x6],
            'c': '#757575'
        }, {
            'p': [0x137, 0x70, -0x1fc],
            's': [0xe, 0x4, 0x16],
            'l': 0x1,
            'c': '#b1b1b1'
        }, {
            'p': [0x15b, 0x70, -0x1f4],
            's': [0x16, 0x3, 0x6],
            'l': 0x1,
            'c': '#b1b1b1'
        }, {
            'p': [0x133, 0x70, -0x21b],
            's': [0x6, 0x3, 0x12],
            'l': 0x1,
            'c': '#b1b1b1'
        }, {
            'p': [0xfd, 0x0, -0x1c9],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [0x0, -1.04, 0x0]
        }, {
            'p': [0xdb, 0x0, -0x6a],
            's': [0x4, 0x2, 0x3],
            'l': 0x1
        }, {
            'p': [0xea, 0x0, -0x70],
            's': [0x3, 0x1, 0x4],
            'l': 0x1
        }, {
            'p': [0xdb, 0x0, -0x8e],
            's': [0x3, 0x1, 0x4],
            'l': 0x1
        }, {
            'p': [0x139, 0x3a, -0x1c1],
            's': [0x6, 0xa, 0x6],
            'l': 0x1,
            't': 0x2
        }, {
            'p': [0x189, 0x40, -0x1dd],
            's': [0x58, 0x22, 0x46]
        }, {
            'p': [0x181, 0x62, -0x1bc],
            's': [0x12, 0x3, 0x4],
            'l': 0x1
        }, {
            'p': [0x19b, 0x62, -0x1bc],
            's': [0x10, 0x3, 0x4],
            'l': 0x1
        }, {
            'p': [0x1b0, 0x62, -0x1bf],
            's': [0xa, 0x3, 0xa],
            'l': 0x1
        }, {
            'p': [0x184, 0x59, -0x1b3],
            's': [0x4, 0x4, 0x10],
            't': 0x2
        }, {
            'p': [0x184, 0x55, -0x1b9],
            's': [0x2, 0x2, 0xe],
            'l': 0x1,
            'r': [-0.7, 0x0, 0x0],
            't': 0x2
        }, {
            'p': [0x11a, -0xe, -0x80],
            's': [0x7, 0x1, 0x4],
            'l': 0x1,
            'c': '#c5c5c5'
        }, {
            'p': [0xb3, 0x43, -0x18],
            's': [0x4, 0x5, 0xf],
            'l': 0x1
        }, {
            'p': [-0xe0, 0x0, -0x68],
            's': [0x1f, 0x18, 0x36],
            'c': 0x414141,
            't': 0x5
        }, {
            'p': [-0x12, 0x12, 0x24],
            's': [0x18, 0x24, 0x18],
            'i': 0x17,
            'l': 0x1,
            'tm': 0x0
        }, {
            'p': [-0x114, 0xa, -0x206],
            's': [0x18, 0x24, 0x18],
            'i': 0x17,
            'l': 0x1,
            'tm': '1'
        }, {
            'p': [0x60, 0x8, -0x1a5],
            's': [0x2, 0x6, 0x4],
            'pe': 0x1,
            'v': 0x1
        }, {
            'p': [0xdd, 0x0, -0x61],
            's': [0x4, 0xc, 0xc],
            'pe': 0x1,
            'v': 0x1
        }, {
            'p': [0x140, 0x0, -0x78],
            's': [0x4, 0x7, 0x4],
            'pe': 0x1,
            'v': 0x1
        }, {
            'p': [0x8a, 0x0, -0x96],
            's': [0x4, 0x8, 0x6],
            'pe': 0x1,
            'v': 0x1
        }, {
            'p': [-0x9c, 0x1a, -0x202],
            's': [0x39, 0x1, 0x1a],
            'v': 0x1,
            'bo': 0x1
        }, {
            'p': [-0x132, 0xa, -0x1ff],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [3.14, 0.7, -3.14]
        }, {
            'p': [-0xfd, 0xa, -0x21e],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [3.14, -0.17, -3.14]
        }, {
            'p': [-0x130, 0xa, -0x21e],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [3.14, -0.17, -3.14]
        }, {
            'p': [-0xfc, 0xa, -0x1db],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [3.14, -0.17, -3.14]
        }]
    }, {
        'name': 'Littletown',
        'ambInd': 0x1,
        'modURL': '',
        'terrainSeed': '',
        'terrainWidth': 0x800,
        'terrainHeight': 0x800,
        'terrainMntMlt': 0x1,
        'terrainMntCol': '#a0a0a0',
        'terrainGrsCol': '#4a6904',
        'terrainDrtCol': '#8c6835',
        'skyDome': !0x1,
        'skyDomeCol0': '#3fb1b7',
        'skyDomeCol1': '#00cffc',
        'skyDomeCol2': '#1faedc',
        'zone': !0x1,
        'zoneSize': 0x1f4,
        'zoneSpeed': 0x1,
        'zoneCol0': '#c542d9',
        'zoneCol1': '#c542d9',
        'zoneCol2': '#c542d9',
        'sizeMlt': 0x2,
        'shadowR': 0x400,
        'ambient': 0x7b7e8c,
        'light': 0x535566,
        'sky': 0x667a96,
        'fog': 0x7784a2,
        'fogD': 722.1829102596926,
        'dthY': -0x64,
        'nAmb': 0x1,
        'camPos': [0x24, 0x35, 0xfc],
        'spawns': [[0x1a8, 0x0, -0x66, 0x0, 0x2], [-0x114, 0x0, 0xc, 0x0, 0x3], [-0x112, 0x0, 0xba, 0x0, 0x3], [0x11f, 0x26, 0x20, 0x0, 0x2], [-0x9c, 0x26, 0x21, 0x0, 0x3], [-0x5f, 0x26, -0x4, 0x0], [0x180, 0x0, 0x57, 0x0, 0x2], [0x8d, 0x0, 0x151, 0x0, 0x2]],
        'ambO': 0.7,
        'ambS': 0x5,
        'objects': [{
            'p': [0x8a, 0x2, 0x6],
            's': [0x4, 0x24, 0x3c],
            'c': 0xc54343,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0xcd, 0x24, 0x1e],
            's': [0x3e, 0x2, 0x6c],
            'c': 0x707070,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0xee, 0x26, 0x2d],
            's': [0x4, 0x26, 0x4a],
            'c': 0xffd8b6,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0xaa, 0x2, 0x7b],
            's': [0x1e, 0x74, 0x12],
            'c': 0x707070,
            't': 0xb,
            'ts': 0x0,
            'td': 0x0,
            'bo': 0x1
        }, {
            'p': [-0x41, 0x2, 0x45],
            's': [0x4, 0x1e, 0xa],
            'c': 0x587fc8,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0,
            'bo': 0x1
        }, {
            'p': [0x130, 0x2, -0x7],
            's': [0x2, 0x34, 0xc],
            'i': 0x3,
            't': 0x2
        }, {
            'p': [0x8a, 0x26, 0x3],
            's': [0x4, 0x6, 0x26],
            'c': 0xc54343,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x8a, 0x26, 0x51],
            's': [0x4, 0x6, 0x22],
            'c': 0xc54343,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x8a, 0x26, 0x2b],
            's': [0x4, 0x2e, 0x2a],
            'c': 0xc54343,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0,
            'bo': 0x1
        }, {
            'p': [0x8a, 0x26, 0x68],
            's': [0x4, 0x28, 0xc],
            'c': 0xc54343,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0,
            'bo': 0x1
        }, {
            'p': [0x8a, 0x26, -0x14],
            's': [0x4, 0x33, 0x8],
            'c': 0xc54343,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0,
            'bo': 0x1
        }, {
            'p': [0x8a, 0x42, 0x3],
            's': [0x4, 0x15, 0x26],
            'c': 0xc54343,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0,
            'bo': 0x1
        }, {
            'p': [0x8a, 0x2, 0x51],
            's': [0x4, 0x24, 0x3a],
            'c': 0xc54343,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x8a, 0x1a, 0x2c],
            's': [0x4, 0xc, 0x10],
            'c': 0xc54343,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0,
            'bo': 0x1
        }, {
            'p': [0xdc, 0x2, 0x70],
            's': [0xa8, 0x4a, 0x4],
            'c': 0xc54343,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0,
            'bo': 0x1
        }, {
            'p': [0xcd, 0x2, -0x1a],
            's': [0x8a, 0x58, 0x4],
            'c': 0xc54343,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0,
            'bo': 0x1
        }, {
            'p': [0x129, 0x2, -0x1a],
            's': [0xe, 0x58, 0x4],
            'c': 0xc54343,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0,
            'bo': 0x1
        }, {
            'p': [0x11a, 0x1a, -0x1a],
            's': [0x10, 0x40, 0x4],
            'c': 0xc54343,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0,
            'bo': 0x1
        }, {
            'p': [0x12e, 0x26, 0x10],
            's': [0x4, 0x2e, 0x50],
            'c': 0xc54343,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0,
            'bo': 0x1
        }, {
            'p': [0x12e, 0x4f, 0x4a],
            's': [0x4, 0x3, 0x4],
            'c': 0xc54343,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x12e, 0x3e, 0x40],
            's': [0x4, 0x14, 0x10],
            'c': 0xc54343,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0,
            'bo': 0x1
        }, {
            'p': [0x12e, 0x2, 0x19],
            's': [0x4, 0x24, 0x62],
            'c': 0xc54343,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x12e, 0x2, 0x64],
            's': [0x4, 0x24, 0x14],
            'c': 0xc54343,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0,
            'bo': 0x1
        }, {
            'p': [0x12e, 0x1a, 0x52],
            's': [0x4, 0xc, 0x10],
            'c': 0xc54343,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0,
            'bo': 0x1
        }, {
            'p': [0xee, 0x26, -0x10],
            's': [0x4, 0x26, 0x10],
            'c': 0xffd8b6,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0xee, 0x40, 0x0],
            's': [0x4, 0xc, 0x10],
            'c': 0xffd8b6,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0xb0, 0x22, 0x62],
            's': [0x4, 0x2a, 0x18],
            'c': 0xffd8b6,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x123, 0x26, 0x54],
            's': [0x12, 0x26, 0x4],
            'c': 0xffd8b6,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x106, 0x26, 0x54],
            's': [0x8, 0x26, 0x4],
            'c': 0xffd8b6,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x112, 0x3e, 0x54],
            's': [0x10, 0xe, 0x4],
            'c': 0xffd8b6,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0xd8, 0x2, 0x54],
            's': [0x54, 0x4a, 0x4],
            'c': 0xffd8b6,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x100, 0x2, 0x62],
            's': [0x4, 0x24, 0x18],
            'c': 0xffd8b6,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0xee, 0x2, 0x43],
            's': [0x4, 0x24, 0x1e],
            'c': 0xffd8b6,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0xee, 0x2, -0x5],
            's': [0x4, 0x24, 0x26],
            'c': 0xffd8b6,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0xee, 0x1a, 0x21],
            's': [0x4, 0xc, 0x26],
            'c': 0xffd8b6,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x9d, 0x24, 0x2b],
            's': [0x22, 0x2, 0x86],
            'c': 0x707070,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x10e, 0x24, 0x1e],
            's': [0x3c, 0x2, 0x6c],
            'c': 0x707070,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x117, 0x24, 0x61],
            's': [0x2a, 0x2, 0x1a],
            'c': 0x707070,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0xdc, 0x0, 0x2b],
            's': [0xac, 0x2, 0x92],
            'c': 0x707070,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0xb7, 0x0, -0x4b],
            's': [0x96, 0x2, 0x62],
            'c': 0x707070,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x9e, 0x2, -0x1f],
            's': [0x4, 0x1e, 0x6],
            'c': 0xc54343,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0,
            'bo': 0x1
        }, {
            'p': [0x9e, 0x2, -0x4a],
            's': [0x4, 0x1e, 0x4],
            'c': 0xc54343,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0,
            'bo': 0x1
        }, {
            'p': [0x9e, 0x2, -0x75],
            's': [0x4, 0x1e, 0x2],
            'c': 0xc54343,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0,
            'bo': 0x1
        }, {
            'p': [0x9e, 0x20, -0x49],
            's': [0x4, 0xc, 0x5a],
            'c': 0xc54343,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0,
            'bo': 0x1
        }, {
            'p': [0xfe, 0x2, -0x3c],
            's': [0x4, 0x2a, 0x40],
            'c': 0xc54343,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0,
            'bo': 0x1
        }, {
            'p': [0xfe, 0x2, -0x71],
            's': [0x4, 0x2a, 0xa],
            'c': 0xc54343,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0,
            'bo': 0x1
        }, {
            'p': [0xfe, 0x1a, -0x64],
            's': [0x4, 0x12, 0x10],
            'c': 0xc54343,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0,
            'bo': 0x1
        }, {
            'p': [0xce, 0x2, -0x78],
            's': [0x64, 0x2a, 0x4],
            'c': 0xc54343,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0,
            'bo': 0x1
        }, {
            'p': [0x9e, 0x2, -0x60],
            's': [0x2, 0x1e, 0x2a],
            'pe': 0x1,
            'c': '#ffffff',
            't': 0xa,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0xaa, 0x0, 0x7d],
            's': [0x22, 0x2, 0x12],
            'c': 0x707070,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x104, 0x0, -0x64],
            's': [0x4, 0x2, 0x14],
            'c': 0x707070,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x134, 0x0, 0x52],
            's': [0x4, 0x2, 0x14],
            'c': 0x707070,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x29, 0x0, -0x18],
            's': [0x4, 0x2, 0x14],
            'c': 0x707070,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x11a, 0x0, -0x20],
            's': [0x14, 0x2, 0x4],
            'c': 0x707070,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x1d, -0x1, 0x143],
            's': [0x6a, 0x2, 0x34d],
            'c': 0x393939,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x41, 0x20, 0x73],
            's': [0x4, 0xc, 0x66],
            'c': 0x587fc8,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0,
            'bo': 0x1
        }, {
            'p': [-0x41, 0x2, 0x73],
            's': [0x4, 0x1e, 0xa],
            'c': 0x587fc8,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0,
            'bo': 0x1
        }, {
            'p': [-0x41, 0x2, 0xa1],
            's': [0x4, 0x1e, 0xa],
            'c': 0x587fc8,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0,
            'bo': 0x1
        }, {
            'p': [-0x91, 0x2, 0xa1],
            's': [0x4, 0x2a, 0xa],
            'c': 0x587fc8,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0,
            'bo': 0x1
        }, {
            'p': [-0x91, 0x2, 0x66],
            's': [0x4, 0x2a, 0x4c],
            'c': 0x587fc8,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0,
            'bo': 0x1
        }, {
            'p': [-0x69, 0x2, 0xa8],
            's': [0x54, 0x2a, 0x4],
            'c': 0x587fc8,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0,
            'bo': 0x1
        }, {
            'p': [-0x91, 0x1a, 0x94],
            's': [0x4, 0x12, 0x10],
            'c': 0x587fc8,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0,
            'bo': 0x1
        }, {
            'p': [-0x41, 0x2, 0x8b],
            's': [0x2, 0x1e, 0x2a],
            'pe': 0x1,
            't': 0xa,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x5b, 0x0, 0x76],
            's': [0x74, 0x2, 0x6c],
            'c': 0x707070,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x71, 0x0, -0x10],
            's': [0x8c, 0x2, 0xa4],
            'c': 0x707070,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x8e, 0x2, 0x3e],
            's': [0x1e, 0x4a, 0x4],
            'c': 0x587fc8,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0,
            'bo': 0x1
        }, {
            'p': [-0x4e, 0x2, 0x3e],
            's': [0x42, 0x4a, 0x4],
            'c': 0x587fc8,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0,
            'bo': 0x1
        }, {
            'p': [-0x71, 0x2, -0x5e],
            's': [0x88, 0x4a, 0x4],
            'c': 0x587fc8,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0,
            'bo': 0x1
        }, {
            'p': [-0x2f, 0x42, -0x10],
            's': [0x4, 0xa, 0x98],
            'c': 0x587fc8,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0,
            'bo': 0x1
        }, {
            'p': [-0x2f, 0x26, -0x4d],
            's': [0x4, 0x1c, 0x1e],
            'c': 0x587fc8,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0,
            'bo': 0x1
        }, {
            'p': [-0x2f, 0x26, -0x3],
            's': [0x4, 0x1c, 0x2a],
            'c': 0x587fc8,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0,
            'bo': 0x1
        }, {
            'p': [-0x2f, 0x26, 0x23],
            's': [0x4, 0x6, 0x22],
            'c': 0x587fc8,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x2f, 0x26, -0x2b],
            's': [0x4, 0x6, 0x26],
            'c': 0x587fc8,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x2f, 0x26, 0x38],
            's': [0x4, 0x1c, 0x8],
            'c': 0x587fc8,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0,
            'bo': 0x1
        }, {
            'p': [-0x2f, 0x2, -0x3e],
            's': [0x4, 0x24, 0x3c],
            'c': 0x587fc8,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x2f, 0x1a, -0x18],
            's': [0x4, 0xc, 0x10],
            'c': 0x587fc8,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0xb1, 0x2, 0x3e],
            's': [0x8, 0x4a, 0x4],
            'c': 0x587fc8,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0,
            'bo': 0x1
        }, {
            'p': [-0xb3, 0x2, 0x5],
            's': [0x4, 0x4a, 0x6e],
            'c': 0x587fc8,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0,
            'bo': 0x1
        }, {
            'p': [-0xb3, 0x2, -0x4f],
            's': [0x4, 0x4a, 0x1a],
            'c': 0x587fc8,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0,
            'bo': 0x1
        }, {
            'p': [-0x77, 0x1a, 0x3e],
            's': [0x10, 0x32, 0x4],
            'c': 0x587fc8,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0,
            'bo': 0x1
        }, {
            'p': [-0xa5, 0x1a, 0x3e],
            's': [0x10, 0x32, 0x4],
            'c': 0x587fc8,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0,
            'bo': 0x1
        }, {
            'p': [-0x8c, 0x2, -0x50],
            's': [0x4, 0x24, 0x18],
            'c': 0xffd8b6,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x69, 0x2, -0x42],
            's': [0x4a, 0x4a, 0x4],
            'c': 0xffd8b6,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x46, 0x22, -0x50],
            's': [0x4, 0x2a, 0x18],
            'c': 0xffd8b6,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0xb3, 0x1a, -0x3a],
            's': [0x4, 0xc, 0x10],
            'c': 0x587fc8,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x3a, 0x24, -0x10],
            's': [0x14, 0x2, 0x98],
            'c': 0x707070,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x86, 0x2, 0x20],
            's': [0x4, 0x1c, 0x38],
            'c': 0xffd8b6,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x86, 0x2, -0x31],
            's': [0x4, 0x1c, 0x1e],
            'c': 0xffd8b6,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x86, 0x1e, -0x2],
            's': [0x4, 0x8, 0x7c],
            'c': 0xffd8b6,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x64, 0x24, -0x2],
            's': [0x40, 0x2, 0x7c],
            'c': 0x707070,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x9d, 0x24, -0x3],
            's': [0x2a, 0x2, 0x7e],
            'c': 0x707070,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0xa0, 0x24, -0x4f],
            's': [0x24, 0x2, 0x1a],
            'c': 0x707070,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0xb3, 0x3e, -0x3a],
            's': [0x4, 0xe, 0x10],
            'c': 0x587fc8,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0,
            'bo': 0x1
        }, {
            'p': [-0x86, 0x26, -0x39],
            's': [0x4, 0x26, 0xe],
            'c': 0xffd8b6,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x86, 0x26, 0xd],
            's': [0x4, 0x26, 0x5e],
            'c': 0xffd8b6,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x86, 0x3c, -0x2a],
            's': [0x4, 0x10, 0x10],
            'c': 0xffd8b6,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x151, -0x2, 0x63],
            's': [0x4, 0x28, 0x4],
            'pe': 0x1,
            'c': 0x755f47,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x132, -0x2, 0x63],
            's': [0x4, 0x28, 0x4],
            'pe': 0x1,
            'c': 0x755f47,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x151, -0x2, 0x5],
            's': [0x4, 0x28, 0x4],
            'pe': 0x1,
            'c': 0x755f47,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x132, -0x2, 0x5],
            's': [0x4, 0x28, 0x4],
            'pe': 0x1,
            'c': 0x755f47,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x142, 0x22, 0x34],
            's': [0x24, 0x2, 0x64],
            'pe': 0x1,
            'c': 0x755f47,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0xc7, 0x22, -0x2f],
            's': [0x24, 0x2, 0x52],
            'pe': 0x1,
            'c': 0x755f47,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0xd6, -0x1, -0x9],
            's': [0x4, 0x26, 0x4],
            'pe': 0x1,
            'c': 0x755f47,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0xd6, -0x1, -0x55],
            's': [0x4, 0x26, 0x4],
            'pe': 0x1,
            'c': 0x755f47,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0xb7, -0x1, -0x55],
            's': [0x4, 0x26, 0x4],
            'pe': 0x1,
            'c': 0x755f47,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0xb7, -0x1, -0x9],
            's': [0x4, 0x26, 0x4],
            'pe': 0x1,
            'c': 0x755f47,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x84, 0x0, 0x2c],
            's': [0x4, 0x2, 0x14],
            'c': 0x707070,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0xb9, 0x0, -0x3a],
            's': [0x4, 0x2, 0x14],
            'c': 0x707070,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x97, 0x0, 0x94],
            's': [0x4, 0x2, 0x14],
            'c': 0x707070,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0xa5, 0x0, 0x44],
            's': [0x12, 0x2, 0x4],
            'c': 0x707070,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x71, 0x4c, -0x10],
            's': [0x92, 0x4, 0xaa],
            'c': 0x505050,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0,
            'bo': 0x1
        }, {
            'p': [-0x69, 0x2c, 0x77],
            's': [0x5e, 0x4, 0x70],
            'c': 0x505050,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0,
            'bo': 0x1
        }, {
            'p': [0xdc, 0x4b, 0x2a],
            's': [0xa5, 0x4, 0x89],
            'c': 0x505050,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0,
            'bo': 0x1
        }, {
            'p': [0xce, 0x2c, -0x4d],
            's': [0x6c, 0x4, 0x62],
            'c': 0x505050,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0,
            'bo': 0x1
        }, {
            'p': [-0x4f, 0x2, -0x69],
            's': [0x1e, 0x76, 0x12],
            'c': 0x707070,
            't': 0xb,
            'ts': 0x0,
            'td': 0x0,
            'bo': 0x1
        }, {
            'p': [-0x4f, 0x0, -0x6b],
            's': [0x22, 0x2, 0x12],
            'c': 0x707070,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x20, 0x2, -0xcf],
            's': [0x7c, 0x4a, 0x96],
            'c': 0xc5b960,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0,
            'bo': 0x1
        }, {
            'p': [0x20, 0x4a, -0xcf],
            's': [0x88, 0x4, 0xa2],
            'c': 0x505050,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0,
            'bo': 0x1
        }, {
            'p': [0x20, 0x0, -0xcf],
            's': [0x80, 0x2, 0x9a],
            'c': 0x707070,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x5e, -0x1, 0x9f],
            's': [0x4, 0x1a, 0x4],
            'c': 0x755f47,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x5e, -0x1, 0xd9],
            's': [0x2, 0x18, 0x71],
            'pe': 0x1,
            'c': 0x755f47,
            't': 0xa,
            'ts': 0x0,
            'td': 0x0,
            'bo': 0x1
        }, {
            'p': [0xf6, -0x1, 0x9f],
            's': [0x12e, 0x18, 0x2],
            'pe': 0x1,
            'c': 0x755f47,
            't': 0xa,
            'ts': 0x0,
            'td': 0x0,
            'bo': 0x1
        }, {
            'p': [-0x25, -0x1, 0xeb],
            's': [0x2, 0x18, 0x3a],
            'pe': 0x1,
            'c': 0x755f47,
            't': 0xa,
            'ts': 0x0,
            'td': 0x0,
            'bo': 0x1
        }, {
            'p': [-0x25, -0x1, 0xcd],
            's': [0x4, 0x1a, 0x4],
            'c': 0x755f47,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0xa3, -0x1, 0xcd],
            's': [0xfe, 0x18, 0x2],
            'pe': 0x1,
            'c': 0x755f47,
            't': 0xa,
            'ts': 0x0,
            'td': 0x0,
            'bo': 0x1
        }, {
            'p': [0x18e, -0x1, 0x9f],
            's': [0x4, 0x1a, 0x4],
            'c': 0x755f47,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x18f, -0x1, 0x3b],
            's': [0x2, 0x18, 0xce],
            'c': 0x755f47,
            't': 0xa,
            'ts': 0x0,
            'td': 0x0,
            'bo': 0x1
        }, {
            'p': [0x18f, -0x1, -0x9c],
            's': [0x4, 0x1a, 0x4],
            'c': 0x755f47,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x104, -0x1, -0x9d],
            's': [0x154, 0x18, 0x2],
            'c': 0x755f47,
            't': 0xa,
            'ts': 0x0,
            'td': 0x0,
            'bo': 0x1
        }, {
            'p': [-0xa1, -0x1, -0x9d],
            's': [0x106, 0x18, 0x2],
            'c': 0x755f47,
            't': 0xa,
            'ts': 0x0,
            'td': 0x0,
            'bo': 0x1
        }, {
            'p': [-0x122, -0x1, 0xcc],
            's': [0x4, 0x1a, 0x4],
            'c': 0x755f47,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x123, -0x1, 0x18],
            's': [0x2, 0x18, 0x166],
            'c': 0x755f47,
            't': 0xa,
            'ts': 0x0,
            'td': 0x0,
            'bo': 0x1
        }, {
            'p': [-0x122, -0x1, -0x9c],
            's': [0x4, 0x1a, 0x4],
            'c': 0x755f47,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0xb5, 0x2, 0x3],
            's': [0x2, 0x34, 0xc],
            'i': 0x3,
            't': 0x2,
            'd': 0x2
        }, {
            'p': [0x20, 0x0, -0x79],
            's': [0x30, 0x2, 0x12],
            'c': 0x707070,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x20, 0x27, -0x7b],
            's': [0x2e, 0x3, 0x13],
            'l': 0x1,
            'c': 0x505050,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0xfb, -0x1, 0xad],
            's': [0x2, 0x18, 0x3f],
            'pe': 0x1,
            'c': 0x755f47,
            't': 0xa,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x10b, 0x0, 0x49],
            's': [0x2e, 0x1e, 0x2a],
            'c': 0x587fc8,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x10b, 0x1e, 0x49],
            's': [0x36, 0x2, 0x32],
            'c': 0x525252,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x157, 0x0, -0x8a],
            's': [0x34, 0x20, 0x24],
            'c': 0xc54343,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x157, 0x20, -0x8a],
            's': [0x38, 0x2, 0x28],
            'c': 0x505050,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x18f, -0x1, -0x2e],
            's': [0x4, 0x1a, 0x4],
            'c': 0x755f47,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x1a0, -0x1, -0x2d],
            's': [0x1e, 0x18, 0x2],
            'c': 0x755f47,
            't': 0xa,
            'ts': 0x0,
            'td': 0x0,
            'bo': 0x1
        }, {
            'p': [0x1af, -0x1, -0x2e],
            's': [0x4, 0x1a, 0x4],
            'c': 0x755f47,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x1b0, -0x1, -0x65],
            's': [0x2, 0x18, 0x6e],
            'c': 0x755f47,
            't': 0xa,
            'ts': 0x0,
            'td': 0x0,
            'bo': 0x1
        }, {
            'p': [0x1af, -0x1, -0x9c],
            's': [0x4, 0x1a, 0x4],
            'c': 0x755f47,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0xfa, -0x1, 0x10],
            's': [0x8, 0x18, 0x48],
            'pe': 0x1,
            'c': 0x6a933b,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0xd5, -0x1, -0x78],
            's': [0x8, 0xa, 0x14],
            'pe': 0x1,
            'c': 0x6a933b,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0xe8, 0x1a, -0x8f],
            's': [0x3a, 0x2, 0x20],
            'c': 0x6b6b6b,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0xe8, 0x0, -0x8f],
            's': [0x34, 0x1a, 0x1a],
            'c': 0x587fc8,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0xe9, -0x1, 0x56],
            's': [0x16, 0xa, 0x8],
            'pe': 0x1,
            'c': 0x6a933b,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x139, -0x1, -0x86],
            's': [0x8, 0xa, 0x2c],
            'c': 0x6a933b,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x90, -0x1, -0x9a],
            's': [0x7c, 0xa, 0x5],
            'c': 0x6a933b,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x1b3, 0x0, -0x10],
            's': [0x34, 0x20, 0x24],
            'c': 0xc54343,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x1b3, 0x20, -0x10],
            's': [0x38, 0x2, 0x28],
            'c': 0x505050,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x18f, -0x2, -0x64],
            's': [0x8, 0x14, 0x38],
            'pe': 0x1,
            'c': 0x6a933b,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x156, -0x1, 0x34],
            's': [0x6, 0xa, 0x68],
            'pe': 0x1,
            'c': 0x6a933b,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0xfb, -0x1, 0xcd],
            's': [0x4, 0x1a, 0x4],
            'c': 0x755f47,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0xfb, -0x1, 0x6a],
            's': [0x2, 0x18, 0x19],
            'pe': 0x1,
            'c': 0x755f47,
            't': 0xa,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x97, 0x2, -0x63],
            's': [0xc, 0xc, 0xc],
            'i': 0x1
        }, {
            'p': [0x154, 0x0, -0x72],
            's': [0xc, 0xc, 0xc],
            'i': 0x1
        }, {
            'p': [0x6c, 0x0, 0x98],
            's': [0xc, 0xc, 0xc],
            'i': 0x1
        }, {
            'p': [0x6c, 0xc, 0x98],
            's': [0xc, 0xc, 0xc],
            'i': 0x1
        }, {
            'p': [0xbf, 0x2, -0x70],
            's': [0xc, 0xc, 0xc],
            'i': 0x1
        }, {
            'p': [0xf6, 0x2, -0x32],
            's': [0xc, 0xc, 0xc],
            'i': 0x1
        }, {
            'p': [-0x89, 0x2, 0x74],
            's': [0xc, 0xc, 0xc],
            'i': 0x1
        }, {
            'p': [-0x68, 0x2, 0xa0],
            's': [0xc, 0xc, 0xc],
            'i': 0x1
        }, {
            'p': [-0x38, 0x0, 0xc6],
            's': [0xc, 0xc, 0xc],
            'i': 0x1
        }, {
            'p': [-0x38, 0xc, 0xc6],
            's': [0xc, 0xc, 0xc],
            'i': 0x1
        }, {
            'p': [-0x8c, 0x2, 0x6a],
            's': [0x6, 0x8, 0x6],
            'i': 0x2
        }, {
            'p': [0xf9, 0x2, -0x3b],
            's': [0x6, 0x8, 0x6],
            'i': 0x2
        }, {
            'p': [-0xca, 0x0, -0x94],
            's': [0x6, 0x8, 0x6],
            'i': 0x2
        }, {
            'p': [-0x5c, 0x2, 0xa0],
            's': [0xc, 0xc, 0xc],
            'i': 0x8
        }, {
            'p': [0xcb, 0x2, -0x70],
            's': [0xc, 0xc, 0xc],
            'i': 0x8
        }, {
            'p': [0x82, 0x22, 0x4f],
            's': [0xc, 0x2, 0x2a],
            'pe': 0x1,
            'c': 0x755f47,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x88, 0x2, 0x69],
            's': [0x2, 0x2a, 0x8],
            'i': 0x3,
            't': 0x2,
            'd': 0x2
        }, {
            'p': [-0x2f, 0x2c, 0x23],
            's': [0x1, 0x16, 0x22],
            'pe': 0x1,
            'c': 0x91765b,
            't': 0xa,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0xdb, -0x1, 0xb0],
            's': [0x4, 0x20, 0x4],
            'pe': 0x1,
            'c': 0x64523f,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0xdb, 0x1e, 0xb0],
            's': [0x1a, 0x1a, 0x1c],
            'c': 0x5e822b,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0,
            'bo': 0x1
        }, {
            'p': [-0xdb, 0x14, 0xb5],
            's': [0x2, 0x2, 0x8],
            'pe': 0x1,
            'c': 0x64523f,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0xdb, 0x13, 0xbc],
            's': [0x6, 0x6, 0x8],
            'pe': 0x1,
            'c': 0x5e822b,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0,
            'bo': 0x1
        }, {
            'p': [-0xe0, 0x12, 0xb0],
            's': [0x6, 0x2, 0x2],
            'pe': 0x1,
            'c': 0x64523f,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0xe5, 0x11, 0xb0],
            's': [0x6, 0x4, 0x6],
            'pe': 0x1,
            'c': 0x5e822b,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0,
            'bo': 0x1
        }, {
            'p': [0x177, -0x1, 0x8a],
            's': [0x4, 0x20, 0x4],
            'pe': 0x1,
            'c': 0x64523f,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0,
            'bo': 0x1
        }, {
            'p': [0x177, 0x1d, 0x8a],
            's': [0x1a, 0x1a, 0x1c],
            'c': 0x5e822b,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0,
            'bo': 0x1
        }, {
            'p': [0x177, 0x13, 0x85],
            's': [0x2, 0x2, 0x8],
            'c': 0x64523f,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x177, 0x12, 0x7f],
            's': [0x6, 0x6, 0x8],
            'c': 0x5e822b,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0,
            'bo': 0x1
        }, {
            'p': [0x173, 0xf, 0x8a],
            's': [0x6, 0x2, 0x2],
            'c': 0x64523f,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x16d, 0xe, 0x8a],
            's': [0x6, 0x4, 0x6],
            'c': 0x5e822b,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0,
            'bo': 0x1
        }, {
            'p': [0x25, 0x1, -0x4e],
            's': [0xc, 0xc, 0xc],
            'i': 0x1
        }, {
            'p': [0x31, 0x1, -0x4e],
            's': [0xc, 0xc, 0xc],
            'i': 0x1
        }, {
            'p': [0x2c, 0x1, -0x42],
            's': [0xc, 0xc, 0xc],
            'i': 0x8
        }, {
            'p': [0x29, 0xd, -0x4e],
            's': [0xc, 0xc, 0xc],
            'i': 0x1
        }, {
            'p': [0x82, 0x2, 0x33],
            's': [0x10, 0x18, 0x2],
            'pe': 0x1,
            'c': 0x755f47,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x27, 0x2, -0x1f],
            's': [0x10, 0x18, 0x2],
            'pe': 0x1,
            'c': 0x755f47,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x1d, 0x1, 0xe1],
            's': [0x33, 0xf, 0x14],
            'i': 0x7,
            'l': 0x1
        }, {
            'p': [-0x7d, -0x1, 0xaf],
            's': [0x4, 0x16, 0x2],
            'l': 0x1,
            'r': [-0.17, 0x0, 0x0],
            'c': 0x755f47,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x71, 0x0, 0xaf],
            's': [0x4, 0x16, 0x2],
            'l': 0x1,
            'r': [-0.17, 0x0, 0x0],
            'c': 0x755f47,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x9a, 0x2, -0x2e],
            's': [0x33, 0xf, 0x14],
            'i': 0x7,
            'l': 0x1,
            'r': [-3.14, 0x0, -3.14]
        }, {
            'p': [-0x3c, 0x2, 0x73],
            's': [0x6, 0x8, 0x6],
            'i': 0x2
        }, {
            'p': [0xa9, 0x0, -0x96],
            's': [0xc, 0xc, 0xc],
            'i': 0x1
        }, {
            'p': [0x5a, 0x0, 0xaf],
            's': [0x6, 0x8, 0x6],
            'i': 0x2
        }, {
            'p': [0x18b, 0x0, 0x1c],
            's': [0x6, 0x8, 0x6],
            'i': 0x2
        }, {
            'p': [-0xf6, 0x0, 0x70],
            's': [0x6, 0x8, 0x6],
            'i': 0x2
        }, {
            'p': [0x1d, 0x1, 0xe1],
            's': [0x30, 0x8, 0x10],
            'v': 0x1,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x22, 0x8, 0xe1],
            's': [0x18, 0x8, 0x10],
            'v': 0x1,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x94, 0x9, -0x2d],
            's': [0x18, 0x8, 0x10],
            'v': 0x1,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x9a, 0x3, -0x2d],
            's': [0x30, 0x8, 0x10],
            'v': 0x1,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x8a, 0x2c, 0x3],
            's': [0x1, 0x16, 0x26],
            'pe': 0x1,
            'c': 0x755f47,
            't': 0xa,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x75, 0x15, 0xb4],
            's': [0x1a, 0x1c, 0x1c],
            'l': 0x1,
            'c': 0x4f6b27,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x75, -0x1, 0xb4],
            's': [0x4, 0x1c, 0x4],
            'l': 0x1,
            'c': 0x64523f,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x40, -0x1, 0xeb],
            's': [0x4, 0x1f, 0x4],
            'l': 0x1,
            'c': 0x64523f,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x40, 0x15, 0xeb],
            's': [0x1a, 0x1c, 0x1c],
            'l': 0x1,
            'c': 0x75a236,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x2a, 0x17, 0x120],
            's': [0x1b, 0x1c, 0x18],
            'pe': 0x1,
            'c': 0x5e822b,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0,
            'bo': 0x1
        }, {
            'p': [-0x25, -0x1, 0x109],
            's': [0x4, 0x1a, 0x4],
            'c': 0x755f47,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x5e, -0x1, 0x113],
            's': [0x4, 0x1a, 0x4],
            'c': 0x755f47,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x2a, -0x1, 0x121],
            's': [0x4, 0x1f, 0x4],
            'pe': 0x1,
            'c': 0x64523f,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0,
            'bo': 0x1
        }, {
            'p': [-0x13b, -0x1, 0xd],
            's': [0x4, 0x1f, 0x4],
            'l': 0x1,
            'c': 0x64523f,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x141, -0x1, -0x84],
            's': [0x4, 0x1f, 0x4],
            'l': 0x1,
            'c': 0x64523f,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x1cb, 0xe, -0x3e],
            's': [0x1a, 0x1b, 0x23],
            'l': 0x1,
            'c': 0x608230,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0xcf, 0x11, -0xbc],
            's': [0x1a, 0x19, 0x1c],
            'l': 0x1,
            'c': 0x4f6b27,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x66, 0x10, -0xb5],
            's': [0x1a, 0x1c, 0x1c],
            'l': 0x1,
            'c': 0x4f6b27,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x140, 0x13, 0xaf],
            's': [0x1a, 0x1c, 0x1c],
            'l': 0x1,
            'c': 0x75a236,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x55, 0x0, 0xbc],
            's': [0x2, 0x49, 0x2],
            'c': 0x707070,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x4f, 0x47, 0xbc],
            's': [0xa, 0x2, 0x2],
            'c': 0x707070,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x4b, 0x46, 0x1f2],
            's': [0xa, 0x2, 0x4],
            'l': 0x1,
            'c': 0x707070,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x4b, 0x45, 0xbc],
            's': [0x9, 0x1, 0x3],
            'l': 0x1,
            'c': 0x0,
            'e': 0xffd87a,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x1b, 0x0, 0x14c],
            's': [0x2, 0x49, 0x2],
            'c': 0x707070,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x15, 0x47, 0x14c],
            's': [0xa, 0x2, 0x2],
            'c': 0x707070,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x11, 0x46, 0x14c],
            's': [0xa, 0x2, 0x4],
            'c': 0x707070,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x11, 0x45, 0x14c],
            's': [0x9, 0x1, 0x3],
            'l': 0x1,
            'c': 0x0,
            'e': 0xffd87a,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x9, 0x0, -0x68],
            's': [0x2, 0x49, 0x2],
            'c': 0x707070,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x9, 0x47, -0x63],
            's': [0x2, 0x2, 0x8],
            'c': 0x707070,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x9, 0x45, -0x60],
            's': [0x2, 0x1, 0x8],
            'l': 0x1,
            'c': 0x0,
            'e': 0xffd87a,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x9, 0x46, -0x60],
            's': [0x3, 0x2, 0x9],
            'c': 0x707070,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x117, 0xf, 0xb8],
            's': [0x1a, 0x1c, 0x1c],
            'l': 0x1,
            'c': 0x5e822b,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x141, 0xb, -0x84],
            's': [0x1a, 0x1e, 0x1c],
            'l': 0x1,
            'c': 0x75a236,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0xe6, 0x2, 0x2],
            's': [0xc, 0xc, 0xc],
            'i': 0x1
        }, {
            'p': [0xf6, 0x2, 0x3e],
            's': [0xc, 0xc, 0xc],
            'i': 0x1
        }, {
            'p': [0xf6, 0x26, 0x1c],
            's': [0xc, 0xc, 0xc],
            'i': 0x1
        }, {
            'p': [0xbe, 0x26, 0x4c],
            's': [0xc, 0xc, 0xc],
            'i': 0x1
        }, {
            'p': [-0x7e, 0x26, 0x24],
            's': [0xc, 0xc, 0xc],
            'i': 0x1
        }, {
            'p': [-0xab, 0x26, -0x10],
            's': [0xc, 0xc, 0xc],
            'i': 0x1
        }, {
            'p': [-0x7e, 0x2, -0x3a],
            's': [0xc, 0xc, 0xc],
            'i': 0x1
        }, {
            'p': [-0x37, 0x2, -0x1],
            's': [0xc, 0xc, 0xc],
            'i': 0x1
        }, {
            'p': [-0x54, 0x26, 0x38],
            's': [0x4, 0x16, 0x2],
            'l': 0x1,
            'r': [0.17, 0x0, 0x0],
            'c': 0x755f47,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x4c, 0x26, 0x38],
            's': [0x4, 0x16, 0x2],
            'l': 0x1,
            'r': [0.17, 0x0, 0x0],
            'c': 0x755f47,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x60, 0x26, 0x38],
            's': [0x4, 0x16, 0x2],
            'l': 0x1,
            'r': [0.17, 0x0, 0x0],
            'c': 0x755f47,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x72, 0x27, 0x1d],
            's': [0x4, 0x0, 0x5],
            'i': 0x4,
            'l': 0x1,
            'r': [0x0, 0.52, 0x0],
            'c': 0xa7a7a7,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x51, 0x27, 0x2f],
            's': [0x4, 0x0, 0x5],
            'i': 0x4,
            'l': 0x1,
            'r': [0x0, -0.53, 0x0],
            'c': 0xb1b1b1,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x90, 0x27, -0x39],
            's': [0x4, 0x0, 0x5],
            'i': 0x4,
            'l': 0x1,
            'r': [0x0, -0.53, 0x0],
            'c': 0xa2a2a2,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x6d, 0x3, -0x35],
            's': [0x4, 0x0, 0x5],
            'i': 0x4,
            'l': 0x1,
            'r': [0x0, -0.53, 0x0],
            'c': 0xaaaaaa,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x3c, 0x2, -0x3e],
            's': [0x4, 0x0, 0x5],
            'i': 0x4,
            'l': 0x1,
            'r': [0x0, -0.53, 0x0],
            'c': 0x939393,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x8, 0x2, 0xb2],
            's': [0x4, 0x0, 0x5],
            'i': 0x4,
            'l': 0x1,
            'r': [0x0, -0.53, 0x0],
            'c': 0x9d9d9d,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x78, 0x26, 0x1c],
            's': [0x2, 0x4, 0x2],
            'l': 0x1,
            'pe': 0x1,
            'c': 0x4f8444,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x43, 0x27, -0x3b],
            's': [0x4, 0x0, 0x5],
            'i': 0x4,
            'l': 0x1,
            'r': [-3.14, 1.05, -3.14],
            'c': 0xa7a7a7,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x78, 0x28, 0x1c],
            's': [0x1, 0x4, 0x1],
            'l': 0x1,
            'pe': 0x1,
            'c': 0x4f8444,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x35, 0x26, 0x37],
            's': [0x2, 0x4, 0x2],
            'l': 0x1,
            'pe': 0x1,
            'c': 0x4f8444,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x35, 0x28, 0x37],
            's': [0x1, 0x4, 0x1],
            'l': 0x1,
            'pe': 0x1,
            'c': 0x4f8444,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x50, 0x26, -0x3e],
            's': [0x2, 0x4, 0x2],
            'l': 0x1,
            'pe': 0x1,
            'c': 0x4f8444,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x50, 0x28, -0x3e],
            's': [0x1, 0x4, 0x1],
            'l': 0x1,
            'pe': 0x1,
            'c': 0x4f8444,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x8a, 0x26, -0xb],
            's': [0x2, 0x4, 0x2],
            'l': 0x1,
            'pe': 0x1,
            'c': 0x4f8444,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x8a, 0x28, -0xb],
            's': [0x1, 0x4, 0x1],
            'l': 0x1,
            'pe': 0x1,
            'c': 0x4f8444,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x8e, 0x27, -0x5],
            's': [0x4, 0x0, 0x5],
            'i': 0x4,
            'l': 0x1,
            'r': [3.14, -1.04, 3.14],
            'c': 0xa2a2a2,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x59, 0x26, -0x3a],
            's': [0xc, 0xc, 0xc],
            'i': 0x8
        }, {
            'p': [-0x46, 0x3, 0x6c],
            's': [0x4, 0x0, 0x5],
            'i': 0x4,
            'l': 0x1,
            'r': [-3.14, 1.05, -3.14],
            'c': 0xa7a7a7,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x56, 0x2, 0x42],
            's': [0x2, 0x4, 0x2],
            'l': 0x1,
            'pe': 0x1,
            'c': 0x4f8444,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x56, 0x4, 0x42],
            's': [0x1, 0x4, 0x1],
            'l': 0x1,
            'pe': 0x1,
            'c': 0x4f8444,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x6a, 0x3, 0x7f],
            's': [0x4, 0x0, 0x5],
            'i': 0x4,
            'l': 0x1,
            'r': [-3.14, 1.05, -3.14],
            'c': 0xa7a7a7,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x67, 0x3, 0x77],
            's': [0x4, 0x0, 0x5],
            'i': 0x4,
            'l': 0x1,
            'r': [0x0, 0.7, 0x0],
            'c': 0xa7a7a7,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x5c, 0x4, 0x3a],
            's': [0x1, 0x4, 0x1],
            'l': 0x1,
            'pe': 0x1,
            'c': 0x4f8444,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x5c, 0x2, 0x3a],
            's': [0x2, 0x4, 0x2],
            'l': 0x1,
            'pe': 0x1,
            'c': 0x4f8444,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0xad, 0x2, -0x14],
            's': [0x1, 0x8, 0x7],
            'pe': 0x1,
            'c': 0x755f47,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0xc3, 0x2, -0x14],
            's': [0x1, 0x8, 0x7],
            'pe': 0x1,
            'c': 0x755f47,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0xb8, 0x9, -0x14],
            's': [0xb, 0x1, 0x4],
            'pe': 0x1,
            'c': 0x343434,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0xb8, 0x8, -0x14],
            's': [0x15, 0x1, 0x6],
            'pe': 0x1,
            'c': 0x755f47,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0xb8, 0xa, -0x14],
            's': [0x2, 0x1, 0x1],
            'pe': 0x1,
            'c': 0x343434,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0xb8, 0xb, -0x14],
            's': [0x16, 0xb, 0x1],
            'pe': 0x1,
            'c': 0x343434,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0xb8, 0xc, -0x13],
            's': [0x14, 0x9, 0x1],
            'pe': 0x1,
            'c': 0x343434,
            'e': 0xffffff,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0xa4, 0x3, -0xd],
            's': [0x4, 0x0, 0x5],
            'i': 0x4,
            'l': 0x1,
            'r': [0x0, -0.53, 0x0],
            'c': 0x939393,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0xeb, 0x3, 0x30],
            's': [0x4, 0x0, 0x5],
            'i': 0x4,
            'l': 0x1,
            'r': [-3.14, 1.4, -3.14],
            'c': 0x939393,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x8f, 0x2, 0x54],
            's': [0x1, 0x11, 0x3],
            'l': 0x1,
            'r': [0x0, 0x0, 0.17],
            'c': 0x755f47,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x8f, 0x2, 0x50],
            's': [0x1, 0x11, 0x3],
            'l': 0x1,
            'r': [0x0, 0x0, 0.17],
            'c': 0x755f47,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0xe1, 0x3, 0x44],
            's': [0x4, 0x0, 0x5],
            'i': 0x4,
            'l': 0x1,
            'r': [0x0, -0.53, 0x0],
            'c': 0x939393,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x102, 0x1e, -0x64],
            's': [0x8, 0x1, 0x1],
            'l': 0x1,
            'c': 0x898686,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x105, 0x1c, -0x64],
            's': [0x5, 0x2, 0x3],
            'l': 0x1,
            'c': 0x898686,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x105, 0x1b, -0x64],
            's': [0x4, 0x1, 0x2],
            'l': 0x1,
            'c': 0x0,
            'e': 0xffd87a,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x98, 0x1b, 0x94],
            's': [0x5, 0x2, 0x3],
            'l': 0x1,
            'c': 0x898686,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x96, 0x1d, 0x94],
            's': [0x6, 0x1, 0x1],
            'l': 0x1,
            'c': 0x898686,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x98, 0x1a, 0x94],
            's': [0x4, 0x1, 0x2],
            'l': 0x1,
            'c': 0x0,
            'e': 0xffd87a,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0xf2, 0x1a, 0x49],
            's': [0x4, 0x1, 0x1],
            'l': 0x1,
            'c': 0x898686,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0xf0, 0x18, 0x49],
            's': [0x4, 0x2, 0x3],
            'l': 0x1,
            'c': 0x898686,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0xf0, 0x17, 0x49],
            's': [0x3, 0x1, 0x2],
            'l': 0x1,
            'c': 0x0,
            'e': 0xffd87a,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0xea, 0x16, -0x80],
            's': [0x1, 0x1, 0x4],
            'l': 0x1,
            'c': 0x898686,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0xea, 0x14, -0x7e],
            's': [0x3, 0x2, 0x4],
            'l': 0x1,
            'c': 0x898686,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0xea, 0x13, -0x7e],
            's': [0x2, 0x1, 0x3],
            'l': 0x1,
            'c': 0x0,
            'e': 0xffd87a,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x132, 0x41, 0x3f],
            's': [0x8, 0x1, 0x1],
            'l': 0x1,
            'c': 0x898686,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x135, 0x3f, 0x3f],
            's': [0x5, 0x2, 0x3],
            'l': 0x1,
            'c': 0x898686,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x135, 0x3e, 0x3f],
            's': [0x4, 0x1, 0x2],
            'l': 0x1,
            'c': 0x0,
            'e': 0xffd87a,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0xc6, 0x0, 0xf2],
            's': [0x7b, 0x2a, 0x78],
            'c': 0x587fc8,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0,
            'bo': 0x1
        }, {
            'p': [0xc6, 0x2a, 0xf2],
            's': [0x82, 0x2, 0x80],
            'c': 0x828282,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0,
            'bo': 0x1
        }, {
            'p': [0xa7, 0x0, 0x137],
            's': [0x1e, 0x3d, 0x12],
            'c': 0x707070,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0,
            'bo': 0x1
        }, {
            'p': [0x12f, 0x6, 0xba],
            's': [0x17, 0x1b, 0x17],
            'l': 0x1,
            'c': 0x486126,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x14b, 0xa, 0xcd],
            's': [0x1f, 0x1e, 0x1e],
            'l': 0x1,
            'c': 0x739b3b,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x79, 0x0, 0x142],
            's': [0x7b, 0x3c, 0x78],
            'c': 0xc5a15e,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0,
            'bo': 0x1
        }, {
            'p': [-0x79, 0x3c, 0x142],
            's': [0x82, 0x2, 0x7e],
            'c': 0x696969,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0,
            'bo': 0x1
        }, {
            'p': [-0x3a, 0x23, 0x164],
            's': [0x3, 0x1, 0xe],
            'l': 0x1,
            'c': 0x5f5f5f,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x3a, 0x24, 0x164],
            's': [0x1, 0xc, 0x1],
            'l': 0x1,
            'c': 0x5f5f5f,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x3b, 0x24, 0x16a],
            's': [0x2, 0xc, 0x1],
            'l': 0x1,
            'c': 0x5f5f5f,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x3b, 0x24, 0x15e],
            's': [0x2, 0xc, 0x1],
            'l': 0x1,
            'c': 0x5f5f5f,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x3b, 0x30, 0x164],
            's': [0x3, 0x1, 0xe],
            'l': 0x1,
            'c': 0x5f5f5f,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x3b, 0x24, 0x164],
            's': [0x1, 0xc, 0xb],
            'l': 0x1,
            'c': 0x0,
            'e': 0xffd87a,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x70, 0x23, 0x105],
            's': [0xe, 0x1, 0x3],
            'l': 0x1,
            'c': 0x5f5f5f,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x70, 0x24, 0x106],
            's': [0x1, 0xc, 0x2],
            'l': 0x1,
            'c': 0x5f5f5f,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x6a, 0x24, 0x106],
            's': [0x1, 0xc, 0x2],
            'l': 0x1,
            'c': 0x5f5f5f,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x76, 0x24, 0x106],
            's': [0x1, 0xc, 0x2],
            'l': 0x1,
            'c': 0x5f5f5f,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x70, 0x30, 0x106],
            's': [0xe, 0x1, 0x3],
            'l': 0x1,
            'c': 0x5f5f5f,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x70, 0x24, 0x106],
            's': [0xb, 0xc, 0x1],
            'l': 0x1,
            'c': 0x0,
            'e': 0xffd87a,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x4d, 0x31, -0x83],
            's': [0xe, 0x1, 0x3],
            'l': 0x1,
            'c': 0x5f5f5f,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x4d, 0x32, -0x84],
            's': [0xb, 0xc, 0x1],
            'l': 0x1,
            'c': 0x0,
            'e': 0xffd87a,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x47, 0x32, -0x84],
            's': [0x1, 0xc, 0x2],
            'l': 0x1,
            'c': 0x5f5f5f,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x53, 0x32, -0x84],
            's': [0x1, 0xc, 0x2],
            'l': 0x1,
            'c': 0x5f5f5f,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x4d, 0x3e, -0x84],
            's': [0xe, 0x1, 0x3],
            'l': 0x1,
            'c': 0x5f5f5f,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x4d, 0x32, -0x84],
            's': [0x1, 0xc, 0x2],
            'l': 0x1,
            'c': 0x5f5f5f,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x5f, 0x2f, -0xa3],
            's': [0x3, 0x1, 0xe],
            'l': 0x1,
            'c': 0x5f5f5f,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x5e, 0x30, -0xa3],
            's': [0x1, 0xc, 0xb],
            'l': 0x1,
            'c': 0x0,
            'e': 0xffd87a,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x5d, 0x30, -0x9d],
            's': [0x4, 0xd, 0x1],
            'l': 0x1,
            'c': 0x5f5f5f,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x5e, 0x3c, -0xa3],
            's': [0x3, 0x1, 0xe],
            'l': 0x1,
            'c': 0x5f5f5f,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x5d, 0x30, -0xa9],
            's': [0x4, 0xd, 0x1],
            'l': 0x1,
            'c': 0x5f5f5f,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x5d, 0x30, -0xa3],
            's': [0x4, 0xd, 0x1],
            'l': 0x1,
            'c': 0x5f5f5f,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x20, 0x0, -0x6d],
            's': [0x17, 0x2, 0x6],
            'c': 0x707070,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x71, -0x1, 0x12a],
            's': [0x4, 0x1c, 0x4],
            'c': 0x64523f,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x72, 0x16, 0x12a],
            's': [0x1a, 0x1c, 0x1c],
            'c': 0x4f6b27,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0,
            'bo': 0x1
        }, {
            'p': [-0x79, 0x0, 0x142],
            's': [0x87, 0x8, 0x85],
            'c': 0x5e822b,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x7c, 0xb, -0xc6],
            's': [0x1a, 0x1c, 0x1c],
            'l': 0x1,
            'c': 0x4f6b27,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x1a2, 0xf, -0xb7],
            's': [0x1a, 0x21, 0x1c],
            'l': 0x1,
            'c': 0x6e9636,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0xa3, 0x2, 0x1a6],
            's': [0x71, 0x4e, 0x74],
            'c': 0xc54343,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0,
            'bo': 0x1
        }, {
            'p': [0xa5, 0x0, 0x1a3],
            's': [0x86, 0x8, 0x7e],
            'c': 0x5e822b,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x55, 0x0, 0x1f2],
            's': [0x2, 0x49, 0x2],
            'l': 0x1,
            'c': 0x707070,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x4f, 0x47, 0x1f2],
            's': [0xa, 0x2, 0x2],
            'l': 0x1,
            'c': 0x707070,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x4b, 0x46, 0xbc],
            's': [0xa, 0x2, 0x4],
            'c': 0x707070,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x4b, 0x45, 0x1f2],
            's': [0x9, 0x1, 0x3],
            'l': 0x1,
            'c': 0x0,
            'e': 0xffd87a,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0xa3, 0x50, 0x1a6],
            's': [0x7b, 0x3, 0x7d],
            'l': 0x1,
            'c': 0x5a5a5a,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0,
            'bo': 0x1
        }, {
            'p': [0x6a, 0x36, 0x183],
            's': [0x1, 0xc, 0xb],
            'l': 0x1,
            'c': 0x0,
            'e': 0xffd87a,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x69, 0x35, 0x183],
            's': [0x3, 0x1, 0xe],
            'l': 0x1,
            'c': 0x5f5f5f,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x69, 0x42, 0x183],
            's': [0x3, 0x1, 0xe],
            'l': 0x1,
            'c': 0x5f5f5f,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x6a, 0x36, 0x189],
            's': [0x2, 0xc, 0x1],
            'l': 0x1,
            'c': 0x5f5f5f,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x6a, 0x36, 0x17d],
            's': [0x2, 0xc, 0x1],
            'l': 0x1,
            'c': 0x5f5f5f,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x6a, 0x36, 0x183],
            's': [0x2, 0xc, 0x1],
            'l': 0x1,
            'c': 0x5f5f5f,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x6a, 0x36, 0x1c4],
            's': [0x1, 0xc, 0xb],
            'l': 0x1,
            'c': 0x0,
            'e': 0xffd87a,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x69, 0x35, 0x1c4],
            's': [0x3, 0x1, 0xe],
            'l': 0x1,
            'c': 0x5f5f5f,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x69, 0x42, 0x1c4],
            's': [0x3, 0x1, 0xe],
            'l': 0x1,
            'c': 0x5f5f5f,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x6a, 0x36, 0x1be],
            's': [0x2, 0xc, 0x1],
            'l': 0x1,
            'c': 0x5f5f5f,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x6a, 0x36, 0x1ca],
            's': [0x2, 0xc, 0x1],
            'l': 0x1,
            'c': 0x5f5f5f,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x6a, 0x36, 0x1c4],
            's': [0x2, 0xc, 0x1],
            'l': 0x1,
            'c': 0x5f5f5f,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0xfd, -0x1, 0x178],
            's': [0x4, 0x1c, 0x4],
            'l': 0x1,
            'c': 0x64523f,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0xfd, 0x16, 0x178],
            's': [0x1a, 0x1c, 0x1c],
            'l': 0x1,
            'c': 0x4f6b27,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0xe0, 0x13, 0xf8],
            's': [0x1a, 0x1c, 0x1c],
            'l': 0x1,
            'c': 0x75a236,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0xe0, -0x1, 0xf8],
            's': [0x4, 0x17, 0x4],
            'l': 0x1,
            'c': 0x64523f,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x59, 0x0, 0x1d6],
            's': [0x68, 0x87, 0x74],
            'c': 0xa2a2a2,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x1e, -0x1, 0x188],
            's': [0x4, 0x1f, 0x4],
            'c': 0x64523f,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x1e, 0x17, 0x188],
            's': [0x1b, 0x1c, 0x18],
            'c': 0x5e822b,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x59, 0x87, 0x1d6],
            's': [0x6e, 0x3, 0x7a],
            'l': 0x1,
            'c': 0x5a5a5a,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x59, 0x41, 0x1d6],
            's': [0x6f, 0x5, 0x7c],
            'c': 0x5a5a5a,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x1b, 0x0, 0x28b],
            's': [0x2, 0x49, 0x2],
            'l': 0x1,
            'c': 0x707070,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x15, 0x47, 0x28b],
            's': [0xa, 0x2, 0x2],
            'l': 0x1,
            'c': 0x707070,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x11, 0x46, 0x28b],
            's': [0xa, 0x2, 0x4],
            'l': 0x1,
            'c': 0x707070,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x11, 0x45, 0x28b],
            's': [0x9, 0x1, 0x3],
            'l': 0x1,
            'c': 0x0,
            'e': 0xffd87a,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x6b, -0x1, 0x1f8],
            's': [0x4, 0x1f, 0x4],
            'l': 0x1,
            'c': 0x64523f,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x6b, 0x15, 0x1f8],
            's': [0x1b, 0x1c, 0x18],
            'l': 0x1,
            'c': 0x5e822b,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x9c, 0x0, 0x26d],
            's': [0x7b, 0x54, 0x78],
            'l': 0x1,
            'c': 0xc5a15e,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x61, 0x0, 0x2ae],
            's': [0x7b, 0x34, 0x78],
            'l': 0x1,
            'c': 0x587fc8,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x61, 0x34, 0x2ae],
            's': [0x83, 0x4, 0x84],
            'l': 0x1,
            'c': 0x575757,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x9c, 0x54, 0x26d],
            's': [0x83, 0x5, 0x84],
            'l': 0x1,
            'c': 0x575757,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x1e9, 0x16, 0x13],
            's': [0x1a, 0x1c, 0x1c],
            'l': 0x1,
            'c': 0x608230,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x1a8, 0x12, 0x65],
            's': [0x1a, 0x1c, 0x1c],
            'l': 0x1,
            'c': 0x608230,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x1ab, 0xf, 0x1a],
            's': [0x1b, 0x1e, 0x1e],
            'l': 0x1,
            'c': 0x739b3b,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x183, 0xd, 0xbb],
            's': [0x17, 0x1b, 0x17],
            'l': 0x1,
            'c': 0x486126,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x1ca, 0x12, 0x45],
            's': [0x17, 0x18, 0x1b],
            'l': 0x1,
            'c': 0x486126,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x2d7, 0x0, -0x29],
            's': [0x68, 0x4a, 0x4f],
            'l': 0x1,
            'c': 0xa2a2a2,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x2af, 0x4a, -0x29],
            's': [0x18, 0x30, 0x1a],
            'l': 0x1,
            'c': 0xa2a2a2,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x2d7, 0x4a, -0x29],
            's': [0x69, 0x6, 0x4c],
            'l': 0x1,
            'c': 0xa2a2a2,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x2af, 0x79, -0x29],
            's': [0x1f, 0x6, 0x20],
            'l': 0x1,
            'c': 0x786452,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x2af, 0x7f, -0x29],
            's': [0x16, 0xd, 0x13],
            'l': 0x1,
            'c': 0x786452,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x2d7, 0x50, -0x29],
            's': [0x69, 0x6, 0x36],
            'l': 0x1,
            'c': 0xa2a2a2,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x2d7, 0x54, -0x3d],
            's': [0x73, 0x6, 0x35],
            'l': 0x1,
            'r': [-0.52, 0x0, 0x0],
            'c': 0x786452,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x2a9, 0x9a, -0x29],
            's': [0x2, 0x19, 0x2],
            'l': 0x1,
            'c': 0x786452,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x2a9, 0xab, -0x29],
            's': [0x2, 0x2, 0xe],
            'l': 0x1,
            'c': 0x786452,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x2af, 0x7c, -0x1e],
            's': [0x16, 0x21, 0xb],
            'l': 0x1,
            'r': [-0.35, 0x0, 0x0],
            'c': 0x786452,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x2af, 0x7c, -0x34],
            's': [0x16, 0x21, 0xb],
            'l': 0x1,
            'r': [0.35, 0x0, 0x0],
            'c': 0x786452,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x2d7, 0x54, -0x16],
            's': [0x73, 0x6, 0x33],
            'l': 0x1,
            'r': [0.53, 0x0, 0x0],
            'c': 0x786452,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x2d7, 0x50, -0x29],
            's': [0x69, 0xc, 0x22],
            'l': 0x1,
            'c': 0xa2a2a2,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x2a2, 0x0, -0x29],
            's': [0x2, 0x39, 0x20],
            'l': 0x1,
            'c': 0x786452,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x2b4, 0x10, -0x6a],
            's': [0x1a, 0x1f, 0x1c],
            'l': 0x1,
            'c': 0x608230,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x2b3, -0x1, -0x6a],
            's': [0x4, 0x22, 0x4],
            'l': 0x1,
            'c': 0x64523f,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x288, 0x11, 0x8],
            's': [0x1a, 0x22, 0x1c],
            'l': 0x1,
            'c': 0x608230,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x288, -0x1, 0x9],
            's': [0x4, 0x22, 0x4],
            'l': 0x1,
            'c': 0x64523f,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x1ca, 0x11, -0x8c],
            's': [0x1a, 0x1f, 0x1c],
            'l': 0x1,
            'c': 0x608230,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x26d, 0x12, -0x9a],
            's': [0x1a, 0x1c, 0x1c],
            'l': 0x1,
            'c': 0x608230,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x26d, -0x1, -0x9a],
            's': [0x4, 0x22, 0x4],
            'l': 0x1,
            'c': 0x64523f,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0xd0, 0x0, -0x178],
            's': [0x79, 0x45, 0x53],
            'l': 0x1,
            'c': 0xa2a2a2,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x2a2, 0x6c, -0x29],
            's': [0x1, 0x9, 0x9],
            'l': 0x1,
            'c': 0x0,
            'e': 0xffd87a,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x2a1, 0x71, -0x29],
            's': [0x1, 0x4, 0x1],
            'l': 0x1,
            'c': 0x2d2d2d,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x2a1, 0x71, -0x29],
            's': [0x1, 0x4, 0x1],
            'l': 0x1,
            'r': [2.09, 0x0, 0x0],
            'c': 0x2d2d2d,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x2a2, 0x40, -0x29],
            's': [0x2, 0x13, 0x4],
            'l': 0x1,
            'c': 0x202020,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x2f0, 0x12, 0xa7],
            's': [0x27, 0x18, 0x49e],
            'l': 0x1,
            'c': 0x486126,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x263, 0x12, -0x191],
            's': [0x101, 0x1f, 0x1b],
            'l': 0x1,
            'c': 0x5c7a34,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x250, 0x1f, -0x18b],
            's': [0x26, 0x22, 0x1c],
            'l': 0x1,
            'c': 0x608230,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x2e1, 0xf, -0x17f],
            's': [0x2f, 0x24, 0x31],
            'l': 0x1,
            'c': 0x608230,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x2ea, 0x16, -0xc8],
            's': [0x26, 0x1c, 0x26],
            'l': 0x1,
            'c': 0x608230,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x2ea, 0x16, -0x124],
            's': [0x26, 0x21, 0x26],
            'l': 0x1,
            'c': 0x608230,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x2ec, 0x0, -0x8e],
            's': [0x4, 0x17, 0x84],
            'l': 0x1,
            'c': 0x64523f,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x2f6, 0x0, -0x12a],
            's': [0x4, 0x17, 0xdb],
            'l': 0x1,
            'c': 0x64523f,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x2df, -0x1, -0x11f],
            's': [0x4, 0x22, 0x4],
            'l': 0x1,
            'c': 0x64523f,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x1b, 0x0, 0xac],
            's': [0x5e2, 0x0, 0x4bc],
            'i': 0x4,
            'c': '#728447',
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x280, 0x0, -0x195],
            's': [0x133, 0x17, 0x5],
            'l': 0x1,
            'c': 0x64523f,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x21e, -0x1, -0x187],
            's': [0x4, 0x22, 0x4],
            'l': 0x1,
            'c': 0x64523f,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x262, 0x12, -0xeb],
            's': [0x1a, 0x1c, 0x1c],
            'l': 0x1,
            'c': 0x608230,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x262, -0x1, -0xeb],
            's': [0x4, 0x22, 0x4],
            'l': 0x1,
            'c': 0x64523f,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x1cc, -0x1, -0x144],
            's': [0x4, 0x22, 0x4],
            'l': 0x1,
            'c': 0x64523f,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x1cc, 0x12, -0x144],
            's': [0x1a, 0x1c, 0x1c],
            'l': 0x1,
            'c': 0x608230,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x2ec, 0x0, 0x14b],
            's': [0x4, 0x17, 0x354],
            'l': 0x1,
            'c': 0x64523f,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x1f5, 0x11, -0x71],
            's': [0x1a, 0x1c, 0x1c],
            'l': 0x1,
            'c': 0x608230,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x1cb, 0x9, -0x66],
            's': [0x19, 0x1a, 0x19],
            'l': 0x1,
            'c': 0x577832,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x1c3, 0x16, 0x5d],
            's': [0x1a, 0x18, 0x19],
            'l': 0x1,
            'c': 0x6a933b,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x1ab, 0xa, 0x3c],
            's': [0x1a, 0x1c, 0x1d],
            'l': 0x1,
            'c': 0x608230,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x1a8, 0xf, 0x87],
            's': [0x1e, 0x1c, 0x1b],
            'l': 0x1,
            'c': 0x486126,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x1f5, 0x10, -0x8],
            's': [0x1d, 0x19, 0x1d],
            'l': 0x1,
            'c': 0x4b662d,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x212, 0x9, -0x34],
            's': [0x1d, 0x19, 0x1d],
            'l': 0x1,
            'c': 0x577832,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x253, 0x9, 0x6b],
            's': [0x1d, 0x19, 0x1d],
            'l': 0x1,
            'c': 0x577832,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x1a2, 0xd, 0xb7],
            's': [0x1d, 0x19, 0x1d],
            'l': 0x1,
            'c': 0x577832,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x1dd, 0x14, 0xa6],
            's': [0x1b, 0x1e, 0x1e],
            'l': 0x1,
            'c': 0x739b3b,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x2ea, 0x16, 0x4d],
            's': [0x26, 0x1c, 0x2c],
            'l': 0x1,
            'c': 0x608230,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x2ea, 0x16, 0x8c],
            's': [0x26, 0x1d, 0x29],
            'l': 0x1,
            'c': 0x648930,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x1b7, 0x8, 0x2e],
            's': [0x1d, 0x19, 0x1d],
            'l': 0x1,
            'c': 0x577832,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x2ea, 0x17, 0xfe],
            's': [0x26, 0x1c, 0x22],
            'l': 0x1,
            'c': 0x608230,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x2ea, 0x12, 0x15d],
            's': [0x26, 0x1d, 0x4a],
            'l': 0x1,
            'c': 0x608230,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x1c2, 0xe, -0xb1],
            's': [0x19, 0x1e, 0x19],
            'l': 0x1,
            'c': 0x577832,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0xa6, 0x0, -0x1ad],
            's': [0x6fa, 0x17, 0x5],
            'l': 0x1,
            'c': 0x5a4b3b,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x51, 0x13, -0x1a2],
            's': [0x4d1, 0x1f, 0x1b],
            'l': 0x1,
            'c': 0x5c7a34,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x1b4, 0x10, -0x197],
            's': [0x26, 0x25, 0x1c],
            'l': 0x1,
            'c': 0x56732d,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x13f, 0x11, -0x197],
            's': [0x26, 0x25, 0x1c],
            'l': 0x1,
            'c': 0x56732d,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x1b5, -0x1, -0x191],
            's': [0x4, 0x22, 0x4],
            'l': 0x1,
            'c': 0x64523f,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x13e, -0x1, -0x191],
            's': [0x4, 0x22, 0x4],
            'l': 0x1,
            'c': 0x64523f,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x123, -0x1, -0x19c],
            's': [0x4, 0x22, 0x4],
            'l': 0x1,
            'c': 0x64523f,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x173, -0x1, -0x19c],
            's': [0x4, 0x22, 0x4],
            'l': 0x1,
            'c': 0x64523f,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x178, 0x1f, -0x1b7],
            's': [0x26, 0x21, 0x1c],
            'l': 0x1,
            'c': 0x56732d,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x123, -0x1, -0xea],
            's': [0x4, 0x22, 0x4],
            'l': 0x1,
            'c': 0x64523f,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x123, 0x8, -0xed],
            's': [0x1f, 0x21, 0x1c],
            'l': 0x1,
            'c': 0x608230,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0xd0, 0x45, -0x178],
            's': [0x80, 0x3, 0x59],
            'l': 0x1,
            'c': 0x616161,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x18f, -0x1, 0x2d],
            's': [0x4, 0x1a, 0x4],
            'c': 0x755f47,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x198, -0x1, -0x19f],
            's': [0x4, 0x22, 0x4],
            'l': 0x1,
            'c': 0x64523f,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0xf2, 0x2f, -0x14e],
            's': [0xb, 0xc, 0x1],
            'l': 0x1,
            'c': 0x0,
            'e': 0xffd87a,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0xad, 0x2f, -0x14e],
            's': [0xb, 0xc, 0x1],
            'l': 0x1,
            'c': 0x0,
            'e': 0xffd87a,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0xad, 0x2e, -0x14d],
            's': [0xe, 0x1, 0x3],
            'l': 0x1,
            'c': 0x5f5f5f,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0xad, 0x3b, -0x14d],
            's': [0xe, 0x1, 0x3],
            'l': 0x1,
            'c': 0x5f5f5f,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0xf2, 0x3b, -0x14d],
            's': [0xe, 0x1, 0x3],
            'l': 0x1,
            'c': 0x5f5f5f,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0xf2, 0x2e, -0x14d],
            's': [0xe, 0x1, 0x3],
            'l': 0x1,
            'c': 0x5f5f5f,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0xa7, 0x2f, -0x14e],
            's': [0x1, 0xc, 0x2],
            'l': 0x1,
            'c': 0x5f5f5f,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0xb3, 0x2f, -0x14e],
            's': [0x1, 0xc, 0x2],
            'l': 0x1,
            'c': 0x5f5f5f,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0xec, 0x2f, -0x14e],
            's': [0x1, 0xc, 0x2],
            'l': 0x1,
            'c': 0x5f5f5f,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0xf8, 0x2f, -0x14e],
            's': [0x1, 0xc, 0x2],
            'l': 0x1,
            'c': 0x5f5f5f,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0xf2, 0x2f, -0x14e],
            's': [0x1, 0xc, 0x2],
            'l': 0x1,
            'c': 0x5f5f5f,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0xad, 0x2f, -0x14e],
            's': [0x1, 0xc, 0x2],
            'l': 0x1,
            'c': 0x5f5f5f,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x18, 0x70, 0x1d4],
            's': [0x2, 0x9, 0x1],
            'l': 0x1,
            'c': 0x575757,
            'e': 0xff0000,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x1b, 0x42, 0x1d6],
            's': [0xe, 0x39, 0x3],
            'l': 0x1,
            'c': 0x5a5a5a,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x1e, 0x70, 0x1d4],
            's': [0x2, 0x9, 0x1],
            'l': 0x1,
            'c': 0x575757,
            'e': 0xff0000,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x1b, 0x74, 0x1d4],
            's': [0x4, 0x2, 0x1],
            'l': 0x1,
            'c': 0x575757,
            'e': 0xff0000,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x18, 0x65, 0x1d4],
            's': [0x2, 0x9, 0x1],
            'l': 0x1,
            'c': 0x575757,
            'e': 0xff0000,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x1e, 0x65, 0x1d4],
            's': [0x2, 0x9, 0x1],
            'l': 0x1,
            'c': 0x575757,
            'e': 0xff0000,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x1b, 0x65, 0x1d4],
            's': [0x4, 0x2, 0x1],
            'l': 0x1,
            'c': 0x575757,
            'e': 0xff0000,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x1b, 0x6c, 0x1d4],
            's': [0x4, 0x2, 0x1],
            'l': 0x1,
            'c': 0x575757,
            'e': 0xff0000,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x1b, 0x5a, 0x1d4],
            's': [0x2, 0x9, 0x1],
            'l': 0x1,
            'c': 0x575757,
            'e': 0xff0000,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x1b, 0x61, 0x1d4],
            's': [0x8, 0x2, 0x1],
            'l': 0x1,
            'c': 0x575757,
            'e': 0xff0000,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x19, 0x4f, 0x1d4],
            's': [0x2, 0x9, 0x1],
            'l': 0x1,
            'c': 0x575757,
            'e': 0xff0000,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x1b, 0x56, 0x1d4],
            's': [0x6, 0x2, 0x1],
            'l': 0x1,
            'c': 0x575757,
            'e': 0xff0000,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x1b, 0x4f, 0x1d4],
            's': [0x6, 0x2, 0x1],
            'l': 0x1,
            'c': 0x575757,
            'e': 0xff0000,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x1b, 0x52, 0x1d4],
            's': [0x6, 0x2, 0x1],
            'l': 0x1,
            'c': 0x575757,
            'e': 0xff0000,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x19, 0x44, 0x1d4],
            's': [0x2, 0x9, 0x1],
            'l': 0x1,
            'c': 0x575757,
            'e': 0xff0000,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x1c, 0x44, 0x1d4],
            's': [0x6, 0x2, 0x1],
            'l': 0x1,
            'c': 0x575757,
            'e': 0xff0000,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x25, 0x6c, 0x1d6],
            's': [0x6, 0x3, 0x3],
            'l': 0x1,
            'c': 0x5a5a5a,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x25, 0x4d, 0x1d6],
            's': [0x6, 0x3, 0x3],
            'l': 0x1,
            'c': 0x5a5a5a,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x41, 0x1, 0x28e],
            's': [0x33, 0xf, 0x14],
            'i': 0x7,
            'l': 0x1,
            'r': [0x0, -1.57, 0x0]
        }, {
            'p': [0x20, 0x0, 0x32e],
            's': [0x4f, 0x87, 0x74],
            'l': 0x1,
            'c': 0xa2a2a2,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x20, 0x87, 0x32e],
            's': [0x57, 0x3, 0x7c],
            'l': 0x1,
            'c': 0x5c5c5c,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x58, -0x1, 0x2c5],
            's': [0x4, 0x1f, 0x4],
            'l': 0x1,
            'c': 0x64523f,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x5a, 0x11, 0x2c4],
            's': [0x1b, 0x1c, 0x18],
            'l': 0x1,
            'c': 0x5e822b,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x21, -0x1, 0x302],
            's': [0x4, 0x1f, 0x4],
            'l': 0x1,
            'c': 0x64523f,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x22, 0x10, 0x302],
            's': [0x1b, 0x1c, 0x18],
            'l': 0x1,
            'c': 0x5e822b,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x73, -0x2, 0x3be],
            's': [0x71, 0x41, 0x74],
            'l': 0x1,
            'c': 0xc54343,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x73, 0x3f, 0x3be],
            's': [0x7c, 0x5, 0x7e],
            'l': 0x1,
            'c': 0x4d4d4d,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x3f, -0x12, 0x3a0],
            's': [0x7b, 0x70, 0x78],
            'l': 0x1,
            'c': 0xc5a15e,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x3f, 0x5d, 0x3a0],
            's': [0x83, 0x4, 0x7f],
            'l': 0x1,
            'c': 0x707070,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x9b, -0x4b, 0x4e3],
            's': [0x4f, 0x121, 0x3d],
            'l': 0x1,
            'c': 0xa2a2a2,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x97, -0x1f, 0x460],
            's': [0x6c, 0x8e, 0x3d],
            'l': 0x1,
            'c': 0xa2a2a2,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x134, 0x0, 0x460],
            's': [0x4f, 0xdc, 0x3d],
            'l': 0x1,
            'c': 0xa2a2a2,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x10d, -0x1f, 0x3f0],
            's': [0x6c, 0x8e, 0x71],
            'l': 0x1,
            'c': 0xa2a2a2,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x1b5, 0x0, 0x2eb],
            's': [0x2a5, 0x17, 0x5],
            'l': 0x1,
            'c': 0x64523f,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x261, 0x15, 0x2ef],
            's': [0x13b, 0x18, 0x2c],
            'l': 0x1,
            'c': 0x486126,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x10d, 0x15, 0x2ef],
            's': [0x176, 0x1b, 0x35],
            'l': 0x1,
            'c': 0x486126,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x20d, 0x14, 0x2e8],
            's': [0x26, 0x1d, 0x29],
            'l': 0x1,
            'c': 0x648930,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x2e8, 0x12, 0x2e3],
            's': [0x2b, 0x23, 0x2e],
            'l': 0x1,
            'c': 0x648930,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x14d, 0x16, 0x2e7],
            's': [0x26, 0x20, 0x29],
            'l': 0x1,
            'c': 0x648930,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x27c, 0x14, 0x2e8],
            's': [0x26, 0x1d, 0x29],
            'l': 0x1,
            'c': 0x648930,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x2ea, 0x17, 0x22d],
            's': [0x26, 0x1c, 0x22],
            'l': 0x1,
            'c': 0x608230,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x1bb, 0x18, 0x102],
            's': [0x17, 0x18, 0x17],
            'l': 0x1,
            'c': 0x486126,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x167, 0xb, 0xc5],
            's': [0x18, 0x18, 0x1e],
            'l': 0x1,
            'c': 0x618234,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x139, 0xd, 0xf5],
            's': [0x1a, 0x1c, 0x1c],
            'l': 0x1,
            'c': 0x4f6b27,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x171, 0x3c, 0x143],
            's': [0x84, 0x3, 0x82],
            'l': 0x1,
            'c': 0x5f5f5f,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x171, -0x4, 0x143],
            's': [0x7b, 0x40, 0x78],
            'l': 0x1,
            'c': 0xc5a15e,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0xfc, 0xc, -0xd1],
            's': [0x1a, 0x1c, 0x1c],
            'l': 0x1,
            'c': 0x4b612b,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0xd0, -0x1, -0x172],
            's': [0x89, 0xa, 0x59],
            'c': 0x6a933b,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x175, 0x12, -0x103],
            's': [0x1a, 0x1c, 0x1c],
            'l': 0x1,
            'c': 0x608230,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0xf7, 0x18, 0x2e7],
            's': [0x26, 0x20, 0x29],
            'l': 0x1,
            'c': 0x648930,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x23b, -0x39, 0x4ee],
            's': [0x4f, 0xdc, 0x3d],
            'l': 0x1,
            'c': 0xa2a2a2,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x233, 0xd, 0x35],
            's': [0x1d, 0x19, 0x1d],
            'l': 0x1,
            'c': 0x577832,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x1b7, 0x5, 0xa],
            's': [0x1d, 0x19, 0x1d],
            'l': 0x1,
            'c': 0x577832,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x120, 0x9, -0xb9],
            's': [0x19, 0x1a, 0x19],
            'l': 0x1,
            'c': 0x577832,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x151, 0xe, -0xb7],
            's': [0x19, 0x1a, 0x19],
            'l': 0x1,
            'c': 0x668c3c,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0xa4, 0x6, -0xdd],
            's': [0x19, 0x1e, 0x19],
            'l': 0x1,
            'c': 0x577832,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0xd5, 0xc, -0xfa],
            's': [0x15, 0x19, 0x15],
            'l': 0x1,
            'c': 0x577832,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x170, 0xf, -0xb7],
            's': [0x1a, 0x1b, 0x1c],
            'l': 0x1,
            'c': 0x608230,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x188, 0xb, -0xc2],
            's': [0x19, 0x1a, 0x19],
            'l': 0x1,
            'c': 0x567533,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x13c, 0x5, -0xcb],
            's': [0x19, 0x1a, 0x19],
            'l': 0x1,
            'c': 0x567533,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x1b7, 0x8, 0x53],
            's': [0x1d, 0x19, 0x1d],
            'l': 0x1,
            'c': 0x577832,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0xd4, 0x12, -0x13f],
            's': [0x1a, 0x1c, 0x1c],
            'l': 0x1,
            'c': 0x608230,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x33, 0x1f, -0x1b7],
            's': [0x26, 0x21, 0x1c],
            'l': 0x1,
            'c': 0x56732d,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x6f, 0x11, -0x197],
            's': [0x26, 0x25, 0x1c],
            'l': 0x1,
            'c': 0x56732d,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x19, -0x1, -0x19c],
            's': [0x4, 0x22, 0x4],
            'l': 0x1,
            'c': 0x64523f,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x6f, -0x1, -0x191],
            's': [0x4, 0x22, 0x4],
            'l': 0x1,
            'c': 0x64523f,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x49, -0x1, -0x197],
            's': [0x4, 0x22, 0x4],
            'l': 0x1,
            'c': 0x64523f,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x5c, 0x11, -0x197],
            's': [0x26, 0x25, 0x1c],
            'l': 0x1,
            'c': 0x56732d,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0xaf, 0x1b, -0x1ab],
            's': [0x26, 0x21, 0x1c],
            'l': 0x1,
            'c': 0x56732d,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0xaf, 0x1b, -0x1ab],
            's': [0x26, 0x21, 0x1c],
            'l': 0x1,
            'c': 0x56732d,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x5a, -0x1, -0x190],
            's': [0x4, 0x22, 0x4],
            'l': 0x1,
            'c': 0x64523f,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0xae, -0x1, -0x1a2],
            's': [0x4, 0x22, 0x4],
            'l': 0x1,
            'c': 0x64523f,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x43, 0x16, -0x112],
            's': [0x1a, 0x1c, 0x1c],
            'l': 0x1,
            'c': 0x4f6b27,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x42, -0x1, -0x111],
            's': [0x4, 0x1f, 0x4],
            'l': 0x1,
            'c': 0x64523f,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0xc, 0x32, -0x84],
            's': [0xb, 0xc, 0x1],
            'l': 0x1,
            'c': 0x0,
            'e': 0xffd87a,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0xc, 0x31, -0x83],
            's': [0xe, 0x1, 0x3],
            'l': 0x1,
            'c': 0x5f5f5f,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0xc, 0x3e, -0x84],
            's': [0xe, 0x1, 0x3],
            'l': 0x1,
            'c': 0x5f5f5f,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x12, 0x32, -0x84],
            's': [0x1, 0xc, 0x2],
            'l': 0x1,
            'c': 0x5f5f5f,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x6, 0x32, -0x84],
            's': [0x1, 0xc, 0x2],
            'l': 0x1,
            'c': 0x5f5f5f,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0xc, 0x32, -0x84],
            's': [0x1, 0xc, 0x2],
            'l': 0x1,
            'c': 0x5f5f5f,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x3f, 0xa, -0xb5],
            's': [0x19, 0x1e, 0x19],
            'l': 0x1,
            'c': 0x688c40,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x20, 0x1a, -0x7e],
            's': [0x10, 0xd, 0x16],
            'c': 0xc5b960,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0,
            'bo': 0x1
        }, {
            'p': [0x7d, -0x1, 0x2],
            's': [0x4, 0x2, 0x6],
            'l': 0x1,
            'c': 0x707070,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x80, 0x0, 0x59],
            's': [0x4, 0x2, 0x6],
            'l': 0x1,
            'c': 0x707070,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x58, -0x1, 0x52],
            's': [0x4, 0x2, 0x6],
            'l': 0x1,
            'c': 0x707070,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x8e, -0x1, 0x80],
            's': [0x4, 0x2, 0x6],
            'l': 0x1,
            'c': 0x707070,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x25, -0x1, -0x37],
            's': [0x4, 0x2, 0x6],
            'l': 0x1,
            'c': 0x707070,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0xef, 0x3, -0x42],
            's': [0x4, 0x0, 0x5],
            'i': 0x4,
            'l': 0x1,
            'r': [0x0, -0.53, 0x0],
            'c': 0x939393,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x26, 0x3, 0x9d],
            's': [0x4, 0x0, 0x5],
            'i': 0x4,
            'l': 0x1,
            'r': [0x0, -0.53, 0x0],
            'c': 0x939393,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0xf7, -0x1, -0x19e],
            's': [0x4, 0x22, 0x4],
            'l': 0x1,
            'c': 0x64523f,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x155, -0x1, -0x19d],
            's': [0x4, 0x22, 0x4],
            'l': 0x1,
            'c': 0x64523f,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0xfc, 0xf, -0x1ab],
            's': [0x33, 0x3a, 0x1c],
            'l': 0x1,
            'c': 0x56732d,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x174, 0xf, -0x19b],
            's': [0x30, 0x29, 0x23],
            'l': 0x1,
            'c': 0x56732d,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0xd4, 0xa, -0xb1],
            's': [0x1a, 0x1c, 0x1c],
            'l': 0x1,
            'c': 0x4f6b27,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x9c, -0x1, 0xeb],
            's': [0x4, 0x1f, 0x4],
            'l': 0x1,
            'c': 0x64523f,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x9d, 0xf, 0xeb],
            's': [0x1a, 0x1c, 0x1c],
            'l': 0x1,
            'c': 0x75a236,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0xa5, -0x1, -0xd5],
            's': [0x4, 0x22, 0x4],
            'l': 0x1,
            'c': 0x64523f,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0xcb, -0x1, -0xba],
            's': [0x4, 0x22, 0x4],
            'l': 0x1,
            'c': 0x64523f,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x7c, -0x1, -0xbc],
            's': [0x4, 0x22, 0x4],
            'l': 0x1,
            'c': 0x64523f,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x11d, -0x1, -0xb9],
            's': [0x4, 0x22, 0x4],
            'l': 0x1,
            'c': 0x64523f,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0xfa, -0x1, -0xca],
            's': [0x4, 0x22, 0x4],
            'l': 0x1,
            'c': 0x64523f,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x7d, -0x1, -0x69],
            's': [0x4, 0x2, 0x6],
            'l': 0x1,
            'c': 0x707070,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x106, -0x1, -0x11],
            's': [0x4, 0x2, 0x6],
            'l': 0x1,
            'c': 0x707070,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0xf5, -0x1, 0xbe],
            's': [0x4, 0x2, 0x6],
            'c': 0x707070,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x188, -0x1, 0x28],
            's': [0x4, 0x2, 0x6],
            'l': 0x1,
            'c': 0x707070,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x109, -0x1, -0x41],
            's': [0x4, 0x2, 0x6],
            'l': 0x1,
            'c': 0x707070,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x6d, -0x1, -0x92],
            's': [0x4, 0x2, 0x6],
            'l': 0x1,
            'c': 0x707070,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0xd5, -0x1, -0x13e],
            's': [0x4, 0x22, 0x4],
            'l': 0x1,
            'c': 0x64523f,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0xd5, -0x1, -0xf8],
            's': [0x4, 0x22, 0x4],
            'l': 0x1,
            'c': 0x64523f,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x37, -0x1, -0x197],
            's': [0x4, 0x22, 0x4],
            'l': 0x1,
            'c': 0x64523f,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x18, 0x1, 0x18b],
            's': [0x33, 0xf, 0x14],
            'i': 0x7,
            'l': 0x1,
            'r': [3.14, -1.22, 3.14]
        }, {
            'p': [-0x103, 0x11, 0xe7],
            's': [0x1a, 0x1c, 0x1c],
            'l': 0x1,
            'c': 0x75a236,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0xcb, 0x12, 0x123],
            's': [0x1a, 0x1a, 0x1c],
            'l': 0x1,
            'c': 0x5e822b,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0xcb, -0x1, 0x124],
            's': [0x4, 0x17, 0x4],
            'l': 0x1,
            'c': 0x64523f,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x9b, -0x4b, 0x4e3],
            's': [0x4, 0x155, 0x4],
            'l': 0x1,
            'c': 0xa2a2a2,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x134, 0x55, 0x460],
            's': [0x4, 0xbd, 0x2],
            'l': 0x1,
            'c': 0xa2a2a2,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x66, -0x1, -0xb4],
            's': [0x4, 0x1f, 0x4],
            'l': 0x1,
            'c': 0x64523f,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x40, -0x1, -0xb4],
            's': [0x4, 0x1f, 0x4],
            'l': 0x1,
            'c': 0x64523f,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x11d, -0x1, -0x4e],
            's': [0x4, 0x2, 0x4],
            'l': 0x1,
            'c': 0x707070,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x27, -0x1, -0x8d],
            's': [0x4, 0x2, 0x4],
            'l': 0x1,
            'c': 0x707070,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x15e, -0x1, 0x5],
            's': [0x4, 0x2, 0x4],
            'l': 0x1,
            'c': 0x707070,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x1ab, -0x1, -0x88],
            's': [0x4, 0x2, 0x4],
            'l': 0x1,
            'c': 0x707070,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x147, -0x1, 0x9a],
            's': [0x4, 0x2, 0x4],
            'l': 0x1,
            'c': 0x707070,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0xc8, -0x1, 0x79],
            's': [0x4, 0x2, 0x4],
            'c': 0x707070,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0xb, 0x0, -0x4b],
            's': [0x4, 0x2, 0x6],
            'l': 0x1,
            'c': 0x707070,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x85, 0x0, 0xf],
            's': [0x1, 0xf, 0x3],
            'l': 0x1,
            'r': [0x0, 0x0, -0.17],
            'c': 0x755f47,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x85, 0x0, 0xb],
            's': [0x1, 0xf, 0x3],
            'l': 0x1,
            'r': [0x0, 0x0, -0.17],
            'c': 0x755f47,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x2f, 0x2, 0x16],
            's': [0x4, 0x24, 0x4c],
            'c': 0x587fc8,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0xfd, 0x10, -0xb0],
            's': [0x1a, 0x1c, 0x1c],
            'l': 0x1,
            'c': 0x4f6b27,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0xb6, 0x0, -0xf5],
            's': [0x79, 0x33, 0x53],
            'c': 0xcfcfcf,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0xd1, -0x1, -0xb0],
            's': [0x4, 0x1f, 0x4],
            'l': 0x1,
            'c': 0x64523f,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0xb7, 0x42, -0x3a],
            's': [0x4, 0x1, 0x1],
            'l': 0x1,
            'c': 0x898686,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0xb9, 0x40, -0x3a],
            's': [0x4, 0x2, 0x3],
            'l': 0x1,
            'c': 0x898686,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0xb9, 0x3f, -0x3a],
            's': [0x3, 0x1, 0x2],
            'l': 0x1,
            'c': 0x0,
            'e': 0xffd87a,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0xb6, 0x33, -0xf5],
            's': [0x82, 0x3, 0x5f],
            'c': 0x6b6b6b,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0xad, 0x1f, -0xcb],
            's': [0xb, 0xc, 0x1],
            'l': 0x1,
            'c': 0x0,
            'e': 0xffd87a,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0xb3, 0x1f, -0xcb],
            's': [0x1, 0xc, 0x2],
            'l': 0x1,
            'c': 0x5f5f5f,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0xa7, 0x1f, -0xcb],
            's': [0x1, 0xc, 0x2],
            'l': 0x1,
            'c': 0x5f5f5f,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0xad, 0x1f, -0xcb],
            's': [0x1, 0xc, 0x2],
            'l': 0x1,
            'c': 0x5f5f5f,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0xad, 0x1e, -0xcb],
            's': [0xe, 0x1, 0x4],
            'l': 0x1,
            'c': 0x5f5f5f,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0xad, 0x2b, -0xcb],
            's': [0xe, 0x1, 0x3],
            'l': 0x1,
            'c': 0x5f5f5f,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x188, 0x0, 0x2eb],
            's': [0x2a5, 0x17, 0x5],
            'l': 0x1,
            'c': 0x64523f,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x181, 0x15, 0x2ef],
            's': [0x2b3, 0x1b, 0x35],
            'l': 0x1,
            'c': 0x486126,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x195, 0x0, -0x33],
            's': [0x7b, 0x3c, 0x78],
            'c': 0xc5a15e,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x193, 0x3c, -0x33],
            's': [0x82, 0x2, 0x82],
            'c': 0x505050,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x13c, 0xf, 0xb],
            's': [0x1a, 0x1e, 0x1c],
            'l': 0x1,
            'c': 0x75a236,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x140, -0x1, 0xad],
            's': [0x4, 0x1f, 0x4],
            'l': 0x1,
            'c': 0x64523f,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x2c3, 0x13, 0xa5],
            's': [0x2c, 0x1f, 0x514],
            'l': 0x1,
            'c': 0x5c7a34,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x2b6, 0x0, 0xb7],
            's': [0x1, 0x17, 0x4b8],
            'l': 0x1,
            'c': 0x64523f,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x157, 0x28, -0x53],
            's': [0x1, 0xc, 0xb],
            'l': 0x1,
            'c': 0x0,
            'e': 0xffd87a,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x158, 0x34, -0x53],
            's': [0x4, 0x1, 0xd],
            'l': 0x1,
            'c': 0x5f5f5f,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x157, 0x27, -0x53],
            's': [0x4, 0x1, 0xe],
            'l': 0x1,
            'c': 0x5f5f5f,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x158, 0x28, -0x59],
            's': [0x4, 0xc, 0x1],
            'l': 0x1,
            'c': 0x5f5f5f,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x158, 0x28, -0x4d],
            's': [0x4, 0xc, 0x1],
            'l': 0x1,
            'c': 0x5f5f5f,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x158, 0x28, -0x53],
            's': [0x4, 0xc, 0x1],
            'l': 0x1,
            'c': 0x5f5f5f,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x13b, 0x5, -0x2d],
            's': [0x1a, 0x1e, 0x1c],
            'l': 0x1,
            'c': 0x678e30,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x173, -0x19, 0x10],
            's': [0x1b, 0x69, 0xf],
            'c': 0x646464,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x136, 0x10, -0xa6],
            's': [0x1a, 0x1c, 0x1c],
            'l': 0x1,
            'c': 0x4f6b27,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x136, -0x1, -0xa7],
            's': [0x4, 0x1f, 0x4],
            'l': 0x1,
            'c': 0x64523f,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x122, 0xb, -0xd5],
            's': [0x1a, 0x1e, 0x1c],
            'l': 0x1,
            'c': 0x75a236,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x10e, 0x10, -0x112],
            's': [0x1a, 0x1c, 0x1c],
            'l': 0x1,
            'c': 0x4f6b27,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x10d, -0x1, -0x10f],
            's': [0x4, 0x22, 0x4],
            'l': 0x1,
            'c': 0x64523f,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x14e, 0x10, -0xd8],
            's': [0x1a, 0x1c, 0x1c],
            'l': 0x1,
            'c': 0x4f6b27,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x148, -0x1, -0xdb],
            's': [0x4, 0x22, 0x4],
            'l': 0x1,
            'c': 0x64523f,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x2a, 0x0, 0x19],
            's': [0x6, 0x9, 0x4e],
            'c': 0x6a933b,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x11, 0x2, -0x7e],
            's': [0xe, 0x25, 0x16],
            'c': 0xc5b960,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0,
            'bo': 0x1
        }, {
            'p': [0x20, 0x2, -0x77],
            's': [0x10, 0x18, 0x2],
            'pe': 0x1,
            'c': 0x755f47,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0,
            'bo': 0x1
        }, {
            'p': [0x2f, 0x2, -0x7e],
            's': [0xe, 0x25, 0x16],
            'c': 0xc5b960,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0,
            'bo': 0x1
        }, {
            'p': [-0xff, -0x1, 0xe6],
            's': [0x4, 0x17, 0x4],
            'l': 0x1,
            'c': 0x64523f,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x113, -0x1, 0xb7],
            's': [0x4, 0x1c, 0x4],
            'l': 0x1,
            'c': 0x64523f,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x20, 0x2a, -0x84],
            's': [0x1d, 0x12, 0x1],
            'l': 0x1,
            'c': 0x0,
            'e': 0xffd87a,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x11, 0x2a, -0x84],
            's': [0x1, 0x12, 0x2],
            'l': 0x1,
            'c': 0x5f5f5f,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x20, 0x2a, -0x84],
            's': [0x1, 0x12, 0x2],
            'l': 0x1,
            'c': 0x5f5f5f,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x20, 0x3c, -0x84],
            's': [0x1f, 0x1, 0x3],
            'l': 0x1,
            'c': 0x5f5f5f,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0xb, 0x2a, -0x74],
            's': [0x2, 0x8, 0x2],
            'l': 0x1,
            'c': 0x505050,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x35, 0x2a, -0x74],
            's': [0x2, 0x8, 0x2],
            'l': 0x1,
            'c': 0x505050,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x35, 0x2a, -0x83],
            's': [0x2, 0x8, 0x2],
            'l': 0x1,
            'c': 0x505050,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0xb, 0x2a, -0x83],
            's': [0x2, 0x8, 0x2],
            'l': 0x1,
            'c': 0x505050,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0xb, 0x2a, -0x7b],
            's': [0x1, 0x7, 0x1],
            'l': 0x1,
            'c': 0x505050,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x35, 0x2a, -0x7c],
            's': [0x1, 0x7, 0x1],
            'l': 0x1,
            'c': 0x505050,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x2e, 0x2a, -0x74],
            's': [0x1, 0x7, 0x1],
            'l': 0x1,
            'c': 0x505050,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x12, 0x2a, -0x74],
            's': [0x1, 0x7, 0x1],
            'l': 0x1,
            'c': 0x505050,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x1b, 0x2a, -0x74],
            's': [0x1, 0x7, 0x1],
            'l': 0x1,
            'c': 0x505050,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x24, 0x2a, -0x74],
            's': [0x1, 0x7, 0x1],
            'l': 0x1,
            'c': 0x505050,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x20, 0x31, -0x74],
            's': [0x2a, 0x1, 0x2],
            'l': 0x1,
            'c': 0x505050,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x35, 0x31, -0x7c],
            's': [0x2, 0x1, 0xe],
            'l': 0x1,
            'c': 0x505050,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0xb, 0x31, -0x7b],
            's': [0x2, 0x1, 0xe],
            'l': 0x1,
            'c': 0x505050,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0xb7, 0x24, -0x3a],
            's': [0x4, 0x2, 0x14],
            'c': 0x707070,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x132, 0x24, 0x40],
            's': [0x4, 0x2, 0x14],
            'c': 0x707070,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x2f, 0x2a, -0x84],
            's': [0x1, 0x12, 0x2],
            'l': 0x1,
            'c': 0x5f5f5f,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x154, -0x1, -0xb6],
            's': [0x4, 0x22, 0x4],
            'l': 0x1,
            'c': 0x64523f,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x171, -0x1, -0xb6],
            's': [0x4, 0x22, 0x4],
            'l': 0x1,
            'c': 0x64523f,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x1a3, -0x1, -0xb7],
            's': [0x4, 0x22, 0x4],
            'l': 0x1,
            'c': 0x64523f,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x187, -0x1, -0xc1],
            's': [0x4, 0x22, 0x4],
            'l': 0x1,
            'c': 0x64523f,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x46, 0x2, 0xa0],
            's': [0x3, 0x6, 0x6],
            'l': 0x1,
            'c': 0xc54343,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x46, 0x7, 0xa2],
            's': [0x1, 0x3, 0x1],
            'l': 0x1,
            'c': 0x878787,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x62, 0x2, -0xd4],
            's': [0xe, 0x64, 0x19],
            'c': 0x707070,
            't': 0xb,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x18d, 0x10, -0x80],
            's': [0x1a, 0x1c, 0x1c],
            'l': 0x1,
            'c': 0x4f6b27,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x185, -0x1, -0x80],
            's': [0x4, 0x22, 0x4],
            'l': 0x1,
            'c': 0x64523f,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x2b1, 0xf, -0x133],
            's': [0x30, 0x29, 0x3a],
            'l': 0x1,
            'c': 0x56732d,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x2b1, 0x11, -0xd0],
            's': [0x30, 0x29, 0x29],
            'l': 0x1,
            'c': 0x56732d,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x23e, 0x11, -0x19d],
            's': [0x30, 0x29, 0x23],
            'l': 0x1,
            'c': 0x56732d,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x194, 0x11, -0xb0],
            's': [0x1a, 0x1f, 0x1c],
            'l': 0x1,
            'c': 0x4f6b27,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x195, -0x1, -0xb1],
            's': [0x4, 0x22, 0x4],
            'l': 0x1,
            'c': 0x64523f,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x1cc, 0xf, -0x19b],
            's': [0x24, 0x2b, 0x23],
            'l': 0x1,
            'c': 0x56732d,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x171, 0x27, 0x107],
            's': [0xb, 0xc, 0x1],
            'l': 0x1,
            'c': 0x0,
            'e': 0xffd87a,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x171, 0x26, 0x106],
            's': [0xe, 0x1, 0x3],
            'l': 0x1,
            'c': 0x5f5f5f,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x171, 0x33, 0x107],
            's': [0xe, 0x1, 0x3],
            'l': 0x1,
            'c': 0x5f5f5f,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x177, 0x27, 0x107],
            's': [0x1, 0xc, 0x3],
            'l': 0x1,
            'c': 0x5f5f5f,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x16b, 0x27, 0x107],
            's': [0x1, 0xc, 0x3],
            'l': 0x1,
            'c': 0x5f5f5f,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x171, 0x27, 0x107],
            's': [0x1, 0xc, 0x3],
            'l': 0x1,
            'c': 0x5f5f5f,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x174, 0x0, 0x62],
            's': [0x68, 0x6a, 0x74],
            'l': 0x1,
            'c': 0xa2a2a2,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x174, 0x69, 0x62],
            's': [0x73, 0x3, 0x7e],
            'l': 0x1,
            'c': 0x707070,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x16e, 0x11, 0x2e1],
            's': [0x30, 0x29, 0x29],
            'l': 0x1,
            'c': 0x56732d,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x1e9, 0x11, 0x2e1],
            's': [0x42, 0x24, 0x29],
            'l': 0x1,
            'c': 0x56732d,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0xcd, 0x11, 0x2e1],
            's': [0x42, 0x24, 0x29],
            'l': 0x1,
            'c': 0x56732d,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x270, 0x11, 0x2e1],
            's': [0x42, 0x27, 0x29],
            'l': 0x1,
            'c': 0x56732d,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x2b1, 0x11, 0xca],
            's': [0x30, 0x29, 0x29],
            'l': 0x1,
            'c': 0x56732d,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x2b1, 0x11, 0x13e],
            's': [0x30, 0x29, 0x29],
            'l': 0x1,
            'c': 0x56732d,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x132, 0x17, 0xcd],
            's': [0x1a, 0x1a, 0x1c],
            'l': 0x1,
            'c': 0x5e822b,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x132, -0x1, 0xcd],
            's': [0x4, 0x1f, 0x4],
            'l': 0x1,
            'c': 0x64523f,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x122, 0xc, 0xf3],
            's': [0x1a, 0x1c, 0x1c],
            'l': 0x1,
            'c': 0x84af48,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x120, -0x1, 0xf9],
            's': [0x4, 0x17, 0x4],
            'l': 0x1,
            'c': 0x64523f,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x7e, 0x0, 0x3c],
            's': [0x2, 0x25, 0x2],
            'pe': 0x1,
            'c': 0x755f47,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x7e, 0x0, 0x62],
            's': [0x2, 0x25, 0x2],
            'pe': 0x1,
            'c': 0x755f47,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0xa1, -0x1, 0xcd],
            's': [0x4, 0x1a, 0x4],
            'c': 0x755f47,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x122, -0x1, -0x31],
            's': [0x4, 0x1a, 0x4],
            'c': 0x755f47,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0xee, -0x1, -0x9c],
            's': [0x4, 0x1a, 0x4],
            'c': 0x755f47,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0xb6, -0x1, 0x9f],
            's': [0x4, 0x1a, 0x4],
            'c': 0x755f47,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x128, -0x1, 0x9f],
            's': [0x4, 0x1a, 0x4],
            'c': 0x755f47,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x3f1, 0xa, 0x86],
            's': [0x41, 0x4c, 0x4c],
            'l': 0x1,
            'c': 0x608230,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x3e3, 0x15, -0x182],
            's': [0x41, 0x35, 0x4c],
            'l': 0x1,
            'c': 0x608230,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x22b, 0x15, -0x22f],
            's': [0x89, 0x36, 0x4c],
            'l': 0x1,
            'c': 0x608230,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x39c, 0xa, 0x25e],
            's': [0x4a, 0x4a, 0x57],
            'l': 0x1,
            'c': 0x608230,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x121, -0x7, 0x135],
            's': [0x52, 0x6a, 0x56],
            'l': 0x1,
            'c': 0xa2a2a2,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x351, -0x8, -0x208],
            's': [0x41, 0x54, 0x4c],
            'l': 0x1,
            'c': 0x608230,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x295, -0x4, 0xa5],
            's': [0x7b, 0x40, 0x78],
            'l': 0x1,
            'c': 0xc5a15e,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x295, 0x3c, 0xa5],
            's': [0x84, 0x4, 0x83],
            'l': 0x1,
            'c': 0x616161,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x121, 0x63, 0x135],
            's': [0x59, 0x4, 0x5d],
            'l': 0x1,
            'c': 0x787878,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x159, 0x12, 0xf7],
            's': [0x1a, 0x1a, 0x1c],
            'l': 0x1,
            'c': 0x5e822b,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x1af, 0xe, 0xa6],
            's': [0x1a, 0x1a, 0x1c],
            'l': 0x1,
            'c': 0x5e822b,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x10d, 0x4a, 0x10a],
            's': [0xb, 0xc, 0x1],
            'l': 0x1,
            'c': 0x0,
            'e': 0xffd87a,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x10d, 0x49, 0x109],
            's': [0xe, 0x1, 0x3],
            'l': 0x1,
            'c': 0x5f5f5f,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x10d, 0x56, 0x10a],
            's': [0xe, 0x1, 0x3],
            'l': 0x1,
            'c': 0x5f5f5f,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x107, 0x4a, 0x10a],
            's': [0x1, 0xc, 0x2],
            'l': 0x1,
            'c': 0x5f5f5f,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x113, 0x4a, 0x10a],
            's': [0x1, 0xc, 0x2],
            'l': 0x1,
            'c': 0x5f5f5f,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x10d, 0x4a, 0x10a],
            's': [0x1, 0xc, 0x2],
            'l': 0x1,
            'c': 0x5f5f5f,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x3e3, 0x11, -0x99],
            's': [0x41, 0x44, 0x2f],
            'l': 0x1,
            'c': 0x608230,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x88, 0x3, -0x50],
            's': [0x7, 0x20, 0x17],
            'c': 0x7f7f7f,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x82, 0x3, -0x50],
            's': [0x7, 0x1d, 0x17],
            'c': 0x7f7f7f,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x7c, 0x3, -0x50],
            's': [0x7, 0x1a, 0x17],
            'c': 0x7f7f7f,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x76, 0x3, -0x50],
            's': [0x7, 0x17, 0x17],
            'c': 0x7f7f7f,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x70, 0x3, -0x50],
            's': [0x7, 0x14, 0x17],
            'c': 0x7f7f7f,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x6a, 0x3, -0x50],
            's': [0x7, 0x11, 0x17],
            'c': 0x7f7f7f,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x64, 0x3, -0x50],
            's': [0x7, 0xe, 0x17],
            'c': 0x7f7f7f,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x5e, 0x3, -0x50],
            's': [0x7, 0xb, 0x17],
            'c': 0x7f7f7f,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x58, 0x3, -0x50],
            's': [0x7, 0x8, 0x17],
            'c': 0x7f7f7f,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x52, 0x3, -0x50],
            's': [0x7, 0x5, 0x17],
            'c': 0x7f7f7f,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x4c, 0x2, -0x50],
            's': [0x7, 0x3, 0x17],
            'c': 0x7f7f7f,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x66, 0x2, -0x50],
            's': [0x48, 0x24, 0x18],
            'i': 0x9,
            'v': 0x1,
            't': 0x5,
            'd': 0x2,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x7d, 0x3, 0x36],
            's': [0x4, 0x0, 0x5],
            'i': 0x4,
            'l': 0x1,
            'r': [0x0, 1.04, 0x0],
            'c': 0xaaaaaa,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0xfb, 0x3, 0x62],
            's': [0x7, 0x20, 0x17],
            'c': 0x7f7f7f,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0xf4, 0x3, 0x62],
            's': [0x7, 0x1d, 0x17],
            'c': 0x7f7f7f,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0xed, 0x3, 0x62],
            's': [0x7, 0x1a, 0x17],
            'c': 0x7f7f7f,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0xe6, 0x3, 0x62],
            's': [0x7, 0x17, 0x17],
            'c': 0x7f7f7f,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0xdf, 0x3, 0x62],
            's': [0x7, 0x14, 0x17],
            'c': 0x7f7f7f,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0xd8, 0x3, 0x62],
            's': [0x7, 0x11, 0x17],
            'c': 0x7f7f7f,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0xd1, 0x3, 0x62],
            's': [0x7, 0xe, 0x17],
            'c': 0x7f7f7f,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0xca, 0x3, 0x62],
            's': [0x7, 0xb, 0x17],
            'c': 0x7f7f7f,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0xc3, 0x3, 0x62],
            's': [0x7, 0x8, 0x17],
            'c': 0x7f7f7f,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0xbc, 0x3, 0x62],
            's': [0x7, 0x5, 0x17],
            'c': 0x7f7f7f,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0xb5, 0x2, 0x62],
            's': [0x7, 0x3, 0x17],
            'c': 0x7f7f7f,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0xd4, 0x2, 0x62],
            's': [0x54, 0x24, 0x18],
            'i': 0x9,
            'v': 0x1,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x140, 0x48, 0x43],
            's': [0x1, 0x14, 0x17],
            'l': 0x1,
            'c': 0x0,
            'e': 0xffd87a,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x140, 0x48, 0x7d],
            's': [0x1, 0x14, 0x17],
            'l': 0x1,
            'c': 0x0,
            'e': 0xffd87a,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x13f, 0x47, 0x43],
            's': [0x3, 0x1, 0x1b],
            'l': 0x1,
            'c': 0x5f5f5f,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x140, 0x5c, 0x43],
            's': [0x2, 0x1, 0x1b],
            'l': 0x1,
            'c': 0x5f5f5f,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x140, 0x48, 0x37],
            's': [0x2, 0x14, 0x1],
            'l': 0x1,
            'c': 0x5f5f5f,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x140, 0x48, 0x4f],
            's': [0x2, 0x14, 0x1],
            'l': 0x1,
            'c': 0x5f5f5f,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x140, 0x48, 0x43],
            's': [0x2, 0x14, 0x1],
            'l': 0x1,
            'c': 0x5f5f5f,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x13f, 0x47, 0x7d],
            's': [0x3, 0x1, 0x1b],
            'l': 0x1,
            'c': 0x5f5f5f,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x140, 0x5c, 0x7d],
            's': [0x2, 0x1, 0x1b],
            'l': 0x1,
            'c': 0x5f5f5f,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x140, 0x48, 0x89],
            's': [0x2, 0x14, 0x1],
            'l': 0x1,
            'c': 0x5f5f5f,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x140, 0x48, 0x71],
            's': [0x2, 0x14, 0x1],
            'l': 0x1,
            'c': 0x5f5f5f,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x140, 0x48, 0x7d],
            's': [0x2, 0x14, 0x1],
            'l': 0x1,
            'c': 0x5f5f5f,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x89, -0x1, -0x9c],
            's': [0x4, 0x1a, 0x4],
            'c': 0x755f47,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x77, 0x0, -0xf],
            's': [0xc, 0xc, 0xc],
            'i': 0x1
        }, {
            'p': [-0x2f, -0x1, 0x165],
            's': [0x26, 0x18, 0x2],
            'c': 0x755f47,
            't': 0xa,
            'ts': 0x0,
            'td': 0x0,
            'bo': 0x1
        }, {
            'p': [0x74, -0x1, 0x113],
            's': [0x29, 0x18, 0x2],
            'pe': 0x1,
            'c': 0x755f47,
            't': 0xa,
            'ts': 0x0,
            'td': 0x0,
            'bo': 0x1
        }, {
            'p': [0x46, 0x2, 0x165],
            's': [0x4, 0x0, 0x5],
            'i': 0x4,
            'l': 0x1,
            'r': [0x0, -1.23, 0x0],
            'c': 0x9d9d9d,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0xc, 0x2, 0xf9],
            's': [0x4, 0x0, 0x5],
            'i': 0x4,
            'l': 0x1,
            'r': [0x0, -0.53, 0x0],
            'c': 0x9d9d9d,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x31, -0x1, 0x109],
            's': [0x15, 0x18, 0x2],
            'c': 0x755f47,
            't': 0xa,
            'ts': 0x0,
            'td': 0x0,
            'bo': 0x1
        }, {
            'p': [-0x1d, -0x1, 0x165],
            's': [0x4, 0x1a, 0x4],
            'c': 0x755f47,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x29, -0x1, 0x16d],
            's': [0x3, 0xc, 0x1],
            'l': 0x1,
            'r': [0.35, 0x0, 0x0],
            'c': 0xc8c8c8,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x3a, 0x9, 0x171],
            's': [0x28, 0x3, 0x1],
            'l': 0x1,
            'c': 0xc8c8c8,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x29, -0x1, 0x175],
            's': [0x3, 0xc, 0x1],
            'l': 0x1,
            'r': [-0.35, 0x0, 0x0],
            'c': 0xc8c8c8,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x4b, -0x1, 0x16d],
            's': [0x3, 0xc, 0x1],
            'l': 0x1,
            'r': [0.35, 0x0, 0x0],
            'c': 0xc8c8c8,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x4b, -0x1, 0x175],
            's': [0x3, 0xc, 0x1],
            'l': 0x1,
            'r': [-0.35, 0x0, 0x0],
            'c': 0xc8c8c8,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x3, 0x9, 0x171],
            's': [0x28, 0x3, 0x1],
            'l': 0x1,
            'c': 0xc8c8c8,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0xe, -0x1, 0x16d],
            's': [0x3, 0xc, 0x1],
            'l': 0x1,
            'r': [0.35, 0x0, 0x0],
            'c': 0xc8c8c8,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x14, -0x1, 0x16d],
            's': [0x3, 0xc, 0x1],
            'l': 0x1,
            'r': [0.35, 0x0, 0x0],
            'c': 0xc8c8c8,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0xe, -0x1, 0x175],
            's': [0x3, 0xc, 0x1],
            'l': 0x1,
            'r': [-0.35, 0x0, 0x0],
            'c': 0xc8c8c8,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x14, -0x1, 0x175],
            's': [0x3, 0xc, 0x1],
            'l': 0x1,
            'r': [-0.35, 0x0, 0x0],
            'c': 0xc8c8c8,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x3a, 0x1, 0x17e],
            's': [0xc, 0xc, 0xc],
            'i': 0x1
        }, {
            'p': [-0x1f, 0x0, 0x171],
            's': [0xc, 0xc, 0xc],
            'i': 0x1
        }, {
            'p': [-0x5, 0x1, 0x179],
            's': [0xc, 0xc, 0xc],
            'i': 0x1
        }, {
            'p': [0x2f, 0x1, 0x17a],
            's': [0x6, 0x8, 0x6],
            'i': 0x2
        }, {
            'p': [0x22, 0x1, 0x170],
            's': [0x6, 0x8, 0x6],
            'i': 0x2
        }, {
            'p': [0x59, 0x0, 0x175],
            's': [0xc, 0xc, 0xc],
            'i': 0x1
        }, {
            'p': [0x49, 0x2, 0x196],
            's': [0x4, 0x0, 0x5],
            'i': 0x4,
            'l': 0x1,
            'r': [3.14, -1.39, 3.14],
            'c': 0x9d9d9d,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x4b, 0x2, 0x11a],
            's': [0x4, 0x0, 0x5],
            'i': 0x4,
            'l': 0x1,
            'r': [0x0, -1.4, 0x0],
            'c': 0x9d9d9d,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x5a, 0x0, 0x10a],
            's': [0x6, 0x8, 0x6],
            'i': 0x2
        }, {
            'p': [0x64, -0x1, 0x15c],
            's': [0x4, 0x2, 0x6],
            'l': 0x1,
            'c': 0x707070,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0xa4, -0x1, 0x156],
            's': [0x2, 0x1b, 0x30],
            'pe': 0x1,
            'c': 0x755f47,
            't': 0xa,
            'ts': 0x0,
            'td': 0x0,
            'bo': 0x1
        }, {
            'p': [0x85, 0x0, 0x124],
            's': [0x6, 0x8, 0x6],
            'i': 0x2
        }, {
            'p': [0x18, -0x1, 0x1ac],
            's': [0xa8, 0xd, 0x77],
            'v': 0x1,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0,
            'bo': 0x1
        }, {
            'p': [-0x2f, -0x1, 0x16b],
            's': [0x25, 0xd, 0xe],
            'v': 0x1,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0,
            'bo': 0x1
        }, {
            'p': [-0x14, 0x1, 0x174],
            's': [0x6, 0x8, 0x6],
            'i': 0x2
        }, {
            'p': [0xbc, -0x1, 0x153],
            's': [0x4, 0x1c, 0x4],
            'l': 0x1,
            'c': 0x64523f,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0xbd, 0x16, 0x155],
            's': [0x1a, 0x1c, 0x1c],
            'l': 0x1,
            'c': 0x4f6b27,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0xdd, -0x1, 0x15f],
            's': [0x1, 0x7, 0x1],
            'l': 0x1,
            'c': 0x6a933b,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x121, -0x1, 0x16e],
            's': [0x1, 0x7, 0x1],
            'l': 0x1,
            'c': 0x6a933b,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x71, 0x3, -0x25],
            's': [0x4, 0x0, 0x5],
            'i': 0x4,
            'l': 0x1,
            'r': [0x0, -0.53, 0x0],
            'c': 0x939393,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0xa7, 0x3, -0x4b],
            's': [0x4, 0x0, 0x5],
            'i': 0x4,
            'l': 0x1,
            'r': [0x0, -0.53, 0x0],
            'c': 0x939393,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0xa4, 0x27, -0xd],
            's': [0x4, 0x0, 0x5],
            'i': 0x4,
            'l': 0x1,
            'r': [0x0, -0.53, 0x0],
            'c': 0x939393,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0xf9, 0x27, 0x2f],
            's': [0x4, 0x0, 0x5],
            'i': 0x4,
            'l': 0x1,
            'r': [0x0, -0.53, 0x0],
            'c': 0x939393,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x8e, 0x2, 0x19],
            's': [0xc, 0xc, 0xc],
            'i': 0x1
        }, {
            'p': [-0xaf, 0x2, -0x1c],
            's': [0x2, 0x4, 0x2],
            'l': 0x1,
            'pe': 0x1,
            'c': 0x4f8444,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0xaf, 0x4, -0x1c],
            's': [0x1, 0x4, 0x1],
            'l': 0x1,
            'pe': 0x1,
            'c': 0x4f8444,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0xf3, 0x2, 0x8],
            's': [0x1, 0x11, 0x3],
            'l': 0x1,
            'r': [0x0, 0x0, 0.17],
            'c': 0x755f47,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x81, 0x2, 0xc],
            's': [0x1, 0x11, 0x3],
            'l': 0x1,
            'r': [0x0, 0x0, 0.17],
            'c': 0x755f47,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x8b, 0x2, 0x4a],
            's': [0x1, 0x11, 0x3],
            'l': 0x1,
            'r': [0x0, 0x0, 0.17],
            'c': 0x755f47,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x8b, 0x2, 0x51],
            's': [0x1, 0x11, 0x3],
            'l': 0x1,
            'r': [0x0, 0x0, 0.17],
            'c': 0x755f47,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x9e, 0x26, -0x16],
            's': [0x2, 0x4, 0x2],
            'l': 0x1,
            'pe': 0x1,
            'c': 0x4f8444,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x9e, 0x28, -0x16],
            's': [0x1, 0x4, 0x1],
            'l': 0x1,
            'pe': 0x1,
            'c': 0x4f8444,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0xca, 0x26, 0x4d],
            's': [0x4, 0x16, 0x2],
            'l': 0x1,
            'r': [0.17, 0x0, 0x0],
            'c': 0x755f47,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0xd1, 0x26, 0x4d],
            's': [0x4, 0x16, 0x2],
            'l': 0x1,
            'r': [0.17, 0x0, 0x0],
            'c': 0x755f47,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x91, 0x2, -0x16],
            's': [0x2, 0x4, 0x2],
            'l': 0x1,
            'pe': 0x1,
            'c': 0x4f8444,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x91, 0x4, -0x16],
            's': [0x1, 0x4, 0x1],
            'l': 0x1,
            'pe': 0x1,
            'c': 0x4f8444,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0xbc, 0x8, 0x58],
            's': [0x2, 0x4, 0x2],
            'l': 0x1,
            'pe': 0x1,
            'c': 0x4f8444,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0xbc, 0xa, 0x58],
            's': [0x1, 0x4, 0x1],
            'l': 0x1,
            'pe': 0x1,
            'c': 0x4f8444,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x5d, 0xe, -0x46],
            's': [0x2, 0x4, 0x2],
            'l': 0x1,
            'pe': 0x1,
            'c': 0x4f8444,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x5d, 0x10, -0x46],
            's': [0x1, 0x4, 0x1],
            'l': 0x1,
            'pe': 0x1,
            'c': 0x4f8444,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x91, 0x27, 0x69],
            's': [0x4, 0x0, 0x5],
            'i': 0x4,
            'l': 0x1,
            'r': [0x0, 1.39, 0x0],
            'c': 0x939393,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0xa8, 0x26, 0x6a],
            's': [0x4, 0x16, 0x2],
            'l': 0x1,
            'r': [0.17, 0x0, 0x0],
            'c': 0x755f47,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x23, 0x1, 0x130],
            's': [0xc, 0xc, 0xc],
            'i': 0x1
        }, {
            'p': [0x17, 0x1, 0x130],
            's': [0xc, 0xc, 0xc],
            'i': 0x1
        }, {
            'p': [0x1d, 0xd, 0x130],
            's': [0xc, 0xc, 0xc],
            'i': 0x1
        }, {
            'p': [-0x5c, 0x20, -0x2],
            's': [0x7, 0x2, 0x7],
            'c': 0x898686,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x5c, 0x22, -0x2],
            's': [0x3, 0x2, 0x3],
            'c': 0x898686,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x5c, 0x1f, -0x2],
            's': [0x3, 0x1, 0x3],
            'l': 0x1,
            'c': 0x0,
            'e': 0xffd87a,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x5c, 0x4a, -0x2],
            's': [0x3, 0x2, 0x3],
            'c': 0x898686,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x5c, 0x48, -0x2],
            's': [0x7, 0x2, 0x7],
            'c': 0x898686,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x5c, 0x47, -0x2],
            's': [0x3, 0x1, 0x3],
            'l': 0x1,
            'c': 0x0,
            'e': 0xffd87a,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0xb7, 0x4a, 0x27],
            's': [0x3, 0x2, 0x3],
            'c': 0x898686,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0xb7, 0x48, 0x27],
            's': [0x7, 0x2, 0x7],
            'c': 0x898686,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0xb7, 0x47, 0x27],
            's': [0x3, 0x1, 0x3],
            'l': 0x1,
            'c': 0x0,
            'e': 0xffd87a,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0xb7, 0x22, 0x27],
            's': [0x3, 0x2, 0x3],
            'c': 0x898686,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x110, 0x20, 0x27],
            's': [0x7, 0x2, 0x7],
            'c': 0x898686,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0xb7, 0x1f, 0x27],
            's': [0x3, 0x1, 0x3],
            'l': 0x1,
            'c': 0x0,
            'e': 0xffd87a,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x110, 0x22, 0x27],
            's': [0x3, 0x2, 0x3],
            'c': 0x898686,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0xb7, 0x20, 0x27],
            's': [0x7, 0x2, 0x7],
            'c': 0x898686,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x110, 0x1f, 0x27],
            's': [0x3, 0x1, 0x3],
            'l': 0x1,
            'c': 0x0,
            'e': 0xffd87a,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x126, 0x2, 0x17],
            's': [0xc, 0xc, 0xc],
            'i': 0x1
        }, {
            'p': [0x120, 0x3, 0x9],
            's': [0x4, 0x0, 0x5],
            'i': 0x4,
            'l': 0x1,
            'r': [-3.14, 1.4, -3.14],
            'c': 0x939393,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0xa3, 0x20, -0x2],
            's': [0x7, 0x2, 0x7],
            'c': 0x898686,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0xa3, 0x22, -0x2],
            's': [0x3, 0x2, 0x3],
            'c': 0x898686,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0xa3, 0x1f, -0x2],
            's': [0x3, 0x1, 0x3],
            'l': 0x1,
            'c': 0x0,
            'e': 0xffd87a,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x1c, 0x1, 0x131],
            's': [0x48, 0x32, 0x3f],
            'i': 0xe,
            'l': 0x1
        }, {
            'p': [-0x59, 0x26, -0x8],
            's': [0x3d, 0x26, 0x41],
            'i': 0xe,
            'l': 0x1
        }, {
            'p': [0xb8, 0x2, 0x25],
            's': [0x3d, 0x21, 0x3b],
            'i': 0xe,
            'l': 0x1
        }, {
            'p': [0x16f, 0x0, 0x20],
            's': [0x18, 0x24, 0x18],
            'i': 0x17,
            'l': 0x1,
            'tm': 0x0
        }, {
            'p': [-0xd7, 0x0, 0x23],
            's': [0x18, 0x24, 0x18],
            'i': 0x17,
            'l': 0x1,
            'tm': '1'
        }, {
            'p': [-0x64, 0xe, 0x46],
            's': [0xc, 0xc, 0xc],
            'i': 0x1
        }, {
            'p': [-0x64, 0x2, 0x46],
            's': [0xc, 0xc, 0xc],
            'i': 0x8
        }, {
            'p': [-0x23, -0x1, -0x12],
            's': [0x3, 0x2, 0x3],
            'l': 0x1,
            'c': 0x707070,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x23, -0x1, -0x1c],
            's': [0x3, 0x2, 0x3],
            'l': 0x1,
            'c': 0x707070,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x23, -0x1, -0x17],
            's': [0x4, 0x2, 0x5],
            'l': 0x1,
            'c': 0x707070,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x1d, -0x1, -0x1c],
            's': [0x5, 0x2, 0x4],
            'l': 0x1,
            'c': 0x707070,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x1d, -0x1, -0x12],
            's': [0x5, 0x2, 0x4],
            'l': 0x1,
            'c': 0x707070,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0x1d, -0x1, -0x17],
            's': [0x3, 0x2, 0x3],
            'l': 0x1,
            'c': 0x707070,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x7f, -0x1, 0x27],
            's': [0x4, 0x2, 0x3],
            'l': 0x1,
            'c': 0x707070,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x7f, -0x1, 0x31],
            's': [0x4, 0x2, 0x3],
            'l': 0x1,
            'c': 0x707070,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x7f, -0x1, 0x2c],
            's': [0x4, 0x2, 0x5],
            'l': 0x1,
            'c': 0x707070,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x6d, -0x1, 0x28],
            's': [0x4, 0x2, 0x6],
            'l': 0x1,
            'c': 0x707070,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x79, -0x1, 0x30],
            's': [0x4, 0x2, 0x6],
            'l': 0x1,
            'c': 0x707070,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x73, -0x1, 0x2c],
            's': [0x4, 0x2, 0x5],
            'l': 0x1,
            'c': 0x707070,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x67, -0x1, 0x2c],
            's': [0x4, 0x2, 0x5],
            'l': 0x1,
            'c': 0x707070,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x79, -0x1, 0x28],
            's': [0x4, 0x2, 0x6],
            'l': 0x1,
            'c': 0x707070,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x6d, -0x1, 0x30],
            's': [0x4, 0x2, 0x6],
            'l': 0x1,
            'c': 0x707070,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x73, -0x1, 0x31],
            's': [0x4, 0x2, 0x3],
            'l': 0x1,
            'c': 0x707070,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x73, -0x1, 0x27],
            's': [0x4, 0x2, 0x3],
            'l': 0x1,
            'c': 0x707070,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x61, -0x1, 0x30],
            's': [0x4, 0x2, 0x6],
            'l': 0x1,
            'c': 0x707070,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x61, -0x1, 0x28],
            's': [0x4, 0x2, 0x6],
            'l': 0x1,
            'c': 0x707070,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x5b, -0x1, 0x2c],
            's': [0x4, 0x2, 0x5],
            'l': 0x1,
            'c': 0x707070,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x55, -0x1, 0x28],
            's': [0x4, 0x2, 0x6],
            'l': 0x1,
            'c': 0x707070,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x55, -0x1, 0x30],
            's': [0x4, 0x2, 0x6],
            'l': 0x1,
            'c': 0x707070,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x67, -0x1, 0x31],
            's': [0x4, 0x2, 0x3],
            'l': 0x1,
            'c': 0x707070,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x5b, -0x1, 0x31],
            's': [0x4, 0x2, 0x3],
            'l': 0x1,
            'c': 0x707070,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x5b, -0x1, 0x27],
            's': [0x4, 0x2, 0x3],
            'l': 0x1,
            'c': 0x707070,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x67, -0x1, 0x27],
            's': [0x4, 0x2, 0x3],
            'l': 0x1,
            'c': 0x707070,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0xfb, -0x1, 0x8d],
            's': [0x4, 0x1a, 0x4],
            'pe': 0x1,
            'c': 0x755f47,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [-0xfb, -0x1, 0x76],
            's': [0x4, 0x1a, 0x4],
            'pe': 0x1,
            'c': 0x755f47,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0xdc, 0x52, 0x2b],
            's': [0xb2, 0x4, 0x98],
            'r': [0.09, 0x0, 0x0],
            'c': 0x505050,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0,
            'bo': 0x1
        }, {
            'p': [0x12e, 0x54, -0x1],
            's': [0x4, 0x3, 0x2e],
            'c': 0xc54343,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0,
            'bo': 0x1
        }, {
            'p': [0x12e, 0x57, -0xd],
            's': [0x4, 0x3, 0x16],
            'c': 0xc54343,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x12e, 0x26, 0x5b],
            's': [0x4, 0x26, 0x26],
            'c': 0xc54343,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0,
            'bo': 0x1
        }, {
            'p': [0x12e, 0x4c, 0x5b],
            's': [0x4, 0x3, 0x26],
            'c': 0xc54343,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x8a, 0x42, 0x51],
            's': [0x4, 0xf, 0x22],
            'c': 0xc54343,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0,
            'bo': 0x1
        }, {
            'p': [0x8a, 0x57, -0xe],
            's': [0x4, 0x1, 0x4],
            'c': 0xc54343,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x38, 0x1, 0x73],
            's': [0x6, 0x8, 0x6],
            'i': 0x2
        }, {
            'p': [0x38, 0x6, 0x6f],
            's': [0x1, 0x3, 0x1],
            'c': 0x878787,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x38, 0x1, 0x6d],
            's': [0x3, 0x6, 0x6],
            'c': 0xc54343,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x28, 0xa, 0x30],
            's': [0x18, 0x2, 0x64],
            'pe': 0x1,
            'c': 0x2c3f55,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x28, 0x25, 0x30],
            's': [0x1c, 0x2, 0x64],
            'pe': 0x1,
            'c': '#2c3f55',
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x28, 0x3, 0x26],
            's': [0x1b, 0x4, 0x4],
            'c': 0x827d7d,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x28, 0x3, 0x16],
            's': [0x1b, 0x4, 0x4],
            'c': 0x827d7d,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x1d, 0x1, 0x16],
            's': [0x4, 0x8, 0x8],
            'c': 0x161616,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x1d, 0x1, 0x26],
            's': [0x4, 0x8, 0x8],
            'c': 0x161616,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x22, 0x1, 0x26],
            's': [0x4, 0x8, 0x8],
            'c': 0x161616,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x22, 0x1, 0x16],
            's': [0x4, 0x8, 0x8],
            'c': 0x161616,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x33, 0x1, 0x26],
            's': [0x4, 0x8, 0x8],
            'c': 0x161616,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x2e, 0x1, 0x26],
            's': [0x4, 0x8, 0x8],
            'c': 0x161616,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x33, 0x1, 0x16],
            's': [0x4, 0x8, 0x8],
            'c': 0x161616,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x2e, 0x1, 0x16],
            's': [0x4, 0x8, 0x8],
            'c': 0x161616,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x28, 0xc, 0x61],
            's': [0x18, 0x19, 0x2],
            'pe': 0x1,
            'c': '#2c3f55',
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x28, 0x6, 0x3b],
            's': [0x5, 0x4, 0x55],
            'c': 0x827d7d,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x28, 0x6, -0x1],
            's': [0x18, 0x4, 0x3],
            'c': 0x827d7d,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x2f, 0xc, -0x2],
            's': [0xc, 0x19, 0x2],
            'pe': 0x1,
            'c': '#6b6b6b',
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x1a, 0xc, 0x3],
            's': [0x2, 0x19, 0xc],
            'c': '#6b6b6b',
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x28, 0x5, -0x1],
            's': [0x1b, 0x1, 0x4],
            'c': 0x827d7d,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x28, 0x3, 0x6e],
            's': [0x1b, 0x4, 0x4],
            'c': 0x827d7d,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x33, 0x1, 0x6e],
            's': [0x4, 0x8, 0x8],
            'c': 0x161616,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x1d, 0x1, 0x6e],
            's': [0x4, 0x8, 0x8],
            'c': 0x161616,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x32, 0x7, -0x2],
            's': [0x2, 0x2, 0x2],
            'l': 0x1,
            'c': 0xff4b00,
            'e': 0xff0000,
            'o': 0.8,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x1e, 0x7, -0x2],
            's': [0x2, 0x2, 0x2],
            'l': 0x1,
            'c': '#ff4b00',
            'e': 0xff0000,
            'o': 0.8,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x28, 0x5, 0x66],
            's': [0x18, 0x1c, 0x4],
            'c': '#bbbbbb',
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x28, 0x5, 0x76],
            's': [0x18, 0x18, 0x4],
            'c': '#bbbbbb',
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x28, 0x6, 0x6f],
            's': [0x11, 0x6, 0xe],
            'c': '#595959',
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x28, 0x5, 0x79],
            's': [0x19, 0x6, 0x3],
            'c': '#5c5c5c',
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x28, 0x11, 0x7a],
            's': [0x16, 0xa, 0x1],
            'l': 0x1,
            'c': '#22272d',
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x28, 0xb, 0x79],
            's': [0x18, 0x6, 0x2],
            'c': '#bbbbbb',
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x28, 0x11, 0x79],
            's': [0x18, 0xb, 0x2],
            'l': 0x1,
            'c': '#bbbbbb',
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x28, 0x11, 0x79],
            's': [0x18, 0xb, 0x2],
            'v': 0x1,
            'c': '#213041',
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x32, 0xc, 0x7a],
            's': [0x2, 0x2, 0x2],
            'l': 0x1,
            'e': 0xffd100,
            'o': 0.8,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x1e, 0xc, 0x7a],
            's': [0x2, 0x2, 0x2],
            'l': 0x1,
            'e': 0xffd100,
            'o': 0.8,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x28, 0xc, 0x7a],
            's': [0xe, 0x4, 0x2],
            'c': '#6e6e6e',
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x28, 0x14, 0x76],
            's': [0x1c, 0x4, 0x1],
            'c': '#6e6e6e',
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x28, 0x3, 0x56],
            's': [0x16, 0x6, 0x16],
            'c': 0x827d7d,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x1e, 0xc, 0x64],
            's': [0x1, 0x19, 0x1],
            'c': '#666666',
            'e': 0x181818,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x32, 0xc, 0x64],
            's': [0x1, 0x19, 0x1],
            'c': '#666666',
            'e': 0x181818,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x28, 0x8, 0x31],
            's': [0x1c, 0x2, 0x62],
            'pe': 0x1,
            'v': 0x1,
            'c': 0x2c3f55,
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x28, 0x14, 0x71],
            's': [0x19, 0x8, 0x8],
            'c': '#22272d',
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x28, 0xc, 0x6f],
            's': [0x18, 0x12, 0xe],
            'c': '#bbbbbb',
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x2d, 0xc, 0x2e],
            's': [0x6, 0x2, 0x5c],
            'l': 0x1,
            'c': 0x6b5946,
            't': 0x2,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x2f, 0xc, -0x3],
            's': [0x4, 0x19, 0x2],
            'i': 0x3,
            't': 0x2,
            'd': 0x3
        }, {
            'p': [0xb, 0x1, 0x16],
            's': [0x4, 0x7, 0x4],
            'i': 0x10,
            'l': 0x1
        }, {
            'p': [0x38, 0x1, -0xc],
            's': [0x4, 0x7, 0x4],
            'i': 0x10,
            'l': 0x1
        }, {
            'p': [0x17, 0x1, -0xc],
            's': [0x4, 0x7, 0x4],
            'i': 0x10,
            'l': 0x1
        }, {
            'p': [0x23, 0xc, 0x57],
            's': [0xc, 0xc, 0xc],
            'i': 0x8
        }, {
            'p': [0x1b, 0xa, 0x4e],
            's': [0x2, 0x1b, 0x28],
            'pe': 0x1,
            'c': '#2c3f55',
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x1b, 0xa, 0x13],
            's': [0x2, 0x1b, 0x2a],
            'pe': 0x1,
            'c': '#2c3f55',
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x35, 0xa, 0x59],
            's': [0x2, 0x1b, 0x12],
            'pe': 0x1,
            'c': '#2c3f55',
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x35, 0xa, 0x1e],
            's': [0x2, 0x1b, 0x40],
            'pe': 0x1,
            'c': '#2c3f55',
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x35, 0x20, 0x47],
            's': [0x1, 0x5, 0x12],
            'c': '#ffffff',
            't': 0xa,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x1b, 0x20, 0x31],
            's': [0x1, 0x5, 0x12],
            'c': '#ffffff',
            't': 0xa,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x35, 0xa, 0x47],
            's': [0x2, 0x2, 0x12],
            'c': '#2c3f55',
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x1b, 0xa, 0x31],
            's': [0x2, 0x2, 0x12],
            'c': '#2c3f55',
            't': 0x5,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x12, 0x1, 0x4b],
            's': [0x6, 0x2, 0x5c],
            'c': 0x846c53,
            't': 0x2,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0xb, 0x1, 0x4a],
            's': [0x6, 0x2, 0x5c],
            'c': 0x755f47,
            't': 0x2,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x4, 0x1, 0x4c],
            's': [0x6, 0x2, 0x5c],
            'c': 0x503f2e,
            't': 0x2,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0x6, 0x3, 0x4b],
            's': [0x6, 0x2, 0x5c],
            'c': 0x755f47,
            't': 0x2,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0xe, 0x3, 0x4c],
            's': [0x6, 0x2, 0x5c],
            'c': 0x755f47,
            't': 0x2,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0xa, 0x5, 0x4c],
            's': [0x6, 0x2, 0x5c],
            'c': 0x6b5946,
            't': 0x2,
            'ts': 0x0,
            'td': 0x0
        }, {
            'p': [0xb, 0x1, 0x7d],
            's': [0x4, 0x7, 0x4],
            'i': 0x10,
            'l': 0x1
        }, {
            'p': [-0x22, 0x0, 0x3d],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'c': '#d1f777'
        }, {
            'p': [-0x25, 0x0, -0x3],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'c': '#d1f777'
        }, {
            'p': [-0x1a, 0x0, 0x25],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'c': '#d1f777'
        }, {
            'p': [-0x1a, 0x0, -0x2c],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'c': '#d1f777'
        }, {
            'p': [-0x27, 0x0, -0x60],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'c': '#d1f777'
        }, {
            'p': [-0xe, 0x0, -0x69],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'c': '#d1f777'
        }, {
            'p': [-0x5, 0x0, -0x66],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'c': '#d1f777'
        }, {
            'p': [0x6, 0x0, -0x7f],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1
        }, {
            'p': [0x24, -0x1, -0x65],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'c': '#d1f777'
        }, {
            'p': [0x3c, 0x0, -0x7c],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'c': '#d1f777'
        }, {
            'p': [0x5a, 0x0, -0x80],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'c': '#d1f777'
        }, {
            'p': [0x63, 0x0, -0x88],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [0x0, 0.79, 0x0],
            'c': '#d1f777'
        }, {
            'p': [0x6a, 0x0, -0x76],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'c': '#d1f777'
        }, {
            'p': [0x6a, 0x0, -0x54],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'c': '#d1f777'
        }, {
            'p': [0x55, 0x0, -0x1d],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'c': '#d1f777'
        }, {
            'p': [0x83, -0x1, -0x16],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'c': '#d1f777'
        }, {
            'p': [0x54, 0x0, 0xc],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'c': '#d1f777'
        }, {
            'p': [0x83, 0x0, 0x1b],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1
        }, {
            'p': [0x53, 0x0, 0x3b],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'c': '#d1f777'
        }, {
            'p': [0x56, 0x0, 0x77],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'c': '#d1f777'
        }, {
            'p': [0x9e, 0x0, -0x99],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1
        }, {
            'p': [0x5a, 0x0, 0xa6],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'c': '#d1f777'
        }, {
            'p': [0x57, 0x0, 0xee],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1
        }, {
            'p': [-0x1b, 0x0, 0xed],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1
        }, {
            'p': [-0x21, 0x0, 0xca],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1
        }, {
            'p': [-0x1f, 0x0, 0x95],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'c': '#d1f777'
        }, {
            'p': [-0x19, 0x0, 0x7a],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'c': '#d1f777'
        }, {
            'p': [-0x45, 0x0, 0xae],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1
        }, {
            'p': [-0x60, 0x0, 0xc9],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1
        }, {
            'p': [-0x43, 0x0, 0xc9],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1
        }, {
            'p': [-0xaa, 0x0, 0xc9],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1
        }, {
            'p': [-0x93, 0x0, 0xae],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1
        }, {
            'p': [-0xd8, 0x0, 0xb4],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1
        }, {
            'p': [-0xd8, 0x0, 0xac],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1
        }, {
            'p': [-0xf7, 0x0, 0xc6],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1
        }, {
            'p': [-0xf7, 0x0, 0x76],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1
        }, {
            'p': [-0xb4, 0x0, 0x44],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1
        }, {
            'p': [-0x97, 0x0, 0x45],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1
        }, {
            'p': [-0x97, 0x0, 0x7d],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1
        }, {
            'p': [-0xf3, 0x0, 0x32],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1
        }, {
            'p': [-0xf1, 0x0, 0x4f],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1
        }, {
            'p': [-0xd7, 0x0, -0x5],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1
        }, {
            'p': [-0xb8, 0x0, -0x2e],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1
        }, {
            'p': [-0x101, 0x0, -0xc],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1
        }, {
            'p': [-0xfe, 0x0, -0x80],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1
        }, {
            'p': [-0xda, 0x0, -0x58],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1
        }, {
            'p': [-0xc4, 0x0, -0x93],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1
        }, {
            'p': [-0xcc, 0x0, -0x8f],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1
        }, {
            'p': [-0x86, 0x0, -0x95],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1
        }, {
            'p': [-0x63, 0x0, -0x71],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1
        }, {
            'p': [-0x9e, 0x0, -0x64],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1
        }, {
            'p': [-0x23, 0x0, -0x99],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1
        }, {
            'p': [-0x41, 0x0, -0x76],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1
        }, {
            'p': [-0x1c, 0x0, 0x134],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1
        }, {
            'p': [0x67, 0x0, 0x117],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1
        }, {
            'p': [0x6d, 0x0, 0x12e],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1
        }, {
            'p': [0x55, 0x0, 0x152],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1
        }, {
            'p': [0x5e, 0x0, 0x16a],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1
        }, {
            'p': [0x90, 0x0, 0x161],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1
        }, {
            'p': [0xa0, 0x0, 0x143],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1
        }, {
            'p': [-0x1a, -0x1, 0x17d],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1
        }, {
            'p': [-0x21, -0x1, 0x19d],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1
        }, {
            'p': [0x54, -0x1, 0x19e],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1
        }, {
            'p': [0x85, 0x0, 0x45],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1
        }, {
            'p': [0x84, 0x0, 0x70],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'c': '#d1f777'
        }, {
            'p': [0x97, 0x0, 0x83],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1
        }, {
            'p': [0xbd, 0x0, 0x84],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1
        }, {
            'p': [0xe5, 0x0, 0x9c],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1
        }, {
            'p': [0x10f, 0x0, 0x76],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1
        }, {
            'p': [0x11e, 0x0, 0x9c],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1
        }, {
            'p': [0x14e, 0x0, 0x9c],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1
        }, {
            'p': [0x134, 0x0, 0x72],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1
        }, {
            'p': [0x134, 0x0, 0x3b],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1
        }, {
            'p': [0x15d, 0x0, 0x26],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1
        }, {
            'p': [0x173, 0x0, 0x87],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1
        }, {
            'p': [0x18b, 0x0, 0x74],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1
        }, {
            'p': [0x187, 0x0, 0x16],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1
        }, {
            'p': [0x18c, 0x0, -0x1],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1
        }, {
            'p': [0x133, 0x0, -0x12],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1
        }, {
            'p': [0x128, 0x0, -0x22],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1
        }, {
            'p': [0x104, 0x0, -0x23],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1
        }, {
            'p': [0x104, 0x0, -0x48],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1
        }, {
            'p': [0x18a, 0x0, -0x2b],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1
        }, {
            'p': [0x194, 0x0, -0x31],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1
        }, {
            'p': [0x1ad, 0x0, -0x3c],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1
        }, {
            'p': [0x195, 0x0, -0x99],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1
        }, {
            'p': [0x124, 0x0, -0x9a],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1
        }, {
            'p': [0xce, 0x0, -0x7d],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1
        }, {
            'p': [0xb1, 0x0, -0x9a],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1
        }, {
            'p': [0xb1, 0x0, -0x93],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1
        }, {
            'p': [-0xa, 0x0, -0x6c],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1
        }, {
            'p': [0x40, 0x0, -0x7e],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'c': '#d1f777'
        }, {
            'p': [-0x11f, 0x0, -0x36],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1
        }, {
            'p': [0x6c, -0x1, 0x76],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'c': '#d1f777'
        }, {
            'p': [0x63, -0x1, 0x98],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'c': '#d1f777'
        }, {
            'p': [0x7c, 0x0, 0x97],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1
        }, {
            'p': [0x6e, 0x0, 0x90],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'c': '#d1f777'
        }, {
            'p': [0x5a, 0x0, 0xb3],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'c': '#d1f777'
        }, {
            'p': [0x58, 0x0, 0x108],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1
        }, {
            'p': [-0x1f, 0x0, 0x109],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1
        }, {
            'p': [-0x20, 0x0, 0xff],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1
        }, {
            'p': [-0x21, 0x0, 0xdf],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1
        }, {
            'p': [0x69, -0x1, 0x52],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'c': '#d1f777'
        }, {
            'p': [0x6d, 0x0, 0xa],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'c': '#d1f777'
        }, {
            'p': [0x5f, 0x0, -0x3e],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'c': '#d1f777'
        }, {
            'p': [0x4a, -0x1, -0x71],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'c': '#d1f777'
        }, {
            'p': [0x60, 0x0, -0x67],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'c': '#d1f777'
        }, {
            'p': [0x88, 0x0, -0x94],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1
        }, {
            'p': [0x63, 0x0, -0x9a],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [0x0, -0.61, 0x0],
            'c': '#d1f777'
        }, {
            'p': [0xaa, 0x0, -0x7e],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1
        }, {
            'p': [0xd3, 0x0, -0x9a],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1
        }, {
            'p': [0xf3, 0x0, -0x7e],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1
        }, {
            'p': [0x106, 0x0, -0x98],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1
        }, {
            'p': [0x134, 0x0, -0x76],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1
        }, {
            'p': [0x11f, 0x0, -0x59],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1
        }, {
            'p': [0x145, 0x0, -0x24],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1
        }, {
            'p': [0x14d, 0x0, -0x69],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1
        }, {
            'p': [0x133, 0x0, -0x40],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1
        }, {
            'p': [0x167, 0x0, -0x4c],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1
        }, {
            'p': [0x16c, 0x0, -0x1e],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1
        }, {
            'p': [0x178, 0x0, 0x37],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1
        }, {
            'p': [0x166, 0x0, 0x71],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1
        }, {
            'p': [0x182, 0x0, 0x9b],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1
        }, {
            'p': [0x16b, 0x0, -0x76],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1
        }, {
            'p': [0x17a, 0x0, -0x94],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1
        }, {
            'p': [0x1a7, 0x0, -0x94],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1
        }, {
            'p': [0x1ad, 0x0, -0x69],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1
        }, {
            'p': [0x195, 0x0, -0x62],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1
        }, {
            'p': [0x188, 0x0, -0x79],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1
        }, {
            'p': [0x187, 0x0, -0x63],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1
        }, {
            'p': [0x187, 0x0, -0x4f],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1
        }, {
            'p': [0x154, 0x0, 0x0],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1
        }, {
            'p': [0x153, 0x0, 0x37],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1
        }, {
            'p': [0x152, 0x0, 0x56],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1
        }, {
            'p': [-0x83, 0x0, 0xc8],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1
        }, {
            'p': [-0xd5, 0x0, 0xc8],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1
        }, {
            'p': [-0xab, 0x0, 0xac],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1
        }, {
            'p': [-0xca, 0x0, 0x83],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1
        }, {
            'p': [-0xb4, 0x0, 0x6b],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1
        }, {
            'p': [-0xd3, 0x0, 0x46],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1
        }, {
            'p': [-0xd7, 0x0, 0x12],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1
        }, {
            'p': [-0x11c, 0x0, 0x66],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1
        }, {
            'p': [-0x104, 0x0, 0x66],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1
        }, {
            'p': [-0x120, 0x0, 0x8e],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1
        }, {
            'p': [-0x121, 0x0, 0xbf],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1
        }, {
            'p': [-0x108, 0x0, 0xca],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1
        }, {
            'p': [-0xfe, 0x0, 0xb3],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1
        }, {
            'p': [-0x102, 0x0, 0x99],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1
        }, {
            'p': [-0xb7, 0x2, 0x2e],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1
        }, {
            'p': [-0xb9, 0x0, 0x6],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1
        }, {
            'p': [-0x100, 0x0, 0xf],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1
        }, {
            'p': [-0xff, 0x0, 0x26],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1
        }, {
            'p': [-0x120, 0x0, 0x24],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1
        }, {
            'p': [-0x11f, 0x0, 0x1],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1
        }, {
            'p': [-0x11f, 0x0, -0x1e],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1
        }, {
            'p': [-0x102, 0x0, -0x51],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1
        }, {
            'p': [-0xea, 0x0, -0x2b],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1
        }, {
            'p': [-0xd0, 0x0, -0x2c],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1
        }, {
            'p': [-0xc5, 0x0, -0x58],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1
        }, {
            'p': [-0x10c, 0x0, -0x71],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1
        }, {
            'p': [-0x116, 0x0, -0x8b],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1
        }, {
            'p': [-0xa5, 0x0, -0x7c],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1
        }, {
            'p': [-0x5b, 0x0, -0x86],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1
        }, {
            'p': [-0x2f, 0x0, 0x15e],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1
        }, {
            'p': [-0x71, 0x55, -0x10],
            's': [0x89, 0xa, 0x9f],
            'i': 0xc,
            'l': 0x1
        }, {
            'p': [0xdb, 0x55, 0x2b],
            's': [0xaa, 0xa, 0x92],
            'i': 0xc,
            'l': 0x1
        }, {
            'p': [0xd0, 0x32, -0x4e],
            's': [0x5d, 0xa, 0x57],
            'i': 0xc,
            'l': 0x1
        }, {
            'p': [-0x69, 0x32, 0x77],
            's': [0x57, 0xa, 0x63],
            'i': 0xc,
            'l': 0x1
        }]
    }, {
        'name': 'Sandstorm',
        'ambInd': 0x3,
        'modURL': '',
        'terrainSeed': '',
        'terrainWidth': 0x800,
        'terrainHeight': 0x800,
        'terrainMntMlt': 0x1,
        'terrainMntCol': '#a0a0a0',
        'terrainGrsCol': '#4a6904',
        'terrainDrtCol': '#8c6835',
        'skyDome': !0x0,
        'skyDomeCol0': '#7bd7ff',
        'skyDomeCol1': '#f7d4b4',
        'skyDomeCol2': '#dce8ed',
        'zone': !0x1,
        'zoneSize': 0x1f4,
        'zoneSpeed': 0x1,
        'zoneCol0': '#c542d9',
        'zoneCol1': '#c542d9',
        'zoneCol2': '#c542d9',
        'sizeMlt': 0x2,
        'shadowR': 0x400,
        'ambient': 0xa29290,
        'light': 0xffffff,
        'sky': 0xdce8ed,
        'fog': 0xbb9999,
        'fogD': 633.4396002067896,
        'dthY': -0x64,
        'modes': [0x0],
        'camPos': [-0x7c, 0x3e, -0x10d],
        'spawns': [[0x0, 0xd, -0x3, 0x0], [-0x4d, 0x21, -0x15b, 0x0, 0x1], [0x116, 0x21, 0x7a, 0x0, 0x2], [-0x69, 0x30, 0x56, 0x0, 0x1], [0xf1, 0x21, -0x142, 0x0, 0x1], [-0x2a, 0x30, 0x30, 0x0], [-0x27, 0x21, -0xd2, 0x0, 0x3]],
        'ambO': 0.7,
        'ambS': 0x5,
        'shadLength': 0x183,
        'shadWidth': 0x1a9,
        'objects': [{
            'p': [-0x5, 0xc, 0x0],
            's': [0x5e, 0x1, 0x72],
            't': 0x1
        }, {
            'p': [-0x43, 0xc, 0x0],
            's': [0x1e, 0x1, 0x2c],
            't': 0x1
        }, {
            'p': [-0xb2, 0x20, 0x0],
            's': [0x7a, 0x1, 0x96],
            't': 0x1
        }, {
            'p': [-0xa3, 0xe, 0x9d],
            's': [0x9a, 0x22, 0x38],
            't': 0x1
        }, {
            'p': [-0x1c, 0x9, 0x68],
            's': [0x138, 0x27, 0x32],
            't': 0x1
        }, {
            'p': [0x1, 0x2f, -0x1a],
            's': [0x68, 0x1, 0xd2],
            't': 0x1
        }, {
            'p': [0xc2, -0x4, 0x38],
            's': [0xd8, 0x25, 0xdd],
            't': 0x1
        }, {
            'p': [-0xaf, 0x13, -0x89],
            's': [0x35, 0x19, 0x40],
            't': 0x1
        }, {
            'p': [0x40, 0xd, -0x4],
            's': [0x2c, 0x14, 0x24],
            'i': 0x9,
            't': 0x1
        }, {
            'p': [-0xd0, 0x21, 0x65],
            's': [0x24, 0xf, 0x38],
            'i': 0x9,
            't': 0x1,
            'd': 0x1
        }, {
            'p': [-0xae, 0x21, -0x59],
            's': [0x30, 0xb, 0x20],
            'i': 0x9,
            't': 0x1,
            'd': 0x3
        }, {
            'p': [-0xaf, 0x21, -0xb9],
            's': [0x35, 0xb, 0x20],
            'i': 0x9,
            't': 0x1,
            'd': 0x1
        }, {
            'p': [0x50, 0x21, -0x6a],
            's': [0x36, 0xf, 0x31],
            'i': 0x9,
            't': 0x1,
            'd': 0x2
        }, {
            'p': [0x6e, 0x21, 0x36],
            's': [0x24, 0xf, 0x32],
            'i': 0x9,
            't': 0x1,
            'd': 0x1
        }, {
            'p': [-0x8a, 0x1a, 0x4c],
            's': [0x68, 0x1d, 0x6],
            'c': '#9d8672',
            't': 0xb
        }, {
            'p': [-0xbb, 0x1a, 0x68],
            's': [0x6, 0x1d, 0x32],
            'c': '#9d8672',
            't': 0xb
        }, {
            'p': [0x9f, 0x20, 0x67],
            's': [0x26, 0x1, 0x37],
            't': 0x1
        }, {
            'p': [-0x32, 0x10, -0xe1],
            's': [0x6, 0x16, 0x19],
            'c': '#9d8672',
            't': 0xb
        }, {
            'p': [-0x32, 0x10, -0xf6],
            's': [0x6, 0x24, 0x7],
            'c': '#9d8672',
            't': 0xb
        }, {
            'p': [-0x32, 0x1f, -0xcf],
            's': [0x6, 0x13, 0xb],
            'c': '#9d8672',
            't': 0xb
        }, {
            'p': [-0x32, 0x26, -0xd8],
            's': [0x6, 0x4, 0x7],
            'c': '#9d8672',
            't': 0xb
        }, {
            'p': [0xdc, 0x21, 0x7d],
            's': [0xc, 0xc, 0xc],
            'i': 0x1
        }, {
            'p': [-0x67, 0x20, -0x80],
            's': [0x60, 0x2, 0x6f],
            'l': 0x1,
            'c': '#393939',
            't': 0xb
        }, {
            'p': [-0x67, 0x6d, -0x81],
            's': [0x64, 0x3, 0x75],
            'c': '#393939',
            't': 0xb,
            'bo': 0x1
        }, {
            'p': [0x3d, 0x57, -0xf5],
            's': [0x57, 0x4, 0x4d],
            'c': 0x4a4a4a,
            't': 0xb,
            'bo': 0x1
        }, {
            'p': [0x14, 0x57, -0xa7],
            's': [0xa9, 0x4, 0x4f],
            'c': 0x4a4a4a,
            't': 0xb,
            'bo': 0x1
        }, {
            'p': [0x3d, 0x1e, -0xf2],
            's': [0x52, 0x4, 0x4f],
            'l': 0x1,
            'c': '#4a4a4a',
            't': 0xb
        }, {
            'p': [0x14, 0x1e, -0xa6],
            's': [0xa4, 0x4, 0x49],
            'l': 0x1,
            'c': '#4a4a4a',
            't': 0x2
        }, {
            'p': [0x14, 0x20, -0xa6],
            's': [0xa2, 0x37, 0x47],
            'c': '#ffd5b1',
            'bo': 0x1
        }, {
            'p': [-0x21, 0x33, -0xca],
            's': [0xf, 0x1, 0x1],
            'c': 0x4a4a4a,
            't': 0x2
        }, {
            'p': [-0x28, 0x22, -0xca],
            's': [0x1, 0x11, 0x1],
            'c': 0x4a4a4a,
            't': 0x2
        }, {
            'p': [-0x1a, 0x22, -0xca],
            's': [0x1, 0x11, 0x1],
            'c': 0x4a4a4a,
            't': 0x2
        }, {
            'p': [-0x21, 0x22, -0xc9],
            's': [0xd, 0x11, 0x2],
            'l': 0x1,
            'c': 0x7d736b,
            't': 0x2
        }, {
            'p': [-0x93, 0x70, -0x78],
            's': [0x23, 0x3, 0xf],
            'c': 0x505050,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [-0x85, 0x21, -0xc2],
            's': [0x24, 0x1, 0x15],
            'l': 0x1,
            'c': '#4a4a4a',
            't': 0xb
        }, {
            'p': [-0x9f, 0x28, -0x134],
            's': [0x57, 0x1, 0x39],
            't': 0x1
        }, {
            'p': [-0xbb, 0x21, -0x10c],
            's': [0x1f, 0x8, 0x17],
            'i': 0x9,
            't': 0x1,
            'd': 0x3
        }, {
            'p': [-0x8d, 0x28, -0x10e],
            's': [0x33, 0x1, 0x13],
            't': 0x1
        }, {
            'p': [-0xa9, 0x11, -0x10e],
            's': [0x5, 0x1d, 0x13],
            'c': '#9d8672',
            't': 0xb
        }, {
            'p': [-0x8d, 0x11, -0x102],
            's': [0x3d, 0x1d, 0x5],
            'c': '#9d8672',
            't': 0xb
        }, {
            'p': [-0x71, 0x11, -0x12b],
            's': [0x5, 0x1d, 0x4d],
            'c': '#9d8672',
            't': 0xb
        }, {
            'p': [-0x67, 0x11, -0x81],
            's': [0x5e, 0x5c, 0x70],
            'c': '#ffd5b1',
            'bo': 0x1
        }, {
            'p': [-0x61, 0x21, -0x15d],
            's': [0xc, 0xc, 0xc],
            'i': 0x1
        }, {
            'p': [-0xc5, 0x2c, -0x9b],
            's': [0x1, 0x13, 0x6],
            'l': 0x1,
            'r': [0x0, 0x0, 0.17],
            'c': 0x848484,
            't': 0x2
        }, {
            'p': [-0xe5, 0x20, -0xa2],
            's': [0x38, 0x2d, 0x6f],
            'c': '#ffd5b1',
            'bo': 0x1
        }, {
            'p': [-0xe5, 0x4d, -0xa2],
            's': [0x3d, 0x3, 0x73],
            'c': 0x4a4a4a,
            't': 0xb,
            'bo': 0x1
        }, {
            'p': [-0xf8, 0x20, -0x135],
            's': [0x5e, 0x5e, 0x70],
            'c': '#ffd5b1',
            'bo': 0x1
        }, {
            'p': [-0xf8, 0x7e, -0x135],
            's': [0x66, 0x3, 0x75],
            'c': 0x575757,
            't': 0xb,
            'bo': 0x1
        }, {
            'p': [-0xf1, 0x20, -0xed],
            's': [0x38, 0x21, 0x6f],
            'c': '#9d8672',
            't': 0xb,
            'bo': 0x1
        }, {
            'p': [-0xf1, 0x41, -0xed],
            's': [0x3e, 0x3, 0x6f],
            'c': 0x4a4a4a,
            't': 0xb,
            'bo': 0x1
        }, {
            'p': [-0xf1, 0x1f, -0xec],
            's': [0x3a, 0x3, 0x23],
            'l': 0x1,
            'c': '#4a4a4a',
            't': 0xb
        }, {
            'p': [-0xe5, 0x1f, -0xa2],
            's': [0x3a, 0x3, 0x70],
            'l': 0x1,
            'c': 0x4a4a4a,
            't': 0x2
        }, {
            'p': [-0x154, 0x20, -0xc7],
            's': [0x5b, 0x49, 0x74],
            'c': '#ffd5b1'
        }, {
            'p': [-0xc5, 0x2c, -0xa3],
            's': [0x1, 0x13, 0x6],
            'l': 0x1,
            'r': [0x0, 0x0, 0.17],
            'c': 0x848484,
            't': 0x2
        }, {
            'p': [-0x3f, 0x20, -0x19b],
            's': [0x51, 0x55, 0x70],
            'c': '#ffd5b1',
            'bo': 0x1
        }, {
            'p': [-0xaa, 0x61, -0x188],
            's': [0x8c, 0x4, 0x78],
            'c': 0x434343,
            't': 0xb,
            'bo': 0x1
        }, {
            'p': [-0x6e, 0x52, -0x14f],
            's': [0x4, 0x4, 0x8],
            'pe': 0x1,
            'c': 0x6b6b6b,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [-0xaa, 0x20, -0x188],
            's': [0x85, 0x41, 0x70],
            'c': '#ffd5b1',
            'bo': 0x1
        }, {
            'p': [-0x3f, 0x75, -0x19b],
            's': [0x57, 0x4, 0x77],
            'c': 0x4d4d4d,
            't': 0xb,
            'bo': 0x1
        }, {
            'p': [-0x3f, 0x9a, -0x19b],
            's': [0x3a, 0x3, 0x38],
            'c': 0x4a4a4a,
            't': 0xb
        }, {
            'p': [0x16, 0x3d, -0x17d],
            's': [0x5b, 0x20, 0x58],
            'c': '#ffd5b1'
        }, {
            'p': [-0xcb, 0x86, -0x1e3],
            's': [0x61, 0x5, 0x5e],
            'c': 0x525252,
            't': 0xb
        }, {
            'p': [-0x67, 0x54, -0x81],
            's': [0x5f, 0x2, 0x71],
            'l': 0x1,
            'c': '#393939',
            't': 0xb
        }, {
            'p': [-0x67, 0x3b, -0x81],
            's': [0x60, 0x2, 0x71],
            'l': 0x1,
            'c': '#393939',
            't': 0xb
        }, {
            'p': [-0x3f, 0x7b, -0x19b],
            's': [0x34, 0x20, 0x31],
            'c': '#ffd5b1'
        }, {
            'p': [0x3d, 0x20, -0xf1],
            's': [0x50, 0x37, 0x4f],
            'c': '#ffd5b1',
            'bo': 0x1
        }, {
            'p': [-0x3f, 0x59, -0x19b],
            's': [0x53, 0x2, 0x71],
            'l': 0x1,
            'c': '#4a4a4a',
            't': 0xb
        }, {
            'p': [-0x3f, 0x3b, -0x19b],
            's': [0x53, 0x2, 0x71],
            'l': 0x1,
            'c': '#4a4a4a',
            't': 0xb
        }, {
            'p': [-0xfa, 0x52, -0x135],
            's': [0x64, 0x2, 0x71],
            'l': 0x1,
            'c': '#4a4a4a',
            't': 0xb
        }, {
            'p': [0x3d, 0x3b, -0xf2],
            's': [0x52, 0x2, 0x4f],
            'l': 0x1,
            'c': '#4a4a4a',
            't': 0xb
        }, {
            'p': [0x14, 0x3b, -0xa6],
            's': [0xa4, 0x2, 0x49],
            'l': 0x1,
            'c': '#4a4a4a',
            't': 0xb
        }, {
            'p': [-0x3f, 0x20, -0x19b],
            's': [0x53, 0x2, 0x71],
            'l': 0x1,
            'c': '#4a4a4a',
            't': 0xb
        }, {
            'p': [-0x97, 0x52, -0x14f],
            's': [0x4, 0x4, 0x9],
            'pe': 0x1,
            'c': 0x6b6b6b,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [-0xbd, 0x52, -0x14f],
            's': [0x4, 0x4, 0xa],
            'pe': 0x1,
            'c': 0x6b6b6b,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [-0x85, 0x20, -0xc2],
            's': [0x22, 0x1b, 0x12],
            'c': '#ffd5b1'
        }, {
            'p': [0xf, 0x2d, -0xd0],
            's': [0xc, 0xc, 0xc],
            'i': 0x1
        }, {
            'p': [0xf, 0x21, -0xdc],
            's': [0xc, 0xc, 0xc],
            'i': 0x1
        }, {
            'p': [-0xcc, 0x20, -0x1e5],
            's': [0x5b, 0x66, 0x57],
            'c': '#ffd5b1'
        }, {
            'p': [0x16, 0x5a, -0x17d],
            's': [0x62, 0x4, 0x5d],
            'c': '#525252',
            't': 0xb,
            'bo': 0x1
        }, {
            'p': [0x16, 0x3b, -0x17d],
            's': [0x5c, 0x2, 0x59],
            'l': 0x1,
            'c': '#525252',
            't': 0xb
        }, {
            'p': [0x16, 0x20, -0x17d],
            's': [0x5d, 0x2, 0x59],
            'l': 0x1,
            'c': '#525252',
            't': 0xb
        }, {
            'p': [0xfd, 0x20, -0xa0],
            's': [0x40, 0x35, 0x48],
            'c': '#ffd5b1',
            'bo': 0x1
        }, {
            'p': [0xc1, 0x5f, -0x125],
            's': [0x46, 0x3, 0x75],
            'c': '#4a4a4a',
            't': 0xb,
            'bo': 0x1
        }, {
            'p': [0xc1, 0x36, -0x124],
            's': [0x45, 0x2, 0x73],
            'l': 0x1,
            'c': '#4a4a4a',
            't': 0xb
        }, {
            'p': [0xc1, 0x20, -0x11d],
            's': [0x46, 0x2, 0x65],
            'l': 0x1,
            'c': '#4a4a4a',
            't': 0xb
        }, {
            'p': [0x9a, 0x3b, -0x111],
            's': [0x12, 0x2, 0x2c],
            'pe': 0x1,
            'c': 0x919191,
            't': 0x2
        }, {
            'p': [0x93, 0x21, -0x125],
            's': [0x2, 0x1d, 0x2],
            'pe': 0x1,
            'c': 0x919191,
            't': 0x2
        }, {
            'p': [0x93, 0x21, -0xfd],
            's': [0x2, 0x1d, 0x2],
            'pe': 0x1,
            'c': 0x919191,
            't': 0x2
        }, {
            'p': [0x9e, 0x21, -0xf4],
            's': [0x1, 0x26, 0x4],
            'i': 0x3,
            't': 0x2,
            'd': 0x2
        }, {
            'p': [0x81, 0x20, -0x193],
            's': [0x7c, 0x49, 0x5d],
            'c': '#ffd5b1'
        }, {
            'p': [0x81, 0x69, -0x194],
            's': [0x84, 0x4, 0x73],
            'c': '#525252',
            't': 0xb,
            'bo': 0x1
        }, {
            'p': [0xa8, 0x21, -0x194],
            's': [0x2c, 0x1, 0x73],
            'l': 0x1,
            'c': '#4a4a4a',
            't': 0xb
        }, {
            'p': [0x81, 0x21, -0x163],
            's': [0x25, 0x24, 0x6],
            'c': 0x828282,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [0xec, 0x20, -0x16f],
            's': [0x5a, 0x20, 0x3d],
            'c': '#ffd5b1',
            'bo': 0x1
        }, {
            'p': [0xec, 0x40, -0x16f],
            's': [0x61, 0x5, 0x44],
            'c': 0x525252,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [0xec, 0x1d, -0x16f],
            's': [0x5c, 0x5, 0x3f],
            'l': 0x1,
            'c': '#4a4a4a',
            't': 0xb
        }, {
            'p': [0x4a, 0x21, -0x155],
            's': [0xc, 0xc, 0xc],
            'i': 0x1
        }, {
            'p': [0x39, 0x21, -0x120],
            's': [0xc, 0xc, 0xc],
            'i': 0x1
        }, {
            'p': [0x105, 0x21, -0x14a],
            's': [0xc, 0xc, 0xc],
            'i': 0x1
        }, {
            'p': [0x111, 0x21, -0x14a],
            's': [0xc, 0xc, 0xc],
            'i': 0x1
        }, {
            'p': [-0xd5, 0x3b, -0xf6],
            's': [0xa, 0x4, 0x4],
            'pe': 0x1,
            'c': 0x6b6b6b,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [-0xd5, 0x3b, -0xe1],
            's': [0xa, 0x4, 0x4],
            'pe': 0x1,
            'c': 0x6b6b6b,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [-0x3b, 0x21, -0x150],
            's': [0xc, 0xc, 0xc],
            'i': 0x1
        }, {
            'p': [-0x3b, 0x21, -0x15c],
            's': [0xc, 0xc, 0xc],
            'i': 0x1
        }, {
            'p': [-0x32, 0x10, -0x168],
            's': [0x6, 0x28, 0xf],
            'c': '#9d8672',
            't': 0xb
        }, {
            'p': [-0x32, 0x10, -0x10e],
            's': [0x6, 0x28, 0x29],
            'c': '#9d8672',
            't': 0xb
        }, {
            'p': [-0x32, 0x10, -0xf0],
            's': [0x6, 0x1d, 0x5],
            'c': '#9d8672',
            't': 0xb
        }, {
            'p': [-0x32, 0x26, -0xea],
            's': [0x6, 0x2, 0x7],
            'c': '#9d8672',
            't': 0xb
        }, {
            'p': [-0x32, 0x32, -0xcc],
            's': [0x6, 0x6, 0x5],
            'c': '#9d8672',
            't': 0xb
        }, {
            'p': [-0x32, 0x38, -0x11e],
            's': [0x6, 0x3, 0x9],
            'c': '#9d8672',
            't': 0xb
        }, {
            'p': [-0x32, 0x38, -0x10e],
            's': [0x6, 0x2, 0x9],
            'c': '#9d8672',
            't': 0xb
        }, {
            'p': [-0x32, 0x38, -0xfe],
            's': [0x6, 0x3, 0x9],
            'c': '#9d8672',
            't': 0xb
        }, {
            'p': [-0x32, 0x38, -0xc8],
            's': [0x6, 0x3, 0x9],
            'c': '#9d8672',
            't': 0xb
        }, {
            'p': [-0x32, 0x38, -0x13f],
            's': [0x6, 0x2, 0x9],
            'c': '#9d8672',
            't': 0xb
        }, {
            'p': [-0x32, 0x38, -0x14e],
            's': [0x6, 0x3, 0x7],
            'c': '#9d8672',
            't': 0xb
        }, {
            'p': [0xf, 0x21, -0xd0],
            's': [0xc, 0xc, 0xc],
            'i': 0x1
        }, {
            'p': [0x3, 0x21, -0xd0],
            's': [0xc, 0xc, 0xc],
            'i': 0x1
        }, {
            'p': [-0x9, 0x21, -0xd0],
            's': [0xc, 0xc, 0xc],
            'i': 0x1
        }, {
            'p': [-0x9e, 0x29, -0x14a],
            's': [0xc, 0xc, 0xc],
            'i': 0x1
        }, {
            'p': [-0x92, 0x29, -0x14a],
            's': [0xc, 0xc, 0xc],
            'i': 0x1
        }, {
            'p': [-0x7c, 0x29, -0x10d],
            's': [0xc, 0xc, 0xc],
            'i': 0x1
        }, {
            'p': [0xa9, 0x20, -0x160],
            's': [0x2c, 0x49, 0x9],
            'c': '#ffd5b1',
            'bo': 0x1
        }, {
            'p': [0x5a, 0x20, -0x160],
            's': [0x2e, 0x49, 0x9],
            'c': '#ffd5b1',
            'bo': 0x1
        }, {
            'p': [0x82, 0x45, -0x160],
            's': [0x22, 0x24, 0x9],
            'c': '#ffd5b1',
            'bo': 0x1
        }, {
            'p': [0x56, 0x21, -0x155],
            's': [0xc, 0xc, 0xc],
            'i': 0x1
        }, {
            'p': [0x13f, 0x20, -0x13d],
            's': [0x4f, 0x3a, 0xb7],
            'c': '#ffd5b1',
            'bo': 0x1
        }, {
            'p': [0x13f, 0x5a, -0x13d],
            's': [0x57, 0x4, 0xbd],
            'c': '#4a4a4a',
            't': 0xb,
            'bo': 0x1
        }, {
            'p': [0x13f, 0x3c, -0x119],
            's': [0x50, 0x2, 0x70],
            'l': 0x1,
            'c': '#4a4a4a',
            't': 0xb
        }, {
            'p': [0x13f, 0x20, -0x119],
            's': [0x51, 0x2, 0x71],
            'l': 0x1,
            'c': '#4a4a4a',
            't': 0xb
        }, {
            'p': [0x119, 0x46, -0xf0],
            's': [0x4, 0xe, 0x9],
            'l': 0x1,
            'c': 0x828282,
            't': 0x2
        }, {
            'p': [0x119, 0x46, -0x10e],
            's': [0x4, 0xe, 0x9],
            'l': 0x1,
            'c': 0x828282,
            't': 0x2
        }, {
            'p': [0x11a, 0x45, -0x10e],
            's': [0x7, 0x1, 0xa],
            'l': 0x1,
            'c': 0x4d4d4d,
            't': 0x2
        }, {
            'p': [0x11a, 0x45, -0xf0],
            's': [0x7, 0x1, 0xa],
            'l': 0x1,
            'c': 0x4d4d4d,
            't': 0x2
        }, {
            'p': [0x7e, 0x2b, -0x163],
            's': [0x3, 0x5, 0x8],
            'c': '#464646',
            't': 0x5
        }, {
            'p': [0x147, 0x20, -0x1d6],
            's': [0x8e, 0x63, 0x57],
            'c': '#ffd5b1'
        }, {
            'p': [0x148, 0x82, -0x1d6],
            's': [0x98, 0x4, 0x60],
            'c': 0x4a4a4a,
            't': 0xb
        }, {
            'p': [0xbf, 0x20, -0x22b],
            's': [0x6d, 0x4c, 0x57],
            'c': '#ffd5b1'
        }, {
            'p': [0xbf, 0x69, -0x22d],
            's': [0x71, 0x5, 0x64],
            'c': 0x525252,
            't': 0xb
        }, {
            'p': [0x145, 0x20, -0xba],
            's': [0x50, 0x4d, 0x4f],
            'c': '#ffd5b1',
            'bo': 0x1
        }, {
            'p': [0x146, 0x6d, -0xb9],
            's': [0x58, 0x3, 0x56],
            'c': 0x4a4a4a,
            't': 0xb,
            'bo': 0x1
        }, {
            'p': [0x146, 0x56, -0xba],
            's': [0x53, 0x2, 0x50],
            'l': 0x1,
            'c': '#4a4a4a',
            't': 0xb
        }, {
            'p': [0x146, 0x3c, -0xba],
            's': [0x53, 0x2, 0x50],
            'l': 0x1,
            'c': '#4a4a4a',
            't': 0xb
        }, {
            'p': [0xa8, 0x3e, -0xa0],
            's': [0x14, 0x2, 0x2c],
            'c': '#7d7d7d',
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [0xb0, 0x40, -0xb4],
            's': [0x2, 0x7, 0x2],
            'c': '#7d7d7d',
            't': 0x2
        }, {
            'p': [0xb0, 0x47, -0xa0],
            's': [0x3, 0x1, 0x2c],
            'c': '#7d7d7d',
            't': 0x2
        }, {
            'p': [0xab, 0x47, -0xb5],
            's': [0x7, 0x1, 0x2],
            'c': '#7d7d7d',
            't': 0x2
        }, {
            'p': [0xa7, 0x40, -0xa0],
            's': [0x1, 0x11, 0xd],
            'l': 0x1,
            'c': 0x7d736b,
            't': 0x2
        }, {
            'p': [0xa7, 0x51, -0xa0],
            's': [0x2, 0x1, 0xf],
            'l': 0x1,
            'c': 0x4a4a4a,
            't': 0x2
        }, {
            'p': [0xa7, 0x40, -0xa7],
            's': [0x2, 0x11, 0x1],
            'l': 0x1,
            'c': 0x4a4a4a,
            't': 0x2
        }, {
            'p': [0x12b, 0x20, -0x64],
            's': [0x34, 0x3f, 0x5d],
            'c': '#ffd5b1',
            'bo': 0x1
        }, {
            'p': [0x146, 0x20, -0xb9],
            's': [0x54, 0x2, 0x4f],
            'l': 0x1,
            'c': '#4a4a4a',
            't': 0xb
        }, {
            'p': [0x12b, 0x5f, -0x64],
            's': [0x39, 0x3, 0x61],
            'c': 0x525252,
            't': 0xb,
            'bo': 0x1
        }, {
            'p': [0x116, 0x1d, -0x64],
            's': [0xc, 0x5, 0x5f],
            'l': 0x1,
            'c': '#4a4a4a',
            't': 0xb
        }, {
            'p': [0x109, 0x27, -0x100],
            's': [0x3, 0x1, 0x1e],
            'c': 0x919191,
            't': 0x2
        }, {
            'p': [0x109, 0x21, -0x100],
            's': [0x1, 0x6, 0x1e],
            'c': 0x919191,
            't': 0x2
        }, {
            'p': [0xf1, 0x21, -0x119],
            's': [0x1, 0x6, 0x1e],
            'c': 0x919191,
            't': 0x2
        }, {
            'p': [0xf1, 0x27, -0x119],
            's': [0x3, 0x1, 0x1e],
            'c': 0x919191,
            't': 0x2
        }, {
            'p': [0xe9, 0x3f, -0x109],
            's': [0x14, 0x2, 0x4],
            'l': 0x1,
            'r': [0x0, 0x0, -0.18],
            'c': 0x432316,
            't': 0x5
        }, {
            'p': [0xe9, 0x3f, -0x10d],
            's': [0x14, 0x2, 0x4],
            'l': 0x1,
            'r': [0x0, 0x0, -0.18],
            'c': 0x666666,
            't': 0x5
        }, {
            'p': [0xe9, 0x3f, -0x115],
            's': [0x14, 0x2, 0x4],
            'l': 0x1,
            'r': [0x0, 0x0, -0.18],
            'c': 0x666666,
            't': 0x5
        }, {
            'p': [0xe9, 0x3f, -0x125],
            's': [0x14, 0x2, 0x4],
            'l': 0x1,
            'r': [0x0, 0x0, -0.18],
            'c': 0x666666,
            't': 0x5
        }, {
            'p': [0xe9, 0x3f, -0x111],
            's': [0x14, 0x2, 0x4],
            'l': 0x1,
            'r': [0x0, 0x0, -0.18],
            'c': 0x432316,
            't': 0x5
        }, {
            'p': [0xe9, 0x3f, -0x119],
            's': [0x14, 0x2, 0x4],
            'l': 0x1,
            'r': [0x0, 0x0, -0.18],
            'c': 0x432316,
            't': 0x5
        }, {
            'p': [0xe9, 0x3f, -0x121],
            's': [0x14, 0x2, 0x4],
            'l': 0x1,
            'r': [0x0, 0x0, -0.18],
            'c': 0x432316,
            't': 0x5
        }, {
            'p': [0xe9, 0x3f, -0x129],
            's': [0x14, 0x2, 0x4],
            'l': 0x1,
            'r': [0x0, 0x0, -0.18],
            'c': 0x432316,
            't': 0x5
        }, {
            'p': [-0x85, 0x3b, -0xc3],
            's': [0x24, 0x2, 0x13],
            'l': 0x1,
            'c': '#4a4a4a',
            't': 0xb
        }, {
            'p': [-0x85, 0x3c, -0xc2],
            's': [0x22, 0x1, 0x13],
            'pe': 0x1,
            'v': 0x1,
            'c': 0x434343,
            't': 0x2
        }, {
            'p': [0xd7, 0x21, -0xb3],
            's': [0xc, 0xc, 0xc],
            'i': 0x1
        }, {
            'p': [0xd7, 0x21, -0xa7],
            's': [0xc, 0xc, 0xc],
            'i': 0x1
        }, {
            'p': [0xc7, 0x21, -0x56],
            's': [0xc, 0xc, 0xc],
            'i': 0x1
        }, {
            'p': [0xad, 0x1e, -0x155],
            's': [0x2, 0x8, 0x2],
            'l': 0x1,
            'c': 0x5b5f4c,
            't': 0x5
        }, {
            'p': [0x145, 0x20, -0xe],
            's': [0x50, 0x37, 0x4f],
            'c': '#ffd5b1',
            'bo': 0x1
        }, {
            'p': [0x13f, 0x20, 0x87],
            's': [0x44, 0x4c, 0x73],
            'c': '#ffd5b1',
            'bo': 0x1
        }, {
            'p': [0x145, 0x57, -0xe],
            's': [0x56, 0x3, 0x55],
            'c': '#525252',
            't': 0xb,
            'bo': 0x1
        }, {
            'p': [0x145, 0x1d, -0xe],
            's': [0x52, 0x5, 0x51],
            'l': 0x1,
            'c': '#4a4a4a',
            't': 0xb
        }, {
            'p': [0x130, 0x20, 0x1e],
            's': [0xd, 0x2b, 0x9],
            'c': '#ffd5b1',
            'bo': 0x1
        }, {
            'p': [0x130, 0x20, 0x49],
            's': [0xd, 0x2b, 0x9],
            'c': '#ffd5b1',
            'bo': 0x1
        }, {
            'p': [0x130, 0x4b, 0x33],
            's': [0xd, 0x9, 0x35],
            'c': '#ffd5b1',
            'bo': 0x1
        }, {
            'p': [0x12e, 0x2b, 0x2f],
            's': [0x3, 0x8, 0x3],
            'c': '#4d4d4d',
            't': 0x5,
            'bo': 0x1
        }, {
            'p': [0x12e, 0x21, 0x33],
            's': [0x1, 0x2a, 0x27],
            'c': 0x828282,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [0x145, 0x3c, -0xe],
            's': [0x51, 0x2, 0x50],
            'l': 0x1,
            'c': '#4a4a4a',
            't': 0xb
        }, {
            'p': [0x130, 0x4d, 0x33],
            's': [0x1a, 0x4, 0x4],
            'pe': 0x1,
            'c': 0x6b6b6b,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [0x130, 0x4d, 0x3e],
            's': [0x1a, 0x4, 0x4],
            'pe': 0x1,
            'c': 0x6b6b6b,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [0x130, 0x4d, 0x48],
            's': [0x1a, 0x4, 0x4],
            'pe': 0x1,
            'c': 0x6b6b6b,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [0x130, 0x4d, 0x28],
            's': [0x1a, 0x4, 0x4],
            'pe': 0x1,
            'c': 0x6b6b6b,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [0x130, 0x4d, 0x1e],
            's': [0x1a, 0x4, 0x4],
            'pe': 0x1,
            'c': 0x6b6b6b,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [0x1af, 0xc, -0x60],
            's': [0x5c, 0x66, 0xa0],
            'c': '#ffd5b1'
        }, {
            'p': [0x1af, 0x71, -0x60],
            's': [0x63, 0x4, 0xa5],
            'c': 0x4a4a4a,
            't': 0xb
        }, {
            'p': [0x13f, 0x6c, 0x87],
            's': [0x4a, 0x3, 0x79],
            'c': 0x525252,
            't': 0xb,
            'bo': 0x1
        }, {
            'p': [0x13f, 0x53, 0x87],
            's': [0x45, 0x2, 0x74],
            'l': 0x1,
            'c': '#4a4a4a',
            't': 0xb
        }, {
            'p': [0x13f, 0x38, 0x87],
            's': [0x45, 0x2, 0x74],
            'l': 0x1,
            'c': '#4a4a4a',
            't': 0xb
        }, {
            'p': [0x5e, -0x2, -0x34],
            's': [0x50, 0x72, 0x3c],
            'c': '#ffd5b1',
            'bo': 0x1
        }, {
            'p': [0xb4, 0x20, -0x30],
            's': [0x5c, 0x28, 0x40],
            'c': '#ffd5b1',
            'bo': 0x1
        }, {
            'p': [0xb4, 0x48, -0x30],
            's': [0x5f, 0x4, 0x42],
            'c': 0x4a4a4a,
            't': 0xb,
            'bo': 0x1
        }, {
            'p': [0x5e, 0x6f, -0x34],
            's': [0x58, 0x4, 0x43],
            'c': 0x4a4a4a,
            't': 0xb,
            'bo': 0x1
        }, {
            'p': [0x5e, 0x20, -0x34],
            's': [0x52, 0x2, 0x3d],
            'l': 0x1,
            'c': '#393939',
            't': 0xb
        }, {
            'p': [0xb4, 0x20, -0x30],
            's': [0x5e, 0x2, 0x41],
            'l': 0x1,
            'c': '#4a4a4a',
            't': 0xb
        }, {
            'p': [0x13f, 0x20, 0x87],
            's': [0x46, 0x2, 0x75],
            'l': 0x1,
            'c': '#4a4a4a',
            't': 0xb
        }, {
            'p': [0x5c, 0x21, -0x194],
            's': [0x2c, 0x1, 0x73],
            'l': 0x1,
            'c': '#4a4a4a',
            't': 0xb
        }, {
            'p': [-0x90, 0x20, -0x159],
            's': [0x53, 0x2, 0x14],
            'l': 0x1,
            'c': '#a5a5a5',
            't': 0x2
        }, {
            'p': [0x10d, 0x1d, -0x4c],
            's': [0x6, 0x5, 0x19],
            'l': 0x1,
            'c': '#4a4a4a',
            't': 0xb
        }, {
            'p': [-0x9c, 0x2c, -0x88],
            's': [0xc, 0xc, 0xc],
            'i': 0x1
        }, {
            'p': [0x118, 0x21, 0x0],
            's': [0x1, 0x17, 0x6],
            'l': 0x1,
            'r': [0x0, 0x0, -0.18],
            'c': 0x848484,
            't': 0x2
        }, {
            'p': [0x119, 0x21, 0xa],
            's': [0x1, 0x12, 0x6],
            'l': 0x1,
            'r': [0x0, 0x0, -0.18],
            'c': 0x848484,
            't': 0x2
        }, {
            'p': [0xf0, 0x20, 0xa3],
            's': [0x5c, 0x33, 0x40],
            'c': '#ffd5b1',
            'bo': 0x1
        }, {
            'p': [0xf0, 0x53, 0xa3],
            's': [0x61, 0x3, 0x46],
            'c': 0x525252,
            't': 0xb,
            'bo': 0x1
        }, {
            'p': [0xef, 0x38, 0xa3],
            's': [0x5b, 0x2, 0x41],
            'l': 0x1,
            'c': '#4a4a4a',
            't': 0xb
        }, {
            'p': [0xf0, 0x20, 0xa3],
            's': [0x5a, 0x2, 0x42],
            'l': 0x1,
            'c': '#4a4a4a',
            't': 0xb
        }, {
            'p': [0xeb, 0x39, 0x7b],
            's': [0x31, 0x2, 0x11],
            'pe': 0x1,
            'c': '#616161',
            't': 0x2
        }, {
            'p': [0xd5, 0x20, 0x75],
            's': [0x2, 0x1c, 0x2],
            'pe': 0x1,
            'c': '#616161',
            't': 0x2
        }, {
            'p': [0x101, 0x20, 0x75],
            's': [0x2, 0x1c, 0x2],
            'pe': 0x1,
            'c': '#616161',
            't': 0x2
        }, {
            'p': [0xcd, 0x21, 0x82],
            's': [0x5, 0x22, 0x1],
            'i': 0x3,
            't': 0x2,
            'd': 0x3
        }, {
            'p': [0x5e, 0x3b, -0x34],
            's': [0x51, 0x2, 0x3d],
            'l': 0x1,
            'c': '#393939',
            't': 0xb
        }, {
            'p': [0x5e, 0x56, -0x34],
            's': [0x51, 0x2, 0x3d],
            'l': 0x1,
            'c': '#393939',
            't': 0xb
        }, {
            'p': [0xe2, 0x22, -0x43],
            's': [0x1, 0x11, 0xd],
            'l': 0x1,
            'c': 0x7d736b,
            't': 0x2
        }, {
            'p': [0xe2, 0x22, -0x3c],
            's': [0x2, 0x11, 0x1],
            'l': 0x1,
            'c': 0x4a4a4a,
            't': 0x2
        }, {
            'p': [0xe2, 0x33, -0x43],
            's': [0x2, 0x1, 0xf],
            'l': 0x1,
            'c': 0x4a4a4a,
            't': 0x2
        }, {
            'p': [0xe2, 0x22, -0x4a],
            's': [0x2, 0x11, 0x1],
            'l': 0x1,
            'c': 0x4a4a4a,
            't': 0x2
        }, {
            'p': [-0x9f, 0x4c, -0x78],
            's': [0x2, 0x26, 0x2],
            'l': 0x1,
            'c': 0xbbbbbb,
            't': 0x2
        }, {
            'p': [0x9e, 0x20, 0x48],
            's': [0x3c, 0x44, 0x5d],
            'c': '#ffd5b1',
            'bo': 0x1
        }, {
            'p': [0x9e, 0x43, 0x48],
            's': [0x3d, 0x2, 0x5e],
            'l': 0x1,
            'c': '#393939',
            't': 0xb
        }, {
            'p': [0x8e, 0x4b, 0x1f],
            's': [0x5, 0xe, 0x9],
            'l': 0x1,
            'c': 0x828282,
            't': 0x2
        }, {
            'p': [0x8e, 0x4a, 0x1f],
            's': [0x6, 0x1, 0xa],
            'l': 0x1,
            'c': 0x4d4d4d,
            't': 0x2
        }, {
            'p': [0xc2, 0x21, 0x22],
            's': [0xc, 0xc, 0xc],
            'i': 0x1
        }, {
            'p': [0x95, 0x26, 0x9e],
            's': [0x46, 0x3c, 0x4f],
            'c': '#ffd5b1',
            'bo': 0x1
        }, {
            'p': [0x4d, 0x20, 0xa9],
            's': [0x4a, 0x45, 0x50],
            'c': '#ffd5b1',
            'bo': 0x1
        }, {
            'p': [0xc0, 0x21, 0x7d],
            's': [0x6, 0x1, 0xf],
            'l': 0x1,
            'c': '#4a4a4a',
            't': 0xb
        }, {
            'p': [0x4d, 0x65, 0xa9],
            's': [0x51, 0x4, 0x57],
            'c': '#525252',
            't': 0xb,
            'bo': 0x1
        }, {
            'p': [0x4d, 0x4c, 0xa9],
            's': [0x4a, 0x2, 0x51],
            'l': 0x1,
            'c': '#393939',
            't': 0xb
        }, {
            'p': [0x4d, 0x2f, 0xa9],
            's': [0x4a, 0x2, 0x51],
            'l': 0x1,
            'c': '#393939',
            't': 0xb
        }, {
            'p': [0x9a, 0x21, 0x73],
            's': [0x2f, 0x1, 0x5],
            'l': 0x1,
            'c': 0x525252,
            't': 0x2
        }, {
            'p': [0x73, 0x21, -0x10],
            's': [0xc, 0xc, 0xc],
            'i': 0x1
        }, {
            'p': [0x7f, 0x21, -0x10],
            's': [0xc, 0xc, 0xc],
            'i': 0x1
        }, {
            'p': [0x4f, 0x3d, 0xe],
            's': [0xa, 0x1, 0x2],
            'l': 0x1,
            'c': 0x4d4d4d,
            't': 0x2
        }, {
            'p': [0xb6, 0x4f, 0x20],
            's': [0x5, 0xe, 0x9],
            'l': 0x1,
            'c': 0x828282,
            't': 0x2
        }, {
            'p': [0xb6, 0x4e, 0x20],
            's': [0x6, 0x1, 0xa],
            'l': 0x1,
            'c': 0x4d4d4d,
            't': 0x2
        }, {
            'p': [-0x61, 0x21, -0xc7],
            's': [0x1e, 0x6, 0x1],
            'c': 0x919191,
            't': 0x2
        }, {
            'p': [-0x71, 0x21, -0xc7],
            's': [0x2, 0x19, 0x2],
            'c': 0x919191,
            't': 0x2
        }, {
            'p': [-0x51, 0x21, -0xc7],
            's': [0x2, 0x19, 0x2],
            'c': 0x919191,
            't': 0x2
        }, {
            'p': [-0x61, 0x27, -0xc7],
            's': [0x1e, 0x1, 0x3],
            'c': 0x919191,
            't': 0x2
        }, {
            'p': [-0x51, 0x3a, -0xc1],
            's': [0x4, 0x2, 0x14],
            'l': 0x1,
            'r': [-0.17, 0x0, 0x0],
            'c': 0x3e4659,
            't': 0x5
        }, {
            'p': [-0x71, 0x3a, -0xc1],
            's': [0x4, 0x2, 0x14],
            'l': 0x1,
            'r': [-0.17, 0x0, 0x0],
            'c': 0x3e4659,
            't': 0x5
        }, {
            'p': [-0x55, 0x3a, -0xc1],
            's': [0x4, 0x2, 0x14],
            'l': 0x1,
            'r': [-0.17, 0x0, 0x0],
            'c': 0x7a7a7a,
            't': 0x5
        }, {
            'p': [-0x6d, 0x3a, -0xc1],
            's': [0x4, 0x2, 0x14],
            'l': 0x1,
            'r': [-0.17, 0x0, 0x0],
            'c': 0x7a7a7a,
            't': 0x5
        }, {
            'p': [-0x69, 0x3a, -0xc1],
            's': [0x4, 0x2, 0x14],
            'l': 0x1,
            'r': [-0.17, 0x0, 0x0],
            'c': 0x3e4659,
            't': 0x5
        }, {
            'p': [-0x65, 0x3a, -0xc1],
            's': [0x4, 0x2, 0x14],
            'l': 0x1,
            'r': [-0.17, 0x0, 0x0],
            'c': 0x7a7a7a,
            't': 0x5
        }, {
            'p': [-0x61, 0x3a, -0xc1],
            's': [0x4, 0x2, 0x14],
            'l': 0x1,
            'r': [-0.17, 0x0, 0x0],
            'c': 0x3e4659,
            't': 0x5
        }, {
            'p': [-0x59, 0x3a, -0xc1],
            's': [0x4, 0x2, 0x14],
            'l': 0x1,
            'r': [-0.17, 0x0, 0x0],
            'c': 0x3e4659,
            't': 0x5
        }, {
            'p': [-0x5d, 0x3a, -0xc1],
            's': [0x4, 0x2, 0x14],
            'l': 0x1,
            'r': [-0.17, 0x0, 0x0],
            'c': 0x7a7a7a,
            't': 0x5
        }, {
            'p': [0x41, 0x5b, 0x33],
            's': [0x3a, 0x4, 0x50],
            'c': 0x4a4a4a,
            't': 0xb,
            'bo': 0x1
        }, {
            'p': [0x85, 0x21, 0x16],
            's': [0x4, 0x11, 0x1],
            'l': 0x1,
            'r': [0.17, 0x0, 0x0],
            'c': 0x848484,
            't': 0x2
        }, {
            'p': [0x8c, 0x21, 0x16],
            's': [0x4, 0x11, 0x1],
            'l': 0x1,
            'r': [0.17, 0x0, 0x0],
            'c': 0x848484,
            't': 0x2
        }, {
            'p': [0x41, 0x36, 0x33],
            's': [0x37, 0x2, 0x4b],
            'l': 0x1,
            'c': '#393939',
            't': 0xb
        }, {
            'p': [0x4f, 0x3e, 0x10],
            's': [0x9, 0xe, 0x5],
            'l': 0x1,
            'c': 0x828282,
            't': 0x2
        }, {
            'p': [-0x66, 0x22, -0x11],
            's': [0x2a, 0x3d, 0x3e],
            'c': '#ffd5b1',
            'bo': 0x1
        }, {
            'p': [-0x66, 0x5c, -0x11],
            's': [0x2f, 0x4, 0x43],
            'c': 0x4a4a4a,
            't': 0xb,
            'bo': 0x1
        }, {
            'p': [-0x66, 0x20, -0x12],
            's': [0x2c, 0x2, 0x3e],
            'l': 0x1,
            'c': '#393939',
            't': 0xb
        }, {
            'p': [0xce, 0xd, -0xf],
            's': [0xf, 0x4a, 0x7],
            'c': '#ffd5b1',
            'bo': 0x1
        }, {
            'p': [0xce, 0x20, -0xd],
            's': [0x11, 0x2, 0x5],
            'l': 0x1,
            'c': '#4a4a4a',
            't': 0xb
        }, {
            'p': [0xb4, 0x1e, 0x73],
            's': [0x2, 0x9, 0x2],
            'l': 0x1,
            'c': 0x5b5f4c,
            't': 0x5
        }, {
            'p': [-0x57, 0x64, 0x2f],
            's': [0x43, 0x4, 0x48],
            'c': 0x4a4a4a,
            't': 0xb,
            'bo': 0x1
        }, {
            'p': [-0x57, 0x66, 0x30],
            's': [0x2d, 0xa, 0x37],
            'c': '#ffd5b1'
        }, {
            'p': [-0x57, 0x70, 0x30],
            's': [0x33, 0x4, 0x3d],
            'c': '#4a4a4a',
            't': 0xb
        }, {
            'p': [-0x57, 0x4c, 0x2f],
            's': [0x3f, 0x2, 0x43],
            'l': 0x1,
            'c': '#393939',
            't': 0xb
        }, {
            'p': [-0x57, 0x34, 0x2f],
            's': [0x3f, 0x2, 0x43],
            'l': 0x1,
            'c': '#393939',
            't': 0xb
        }, {
            'p': [-0x43, 0x54, 0x1a],
            's': [0x9, 0xe, 0x7],
            'l': 0x1,
            'c': 0x828282,
            't': 0x2
        }, {
            'p': [-0x43, 0x53, 0x17],
            's': [0xa, 0x1, 0x2],
            'l': 0x1,
            'c': 0x4d4d4d,
            't': 0x2
        }, {
            'p': [0x49, 0x20, 0x34],
            's': [0x28, 0x2, 0x4e],
            'l': 0x1,
            'c': '#393939',
            't': 0xb
        }, {
            'p': [0x41, 0xd, 0x33],
            's': [0x36, 0x4f, 0x4a],
            'c': '#ffd5b1',
            'bo': 0x1
        }, {
            'p': [0x1c, 0xc, -0x2e],
            's': [0xa9, 0x2, 0x36],
            'c': '#6e6e6e',
            't': 0x2
        }, {
            'p': [0x1b, 0xc, 0x25],
            's': [0xa7, 0x2, 0x34],
            'c': '#6e6e6e',
            't': 0x2
        }, {
            'p': [-0x34, 0x2e, -0x20],
            's': [0x8, 0x1f, 0xd2],
            'c': '#9d8672',
            't': 0xb
        }, {
            'p': [0x32, 0x2e, -0x1c],
            's': [0x8, 0x1f, 0x75],
            'c': '#9d8672',
            't': 0xb
        }, {
            'p': [0x32, 0x4d, -0x50],
            's': [0x8, 0x2, 0xd],
            'l': 0x1,
            'c': '#9d8672',
            't': 0xb
        }, {
            'p': [0x32, 0x4d, -0x3a],
            's': [0x8, 0x3, 0xf],
            'l': 0x1,
            'c': '#9d8672',
            't': 0xb
        }, {
            'p': [0x32, 0x4d, -0x24],
            's': [0x8, 0x5, 0xd],
            'l': 0x1,
            'c': '#9d8672',
            't': 0xb
        }, {
            'p': [0x32, 0x4d, -0xe],
            's': [0x8, 0x3, 0x10],
            'l': 0x1,
            'c': '#9d8672',
            't': 0xb
        }, {
            'p': [0x32, 0x4d, 0x8],
            's': [0x8, 0x4, 0xd],
            'l': 0x1,
            'c': '#9d8672',
            't': 0xb
        }, {
            'p': [-0x34, 0x4d, 0x8],
            's': [0x8, 0x4, 0xd],
            'l': 0x1,
            'c': '#9d8672',
            't': 0xb
        }, {
            'p': [-0x34, 0x4d, 0x1e],
            's': [0x8, 0x4, 0xd],
            'l': 0x1,
            'c': '#9d8672',
            't': 0xb
        }, {
            'p': [-0x34, 0x4d, 0x4a],
            's': [0x8, 0x4, 0xe],
            'l': 0x1,
            'c': '#9d8672',
            't': 0xb
        }, {
            'p': [-0x34, 0x4d, 0x34],
            's': [0x8, 0x3, 0xd],
            'l': 0x1,
            'c': '#9d8672',
            't': 0xb
        }, {
            'p': [-0x34, 0x4d, -0xe],
            's': [0x8, 0x2, 0xd],
            'l': 0x1,
            'c': '#9d8672',
            't': 0xb
        }, {
            'p': [-0x34, 0x4d, -0x24],
            's': [0x8, 0x4, 0xd],
            'l': 0x1,
            'c': '#9d8672',
            't': 0xb
        }, {
            'p': [-0x34, 0x4d, -0x3a],
            's': [0x8, 0x3, 0x10],
            'l': 0x1,
            'c': '#9d8672',
            't': 0xb
        }, {
            'p': [-0x34, 0x4d, -0x50],
            's': [0x8, 0x4, 0xa],
            'l': 0x1,
            'c': '#9d8672',
            't': 0xb
        }, {
            'p': [-0x34, 0x4d, -0x66],
            's': [0x8, 0x3, 0xd],
            'l': 0x1,
            'c': '#9d8672',
            't': 0xb
        }, {
            'p': [-0x34, 0x4d, -0x7c],
            's': [0x8, 0x4, 0xd],
            'l': 0x1,
            'c': '#9d8672',
            't': 0xb
        }, {
            'p': [-0x1, 0xc, 0x13],
            's': [0x6e, 0x22, 0xe],
            'c': '#786555',
            't': 0xb
        }, {
            'p': [-0x1, 0xb, -0x33],
            's': [0x6e, 0x23, 0x3e],
            'c': '#786555',
            't': 0xb
        }, {
            'p': [-0x1, 0x2e, -0x2],
            's': [0x5e, 0x1, 0x39],
            'c': '#9d8672',
            't': 0xb
        }, {
            'p': [-0x33, 0x20, 0xbc],
            's': [0x49, 0x4c, 0x74],
            'c': '#ffd5b1',
            'bo': 0x1
        }, {
            'p': [-0x7c, 0x20, 0xd7],
            's': [0x49, 0x4c, 0x3e],
            'c': '#ffd5b1',
            'bo': 0x1
        }, {
            'p': [-0xc5, 0x20, 0xd9],
            's': [0x49, 0x34, 0x4f],
            'c': '#ffd5b1',
            'bo': 0x1
        }, {
            'p': [0xd, 0x2f, 0xa3],
            's': [0x3c, 0x2, 0x51],
            'l': 0x1,
            'c': '#393939',
            't': 0xb
        }, {
            'p': [-0x34, 0x2f, 0x9d],
            's': [0x49, 0x2, 0x38],
            'l': 0x1,
            'c': '#393939',
            't': 0xb
        }, {
            'p': [-0x7e, 0x2f, 0xd3],
            's': [0x4b, 0x2, 0x37],
            'l': 0x1,
            'c': '#393939',
            't': 0xb
        }, {
            'p': [-0x109, -0x3, 0xb7],
            's': [0x3f, 0x68, 0x6c],
            'c': '#ffd5b1',
            'bo': 0x1
        }, {
            'p': [-0x10c, 0x3e, 0x4a],
            's': [0x54, 0x37, 0x6f],
            'c': '#ffd5b1'
        }, {
            'p': [-0x10c, 0x20, -0xa],
            's': [0x49, 0x38, 0x3c],
            'c': '#ffd5b1',
            'bo': 0x1
        }, {
            'p': [-0xe8, 0x3d, -0x49],
            's': [0x44, 0x31, 0x44],
            'c': '#ffd5b1'
        }, {
            'p': [-0x33, 0x6c, 0xbb],
            's': [0x51, 0x3, 0x79],
            'c': '#393939',
            't': 0xb,
            'bo': 0x1
        }, {
            'p': [-0x80, 0x6c, 0xd6],
            's': [0x49, 0x3, 0x44],
            'c': 0x525252,
            't': 0xb,
            'bo': 0x1
        }, {
            'p': [-0x46, 0x20, 0x7f],
            's': [0x1c, 0x40, 0xa],
            'c': '#ffd5b1',
            'bo': 0x1
        }, {
            'p': [-0x46, 0x2f, 0x7d],
            's': [0x1e, 0x2, 0x8],
            'l': 0x1,
            'c': '#393939',
            't': 0xb
        }, {
            'p': [-0x33, 0x4d, 0x9d],
            's': [0x4b, 0x2, 0x38],
            'l': 0x1,
            'c': '#393939',
            't': 0xb
        }, {
            'p': [-0x7e, 0x4d, 0xd3],
            's': [0x4b, 0x2, 0x37],
            'l': 0x1,
            'c': '#393939',
            't': 0xb
        }, {
            'p': [-0x75, 0x32, 0x9a],
            's': [0x19, 0x1, 0x19],
            'c': '#9d9d9d',
            't': 0x1
        }, {
            'p': [-0xe, 0x18, -0xf5],
            's': [0x1d, 0xd, 0x3],
            'c': '#9d8672',
            't': 0xb
        }, {
            'p': [-0x75, 0x18, 0xa8],
            's': [0x1f, 0x1c, 0x3],
            'c': '#9d8672',
            't': 0xb
        }, {
            'p': [-0x67, 0x18, 0x9a],
            's': [0x3, 0x1c, 0x19],
            'c': '#9d8672',
            't': 0xb
        }, {
            'p': [-0x83, 0x18, 0x9a],
            's': [0x3, 0x1c, 0x19],
            'c': '#9d8672',
            't': 0xb
        }, {
            'p': [-0xc4, 0x2f, 0xb4],
            's': [0x49, 0x2, 0x7],
            'l': 0x1,
            'c': '#393939',
            't': 0xb
        }, {
            'p': [-0xf2, 0x2f, 0x9a],
            's': [0x13, 0x2, 0x39],
            'l': 0x1,
            'c': '#393939',
            't': 0xb
        }, {
            'p': [-0xf2, 0x49, 0x9a],
            's': [0x13, 0x2, 0x39],
            'l': 0x1,
            'h': 0xbe,
            'c': '#393939',
            't': 0xb
        }, {
            'p': [-0xc4, 0x54, 0xd6],
            's': [0x50, 0x3, 0x51],
            'c': 0x525252,
            't': 0xb,
            'bo': 0x1
        }, {
            'p': [0x43, 0x21, -0x11d],
            's': [0x6, 0x8, 0x6],
            'i': 0x2,
            'r': [0x0, -1.57, 0x0]
        }, {
            'p': [-0x109, 0x65, 0xb2],
            's': [0x46, 0x3, 0x7c],
            'c': 0x525252,
            't': 0xb,
            'bo': 0x1
        }, {
            'p': [-0xe4, 0x20, 0x31],
            's': [0x5, 0x2, 0x3e],
            'l': 0x1,
            'c': '#393939',
            't': 0xb
        }, {
            'p': [-0xea, 0x20, -0x9],
            's': [0x7, 0x2, 0x3f],
            'l': 0x1,
            'c': '#393939',
            't': 0xb
        }, {
            'p': [-0xd6, 0x20, -0x47],
            's': [0x22, 0x2, 0x41],
            'l': 0x1,
            'c': '#393939',
            't': 0xb
        }, {
            'p': [-0x109, 0x75, 0x4a],
            's': [0x56, 0x3, 0x77],
            'c': '#393939',
            't': 0xb,
            'bo': 0x1
        }, {
            'p': [0x1af, 0x28, -0x60],
            's': [0x42, 0x66, 0x7d],
            'c': '#ffd5b1'
        }, {
            'p': [0x1af, 0x8d, -0x60],
            's': [0x4d, 0x4, 0x87],
            'c': 0x4a4a4a,
            't': 0xb
        }, {
            'p': [-0x10a, 0x4e, -0xb],
            's': [0x4e, 0x3, 0x3b],
            'c': 0x525252,
            't': 0xb,
            'bo': 0x1
        }, {
            'p': [-0xe8, 0x6d, -0x49],
            's': [0x4a, 0x3, 0x48],
            'c': '#393939',
            't': 0xb,
            'bo': 0x1
        }, {
            'p': [-0xef, 0x3e, 0x4a],
            's': [0x1b, 0x2, 0x70],
            'l': 0x1,
            'c': '#393939',
            't': 0xb
        }, {
            'p': [-0x10c, 0x58, 0x4a],
            's': [0x55, 0x2, 0x70],
            'l': 0x1,
            'c': '#393939',
            't': 0xb
        }, {
            'p': [-0xe8, 0x3c, -0x49],
            's': [0x45, 0x2, 0x45],
            'l': 0x1,
            'c': '#393939',
            't': 0xb
        }, {
            'p': [-0xe8, 0x54, -0x49],
            's': [0x45, 0x2, 0x45],
            'l': 0x1,
            'c': '#393939',
            't': 0xb
        }, {
            'p': [-0xe3, 0x30, 0xab],
            's': [0xc, 0xc, 0xc],
            'i': 0x1
        }, {
            'p': [-0xd7, 0x30, 0xab],
            's': [0xc, 0xc, 0xc],
            'i': 0x1
        }, {
            'p': [-0x4e, 0x30, 0x56],
            's': [0xc, 0xc, 0xc],
            'i': 0x1
        }, {
            'p': [-0xb0, 0x30, 0x57],
            's': [0xc, 0xc, 0xc],
            'i': 0x1
        }, {
            'p': [-0x7d, 0x21, 0x43],
            's': [0xc, 0xc, 0xc],
            'i': 0x1
        }, {
            'p': [-0x89, 0x21, 0x43],
            's': [0xc, 0xc, 0xc],
            'i': 0x1
        }, {
            'p': [-0x5a, 0x30, 0x56],
            's': [0xc, 0xc, 0xc],
            'i': 0x1
        }, {
            'p': [-0xe1, 0x21, -0x22],
            's': [0xc, 0xc, 0xc],
            'i': 0x1
        }, {
            'p': [-0xd5, 0x21, -0x22],
            's': [0xc, 0xc, 0xc],
            'i': 0x1
        }, {
            'p': [-0x81, 0x21, -0x21],
            's': [0xc, 0xc, 0xc],
            'i': 0x1
        }, {
            'p': [-0xb3, 0x30, 0xae],
            's': [0x6, 0x13, 0x1],
            'l': 0x1,
            'r': [0.17, 0x0, 0x0],
            'c': 0x848484,
            't': 0x2
        }, {
            'p': [-0xbd, 0x30, 0xae],
            's': [0x6, 0x13, 0x1],
            'l': 0x1,
            'r': [0.17, 0x0, 0x0],
            'c': 0x848484,
            't': 0x2
        }, {
            'p': [-0xe4, 0x78, 0x2a],
            's': [0x23, 0x3, 0xf],
            'c': 0x505050,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [-0xd9, 0x45, 0x2a],
            's': [0x2, 0x35, 0x2],
            'l': 0x1,
            'c': 0xbbbbbb,
            't': 0x2
        }, {
            'p': [-0xe8, 0x22, 0x3],
            's': [0x2, 0x11, 0xd],
            'l': 0x1,
            'c': 0x7d736b,
            't': 0x2
        }, {
            'p': [-0xe7, 0x22, -0x4],
            's': [0x1, 0x11, 0x1],
            'c': '#a5a5a5',
            't': 0x2
        }, {
            'p': [-0xe7, 0x22, 0xa],
            's': [0x1, 0x11, 0x1],
            'c': '#a5a5a5',
            't': 0x2
        }, {
            'p': [-0xe7, 0x33, 0x3],
            's': [0x1, 0x1, 0xf],
            'c': '#a5a5a5',
            't': 0x2
        }, {
            'p': [-0xe8, 0x48, 0xe],
            's': [0xa, 0x3, 0x3],
            'pe': 0x1,
            'c': 0x6b6b6b,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [-0xe8, 0x48, -0xb],
            's': [0xa, 0x3, 0x3],
            'pe': 0x1,
            'c': 0x6b6b6b,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [-0xe8, 0x48, 0x1],
            's': [0xa, 0x3, 0x3],
            'pe': 0x1,
            'c': 0x6b6b6b,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [-0xe8, 0x48, -0x18],
            's': [0xa, 0x3, 0x3],
            'pe': 0x1,
            'c': 0x6b6b6b,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [-0xe8, 0x48, -0x23],
            's': [0xa, 0x3, 0x3],
            'pe': 0x1,
            'c': 0x6b6b6b,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [-0xde, 0x20, 0x3b],
            's': [0x1, 0x17, 0x4],
            'l': 0x1,
            'r': [0x0, 0x0, 0.17],
            'c': 0x848484,
            't': 0x2
        }, {
            'p': [-0xde, 0x21, 0x34],
            's': [0x1, 0x10, 0x4],
            'l': 0x1,
            'r': [0x0, 0x0, 0.17],
            'c': 0x848484,
            't': 0x2
        }, {
            'p': [-0x37, 0xd, -0x13],
            's': [0x4, 0x22, 0x2],
            'l': 0x1,
            'c': '#575757',
            't': 0x2
        }, {
            'p': [-0x37, 0x2d, -0x4],
            's': [0x4, 0x2, 0x1c],
            'l': 0x1,
            'c': '#575757',
            't': 0x2
        }, {
            'p': [0x2f, 0x30, 0x7b],
            's': [0xc, 0xc, 0xc],
            'i': 0x1
        }, {
            'p': [0x6e, 0x30, 0x7d],
            's': [0x6, 0x8, 0x6],
            'i': 0x2,
            'r': [0x0, 1.57, 0x0]
        }, {
            'p': [0x28, 0x30, -0x4e],
            's': [0xc, 0xc, 0xc],
            'i': 0x1
        }, {
            'p': [0x1d, 0x2f, -0x1c],
            's': [0x2, 0x1f, 0x2],
            'pe': 0x1,
            'c': 0x919191,
            't': 0x2
        }, {
            'p': [0x1d, 0x2f, 0x4],
            's': [0x2, 0x1f, 0x2],
            'pe': 0x1,
            'c': 0x919191,
            't': 0x2
        }, {
            'p': [0x24, 0x4e, 0x4],
            's': [0x15, 0x2, 0x4],
            'l': 0x1,
            'r': [0x0, 0x0, 0.17],
            'c': 0x522e37,
            't': 0x5
        }, {
            'p': [0x24, 0x4e, -0x4],
            's': [0x15, 0x2, 0x4],
            'l': 0x1,
            'r': [0x0, 0x0, 0.17],
            'c': 0x522e37,
            't': 0x5
        }, {
            'p': [0x24, 0x4e, 0x0],
            's': [0x15, 0x2, 0x4],
            'l': 0x1,
            'r': [0x0, 0x0, 0.17],
            'c': 0x6e6e6e,
            't': 0x5
        }, {
            'p': [0x24, 0x4e, -0x8],
            's': [0x15, 0x2, 0x4],
            'l': 0x1,
            'r': [0x0, 0x0, 0.17],
            'c': 0x6e6e6e,
            't': 0x5
        }, {
            'p': [0x24, 0x4e, -0xc],
            's': [0x15, 0x2, 0x4],
            'l': 0x1,
            'r': [0x0, 0x0, 0.17],
            'c': 0x522e37,
            't': 0x5
        }, {
            'p': [0x24, 0x4e, -0x10],
            's': [0x15, 0x2, 0x4],
            'l': 0x1,
            'r': [0x0, 0x0, 0.17],
            'c': 0x6e6e6e,
            't': 0x5
        }, {
            'p': [0x24, 0x4e, -0x14],
            's': [0x15, 0x2, 0x4],
            'l': 0x1,
            'r': [0x0, 0x0, 0.17],
            'c': 0x522e37,
            't': 0x5
        }, {
            'p': [0x24, 0x4e, -0x18],
            's': [0x15, 0x2, 0x4],
            'l': 0x1,
            'r': [0x0, 0x0, 0.17],
            'c': 0x6e6e6e,
            't': 0x5
        }, {
            'p': [0x24, 0x4e, -0x1c],
            's': [0x15, 0x2, 0x4],
            'l': 0x1,
            'r': [0x0, 0x0, 0.17],
            'c': 0x522e37,
            't': 0x5
        }, {
            'p': [0x1d, 0x2f, -0xc],
            's': [0x1, 0x7, 0x1e],
            'pe': 0x1,
            'c': 0x919191,
            't': 0x2
        }, {
            'p': [0x1d, 0x36, -0xc],
            's': [0x3, 0x1, 0x1e],
            'pe': 0x1,
            'c': 0x919191,
            't': 0x2
        }, {
            'p': [0x28, 0x30, -0x42],
            's': [0xc, 0xc, 0xc],
            'i': 0x1
        }, {
            'p': [0x2e, 0x2f, 0x4],
            's': [0x2, 0x21, 0x2],
            'l': 0x1,
            'c': 0x919191,
            't': 0x2
        }, {
            'p': [0x2e, 0x2f, -0x1c],
            's': [0x2, 0x21, 0x2],
            'l': 0x1,
            'c': 0x919191,
            't': 0x2
        }, {
            'p': [-0x1e, 0x2f, 0x8],
            's': [0x2, 0x1f, 0x2],
            'pe': 0x1,
            'c': 0x919191,
            't': 0x2
        }, {
            'p': [-0x26, 0x4e, 0x8],
            's': [0x16, 0x2, 0x4],
            'l': 0x1,
            'r': [0x0, 0x0, -0.18],
            'c': 0x2e3e52,
            't': 0x5
        }, {
            'p': [-0x26, 0x4e, 0xc],
            's': [0x16, 0x2, 0x4],
            'l': 0x1,
            'r': [0x0, 0x0, -0.18],
            'c': 0x787878,
            't': 0x5
        }, {
            'p': [-0x26, 0x4e, 0x14],
            's': [0x16, 0x2, 0x4],
            'l': 0x1,
            'r': [0x0, 0x0, -0.18],
            'c': 0x787878,
            't': 0x5
        }, {
            'p': [-0x26, 0x4e, 0x10],
            's': [0x16, 0x2, 0x4],
            'l': 0x1,
            'r': [0x0, 0x0, -0.18],
            'c': 0x2e3e52,
            't': 0x5
        }, {
            'p': [-0x26, 0x4e, 0x18],
            's': [0x16, 0x2, 0x4],
            'l': 0x1,
            'r': [0x0, 0x0, -0.18],
            'c': 0x2e3e52,
            't': 0x5
        }, {
            'p': [-0x26, 0x4e, 0x1c],
            's': [0x16, 0x2, 0x4],
            'l': 0x1,
            'r': [0x0, 0x0, -0.18],
            'c': 0x787878,
            't': 0x5
        }, {
            'p': [-0x26, 0x4e, 0x20],
            's': [0x16, 0x2, 0x4],
            'l': 0x1,
            'r': [0x0, 0x0, -0.18],
            'c': 0x2e3e52,
            't': 0x5
        }, {
            'p': [-0x26, 0x4e, 0x24],
            's': [0x16, 0x2, 0x4],
            'l': 0x1,
            'r': [0x0, 0x0, -0.18],
            'c': 0x787878,
            't': 0x5
        }, {
            'p': [-0x26, 0x4e, 0x28],
            's': [0x16, 0x2, 0x4],
            'l': 0x1,
            'r': [0x0, 0x0, -0.18],
            'c': 0x2e3e52,
            't': 0x5
        }, {
            'p': [-0x1e, 0x2f, 0x28],
            's': [0x2, 0x1f, 0x2],
            'pe': 0x1,
            'c': 0x919191,
            't': 0x2
        }, {
            'p': [-0x1e, 0x2f, 0x18],
            's': [0x1, 0x7, 0x1e],
            'pe': 0x1,
            'c': 0x919191,
            't': 0x2
        }, {
            'p': [-0x1e, 0x36, 0x18],
            's': [0x3, 0x1, 0x1e],
            'pe': 0x1,
            'c': 0x919191,
            't': 0x2
        }, {
            'p': [-0x30, 0x2f, 0x8],
            's': [0x2, 0x21, 0x2],
            'l': 0x1,
            'c': 0x919191,
            't': 0x2
        }, {
            'p': [-0x30, 0x2f, 0x28],
            's': [0x2, 0x21, 0x2],
            'l': 0x1,
            'c': 0x919191,
            't': 0x2
        }, {
            'p': [-0x1e, 0x2f, -0x3b],
            's': [0x2, 0x1f, 0x2],
            'pe': 0x1,
            'c': 0x919191,
            't': 0x2
        }, {
            'p': [-0x26, 0x4e, -0x3b],
            's': [0x16, 0x2, 0x4],
            'l': 0x1,
            'r': [0x0, 0x0, -0.18],
            'c': 0x59412a,
            't': 0x5
        }, {
            'p': [-0x26, 0x4e, -0x3f],
            's': [0x16, 0x2, 0x4],
            'l': 0x1,
            'r': [0x0, 0x0, -0.18],
            'c': 0x787878,
            't': 0x5
        }, {
            'p': [-0x26, 0x4e, -0x43],
            's': [0x16, 0x2, 0x4],
            'l': 0x1,
            'r': [0x0, 0x0, -0.18],
            'c': 0x59412a,
            't': 0x5
        }, {
            'p': [-0x26, 0x4e, -0x47],
            's': [0x16, 0x2, 0x4],
            'l': 0x1,
            'r': [0x0, 0x0, -0.18],
            'c': 0x787878,
            't': 0x5
        }, {
            'p': [-0x26, 0x4e, -0x4b],
            's': [0x16, 0x2, 0x4],
            'l': 0x1,
            'r': [0x0, 0x0, -0.18],
            'c': 0x59412a,
            't': 0x5
        }, {
            'p': [-0x26, 0x4e, -0x4f],
            's': [0x16, 0x2, 0x4],
            'l': 0x1,
            'r': [0x0, 0x0, -0.18],
            'c': 0x787878,
            't': 0x5
        }, {
            'p': [-0x26, 0x4e, -0x53],
            's': [0x16, 0x2, 0x4],
            'l': 0x1,
            'r': [0x0, 0x0, -0.18],
            'c': 0x59412a,
            't': 0x5
        }, {
            'p': [-0x26, 0x4e, -0x57],
            's': [0x16, 0x2, 0x4],
            'l': 0x1,
            'r': [0x0, 0x0, -0.18],
            'c': 0x787878,
            't': 0x5
        }, {
            'p': [-0x26, 0x4e, -0x5b],
            's': [0x16, 0x2, 0x4],
            'l': 0x1,
            'r': [0x0, 0x0, -0.18],
            'c': 0x59412a,
            't': 0x5
        }, {
            'p': [-0x1e, 0x2f, -0x5b],
            's': [0x2, 0x1f, 0x2],
            'pe': 0x1,
            'c': 0x919191,
            't': 0x2
        }, {
            'p': [-0x30, 0x2f, -0x3b],
            's': [0x2, 0x21, 0x2],
            'l': 0x1,
            'c': 0x919191,
            't': 0x2
        }, {
            'p': [-0x30, 0x2f, -0x5b],
            's': [0x2, 0x21, 0x2],
            'l': 0x1,
            'c': 0x919191,
            't': 0x2
        }, {
            'p': [-0x1e, 0x2f, -0x4b],
            's': [0x1, 0x7, 0x1e],
            'pe': 0x1,
            'c': 0x919191,
            't': 0x2
        }, {
            'p': [-0x1e, 0x36, -0x4b],
            's': [0x3, 0x1, 0x1e],
            'pe': 0x1,
            'c': 0x919191,
            't': 0x2
        }, {
            'p': [-0x2c, 0x2f, -0x11],
            's': [0x1, 0x17, 0x5],
            'l': 0x1,
            'r': [0x0, 0x0, 0.17],
            'c': 0x848484,
            't': 0x2
        }, {
            'p': [-0x2c, 0x2f, -0x8],
            's': [0x1, 0x17, 0x5],
            'l': 0x1,
            'r': [0x0, 0x0, 0.17],
            'c': 0x848484,
            't': 0x2
        }, {
            'p': [0x23, 0x5b, -0x8f],
            's': [0xc, 0xc, 0xc],
            'i': 0x1,
            'l': 0x1,
            'r': [0x0, -0.35, 0x0]
        }, {
            'p': [0x20, 0x30, 0x2b],
            's': [0xc, 0xc, 0xc],
            'i': 0x1
        }, {
            'p': [0x20, 0x30, 0x43],
            's': [0xc, 0xc, 0xc],
            'i': 0x1
        }, {
            'p': [0x20, 0x30, 0x37],
            's': [0xc, 0xc, 0xc],
            'i': 0x1
        }, {
            'p': [-0x28, 0x2e, 0x4d],
            's': [0x20, 0x1f, 0x8],
            'c': '#9d8672',
            't': 0xb
        }, {
            'p': [0x1a, 0x2e, 0x4d],
            's': [0x18, 0x1f, 0x8],
            'c': '#9d8672',
            't': 0xb
        }, {
            'p': [-0x2e, 0x4d, 0x4d],
            's': [0x4, 0x4, 0x8],
            'l': 0x1,
            'c': '#9d8672',
            't': 0xb
        }, {
            'p': [-0x1e, 0x4d, 0x4d],
            's': [0x8, 0x3, 0xc],
            'l': 0x1,
            'r': [0x0, -1.57, 0x0],
            'c': '#9d8672',
            't': 0xb
        }, {
            'p': [0x14, 0x4d, 0x4d],
            's': [0x8, 0x2, 0xc],
            'l': 0x1,
            'r': [0x0, -1.57, 0x0],
            'c': '#9d8672',
            't': 0xb
        }, {
            'p': [0x24, 0x4d, 0x4d],
            's': [0x4, 0x2, 0x8],
            'l': 0x1,
            'c': '#9d8672',
            't': 0xb
        }, {
            'p': [-0x2a, 0x30, 0x43],
            's': [0xc, 0xc, 0xc],
            'i': 0x1
        }, {
            'p': [0xe3, 0x21, -0x129],
            's': [0x3, 0x20, 0x2],
            'l': 0x1,
            'c': 0x919191,
            't': 0x2
        }, {
            'p': [0xe3, 0x21, -0x109],
            's': [0x3, 0x20, 0x2],
            'l': 0x1,
            'c': 0x919191,
            't': 0x2
        }, {
            'p': [0x118, 0x21, -0xf0],
            's': [0x4, 0x20, 0x2],
            'l': 0x1,
            'c': 0x919191,
            't': 0x2
        }, {
            'p': [-0x9f, 0x29, -0x134],
            's': [0x53, 0x32, 0x37],
            'i': 0xe,
            'l': 0x1
        }, {
            'p': [0xf0, 0x21, 0x6a],
            's': [0x57, 0x32, 0x2d],
            'i': 0xe,
            'l': 0x1
        }, {
            'p': [-0x97, 0x30, 0x68],
            's': [0x40, 0x32, 0x30],
            'i': 0xe,
            'l': 0x1
        }, {
            'p': [-0x1, 0x30, -0x17],
            's': [0x59, 0x32, 0x48],
            'i': 0xe,
            'l': 0x1
        }, {
            'p': [-0x1, 0x30, -0x23],
            's': [0xc, 0xc, 0xc],
            'i': 0x1
        }, {
            'p': [-0x1, 0x30, -0x17],
            's': [0xc, 0xc, 0xc],
            'i': 0x1
        }, {
            'p': [-0xc3, 0x29, -0x135],
            's': [0xc, 0xc, 0xc],
            'i': 0x1
        }, {
            'p': [-0xc3, 0x35, -0x135],
            's': [0xc, 0xc, 0xc],
            'i': 0x1
        }, {
            'p': [0x9e, 0x64, 0x48],
            's': [0x43, 0x3, 0x65],
            'c': 0x4a4a4a,
            't': 0xb,
            'bo': 0x1
        }, {
            'p': [0x9e, 0x20, 0x48],
            's': [0x3e, 0x2, 0x5f],
            'l': 0x1,
            'c': '#393939',
            't': 0xb
        }, {
            'p': [0x7e, 0x29, 0x5e],
            's': [0x6, 0x30, 0x18],
            'c': '#ffd5b1',
            'bo': 0x1
        }, {
            'p': [0xa9, 0x20, -0x155],
            's': [0x16, 0x2, 0xb],
            'l': 0x1,
            'c': '#4a4a4a',
            't': 0xb
        }, {
            'p': [0x99, 0x21, -0x145],
            's': [0xc, 0xc, 0xc],
            'i': 0x1
        }, {
            'p': [0xbc, 0x20, -0xde],
            's': [0x123, 0x1, 0x14f],
            't': 0x1
        }, {
            'p': [0x86, 0x20, -0xa0],
            's': [0x42, 0x4c, 0x48],
            'c': '#ffd5b1',
            'bo': 0x1
        }, {
            'p': [0xc1, 0x36, -0x124],
            's': [0x44, 0x2b, 0x72],
            'c': '#ffd5b1'
        }, {
            'p': [0x111, 0x3f, -0xf0],
            's': [0x14, 0x2, 0x4],
            'l': 0x1,
            'r': [0x0, 0x0, 0.17],
            'c': 0x5d537f,
            't': 0x1
        }, {
            'p': [0x111, 0x3f, -0xf4],
            's': [0x14, 0x2, 0x4],
            'l': 0x1,
            'r': [0x0, 0x0, 0.17],
            'c': 0x787878,
            't': 0x5
        }, {
            'p': [0x111, 0x3f, -0xfc],
            's': [0x14, 0x2, 0x4],
            'l': 0x1,
            'r': [0x0, 0x0, 0.17],
            'c': 0x787878,
            't': 0x5
        }, {
            'p': [0x111, 0x3f, -0xf8],
            's': [0x14, 0x2, 0x4],
            'l': 0x1,
            'r': [0x0, 0x0, 0.17],
            'c': 0x5d537f,
            't': 0x1
        }, {
            'p': [0x111, 0x3f, -0x100],
            's': [0x14, 0x2, 0x4],
            'l': 0x1,
            'r': [0x0, 0x0, 0.17],
            'c': 0x5d537f,
            't': 0x1
        }, {
            'p': [0x111, 0x3f, -0x108],
            's': [0x14, 0x2, 0x4],
            'l': 0x1,
            'r': [0x0, 0x0, 0.17],
            'c': 0x5d537f,
            't': 0x1
        }, {
            'p': [0x111, 0x3f, -0x104],
            's': [0x14, 0x2, 0x4],
            'l': 0x1,
            'r': [0x0, 0x0, 0.17],
            'c': 0x787878,
            't': 0x5
        }, {
            'p': [0x111, 0x3f, -0x110],
            's': [0x14, 0x2, 0x4],
            'l': 0x1,
            'r': [0x0, 0x0, 0.17],
            'c': 0x5d537f,
            't': 0x1
        }, {
            'p': [0x111, 0x3f, -0x10c],
            's': [0x14, 0x2, 0x4],
            'l': 0x1,
            'r': [0x0, 0x0, 0.17],
            'c': 0x787878,
            't': 0x5
        }, {
            'p': [0x118, 0x21, -0x110],
            's': [0x4, 0x20, 0x2],
            'l': 0x1,
            'c': 0x919191,
            't': 0x2
        }, {
            'p': [0x86, 0x6c, -0xa0],
            's': [0x47, 0x4, 0x4d],
            'c': '#4a4a4a',
            't': 0xb,
            'bo': 0x1
        }, {
            'p': [0xf6, 0x1d, -0xa0],
            's': [0x34, 0x5, 0x4a],
            'l': 0x1,
            'c': '#4a4a4a',
            't': 0xb
        }, {
            'p': [0x116, 0x1d, -0xae],
            's': [0xc, 0x5, 0x2e],
            'l': 0x1,
            'c': 0x525252,
            't': 0x2
        }, {
            'p': [0xfc, 0x3c, -0xa0],
            's': [0x3f, 0x2, 0x49],
            'l': 0x1,
            'c': '#4a4a4a',
            't': 0xb
        }, {
            'p': [0x11c, 0x3c, -0xa0],
            's': [0x1, 0x2, 0x49],
            'l': 0x1,
            'c': 0x525252,
            't': 0x2
        }, {
            'p': [0xfd, 0x55, -0xa0],
            's': [0x43, 0x3, 0x4b],
            'c': '#4a4a4a',
            't': 0xb,
            'bo': 0x1
        }, {
            'p': [0x87, 0x1d, -0xa0],
            's': [0x42, 0x5, 0x4a],
            'l': 0x1,
            'c': '#4a4a4a',
            't': 0xb
        }, {
            'p': [0x87, 0x3b, -0xa0],
            's': [0x42, 0x2, 0x49],
            'l': 0x1,
            'c': '#4a4a4a',
            't': 0xb
        }, {
            'p': [0x65, 0x3b, -0x7e],
            's': [0x2, 0x2, 0x5],
            'l': 0x1,
            'c': '#a5a5a5',
            't': 0x2
        }, {
            'p': [0x65, 0x3b, -0x81],
            's': [0x2, 0x2, 0x1],
            'l': 0x1,
            'c': '#a5a5a5',
            't': 0x2
        }, {
            'p': [0x86, 0x54, -0xa0],
            's': [0x43, 0x2, 0x49],
            'l': 0x1,
            'c': '#4a4a4a',
            't': 0xb
        }, {
            'p': [0xb0, 0x40, -0x8c],
            's': [0x2, 0x7, 0x2],
            'c': '#393939',
            't': 0x2
        }, {
            'p': [0xab, 0x47, -0x8b],
            's': [0x7, 0x1, 0x2],
            'c': '#7d7d7d',
            't': 0x2
        }, {
            'p': [0xa7, 0x40, -0x99],
            's': [0x2, 0x11, 0x1],
            'l': 0x1,
            'c': 0x4a4a4a,
            't': 0x2
        }, {
            'p': [0xab, 0x21, -0x9b],
            's': [0x1, 0x14, 0x6],
            'l': 0x1,
            'r': [0x0, 0x0, 0.17],
            'c': '#616161',
            't': 0x2
        }, {
            'p': [0xab, 0x21, -0x8e],
            's': [0x1, 0x14, 0x6],
            'l': 0x1,
            'r': [0x0, 0x0, 0.17],
            'c': '#616161',
            't': 0x2
        }, {
            'p': [0x90, 0x21, -0xca],
            's': [0xc, 0xc, 0xc],
            'i': 0x1
        }, {
            'p': [0x90, 0x2d, -0xca],
            's': [0xc, 0xc, 0xc],
            'i': 0x1
        }, {
            'p': [0xb5, 0x21, -0xe5],
            's': [0xc, 0xc, 0xc],
            'i': 0x1
        }, {
            'p': [0x10b, 0x21, -0x76],
            's': [0xc, 0xc, 0xc],
            'i': 0x1
        }, {
            'p': [0x15, 0x21, -0x14b],
            's': [0xc, 0xc, 0xc],
            'i': 0x1
        }, {
            'p': [0x15, 0x2d, -0x14b],
            's': [0xc, 0xc, 0xc],
            'i': 0x1
        }, {
            'p': [-0x29, 0x21, -0x15d],
            's': [0xc, 0xc, 0xc],
            'i': 0x1
        }, {
            'p': [-0xe, 0x23, -0x102],
            's': [0x17, 0x1, 0x17],
            'c': '#9d9d9d',
            't': 0x1
        }, {
            'p': [-0x75, 0x18, 0x8c],
            's': [0x1f, 0x1c, 0x3],
            'c': '#9d8672',
            't': 0xb
        }, {
            'p': [-0x1b, 0x18, -0x102],
            's': [0x3, 0xd, 0x17],
            'c': '#9d8672',
            't': 0xb
        }, {
            'p': [-0xe, 0x18, -0x10f],
            's': [0x1d, 0xd, 0x3],
            'c': '#9d8672',
            't': 0xb
        }, {
            'p': [-0x1, 0x18, -0x102],
            's': [0x3, 0xd, 0x17],
            'c': '#9d8672',
            't': 0xb
        }, {
            'p': [0x119, 0x20, 0x50],
            's': [0x9, 0xe, 0x4],
            'c': '#9d8672',
            't': 0xb
        }, {
            'p': [0xda, 0x20, 0x50],
            's': [0x5, 0x10, 0x5],
            'c': '#9d8672'
        }, {
            'p': [0x94, 0x21, -0x76],
            's': [0xc, 0xc, 0xc],
            'i': 0x1
        }, {
            'p': [0xe9, 0x3f, -0x11d],
            's': [0x14, 0x2, 0x4],
            'l': 0x1,
            'r': [0x0, 0x0, -0.18],
            'c': 0x666666,
            't': 0x5
        }, {
            'p': [0x117, 0x21, 0x6c],
            's': [0xc, 0xc, 0xc],
            'i': 0x1
        }, {
            'p': [0xcb, 0x20, 0x50],
            's': [0x1e, 0xf, 0x4],
            'c': '#9d8672',
            't': 0xb
        }, {
            'p': [0xff, 0x20, 0x50],
            's': [0x5, 0x10, 0x5],
            'c': '#9d8672'
        }, {
            'p': [-0xa6, 0x30, 0x55],
            's': [0x6, 0x8, 0x6],
            'i': 0x2
        }, {
            'p': [-0xe5, 0x30, 0x86],
            's': [0x6, 0x8, 0x6],
            'i': 0x2
        }, {
            'p': [-0xe5, 0x30, 0x8d],
            's': [0x6, 0x8, 0x6],
            'i': 0x2
        }, {
            'p': [-0xe5, 0x30, 0x94],
            's': [0x6, 0x8, 0x6],
            'i': 0x2
        }, {
            'p': [-0x93, 0x21, 0x45],
            's': [0x6, 0x8, 0x6],
            'i': 0x2
        }, {
            'p': [-0x29, 0xd, 0x8],
            's': [0x6, 0x8, 0x6],
            'i': 0x2
        }, {
            'p': [-0x22, 0xd, 0x8],
            's': [0x6, 0x8, 0x6],
            'i': 0x2
        }, {
            'p': [-0x5c, 0x30, 0xb4],
            's': [0x6, 0x8, 0x6],
            'i': 0x2
        }, {
            'p': [-0x5c, 0x30, 0xad],
            's': [0x6, 0x8, 0x6],
            'i': 0x2
        }, {
            'p': [-0x99, 0x2c, -0x7f],
            's': [0x6, 0x8, 0x6],
            'i': 0x2
        }, {
            'p': [-0x86, 0x29, -0x10b],
            's': [0x6, 0x8, 0x6],
            'i': 0x2
        }, {
            'p': [-0xc6, 0x29, -0x12b],
            's': [0x6, 0x8, 0x6],
            'i': 0x2
        }, {
            'p': [-0xd0, 0x21, -0xf9],
            's': [0x6, 0x8, 0x6],
            'i': 0x2
        }, {
            'p': [-0xd0, 0x21, -0xf2],
            's': [0x6, 0x8, 0x6],
            'i': 0x2
        }, {
            'p': [-0x1e, 0x21, -0x15e],
            's': [0x6, 0x8, 0x6],
            'i': 0x2
        }, {
            'p': [0xb, 0x21, -0x14d],
            's': [0x6, 0x8, 0x6],
            'i': 0x2
        }, {
            'p': [0x60, 0x21, -0x157],
            's': [0x6, 0x8, 0x6],
            'i': 0x2
        }, {
            'p': [0x9a, 0x21, -0x11a],
            's': [0x6, 0x8, 0x6],
            'i': 0x2
        }, {
            'p': [0x9a, 0x21, -0x113],
            's': [0x6, 0x8, 0x6],
            'i': 0x2
        }, {
            'p': [0xbf, 0x21, -0xe7],
            's': [0x6, 0x8, 0x6],
            'i': 0x2
        }, {
            'p': [0x118, 0x21, -0xc9],
            's': [0x6, 0x8, 0x6],
            'i': 0x2
        }, {
            'p': [0x118, 0x21, -0xd0],
            's': [0x6, 0x8, 0x6],
            'i': 0x2
        }, {
            'p': [0x101, 0x21, -0x78],
            's': [0x6, 0x8, 0x6],
            'i': 0x2
        }, {
            'p': [0xbd, 0x21, -0x54],
            's': [0x6, 0x8, 0x6],
            'i': 0x2
        }, {
            'p': [0xe6, 0x21, -0x24],
            's': [0x6, 0x8, 0x6],
            'i': 0x2
        }, {
            'p': [0xe6, 0x21, -0x1d],
            's': [0x6, 0x8, 0x6],
            'i': 0x2
        }, {
            'p': [0xc1, 0x21, 0x2c],
            's': [0x6, 0x8, 0x6],
            'i': 0x2
        }, {
            'p': [0xe6, 0x21, 0x7f],
            's': [0x6, 0x8, 0x6],
            'i': 0x2
        }, {
            'p': [0xed, 0x21, 0x7f],
            's': [0x6, 0x8, 0x6],
            'i': 0x2
        }, {
            'p': [-0x44, 0x30, 0x54],
            's': [0x6, 0x8, 0x6],
            'i': 0x2
        }, {
            'p': [0x16, 0x30, 0x45],
            's': [0x6, 0x8, 0x6],
            'i': 0x2
        }, {
            'p': [-0x2c, 0x30, 0x39],
            's': [0x6, 0x8, 0x6],
            'i': 0x2
        }, {
            'p': [-0x2c, 0x30, -0x1a],
            's': [0x6, 0x8, 0x6],
            'i': 0x2
        }, {
            'p': [-0x2c, 0x30, -0x72],
            's': [0x6, 0x8, 0x6],
            'i': 0x2
        }, {
            'p': [0x9, 0x30, -0x18],
            's': [0x6, 0x8, 0x6],
            'i': 0x2
        }, {
            'p': [0x18b, 0x7, 0x67],
            's': [0x50, 0x58, 0x3b],
            'c': '#ffd5b1'
        }, {
            'p': [0x18c, 0x5f, 0x68],
            's': [0x58, 0x4, 0x43],
            'c': 0x4a4a4a,
            't': 0xb
        }, {
            'p': [0xb8, 0x20, 0xeb],
            's': [0x66, 0x4c, 0x31],
            'c': '#ffd5b1'
        }, {
            'p': [0xb8, 0x6c, 0xeb],
            's': [0x6d, 0x5, 0x39],
            'c': 0x525252,
            't': 0xb
        }, {
            'p': [-0x59, 0x21, -0x89],
            's': [0x36, 0x1, 0x61],
            'l': 0x1,
            'c': '#4a4a4a',
            't': 0xb
        }, {
            'p': [-0x79, 0x20, 0xe],
            's': [0x6, 0x2, 0x2],
            'l': 0x1,
            'c': '#393939',
            't': 0xb
        }, {
            'p': [-0x44, 0x20, 0x2f],
            's': [0x1a, 0x2, 0x44],
            'l': 0x1,
            'c': 0x4a4a4a,
            't': 0x2
        }, {
            'p': [-0x66, 0x3e, -0x11],
            's': [0x2b, 0x2, 0x3f],
            'l': 0x1,
            'c': '#393939',
            't': 0xb
        }, {
            'p': [-0x7b, 0x22, 0x0],
            's': [0x1, 0x11, 0xd],
            'l': 0x1,
            'c': 0x7d736b,
            't': 0x2
        }, {
            'p': [-0x7a, 0x22, -0x7],
            's': [0x4, 0x11, 0x1],
            'c': 0x4a4a4a,
            't': 0x2
        }, {
            'p': [-0x7a, 0x22, 0x7],
            's': [0x4, 0x11, 0x1],
            'c': 0x4a4a4a,
            't': 0x2
        }, {
            'p': [-0x7a, 0x33, 0x0],
            's': [0x4, 0x1, 0xf],
            'c': 0x4a4a4a,
            't': 0x2
        }, {
            'p': [-0x3c, 0x18, -0x45],
            's': [0x6, 0x8, 0x6],
            'i': 0x2
        }, {
            'p': [-0x54, 0x2b, -0x22],
            's': [0x7, 0xe, 0x9],
            'l': 0x1,
            'c': 0x828282,
            't': 0x2
        }, {
            'p': [-0x54, 0x2a, -0x22],
            's': [0x8, 0x1, 0xa],
            'l': 0x1,
            'c': 0x4d4d4d,
            't': 0x2
        }, {
            'p': [-0x6f, 0xa, -0x3e],
            's': [0xc, 0x17, 0x2b],
            't': 0x1
        }, {
            'p': [-0x5d, 0x18, -0x3e],
            's': [0x18, 0x9, 0x1c],
            'i': 0x9,
            't': 0x1,
            'd': 0x2
        }, {
            'p': [0xf1, 0x21, -0x129],
            's': [0x2, 0x1e, 0x2],
            'c': 0x919191,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [0xf1, 0x21, -0x109],
            's': [0x2, 0x1e, 0x2],
            'c': 0x919191,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [0x109, 0x21, -0x110],
            's': [0x2, 0x1e, 0x2],
            'c': 0x919191,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [0x109, 0x21, -0xf0],
            's': [0x2, 0x1e, 0x2],
            'c': 0x919191,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [-0x3d, 0x3, -0x3d],
            's': [0x28, 0x15, 0x1a],
            't': 0x1
        }, {
            'p': [-0x45, 0xd, -0x23],
            's': [0x1a, 0xb, 0x1a],
            'i': 0x9,
            't': 0x1,
            'd': 0x3
        }, {
            'p': [-0x55, 0x20, -0x13e],
            's': [0xff, 0x1, 0x119],
            'c': '#ffffff',
            't': 0x1
        }, {
            'p': [0x34, 0x21, -0x6a],
            's': [0x2, 0xe, 0x32],
            't': 0x1
        }, {
            'p': [0x12e, 0x2b, 0x39],
            's': [0x3, 0x8, 0x3],
            'c': '#4d4d4d',
            't': 0x5,
            'bo': 0x1
        }, {
            'p': [0x86, 0x2b, -0x163],
            's': [0x3, 0x5, 0x8],
            'c': '#464646',
            't': 0x5
        }, {
            'p': [-0x28, 0x21, -0xdb],
            's': [0x4, 0x2, 0x3],
            'l': 0x1,
            'r': [0x0, 0.52, 0x0],
            'c': '#9d8672'
        }, {
            'p': [-0x3b, 0x21, -0xe6],
            's': [0x6, 0x2, 0x4],
            'l': 0x1,
            'r': [0x0, -0.52, 0x0],
            'c': '#9d8672'
        }, {
            'p': [-0x40, 0x21, -0xdf],
            's': [0x4, 0x2, 0x4],
            'l': 0x1,
            'c': '#9d8672'
        }, {
            'p': [0x190, 0x7b, -0x44],
            's': [0x5, 0xe, 0x9],
            'l': 0x1,
            'c': 0x828282,
            't': 0x2
        }, {
            'p': [0x190, 0x7a, -0x44],
            's': [0x6, 0x1, 0xa],
            'l': 0x1,
            'c': 0x4d4d4d,
            't': 0x2
        }, {
            'p': [0xec, 0x21, 0x65],
            's': [0x18, 0x24, 0x18],
            'i': 0x17,
            'l': 0x1,
            'tm': 0x0
        }, {
            'p': [-0x90, 0x29, -0x12d],
            's': [0x18, 0x24, 0x18],
            'i': 0x17,
            'l': 0x1,
            'tm': '1'
        }, {
            'p': [-0xcd, 0x20, -0xed],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [0x0, 0.96, 0x0],
            'c': '#d2b559'
        }, {
            'p': [-0xd0, 0x20, -0xe0],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [-3.14, 1.13, -3.14],
            'c': '#d2b559'
        }, {
            'p': [-0x41, 0x20, -0xbf],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [-3.14, 1.13, -3.14]
        }, {
            'p': [-0x4e, 0x20, -0xc6],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [-3.14, -0.62, -3.14]
        }, {
            'p': [-0x39, 0x20, -0xcd],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [-3.14, -0.62, -3.14]
        }, {
            'p': [-0x64, 0x20, -0x154],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [-3.14, -0.62, -3.14]
        }, {
            'p': [-0x43, 0x20, -0x15f],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [0x0, -1.3, 0x0]
        }, {
            'p': [-0x57, 0x20, -0x160],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [0x0, 0.53, 0x0]
        }, {
            'p': [-0x32, 0x10, -0x146],
            's': [0x6, 0x28, 0x17],
            'c': '#9d8672',
            't': 0xb
        }, {
            'p': [-0x32, 0x10, -0x159],
            's': [0x6, 0x22, 0xf],
            'c': '#9d8672',
            't': 0xb
        }, {
            'p': [-0x1c, 0x20, -0x157],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [0x0, -0.86, 0x0]
        }, {
            'p': [-0x13, 0x20, -0xce],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [0x0, -0.86, 0x0]
        }, {
            'p': [-0x16, 0x23, -0xfc],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [0x0, -0.6, 0x0]
        }, {
            'p': [-0x9, 0x23, -0x109],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [3.14, -0.97, 3.14]
        }, {
            'p': [-0xbf, 0x27, -0x12c],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [-3.14, 0.61, -3.14]
        }, {
            'p': [-0xa7, 0x28, -0x14b],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [-3.14, 0.61, -3.14]
        }, {
            'p': [-0x88, 0x29, -0x14c],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [-3.14, 0.61, -3.14]
        }, {
            'p': [-0xc5, 0x28, -0x14d],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [-3.14, 0.61, -3.14]
        }, {
            'p': [-0x78, 0x28, -0x116],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [-3.14, 0.61, -3.14]
        }, {
            'p': [-0x86, 0x28, -0x111],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [-3.14, -1.05, -3.14]
        }, {
            'p': [-0x98, 0x20, -0xcd],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [-3.14, -0.36, -3.14]
        }, {
            'p': [0x17, 0x20, -0x11e],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [0x0, -0.86, 0x0]
        }, {
            'p': [0x4, 0x20, -0xd9],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [0x0, -0.86, 0x0]
        }, {
            'p': [0x10, 0x20, -0xe5],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [0x0, -0.16, 0x0]
        }, {
            'p': [-0x6b, 0x20, -0x102],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [-3.14, -0.88, -3.14]
        }, {
            'p': [-0x6a, 0x21, -0x128],
            's': [0x6, 0x2, 0x4],
            'l': 0x1,
            'r': [0x0, -1.39, 0x0],
            'c': '#9d8672'
        }, {
            'p': [0x5, 0x20, -0x14d],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [0x0, -0.86, 0x0]
        }, {
            'p': [0xc, 0x20, -0x146],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [0x0, 0.1, 0x0]
        }, {
            'p': [0x1f, 0x20, -0x14d],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [0x0, 0.71, 0x0]
        }, {
            'p': [0x30, 0x20, -0x123],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [0x0, 0.71, 0x0]
        }, {
            'p': [0x44, 0x20, -0x14d],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [0x0, 0.71, 0x0]
        }, {
            'p': [0x49, 0x20, -0x11c],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [0x0, 0.71, 0x0]
        }, {
            'p': [0x9c, 0x20, -0x13c],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [0x0, 0.71, 0x0]
        }, {
            'p': [0x95, 0x20, -0x116],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [0x0, 0.8, 0x0]
        }, {
            'p': [0x9c, 0x20, -0x158],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [0x0, 0.71, 0x0]
        }, {
            'p': [0x67, 0x20, -0x11a],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [0x0, -0.08, 0x0]
        }, {
            'p': [0x69, 0x20, -0xf9],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [0x0, 0.97, 0x0]
        }, {
            'p': [-0x46, 0x60, 0x82],
            's': [0x1e, 0x4, 0x17],
            'l': 0x1,
            'r': [-0.52, 0x0, 0x0],
            'c': 0x525252,
            't': 0xb
        }, {
            'p': [-0x46, 0x45, 0x7b],
            's': [0xf, 0x1, 0x6],
            'l': 0x1,
            'c': 0x4d4d4d,
            't': 0x2
        }, {
            'p': [-0x46, 0x44, 0x79],
            's': [0x1, 0x11, 0x11],
            'i': 0x16,
            'l': 0x1,
            'r': [0x0, 1.57, 0x0]
        }, {
            'p': [0x27, 0x20, -0x11b],
            's': [0x19, 0x2, 0x9],
            'l': 0x1,
            'c': '#a5a5a5',
            't': 0x2
        }, {
            'p': [0x27, 0xe, -0x11a],
            's': [0x18, 0x40, 0xa],
            'c': '#ffd5b1',
            'bo': 0x1
        }, {
            'p': [0x27, 0x4f, -0x116],
            's': [0x19, 0x3, 0x16],
            'r': [-0.35, 0x0, 0x0],
            'c': 0x525252,
            't': 0xb,
            'bo': 0x1
        }, {
            'p': [0x26, 0x33, -0x11e],
            's': [0xf, 0x1, 0x7],
            'l': 0x1,
            'c': 0x4d4d4d,
            't': 0x2
        }, {
            'p': [0x26, 0x32, -0x120],
            's': [0x1, 0x11, 0x11],
            'i': 0x16,
            'l': 0x1,
            'r': [0x0, 1.57, 0x0]
        }, {
            'p': [0x107, 0xe, -0xc5],
            's': [0x18, 0x40, 0xa],
            'c': '#ffd5b1',
            'bo': 0x1
        }, {
            'p': [0x107, 0x4f, -0xc1],
            's': [0x1a, 0x3, 0x16],
            'l': 0x1,
            'r': [-0.35, 0x0, 0x0],
            'c': 0x525252,
            't': 0xb
        }, {
            'p': [0x106, 0x33, -0xc9],
            's': [0xf, 0x1, 0x7],
            'l': 0x1,
            'c': 0x4d4d4d,
            't': 0x2
        }, {
            'p': [0x106, 0x32, -0xcb],
            's': [0x1, 0x11, 0x11],
            'i': 0x16,
            'l': 0x1,
            'r': [0x0, 1.57, 0x0]
        }, {
            'p': [-0x92, 0x57, 0xb9],
            's': [0xf, 0x1, 0x6],
            'l': 0x1,
            'c': 0x4d4d4d,
            't': 0x2
        }, {
            'p': [-0x92, 0x56, 0xb7],
            's': [0x1, 0x11, 0x11],
            'i': 0x16,
            'l': 0x1,
            'r': [0x0, 1.57, 0x0]
        }, {
            'p': [0x64, 0x52, 0x82],
            's': [0xf, 0x1, 0x6],
            'l': 0x1,
            'c': 0x4d4d4d,
            't': 0x2
        }, {
            'p': [0x64, 0x51, 0x80],
            's': [0x1, 0x11, 0x11],
            'i': 0x16,
            'l': 0x1,
            'r': [0x0, 1.57, 0x0]
        }, {
            'p': [-0x52, 0x5b, -0xb8],
            's': [0xf, 0x1, 0x6],
            'l': 0x1,
            'c': 0x4d4d4d,
            't': 0x2
        }, {
            'p': [-0x52, 0x5a, -0xba],
            's': [0x1, 0x11, 0x11],
            'i': 0x16,
            'l': 0x1,
            'r': [0x0, 1.57, 0x0]
        }, {
            'p': [-0x85, 0x25, -0xbc],
            's': [0x1c, 0x40, 0xa],
            'c': '#ffd5b1',
            'bo': 0x1
        }, {
            'p': [-0x85, 0x34, -0xbe],
            's': [0x1e, 0x2, 0x8],
            'l': 0x1,
            'c': '#a5a5a5',
            't': 0x2
        }, {
            'p': [-0x85, 0x65, -0xb9],
            's': [0x1e, 0x4, 0x17],
            'l': 0x1,
            'r': [-0.52, 0x0, 0x0],
            'c': 0x525252,
            't': 0xb
        }, {
            'p': [-0x85, 0x4a, -0xc0],
            's': [0xf, 0x1, 0x6],
            'l': 0x1,
            'c': 0x4d4d4d,
            't': 0x2
        }, {
            'p': [-0x85, 0x49, -0xc2],
            's': [0x1, 0x11, 0x11],
            'i': 0x16,
            'l': 0x1,
            'r': [0x0, 1.57, 0x0]
        }, {
            'p': [0x57, 0x42, -0x119],
            's': [0xf, 0x1, 0x4],
            'l': 0x1,
            'c': 0x4d4d4d,
            't': 0x2
        }, {
            'p': [0x57, 0x41, -0x11a],
            's': [0x1, 0x11, 0x11],
            'i': 0x16,
            'l': 0x1,
            'r': [0x0, 1.57, 0x0]
        }, {
            'p': [0xd, 0x20, 0xa0],
            's': [0x37, 0x6e, 0x3c],
            'c': '#ffd5b1'
        }, {
            'p': [0xd, 0x25, 0x80],
            's': [0x38, 0x40, 0xa],
            'c': '#ffd5b1',
            'bo': 0x1
        }, {
            'p': [0xd, 0x62, 0x7e],
            's': [0x3b, 0x4, 0xe],
            'l': 0x1,
            'r': [-0.52, 0x0, 0x0],
            'c': 0x525252,
            't': 0xb
        }, {
            'p': [0x1b, 0x4a, 0x7c],
            's': [0xf, 0x1, 0x6],
            'l': 0x1,
            'c': 0x4d4d4d,
            't': 0x2
        }, {
            'p': [0x1b, 0x49, 0x7a],
            's': [0x1, 0x11, 0x11],
            'i': 0x16,
            'l': 0x1,
            'r': [0x0, 1.57, 0x0]
        }, {
            'p': [0xd, 0x8d, 0xa0],
            's': [0x3a, 0x3, 0x3e],
            'c': '#393939',
            't': 0xb
        }, {
            'p': [-0x2, 0x49, 0x7a],
            's': [0x1, 0x11, 0x11],
            'i': 0x16,
            'l': 0x1,
            'r': [0x0, 1.57, 0x0]
        }, {
            'p': [-0x2, 0x4a, 0x7c],
            's': [0xf, 0x1, 0x6],
            'l': 0x1,
            'c': 0x4d4d4d,
            't': 0x2
        }, {
            'p': [-0x2b, 0x83, 0x95],
            's': [0x3a, 0x1, 0x22],
            'c': '#393939',
            't': 0xb
        }, {
            'p': [-0x2b, 0x6f, 0x95],
            's': [0x3a, 0x5, 0x22],
            'c': '#ffd5b1'
        }, {
            'p': [-0x45, 0x6f, 0x87],
            's': [0x2, 0x16, 0x2],
            'c': '#393939',
            't': 0x2
        }, {
            'p': [-0x11, 0x6f, 0x87],
            's': [0x2, 0x16, 0x2],
            'c': '#393939',
            't': 0x2
        }, {
            'p': [-0x2c, 0x6f, 0x87],
            's': [0x2, 0x16, 0x2],
            'c': '#393939',
            't': 0x2
        }, {
            'p': [-0x2c, 0x6f, 0xa4],
            's': [0x2, 0x16, 0x2],
            'c': '#393939',
            't': 0x2
        }, {
            'p': [-0x45, 0x6f, 0xa3],
            's': [0x2, 0x16, 0x2],
            'c': '#393939',
            't': 0x2
        }, {
            'p': [-0x11, 0x6f, 0xa3],
            's': [0x2, 0x16, 0x2],
            'c': '#393939',
            't': 0x2
        }, {
            'p': [-0x1d, 0x74, 0x85],
            's': [0xb, 0x1, 0x3],
            'l': 0x1,
            'c': '#d28181',
            't': 0x2
        }, {
            'p': [-0x1d, 0x70, 0x83],
            's': [0xb, 0x5, 0x1],
            'l': 0x1,
            'c': '#d28181',
            't': 0x2
        }, {
            'p': [-0x3c, 0x7d, 0x83],
            's': [0x8, 0x8, 0x1],
            'l': 0x1,
            'c': '#b2d4b2',
            't': 0x2
        }, {
            'p': [-0x3c, 0x84, 0x85],
            's': [0x8, 0x1, 0x3],
            'l': 0x1,
            'c': '#b2d4b2',
            't': 0x2
        }, {
            'p': [-0x4b, 0x6f, 0x83],
            's': [0x6, 0x8, 0x6],
            'i': 0x2,
            'l': 0x1,
            'r': [0x0, -0.17, 0x0]
        }, {
            'p': [-0x56, 0x6f, 0x84],
            's': [0x6, 0x8, 0x6],
            'i': 0x2,
            'l': 0x1,
            'r': [0x0, 0.52, 0x0]
        }, {
            'p': [0xd, 0x71, 0x7e],
            's': [0x28, 0x2, 0x9],
            'c': '#393939',
            't': 0x2
        }, {
            'p': [0x1f, 0x71, 0x7b],
            's': [0x2, 0x8, 0x2],
            'c': '#393939',
            't': 0x2
        }, {
            'p': [-0x5, 0x71, 0x7b],
            's': [0x2, 0x8, 0x2],
            'c': '#393939',
            't': 0x2
        }, {
            'p': [0xd, 0x79, 0x7b],
            's': [0x28, 0x1, 0x3],
            'c': '#393939',
            't': 0x2
        }, {
            'p': [0x1f, 0x79, 0x81],
            's': [0x3, 0x1, 0x9],
            'c': '#393939',
            't': 0x2
        }, {
            'p': [-0x5, 0x79, 0x81],
            's': [0x3, 0x1, 0x9],
            'c': '#393939',
            't': 0x2
        }, {
            'p': [0x14, 0x74, 0x83],
            's': [0xd, 0x11, 0x3],
            'l': 0x1,
            'c': 0x7d736b,
            't': 0x2
        }, {
            'p': [0xd, 0x74, 0x82],
            's': [0x1, 0x11, 0x2],
            'l': 0x1,
            'c': '#a5a5a5',
            't': 0x2
        }, {
            'p': [0x1b, 0x74, 0x82],
            's': [0x1, 0x11, 0x2],
            'l': 0x1,
            'c': '#a5a5a5',
            't': 0x2
        }, {
            'p': [0x14, 0x85, 0x82],
            's': [0xf, 0x1, 0x2],
            'l': 0x1,
            'c': '#a5a5a5',
            't': 0x2
        }, {
            'p': [0x14, 0x73, 0x82],
            's': [0xf, 0x1, 0x2],
            'l': 0x1,
            'c': '#a5a5a5',
            't': 0x2
        }, {
            'p': [0x5, 0x6c, 0x79],
            's': [0x6, 0xe, 0x1],
            'l': 0x1,
            'c': '#dec28f',
            't': 0x2
        }, {
            'p': [0x1, 0x6c, 0x79],
            's': [0x2, 0xe, 0x1],
            'l': 0x1,
            'c': '#a4be8d',
            't': 0x2
        }, {
            'p': [0x1, 0x7a, 0x7b],
            's': [0x2, 0x1, 0x5],
            'l': 0x1,
            'c': '#a4be8d',
            't': 0x2
        }, {
            'p': [0x5, 0x7a, 0x7b],
            's': [0x6, 0x1, 0x5],
            'l': 0x1,
            'c': '#dec28f',
            't': 0x2
        }, {
            'p': [0x28, 0x66, 0x8f],
            's': [0x8, 0x32, 0xe],
            'c': '#ffd5b1'
        }, {
            'p': [-0x8, 0xa1, 0x9d],
            's': [0x1, 0x7, 0x1],
            'l': 0x1,
            'r': [0x0, 0x0, 0.17],
            'c': '#2f2f2f',
            't': 0x5
        }, {
            'p': [-0x15, 0x84, 0x8e],
            's': [0x6, 0x8, 0x6],
            'i': 0x2,
            'l': 0x1,
            'r': [0x0, -0.17, 0x0]
        }, {
            'p': [0x4c, 0x67, 0x8d],
            's': [0x2, 0x16, 0x2],
            'c': '#393939',
            't': 0x2
        }, {
            'p': [0x4c, 0x7b, 0x8d],
            's': [0x1, 0x1, 0x9],
            'c': '#393939',
            't': 0x2
        }, {
            'p': [0x3b, 0x7b, 0x89],
            's': [0x21, 0x1, 0x1],
            'c': '#393939',
            't': 0x2
        }, {
            'p': [0x41, 0x71, 0x8e],
            's': [0x6, 0xb, 0x1],
            'l': 0x1,
            'c': '#d28181',
            't': 0x2
        }, {
            'p': [0x34, 0x71, 0x88],
            's': [0x7, 0xb, 0x1],
            'l': 0x1,
            'c': '#7ec382',
            't': 0x2
        }, {
            'p': [0x41, 0x7c, 0x8b],
            's': [0x6, 0x1, 0x7],
            'l': 0x1,
            'c': '#d28181',
            't': 0x2
        }, {
            'p': [0x41, 0x79, 0x88],
            's': [0x6, 0x3, 0x1],
            'l': 0x1,
            'c': '#d28181',
            't': 0x2
        }, {
            'p': [0x34, 0x7c, 0x8b],
            's': [0x7, 0x1, 0x7],
            'l': 0x1,
            'c': '#7ec382',
            't': 0x2
        }, {
            'p': [0x34, 0x7a, 0x8e],
            's': [0x7, 0x2, 0x1],
            'c': '#7ec382',
            't': 0x2
        }, {
            'p': [0x3b, 0x7b, 0x8d],
            's': [0x21, 0x1, 0x1],
            'c': '#393939',
            't': 0x2
        }, {
            'p': [0x3b, 0x7b, 0x91],
            's': [0x21, 0x1, 0x1],
            'c': '#393939',
            't': 0x2
        }, {
            'p': [-0xd4, 0x77, 0xf7],
            's': [0x78, 0x3, 0x21],
            'l': 0x1,
            'r': [-0.52, 0x0, 0x0],
            'c': '#393939',
            't': 0xb
        }, {
            'p': [-0xd4, 0x50, 0x101],
            's': [0x78, 0x23, 0x2d],
            'c': '#ffd5b1'
        }, {
            'p': [-0xd4, 0x73, 0x101],
            's': [0x78, 0x14, 0xf],
            'c': '#ffd5b1'
        }, {
            'p': [-0xd4, 0x88, 0x100],
            's': [0x79, 0x3, 0x11],
            'l': 0x1,
            'r': [-0.52, 0x0, 0x0],
            'c': '#393939',
            't': 0xb
        }, {
            'p': [-0x84, 0x34, 0xfe],
            's': [0x28, 0x59, 0x28],
            'c': '#9d8672',
            't': 0xb
        }, {
            'p': [-0x76, 0x8f, 0xfe],
            's': [0xc, 0xe, 0x28],
            'c': '#9d8672',
            't': 0xb
        }, {
            'p': [-0x84, 0x9e, 0xfe],
            's': [0x28, 0x8, 0x28],
            'c': '#9d8672',
            't': 0xb
        }, {
            'p': [-0x84, 0x8d, 0xfe],
            's': [0x29, 0x2, 0x29],
            'c': '#313131',
            't': 0xb
        }, {
            'p': [-0x84, 0xa5, 0xfe],
            's': [0x29, 0x2, 0x29],
            'c': '#313131',
            't': 0xb
        }, {
            'p': [-0x92, 0x8f, 0xfe],
            's': [0xc, 0xe, 0x28],
            'c': '#9d8672',
            't': 0xb
        }, {
            'p': [-0x91, 0xa7, 0xf1],
            's': [0xc, 0x6, 0xc],
            'c': '#9d8672',
            't': 0xb
        }, {
            'p': [-0x91, 0xa7, 0x10b],
            's': [0xc, 0x6, 0xc],
            'c': '#9d8672',
            't': 0xb
        }, {
            'p': [-0x77, 0xa7, 0x10b],
            's': [0xc, 0x6, 0xc],
            'c': '#9d8672',
            't': 0xb
        }, {
            'p': [-0x77, 0xa7, 0xf0],
            's': [0xc, 0x6, 0xc],
            'c': '#9d8672',
            't': 0xb
        }, {
            'p': [-0x84, 0x9d, 0xfe],
            's': [0x29, 0x2, 0x29],
            'c': '#313131',
            't': 0xb
        }, {
            'p': [-0x83, 0x89, 0xe4],
            's': [0x4, 0x4, 0xf],
            'c': '#7d7d7d',
            't': 0x2
        }, {
            'p': [-0x83, 0x86, 0xe8],
            's': [0x3, 0x2, 0xd],
            'l': 0x1,
            'r': [0.7, 0x0, 0x0],
            'c': '#7d7d7d',
            't': 0x2
        }, {
            'p': [-0x124, 0x34, 0xfe],
            's': [0x28, 0x5b, 0x28],
            'c': '#9d8672',
            't': 0xb
        }, {
            'p': [-0x124, 0x8f, 0xfe],
            's': [0x28, 0x17, 0x28],
            'c': '#9d8672',
            't': 0xb
        }, {
            'p': [-0x124, 0x8d, 0xfe],
            's': [0x29, 0x2, 0x29],
            'c': '#313131',
            't': 0xb
        }, {
            'p': [-0x124, 0xa5, 0xfe],
            's': [0x29, 0x2, 0x29],
            'c': '#313131',
            't': 0xb
        }, {
            'p': [-0x131, 0xa7, 0xf1],
            's': [0xc, 0x6, 0xc],
            'c': '#9d8672',
            't': 0xb
        }, {
            'p': [-0x131, 0xa7, 0x10b],
            's': [0xc, 0x6, 0xc],
            'c': '#9d8672',
            't': 0xb
        }, {
            'p': [-0x117, 0xa7, 0x10b],
            's': [0xc, 0x6, 0xc],
            'c': '#9d8672',
            't': 0xb
        }, {
            'p': [-0x117, 0xa7, 0xf0],
            's': [0xc, 0x6, 0xc],
            'c': '#9d8672',
            't': 0xb
        }, {
            'p': [-0x124, 0x9d, 0xfe],
            's': [0x29, 0x2, 0x29],
            'c': '#313131',
            't': 0xb
        }, {
            'p': [0x73, 0x61, -0x66],
            's': [0x2, 0x2, 0x45],
            'l': 0x1,
            'c': '#7d7d7d',
            't': 0x2
        }, {
            'p': [0x7b, 0x61, -0x66],
            's': [0x2, 0x2, 0x42],
            'l': 0x1,
            'c': '#7d7d7d',
            't': 0x2
        }, {
            'p': [0x83, 0x61, -0x66],
            's': [0x2, 0x2, 0x41],
            'l': 0x1,
            'c': '#7d7d7d',
            't': 0x2
        }, {
            'p': [0x76, 0x63, -0x68],
            's': [0xb, 0x1, 0xc],
            'l': 0x1,
            'c': '#acb1af',
            'e': '#502323',
            't': 0x2
        }, {
            'p': [0x7f, 0x63, -0x5a],
            's': [0xb, 0x1, 0xc],
            'l': 0x1,
            'c': '#868785',
            'e': '#0e110b',
            't': 0x2
        }, {
            'p': [0x84, 0x51, -0x5a],
            's': [0x1, 0x12, 0xc],
            'l': 0x1,
            'c': '#868785',
            'e': '#0e110b',
            't': 0x2
        }, {
            'p': [0x7e, 0x63, -0x74],
            's': [0xb, 0x1, 0x6],
            'l': 0x1,
            'c': '#617187',
            'e': '#0f1b2d',
            't': 0x2
        }, {
            'p': [0x79, 0x56, -0x74],
            's': [0x1, 0xd, 0x6],
            'l': 0x1,
            'c': '#617187',
            'e': '#0f1b2d',
            't': 0x2
        }, {
            'p': [0x71, 0x5a, -0x68],
            's': [0x1, 0x9, 0xc],
            'l': 0x1,
            'c': '#acb1af',
            'e': '#502323',
            't': 0x2
        }, {
            'p': [-0x6f, 0x44, -0x40],
            's': [0x2, 0x2, 0x45],
            'c': '#7d7d7d',
            't': 0x2
        }, {
            'p': [-0x67, 0x44, -0x40],
            's': [0x2, 0x2, 0x42],
            'c': '#7d7d7d',
            't': 0x2
        }, {
            'p': [-0x6c, 0x46, -0x40],
            's': [0xb, 0x1, 0x8],
            'c': '#bb5d5d',
            't': 0x2
        }, {
            'p': [-0x64, 0x46, -0x52],
            's': [0xb, 0x1, 0x6],
            'l': 0x1,
            'c': '#617187',
            'e': '#0f1b2d',
            't': 0x2
        }, {
            'p': [-0x69, 0x41, -0x52],
            's': [0x1, 0x5, 0x6],
            'l': 0x1,
            'c': '#617187',
            'e': '#0f1b2d',
            't': 0x2
        }, {
            'p': [-0x71, 0x3d, -0x40],
            's': [0x1, 0x9, 0x8],
            'l': 0x1,
            'c': '#bb5d5d',
            't': 0x2
        }, {
            'p': [-0x10c, 0x21, 0x4a],
            's': [0x54, 0x1f, 0x6f],
            'c': '#9d8672',
            't': 0xb,
            'bo': 0x1
        }, {
            'p': [-0x77, 0x1a, 0x9a],
            's': [0x41, 0x6d, 0x36],
            'i': 0xf,
            'l': 0x1,
            'r': [0x0, 0.35, 0x0],
            'c': '#7f6e38'
        }, {
            'p': [-0xaf, 0x2f, 0xab],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [0x0, -0.87, 0x0]
        }, {
            'p': [-0xe5, 0x2f, 0x9a],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [-3.14, 1.04, 3.14]
        }, {
            'p': [-0x9b, 0x2f, 0xb3],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [0x0, -0.87, 0x0]
        }, {
            'p': [-0x9f, 0x2f, 0x54],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [0x0, -0.87, 0x0]
        }, {
            'p': [-0xb3, 0x2f, 0x61],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [0x0, 0.7, 0x0]
        }, {
            'p': [-0x65, 0x2f, 0x57],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [0x0, -0.87, 0x0]
        }, {
            'p': [-0x58, 0x2f, 0x7f],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [0x0, -0.87, 0x0]
        }, {
            'p': [-0x34, 0x2f, 0x7d],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [0x0, -0.87, 0x0]
        }, {
            'p': [-0x3c, 0x2f, 0x53],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [0x0, 0.88, 0x0]
        }, {
            'p': [0x1f, 0x2f, 0x55],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [0x0, -0.69, 0x0]
        }, {
            'p': [0x24, 0x2f, 0x77],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [0x0, -0.69, 0x0]
        }, {
            'p': [-0x13, 0x2f, 0x7d],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [0x0, -0.69, 0x0]
        }, {
            'p': [-0x38, 0x2d, -0x2f],
            's': [0x2, 0x2, 0x36],
            'l': 0x1,
            'c': '#393939',
            't': 0xb
        }, {
            'p': [-0xe8, 0x20, -0x49],
            's': [0x44, 0x1c, 0x43],
            'c': '#9d8672',
            't': 0xb,
            'bo': 0x1
        }, {
            'p': [-0x8, 0x8e, 0x9d],
            's': [0x1, 0x13, 0x1],
            'c': '#2f2f2f',
            't': 0x5
        }, {
            'p': [-0x18, 0x2d, 0x81],
            's': [0x2, 0x3a, 0x2],
            'c': '#2f2f2f',
            't': 0x5
        }, {
            'p': [-0x29, 0x67, 0x81],
            's': [0x24, 0x2, 0x2],
            'c': '#2f2f2f',
            't': 0x5
        }, {
            'p': [-0x3a, 0x69, 0x81],
            's': [0x2, 0x9, 0x2],
            'c': '#2f2f2f',
            't': 0x5
        }, {
            'p': [-0x57, 0x22, 0x2f],
            's': [0x3e, 0x42, 0x42],
            'c': '#ffd5b1',
            'bo': 0x1
        }, {
            'p': [-0x57, 0xd, 0x2f],
            's': [0x3e, 0x13, 0x42],
            'c': '#9d8672',
            't': 0xb
        }, {
            'p': [-0x66, 0xd, -0x11],
            's': [0x2a, 0x13, 0x3e],
            'c': '#9d8672',
            't': 0xb
        }, {
            'p': [-0x154, 0x69, -0xc7],
            's': [0x5d, 0x4, 0x77],
            'c': '#393939',
            't': 0xb
        }, {
            'p': [0x16, 0x20, -0x17d],
            's': [0x5b, 0x1b, 0x58],
            'c': '#9d8672',
            't': 0xb,
            'bo': 0x1
        }, {
            'p': [-0x124, 0x34, 0x70],
            's': [0x28, 0x59, 0x28],
            'c': '#9d8672',
            't': 0xb
        }, {
            'p': [-0x124, 0x8f, 0x62],
            's': [0x28, 0xe, 0xc],
            'c': '#9d8672',
            't': 0xb
        }, {
            'p': [-0x124, 0x9e, 0x70],
            's': [0x28, 0x8, 0x28],
            'c': '#9d8672',
            't': 0xb
        }, {
            'p': [-0x124, 0x8d, 0x70],
            's': [0x29, 0x2, 0x29],
            'c': '#313131',
            't': 0xb
        }, {
            'p': [-0x124, 0xa5, 0x70],
            's': [0x29, 0x2, 0x29],
            'c': '#313131',
            't': 0xb
        }, {
            'p': [-0x131, 0xa7, 0x63],
            's': [0xc, 0x6, 0xc],
            'c': '#9d8672',
            't': 0xb
        }, {
            'p': [-0x131, 0xa7, 0x7d],
            's': [0xc, 0x6, 0xc],
            'c': '#9d8672',
            't': 0xb
        }, {
            'p': [-0x117, 0xa7, 0x7d],
            's': [0xc, 0x6, 0xc],
            'c': '#9d8672',
            't': 0xb
        }, {
            'p': [-0x117, 0xa7, 0x62],
            's': [0xc, 0x6, 0xc],
            'c': '#9d8672',
            't': 0xb
        }, {
            'p': [-0x124, 0x9d, 0x70],
            's': [0x29, 0x2, 0x29],
            'c': '#313131',
            't': 0xb
        }, {
            'p': [-0x10c, 0x89, 0x6f],
            's': [0xf, 0x4, 0x4],
            'c': '#7d7d7d',
            't': 0x2
        }, {
            'p': [-0x124, 0x8f, 0x7e],
            's': [0x28, 0xe, 0xc],
            'c': '#9d8672',
            't': 0xb
        }, {
            'p': [-0x11d, 0x77, 0xb8],
            's': [0x78, 0x3, 0x21],
            'l': 0x1,
            'r': [-1.57, -1.05, -1.57],
            'c': '#393939',
            't': 0xb
        }, {
            'p': [-0x128, 0x73, 0xbe],
            's': [0xf, 0x14, 0x78],
            'c': '#ffd5b1'
        }, {
            'p': [-0x128, 0x88, 0xbb],
            's': [0x79, 0x3, 0x11],
            'l': 0x1,
            'r': [-1.57, -1.05, -1.57],
            'c': '#393939',
            't': 0xb
        }, {
            'p': [-0x127, 0x50, 0xbb],
            's': [0x2d, 0x23, 0x78],
            'c': '#ffd5b1'
        }, {
            'p': [-0xe2, 0x2d, 0x7a],
            's': [0x2, 0x3a, 0x2],
            'l': 0x1,
            'c': '#2f2f2f',
            't': 0x5
        }, {
            'p': [-0xe2, 0x67, 0x7c],
            's': [0x2, 0x2, 0x6],
            'l': 0x1,
            'c': '#2f2f2f',
            't': 0x5
        }, {
            'p': [-0xe2, 0x69, 0x7e],
            's': [0x2, 0x12, 0x2],
            'l': 0x1,
            'c': '#2f2f2f',
            't': 0x5
        }, {
            'p': [0xa4, 0x22, 0x8e],
            's': [0x3c, 0x69, 0x30],
            'c': '#ffd5b1',
            'bo': 0x1
        }, {
            'p': [0xa4, 0x8b, 0x8e],
            's': [0x3f, 0x5, 0x33],
            'c': '#313131',
            't': 0xb
        }, {
            'p': [0xa4, 0x90, 0x8e],
            's': [0x38, 0x15, 0x28],
            'c': '#ffd5b1'
        }, {
            'p': [0xa4, 0xa5, 0x8e],
            's': [0x1e, 0x23, 0x1e],
            'c': '#ffd5b1'
        }, {
            'p': [0xa4, 0xc8, 0x8e],
            's': [0x22, 0x6, 0x22],
            'c': '#9d8672',
            't': 0xb
        }, {
            'p': [0xa4, 0xce, 0x8e],
            's': [0x1d, 0x6, 0x1c],
            'c': '#9d8672',
            't': 0xb
        }, {
            'p': [0xa4, 0xd4, 0x8e],
            's': [0x17, 0x6, 0x16],
            'c': '#9d8672',
            't': 0xb
        }, {
            'p': [0xa4, 0xda, 0x8e],
            's': [0x11, 0x6, 0x10],
            'c': '#9d8672',
            't': 0xb
        }, {
            'p': [0xa4, 0xe0, 0x8e],
            's': [0x5, 0xd, 0x9],
            'c': '#ffd5b1'
        }, {
            'p': [0xa4, 0xed, 0x8e],
            's': [0x3, 0x20, 0x4],
            'c': '#ffd5b1'
        }, {
            'p': [0xa4, 0xa5, 0x8e],
            's': [0x3a, 0x3, 0x2a],
            'c': '#313131',
            't': 0xb
        }, {
            'p': [0xa4, 0xa5, 0x9d],
            's': [0xa, 0x14, 0x1],
            'c': '#3c3c3c'
        }, {
            'p': [0x8e, 0x81, 0x8e],
            's': [0x4, 0x4, 0x3a],
            'c': '#7d7d7d',
            't': 0x2
        }, {
            'p': [0xba, 0x81, 0x8e],
            's': [0x4, 0x4, 0x3a],
            'c': '#7d7d7d',
            't': 0x2
        }, {
            'p': [0xa4, 0x81, 0x80],
            's': [0x44, 0x4, 0x4],
            'c': '#7d7d7d',
            't': 0x2
        }, {
            'p': [0xa4, 0x81, 0x9c],
            's': [0x44, 0x4, 0x4],
            'c': '#7d7d7d',
            't': 0x2
        }, {
            'p': [0xa4, 0x32, 0xa5],
            's': [0x10, 0x2, 0x8],
            'l': 0x1,
            'c': '#7d7d7d',
            't': 0x2
        }, {
            'p': [0xa4, 0x5e, 0xa5],
            's': [0x10, 0x2, 0x8],
            'l': 0x1,
            'c': '#7d7d7d',
            't': 0x2
        }, {
            'p': [0xa1, 0x22, 0x1a],
            's': [0xd, 0x11, 0x3],
            'l': 0x1,
            'c': 0x7d736b,
            't': 0x2
        }, {
            'p': [0x9a, 0x22, 0x19],
            's': [0x1, 0x11, 0x2],
            'l': 0x1,
            'c': '#a5a5a5',
            't': 0x2
        }, {
            'p': [0xa8, 0x22, 0x19],
            's': [0x1, 0x11, 0x2],
            'l': 0x1,
            'c': '#a5a5a5',
            't': 0x2
        }, {
            'p': [0xa1, 0x33, 0x19],
            's': [0xf, 0x1, 0x2],
            'l': 0x1,
            'c': '#a5a5a5',
            't': 0x2
        }, {
            'p': [0xa1, 0x21, 0x19],
            's': [0xf, 0x1, 0x2],
            'l': 0x1,
            'c': '#a5a5a5',
            't': 0x2
        }, {
            'p': [0x95, 0x60, 0x9e],
            's': [0x47, 0x4, 0x51],
            'c': '#525252',
            't': 0xb
        }, {
            'p': [-0x77, 0x39, 0x1f],
            's': [0x1, 0x11, 0x11],
            'i': 0x16,
            'l': 0x1,
            'r': [-3.14, 0x0, -3.14]
        }, {
            'p': [-0x75, 0x3a, 0x1f],
            's': [0x6, 0x1, 0xf],
            'l': 0x1,
            'c': 0x4d4d4d,
            't': 0x2
        }, {
            'p': [-0x77, 0x39, 0x3e],
            's': [0x1, 0x11, 0x11],
            'i': 0x16,
            'l': 0x1,
            'r': [-3.14, 0x0, -3.14]
        }, {
            'p': [-0x75, 0x3a, 0x3e],
            's': [0x6, 0x1, 0xf],
            'l': 0x1,
            'c': 0x4d4d4d,
            't': 0x2
        }, {
            'p': [-0x97, 0x59, -0x5a],
            's': [0x1, 0x11, 0x11],
            'i': 0x16,
            'l': 0x1,
            'r': [-3.14, 0x0, -3.14]
        }, {
            'p': [-0x95, 0x5a, -0x5a],
            's': [0x6, 0x1, 0xf],
            'l': 0x1,
            'c': 0x4d4d4d,
            't': 0x2
        }, {
            'p': [-0xd8, 0x5a, 0xe9],
            's': [0x1, 0x11, 0x11],
            'i': 0x16,
            'l': 0x1,
            'r': [0x0, 1.57, 0x0]
        }, {
            'p': [-0xd8, 0x5b, 0xeb],
            's': [0xf, 0x1, 0x6],
            'l': 0x1,
            'c': 0x4d4d4d,
            't': 0x2
        }, {
            'p': [-0xb1, 0x5a, 0xe9],
            's': [0x1, 0x11, 0x11],
            'i': 0x16,
            'l': 0x1,
            'r': [0x0, 1.57, 0x0]
        }, {
            'p': [-0xb1, 0x5b, 0xeb],
            's': [0xf, 0x1, 0x6],
            'l': 0x1,
            'c': 0x4d4d4d,
            't': 0x2
        }, {
            'p': [-0xd8, 0x59, -0x26],
            's': [0x1, 0x11, 0x11],
            'i': 0x16,
            'l': 0x1,
            'r': [0x0, -1.57, 0x0]
        }, {
            'p': [-0xd8, 0x5a, -0x28],
            's': [0x6, 0x1, 0xf],
            'l': 0x1,
            'r': [0x0, 1.57, 0x0],
            'c': 0x4d4d4d,
            't': 0x2
        }, {
            'p': [-0xc5, 0x59, -0x5d],
            's': [0x1, 0x11, 0x11],
            'i': 0x16,
            'l': 0x1
        }, {
            'p': [-0xc7, 0x5a, -0x5d],
            's': [0x6, 0x1, 0xf],
            'l': 0x1,
            'r': [-3.14, 0x0, -3.14],
            'c': 0x4d4d4d,
            't': 0x2
        }, {
            'p': [-0xe1, 0x20, 0xf],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [-3.14, 1.04, 3.14]
        }, {
            'p': [-0xcb, 0x20, -0x23],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [-3.14, 1.04, 3.14]
        }, {
            'p': [-0x80, 0x20, -0x17],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [0x0, 0.53, 0x0]
        }, {
            'p': [-0x7b, 0x20, 0x12],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [0x0, 0.53, 0x0]
        }, {
            'p': [-0x7b, 0x20, 0x37],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [0x0, -1.39, 0x0]
        }, {
            'p': [-0x95, 0x20, 0x3d],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [0x0, -1.39, 0x0]
        }, {
            'p': [-0xbb, 0x20, 0x45],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [0x0, -0.87, 0x0]
        }, {
            'p': [-0xde, 0x20, 0x2c],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [0x0, -0.87, 0x0]
        }, {
            'p': [-0x99, 0x20, -0x48],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [0x0, 0.18, 0x0]
        }, {
            'p': [-0x8c, 0x21, -0x48],
            's': [0x2, 0x2d, 0x2],
            'l': 0x1,
            'c': '#2f2f2f',
            't': 0x5
        }, {
            'p': [-0x84, 0x59, -0x48],
            's': [0x1, 0x11, 0x11],
            'i': 0x16,
            'l': 0x1,
            'r': [0x0, -1.57, 0x0]
        }, {
            'p': [-0x84, 0x5a, -0x4a],
            's': [0x6, 0x1, 0xf],
            'l': 0x1,
            'r': [0x0, 1.57, 0x0],
            'c': 0x4d4d4d,
            't': 0x2
        }, {
            'p': [-0x8f, 0x4e, -0x48],
            's': [0x8, 0x2, 0x2],
            'l': 0x1,
            'c': '#2f2f2f',
            't': 0x5
        }, {
            'p': [-0x92, 0x50, -0x48],
            's': [0x2, 0x22, 0x2],
            'l': 0x1,
            'c': '#2f2f2f',
            't': 0x5
        }, {
            'p': [-0xc5, 0x21, -0x2c],
            's': [0x2, 0x52, 0x2],
            'l': 0x1,
            'c': '#2f2f2f',
            't': 0x5
        }, {
            'p': [0x23d, 0xd, -0xa2],
            's': [0x37, 0x28, 0x3c],
            'c': '#ffd5b1'
        }, {
            'p': [0x23d, 0x34, -0xa2],
            's': [0x3a, 0x3, 0x3e],
            'c': '#393939',
            't': 0xb
        }, {
            'p': [0x205, 0x2a, -0xad],
            's': [0x3a, 0x1, 0x22],
            'c': '#393939',
            't': 0xb
        }, {
            'p': [0x205, 0x16, -0xad],
            's': [0x3a, 0x5, 0x22],
            'c': '#ffd5b1'
        }, {
            'p': [0x1eb, 0x16, -0xbb],
            's': [0x2, 0x16, 0x2],
            'c': '#393939',
            't': 0x2
        }, {
            'p': [0x21f, 0x16, -0xbb],
            's': [0x2, 0x16, 0x2],
            'c': '#393939',
            't': 0x2
        }, {
            'p': [0x204, 0x16, -0xbb],
            's': [0x2, 0x16, 0x2],
            'c': '#393939',
            't': 0x2
        }, {
            'p': [0x204, 0x16, -0x9e],
            's': [0x2, 0x16, 0x2],
            'c': '#393939',
            't': 0x2
        }, {
            'p': [0x1eb, 0x16, -0x9f],
            's': [0x2, 0x16, 0x2],
            'c': '#393939',
            't': 0x2
        }, {
            'p': [0x21f, 0x16, -0x9f],
            's': [0x2, 0x16, 0x2],
            'c': '#393939',
            't': 0x2
        }, {
            'p': [0x213, 0x1b, -0xbd],
            's': [0xb, 0x1, 0x3],
            'c': '#e63f3f',
            't': 0x2
        }, {
            'p': [0x213, 0x17, -0xbf],
            's': [0xb, 0x5, 0x1],
            'c': '#e63f3f',
            't': 0x2
        }, {
            'p': [0x1f4, 0x24, -0xbf],
            's': [0x8, 0x8, 0x1],
            'c': '#a1e1a1',
            't': 0x2
        }, {
            'p': [0x1f4, 0x2b, -0xbd],
            's': [0x8, 0x1, 0x3],
            'c': '#a1e1a1',
            't': 0x2
        }, {
            'p': [0x1ff, 0x1b, -0xbb],
            's': [0x6, 0x8, 0x6],
            'i': 0x2,
            'r': [0x0, -0.17, 0x0]
        }, {
            'p': [0x23d, 0x18, -0xc4],
            's': [0x28, 0x2, 0x9],
            'c': '#393939',
            't': 0x2
        }, {
            'p': [0x24f, 0x18, -0xc7],
            's': [0x2, 0x8, 0x2],
            'c': '#393939',
            't': 0x2
        }, {
            'p': [0x22b, 0x18, -0xc7],
            's': [0x2, 0x8, 0x2],
            'c': '#393939',
            't': 0x2
        }, {
            'p': [0x23d, 0x20, -0xc7],
            's': [0x28, 0x1, 0x3],
            'c': '#393939',
            't': 0x2
        }, {
            'p': [0x24f, 0x20, -0xc1],
            's': [0x3, 0x1, 0x9],
            'c': '#393939',
            't': 0x2
        }, {
            'p': [0x22b, 0x20, -0xc1],
            's': [0x3, 0x1, 0x9],
            'c': '#393939',
            't': 0x2
        }, {
            'p': [0x244, 0x1b, -0xbf],
            's': [0xd, 0x11, 0x3],
            'l': 0x1,
            'c': 0x7d736b,
            't': 0x2
        }, {
            'p': [0x23d, 0x1b, -0xc0],
            's': [0x1, 0x11, 0x2],
            'l': 0x1,
            'c': '#a5a5a5',
            't': 0x2
        }, {
            'p': [0x24b, 0x1b, -0xc0],
            's': [0x1, 0x11, 0x2],
            'l': 0x1,
            'c': '#a5a5a5',
            't': 0x2
        }, {
            'p': [0x244, 0x2c, -0xc0],
            's': [0xf, 0x1, 0x2],
            'l': 0x1,
            'c': '#a5a5a5',
            't': 0x2
        }, {
            'p': [0x244, 0x1a, -0xc0],
            's': [0xf, 0x1, 0x2],
            'l': 0x1,
            'c': '#a5a5a5',
            't': 0x2
        }, {
            'p': [0x235, 0x13, -0xc9],
            's': [0x6, 0xe, 0x1],
            'c': '#e6ab3e',
            't': 0x2
        }, {
            'p': [0x231, 0x13, -0xc9],
            's': [0x2, 0xe, 0x1],
            'c': '#8de63e',
            't': 0x2
        }, {
            'p': [0x231, 0x21, -0xc7],
            's': [0x2, 0x1, 0x5],
            'c': '#8de63e',
            't': 0x2
        }, {
            'p': [0x235, 0x21, -0xc7],
            's': [0x6, 0x1, 0x5],
            'c': '#e6ab3e',
            't': 0x2
        }, {
            'p': [0x228, 0x48, -0xa5],
            's': [0x1, 0x7, 0x1],
            'r': [0x0, 0x0, 0.17],
            'c': '#2f2f2f',
            't': 0x5
        }, {
            'p': [0x21b, 0x2b, -0xb4],
            's': [0x6, 0x8, 0x6],
            'i': 0x2,
            'r': [0x0, -0.17, 0x0]
        }, {
            'p': [0x228, 0x35, -0xa5],
            's': [0x1, 0x13, 0x1],
            'c': '#2f2f2f',
            't': 0x5
        }, {
            'p': [0x132, 0x58, -0xa9],
            's': [0x36, 0x2c, 0x38],
            'c': '#ffd5b1'
        }, {
            'p': [0x132, 0x82, -0xa9],
            's': [0x3a, 0x3, 0x3e],
            'c': '#393939',
            't': 0xb
        }, {
            'p': [0xfa, 0x6c, -0xb4],
            's': [0x3a, 0x1, 0x22],
            'c': '#393939',
            't': 0xb
        }, {
            'p': [0xfa, 0x58, -0xb4],
            's': [0x3a, 0x5, 0x22],
            'c': '#ffd5b1'
        }, {
            'p': [0xe0, 0x58, -0xc2],
            's': [0x2, 0x16, 0x2],
            'c': '#7d7d7d',
            't': 0x2
        }, {
            'p': [0x114, 0x58, -0xc2],
            's': [0x2, 0x16, 0x2],
            'c': '#7d7d7d',
            't': 0x2
        }, {
            'p': [0xf9, 0x58, -0xc2],
            's': [0x2, 0x16, 0x2],
            'c': '#7d7d7d',
            't': 0x2
        }, {
            'p': [0xf9, 0x58, -0xa5],
            's': [0x2, 0x16, 0x2],
            'c': '#7d7d7d',
            't': 0x2
        }, {
            'p': [0xe0, 0x58, -0xa6],
            's': [0x2, 0x16, 0x2],
            'c': '#7d7d7d',
            't': 0x2
        }, {
            'p': [0x114, 0x58, -0xa6],
            's': [0x2, 0x16, 0x2],
            'c': '#7d7d7d',
            't': 0x2
        }, {
            'p': [0x108, 0x5d, -0xc4],
            's': [0xb, 0x1, 0x3],
            'c': '#dc7c7c',
            't': 0x2
        }, {
            'p': [0x108, 0x55, -0xc6],
            's': [0xb, 0x9, 0x1],
            'c': '#d26262',
            't': 0x2
        }, {
            'p': [0xdd, 0x66, -0xad],
            's': [0x1, 0x8, 0x7],
            'c': '#e63f3f',
            't': 0x2
        }, {
            'p': [0xf4, 0x5d, -0xc2],
            's': [0x6, 0x8, 0x6],
            'i': 0x2,
            'l': 0x1,
            'r': [0x0, -0.17, 0x0]
        }, {
            'p': [0x11d, 0x95, -0xac],
            's': [0x1, 0x7, 0x1],
            'l': 0x1,
            'r': [0x0, 0x0, 0.17],
            'c': '#2f2f2f',
            't': 0x5
        }, {
            'p': [0x110, 0x6d, -0xbb],
            's': [0x6, 0x8, 0x6],
            'i': 0x2,
            'l': 0x1,
            'r': [0x0, -0.17, 0x0]
        }, {
            'p': [0x11d, 0x83, -0xac],
            's': [0x1, 0x13, 0x1],
            'c': '#2f2f2f',
            't': 0x5
        }, {
            'p': [0xdf, 0x6d, -0xad],
            's': [0x3, 0x1, 0x7],
            'c': '#e63f3f',
            't': 0x2
        }, {
            'p': [0x88, 0x54, -0xc6],
            's': [0x28, 0x2, 0x9],
            'c': '#7d7d7d',
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [0x9a, 0x54, -0xc9],
            's': [0x2, 0x8, 0x2],
            'c': '#7d7d7d',
            't': 0x2
        }, {
            'p': [0x76, 0x54, -0xc9],
            's': [0x2, 0x8, 0x2],
            'c': '#7d7d7d',
            't': 0x2
        }, {
            'p': [0x88, 0x5c, -0xc9],
            's': [0x28, 0x1, 0x3],
            'c': '#7d7d7d',
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [0x9a, 0x5c, -0xc3],
            's': [0x3, 0x1, 0x9],
            'c': '#7d7d7d',
            't': 0x2
        }, {
            'p': [0x76, 0x5c, -0xc3],
            's': [0x3, 0x1, 0x9],
            'c': '#7d7d7d',
            't': 0x2
        }, {
            'p': [0x7c, 0x4f, -0xcb],
            's': [0x5, 0xe, 0x1],
            'l': 0x1,
            'c': '#8de63e',
            't': 0x2
        }, {
            'p': [0x7c, 0x5d, -0xc9],
            's': [0x5, 0x1, 0x5],
            'l': 0x1,
            'c': '#8de63e',
            't': 0x2
        }, {
            'p': [0x110, 0x58, -0x9c],
            's': [0xc, 0xc, 0xc],
            'i': 0x1,
            'l': 0x1
        }, {
            'p': [0x110, 0x64, -0x9c],
            's': [0xc, 0xc, 0xc],
            'i': 0x1,
            'l': 0x1
        }, {
            'p': [0x88, 0x56, -0xc5],
            's': [0x1, 0x11, 0x1],
            'l': 0x1,
            'c': '#393939',
            't': 0x2
        }, {
            'p': [0x96, 0x56, -0xc5],
            's': [0x1, 0x11, 0x1],
            'l': 0x1,
            'c': '#393939',
            't': 0x2
        }, {
            'p': [0x8f, 0x67, -0xc5],
            's': [0xf, 0x1, 0x1],
            'l': 0x1,
            'c': '#393939',
            't': 0x2
        }, {
            'p': [0x8f, 0x56, -0xc4],
            's': [0xd, 0x11, 0x2],
            'l': 0x1,
            'c': 0x7d736b,
            't': 0x2
        }, {
            'p': [-0xe8, 0x50, 0x91],
            's': [0x1, 0x11, 0x11],
            'i': 0x16,
            'l': 0x1
        }, {
            'p': [-0xea, 0x51, 0x91],
            's': [0x6, 0x1, 0xf],
            'l': 0x1,
            'r': [-3.14, 0x0, -3.14],
            'c': 0x4d4d4d,
            't': 0x2
        }, {
            'p': [-0xe1, 0x5f, 0x65],
            's': [0x1, 0x11, 0x11],
            'i': 0x16,
            'l': 0x1
        }, {
            'p': [-0xe3, 0x60, 0x65],
            's': [0x6, 0x1, 0xf],
            'l': 0x1,
            'r': [-3.14, 0x0, -3.14],
            'c': 0x4d4d4d,
            't': 0x2
        }, {
            'p': [0x7f, 0x58, 0x5e],
            's': [0x8, 0x3, 0x1a],
            'l': 0x1,
            'r': [0x0, 0x0, 0.35],
            'c': '#525252',
            't': 0xb
        }, {
            'p': [0x7a, 0x42, 0x5e],
            's': [0x1, 0x11, 0x11],
            'i': 0x16,
            'l': 0x1,
            'r': [-3.14, 0x0, -3.14]
        }, {
            'p': [0x7c, 0x43, 0x5e],
            's': [0x6, 0x1, 0xf],
            'l': 0x1,
            'c': 0x4d4d4d,
            't': 0x2
        }, {
            'p': [-0xd, 0xb, -0x101],
            's': [0x41, 0x6d, 0x36],
            'i': 0xf,
            'l': 0x1,
            'r': [3.14, -0.35, 3.14],
            'c': '#846d22'
        }, {
            'p': [0x6f, 0x4e, 0x1c],
            's': [0x2f, 0x2, 0x2],
            'c': '#7d7d7d',
            't': 0x2
        }, {
            'p': [0x6f, 0x4e, 0x24],
            's': [0x2f, 0x2, 0x2],
            'c': '#7d7d7d',
            't': 0x2
        }, {
            'p': [0x77, 0x50, 0x20],
            's': [0x8, 0x1, 0xb],
            'l': 0x1,
            'c': '#d28d8d',
            't': 0x2
        }, {
            'p': [0x77, 0x47, 0x1b],
            's': [0x8, 0x9, 0x1],
            'l': 0x1,
            'c': '#d28d8d',
            't': 0x2
        }, {
            'p': [0x63, 0x47, 0x25],
            's': [0x3, 0x9, 0x1],
            'l': 0x1,
            'c': '#bbd9bb',
            't': 0x2
        }, {
            'p': [0x63, 0x50, 0x20],
            's': [0x3, 0x1, 0xb],
            'l': 0x1,
            'c': '#bbd9bb',
            't': 0x2
        }, {
            'p': [0x63, 0x4b, 0x1b],
            's': [0x3, 0x5, 0x1],
            'l': 0x1,
            'c': '#bbd9bb',
            't': 0x2
        }, {
            'p': [0x77, 0x4d, 0x25],
            's': [0x8, 0x3, 0x1],
            'l': 0x1,
            'c': '#d28d8d',
            't': 0x2
        }, {
            'p': [-0xc8, 0x5f, -0x114],
            's': [0x1, 0x11, 0x11],
            'i': 0x16,
            'l': 0x1
        }, {
            'p': [-0xca, 0x60, -0x114],
            's': [0x6, 0x1, 0xf],
            'l': 0x1,
            'r': [-3.14, 0x0, -3.14],
            'c': 0x4d4d4d,
            't': 0x2
        }, {
            'p': [-0xc8, 0x5f, -0x138],
            's': [0x1, 0x11, 0x11],
            'i': 0x16,
            'l': 0x1
        }, {
            'p': [-0xca, 0x60, -0x138],
            's': [0x6, 0x1, 0xf],
            'l': 0x1,
            'r': [-3.14, 0x0, -3.14],
            'c': 0x4d4d4d,
            't': 0x2
        }, {
            'p': [-0x7c, 0x44, -0x21],
            's': [0x1, 0x11, 0x11],
            'i': 0x16,
            'l': 0x1,
            'r': [-3.14, 0x0, -3.14]
        }, {
            'p': [-0x7a, 0x45, -0x21],
            's': [0x6, 0x1, 0xf],
            'l': 0x1,
            'c': 0x4d4d4d,
            't': 0x2
        }, {
            'p': [0x14, 0x41, -0xe1],
            's': [0x1, 0x11, 0x11],
            'i': 0x16,
            'l': 0x1,
            'r': [-3.14, 0x0, -3.14]
        }, {
            'p': [0x16, 0x42, -0xe1],
            's': [0x6, 0x1, 0xf],
            'l': 0x1,
            'c': 0x4d4d4d,
            't': 0x2
        }, {
            'p': [0x9e, 0x46, -0x13e],
            's': [0x1, 0x11, 0x11],
            'i': 0x16,
            'l': 0x1,
            'r': [-3.14, 0x0, -3.14]
        }, {
            'p': [0xa0, 0x47, -0x13e],
            's': [0x6, 0x1, 0xf],
            'l': 0x1,
            'c': 0x4d4d4d,
            't': 0x2
        }, {
            'p': [-0x2a, 0x60, -0x162],
            's': [0x1, 0x11, 0x11],
            'i': 0x16,
            'l': 0x1,
            'r': [0x0, -1.57, 0x0]
        }, {
            'p': [-0x2a, 0x61, -0x164],
            's': [0x6, 0x1, 0xf],
            'l': 0x1,
            'r': [0x0, 1.57, 0x0],
            'c': 0x4d4d4d,
            't': 0x2
        }, {
            'p': [-0x8, 0x43, -0x150],
            's': [0x1, 0x11, 0x11],
            'i': 0x16,
            'l': 0x1,
            'r': [0x0, -1.57, 0x0]
        }, {
            'p': [-0x8, 0x44, -0x152],
            's': [0x6, 0x1, 0xf],
            'l': 0x1,
            'r': [0x0, 1.57, 0x0],
            'c': 0x4d4d4d,
            't': 0x2
        }, {
            'p': [0x5a, 0x4e, -0x15a],
            's': [0x1, 0x11, 0x11],
            'i': 0x16,
            'l': 0x1,
            'r': [0x0, -1.57, 0x0]
        }, {
            'p': [0x5a, 0x4f, -0x15c],
            's': [0x6, 0x1, 0xf],
            'l': 0x1,
            'r': [0x0, 1.57, 0x0],
            'c': 0x4d4d4d,
            't': 0x2
        }, {
            'p': [-0x37, 0xd, 0xb],
            's': [0x4, 0x22, 0x2],
            'l': 0x1,
            'c': '#575757',
            't': 0x2
        }, {
            'p': [0x35, 0xd, -0x13],
            's': [0x4, 0x22, 0x2],
            'l': 0x1,
            'c': '#575757',
            't': 0x2
        }, {
            'p': [0x35, 0xd, 0xb],
            's': [0x4, 0x22, 0x2],
            'l': 0x1,
            'c': '#575757',
            't': 0x2
        }, {
            'p': [0x35, 0x2d, -0x4],
            's': [0x4, 0x2, 0x1c],
            'l': 0x1,
            'c': '#575757',
            't': 0x2
        }, {
            'p': [-0x1, 0xd, 0xb],
            's': [0x4, 0x22, 0x2],
            'l': 0x1,
            'c': '#575757',
            't': 0x2
        }, {
            'p': [-0x1, 0xd, -0x13],
            's': [0x4, 0x22, 0x2],
            'l': 0x1,
            'c': '#575757',
            't': 0x2
        }, {
            'p': [-0x1, 0x2d, -0x4],
            's': [0x4, 0x2, 0x1c],
            'l': 0x1,
            'c': '#575757',
            't': 0x2
        }, {
            'p': [-0x70, 0x2d, 0x51],
            's': [0x2, 0x42, 0x2],
            'l': 0x1,
            'c': '#2f2f2f',
            't': 0x5
        }, {
            'p': [-0xe1, 0x67, -0x80],
            's': [0x2b, 0x2, 0x48],
            'c': '#393939',
            't': 0xb
        }, {
            'p': [-0xe1, 0x50, -0x80],
            's': [0x2b, 0x8, 0x48],
            'c': '#ffd5b1'
        }, {
            'p': [-0xce, 0x58, -0xa2],
            's': [0x2, 0x13, 0x2],
            'c': '#7d7d7d',
            't': 0x2
        }, {
            'p': [-0xce, 0x58, -0x6d],
            's': [0x2, 0x13, 0x2],
            'c': '#7d7d7d',
            't': 0x2
        }, {
            'p': [-0xf4, 0x58, -0xa2],
            's': [0x2, 0x13, 0x2],
            'c': '#7d7d7d',
            't': 0x2
        }, {
            'p': [-0xf4, 0x58, -0x6d],
            's': [0x2, 0x13, 0x2],
            'c': '#7d7d7d',
            't': 0x2
        }, {
            'p': [-0xf4, 0x58, -0x88],
            's': [0x2, 0x13, 0x2],
            'c': '#7d7d7d',
            't': 0x2
        }, {
            'p': [-0xce, 0x58, -0x88],
            's': [0x2, 0x13, 0x2],
            'c': '#7d7d7d',
            't': 0x2
        }, {
            'p': [-0xc9, 0x7c, -0x68],
            's': [0x1, 0x7, 0x1],
            'l': 0x1,
            'r': [0x0, 0x0, 0.17],
            'c': '#2f2f2f',
            't': 0x5
        }, {
            'p': [-0xc9, 0x69, -0x68],
            's': [0x1, 0x13, 0x1],
            'c': '#2f2f2f',
            't': 0x5
        }, {
            'p': [-0xd5, 0x69, -0x71],
            's': [0x6, 0x8, 0x6],
            'i': 0x2,
            'l': 0x1,
            'r': [0x0, 0.52, 0x0]
        }, {
            'p': [-0xcd, 0x50, -0xa9],
            's': [0x6, 0x8, 0x6],
            'i': 0x2,
            'l': 0x1,
            'r': [0x0, 0.52, 0x0]
        }, {
            'p': [-0xd8, 0x50, -0xaa],
            's': [0xc, 0xc, 0xc],
            'i': 0x1,
            'l': 0x1
        }, {
            'p': [-0xcf, 0x69, -0x91],
            's': [0x9, 0x1, 0xd],
            'l': 0x1,
            'c': '#6383ed',
            't': 0x2
        }, {
            'p': [-0xcb, 0x5f, -0x91],
            's': [0x1, 0xa, 0xd],
            'l': 0x1,
            'c': '#6383ed',
            't': 0x2
        }, {
            'p': [-0xc8, 0x21, -0x102],
            's': [0x2, 0x53, 0x2],
            'l': 0x1,
            'c': '#2f2f2f',
            't': 0x5
        }, {
            'p': [-0xc8, 0x74, -0x106],
            's': [0x2, 0x12, 0x2],
            'l': 0x1,
            'c': '#2f2f2f',
            't': 0x5
        }, {
            'p': [-0xc8, 0x74, -0x103],
            's': [0x2, 0x2, 0x4],
            'l': 0x1,
            'c': '#2f2f2f',
            't': 0x5
        }, {
            'p': [-0xe2, 0x44, -0xf4],
            's': [0xc, 0xc, 0xc],
            'i': 0x1,
            'l': 0x1,
            'r': [0x0, -0.35, 0x0]
        }, {
            'p': [-0xda, 0x44, -0xea],
            's': [0x6, 0x8, 0x6],
            'i': 0x2,
            'l': 0x1,
            'r': [0x0, 0.52, 0x0]
        }, {
            'p': [0x10e, 0x22, -0x4c],
            's': [0x6, 0x30, 0x18],
            'c': '#ffd5b1',
            'bo': 0x1
        }, {
            'p': [0x10f, 0x51, -0x4c],
            's': [0xc, 0x3, 0x1a],
            'l': 0x1,
            'r': [0x0, 0x0, 0.35],
            'c': '#525252',
            't': 0xb
        }, {
            'p': [0x10a, 0x3b, -0x4c],
            's': [0x1, 0x11, 0x11],
            'i': 0x16,
            'l': 0x1,
            'r': [-3.14, 0x0, -3.14]
        }, {
            'p': [0x10c, 0x3c, -0x4c],
            's': [0x6, 0x1, 0xf],
            'l': 0x1,
            'c': 0x4d4d4d,
            't': 0x2
        }, {
            'p': [0x11c, 0x3e, 0x5e],
            's': [0x1, 0x11, 0x11],
            'i': 0x16,
            'l': 0x1,
            'r': [-3.14, 0x0, -3.14]
        }, {
            'p': [0x11e, 0x3f, 0x5e],
            's': [0x6, 0x1, 0xf],
            'l': 0x1,
            'c': 0x4d4d4d,
            't': 0x2
        }, {
            'p': [0x11c, 0x41, 0x3],
            's': [0x1, 0x11, 0x11],
            'i': 0x16,
            'l': 0x1,
            'r': [-3.14, 0x0, -3.14]
        }, {
            'p': [0x11e, 0x42, 0x3],
            's': [0x6, 0x1, 0xf],
            'l': 0x1,
            'c': 0x4d4d4d,
            't': 0x2
        }, {
            'p': [0xbd, 0x4b, 0x61],
            's': [0x1, 0x11, 0x11],
            'i': 0x16,
            'l': 0x1
        }, {
            'p': [0xbb, 0x4c, 0x61],
            's': [0x6, 0x1, 0xf],
            'l': 0x1,
            'r': [-3.14, 0x0, -3.14],
            'c': 0x4d4d4d,
            't': 0x2
        }, {
            'p': [0xbd, 0x4b, 0x33],
            's': [0x1, 0x11, 0x11],
            'i': 0x16,
            'l': 0x1
        }, {
            'p': [0xbb, 0x4c, 0x33],
            's': [0x6, 0x1, 0xf],
            'l': 0x1,
            'r': [-3.14, 0x0, -3.14],
            'c': 0x4d4d4d,
            't': 0x2
        }, {
            'p': [0xdc, 0x41, -0xb5],
            's': [0x1, 0x11, 0x11],
            'i': 0x16,
            'l': 0x1,
            'r': [-3.14, 0x0, -3.14]
        }, {
            'p': [0xde, 0x42, -0xb5],
            's': [0x6, 0x1, 0xf],
            'l': 0x1,
            'c': 0x4d4d4d,
            't': 0x2
        }, {
            'p': [0xc1, 0x22, -0x124],
            's': [0x44, 0x14, 0x71],
            'c': '#9d8672',
            't': 0xb,
            'bo': 0x1
        }, {
            'p': [-0xa1, 0x8d, 0x107],
            's': [0x11, 0x5, 0x3],
            'c': '#313131',
            't': 0xb
        }, {
            'p': [-0x107, 0x8d, 0x107],
            's': [0x11, 0x5, 0x3],
            'c': '#313131',
            't': 0xb
        }, {
            'p': [-0xc3, 0x8d, 0x107],
            's': [0x11, 0x5, 0x3],
            'c': '#313131',
            't': 0xb
        }, {
            'p': [-0xe4, 0x8d, 0x107],
            's': [0x11, 0x5, 0x3],
            'c': '#313131',
            't': 0xb
        }, {
            'p': [-0x130, 0x8d, 0xe1],
            's': [0x5, 0x5, 0x11],
            'c': '#313131',
            't': 0xb
        }, {
            'p': [-0x130, 0x8d, 0x8d],
            's': [0x5, 0x5, 0x11],
            'c': '#313131',
            't': 0xb
        }, {
            'p': [-0x130, 0x8d, 0xb3],
            's': [0x5, 0x5, 0x11],
            'c': '#313131',
            't': 0xb
        }, {
            'p': [-0x13f, 0x22, -0x46],
            's': [0x41, 0x6d, 0x36],
            'i': 0xf,
            'l': 0x1,
            'r': [0x0, 0.87, 0x0]
        }, {
            'p': [-0x14f, 0x2e, 0x4],
            's': [0x41, 0x6d, 0x36],
            'i': 0xf,
            'l': 0x1,
            'r': [-3.14, 1.4, -3.14]
        }, {
            'p': [-0x181, 0x32, -0x2f],
            's': [0x41, 0x6d, 0x36],
            'i': 0xf,
            'l': 0x1,
            'r': [0x0, -1.23, 0x0]
        }, {
            'p': [0xb5, 0x78, -0x128],
            's': [0x2b, 0x2, 0x48],
            'c': '#393939',
            't': 0xb
        }, {
            'p': [0xb5, 0x61, -0x127],
            's': [0x2b, 0x8, 0x48],
            'c': '#ffd5b1'
        }, {
            'p': [0xc8, 0x69, -0x143],
            's': [0x2, 0x13, 0x2],
            'c': '#7d7d7d',
            't': 0x2
        }, {
            'p': [0xa1, 0x69, -0x106],
            's': [0x2, 0x13, 0x2],
            'c': '#7d7d7d',
            't': 0x2
        }, {
            'p': [0xa1, 0x69, -0x121],
            's': [0x2, 0x13, 0x2],
            'c': '#7d7d7d',
            't': 0x2
        }, {
            'p': [0xa1, 0x69, -0x13d],
            's': [0x2, 0x13, 0x2],
            'c': '#7d7d7d',
            't': 0x2
        }, {
            'p': [0xc2, 0x7a, -0x108],
            's': [0x6, 0x8, 0x6],
            'i': 0x2,
            'l': 0x1,
            'r': [0x0, 0.52, 0x0]
        }, {
            'p': [0xc9, 0x61, -0x14a],
            's': [0x6, 0x8, 0x6],
            'i': 0x2,
            'r': [0x0, 0.52, 0x0]
        }, {
            'p': [0xbe, 0x61, -0x14b],
            's': [0xc, 0xc, 0xc],
            'i': 0x1
        }, {
            'p': [0xa3, 0x7a, -0x132],
            's': [0x9, 0x1, 0xd],
            'l': 0x1,
            'c': '#3661f0',
            't': 0x2
        }, {
            'p': [0x9f, 0x70, -0x132],
            's': [0x1, 0xa, 0xd],
            'l': 0x1,
            'c': '#3661f0',
            't': 0x2
        }, {
            'p': [0xac, 0x7a, -0x10a],
            's': [0x9, 0x1, 0xd],
            'l': 0x1,
            'c': '#66b18e',
            't': 0x2
        }, {
            'p': [0xac, 0x6e, -0x104],
            's': [0x9, 0xc, 0x1],
            'l': 0x1,
            'c': '#66b18e',
            't': 0x2
        }, {
            'p': [0xb5, 0x5f, -0x15a],
            's': [0x2c, 0x20, 0x36],
            'c': '#ffd5b1'
        }, {
            'p': [0xb5, 0x7f, -0x15a],
            's': [0x2e, 0x2, 0x38],
            'c': '#525252',
            't': 0xb
        }, {
            'p': [0xc9, 0x69, -0x121],
            's': [0x2, 0x13, 0x2],
            'c': '#7d7d7d',
            't': 0x2
        }, {
            'p': [0xc9, 0x69, -0x106],
            's': [0x2, 0x13, 0x2],
            'c': '#7d7d7d',
            't': 0x2
        }, {
            'p': [0xc8, 0x69, -0x13d],
            's': [0x2, 0x13, 0x2],
            'c': '#7d7d7d',
            't': 0x2
        }, {
            'p': [0xc5, 0x62, -0xfd],
            's': [0xc, 0xc, 0xc],
            'i': 0x1,
            'l': 0x1
        }, {
            'p': [0xa4, 0x69, -0x10a],
            's': [0x6, 0x8, 0x6],
            'i': 0x2,
            'l': 0x1,
            'r': [0x0, -1.05, 0x0]
        }, {
            'p': [0x9e, 0x21, -0x155],
            's': [0x2, 0x50, 0x2],
            'l': 0x1,
            'c': '#2f2f2f',
            't': 0x5
        }, {
            'p': [0x9e, 0x71, -0x14b],
            's': [0x2, 0x13, 0x2],
            'l': 0x1,
            'c': '#2f2f2f',
            't': 0x5
        }, {
            'p': [0x9e, 0x71, -0x151],
            's': [0x2, 0x2, 0xa],
            'l': 0x1,
            'c': '#2f2f2f',
            't': 0x5
        }, {
            'p': [0xb1, 0x7d, -0x15a],
            's': [0x1, 0x13, 0x1],
            'c': '#2f2f2f',
            't': 0x5
        }, {
            'p': [0xb1, 0x90, -0x15a],
            's': [0x1, 0x6, 0x1],
            'l': 0x1,
            'r': [0.35, 0x0, 0x0],
            'c': '#2f2f2f',
            't': 0x5
        }, {
            'p': [0xb1, 0x95, -0x158],
            's': [0x1, 0x3, 0x1],
            'l': 0x1,
            'c': '#2f2f2f',
            't': 0x5
        }, {
            'p': [0xa6, 0x30, -0x50],
            's': [0xf, 0x1, 0x4],
            'l': 0x1,
            'c': 0x4d4d4d,
            't': 0x2
        }, {
            'p': [0xa6, 0x2f, -0x51],
            's': [0x1, 0x11, 0x11],
            'i': 0x16,
            'l': 0x1,
            'r': [0x0, 1.57, 0x0]
        }, {
            'p': [0x46, 0x5c, -0x52],
            's': [0xf, 0x1, 0x4],
            'l': 0x1,
            'c': 0x4d4d4d,
            't': 0x2
        }, {
            'p': [0x46, 0x5b, -0x53],
            's': [0x1, 0x11, 0x11],
            'i': 0x16,
            'l': 0x1,
            'r': [0x0, 1.57, 0x0]
        }, {
            'p': [0x10c, 0x3e, 0x83],
            's': [0xf, 0x1, 0x4],
            'l': 0x1,
            'c': 0x4d4d4d,
            't': 0x2
        }, {
            'p': [0x10c, 0x3d, 0x82],
            's': [0x1, 0x11, 0x11],
            'i': 0x16,
            'l': 0x1,
            'r': [0x0, 1.57, 0x0]
        }, {
            'p': [-0x43, 0x52, 0xe],
            's': [0xf, 0x1, 0x4],
            'l': 0x1,
            'c': 0x4d4d4d,
            't': 0x2
        }, {
            'p': [-0x43, 0x51, 0xd],
            's': [0x1, 0x11, 0x11],
            'i': 0x16,
            'l': 0x1,
            'r': [0x0, 1.57, 0x0]
        }, {
            'p': [-0x50, 0x47, -0x13],
            's': [0x1, 0x11, 0x11],
            'i': 0x16,
            'l': 0x1
        }, {
            'p': [-0x52, 0x48, -0x13],
            's': [0x6, 0x1, 0xf],
            'l': 0x1,
            'r': [-3.14, 0x0, -3.14],
            'c': 0x4d4d4d,
            't': 0x2
        }, {
            'p': [0x87, 0x5a, -0x27],
            's': [0x1, 0x11, 0x11],
            'i': 0x16,
            'l': 0x1
        }, {
            'p': [0x85, 0x5b, -0x27],
            's': [0x6, 0x1, 0xf],
            'l': 0x1,
            'r': [-3.14, 0x0, -3.14],
            'c': 0x4d4d4d,
            't': 0x2
        }, {
            'p': [0x66, 0x41, -0x106],
            's': [0x1, 0x11, 0x11],
            'i': 0x16,
            'l': 0x1
        }, {
            'p': [0x64, 0x42, -0x106],
            's': [0x6, 0x1, 0xf],
            'l': 0x1,
            'r': [-3.14, 0x0, -3.14],
            'c': 0x4d4d4d,
            't': 0x2
        }, {
            'p': [0xe4, 0x46, -0x13c],
            's': [0x1, 0x11, 0x11],
            'i': 0x16,
            'l': 0x1
        }, {
            'p': [0xe2, 0x47, -0x13c],
            's': [0x6, 0x1, 0xf],
            'l': 0x1,
            'r': [-3.14, 0x0, -3.14],
            'c': 0x4d4d4d,
            't': 0x2
        }, {
            'p': [0x97, 0x40, -0x7b],
            's': [0x1, 0x11, 0x11],
            'i': 0x16,
            'l': 0x1,
            'r': [0x0, -1.57, 0x0]
        }, {
            'p': [0x97, 0x41, -0x7d],
            's': [0x6, 0x1, 0xf],
            'l': 0x1,
            'r': [0x0, 1.57, 0x0],
            'c': 0x4d4d4d,
            't': 0x2
        }, {
            'p': [0xe9, 0x41, -0x7b],
            's': [0x1, 0x11, 0x11],
            'i': 0x16,
            'l': 0x1,
            'r': [0x0, -1.57, 0x0]
        }, {
            'p': [0xe9, 0x42, -0x7d],
            's': [0x6, 0x1, 0xf],
            'l': 0x1,
            'r': [0x0, 1.57, 0x0],
            'c': 0x4d4d4d,
            't': 0x2
        }, {
            'p': [0x97, 0x30, -0xf],
            's': [0x1, 0x11, 0x11],
            'i': 0x16,
            'l': 0x1,
            'r': [0x0, -1.57, 0x0]
        }, {
            'p': [0x97, 0x31, -0x11],
            's': [0x6, 0x1, 0xf],
            'l': 0x1,
            'r': [0x0, 1.57, 0x0],
            'c': 0x4d4d4d,
            't': 0x2
        }, {
            'p': [0xd3, 0x43, -0xea],
            's': [0x1, 0x11, 0x11],
            'i': 0x16,
            'l': 0x1,
            'r': [0x0, -1.57, 0x0]
        }, {
            'p': [0xd2, 0x44, -0xec],
            's': [0x6, 0x1, 0x10],
            'l': 0x1,
            'r': [0x0, 1.57, 0x0],
            'c': 0x4d4d4d,
            't': 0x2
        }, {
            'p': [-0xc8, 0x36, -0xcc],
            's': [0x1, 0x11, 0x11],
            'i': 0x16,
            'l': 0x1
        }, {
            'p': [-0xca, 0x37, -0xcc],
            's': [0x6, 0x1, 0xf],
            'l': 0x1,
            'r': [-3.14, 0x0, -3.14],
            'c': 0x4d4d4d,
            't': 0x2
        }, {
            'p': [0x44, 0x5b, -0x15],
            's': [0x1, 0x11, 0x11],
            'i': 0x16,
            'l': 0x1,
            'r': [0x0, -1.57, 0x0]
        }, {
            'p': [0x44, 0x5c, -0x17],
            's': [0x6, 0x1, 0xf],
            'l': 0x1,
            'r': [0x0, 1.57, 0x0],
            'c': 0x4d4d4d,
            't': 0x2
        }, {
            'p': [0x35, 0x5b, -0x36],
            's': [0x1, 0x11, 0x11],
            'i': 0x16,
            'l': 0x1,
            'r': [-3.14, 0x0, -3.14]
        }, {
            'p': [0x37, 0x5c, -0x36],
            's': [0x6, 0x1, 0xf],
            'l': 0x1,
            'c': 0x4d4d4d,
            't': 0x2
        }, {
            'p': [0x3f, 0x40, -0x81],
            's': [0x1, 0x11, 0x11],
            'i': 0x16,
            'l': 0x1,
            'r': [0x0, -1.57, 0x0]
        }, {
            'p': [0x3f, 0x41, -0x83],
            's': [0x6, 0x1, 0xf],
            'l': 0x1,
            'r': [0x0, 1.57, 0x0],
            'c': 0x4d4d4d,
            't': 0x2
        }, {
            'p': [0x10, 0x40, -0x81],
            's': [0x1, 0x11, 0x11],
            'i': 0x16,
            'l': 0x1,
            'r': [0x0, -1.57, 0x0]
        }, {
            'p': [0x10, 0x41, -0x83],
            's': [0x6, 0x1, 0xf],
            'l': 0x1,
            'r': [0x0, 1.57, 0x0],
            'c': 0x4d4d4d,
            't': 0x2
        }, {
            'p': [-0x4f, 0x40, -0x48],
            's': [0x1, 0x11, 0x11],
            'i': 0x16,
            'l': 0x1,
            'r': [0x0, -1.57, 0x0]
        }, {
            'p': [-0x4f, 0x41, -0x4a],
            's': [0x6, 0x1, 0xf],
            'l': 0x1,
            'r': [0x0, 1.57, 0x0],
            'c': 0x4d4d4d,
            't': 0x2
        }, {
            'p': [-0x1c, 0x21, -0x82],
            's': [0x2, 0x3d, 0x2],
            'l': 0x1,
            'c': '#2f2f2f',
            't': 0x5
        }, {
            'p': [0x11c, 0x21, 0x17],
            's': [0x2, 0x2b, 0x2],
            'l': 0x1,
            'c': '#2f2f2f',
            't': 0x5
        }, {
            'p': [0x11c, 0x4e, 0x11],
            's': [0x2, 0xf, 0x2],
            'l': 0x1,
            'c': '#2f2f2f',
            't': 0x5
        }, {
            'p': [0x11c, 0x4c, 0x14],
            's': [0x2, 0x2, 0x8],
            'l': 0x1,
            'c': '#2f2f2f',
            't': 0x5
        }, {
            'p': [0xdb, 0x21, -0x51],
            's': [0x2, 0x2f, 0x2],
            'l': 0x1,
            'c': '#2f2f2f',
            't': 0x5
        }, {
            'p': [0xdc, 0x20, -0x84],
            's': [0x2, 0x28, 0x2],
            'l': 0x1,
            'c': '#2f2f2f',
            't': 0x5
        }, {
            'p': [0xdc, 0x48, -0x87],
            's': [0x2, 0x2, 0x8],
            'l': 0x1,
            'c': '#2f2f2f',
            't': 0x5
        }, {
            'p': [0xdc, 0x4a, -0x8a],
            's': [0x2, 0x10, 0x2],
            'l': 0x1,
            'c': '#2f2f2f',
            't': 0x5
        }, {
            'p': [-0x8c, 0x22, -0xcb],
            's': [0x1, 0x11, 0x2],
            'l': 0x1,
            'c': '#a5a5a5',
            't': 0x2
        }, {
            'p': [-0x7e, 0x22, -0xcb],
            's': [0x1, 0x11, 0x2],
            'l': 0x1,
            'c': '#a5a5a5',
            't': 0x2
        }, {
            'p': [-0x85, 0x33, -0xcb],
            's': [0xf, 0x1, 0x2],
            'l': 0x1,
            'c': '#a5a5a5',
            't': 0x2
        }, {
            'p': [-0x85, 0x22, -0xca],
            's': [0xd, 0x11, 0x3],
            'l': 0x1,
            'c': 0x7d736b,
            't': 0x2
        }, {
            'p': [0x161, 0x15, -0x4d],
            's': [0x41, 0x6d, 0x36],
            'i': 0xf,
            'l': 0x1,
            'r': [-3.14, -0.17, -3.14]
        }, {
            'p': [0x168, 0x1d, -0x7f],
            's': [0x41, 0x6d, 0x36],
            'i': 0xf,
            'l': 0x1,
            'r': [-0.01, -1.4, -0.01]
        }, {
            'p': [0x10a, 0xb, 0xe7],
            's': [0x41, 0x6d, 0x36],
            'i': 0xf,
            'l': 0x1,
            'r': [-3.14, -0.17, -3.14]
        }, {
            'p': [0xe2, 0x0, -0x1b2],
            's': [0x41, 0x6d, 0x36],
            'i': 0xf,
            'l': 0x1,
            'r': [-3.14, -0.17, -3.14]
        }, {
            'p': [-0x9c, 0x2b, -0x93],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [-3.14, 1.13, -3.14]
        }, {
            'p': [-0x9b, 0x2b, -0xa4],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [-3.14, -0.79, -3.14]
        }, {
            'p': [-0xc6, 0x2b, -0x71],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [-3.14, -0.79, -3.14]
        }, {
            'p': [-0xa0, 0x2b, -0x7c],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [-3.14, -0.79, -3.14]
        }, {
            'p': [-0xc4, 0x2b, -0x93],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [-3.14, -0.79, -3.14]
        }, {
            'p': [0x69, 0x20, -0xcb],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [0x0, 0.97, 0x0]
        }, {
            'p': [0x84, 0x20, -0xcb],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [-3.14, 0.08, -3.14]
        }, {
            'p': [0xac, 0x20, -0xe7],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [-3.14, -0.97, -3.14]
        }, {
            'p': [0x9a, 0x20, -0xc8],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [0x0, 0.8, 0x0]
        }, {
            'p': [0xbf, 0x20, -0xe1],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [0x0, 0.8, 0x0]
        }, {
            'p': [0xc7, 0x20, -0xe7],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [3.14, -0.45, 3.14]
        }, {
            'p': [0xd8, 0x20, -0xbf],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [3.14, -0.45, 3.14]
        }, {
            'p': [0xf7, 0x20, -0xc9],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [3.14, -0.97, 3.14]
        }, {
            'p': [0x111, 0x20, -0xce],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [3.14, -0.97, 3.14]
        }, {
            'p': [0x118, 0x20, -0xdd],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [3.14, -0.97, 3.14]
        }, {
            'p': [0x108, 0x20, -0xed],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [0x0, -0.95, 0x0]
        }, {
            'p': [0xe6, 0x20, -0xea],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [-3.14, 1.47, -3.14]
        }, {
            'p': [0xef, 0x20, -0x106],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [-3.14, 1.47, -3.14]
        }, {
            'p': [0x113, 0x20, -0x10f],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [-3.14, -0.97, -3.14]
        }, {
            'p': [0xf0, 0x20, -0x12d],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [-3.14, -0.97, -3.14]
        }, {
            'p': [0x113, 0x20, -0x140],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [-3.14, -0.97, -3.14]
        }, {
            'p': [0xfd, 0x20, -0x14b],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [0x0, 0.62, 0x0]
        }, {
            'p': [0xac, 0x20, -0xa1],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [3.14, -0.45, 3.14]
        }, {
            'p': [0xd8, 0x20, -0x9d],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [0x0, -0.77, 0x0]
        }, {
            'p': [0xab, 0x20, -0x89],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [-3.14, 0.59, -3.14]
        }, {
            'p': [0xbd, 0x20, -0x5b],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [-3.14, 0.59, -3.14]
        }, {
            'p': [0xb6, 0x20, -0x54],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [-3.14, -0.98, -3.14]
        }, {
            'p': [0x9e, 0x20, -0x78],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [-3.14, -0.98, -3.14]
        }, {
            'p': [0xe1, 0x20, -0x54],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [-3.14, 0.59, -3.14]
        }, {
            'p': [0xd8, 0x20, -0x80],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [-3.12, -1.5, -3.12]
        }, {
            'p': [0xfa, 0x20, -0x77],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [0x0, -0.59, 0x0]
        }, {
            'p': [0x101, 0x20, -0x70],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [0x0, -1.11, 0x0]
        }, {
            'p': [0x10d, 0x20, -0x6d],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [0x0, -0.24, 0x0]
        }, {
            'p': [0x10a, 0x20, -0x5a],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [0x0, -0.41, 0x0]
        }, {
            'p': [0xe6, 0x20, -0x2b],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [-3.14, 0.41, -3.14]
        }, {
            'p': [0x10e, 0x20, -0x3d],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [-3.14, 0.41, -3.14]
        }, {
            'p': [0x118, 0x20, -0x31],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [-3.14, 0.41, -3.14]
        }, {
            'p': [0x118, 0x20, -0x6],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [0x0, -1.11, 0x0]
        }, {
            'p': [0xe7, 0x20, -0x17],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [0x0, -0.06, 0x0]
        }, {
            'p': [0xda, 0x20, -0xc],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [0x0, 0.81, 0x0]
        }, {
            'p': [0x126, 0x20, 0x1f],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [0x0, -0.76, 0x0]
        }, {
            'p': [0x126, 0x20, 0x48],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [0x0, -0.76, 0x0]
        }, {
            'p': [0xfb, 0x20, 0x4d],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [0x0, -1.28, 0x0]
        }, {
            'p': [0xc7, 0x20, 0x2b],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [-3.14, 0.58, -3.14]
        }, {
            'p': [0xbf, 0x20, 0x19],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [-3.14, 0.58, -3.14]
        }, {
            'p': [0xc0, 0x20, 0x4a],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [-3.14, 0.58, -3.14]
        }, {
            'p': [0xc0, 0x20, 0x55],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [-3.14, 0.58, -3.14]
        }, {
            'p': [0xc2, 0x20, 0x71],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [-3.14, 0.58, -3.14]
        }, {
            'p': [0xd2, 0x20, 0x7e],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [-3.14, -0.82, -3.14]
        }, {
            'p': [0xc5, 0x20, 0x7e],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [-3.14, -0.82, -3.14]
        }, {
            'p': [0xe4, 0x20, 0x78],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [-3.14, -1.34, -3.14]
        }, {
            'p': [0xf2, 0x20, 0x7f],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [0x0, -0.75, 0x0]
        }, {
            'p': [0xd9, 0x20, 0x73],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [-3.14, -1.34, -3.14]
        }, {
            'p': [0x117, 0x20, 0x62],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [-3.14, -1.34, -3.14]
        }, {
            'p': [0x11a, 0x20, 0x56],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [0x0, -0.75, 0x0]
        }, {
            'p': [0x89, 0x20, -0xc],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [-3.14, 0.58, -3.14]
        }, {
            'p': [0x90, 0x20, 0x15],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [-3.14, 0.58, -3.14]
        }, {
            'p': [0x60, 0x20, 0x1a],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [-3.14, -0.99, -3.14]
        }, {
            'p': [0x6a, 0x20, -0x11],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [-3.14, -0.99, -3.14]
        }, {
            'p': [0x39, 0x2f, 0x7c],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [0x0, -0.69, 0x0]
        }, {
            'p': [0x67, 0x2f, 0x7d],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [0x0, 0.88, 0x0]
        }, {
            'p': [0x7b, 0x2f, 0x74],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [0x0, -0.34, 0x0]
        }, {
            'p': [0x5e, 0x2f, 0x57],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [0x0, 0.53, 0x0]
        }, {
            'p': [-0x30, 0x44, 0x18],
            's': [0x2, 0x2, 0x1e],
            'l': 0x1,
            'c': 0x919191,
            't': 0x2
        }, {
            'p': [-0x2d, 0x37, -0x19],
            's': [0x2, 0x3, 0x2],
            'l': 0x1,
            'c': '#571f1f',
            't': 0x5
        }, {
            'p': [0x2e, 0x44, -0xc],
            's': [0x2, 0x2, 0x1e],
            'l': 0x1,
            'c': 0x919191,
            't': 0x2
        }, {
            'p': [0x17, 0x37, 0x46],
            's': [0x2, 0x2, 0x2],
            'l': 0x1,
            'c': '#571f1f',
            't': 0x5
        }, {
            'p': [0x15, 0x37, 0x46],
            's': [0x2, 0x1, 0x2],
            'l': 0x1,
            'c': '#571f1f',
            't': 0x5
        }, {
            'p': [0x16, 0x36, 0x44],
            's': [0x2, 0x3, 0x2],
            'l': 0x1,
            'c': '#571f1f',
            't': 0x5
        }, {
            'p': [-0xe, 0x5b, -0x84],
            's': [0x2, 0x17, 0x2],
            'c': '#7d7d7d',
            't': 0x2
        }, {
            'p': [0x1c, 0x5b, -0x84],
            's': [0x2, 0x17, 0x2],
            'c': '#7d7d7d',
            't': 0x2
        }, {
            'p': [0x7, 0x5c, -0x82],
            's': [0x2d, 0x14, 0x1],
            'c': '#4d4d4d',
            't': 0x2
        }, {
            'p': [-0x2a, 0x30, -0x7c],
            's': [0xc, 0xc, 0xc],
            'i': 0x1
        }, {
            'p': [0x2f, 0x5b, -0x87],
            's': [0x6, 0x8, 0x6],
            'i': 0x2,
            'l': 0x1,
            'r': [0x0, 0.17, 0x0]
        }, {
            'p': [-0x11, 0x5b, -0x87],
            's': [0x6, 0x8, 0x6],
            'i': 0x2,
            'l': 0x1,
            'r': [0x0, 0.69, 0x0]
        }, {
            'p': [0x7, 0x5c, -0x82],
            's': [0x2e, 0x1, 0x2],
            'c': '#4d4d4d',
            't': 0x2
        }, {
            'p': [0x26, 0x67, -0x8f],
            's': [0x6, 0x8, 0x6],
            'i': 0x2,
            'l': 0x1,
            'r': [0x0, 0.17, 0x0]
        }, {
            'p': [-0x10, 0x62, -0x88],
            's': [0x6, 0x8, 0x6],
            'i': 0x2,
            'l': 0x1,
            'r': [0x0, 0.69, 0x0]
        }, {
            'p': [-0x4c, 0x6a, -0x96],
            's': [0x22, 0x14, 0x28],
            'c': '#ffd5b1'
        }, {
            'p': [-0x4c, 0x7e, -0x96],
            's': [0x24, 0x3, 0x2a],
            'c': '#393939',
            't': 0xb
        }, {
            'p': [-0x3f, 0x7a, -0x87],
            's': [0x1, 0x13, 0x1],
            'c': '#2f2f2f',
            't': 0x5
        }, {
            'p': [-0x3f, 0x8d, -0x87],
            's': [0x1, 0x6, 0x1],
            'l': 0x1,
            'r': [0.35, 0x0, 0x0],
            'c': '#2f2f2f',
            't': 0x5
        }, {
            'p': [-0x3f, 0x92, -0x85],
            's': [0x1, 0x3, 0x1],
            'l': 0x1,
            'c': '#2f2f2f',
            't': 0x5
        }, {
            'p': [-0x46, 0x6b, 0x19],
            's': [0x1, 0x13, 0x1],
            'c': '#2f2f2f',
            't': 0x5
        }, {
            'p': [-0x46, 0x7e, 0x19],
            's': [0x1, 0x6, 0x1],
            'r': [0.35, 0x0, 0x0],
            'c': '#2f2f2f',
            't': 0x5
        }, {
            'p': [-0x46, 0x83, 0x1b],
            's': [0x1, 0x3, 0x1],
            'c': '#2f2f2f',
            't': 0x5
        }, {
            'p': [-0x1e, 0x5e, -0x82],
            's': [0x6, 0x2, 0x2],
            'l': 0x1,
            'c': '#2f2f2f',
            't': 0x5
        }, {
            'p': [-0x20, 0x60, -0x82],
            's': [0x2, 0x6, 0x2],
            'l': 0x1,
            'c': '#2f2f2f',
            't': 0x5
        }, {
            'p': [-0xfa, 0x62, -0x12],
            's': [0x1f, 0x2, 0x48],
            'c': '#393939',
            't': 0xb
        }, {
            'p': [-0xec, 0x58, -0x25],
            's': [0x2, 0xd, 0x2],
            'c': '#7d7d7d',
            't': 0x2
        }, {
            'p': [-0xec, 0x58, 0x10],
            's': [0x2, 0xd, 0x2],
            'c': '#7d7d7d',
            't': 0x2
        }, {
            'p': [-0xec, 0x58, -0xa],
            's': [0x2, 0xd, 0x2],
            'c': '#7d7d7d',
            't': 0x2
        }, {
            'p': [-0x108, 0x58, -0xa],
            's': [0x2, 0xd, 0x2],
            'c': '#7d7d7d',
            't': 0x2
        }, {
            'p': [-0x108, 0x58, 0x10],
            's': [0x2, 0xd, 0x2],
            'c': '#7d7d7d',
            't': 0x2
        }, {
            'p': [-0x107, 0x58, -0x25],
            's': [0x2, 0xd, 0x2],
            'c': '#7d7d7d',
            't': 0x2
        }, {
            'p': [-0xf4, 0x64, -0x1e],
            's': [0xc, 0xc, 0xc],
            'i': 0x1,
            'l': 0x1,
            'r': [0x0, -0.35, 0x0]
        }, {
            'p': [-0xeb, 0x6f, -0x2b],
            's': [0x6, 0x8, 0x6],
            'i': 0x2,
            'l': 0x1,
            'r': [0x0, 0.52, 0x0]
        }, {
            'p': [-0xef, 0x58, 0xb],
            's': [0x6, 0x8, 0x6],
            'i': 0x2,
            'l': 0x1,
            'r': [0x0, 0.52, 0x0]
        }, {
            'p': [-0xa6, 0x79, -0x15f],
            's': [0x3a, 0x1, 0x22],
            'c': '#393939',
            't': 0xb
        }, {
            'p': [-0xa6, 0x65, -0x15f],
            's': [0x3a, 0x5, 0x22],
            'c': '#ffd5b1'
        }, {
            'p': [-0xc0, 0x65, -0x16d],
            's': [0x2, 0x16, 0x2],
            'c': '#7d7d7d',
            't': 0x2
        }, {
            'p': [-0x8c, 0x65, -0x16d],
            's': [0x2, 0x16, 0x2],
            'c': '#7d7d7d',
            't': 0x2
        }, {
            'p': [-0xa7, 0x65, -0x16d],
            's': [0x2, 0x16, 0x2],
            'c': '#7d7d7d',
            't': 0x2
        }, {
            'p': [-0xa7, 0x65, -0x150],
            's': [0x2, 0x16, 0x2],
            'c': '#7d7d7d',
            't': 0x2
        }, {
            'p': [-0xc0, 0x65, -0x151],
            's': [0x2, 0x16, 0x2],
            'c': '#7d7d7d',
            't': 0x2
        }, {
            'p': [-0x8c, 0x65, -0x151],
            's': [0x2, 0x16, 0x2],
            'c': '#7d7d7d',
            't': 0x2
        }, {
            'p': [-0x88, 0x73, -0x158],
            's': [0x1, 0x8, 0x7],
            'l': 0x1,
            'c': '#e63f3f',
            't': 0x2
        }, {
            'p': [-0xb3, 0x6a, -0x153],
            's': [0x6, 0x8, 0x6],
            'i': 0x2,
            'l': 0x1,
            'r': [0x0, -0.17, 0x0]
        }, {
            'p': [-0x90, 0x7a, -0x166],
            's': [0x6, 0x8, 0x6],
            'i': 0x2,
            'l': 0x1,
            'r': [0x0, -0.17, 0x0]
        }, {
            'p': [-0x8a, 0x7a, -0x158],
            's': [0x3, 0x1, 0x7],
            'l': 0x1,
            'c': '#e63f3f',
            't': 0x2
        }, {
            'p': [-0x5f, 0x79, -0x17f],
            's': [0xc, 0xc, 0xc],
            'i': 0x1,
            'l': 0x1
        }, {
            'p': [-0x6e, 0x65, -0x161],
            's': [0xc, 0xc, 0xc],
            'i': 0x1,
            'l': 0x1
        }, {
            'p': [-0xde, 0x65, -0x16a],
            's': [0x36, 0x2c, 0x38],
            'c': '#ffd5b1'
        }, {
            'p': [-0xde, 0x8f, -0x16a],
            's': [0x3a, 0x3, 0x3e],
            'c': '#393939',
            't': 0xb
        }, {
            'p': [-0x2b, 0x37, -0x19],
            's': [0x2, 0x2, 0x2],
            'l': 0x1,
            'c': '#571f1f',
            't': 0x5
        }, {
            'p': [-0x2d, 0x37, -0x1b],
            's': [0x2, 0x2, 0x2],
            'l': 0x1,
            'c': '#571f1f',
            't': 0x5
        }, {
            'p': [-0x2b, 0x37, -0x1b],
            's': [0x2, 0x1, 0x2],
            'l': 0x1,
            'c': '#571f1f',
            't': 0x5
        }, {
            'p': [0xde, 0x55, 0x84],
            's': [0x2, 0x17, 0x2],
            'c': '#7d7d7d',
            't': 0x2
        }, {
            'p': [0x108, 0x55, 0x84],
            's': [0x2, 0x17, 0x2],
            'c': '#7d7d7d',
            't': 0x2
        }, {
            'p': [0xf3, 0x57, 0x83],
            's': [0x2d, 0x14, 0x1],
            'c': '#4d4d4d',
            't': 0x2
        }, {
            'p': [0xd9, 0x55, 0x86],
            's': [0x6, 0x8, 0x6],
            'i': 0x2,
            'l': 0x1,
            'r': [0x0, 0.69, 0x0]
        }, {
            'p': [0xf3, 0x57, 0x82],
            's': [0x2e, 0x1, 0x2],
            'c': '#4d4d4d',
            't': 0x2
        }, {
            'p': [0xd5, 0x5d, 0x89],
            's': [0x6, 0x8, 0x6],
            'i': 0x2,
            'l': 0x1,
            'r': [0x0, 1.21, 0x0]
        }, {
            'p': [0x145, 0x39, -0x4],
            's': [0x12, 0x2e, 0x26],
            'c': '#ffd5b1'
        }, {
            'p': [0x145, 0x67, -0x4],
            's': [0x15, 0x3, 0x28],
            'c': '#525252',
            't': 0xb
        }, {
            'p': [0x144, 0x5f, 0xa],
            's': [0x1, 0x13, 0x1],
            'c': '#2f2f2f',
            't': 0x5
        }, {
            'p': [0x144, 0x72, 0xa],
            's': [0x1, 0x6, 0x1],
            'l': 0x1,
            'r': [0.35, 0x0, 0x0],
            'c': '#2f2f2f',
            't': 0x5
        }, {
            'p': [0x144, 0x77, 0xc],
            's': [0x1, 0x3, 0x1],
            'l': 0x1,
            'c': '#2f2f2f',
            't': 0x5
        }, {
            'p': [-0x53, 0x79, -0x17c],
            's': [0xc, 0xc, 0xc],
            'i': 0x1,
            'l': 0x1
        }, {
            'p': [-0xcc, 0x89, -0x131],
            's': [0x6, 0x8, 0x6],
            'i': 0x2,
            'l': 0x1,
            'r': [0x0, 0.88, 0x0]
        }, {
            'p': [-0xcb, 0x81, -0x130],
            's': [0x6, 0x8, 0x6],
            'i': 0x2,
            'l': 0x1,
            'r': [0x0, -0.17, 0x0]
        }, {
            'p': [-0xcc, 0x7f, -0x126],
            's': [0x2, 0x19, 0x2],
            'c': '#7d7d7d',
            't': 0x2
        }, {
            'p': [-0xcb, 0x83, -0x116],
            's': [0x1, 0x14, 0x2c],
            'c': '#7d7d7d',
            't': 0x2
        }, {
            'p': [-0xcb, 0x83, -0x116],
            's': [0x3, 0x1, 0x2d],
            'c': '#7d7d7d',
            't': 0x2
        }, {
            'p': [-0xcc, 0x7f, -0x106],
            's': [0x2, 0x19, 0x2],
            'c': '#7d7d7d',
            't': 0x2
        }, {
            'p': [-0xca, 0x81, -0x137],
            's': [0x6, 0x8, 0x6],
            'i': 0x2,
            'l': 0x1,
            'r': [0x0, 0.18, 0x0]
        }, {
            'p': [-0xd6, 0x81, -0x103],
            's': [0xc, 0xc, 0xc],
            'i': 0x1,
            'l': 0x1,
            'r': [0x0, -0.35, 0x0]
        }, {
            'p': [-0xe3, 0x81, -0xff],
            's': [0x6, 0x8, 0x6],
            'i': 0x2,
            'l': 0x1,
            'r': [0x0, -0.17, 0x0]
        }, {
            'p': [-0xc9, 0x88, -0x153],
            's': [0x1, 0x13, 0x1],
            'c': '#2f2f2f',
            't': 0x5
        }, {
            'p': [-0xc9, 0x9b, -0x153],
            's': [0x1, 0x6, 0x1],
            'l': 0x1,
            'r': [0.35, 0x0, 0x0],
            'c': '#2f2f2f',
            't': 0x5
        }, {
            'p': [-0xc9, 0xa0, -0x151],
            's': [0x1, 0x3, 0x1],
            'l': 0x1,
            'c': '#2f2f2f',
            't': 0x5
        }, {
            'p': [0xd2, 0x55, 0x8a],
            's': [0x6, 0x8, 0x6],
            'i': 0x2,
            'l': 0x1,
            'r': [0x0, 0.34, 0x0]
        }, {
            'p': [0x27, 0xc, -0x10],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [0x0, 1.16, 0x0]
        }, {
            'p': [-0x1b, 0xc, 0x7],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [-3.14, 0.76, -3.14]
        }, {
            'p': [-0x3d, 0xc, 0xa],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [-3.14, -0.81, -3.14]
        }, {
            'p': [-0x3b, 0x16, -0x3f],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [0x0, -0.24, 0x0]
        }, {
            'p': [-0x4d, 0x16, -0x46],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [0x0, -0.41, 0x0]
        }, {
            'p': [-0x80, 0x20, -0x2a],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [0x0, 0.53, 0x0]
        }, {
            'p': [-0x57, 0x20, 0x2f],
            's': [0x3f, 0x2, 0x43],
            'l': 0x1,
            'c': '#393939',
            't': 0xb
        }, {
            'p': [-0x76, 0x18, 0x99],
            's': [0x5, 0x7f, 0x6],
            'v': 0x1,
            'c': '#9d8672',
            't': 0xb
        }, {
            'p': [-0xe, 0x24, -0x101],
            's': [0x5, 0x7b, 0x6],
            'v': 0x1,
            'c': '#9d8672',
            't': 0xb
        }, {
            'p': [0x1b6, 0x20, 0x42],
            's': [0x41, 0x6d, 0x36],
            'i': 0xf,
            'l': 0x1,
            'r': [-3.14, -0.17, -3.14]
        }, {
            'p': [0x18d, 0x20, 0xf],
            's': [0x41, 0x6d, 0x36],
            'i': 0xf,
            'l': 0x1,
            'r': [0x0, -0.53, 0x0]
        }, {
            'p': [0x16, 0x2f, 0x3f],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [0x0, -0.69, 0x0]
        }, {
            'p': [0x22, 0x2f, 0x22],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [0x0, -0.69, 0x0]
        }, {
            'p': [-0x20, 0x2f, 0x44],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [0x0, -0.69, 0x0]
        }, {
            'p': [-0x2d, 0x2f, 0x33],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [-3.14, 0.86, 3.14]
        }, {
            'p': [-0x1d, 0x2f, 0x2a],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [-3.06, 1.56, 3.06]
        }, {
            'p': [-0x2a, 0x2f, -0xd],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [-3.06, 1.56, 3.06]
        }, {
            'p': [-0x2a, 0x2f, -0x22],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [-3.14, 0.86, 3.14]
        }, {
            'p': [0x9, 0x2f, -0x1f],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [-3.14, 0.86, 3.14]
        }, {
            'p': [-0x2c, 0x2f, -0x5b],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [-3.14, 0.86, 3.14]
        }, {
            'p': [-0x20, 0x2f, -0x7e],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [-3.14, 0.86, 3.14]
        }, {
            'p': [0x2a, 0x2f, -0x38],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [-3.14, 0.86, 3.14]
        }, {
            'p': [0x2a, 0x2f, -0x58],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [-3.14, 0.86, 3.14]
        }, {
            'p': [0x20, 0x2f, -0x1d],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [3.14, -1.23, 3.14]
        }, {
            'p': [0x8a, 0x20, -0x77],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [-3.14, -0.98, -3.14]
        }, {
            'p': [0x8a, 0x20, -0x55],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [-3.14, -0.98, -3.14]
        }, {
            'p': [-0xa, 0x2f, -0x29],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [-3.14, -0.19, 3.14]
        }, {
            'p': [0xa, 0x2f, -0x11],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [0x0, 1.06, 0x0]
        }, {
            'p': [0x105, 0x20, 0x50],
            's': [0x9, 0xe, 0x4],
            'c': '#9d8672',
            't': 0xb
        }, {
            'p': [0x10f, 0x20, 0x50],
            's': [0xc, 0x3, 0x4],
            'c': '#9d8672',
            't': 0xb
        }, {
            'p': [0x10f, 0x2c, 0x50],
            's': [0xb, 0x3, 0x4],
            'c': '#7a6a5d',
            't': 0xb
        }, {
            'p': [0x113, 0x23, 0x4e],
            's': [0x3, 0xa, 0x1],
            'pe': 0x1,
            'c': '#b4b4b4',
            't': 0x2
        }, {
            'p': [0x110, 0x22, 0x4e],
            's': [0x3, 0xc, 0x1],
            'pe': 0x1,
            'c': '#898989',
            't': 0x2
        }, {
            'p': [0x10d, 0x23, 0x4e],
            's': [0x3, 0xa, 0x1],
            'pe': 0x1,
            'c': '#cacaca',
            't': 0x2
        }, {
            'p': [0x10a, 0x23, 0x4e],
            's': [0x3, 0xb, 0x1],
            'pe': 0x1,
            'c': '#898989',
            't': 0x2
        }, {
            'p': [0xcb, 0x2f, 0x50],
            's': [0xb, 0x1, 0x4],
            'c': '#9d8672',
            't': 0xb
        }, {
            'p': [-0x71, 0x2e, -0x13f],
            's': [0x5, 0x1, 0xb],
            'c': '#9d8672',
            't': 0xb
        }, {
            'p': [-0x71, 0x2e, -0x123],
            's': [0x5, 0x2, 0xb],
            'c': '#9d8672',
            't': 0xb
        }, {
            'p': [-0x68, 0x21, -0x149],
            's': [0x7, 0x2, 0x4],
            'l': 0x1,
            'r': [0x0, 0.36, 0x0],
            'c': '#9d8672'
        }, {
            'p': [0x32, 0x4d, -0x24],
            's': [0x8, 0x1, 0x65],
            'i': 0x9,
            'v': 0x1,
            'b': -0.1
        }, {
            'p': [-0x34, 0x4d, -0x19],
            's': [0x8, 0x1, 0xd4],
            'i': 0x9,
            'v': 0x1,
            'b': -0.1,
            'd': 0x2
        }, {
            'p': [-0x29, 0x4d, 0x4d],
            's': [0x22, 0x1, 0x8],
            'i': 0x9,
            'v': 0x1,
            'b': -0.1,
            'd': 0x1
        }, {
            'p': [0x1a, 0x4d, 0x4d],
            's': [0x18, 0x1, 0x8],
            'i': 0x9,
            'v': 0x1,
            'b': -0.1,
            'd': 0x1
        }, {
            'p': [0xb0, 0x43, -0xea],
            's': [0x1, 0x11, 0x11],
            'i': 0x16,
            'l': 0x1,
            'r': [0x0, -1.57, 0x0]
        }, {
            'p': [0xb0, 0x44, -0xec],
            's': [0x6, 0x1, 0x10],
            'l': 0x1,
            'r': [0x0, 1.57, 0x0],
            'c': 0x4d4d4d,
            't': 0x2
        }, {
            'p': [-0x2e, 0x5a, -0xc3],
            's': [0x1, 0x13, 0x1],
            'c': '#2f2f2f',
            't': 0x5
        }, {
            'p': [-0x2e, 0x6d, -0xc3],
            's': [0x1, 0x5, 0x1],
            'l': 0x1,
            'r': [-0.44, 0x0, 0x0],
            'c': '#2f2f2f',
            't': 0x5
        }, {
            'p': [-0x34, 0xc, -0x12],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [-3.14, 0.76, -3.14]
        }, {
            'p': [0x2, 0xc, -0xf],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [0x0, 1.16, 0x0]
        }, {
            'p': [-0xd9, 0x20, -0x19],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [0x0, 0.53, 0x0]
        }, {
            'p': [-0x95, 0x20, -0xfc],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [0x0, 0.62, 0x0],
            'c': '#d2b559'
        }, {
            'p': [-0x6e, 0x32, 0x92],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [0x0, -0.87, 0x0]
        }, {
            'p': [-0x7c, 0x32, 0xa1],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [0x0, -0.26, 0x0]
        }, {
            'p': [0xc3, 0x20, -0xc],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [0x0, -1.28, 0x0]
        }, {
            'p': [-0xe1, 0x2f, 0x84],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [-3.14, 1.04, 3.14]
        }, {
            'p': [-0x87, 0x20, -0x46],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [0x0, 0.97, 0x0]
        }, {
            'p': [0xa4, 0xc0, 0x8e],
            's': [0x4, 0x4, 0x28],
            'c': '#7d7d7d',
            't': 0x2
        }, {
            'p': [0xa4, 0xc0, 0x8e],
            's': [0x29, 0x4, 0x4],
            'c': '#7d7d7d',
            't': 0x2
        }, {
            'p': [0xf0, 0x21, -0xca],
            's': [0x6, 0x2, 0x4],
            'l': 0x1,
            'r': [0x0, -1.39, 0x0],
            'c': '#9d8672'
        }, {
            'p': [0x10b, 0x21, -0x65],
            's': [0x6, 0x2, 0x4],
            'l': 0x1,
            'r': [0x0, -1.39, 0x0],
            'c': '#9d8672'
        }, {
            'p': [0xd8, 0x20, -0x7],
            's': [0x6, 0x2, 0x4],
            'l': 0x1,
            'r': [0x0, -1.39, 0x0],
            'c': '#9d8672'
        }, {
            'p': [0x11e, 0x20, 0x1f],
            's': [0x6, 0x2, 0x4],
            'l': 0x1,
            'r': [0x0, -1.39, 0x0],
            'c': '#9d8672'
        }, {
            'p': [0x10d, 0x20, -0x35],
            's': [0x6, 0x2, 0x4],
            'l': 0x1,
            'r': [0x0, -1.39, 0x0],
            'c': '#9d8672'
        }, {
            'p': [0x103, 0x20, 0x4a],
            's': [0x6, 0x2, 0x4],
            'l': 0x1,
            'r': [0x0, -0.43, 0x0],
            'c': '#9d8672'
        }, {
            'p': [-0x15, 0xc, 0x7],
            's': [0x6, 0x2, 0x4],
            'l': 0x1,
            'r': [0x0, -0.43, 0x0],
            'c': '#9d8672'
        }, {
            'p': [0x8, 0xd, -0xf],
            's': [0x6, 0x2, 0x4],
            'l': 0x1,
            'r': [0x0, 0.27, 0x0],
            'c': '#9d8672'
        }, {
            'p': [-0x9d, 0x20, 0x42],
            's': [0x6, 0x2, 0x4],
            'l': 0x1,
            'r': [0x0, -0.43, 0x0],
            'c': '#9d8672'
        }, {
            'p': [-0xdd, 0x21, 0x17],
            's': [0x6, 0x2, 0x4],
            'l': 0x1,
            'r': [3.14, -1.49, 3.14],
            'c': '#9d8672'
        }, {
            'p': [-0x88, 0x30, 0x8a],
            's': [0x6, 0x2, 0x4],
            'l': 0x1,
            'r': [0x0, 1.14, 0x0],
            'c': '#9d8672'
        }, {
            'p': [-0x81, 0x21, -0xe],
            's': [0x6, 0x2, 0x4],
            'l': 0x1,
            'r': [0x0, -1.04, 0x0],
            'c': '#9d8672'
        }, {
            'p': [-0x8f, 0x21, -0xfb],
            's': [0x4, 0x2, 0x4],
            'l': 0x1,
            'c': '#9d8672'
        }, {
            'p': [-0xcc, 0x21, -0xe7],
            's': [0x4, 0x2, 0x4],
            'l': 0x1,
            'c': '#9d8672'
        }, {
            'p': [0x99, 0x21, -0x137],
            's': [0x6, 0x2, 0x4],
            'l': 0x1,
            'r': [0x0, -1.39, 0x0],
            'c': '#9d8672'
        }, {
            'p': [0x7c, 0x21, -0xcb],
            's': [0x6, 0x2, 0x4],
            'l': 0x1,
            'r': [0x0, 0.09, 0x0],
            'c': '#9d8672'
        }, {
            'p': [0xd8, 0x21, -0x8d],
            's': [0x6, 0x2, 0x4],
            'l': 0x1,
            'r': [0x0, -1.39, 0x0],
            'c': '#9d8672'
        }, {
            'p': [0x96, 0x21, 0x15],
            's': [0x4, 0x2, 0x4],
            'l': 0x1,
            'r': [0x0, -1.39, 0x0],
            'c': '#9d8672'
        }, {
            'p': [0x16, 0x30, 0x55],
            's': [0x6, 0x2, 0x4],
            'l': 0x1,
            'r': [0x0, -0.34, 0x0],
            'c': '#9d8672'
        }, {
            'p': [-0x24, 0x30, 0x39],
            's': [0x6, 0x2, 0x4],
            'l': 0x1,
            'r': [0x0, -0.34, 0x0],
            'c': '#9d8672'
        }, {
            'p': [-0x36, 0x30, 0x55],
            's': [0x6, 0x2, 0x4],
            'l': 0x1,
            'r': [0x0, 0.18, 0x0],
            'c': '#9d8672'
        }, {
            'p': [-0x28, 0x30, -0x15],
            's': [0x2, 0x1, 0x2],
            'l': 0x1,
            'c': '#571f1f',
            't': 0x5
        }, {
            'p': [0x11, 0x30, 0x47],
            's': [0x2, 0x1, 0x2],
            'l': 0x1,
            'c': '#571f1f',
            't': 0x5
        }, {
            'p': [0xa, 0x37, -0x17],
            's': [0x2, 0x1, 0x2],
            'l': 0x1,
            'c': '#571f1f',
            't': 0x5
        }, {
            'p': [0xa, 0x37, -0x19],
            's': [0x2, 0x2, 0x2],
            'l': 0x1,
            'c': '#571f1f',
            't': 0x5
        }, {
            'p': [0x8, 0x35, -0x18],
            's': [0x2, 0x3, 0x2],
            'l': 0x1,
            'c': '#571f1f',
            't': 0x5
        }, {
            'p': [-0xc1, 0x20, -0x29],
            's': [0x4, 0x2, 0x4],
            'l': 0x1,
            'r': [0x0, -0.87, 0x0],
            'c': '#9d8672'
        }, {
            'p': [-0xc3, 0x20, -0x23],
            's': [0x2, 0x2, 0x2],
            'l': 0x1,
            'r': [0x0, -0.43, 0x0],
            'c': '#9d8672'
        }, {
            'p': [-0x85, 0x20, -0x14],
            's': [0x2, 0x2, 0x2],
            'l': 0x1,
            'r': [0x0, -0.43, 0x0],
            'c': '#9d8672'
        }, {
            'p': [-0x97, 0x21, -0xd0],
            's': [0x4, 0x2, 0x4],
            'l': 0x1,
            'c': '#9d8672'
        }, {
            'p': [0xdf, 0x20, 0x4d],
            's': [0x3, 0x2, 0x3],
            'l': 0x1,
            'r': [0x0, -1.39, 0x0],
            'c': '#9d8672'
        }, {
            'p': [0xf8, 0x20, 0x4b],
            's': [0x2, 0x2, 0x2],
            'l': 0x1,
            'r': [0x0, -1.39, 0x0],
            'c': '#9d8672'
        }, {
            'p': [-0xb9, 0x30, 0x84],
            's': [0x3, 0x1, 0x3],
            'l': 0x1,
            'r': [0x0, 1.14, 0x0],
            'c': '#9d8672'
        }, {
            'p': [-0x14, 0x30, 0x4c],
            's': [0x6, 0x2, 0x4],
            'l': 0x1,
            'r': [0x0, 1.49, 0x0],
            'c': '#9d8672'
        }, {
            'p': [0x2c, 0x2f, -0x7e],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [-3.14, 0.86, 3.14]
        }, {
            'p': [0x7, 0x2f, -0x7f],
            's': [0x7, 0x6, 0x8],
            'i': 0x12,
            'l': 0x1,
            'r': [0x0, 1.32, 0x0]
        }]
    }, {
        'name': 'Subzero',
        'ambInd': 0x1,
        'modURL': '',
        'terrainSeed': '',
        'terrainWidth': 0x800,
        'terrainHeight': 0x800,
        'terrainMntMlt': 0x1,
        'terrainMntCol': '#a0a0a0',
        'terrainGrsCol': '#4a6904',
        'terrainDrtCol': '#8c6835',
        'skyDome': !0x1,
        'skyDomeCol0': '#ffffff',
        'skyDomeCol1': '#7196a2',
        'skyDomeCol2': '#184452',
        'zone': !0x1,
        'zoneSize': 0x1f4,
        'zoneSpeed': 0x1,
        'zoneCol0': '#c542d9',
        'zoneCol1': '#c542d9',
        'zoneCol2': '#c542d9',
        'sizeMlt': 0x2,
        'shadowR': 0x400,
        'ambient': 0x828c96,
        'light': 0xf5f8fa,
        'sky': 0xd3d9dc,
        'fog': 0xc6d3d9,
        'fogD': 601.943118216585,
        'dthY': -0x64,
        'camPos': [-0xd, 0x5d, -0x6],
        'spawns': [[-0x29, 0x43, -0x3a, 0x0], [-0xbb, 0x36, -0xee, 0x0, 0x2], [-0x12b, 0x36, 0x2, 0x0, 0x3], [0x83, 0x43, -0xcb, 0x0, 0x3], [0xba, 0x43, -0xfa, 0x0], [0x15e, 0x43, -0x109, 0x0, 0x2], [0x13f, 0x56, -0x3b, 0x0], [0xb2, 0x54, -0x31, 0x0], [0x8c, 0x54, -0xd, 0x0, 0x1], [-0xa2, 0x43, 0x3f, 0x0]],
        'ambO': 0x1,
        'ambS': 0x5,
        'objects': [{
            'p': [-0x1, 0x40, 0x0],
            's': [0x8c, 0x2, 0x8e],
            'l': 0x1,
            't': 0x5
        }, {
            'p': [-0x64, 0x40, 0x32],
            's': [0x3a, 0x2, 0x2a],
            'l': 0x1,
            't': 0x5
        }, {
            'p': [-0x95, 0x35, 0x8],
            's': [0x28, 0xd, 0x7e],
            'l': 0x1,
            't': 0x5
        }, {
            'p': [-0x8b, 0x33, -0x6f],
            's': [0xac, 0x2, 0x82],
            'l': 0x1,
            't': 0x5
        }, {
            'p': [-0x115, 0x33, -0x4d],
            's': [0x68, 0x2, 0xca],
            'l': 0x1,
            't': 0x5
        }, {
            'p': [0x5, 0x40, -0x7b],
            's': [0x3c, 0x2, 0x68],
            'l': 0x1,
            't': 0x5
        }, {
            'p': [-0x36, 0x33, -0x8f],
            's': [0x3a, 0xf, 0x2a],
            'l': 0x1,
            't': 0x5
        }, {
            'p': [0xf0, 0x41, -0x145],
            's': [0x84, 0x2, 0x26],
            'c': 0x575757,
            't': 0xb
        }, {
            'p': [0xd5, 0x40, -0xcf],
            's': [0x28, 0x2, 0x3f],
            'l': 0x1,
            't': 0x5
        }, {
            'p': [0xd5, 0x40, -0x70],
            's': [0x27, 0x14, 0x25],
            'l': 0x1,
            't': 0x5
        }, {
            'p': [-0x7c, 0x33, -0x11d],
            's': [0xcb, 0x2, 0x32],
            'l': 0x1,
            't': 0x5
        }, {
            'p': [-0xc6, 0x32, -0xda],
            's': [0x26, 0x2, 0x54],
            'c': 0x737373,
            't': 0x1
        }, {
            'p': [0x157, 0x40, -0xfc],
            's': [0x4d, 0x2, 0x2b],
            'l': 0x1,
            't': 0x5
        }, {
            'p': [0x157, 0x40, -0x7a],
            's': [0x52, 0x2, 0xd9],
            'l': 0x1,
            't': 0x5
        }, {
            'p': [0x147, 0x40, -0xb],
            's': [0x8c, 0x14, 0x81],
            'l': 0x1,
            't': 0x5
        }, {
            'p': [-0x146, 0xb, -0x4d],
            's': [0x9, 0x2f, 0x278],
            'c': 0xa7988e,
            't': 0xb
        }, {
            'p': [-0xaab, 0xb, -0x4d],
            's': [0x14f2, 0x1f, 0x2d05],
            'l': 0x1,
            'c': 0x4f677d,
            't': 0x5
        }, {
            'p': [-0x122, 0x33, -0xd9],
            's': [0x4e, 0x38, 0x50],
            'c': 0x8e8d7a,
            't': 0xa,
            'bo': 0x1
        }, {
            'p': [-0xfc, 0x33, -0xb2],
            's': [0x4, 0x38, 0x4],
            'c': 0xafafaf,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [-0x148, 0x38, -0xb2],
            's': [0x4, 0x33, 0x4],
            'c': 0xafafaf,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [-0xfc, 0x33, -0x100],
            's': [0x4, 0x38, 0x4],
            'c': 0xafafaf,
            't': 0x2
        }, {
            'p': [-0x122, 0x4c, -0xb2],
            's': [0x48, 0x4, 0x4],
            'c': 0xafafaf,
            't': 0x2
        }, {
            'p': [-0x122, 0x67, -0xb2],
            's': [0x48, 0x4, 0x4],
            'c': 0xafafaf,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [-0x122, 0x33, -0xb2],
            's': [0x4, 0x46, 0x5],
            'c': 0xafafaf,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [-0xfc, 0x4c, -0xd9],
            's': [0x4, 0x4, 0x4a],
            'c': 0xafafaf,
            't': 0x2
        }, {
            'p': [-0xfc, 0x67, -0xd9],
            's': [0x4, 0x4, 0x4a],
            'c': 0xafafaf,
            't': 0x2
        }, {
            'p': [-0x10c, 0x71, -0xd9],
            's': [0x2d, 0x2, 0x54],
            'l': 0x1,
            'r': [0x0, 0x0, -0.35],
            'c': 0x6b6b6b,
            't': 0x2
        }, {
            'p': [-0x138, 0x71, -0xd9],
            's': [0x2d, 0x2, 0x54],
            'l': 0x1,
            'r': [0x0, 0x0, 0.35],
            'c': 0x6b6b6b,
            't': 0x2
        }, {
            'p': [-0x122, 0x6b, -0xd9],
            's': [0x4d, 0x4, 0x50],
            'c': 0x8e8d7a,
            't': 0xa
        }, {
            'p': [-0x122, 0x78, -0xd9],
            's': [0x5, 0x5, 0x59],
            'c': 0xafafaf,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [-0x10b, 0x73, -0xd9],
            's': [0x2d, 0x2, 0x54],
            'l': 0x1,
            'r': [0x0, 0x0, -0.35],
            't': 0x5
        }, {
            'p': [-0x139, 0x73, -0xd9],
            's': [0x2d, 0x2, 0x54],
            'l': 0x1,
            'r': [0x0, 0x0, 0.35],
            't': 0x5
        }, {
            'p': [-0x122, 0x7d, -0xd9],
            's': [0x5, 0x2, 0x59],
            't': 0x5
        }, {
            'p': [-0x114, 0x33, -0xb2],
            's': [0x2, 0x14, 0x4],
            'c': 0xafafaf,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [-0x108, 0x33, -0xb2],
            's': [0x2, 0x14, 0x4],
            'c': 0xafafaf,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [-0x10e, 0x47, -0xb2],
            's': [0xe, 0x2, 0x4],
            'c': 0xafafaf,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [-0x122, 0x6f, -0xd9],
            's': [0x37, 0x4, 0x50],
            'c': 0x8e8d7a,
            't': 0xa
        }, {
            'p': [-0x122, 0x73, -0xd9],
            's': [0x22, 0x4, 0x50],
            'c': 0x8e8d7a,
            't': 0xa
        }, {
            'p': [-0x122, 0x77, -0xd9],
            's': [0xd, 0x2, 0x50],
            'c': 0x8e8d7a,
            't': 0xa
        }, {
            'p': [-0x13f, 0x38, -0xc6],
            's': [0x9, 0x48, 0x14],
            'c': 0x7f7f7f,
            't': 0xb
        }, {
            'p': [-0xea, 0x33, -0xd4],
            's': [0x22, 0x28, 0x60],
            'c': 0x878787,
            't': 0xb,
            'bo': 0x1
        }, {
            'p': [-0x97, 0x33, -0xd4],
            's': [0x3c, 0x28, 0x60],
            'c': 0x7f7f7f,
            't': 0xb,
            'bo': 0x1
        }, {
            'p': [-0xba, 0x5a, -0xd4],
            's': [0x80, 0x1f, 0x5e],
            'c': 0x7d5d5d,
            't': 0xa,
            'bo': 0x1
        }, {
            'p': [-0xf9, 0x5b, -0xa6],
            's': [0x4, 0x1e, 0x4],
            'c': 0x848484,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [-0xcf, 0x5b, -0xa6],
            's': [0x4, 0x1a, 0x4],
            'c': 0x848484,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [-0xa5, 0x5b, -0xa6],
            's': [0x4, 0x1a, 0x4],
            'c': 0x848484,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [-0x7b, 0x5b, -0xa6],
            's': [0x4, 0x1e, 0x4],
            'c': 0x848484,
            't': 0x2
        }, {
            'p': [-0xd9, 0x35, -0xa4],
            's': [0x3, 0x1f, 0x3],
            'c': 0x848484,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [-0xb5, 0x35, -0xa4],
            's': [0x3, 0x1f, 0x3],
            'c': 0x848484,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [-0xc7, 0x51, -0xa4],
            's': [0x21, 0x3, 0x3],
            'c': 0x848484,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [-0xdd, 0x83, -0xd4],
            's': [0x46, 0x3, 0x64],
            'l': 0x1,
            'r': [0x0, 0x0, 0.35],
            'c': 0x787777,
            't': 0x2
        }, {
            'p': [-0xba, 0x8d, -0xd4],
            's': [0x7, 0x7, 0x6c],
            'c': 0x848484,
            't': 0x2
        }, {
            'p': [-0x96, 0x83, -0xd4],
            's': [0x49, 0x3, 0x64],
            'l': 0x1,
            'r': [0x0, 0x0, -0.35],
            'c': 0x787777,
            't': 0x2
        }, {
            'p': [-0x95, 0x86, -0xd4],
            's': [0x49, 0x3, 0x64],
            'l': 0x1,
            'r': [0x0, 0x0, -0.35],
            't': 0x5
        }, {
            'p': [-0xba, 0x94, -0xd4],
            's': [0x7, 0x3, 0x6c],
            't': 0x5
        }, {
            'p': [-0xa5, 0x79, -0xa6],
            's': [0x4, 0x10, 0x4],
            'c': 0x848484,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [-0xcf, 0x79, -0xa6],
            's': [0x4, 0x11, 0x4],
            'c': 0x848484,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [-0xba, 0x79, -0xd4],
            's': [0x7d, 0x6, 0x5e],
            'c': 0x7d5d5d,
            't': 0xa
        }, {
            'p': [-0xba, 0x7f, -0xd4],
            's': [0x5d, 0x6, 0x5e],
            'c': 0x7d5d5d,
            't': 0xa
        }, {
            'p': [-0xba, 0x85, -0xd4],
            's': [0x3c, 0x6, 0x5e],
            'c': 0x7d5d5d,
            't': 0xa
        }, {
            'p': [-0xba, 0x8b, -0xd4],
            's': [0x20, 0x4, 0x5e],
            'c': 0x7d5d5d,
            't': 0xa
        }, {
            'p': [-0x87, 0x4c, -0xec],
            's': [0x9, 0x48, 0x14],
            'c': 0x575757,
            't': 0xb
        }, {
            'p': [-0x102, 0x33, -0x11e],
            's': [0x42, 0x3a, 0x38],
            'c': 0x7a858c,
            't': 0xa,
            'bo': 0x1
        }, {
            'p': [-0x7b, 0x5b, -0x102],
            's': [0x4, 0x1e, 0x4],
            'c': 0x848484,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [-0xf9, 0x5b, -0x102],
            's': [0x4, 0x1e, 0x4],
            'c': 0x848484,
            't': 0x2
        }, {
            'p': [-0xcf, 0x5b, -0x102],
            's': [0x4, 0x1a, 0x4],
            'c': 0x848484,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [-0xa5, 0x5b, -0x102],
            's': [0x4, 0x1a, 0x4],
            'c': 0x848484,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [-0xcf, 0x79, -0x102],
            's': [0x4, 0x11, 0x4],
            'c': 0x848484,
            't': 0x2
        }, {
            'p': [-0xa5, 0x79, -0x102],
            's': [0x4, 0x11, 0x4],
            'c': 0x848484,
            't': 0x2
        }, {
            'p': [-0xe2, 0x35, -0x105],
            's': [0x4, 0x38, 0x4],
            'c': 0xafafaf,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [-0xe2, 0x4d, -0x120],
            's': [0x4, 0x4, 0x32],
            'c': 0xafafaf,
            't': 0x2
        }, {
            'p': [-0xe2, 0x69, -0x120],
            's': [0x4, 0x4, 0x32],
            'c': 0xafafaf,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [-0x101, 0x76, -0x11f],
            's': [0x48, 0x4, 0x4],
            'c': 0xafafaf,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [-0x101, 0x71, -0x12f],
            's': [0x44, 0x2, 0x20],
            'l': 0x1,
            'r': [-0.35, 0x0, 0x0],
            'c': 0x575757,
            't': 0x2
        }, {
            'p': [-0x101, 0x70, -0x10b],
            's': [0x44, 0x2, 0x28],
            'l': 0x1,
            'r': [0.35, 0x0, 0x0],
            'c': 0x575757,
            't': 0x2
        }, {
            'p': [-0x102, 0x6d, -0x11f],
            's': [0x42, 0x3, 0x38],
            'c': 0x7a858c,
            't': 0xa
        }, {
            'p': [-0x101, 0x73, -0x12f],
            's': [0x44, 0x2, 0x21],
            'l': 0x1,
            'r': [-0.35, 0x0, 0x0],
            't': 0x5
        }, {
            'p': [-0x101, 0x7a, -0x11f],
            's': [0x48, 0x2, 0x4],
            't': 0x5
        }, {
            'p': [-0x102, 0x70, -0x11e],
            's': [0x42, 0x4, 0x26],
            'c': 0x7a858c,
            't': 0xa
        }, {
            'p': [-0x102, 0x74, -0x11f],
            's': [0x42, 0x3, 0x15],
            'c': 0x7a858c,
            't': 0xa
        }, {
            'p': [-0x101, 0x72, -0x10a],
            's': [0x44, 0x2, 0x29],
            'l': 0x1,
            'r': [0.35, 0x0, 0x0],
            't': 0x5
        }, {
            'p': [-0xe1, 0x33, -0x10f],
            's': [0x2, 0x14, 0x2],
            'c': 0xafafaf,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [-0xe1, 0x33, -0x11b],
            's': [0x2, 0x14, 0x2],
            'c': 0xafafaf,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [-0xe1, 0x47, -0x115],
            's': [0x2, 0x2, 0xe],
            'c': 0xafafaf,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [-0xc1, 0x33, -0x149],
            's': [0x42, 0x26, 0x38],
            'c': 0x6c7f76,
            't': 0xa,
            'bo': 0x1
        }, {
            'p': [-0xdf, 0x35, -0x12e],
            's': [0x4, 0x2a, 0x4],
            'c': 0x898989,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [-0xa1, 0x35, -0x12e],
            's': [0x4, 0x2a, 0x4],
            'c': 0x898989,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [-0xc0, 0x57, -0x12e],
            's': [0x3a, 0x8, 0x4],
            'c': 0x898989,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [-0xe2, 0x35, -0x13b],
            's': [0x4, 0x38, 0x4],
            'c': 0xafafaf,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [-0xc0, 0x60, -0x147],
            's': [0x44, 0x2, 0x39],
            'l': 0x1,
            'r': [0.17, 0x0, 0x0],
            'c': 0x555555,
            't': 0x2
        }, {
            'p': [-0xc0, 0x62, -0x147],
            's': [0x44, 0x2, 0x39],
            'l': 0x1,
            'r': [0.17, 0x0, 0x0],
            't': 0x5
        }, {
            'p': [-0xc1, 0x59, -0x149],
            's': [0x42, 0x6, 0x38],
            'c': 0x6c7f76,
            't': 0xa
        }, {
            'p': [-0xc1, 0x5c, -0x153],
            's': [0x42, 0x3, 0x24],
            'c': 0x6c7f76,
            't': 0x5
        }, {
            'p': [-0xc1, 0x5f, -0x15b],
            's': [0x42, 0x3, 0x14],
            'c': 0x6c7f76,
            't': 0xa
        }, {
            'p': [-0xba, 0x33, -0x12e],
            's': [0x2, 0x14, 0x4],
            'c': 0xafafaf,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [-0xae, 0x33, -0x12e],
            's': [0x2, 0x14, 0x4],
            'c': 0xafafaf,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [-0xb4, 0x47, -0x12e],
            's': [0xe, 0x2, 0x4],
            'c': 0xafafaf,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [-0xd8, 0x33, -0xfe],
            's': [0x13, 0x2, 0xc],
            'l': 0x1,
            't': 0x5
        }, {
            'p': [-0xc3, 0x33, -0x101],
            's': [0xc, 0x2, 0x6],
            'l': 0x1,
            't': 0x5
        }, {
            'p': [-0xb9, 0x33, -0xfe],
            's': [0x8, 0x2, 0xc],
            'l': 0x1,
            't': 0x5
        }, {
            'p': [-0xd3, 0x33, -0xb7],
            's': [0xc, 0x2, 0xe],
            'l': 0x1,
            't': 0x5
        }, {
            'p': [-0xc9, 0x33, -0xb3],
            's': [0x8, 0x2, 0x6],
            'l': 0x1,
            't': 0x5
        }, {
            'p': [-0xb7, 0x33, -0xb6],
            's': [0x8, 0x2, 0xc],
            'l': 0x1,
            't': 0x5
        }, {
            'p': [-0xc5, 0x33, -0x3e],
            's': [0x38, 0x39, 0x50],
            'c': 0x877960,
            't': 0xa,
            'bo': 0x1
        }, {
            'p': [-0xe0, 0x33, -0x65],
            's': [0x4, 0x3a, 0x4],
            'c': 0xafafaf,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [-0xe0, 0x33, -0x17],
            's': [0x4, 0x3a, 0x4],
            'c': 0xafafaf,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [-0xaa, 0x33, -0x17],
            's': [0x4, 0x3a, 0x4],
            'c': 0xafafaf,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [-0xaa, 0x33, -0x65],
            's': [0x4, 0x3a, 0x4],
            'c': 0xafafaf,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [-0xc5, 0x4d, -0x65],
            's': [0x32, 0x4, 0x4],
            'c': 0xafafaf,
            't': 0x2
        }, {
            'p': [-0xc5, 0x69, -0x65],
            's': [0x32, 0x4, 0x4],
            'c': 0xafafaf,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [-0xc5, 0x69, -0x3e],
            's': [0x3a, 0x4, 0x4a],
            'c': 0xafafaf,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [-0xc5, 0x79, -0x3e],
            's': [0x41, 0x6, 0x6],
            'c': 0xafafaf,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [-0xc5, 0x74, -0x54],
            's': [0x3f, 0x2, 0x2b],
            'l': 0x1,
            'r': [-0.35, 0x0, 0x0],
            'c': 0x666666,
            't': 0x2
        }, {
            'p': [-0xc5, 0x74, -0x28],
            's': [0x3f, 0x2, 0x2c],
            'l': 0x1,
            'r': [0.35, 0x0, 0x0],
            'c': 0x666666,
            't': 0x2
        }, {
            'p': [-0xc5, 0x76, -0x27],
            's': [0x3f, 0x2, 0x2c],
            'l': 0x1,
            'r': [0.35, 0x0, 0x0],
            't': 0x5
        }, {
            'p': [-0xc5, 0x76, -0x55],
            's': [0x3f, 0x2, 0x2b],
            'l': 0x1,
            'r': [-0.35, 0x0, 0x0],
            't': 0x5
        }, {
            'p': [-0xc5, 0x7f, -0x3e],
            's': [0x41, 0x2, 0x6],
            't': 0x5
        }, {
            'p': [-0xc5, 0x6d, -0x3e],
            's': [0x38, 0x3, 0x52],
            'c': 0x877960,
            't': 0xa
        }, {
            'p': [-0xba, 0x75, -0xd4],
            's': [0x7a, 0x4, 0x60],
            'c': 0x848484,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [-0xc5, 0x70, -0x3e],
            's': [0x38, 0x3, 0x42],
            'c': 0x877960,
            't': 0xa
        }, {
            'p': [-0xc5, 0x73, -0x3e],
            's': [0x38, 0x4, 0x32],
            'c': 0x877960,
            't': 0xa
        }, {
            'p': [-0xc5, 0x77, -0x3e],
            's': [0x38, 0x4, 0x1c],
            'c': 0x877960,
            't': 0xa
        }, {
            'p': [-0xe0, 0x33, -0x3e],
            's': [0x5, 0x47, 0x4],
            'c': 0xafafaf,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [-0xaa, 0x33, -0x3e],
            's': [0x5, 0x47, 0x4],
            'c': 0xafafaf,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [-0xb0, 0x5c, -0x5a],
            's': [0x7, 0x27, 0xc],
            'c': 0x5f5f5f,
            't': 0xb
        }, {
            'p': [-0xe1, 0x33, -0x24],
            's': [0x2, 0x16, 0x2],
            'c': 0xafafaf,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [-0xe1, 0x33, -0x30],
            's': [0x2, 0x16, 0x2],
            'c': 0xafafaf,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [-0xe1, 0x47, -0x2a],
            's': [0x2, 0x2, 0xa],
            'c': 0xafafaf,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [-0xc5, 0x33, 0xe],
            's': [0x4a, 0x48, 0x46],
            'c': 0x607060,
            't': 0xa,
            'bo': 0x1
        }, {
            'p': [-0xe9, 0x33, -0x14],
            's': [0x4, 0x49, 0x4],
            'c': 0x787878,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [-0xe9, 0x33, 0x30],
            's': [0x4, 0x49, 0x4],
            'c': 0x787878,
            't': 0x2
        }, {
            'p': [-0xa1, 0x33, 0x30],
            's': [0x4, 0x49, 0x4],
            'c': 0x787878,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [-0xa1, 0x33, -0x14],
            's': [0x4, 0x49, 0x4],
            'c': 0x787878,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [-0xc5, 0x35, 0xe],
            's': [0x4d, 0xc, 0x49],
            'c': 0x5f5f5f,
            't': 0xb
        }, {
            'p': [-0xa0, 0x5b, 0xe],
            's': [0x2, 0x4, 0x40],
            'l': 0x1,
            'c': 0x727272,
            't': 0x2
        }, {
            'p': [-0xc5, 0x78, 0xe],
            's': [0x4c, 0x4, 0x40],
            'c': 0x727272,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [-0xa0, 0x42, -0x9],
            's': [0x2, 0x14, 0x2],
            'c': 0xafafaf,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [-0xa0, 0x42, 0x3],
            's': [0x2, 0x14, 0x2],
            'c': 0xafafaf,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [-0xa0, 0x54, -0x3],
            's': [0x2, 0x2, 0xa],
            'c': 0xafafaf,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [-0xc5, 0x78, -0x14],
            's': [0x44, 0x4, 0x4],
            'c': 0x727272,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [-0xc5, 0x78, 0x30],
            's': [0x44, 0x4, 0x4],
            'l': 0x1,
            'c': 0x727272,
            't': 0x2
        }, {
            'p': [-0xc5, 0x88, 0xe],
            's': [0x5, 0x5, 0x50],
            'c': 0x969696,
            't': 0x2
        }, {
            'p': [-0xdb, 0x82, 0xe],
            's': [0x2a, 0x2, 0x4d],
            'l': 0x1,
            'r': [0x0, 0x0, 0.35],
            'c': 0x525252,
            't': 0x2
        }, {
            'p': [-0xb0, 0x82, 0xe],
            's': [0x29, 0x2, 0x4d],
            'l': 0x1,
            'r': [0x0, 0x0, -0.35],
            'c': 0x525252,
            't': 0x2
        }, {
            'p': [-0xc5, 0x7c, 0xe],
            's': [0x4a, 0x4, 0x46],
            'c': 0x607060,
            't': 0xa
        }, {
            'p': [-0xb0, 0x84, 0xe],
            's': [0x2b, 0x2, 0x4d],
            'l': 0x1,
            'r': [0x0, 0x0, -0.35],
            't': 0x5
        }, {
            'p': [-0xdb, 0x84, 0xe],
            's': [0x2c, 0x2, 0x4d],
            'l': 0x1,
            'r': [0x0, 0x0, 0.35],
            't': 0x5
        }, {
            'p': [-0xc5, 0x8d, 0xe],
            's': [0x5, 0x2, 0x50],
            't': 0x5
        }, {
            'p': [-0xc5, 0x80, 0xe],
            's': [0x35, 0x4, 0x46],
            'c': 0x607060,
            't': 0xa
        }, {
            'p': [-0xc5, 0x88, 0xe],
            's': [0xb, 0x3, 0x46],
            'c': 0x607060,
            't': 0xa
        }, {
            'p': [-0xc5, 0x84, 0xe],
            's': [0x1f, 0x4, 0x46],
            'c': 0x607060,
            't': 0xa
        }, {
            'p': [-0xc5, 0x5b, -0x14],
            's': [0x44, 0x4, 0x4],
            'c': 0x727272,
            't': 0x2
        }, {
            'p': [-0x119, 0x33, 0x40],
            's': [0x60, 0x3a, 0x50],
            'c': 0x735656,
            't': 0xa,
            'bo': 0x1
        }, {
            'p': [-0x11a, 0x4e, 0x19],
            's': [0x58, 0x4, 0x4],
            'c': 0x898989,
            't': 0x2
        }, {
            'p': [-0x11a, 0x78, 0x40],
            's': [0x66, 0x7, 0x7],
            'l': 0x1,
            'c': 0xafafaf,
            't': 0x2
        }, {
            'p': [-0x11a, 0x74, 0x2b],
            's': [0x64, 0x2, 0x30],
            'l': 0x1,
            'r': [-0.35, 0x0, 0x0],
            'c': 0x575757,
            't': 0x2
        }, {
            'p': [-0x11a, 0x73, 0x57],
            's': [0x64, 0x2, 0x31],
            'l': 0x1,
            'r': [0.35, 0x0, 0x0],
            'c': 0x575757,
            't': 0x2
        }, {
            'p': [-0x11a, 0x76, 0x2a],
            's': [0x64, 0x2, 0x30],
            'l': 0x1,
            'r': [-0.35, 0x0, 0x0],
            't': 0x5
        }, {
            'p': [-0x11a, 0x75, 0x58],
            's': [0x64, 0x2, 0x31],
            'l': 0x1,
            'r': [0.35, 0x0, 0x0],
            't': 0x5
        }, {
            'p': [-0x11a, 0x7f, 0x40],
            's': [0x66, 0x2, 0x7],
            'l': 0x1,
            't': 0x5
        }, {
            'p': [-0x119, 0x6d, 0x40],
            's': [0x60, 0x4, 0x50],
            'c': 0x695555,
            't': 0xa
        }, {
            'p': [-0x119, 0x71, 0x40],
            's': [0x60, 0x4, 0x3a],
            'c': 0x695555,
            't': 0xa
        }, {
            'p': [-0x119, 0x75, 0x40],
            's': [0x60, 0x4, 0x23],
            'c': 0x695555,
            't': 0xa
        }, {
            'p': [-0x119, 0x79, 0x40],
            's': [0x60, 0x3, 0xf],
            'c': 0x695555,
            't': 0xa
        }, {
            'p': [-0x108, 0x33, 0x19],
            's': [0x2, 0x16, 0x4],
            'c': 0x898888,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [-0xfc, 0x33, 0x19],
            's': [0x2, 0x16, 0x4],
            'c': 0x898989,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [-0x102, 0x47, 0x19],
            's': [0xa, 0x2, 0x4],
            'c': 0x919191,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [-0x146, 0x3a, -0x4d],
            's': [0x5, 0x7, 0x5],
            'c': 0x7d7c7c,
            't': 0xb
        }, {
            'p': [-0x146, 0x3a, -0x3d],
            's': [0x5, 0x7, 0x5],
            'c': 0x7d7c7c,
            't': 0xb
        }, {
            'p': [-0x146, 0x3a, -0x5d],
            's': [0x5, 0x7, 0x5],
            'c': 0x7d7c7c,
            't': 0xb
        }, {
            'p': [-0x146, 0x3a, -0x6d],
            's': [0x5, 0x7, 0x5],
            'c': 0x7d7c7c,
            't': 0xb
        }, {
            'p': [-0x146, 0x3a, -0x7e],
            's': [0x5, 0x7, 0x5],
            'c': 0x7d7c7c,
            't': 0xb
        }, {
            'p': [-0x146, 0x3a, -0x8f],
            's': [0x5, 0x7, 0x5],
            'c': 0x7d7c7c,
            't': 0xb
        }, {
            'p': [-0x146, 0x3a, -0xa0],
            's': [0x5, 0x7, 0x5],
            'c': 0x7d7c7c,
            't': 0xb
        }, {
            'p': [-0x146, 0x3a, -0xb1],
            's': [0x5, 0x7, 0x5],
            'c': 0x7d7c7c,
            't': 0xb
        }, {
            'p': [-0x146, 0x3a, -0x2c],
            's': [0x5, 0x7, 0x5],
            'c': 0x7d7c7c,
            't': 0xb
        }, {
            'p': [-0x146, 0x3a, -0x1b],
            's': [0x5, 0x7, 0x5],
            'c': 0x7d7c7c,
            't': 0xb
        }, {
            'p': [-0x146, 0x3a, -0xa],
            's': [0x5, 0x7, 0x5],
            'c': 0x7d7c7c,
            't': 0xb
        }, {
            'p': [-0x146, 0x3a, 0x7],
            's': [0x5, 0x7, 0x5],
            'c': 0x7d7c7c,
            't': 0xb
        }, {
            'p': [-0x146, 0x3a, 0x18],
            's': [0x5, 0x7, 0x5],
            'c': 0x7d7c7c,
            't': 0xb
        }, {
            'p': [-0x146, 0x3d, -0x4f],
            's': [0x2, 0x2, 0xcd],
            'c': 0xcfcfcf,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [-0x78, 0x33, -0x9f],
            's': [0x4, 0x37, 0x4],
            'c': 0x939393,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [-0x18, 0x33, -0x9f],
            's': [0x4, 0x37, 0x4],
            'c': 0x898989,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [-0x18, 0x33, -0x109],
            's': [0x4, 0x37, 0x4],
            'c': 0x787878,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [-0x78, 0x33, -0x109],
            's': [0x4, 0x37, 0x4],
            'c': 0x7a7a7a,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [-0x48, 0x33, -0x109],
            's': [0x4, 0x48, 0x5],
            'c': 0x919191,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [-0x48, 0x33, -0x9f],
            's': [0x4, 0x48, 0x5],
            'c': 0x8c8c8c,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [-0x64, 0x72, -0xd4],
            's': [0x38, 0x3, 0x72],
            'l': 0x1,
            'r': [0x0, 0x0, 0.35],
            'c': 0x525252,
            't': 0x2
        }, {
            'p': [-0x48, 0x7a, -0xd4],
            's': [0x6, 0x6, 0x77],
            'c': 0xafafaf,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [-0x2d, 0x72, -0xd4],
            's': [0x38, 0x3, 0x72],
            'l': 0x1,
            'r': [0x0, 0x0, -0.35],
            'c': 0x525252,
            't': 0x2
        }, {
            'p': [-0x48, 0x4e, -0x109],
            's': [0x5c, 0x4, 0x4],
            'c': 0x757575,
            't': 0x2
        }, {
            'p': [-0x18, 0x4e, -0xd4],
            's': [0x4, 0x4, 0x66],
            'c': 0x7f7f7f,
            't': 0x2
        }, {
            'p': [-0x48, 0x4e, -0x9f],
            's': [0x5c, 0x4, 0x4],
            'c': 0x8c8c8c,
            't': 0x2
        }, {
            'p': [-0x78, 0x4e, -0xd4],
            's': [0x4, 0x4, 0x66],
            'l': 0x1,
            'c': 0x828282,
            't': 0x2
        }, {
            'p': [-0x48, 0x66, -0x9f],
            's': [0x5c, 0x4, 0x4],
            'c': 0x919191,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [-0x48, 0x66, -0x109],
            's': [0x5c, 0x4, 0x4],
            'c': 0x939393,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [-0x18, 0x33, -0xd4],
            's': [0x5, 0x37, 0x4],
            'c': 0x7f7f7f,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [-0x18, 0x66, -0xd4],
            's': [0x4, 0x4, 0x66],
            'c': 0x787878,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [-0x78, 0x66, -0xd4],
            's': [0x4, 0x4, 0x66],
            'c': 0x898989,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [-0x2c, 0x75, -0xd4],
            's': [0x38, 0x3, 0x72],
            'l': 0x1,
            'r': [0x0, 0x0, -0.35],
            't': 0x5
        }, {
            'p': [-0x65, 0x75, -0xd4],
            's': [0x38, 0x3, 0x72],
            'l': 0x1,
            'r': [0x0, 0x0, 0.35],
            't': 0x5
        }, {
            'p': [-0x48, 0x80, -0xd4],
            's': [0x6, 0x2, 0x77],
            't': 0x5
        }, {
            'p': [-0x6f, 0x33, -0x109],
            's': [0x2, 0x17, 0x4],
            'c': 0xafafaf,
            't': 0x2
        }, {
            'p': [-0x63, 0x33, -0x109],
            's': [0x2, 0x17, 0x4],
            'c': 0xafafaf,
            't': 0x2
        }, {
            'p': [-0x69, 0x48, -0x109],
            's': [0xa, 0x2, 0x4],
            'c': 0xafafaf,
            't': 0x2
        }, {
            'p': [-0x6c, 0x33, -0x164],
            's': [0x66, 0x3c, 0x5c],
            'c': 0x7d6565,
            't': 0xa,
            'bo': 0x1
        }, {
            'p': [-0x3a, 0x35, -0x137],
            's': [0x4, 0x3b, 0x4],
            'c': 0xafafaf,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [-0x9e, 0x35, -0x137],
            's': [0x4, 0x3b, 0x4],
            'c': 0xafafaf,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [-0x9e, 0x35, -0x165],
            's': [0x4, 0x37, 0x4],
            'c': 0xafafaf,
            't': 0x2
        }, {
            'p': [-0x7c, 0x35, -0x137],
            's': [0x4, 0x4a, 0x5],
            'c': 0xafafaf,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [-0x5c, 0x35, -0x137],
            's': [0x4, 0x4b, 0x5],
            'c': 0xafafaf,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [-0x6c, 0x4f, -0x137],
            's': [0x60, 0x4, 0x4],
            'c': 0xafafaf,
            't': 0x2
        }, {
            'p': [-0x6c, 0x6c, -0x137],
            's': [0x60, 0x4, 0x4],
            'c': 0xafafaf,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [-0x6c, 0x81, -0x164],
            's': [0x6, 0x6, 0x69],
            'c': 0xafafaf,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [-0x88, 0x79, -0x164],
            's': [0x39, 0x3, 0x63],
            'l': 0x1,
            'r': [0x0, 0x0, 0.35],
            'c': 0x595959,
            't': 0x2
        }, {
            'p': [-0x3a, 0x6c, -0x166],
            's': [0x4, 0x4, 0x5a],
            'c': 0xafafaf,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [-0x9e, 0x6c, -0x163],
            's': [0x4, 0x4, 0x54],
            'l': 0x1,
            'c': 0xafafaf,
            't': 0x2
        }, {
            'p': [-0x89, 0x7c, -0x164],
            's': [0x39, 0x2, 0x63],
            'l': 0x1,
            'r': [0x0, 0x0, 0.35],
            't': 0x5
        }, {
            'p': [-0x6c, 0x87, -0x164],
            's': [0x6, 0x2, 0x69],
            't': 0x5
        }, {
            'p': [-0x4f, 0x7c, -0x164],
            's': [0x39, 0x2, 0x63],
            'l': 0x1,
            'r': [0x0, 0x0, -0.35],
            't': 0x5
        }, {
            'p': [-0x50, 0x79, -0x164],
            's': [0x39, 0x3, 0x63],
            'l': 0x1,
            'r': [0x0, 0x0, -0.35],
            'c': 0x5c5c5c,
            't': 0x2
        }, {
            'p': [-0x6c, 0x70, -0x164],
            's': [0x66, 0x5, 0x5c],
            'c': 0x7d6565,
            't': 0xa
        }, {
            'p': [-0x6c, 0x75, -0x164],
            's': [0x4d, 0x5, 0x5c],
            'c': 0x7d6565,
            't': 0xa
        }, {
            'p': [-0x6c, 0x7a, -0x164],
            's': [0x31, 0x5, 0x5c],
            'c': 0x7d6565,
            't': 0xa
        }, {
            'p': [-0x6c, 0x7f, -0x164],
            's': [0x16, 0x5, 0x5c],
            'c': 0x7d6565,
            't': 0xa
        }, {
            'p': [-0x94, 0x33, -0x137],
            's': [0x2, 0x16, 0x4],
            'c': 0xafafaf,
            't': 0x2
        }, {
            'p': [-0x88, 0x33, -0x137],
            's': [0x2, 0x16, 0x4],
            'c': 0xafafaf,
            't': 0x2
        }, {
            'p': [-0x8e, 0x47, -0x137],
            's': [0xa, 0x2, 0x4],
            'c': 0xafafaf,
            't': 0x2
        }, {
            'p': [-0x65, 0x33, -0x14],
            's': [0x3c, 0x3e, 0x64],
            'c': 0x6a686e,
            't': 0xa,
            'bo': 0x1
        }, {
            'p': [-0x65, 0x82, -0x14],
            's': [0x5, 0x5, 0x6c],
            'c': 0x969696,
            't': 0x2
        }, {
            'p': [-0x82, 0x33, 0x1d],
            's': [0x4, 0x3f, 0x4],
            'c': 0x787878,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [-0x48, 0x33, 0x1d],
            's': [0x4, 0x3f, 0x4],
            'c': 0x787878,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [-0x48, 0x33, -0x47],
            's': [0x4, 0x3f, 0x4],
            'c': 0x787878,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [-0x1a, 0x33, -0x47],
            's': [0x4, 0x46, 0x4],
            'c': 0x787878,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [-0x1a, 0x33, -0x79],
            's': [0x4, 0x46, 0x4],
            'c': 0x787878,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [-0x80, 0x33, -0x79],
            's': [0x4, 0x46, 0x4],
            'c': 0x787878,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [-0x4e, 0x33, -0x79],
            's': [0x4, 0x46, 0x5],
            'c': 0x787878,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [-0x48, 0x33, -0x13],
            's': [0x4, 0x3f, 0x4],
            'c': 0x787878,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [-0x65, 0x57, 0x1d],
            's': [0x36, 0x4, 0x4],
            'c': 0x727272,
            't': 0x2
        }, {
            'p': [-0x65, 0x6e, 0x1d],
            's': [0x36, 0x4, 0x4],
            'c': 0x727272,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [-0x67, 0x5b, -0x79],
            's': [0x2e, 0x4, 0x4],
            'l': 0x1,
            'c': 0x727272,
            't': 0x2
        }, {
            'p': [-0x34, 0x5b, -0x79],
            's': [0x30, 0x4, 0x4],
            'l': 0x1,
            'c': 0x727272,
            't': 0x2
        }, {
            'p': [-0x31, 0x5b, -0x47],
            's': [0x2a, 0x4, 0x4],
            'c': 0x727272,
            't': 0x2
        }, {
            'p': [-0x34, 0x75, -0x79],
            's': [0x30, 0x4, 0x4],
            'c': 0x727272,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [-0x67, 0x75, -0x79],
            's': [0x2e, 0x4, 0x4],
            'c': 0x727272,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [-0x65, 0x57, 0x5],
            's': [0x3e, 0x4, 0x2c],
            'c': 0x727272,
            't': 0x2
        }, {
            'p': [-0x80, 0x5b, -0x5f],
            's': [0x4, 0x4, 0x30],
            'l': 0x1,
            'c': 0x727272,
            't': 0x2
        }, {
            'p': [-0x1a, 0x75, -0x60],
            's': [0x4, 0x4, 0x2e],
            'c': 0x727272,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [-0x1a, 0x5b, -0x60],
            's': [0x4, 0x4, 0x2e],
            'c': 0x727272,
            't': 0x2
        }, {
            'p': [-0x54, 0x7a, -0x14],
            's': [0x27, 0x2, 0x69],
            'l': 0x1,
            'r': [0x0, 0x0, -0.52],
            'c': 0x484848,
            't': 0x2
        }, {
            'p': [-0x76, 0x7a, -0x14],
            's': [0x27, 0x2, 0x69],
            'l': 0x1,
            'r': [0x0, 0x0, 0.53],
            'c': 0x484848,
            't': 0x2
        }, {
            'p': [-0x34, 0x75, -0x47],
            's': [0x30, 0x4, 0x4],
            'c': 0x727272,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [-0x82, 0x33, -0x45],
            's': [0x4, 0x3f, 0x4],
            'c': 0x787878,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [-0x82, 0x33, -0x13],
            's': [0x5, 0x3f, 0x4],
            'c': 0x787878,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [-0x65, 0x72, -0x14],
            's': [0x3d, 0x4, 0x64],
            'c': 0x6a686e,
            't': 0xa,
            'bo': 0x1
        }, {
            'p': [-0x65, 0x76, -0x14],
            's': [0x32, 0x4, 0x64],
            'c': 0x6a686e,
            't': 0xa
        }, {
            'p': [-0x65, 0x7a, -0x14],
            's': [0x23, 0x4, 0x64],
            'c': 0x6a686e,
            't': 0xa
        }, {
            'p': [-0x65, 0x7e, -0x14],
            's': [0x16, 0x4, 0x64],
            'c': 0x6a686e,
            't': 0xa
        }, {
            'p': [-0x65, 0x82, -0x14],
            's': [0x9, 0x1, 0x64],
            'c': 0x6a686e,
            't': 0x5
        }, {
            'p': [-0x77, 0x7c, -0x14],
            's': [0x27, 0x2, 0x69],
            'l': 0x1,
            'r': [0x0, 0x0, 0.53],
            't': 0x5
        }, {
            'p': [-0x53, 0x7c, -0x14],
            's': [0x27, 0x2, 0x69],
            'l': 0x1,
            'r': [0x0, 0x0, -0.52],
            't': 0x5
        }, {
            'p': [-0x65, 0x87, -0x14],
            's': [0x5, 0x2, 0x6c],
            't': 0x5
        }, {
            'p': [-0x4d, 0x33, -0x60],
            's': [0x68, 0x44, 0x34],
            'c': 0x5f6e68,
            't': 0xa,
            'bo': 0x1
        }, {
            'p': [-0x80, 0x75, -0x5f],
            's': [0x4, 0x4, 0x30],
            'c': 0x727272,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [-0x4d, 0x77, -0x60],
            's': [0x68, 0x5, 0x34],
            'c': 0x5f6e68,
            't': 0xa
        }, {
            'p': [-0x4d, 0x81, -0x60],
            's': [0x72, 0x5, 0x5],
            'l': 0x1,
            'c': 0x727272,
            't': 0x2
        }, {
            'p': [-0x4d, 0x7d, -0x70],
            's': [0x6c, 0x2, 0x1f],
            'l': 0x1,
            'r': [-0.35, 0x0, 0x0],
            'c': 0x575757,
            't': 0x2
        }, {
            'p': [-0x4d, 0x7d, -0x50],
            's': [0x6c, 0x2, 0x1f],
            'l': 0x1,
            'r': [0.35, 0x0, 0x0],
            'c': 0x575757,
            't': 0x2
        }, {
            'p': [-0x4d, 0x7f, -0x71],
            's': [0x6c, 0x2, 0x1f],
            'l': 0x1,
            'r': [-0.35, 0x0, 0x0],
            't': 0x5
        }, {
            'p': [-0x4d, 0x7f, -0x4f],
            's': [0x6c, 0x2, 0x1f],
            'l': 0x1,
            'r': [0.35, 0x0, 0x0],
            't': 0x5
        }, {
            'p': [-0x4d, 0x86, -0x60],
            's': [0x72, 0x2, 0x5],
            'l': 0x1,
            't': 0x5
        }, {
            'p': [-0x4d, 0x7c, -0x60],
            's': [0x68, 0x4, 0x26],
            'c': 0x5f6e68,
            't': 0xa
        }, {
            'p': [-0x4d, 0x80, -0x60],
            's': [0x68, 0x4, 0x10],
            'c': 0x5f6e68,
            't': 0xa
        }, {
            'p': [-0x2e, 0x41, -0x4b],
            's': [0xc, 0x4d, 0x6],
            'c': 0xa2a2a2,
            't': 0xb
        }, {
            'p': [-0x19, 0x40, -0x66],
            's': [0x2, 0x16, 0x2],
            'c': 0xafafaf,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [-0x19, 0x40, -0x5a],
            's': [0x2, 0x16, 0x2],
            'c': 0xafafaf,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [-0x19, 0x54, -0x60],
            's': [0x2, 0x2, 0xa],
            'c': 0xafafaf,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [-0x5c, 0x35, -0x57],
            's': [0x4d, 0xc, 0x49],
            'c': 0x5f5f5f,
            't': 0xb
        }, {
            'p': [0xaf, 0x42, -0xfe],
            's': [0x6, 0x29, 0x2e],
            'c': 0xa7988e,
            't': 0xb,
            'bo': 0x1
        }, {
            'p': [0xaf, 0x67, -0x14e],
            's': [0x6, 0x15, 0x1b],
            'c': 0xa7988e,
            't': 0xb,
            'bo': 0x1
        }, {
            'p': [0xf2, 0x42, -0x15b],
            's': [0x80, 0x3e, 0x7],
            'c': 0xa7988e,
            't': 0xb,
            'bo': 0x1
        }, {
            'p': [0x10b, 0x42, -0xec],
            's': [0x4e, 0x31, 0x9],
            'c': 0xa7988e,
            't': 0xb,
            'bo': 0x1
        }, {
            'p': [0xaf, 0x42, -0x148],
            's': [0x6, 0x25, 0x2e],
            'c': 0xa7988e,
            't': 0xb,
            'bo': 0x1
        }, {
            'p': [0xb7, 0x42, -0xd4],
            's': [0x26, 0x66, 0x26],
            'c': 0xa7988e,
            't': 0xb
        }, {
            'p': [0xef, 0x41, -0x103],
            's': [0x7d, 0x2, 0x26],
            'c': 0x575757,
            't': 0xb
        }, {
            'p': [0xf0, 0x41, -0x124],
            's': [0x7b, 0x2, 0x1c],
            'c': 0x662828,
            't': 0x5
        }, {
            'p': [-0x66, 0x42, 0x76],
            's': [0x7e, 0x26, 0x5e],
            'c': 0x7d5d5d,
            't': 0xa,
            'bo': 0x1
        }, {
            'p': [-0xa4, 0x42, 0x48],
            's': [0x4, 0x26, 0x4],
            'c': 0xafafaf,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [-0x28, 0x42, 0x48],
            's': [0x4, 0x26, 0x4],
            'c': 0xafafaf,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [-0x66, 0x42, 0x48],
            's': [0x4, 0x3e, 0x5],
            'c': 0xafafaf,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [-0x66, 0x64, 0x48],
            's': [0x78, 0x4, 0x4],
            'c': 0xafafaf,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [-0x66, 0x7e, 0x75],
            's': [0x6, 0x6, 0x66],
            'c': 0xafafaf,
            't': 0x2
        }, {
            'p': [-0x43, 0x73, 0x75],
            's': [0x47, 0x3, 0x63],
            'l': 0x1,
            'r': [0x0, 0x0, -0.35],
            'c': 0x505050,
            't': 0x2
        }, {
            'p': [-0x89, 0x73, 0x75],
            's': [0x45, 0x3, 0x63],
            'l': 0x1,
            'r': [0x0, 0x0, 0.35],
            'c': 0x505050,
            't': 0x2
        }, {
            'p': [-0x89, 0x76, 0x75],
            's': [0x47, 0x2, 0x63],
            'l': 0x1,
            'r': [0x0, 0x0, 0.35],
            't': 0x5
        }, {
            'p': [-0x66, 0x84, 0x75],
            's': [0x6, 0x2, 0x66],
            't': 0x5
        }, {
            'p': [-0x42, 0x76, 0x75],
            's': [0x47, 0x2, 0x63],
            'l': 0x1,
            'r': [0x0, 0x0, -0.35],
            't': 0x5
        }, {
            'p': [-0x66, 0x68, 0x76],
            's': [0x82, 0x6, 0x5e],
            'c': 0x7d5d5d,
            't': 0xa,
            'bo': 0x1
        }, {
            'p': [-0x66, 0x6e, 0x76],
            's': [0x61, 0x5, 0x5e],
            'c': 0x7d5d5d,
            't': 0xa
        }, {
            'p': [-0x66, 0x73, 0x76],
            's': [0x46, 0x5, 0x5e],
            'c': 0x7d5d5d,
            't': 0xa
        }, {
            'p': [-0x66, 0x78, 0x76],
            's': [0x2b, 0x5, 0x5e],
            'c': 0x7d5d5d,
            't': 0xa
        }, {
            'p': [-0x66, 0x7d, 0x76],
            's': [0x11, 0x3, 0x5e],
            'c': 0x7d5d5d,
            't': 0xa
        }, {
            'p': [-0x7f, 0x42, 0x48],
            's': [0x2, 0x15, 0x4],
            'c': 0xafafaf,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [-0x8b, 0x42, 0x48],
            's': [0x2, 0x15, 0x4],
            'c': 0xafafaf,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [-0x85, 0x55, 0x48],
            's': [0xa, 0x2, 0x4],
            'c': 0xafafaf,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [-0xc2, 0x33, 0x4d],
            's': [0x38, 0x31, 0x41],
            'c': 0x877960,
            't': 0xa,
            'bo': 0x1
        }, {
            'p': [-0xb3, 0x69, 0x3b],
            's': [0x27, 0x2, 0x69],
            'l': 0x1,
            'r': [0x0, 0x0, -0.52],
            'c': 0x484848,
            't': 0x2
        }, {
            'p': [-0xb2, 0x6b, 0x3b],
            's': [0x27, 0x2, 0x69],
            'l': 0x1,
            'r': [0x0, 0x0, -0.52],
            't': 0x5
        }, {
            'p': [-0xa7, 0x5d, 0x3c],
            's': [0x4, 0x4, 0x16],
            'c': 0xafafaf,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [0x4c, 0x33, -0x8d],
            's': [0x54, 0x3e, 0x8e],
            'c': 0x877960,
            't': 0xa,
            'bo': 0x1
        }, {
            'p': [0x9e, 0x3e, -0x81],
            's': [0x52, 0x32, 0x80],
            'c': 0x7d6565,
            't': 0xa,
            'bo': 0x1
        }, {
            'p': [-0x30, 0x5c, 0x58],
            's': [0x7, 0x22, 0xc],
            'c': 0x666666,
            't': 0xb
        }, {
            'p': [0x23, 0x42, -0xd3],
            's': [0x4, 0x30, 0x4],
            'c': 0x787878,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [0x75, 0x42, -0xd3],
            's': [0x4, 0x30, 0x4],
            'c': 0x787878,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [0x23, 0x42, -0x47],
            's': [0x4, 0x30, 0x4],
            'c': 0x787878,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [0x23, 0x42, -0xa5],
            's': [0x5, 0x45, 0x4],
            'c': 0x787878,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [0x23, 0x42, -0x75],
            's': [0x5, 0x45, 0x4],
            'c': 0x787878,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [0x4c, 0x42, -0xd3],
            's': [0x4, 0x30, 0x5],
            'c': 0x787878,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [-0xc5, 0x4d, -0x3e],
            's': [0x3a, 0x4, 0x4a],
            'c': 0xafafaf,
            't': 0x2
        }, {
            'p': [0x4c, 0x57, -0xd3],
            's': [0x4e, 0x4, 0x4],
            'c': 0x787878,
            't': 0x2
        }, {
            'p': [0x4c, 0x6e, -0xd3],
            's': [0x4e, 0x4, 0x4],
            'c': 0x787878,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [0x23, 0x6e, -0x8d],
            's': [0x4, 0x4, 0x88],
            'c': 0x787878,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [0x23, 0x57, -0x8d],
            's': [0x4, 0x4, 0x88],
            'c': 0x787878,
            't': 0x2
        }, {
            'p': [0x4c, 0x57, -0x47],
            's': [0x4e, 0x4, 0x4],
            'c': 0x787878,
            't': 0x2
        }, {
            'p': [0x4c, 0x6e, -0x47],
            's': [0x4e, 0x4, 0x4],
            'c': 0x787878,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [0x4c, 0x8a, -0x8d],
            's': [0x66, 0x6, 0x6],
            'c': 0x787878,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [0x4c, 0x7e, -0xb3],
            's': [0x5c, 0x3, 0x51],
            'l': 0x1,
            'r': [-0.35, 0x0, 0x0],
            'c': 0x464545,
            't': 0x2
        }, {
            'p': [0x4c, 0x7e, -0x67],
            's': [0x5c, 0x3, 0x51],
            'l': 0x1,
            'r': [0.35, 0x0, 0x0],
            'c': 0x464545,
            't': 0x2
        }, {
            'p': [0x4c, 0x81, -0x66],
            's': [0x5c, 0x2, 0x51],
            'l': 0x1,
            'r': [0.35, 0x0, 0x0],
            't': 0x5
        }, {
            'p': [0x4c, 0x90, -0x8d],
            's': [0x66, 0x2, 0x6],
            'l': 0x1,
            't': 0x5
        }, {
            'p': [0x4c, 0x72, -0x8d],
            's': [0x54, 0x14, 0x2f],
            'c': 0x877960,
            't': 0xa
        }, {
            'p': [0x4c, 0x86, -0x8d],
            's': [0x54, 0x5, 0x21],
            'c': 0x877960,
            't': 0xa
        }, {
            'p': [0x4c, 0x81, -0xb4],
            's': [0x5c, 0x2, 0x51],
            'l': 0x1,
            'r': [-0.35, 0x0, 0x0],
            't': 0x5
        }, {
            'p': [-0xdd, 0x86, -0xd4],
            's': [0x48, 0x3, 0x64],
            'l': 0x1,
            'r': [0x0, 0x0, 0.35],
            't': 0x5
        }, {
            'p': [0x75, 0x6e, -0x8d],
            's': [0x4, 0x4, 0x88],
            'l': 0x1,
            'c': 0x787878,
            't': 0x2
        }, {
            'p': [0xc6, 0x42, -0xc0],
            's': [0x4, 0x2f, 0x4],
            'c': 0xafafaf,
            't': 0x2
        }, {
            'p': [0xc6, 0x42, -0x42],
            's': [0x4, 0x2f, 0x4],
            'c': 0xafafaf,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [0x9f, 0x54, -0x42],
            's': [0x4, 0x33, 0x5],
            'c': 0xafafaf,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [0xc6, 0x42, -0x81],
            's': [0x5, 0x2f, 0x4],
            'c': 0xafafaf,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [0x9e, 0x42, -0x9e],
            's': [0x55, 0x11, 0x4a],
            'c': 0x6e665e,
            't': 0xb
        }, {
            'p': [0x75, 0x57, -0xbc],
            's': [0x4, 0x4, 0x2a],
            'c': 0x787878,
            't': 0x2
        }, {
            'p': [0x9f, 0x86, -0x81],
            's': [0x5, 0x5, 0x8c],
            'c': 0xafafaf,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [0xb5, 0x7c, -0x81],
            's': [0x32, 0x2, 0x87],
            'l': 0x1,
            'r': [0x0, 0x0, -0.52],
            'c': 0x696969,
            't': 0x2
        }, {
            'p': [0x9f, 0x6d, -0x42],
            's': [0x4a, 0x4, 0x4],
            'c': 0xafafaf,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [0x9f, 0x53, -0xc0],
            's': [0x4, 0x33, 0x5],
            'c': 0xafafaf,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [0x9f, 0x6d, -0xc0],
            's': [0x4a, 0x4, 0x4],
            'c': 0xafafaf,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [0x78, 0x42, -0xc0],
            's': [0x4, 0x2f, 0x4],
            'c': 0xafafaf,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [0x88, 0x7e, -0x81],
            's': [0x33, 0x2, 0x87],
            'l': 0x1,
            'r': [0x0, 0x0, 0.52],
            't': 0x5
        }, {
            'p': [0x88, 0x7c, -0x81],
            's': [0x30, 0x2, 0x87],
            'l': 0x1,
            'r': [0x0, 0x0, 0.52],
            'c': 0x696969,
            't': 0x2
        }, {
            'p': [0xb6, 0x7e, -0x81],
            's': [0x33, 0x2, 0x87],
            'l': 0x1,
            'r': [0x0, 0x0, -0.52],
            't': 0x5
        }, {
            'p': [0x9f, 0x8b, -0x81],
            's': [0x5, 0x2, 0x8c],
            't': 0x5
        }, {
            'p': [0xc6, 0x6d, -0x81],
            's': [0x4, 0x4, 0x7a],
            'c': 0xafafaf,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [0x9e, 0x70, -0x81],
            's': [0x52, 0x5, 0x80],
            'l': 0x1,
            'c': 0x7d6565,
            't': 0xa
        }, {
            'p': [0x9e, 0x75, -0x81],
            's': [0x45, 0x4, 0x80],
            'l': 0x1,
            'c': 0x7d6565,
            't': 0xa
        }, {
            'p': [0x9e, 0x79, -0x81],
            's': [0x37, 0x4, 0x80],
            'l': 0x1,
            'c': 0x7d6565,
            't': 0xa
        }, {
            'p': [0x9e, 0x7d, -0x81],
            's': [0x28, 0x4, 0x80],
            'l': 0x1,
            'c': 0x7d6565,
            't': 0xa
        }, {
            'p': [0x9e, 0x81, -0x81],
            's': [0x1a, 0x4, 0x80],
            'l': 0x1,
            'c': 0x7d6565,
            't': 0xa
        }, {
            'p': [0x9e, 0x85, -0x81],
            's': [0xd, 0x4, 0x80],
            'l': 0x1,
            'c': 0x7d6565,
            't': 0xa
        }, {
            'p': [0x22, 0x3f, -0x87],
            's': [0x2, 0x16, 0x2],
            'c': 0xafafaf,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [0x22, 0x3f, -0x93],
            's': [0x2, 0x16, 0x2],
            'c': 0xafafaf,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [0x22, 0x53, -0x8d],
            's': [0x2, 0x2, 0xa],
            'c': 0xafafaf,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [0x66, 0x40, -0xd4],
            's': [0x2, 0x16, 0x2],
            'c': 0xafafaf,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [0x60, 0x54, -0xd4],
            's': [0xa, 0x2, 0x2],
            'c': 0xafafaf,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [0x5a, 0x40, -0xd4],
            's': [0x2, 0x16, 0x2],
            'c': 0xafafaf,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [0xb7, 0x76, -0xd4],
            's': [0x21, 0x66, 0x21],
            'c': 0xd2c2b8,
            't': 0xb
        }, {
            'p': [0xb7, 0xdb, -0xd4],
            's': [0x26, 0x7, 0x26],
            'c': 0xa7988e,
            't': 0xb
        }, {
            'p': [0xb7, 0x100, -0xd4],
            's': [0x3, 0x3, 0x25],
            'c': 0xa7988e,
            't': 0xb
        }, {
            'p': [0xb7, 0xe3, -0xe7],
            's': [0x26, 0x27, 0x3],
            'l': 0x1,
            'r': [0.52, 0x0, 0x0],
            'c': 0x696969,
            't': 0x2
        }, {
            'p': [0xb7, 0xe3, -0xc0],
            's': [0x26, 0x27, 0x3],
            'l': 0x1,
            'r': [-0.52, 0x0, 0x0],
            'c': 0x696969,
            't': 0x2
        }, {
            'p': [0xcb, 0xe3, -0xd4],
            's': [0x3, 0x27, 0x26],
            'l': 0x1,
            'r': [0x0, 0x0, 0.52],
            'c': 0x696969,
            't': 0x2
        }, {
            'p': [0xa3, 0xe3, -0xd4],
            's': [0x3, 0x27, 0x26],
            'l': 0x1,
            'r': [0x0, 0x0, -0.52],
            'c': 0x696969,
            't': 0x2
        }, {
            'p': [0xb7, 0xe3, -0xd4],
            's': [0x25, 0xb, 0x1d],
            'c': 0xa7988e,
            't': 0xb
        }, {
            'p': [0xb7, 0xee, -0xd4],
            's': [0x25, 0x6, 0x17],
            'c': 0xa7988e,
            't': 0xb
        }, {
            'p': [0xb7, 0xf4, -0xd4],
            's': [0x25, 0x6, 0x10],
            'c': 0xa7988e,
            't': 0xb
        }, {
            'p': [0xb7, 0xfa, -0xd4],
            's': [0x25, 0x6, 0x9],
            'c': 0xa7988e,
            't': 0xb
        }, {
            'p': [0xb7, 0x100, -0xd4],
            's': [0x25, 0x5, 0x3],
            'c': 0xa7988e,
            't': 0xb
        }, {
            'p': [0xb7, 0xe3, -0xd4],
            's': [0x1f, 0xb, 0x25],
            'c': 0xa7988e,
            't': 0xb
        }, {
            'p': [0xb7, 0xee, -0xd4],
            's': [0x18, 0x6, 0x25],
            'c': 0xa7988e,
            't': 0xb
        }, {
            'p': [0xb7, 0xf4, -0xd4],
            's': [0x11, 0x6, 0x25],
            'c': 0xa7988e,
            't': 0xb
        }, {
            'p': [0xb7, 0xfa, -0xd4],
            's': [0xa, 0x6, 0x25],
            'c': 0xa7988e,
            't': 0xb
        }, {
            'p': [0xb7, 0x76, -0xd4],
            's': [0x24, 0x66, 0xa],
            'c': 0x8e8b89,
            't': 0x2
        }, {
            'p': [0xb7, 0x76, -0xd4],
            's': [0xb, 0x66, 0x24],
            'c': 0x8e8b89,
            't': 0x2
        }, {
            'p': [0xb7, 0x103, -0xd4],
            's': [0x3, 0x3, 0x29],
            'c': 0x4d4d4d,
            't': 0x2
        }, {
            'p': [0xb7, 0x103, -0xd4],
            's': [0x28, 0x3, 0x3],
            'c': 0x4d4d4d,
            't': 0x2
        }, {
            'p': [0xa1, 0xe4, -0xd4],
            's': [0x2, 0x27, 0x26],
            'l': 0x1,
            'r': [0x0, 0x0, -0.52],
            't': 0x5
        }, {
            'p': [0xcd, 0xe4, -0xd4],
            's': [0x2, 0x27, 0x26],
            'l': 0x1,
            'r': [0x0, 0x0, 0.52],
            't': 0x5
        }, {
            'p': [0xb7, 0xe4, -0xe9],
            's': [0x26, 0x27, 0x2],
            'l': 0x1,
            'r': [0.52, 0x0, 0x0],
            't': 0x5
        }, {
            'p': [0xb7, 0xe4, -0xbe],
            's': [0x26, 0x27, 0x2],
            'l': 0x1,
            'r': [-0.52, 0x0, 0x0],
            't': 0x5
        }, {
            'p': [0xb7, 0x106, -0xd4],
            's': [0x3, 0x2, 0x29],
            't': 0x5
        }, {
            'p': [0xb7, 0x106, -0xd4],
            's': [0x28, 0x2, 0x3],
            't': 0x5
        }, {
            'p': [0xb7, 0xa2, -0xd4],
            's': [0x2a, 0x7, 0x2a],
            'c': 0x7d7068,
            'bo': 0x1
        }, {
            'p': [0xb7, 0xa9, -0xd4],
            's': [0x2a, 0x2, 0x2a],
            't': 0x5
        }, {
            'p': [0xb7, 0x41, -0xd4],
            's': [0x28, 0x45, 0x28],
            'c': 0x7d7068,
            't': 0xb,
            'bo': 0x1
        }, {
            'p': [0xaf, 0x41, -0x15b],
            's': [0x9, 0x44, 0xa],
            'c': 0x5c514a,
            't': 0xb,
            'bo': 0x1
        }, {
            'p': [0xaf, 0x41, -0xed],
            's': [0x9, 0x43, 0xa],
            'c': 0x615751,
            't': 0xb,
            'bo': 0x1
        }, {
            'p': [0xaf, 0x78, -0x149],
            's': [0x9, 0x5, 0x1a],
            'c': 0x7d7068,
            't': 0xb,
            'bo': 0x1
        }, {
            'p': [0xc7, 0x73, -0xec],
            's': [0x27, 0x9, 0xc],
            'c': 0x645750,
            't': 0xb,
            'bo': 0x1
        }, {
            'p': [0xef, 0x78, -0x15b],
            's': [0x77, 0x9, 0xa],
            'c': 0x736760,
            't': 0xb,
            'bo': 0x1
        }, {
            'p': [0x12f, 0x42, -0x130],
            's': [0x6, 0x2c, 0x50],
            'c': 0xa7988e,
            't': 0xb,
            'bo': 0x1
        }, {
            'p': [0x12f, 0x42, -0xf5],
            's': [0x6, 0x28, 0x6],
            'c': 0xa7988e,
            't': 0xb,
            'bo': 0x1
        }, {
            'p': [0x11f, 0x41, -0x124],
            's': [0x1d, 0xa, 0x31],
            'c': 0x898989,
            't': 0x2
        }, {
            'p': [0x10f, 0x41, -0x124],
            's': [0x3, 0x8, 0x18],
            'c': 0x898989,
            't': 0x2
        }, {
            'p': [0x109, 0x41, -0x124],
            's': [0x3, 0x4, 0x18],
            'c': 0x898989,
            't': 0x2
        }, {
            'p': [0x10c, 0x41, -0x124],
            's': [0x3, 0x6, 0x18],
            'c': 0x898989,
            't': 0x2
        }, {
            'p': [0x111, 0x41, -0x13c],
            's': [0x3, 0xb, 0x3],
            'l': 0x1,
            'c': 0x6b6b6b,
            't': 0x2
        }, {
            'p': [0x111, 0x41, -0x10c],
            's': [0x3, 0xb, 0x3],
            'l': 0x1,
            'c': 0x6b6b6b,
            't': 0x2
        }, {
            'p': [0xea, 0x46, -0x104],
            's': [0x7, 0x1, 0x19],
            'c': 0x372f26,
            't': 0x5
        }, {
            'p': [0xea, 0x43, -0x111],
            's': [0x7, 0x6, 0x1],
            'c': 0x372f26,
            't': 0x5
        }, {
            'p': [0xea, 0x43, -0xf7],
            's': [0x7, 0x6, 0x1],
            'c': 0x372f26,
            't': 0x5
        }, {
            'p': [0xef, 0x46, -0x144],
            's': [0x7, 0x1, 0x19],
            'c': 0x372f26,
            't': 0x5
        }, {
            'p': [0xcf, 0x47, -0x144],
            's': [0x1, 0x5, 0x19],
            'pe': 0x1,
            'c': 0x372f26,
            't': 0x5
        }, {
            'p': [0xe7, 0x47, -0x104],
            's': [0x1, 0x5, 0x19],
            'pe': 0x1,
            'c': 0x372f26,
            't': 0x5
        }, {
            'p': [0xef, 0x43, -0x137],
            's': [0x7, 0x6, 0x1],
            'c': 0x372f26,
            't': 0x5
        }, {
            'p': [0xef, 0x43, -0x151],
            's': [0x7, 0x6, 0x1],
            'c': 0x372f26,
            't': 0x5
        }, {
            'p': [0xd2, 0x46, -0x144],
            's': [0x7, 0x1, 0x19],
            'c': 0x372f26,
            't': 0x5
        }, {
            'p': [0xd2, 0x43, -0x137],
            's': [0x7, 0x6, 0x1],
            'c': 0x372f26,
            't': 0x5
        }, {
            'p': [0xd2, 0x43, -0x151],
            's': [0x7, 0x6, 0x1],
            'c': 0x372f26,
            't': 0x5
        }, {
            'p': [0xec, 0x47, -0x144],
            's': [0x1, 0x5, 0x19],
            'pe': 0x1,
            'c': 0x372f26,
            't': 0x5
        }, {
            'p': [0xc3, 0x42, -0xec],
            's': [0x22, 0x34, 0x9],
            'c': 0xa7988e,
            't': 0xb,
            'bo': 0x1
        }, {
            'p': [0x12f, 0x41, -0x15b],
            's': [0x9, 0x45, 0xa],
            'c': 0x5a524e,
            't': 0xb
        }, {
            'p': [0x12f, 0x41, -0xec],
            's': [0x9, 0x3f, 0xc],
            'c': 0x5f5149,
            't': 0xb,
            'bo': 0x1
        }, {
            'p': [0x130, 0x42, -0x100],
            's': [0x5, 0x1, 0x13],
            'c': 0x7d7068,
            't': 0xb
        }, {
            'p': [0xdc, 0x42, -0xeb],
            's': [0x13, 0x1, 0xa],
            'c': 0x7d7068,
            't': 0xb
        }, {
            'p': [0xaf, 0x41, -0x131],
            's': [0x7, 0x22, 0x5],
            'c': 0x756961,
            't': 0xb,
            'bo': 0x1
        }, {
            'p': [0xaf, 0x41, -0x117],
            's': [0x7, 0x22, 0x5],
            'c': 0x6e625b,
            't': 0xb,
            'bo': 0x1
        }, {
            'p': [0xaf, 0x63, -0x12e],
            's': [0x7, 0x5, 0xb],
            'c': 0x6e6159,
            't': 0xb,
            'bo': 0x1
        }, {
            'p': [0xaf, 0x42, -0x124],
            's': [0x7, 0x1, 0x15],
            'c': 0x7d7068,
            't': 0xb
        }, {
            'p': [0x150, 0x33, -0x12e],
            's': [0x3a, 0x47, 0x3a],
            'c': 0x6a686e,
            't': 0xa,
            'bo': 0x1
        }, {
            'p': [0x16c, 0x42, -0x112],
            's': [0x4, 0x38, 0x4],
            'c': 0xafafaf,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [0x150, 0x42, -0x112],
            's': [0x4, 0x41, 0x5],
            'c': 0xafafaf,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [0x134, 0x42, -0x112],
            's': [0x4, 0x38, 0x4],
            'c': 0xafafaf,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [0x150, 0x5c, -0x112],
            's': [0x34, 0x4, 0x4],
            'c': 0xafafaf,
            't': 0x2
        }, {
            'p': [0x158, 0x40, -0x111],
            's': [0x2, 0x16, 0x2],
            'c': 0xafafaf,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [0x150, 0x82, -0x12e],
            's': [0x6, 0x6, 0x44],
            'c': 0xafafaf,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [0x140, 0x7f, -0x12e],
            's': [0x20, 0x2, 0x41],
            'l': 0x1,
            'r': [0x0, 0x0, 0.35],
            'c': 0x595959,
            't': 0x2
        }, {
            'p': [0x150, 0x76, -0x112],
            's': [0x34, 0x4, 0x4],
            'c': 0xafafaf,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [0x164, 0x40, -0x111],
            's': [0x2, 0x16, 0x2],
            'c': 0xafafaf,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [0x15e, 0x54, -0x111],
            's': [0xa, 0x2, 0x2],
            'c': 0xafafaf,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [0x150, 0x7a, -0x12e],
            's': [0x3a, 0x3, 0x3a],
            'c': 0x6a686e,
            't': 0xa
        }, {
            'p': [0x150, 0x7d, -0x12e],
            's': [0x2d, 0x3, 0x3a],
            'c': 0x6a686e,
            't': 0xa
        }, {
            'p': [0x150, 0x80, -0x12e],
            's': [0x1c, 0x3, 0x3a],
            'c': 0x6a686e,
            't': 0xa
        }, {
            'p': [0x150, 0x83, -0x12e],
            's': [0xf, 0x3, 0x3a],
            'c': 0x6a686e,
            't': 0xa
        }, {
            'p': [0x13f, 0x81, -0x12e],
            's': [0x20, 0x2, 0x41],
            'l': 0x1,
            'r': [0x0, 0x0, 0.35],
            't': 0x5
        }, {
            'p': [0x162, 0x81, -0x12e],
            's': [0x20, 0x2, 0x41],
            'l': 0x1,
            'r': [0x0, 0x0, -0.35],
            't': 0x5
        }, {
            'p': [0x161, 0x7f, -0x12e],
            's': [0x20, 0x2, 0x41],
            'l': 0x1,
            'r': [0x0, 0x0, -0.35],
            'c': 0x595959,
            't': 0x2
        }, {
            'p': [0x150, 0x88, -0x12e],
            's': [0x6, 0x2, 0x44],
            't': 0x5
        }, {
            'p': [0xb9, 0x54, -0x41],
            's': [0x2, 0x14, 0x2],
            'l': 0x1,
            'c': 0xafafaf,
            't': 0x2
        }, {
            'p': [0xad, 0x54, -0x41],
            's': [0x2, 0x14, 0x2],
            'l': 0x1,
            'c': 0xafafaf,
            't': 0x2
        }, {
            'p': [0xb3, 0x66, -0x41],
            's': [0xa, 0x2, 0x2],
            'l': 0x1,
            'c': 0xafafaf,
            't': 0x2
        }, {
            'p': [0x115, 0x33, -0xbe],
            's': [0x58, 0x3f, 0x56],
            'c': 0x5f6e68,
            't': 0xa,
            'bo': 0x1
        }, {
            'p': [0x140, 0x33, -0xe8],
            's': [0x4, 0x3f, 0x4],
            'c': 0x787878,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [0x119, 0x33, -0x6e],
            's': [0x6a, 0x48, 0x50],
            'c': 0x877960,
            't': 0xa,
            'bo': 0x1
        }, {
            'p': [0x14d, 0x42, -0x95],
            's': [0x4, 0x3a, 0x4],
            'c': 0xafafaf,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [0x140, 0x33, -0x98],
            's': [0x4, 0x3f, 0x4],
            'c': 0x787878,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [0x140, 0x33, -0xc0],
            's': [0x5, 0x4d, 0x4],
            'c': 0x787878,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [0xea, 0x33, -0xc0],
            's': [0x5, 0x4d, 0x4],
            'c': 0x787878,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [0xea, 0x33, -0x98],
            's': [0x4, 0x3f, 0x4],
            'c': 0x787878,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [0xea, 0x33, -0xe8],
            's': [0x4, 0x3f, 0x4],
            'c': 0x787878,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [0xe5, 0x42, -0x95],
            's': [0x4, 0x3a, 0x4],
            'c': 0xafafaf,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [0x118, 0x42, 0x26],
            's': [0x4, 0x41, 0x4],
            'c': 0xafafaf,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [0xe5, 0x42, -0x47],
            's': [0x4, 0x3a, 0x4],
            'c': 0xafafaf,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [0x14d, 0x42, -0x6e],
            's': [0x5, 0x48, 0x4],
            'c': 0xafafaf,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [0x140, 0x58, -0xc0],
            's': [0x4, 0x4, 0x4c],
            'c': 0x787878,
            't': 0x2
        }, {
            'p': [0x140, 0x6e, -0xc0],
            's': [0x4, 0x4, 0x4c],
            'c': 0x787878,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [0xea, 0x58, -0xc0],
            's': [0x4, 0x4, 0x4c],
            'c': 0x787878,
            't': 0x2
        }, {
            'p': [0xea, 0x6e, -0xc0],
            's': [0x4, 0x4, 0x4c],
            'c': 0x787878,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [0x12d, 0x6e, -0xe8],
            's': [0x22, 0x4, 0x4],
            'c': 0x787878,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [0x12d, 0x58, -0xe8],
            's': [0x22, 0x4, 0x4],
            'l': 0x1,
            'c': 0x787878,
            't': 0x2
        }, {
            'p': [0x115, 0x7f, -0xc0],
            's': [0x66, 0x5, 0x5],
            'c': 0x787878,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [0x115, 0x77, -0xa6],
            's': [0x61, 0x2, 0x3b],
            'l': 0x1,
            'r': [0.35, 0x0, 0x0],
            'c': 0x525252,
            't': 0x2
        }, {
            'p': [0x115, 0x79, -0xd6],
            's': [0x61, 0x2, 0x2f],
            'l': 0x1,
            'r': [-0.35, 0x0, 0x0],
            'c': 0x525252,
            't': 0x2
        }, {
            'p': [0x115, 0x72, -0xbe],
            's': [0x58, 0x3, 0x56],
            'c': 0x5f6e68,
            't': 0xa
        }, {
            'p': [0x115, 0x75, -0xbe],
            's': [0x58, 0x3, 0x44],
            'c': 0x5f6e68,
            't': 0xa
        }, {
            'p': [0x115, 0x78, -0xbe],
            's': [0x58, 0x3, 0x32],
            'c': 0x5f6e68,
            't': 0xa
        }, {
            'p': [0x115, 0x7b, -0xbe],
            's': [0x58, 0x3, 0x1e],
            'c': 0x5f6e68,
            't': 0xa
        }, {
            'p': [0x115, 0x7e, -0xbe],
            's': [0x58, 0x2, 0x10],
            'c': 0x5f6e68,
            't': 0xa
        }, {
            'p': [0x115, 0x79, -0xa5],
            's': [0x61, 0x2, 0x3b],
            'l': 0x1,
            'r': [0.35, 0x0, 0x0],
            't': 0x5
        }, {
            'p': [0x115, 0x7b, -0xd7],
            's': [0x61, 0x2, 0x2f],
            'l': 0x1,
            'r': [-0.35, 0x0, 0x0],
            't': 0x5
        }, {
            'p': [0x115, 0x84, -0xc0],
            's': [0x66, 0x2, 0x5],
            't': 0x5
        }, {
            'p': [0x14d, 0x5d, -0x6e],
            's': [0x4, 0x4, 0x4a],
            'c': 0xafafaf,
            't': 0x2
        }, {
            'p': [0x14d, 0x78, -0x6e],
            's': [0x4, 0x4, 0x4a],
            'c': 0xafafaf,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [0xb, 0x89, -0x1bc],
            's': [0x64, 0x5, 0x5],
            'c': 0x787878,
            't': 0x2
        }, {
            'p': [0xb, 0x8e, -0x1bc],
            's': [0x64, 0x2, 0x5],
            't': 0x5
        }, {
            'p': [0xa, 0x80, -0x1a0],
            's': [0x61, 0x2, 0x3d],
            'l': 0x1,
            'r': [0.35, 0x0, 0x0],
            'c': 0x525252,
            't': 0x2
        }, {
            'p': [0xa, 0x82, -0x1a0],
            's': [0x61, 0x2, 0x3e],
            'l': 0x1,
            'r': [0.35, 0x0, 0x0],
            't': 0x5
        }, {
            'p': [0x2b, 0x45, -0x190],
            's': [0xd, 0x46, 0x7],
            'c': 0x616161,
            't': 0xb
        }, {
            'p': [0xe5, 0x42, -0x6e],
            's': [0x5, 0x48, 0x4],
            'c': 0xafafaf,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [0xe5, 0x5d, -0x6e],
            's': [0x4, 0x4, 0x4a],
            'c': 0xafafaf,
            't': 0x2
        }, {
            'p': [0xe5, 0x78, -0x6e],
            's': [0x4, 0x4, 0x4a],
            'c': 0xafafaf,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [0x119, 0x78, -0x95],
            's': [0x64, 0x4, 0x4],
            'c': 0xafafaf,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [0x119, 0x78, -0x47],
            's': [0x64, 0x4, 0x4],
            'c': 0xafafaf,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [0x119, 0x5d, -0x95],
            's': [0x64, 0x4, 0x4],
            'l': 0x1,
            'c': 0xafafaf,
            't': 0x2
        }, {
            'p': [0x119, 0x89, -0x6e],
            's': [0x78, 0x5, 0x5],
            'c': 0xafafaf,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [0x119, 0x83, -0x84],
            's': [0x71, 0x2, 0x32],
            'l': 0x1,
            'r': [-0.35, 0x0, 0x0],
            'c': 0x646464,
            't': 0x2
        }, {
            'p': [0x119, 0x85, -0x85],
            's': [0x71, 0x2, 0x32],
            'l': 0x1,
            'r': [-0.35, 0x0, 0x0],
            't': 0x5
        }, {
            'p': [0x119, 0x83, -0x59],
            's': [0x71, 0x2, 0x32],
            'l': 0x1,
            'r': [0.35, 0x0, 0x0],
            'c': 0x646464,
            't': 0x2
        }, {
            'p': [0x119, 0x85, -0x58],
            's': [0x71, 0x2, 0x32],
            'l': 0x1,
            'r': [0.35, 0x0, 0x0],
            't': 0x5
        }, {
            'p': [0x119, 0x8e, -0x6e],
            's': [0x78, 0x2, 0x5],
            't': 0x5
        }, {
            'p': [0x119, 0x7c, -0x6e],
            's': [0x6a, 0x4, 0x50],
            'c': 0x877960,
            't': 0xa
        }, {
            'p': [0x119, 0x80, -0x6e],
            's': [0x6a, 0x3, 0x3c],
            'c': 0x877960,
            't': 0xa
        }, {
            'p': [0x119, 0x83, -0x6e],
            's': [0x6a, 0x4, 0x2b],
            'c': 0x877960,
            't': 0xa
        }, {
            'p': [0x119, 0x87, -0x6e],
            's': [0x6a, 0x3, 0x15],
            'c': 0x877960,
            't': 0xa
        }, {
            'p': [0x107, 0x33, -0x2b],
            's': [0x3c, 0x3e, 0x48],
            'c': 0x6a686e,
            't': 0xa,
            'bo': 0x1
        }, {
            'p': [0x107, 0x7d, -0x28],
            's': [0x47, 0x2, 0x46],
            'l': 0x1,
            'r': [0x0, 0x0, 0.35],
            'c': 0x696969,
            't': 0x2
        }, {
            'p': [0x106, 0x7f, -0x28],
            's': [0x47, 0x2, 0x46],
            'l': 0x1,
            'r': [0x0, 0x0, 0.35],
            't': 0x5
        }, {
            'p': [0x119, 0x5d, -0x47],
            's': [0x64, 0x4, 0x4],
            'c': 0xafafaf,
            't': 0x2
        }, {
            'p': [0x124, 0x42, -0x44],
            's': [0x4, 0x47, 0x4],
            'c': 0xafafaf,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [0x124, 0x42, -0x8],
            's': [0x4, 0x47, 0x4],
            'c': 0xafafaf,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [0xea, 0x42, -0x8],
            's': [0x4, 0x2f, 0x4],
            'c': 0xafafaf,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [0xea, 0x42, -0x44],
            's': [0x4, 0x2f, 0x4],
            'c': 0xafafaf,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [0x107, 0x6d, -0x8],
            's': [0x36, 0x4, 0x4],
            'c': 0xafafaf,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [0xea, 0x6d, -0x26],
            's': [0x4, 0x4, 0x38],
            'c': 0xafafaf,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [0x124, 0x6d, -0x26],
            's': [0x4, 0x4, 0x38],
            'l': 0x1,
            'c': 0xafafaf,
            't': 0x2
        }, {
            'p': [0x106, 0x71, -0x2b],
            's': [0x3b, 0x4, 0x48],
            'c': 0x6a686e,
            't': 0xa
        }, {
            'p': [0x10b, 0x75, -0x2b],
            's': [0x32, 0x4, 0x48],
            'c': 0x6a686e,
            't': 0xa
        }, {
            'p': [0x110, 0x79, -0x2b],
            's': [0x26, 0x4, 0x48],
            'c': 0x6a686e,
            't': 0xa
        }, {
            'p': [0x115, 0x7d, -0x26],
            's': [0x1c, 0x4, 0x3e],
            'c': 0x6a686e,
            't': 0xa
        }, {
            'p': [0x11b, 0x81, -0x26],
            's': [0x11, 0x4, 0x3e],
            'c': 0x6a686e,
            't': 0xa
        }, {
            'p': [0x120, 0x85, -0x26],
            's': [0x6, 0x3, 0x3e],
            'c': 0x6a686e,
            't': 0xa
        }, {
            'p': [0x124, 0x71, -0x25],
            's': [0x2, 0x17, 0x3d],
            'c': 0x6a686e,
            't': 0xa,
            'bo': 0x1
        }, {
            'p': [0xe9, 0x54, -0x20],
            's': [0x2, 0x14, 0x2],
            'c': 0xafafaf,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [0xe9, 0x54, -0x2c],
            's': [0x2, 0x14, 0x2],
            'c': 0xafafaf,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [0xe9, 0x66, -0x26],
            's': [0x2, 0x2, 0xa],
            'c': 0xafafaf,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [0x141, 0x42, -0xa6],
            's': [0x2, 0x14, 0x2],
            'c': 0xafafaf,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [0x141, 0x42, -0xb2],
            's': [0x2, 0x14, 0x2],
            'c': 0xafafaf,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [0x141, 0x54, -0xac],
            's': [0x2, 0x2, 0xa],
            'c': 0xafafaf,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [0x19b, 0x42, -0xd4],
            's': [0x5a, 0x26, 0x8a],
            'c': 0x7d5d5d,
            't': 0xa,
            'bo': 0x1
        }, {
            'p': [0x19d, 0x42, -0x6],
            's': [0x5a, 0x32, 0x58],
            'c': 0x7d5d5d,
            't': 0xa,
            'bo': 0x1
        }, {
            'p': [0xd0, 0x42, 0x5a],
            's': [0x8c, 0x50, 0x58],
            'c': 0x7d5d5d,
            't': 0xa,
            'bo': 0x1
        }, {
            'p': [0x14, 0x42, 0x60],
            's': [0x74, 0x35, 0x50],
            'c': 0x8e8d7a,
            't': 0xa,
            'bo': 0x1
        }, {
            'p': [0x1a9, 0x33, -0x60],
            's': [0x5a, 0x47, 0x5c],
            'c': 0x6a686e,
            't': 0xa,
            'bo': 0x1
        }, {
            'p': [0x14e, 0x33, 0x50],
            's': [0x6e, 0x4f, 0x56],
            'c': 0x5f6e68,
            't': 0xa,
            'bo': 0x1
        }, {
            'p': [-0x25, 0x33, 0x39],
            's': [0x4, 0x45, 0x4],
            'c': 0x787878,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [0x14, 0x33, 0x39],
            's': [0x4, 0x59, 0x5],
            'c': 0x787878,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [0x14, 0x5b, 0x39],
            's': [0x6e, 0x4, 0x4],
            'c': 0x787878,
            't': 0x2
        }, {
            'p': [0x14, 0x8b, 0x60],
            's': [0x5, 0x5, 0x5c],
            'c': 0x787878,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [-0xb, 0x82, 0x60],
            's': [0x41, 0x2, 0x58],
            'l': 0x1,
            'r': [0x0, 0x0, 0.35],
            'c': 0x484848,
            't': 0x2
        }, {
            'p': [0x33, 0x82, 0x60],
            's': [0x41, 0x2, 0x58],
            'l': 0x1,
            'r': [0x0, 0x0, -0.35],
            'c': 0x484848,
            't': 0x2
        }, {
            'p': [0x14, 0x90, 0x60],
            's': [0x5, 0x2, 0x5c],
            't': 0x5
        }, {
            'p': [-0xc, 0x84, 0x60],
            's': [0x41, 0x2, 0x58],
            'l': 0x1,
            'r': [0x0, 0x0, 0.35],
            't': 0x5
        }, {
            'p': [0x34, 0x84, 0x60],
            's': [0x41, 0x2, 0x58],
            'l': 0x1,
            'r': [0x0, 0x0, -0.35],
            't': 0x5
        }, {
            'p': [0x14, 0x74, 0x39],
            's': [0x6e, 0x4, 0x4],
            'c': 0x787878,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [-0x25, 0x5b, 0x60],
            's': [0x4, 0x4, 0x4a],
            'c': 0x787878,
            't': 0x2
        }, {
            'p': [-0x25, 0x74, 0x60],
            's': [0x4, 0x4, 0x4a],
            'c': 0x787878,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [0x14, 0x77, 0x60],
            's': [0x71, 0x6, 0x50],
            'c': 0x8e8d7a,
            't': 0xa,
            'bo': 0x1
        }, {
            'p': [0x14, 0x7d, 0x60],
            's': [0x5b, 0x4, 0x50],
            'c': 0x8e8d7a,
            't': 0xa
        }, {
            'p': [0x14, 0x81, 0x60],
            's': [0x45, 0x4, 0x50],
            'c': 0x8e8d7a,
            't': 0xa
        }, {
            'p': [0x14, 0x85, 0x60],
            's': [0x2e, 0x4, 0x50],
            'c': 0x8e8d7a,
            't': 0xa
        }, {
            'p': [0x14, 0x89, 0x60],
            's': [0x19, 0x4, 0x50],
            'c': 0x8e8d7a,
            't': 0xa
        }, {
            'p': [-0xf, 0x42, 0x39],
            's': [0x2, 0x15, 0x4],
            'c': 0xafafaf,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [-0x3, 0x42, 0x39],
            's': [0x2, 0x15, 0x4],
            'c': 0xafafaf,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [-0x9, 0x55, 0x39],
            's': [0xa, 0x2, 0x4],
            'c': 0xafafaf,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [0x16f, 0x42, -0x90],
            's': [0x4, 0x26, 0x4],
            'c': 0x787878,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [0x16f, 0x42, -0xd4],
            's': [0x5, 0x3e, 0x4],
            'c': 0x787878,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [0x16f, 0x64, -0xd4],
            's': [0x4, 0x4, 0x84],
            'c': 0x787878,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [0x179, 0x64, -0x90],
            's': [0x10, 0x4, 0x4],
            'c': 0x787878,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [0x19c, 0x7f, -0xd4],
            's': [0x6a, 0x5, 0x5],
            'c': 0x787878,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [0x19c, 0x74, -0xf8],
            's': [0x62, 0x2, 0x4b],
            'l': 0x1,
            'r': [-0.35, 0x0, 0x0],
            'c': 0x464646,
            't': 0x2
        }, {
            'p': [0x19c, 0x76, -0xf9],
            's': [0x62, 0x2, 0x4b],
            'l': 0x1,
            'r': [-0.35, 0x0, 0x0],
            't': 0x5
        }, {
            'p': [0x19c, 0x76, -0xae],
            's': [0x62, 0x2, 0x4d],
            'l': 0x1,
            'r': [0.35, 0x0, 0x0],
            't': 0x5
        }, {
            'p': [0x19c, 0x74, -0xaf],
            's': [0x62, 0x2, 0x4d],
            'l': 0x1,
            'r': [0.35, 0x0, 0x0],
            'c': 0x464646,
            't': 0x2
        }, {
            'p': [0x19c, 0x84, -0xd4],
            's': [0x6a, 0x2, 0x5],
            't': 0x5
        }, {
            'p': [0x19b, 0x68, -0xd4],
            's': [0x5a, 0x4, 0x8a],
            'c': 0x7d5d5d,
            't': 0xa
        }, {
            'p': [0x19b, 0x6c, -0xd4],
            's': [0x5a, 0x4, 0x75],
            'c': 0x7d5d5d,
            't': 0xa
        }, {
            'p': [0x19b, 0x70, -0xd4],
            's': [0x5a, 0x4, 0x5e],
            'c': 0x7d5d5d,
            't': 0xa
        }, {
            'p': [0x19b, 0x74, -0xd4],
            's': [0x5a, 0x4, 0x49],
            'c': 0x7d5d5d,
            't': 0xa
        }, {
            'p': [0x19b, 0x7c, -0xd4],
            's': [0x5a, 0x4, 0x1d],
            'c': 0x7d5d5d,
            't': 0xa
        }, {
            'p': [0x19b, 0x78, -0xd4],
            's': [0x5a, 0x4, 0x33],
            'c': 0x7d5d5d,
            't': 0xa
        }, {
            'p': [0x19b, 0x80, -0xd4],
            's': [0x5a, 0x1, 0xb],
            'c': 0x7d5d5d,
            't': 0xa
        }, {
            'p': [0x16e, 0x42, -0xed],
            's': [0x2, 0x14, 0x2],
            'l': 0x1,
            'c': 0xafafaf,
            't': 0x2
        }, {
            'p': [0x16e, 0x42, -0xf9],
            's': [0x2, 0x14, 0x2],
            'l': 0x1,
            'c': 0xafafaf,
            't': 0x2
        }, {
            'p': [0x16e, 0x54, -0xf3],
            's': [0x2, 0x2, 0xa],
            'l': 0x1,
            'c': 0xafafaf,
            't': 0x2
        }, {
            'p': [0x17d, 0x42, -0x8d],
            's': [0x4, 0x39, 0x4],
            'c': 0xafafaf,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [0x17d, 0x42, -0x33],
            's': [0x4, 0x39, 0x4],
            'c': 0xafafaf,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [0x17d, 0x42, -0x60],
            's': [0x5, 0x49, 0x4],
            'c': 0xafafaf,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [0x17d, 0x77, -0x60],
            's': [0x4, 0x4, 0x56],
            'c': 0xafafaf,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [0x1ab, 0x77, -0x60],
            's': [0x58, 0x4, 0x5e],
            'l': 0x1,
            'c': 0xafafaf,
            't': 0x2
        }, {
            'p': [0x1ab, 0x8a, -0x60],
            's': [0x6c, 0x6, 0x6],
            'c': 0xafafaf,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [0x1ab, 0x83, -0x79],
            's': [0x66, 0x2, 0x34],
            'l': 0x1,
            'r': [-0.35, 0x0, 0x0],
            'c': 0x5c5c5c,
            't': 0x2
        }, {
            'p': [0x1ab, 0x83, -0x46],
            's': [0x66, 0x2, 0x34],
            'l': 0x1,
            'r': [0.35, 0x0, 0x0],
            'c': 0x5c5c5c,
            't': 0x2
        }, {
            'p': [0x1ab, 0x85, -0x45],
            's': [0x66, 0x2, 0x34],
            'l': 0x1,
            'r': [0.35, 0x0, 0x0],
            't': 0x5
        }, {
            'p': [0x1ab, 0x85, -0x7a],
            's': [0x66, 0x2, 0x34],
            'l': 0x1,
            'r': [-0.35, 0x0, 0x0],
            't': 0x5
        }, {
            'p': [0x1ab, 0x90, -0x60],
            's': [0x6c, 0x2, 0x6],
            't': 0x5
        }, {
            'p': [0x1a9, 0x7b, -0x60],
            's': [0x5a, 0x5, 0x5b],
            'c': 0x6a686e,
            't': 0xa
        }, {
            'p': [0x1a9, 0x80, -0x60],
            's': [0x5a, 0x4, 0x45],
            'c': 0x6a686e,
            't': 0xa
        }, {
            'p': [0x1a9, 0x84, -0x60],
            's': [0x5a, 0x4, 0x2f],
            'c': 0x6a686e,
            't': 0xa
        }, {
            'p': [0x1a9, 0x88, -0x60],
            's': [0x5a, 0x4, 0x19],
            'c': 0x6a686e,
            't': 0xa
        }, {
            'p': [0x171, 0x42, -0x31],
            's': [0x4, 0x33, 0x4],
            'c': 0x787878,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [0x171, 0x42, 0x23],
            's': [0x4, 0x33, 0x4],
            'c': 0x787878,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [0x171, 0x42, -0x7],
            's': [0x5, 0x41, 0x4],
            'c': 0x787878,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [0x171, 0x71, -0x7],
            's': [0x4, 0x4, 0x50],
            'c': 0x787878,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [0x178, 0x71, -0x31],
            's': [0xa, 0x4, 0x4],
            'c': 0x787878,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [0x14d, 0x42, -0x47],
            's': [0x4, 0x3a, 0x4],
            'c': 0xafafaf,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [0x184, 0x42, 0x26],
            's': [0x4, 0x41, 0x4],
            'c': 0xafafaf,
            't': 0x2
        }, {
            'p': [0x14e, 0x42, 0x26],
            's': [0x4, 0x53, 0x5],
            'c': 0xafafaf,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [0x14e, 0x5f, 0x26],
            's': [0x68, 0x4, 0x4],
            'c': 0xafafaf,
            't': 0x2
        }, {
            'p': [0x14e, 0x7f, 0x26],
            's': [0x68, 0x4, 0x4],
            'c': 0xafafaf,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [0x118, 0x7f, 0x31],
            's': [0x4, 0x4, 0x12],
            'l': 0x1,
            'c': 0xafafaf,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [0x118, 0x5f, 0x31],
            's': [0x4, 0x4, 0x12],
            'c': 0xafafaf,
            't': 0x2
        }, {
            'p': [0x115, 0x42, 0x2f],
            's': [0x4, 0x51, 0x4],
            'c': 0x787878,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [0x8b, 0x42, 0x2f],
            's': [0x4, 0x51, 0x4],
            'c': 0x787878,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [0x6b, 0x42, -0xc],
            's': [0x5c, 0x13, 0x91],
            'c': 0x5f5f5f,
            't': 0xb
        }, {
            'p': [0x40, 0x55, 0x1c],
            's': [0x2, 0x26, 0x3b],
            'pe': 0x1,
            'c': 0x5f6e68,
            't': 0xa,
            'bo': 0x1
        }, {
            'p': [0x40, 0x55, -0x2b],
            's': [0x2, 0x26, 0x35],
            'pe': 0x1,
            'c': 0x5f6e68,
            't': 0xa,
            'bo': 0x1
        }, {
            'p': [0x96, 0x55, -0x1b],
            's': [0x2, 0x26, 0x4d],
            'pe': 0x1,
            'c': 0x5f6e68,
            't': 0xa,
            'bo': 0x1
        }, {
            'p': [0x96, 0x55, 0x22],
            's': [0x2, 0x26, 0x13],
            'pe': 0x1,
            'c': 0x5f6e68,
            't': 0xa,
            'bo': 0x1
        }, {
            'p': [0xd0, 0x42, 0x2f],
            's': [0x4, 0x68, 0x5],
            'c': 0x787878,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [0xd0, 0x70, 0x2f],
            's': [0x86, 0x4, 0x4],
            'l': 0x1,
            'c': 0x787878,
            't': 0x2
        }, {
            'p': [0xd0, 0x8f, 0x2f],
            's': [0x86, 0x4, 0x4],
            'c': 0x787878,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [0xfc, 0x42, 0x51],
            's': [0x55, 0x11, 0x49],
            'c': 0x5f5f5f
        }, {
            'p': [0x115, 0x8f, 0x57],
            's': [0x4, 0x4, 0x4c],
            'l': 0x1,
            'c': 0x787878,
            't': 0x2
        }, {
            'p': [0x19d, 0x82, -0x7],
            's': [0x6b, 0x5, 0x5],
            'c': 0x787878,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [0x19d, 0x7c, -0x1d],
            's': [0x63, 0x2, 0x33],
            'l': 0x1,
            'r': [-0.35, 0x0, 0x0],
            'c': 0x4d4d4d,
            't': 0x2
        }, {
            'p': [0x19d, 0x7c, 0x10],
            's': [0x63, 0x2, 0x36],
            'l': 0x1,
            'r': [0.35, 0x0, 0x0],
            'c': 0x4d4d4d,
            't': 0x2
        }, {
            'p': [0x19d, 0x7e, 0x11],
            's': [0x63, 0x2, 0x36],
            'l': 0x1,
            'r': [0.35, 0x0, 0x0],
            't': 0x5
        }, {
            'p': [0x19d, 0x7e, -0x1e],
            's': [0x63, 0x2, 0x33],
            'l': 0x1,
            'r': [-0.35, 0x0, 0x0],
            't': 0x5
        }, {
            'p': [0x19d, 0x87, -0x7],
            's': [0x6b, 0x2, 0x5],
            't': 0x5
        }, {
            'p': [0x19d, 0x75, -0x6],
            's': [0x5a, 0x3, 0x58],
            'c': 0x7d5d5d,
            't': 0xa
        }, {
            'p': [0x19d, 0x78, -0x6],
            's': [0x5a, 0x3, 0x47],
            'c': 0x7d5d5d,
            't': 0xa
        }, {
            'p': [0x19d, 0x7b, -0x6],
            's': [0x5a, 0x3, 0x3a],
            'c': 0x7d5d5d,
            't': 0xa
        }, {
            'p': [0x19d, 0x7e, -0x6],
            's': [0x5a, 0x3, 0x25],
            'c': 0x7d5d5d,
            't': 0xa
        }, {
            'p': [0x19d, 0x81, -0x6],
            's': [0x5a, 0x3, 0x16],
            'c': 0x7d5d5d,
            't': 0xa
        }, {
            'p': [0x14e, 0x95, 0x50],
            's': [0x5, 0x5, 0x6a],
            'c': 0xafafaf,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [0x16c, 0x8c, 0x50],
            's': [0x3d, 0x2, 0x61],
            'l': 0x1,
            'r': [0x0, 0x0, -0.35],
            'c': 0x6b6b6b,
            't': 0x2
        }, {
            'p': [0x12f, 0x8c, 0x50],
            's': [0x3d, 0x2, 0x61],
            'l': 0x1,
            'r': [0x0, 0x0, 0.35],
            'c': 0x6b6b6b,
            't': 0x2
        }, {
            'p': [0x14e, 0x9a, 0x50],
            's': [0x5, 0x2, 0x6a],
            't': 0x5
        }, {
            'p': [0x130, 0x8f, 0x50],
            's': [0x3f, 0x2, 0x61],
            'l': 0x1,
            'r': [0x0, 0x0, 0.35],
            't': 0x5
        }, {
            'p': [0x16c, 0x8e, 0x50],
            's': [0x3f, 0x2, 0x61],
            'l': 0x1,
            'r': [0x0, 0x0, -0.35],
            't': 0x5
        }, {
            'p': [0x14e, 0x82, 0x50],
            's': [0x6e, 0x5, 0x56],
            'c': 0x5f6e68,
            't': 0xa
        }, {
            'p': [0x14e, 0x87, 0x50],
            's': [0x59, 0x4, 0x56],
            'c': 0x5f6e68,
            't': 0xa
        }, {
            'p': [0x14e, 0x8b, 0x50],
            's': [0x43, 0x4, 0x56],
            'c': 0x5f6e68,
            't': 0xa
        }, {
            'p': [0x14e, 0x8f, 0x50],
            's': [0x2d, 0x4, 0x56],
            'c': 0x5f6e68,
            't': 0xa
        }, {
            'p': [0x14e, 0x93, 0x50],
            's': [0x17, 0x4, 0x56],
            'c': 0x5f6e68,
            't': 0xa
        }, {
            'p': [0xd0, 0xa9, 0x5a],
            's': [0x6, 0x6, 0x68],
            'c': 0x787878,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [0xf6, 0x9e, 0x5a],
            's': [0x51, 0x2, 0x61],
            'l': 0x1,
            'r': [0x0, 0x0, -0.35],
            'c': 0x464646,
            't': 0x2
        }, {
            'p': [0xaa, 0x9f, 0x5a],
            's': [0x51, 0x2, 0x61],
            'l': 0x1,
            'r': [0x0, 0x0, 0.35],
            'c': 0x464646,
            't': 0x2
        }, {
            'p': [0xa9, 0xa1, 0x5a],
            's': [0x51, 0x2, 0x61],
            'l': 0x1,
            'r': [0x0, 0x0, 0.35],
            't': 0x5
        }, {
            'p': [0xf7, 0xa0, 0x5a],
            's': [0x51, 0x2, 0x61],
            'l': 0x1,
            'r': [0x0, 0x0, -0.35],
            't': 0x5
        }, {
            'p': [0xd0, 0xaf, 0x5a],
            's': [0x6, 0x2, 0x68],
            't': 0x5
        }, {
            'p': [0xd0, 0x93, 0x5a],
            's': [0x8c, 0x3, 0x58],
            'c': 0x7d5d5d,
            't': 0xa
        }, {
            'p': [0xd0, 0x96, 0x5a],
            's': [0x7c, 0x4, 0x58],
            'c': 0x7d5d5d,
            't': 0xa
        }, {
            'p': [0xd0, 0x9a, 0x5a],
            's': [0x66, 0x4, 0x58],
            'c': 0x7d5d5d,
            't': 0xa
        }, {
            'p': [0xd0, 0x9e, 0x5a],
            's': [0x51, 0x4, 0x58],
            'c': 0x7d5d5d,
            't': 0xa
        }, {
            'p': [0xd0, 0xa2, 0x5a],
            's': [0x3a, 0x4, 0x58],
            'c': 0x7d5d5d,
            't': 0xa
        }, {
            'p': [0xd0, 0xa6, 0x5a],
            's': [0x24, 0x4, 0x58],
            'c': 0x7d5d5d,
            't': 0xa
        }, {
            'p': [0xd0, 0xaa, 0x5a],
            's': [0xf, 0x3, 0x58],
            'c': 0x7d5d5d,
            't': 0xa
        }, {
            'p': [-0x48, 0x57, -0x2d],
            's': [0x4, 0x4, 0x30],
            'c': 0x727272,
            't': 0x2
        }, {
            'p': [-0x65, 0x6e, 0x5],
            's': [0x3e, 0x4, 0x2c],
            'c': 0x727272,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [0x170, 0x54, -0x16],
            's': [0x2, 0x16, 0x2],
            'c': 0xafafaf,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [0x170, 0x54, -0x22],
            's': [0x2, 0x16, 0x2],
            'c': 0xafafaf,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [0x170, 0x68, -0x1c],
            's': [0x2, 0x2, 0xa],
            'c': 0xafafaf,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [0xb3, 0x54, 0x2f],
            's': [0x2, 0x15, 0x4],
            'l': 0x1,
            'c': 0xafafaf,
            't': 0x2
        }, {
            'p': [0xa7, 0x54, 0x2f],
            's': [0x2, 0x15, 0x4],
            'l': 0x1,
            'c': 0xafafaf,
            't': 0x2
        }, {
            'p': [0xad, 0x67, 0x2f],
            's': [0xa, 0x2, 0x4],
            'l': 0x1,
            'c': 0xafafaf,
            't': 0x2
        }, {
            'p': [0x6b, 0x92, -0x9],
            's': [0x65, 0x5, 0x5],
            'c': 0x787878,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [0x6b, 0x86, 0x1a],
            's': [0x5d, 0x2, 0x4a],
            'l': 0x1,
            'r': [0.35, 0x0, 0x0],
            'c': 0x4a4a4a,
            't': 0x2
        }, {
            'p': [0x96, 0x42, -0x40],
            's': [0x4, 0x3a, 0x4],
            'c': 0x787878,
            't': 0x2
        }, {
            'p': [0x97, 0x42, -0x9],
            's': [0x3, 0x51, 0x4],
            'c': 0x787878,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [0x96, 0x42, 0x2c],
            's': [0x4, 0x3a, 0x4],
            'c': 0x787878,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [0x6b, 0x55, 0x32],
            's': [0x54, 0x26, 0x13],
            'c': 0x5f6e68,
            't': 0xa,
            'bo': 0x1
        }, {
            'p': [0x6b, 0x55, -0x2c],
            's': [0x54, 0x26, 0x33],
            'c': 0x5f6e68,
            't': 0xa,
            'bo': 0x1
        }, {
            'p': [0x40, 0x42, -0x2],
            's': [0x5, 0x36, 0x2],
            'pe': 0x1,
            'c': 0x787878,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [0x40, 0x42, -0x10],
            's': [0x5, 0x36, 0x2],
            'pe': 0x1,
            'c': 0x787878,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [0x40, 0x69, -0x9],
            's': [0x5, 0x2, 0xc],
            'l': 0x1,
            'c': 0x787878,
            't': 0x2
        }, {
            'p': [0x96, 0x42, 0xb],
            's': [0x4, 0x36, 0x2],
            'pe': 0x1,
            'c': 0x787878,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [0x96, 0x42, 0x19],
            's': [0x4, 0x36, 0x2],
            'pe': 0x1,
            'c': 0x787878,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [0x96, 0x69, 0x12],
            's': [0x4, 0x2, 0xc],
            'l': 0x1,
            'c': 0x787878,
            't': 0x2
        }, {
            'p': [0x96, 0x6a, 0x12],
            's': [0x2, 0xf, 0xd],
            'pe': 0x1,
            'c': 0x5f6e68,
            't': 0xa,
            'bo': 0x1
        }, {
            'p': [0x40, 0x6b, -0x9],
            's': [0x2, 0x10, 0xf],
            'pe': 0x1,
            'c': 0x5f6e68,
            't': 0xa
        }, {
            'p': [0x3f, 0x7b, -0x9],
            's': [0x2, 0x18, 0x4],
            'c': 0x787878,
            't': 0x2
        }, {
            'p': [0x40, 0x55, -0x44],
            's': [0x5, 0x27, 0x4],
            'c': 0x787878,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [0x40, 0x55, 0x36],
            's': [0x5, 0x27, 0x4],
            'c': 0x787878,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [0x40, 0x78, -0x9],
            's': [0x5, 0x4, 0x72],
            'c': 0x787878,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [0x40, 0x78, 0x32],
            's': [0x5, 0x4, 0x4],
            'c': 0x787878,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [0x6b, 0x87, -0x29],
            's': [0x5d, 0x2, 0x46],
            'l': 0x1,
            'r': [-0.35, 0x0, 0x0],
            'c': 0x4a4a4a,
            't': 0x2
        }, {
            'p': [0x96, 0x78, -0xa],
            's': [0x4, 0x4, 0x68],
            'c': 0x787878,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [0x6b, 0x73, 0xa],
            's': [0x55, 0x1, 0x47],
            'c': 0x5f5f5f,
            't': 0x2
        }, {
            'p': [0x6b, 0x7c, -0x9],
            's': [0x58, 0x4, 0x7a],
            'c': 0x5f6e68,
            't': 0xa,
            'bo': 0x1
        }, {
            'p': [0x6b, 0x88, 0x1b],
            's': [0x5d, 0x2, 0x4a],
            'l': 0x1,
            'r': [0.35, 0x0, 0x0],
            't': 0x5
        }, {
            'p': [0x6b, 0x97, -0x9],
            's': [0x65, 0x2, 0x5],
            'l': 0x1,
            't': 0x5
        }, {
            'p': [0x6b, 0x89, -0x2a],
            's': [0x5d, 0x2, 0x46],
            'l': 0x1,
            'r': [-0.35, 0x0, 0x0],
            't': 0x5
        }, {
            'p': [0x6b, 0x80, -0x9],
            's': [0x58, 0x4, 0x68],
            'c': 0x5f6e68,
            't': 0xa
        }, {
            'p': [0x6b, 0x84, -0x9],
            's': [0x58, 0x4, 0x52],
            'c': 0x5f6e68,
            't': 0xa
        }, {
            'p': [0x6b, 0x88, -0x9],
            's': [0x58, 0x4, 0x3c],
            'c': 0x5f6e68,
            't': 0xa
        }, {
            'p': [0x6b, 0x8c, -0x9],
            's': [0x58, 0x4, 0x26],
            'c': 0x5f6e68,
            't': 0xa
        }, {
            'p': [0x6b, 0x90, -0x9],
            's': [0x58, 0x3, 0x10],
            'c': 0x5f6e68,
            't': 0xa
        }, {
            'p': [0x32, 0x53, -0x9],
            's': [0x16, 0x2, 0x58],
            'c': 0x787878,
            't': 0x2
        }, {
            'p': [0x29, 0x42, -0x33],
            's': [0x2, 0x14, 0x2],
            'c': 0x787878,
            't': 0x2
        }, {
            'p': [0x29, 0x42, 0x21],
            's': [0x2, 0x14, 0x2],
            'c': 0x787878,
            't': 0x2
        }, {
            'p': [0x5c, 0x42, 0x28],
            's': [0x2, 0x27, 0x2],
            'c': 0x787878,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [0x50, 0x42, 0x28],
            's': [0x2, 0x27, 0x2],
            'c': 0x787878,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [0x79, 0x42, -0x12],
            's': [0x2, 0x27, 0x2],
            'c': 0x787878,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [0x85, 0x42, -0x12],
            's': [0x2, 0x27, 0x2],
            'c': 0x787878,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [0x7f, 0x69, -0x12],
            's': [0xe, 0x2, 0x2],
            'c': 0x787878,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [0x56, 0x69, 0x28],
            's': [0xe, 0x2, 0x2],
            'c': 0x787878,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [0xa, 0x80, -0x1d7],
            's': [0x61, 0x2, 0x3b],
            'l': 0x1,
            'r': [-0.35, 0x0, 0x0],
            'c': 0x525252,
            't': 0x2
        }, {
            'p': [0xa, 0x82, -0x1d8],
            's': [0x61, 0x2, 0x3b],
            'l': 0x1,
            'r': [-0.35, 0x0, 0x0],
            't': 0x5
        }, {
            'p': [0xa, 0x33, -0x1bc],
            's': [0x5c, 0x43, 0x6b],
            'c': 0x5f6e68,
            't': 0xa
        }, {
            'p': [0xa, 0x76, -0x1bc],
            's': [0x5c, 0x2, 0x6b],
            'c': 0x5f6e68,
            't': 0xa
        }, {
            'p': [0xa, 0x7b, -0x1bc],
            's': [0x5c, 0x5, 0x4b],
            'c': 0x5f6e68,
            't': 0xa
        }, {
            'p': [0xa, 0x80, -0x1bc],
            's': [0x5c, 0x5, 0x31],
            'c': 0x5f6e68,
            't': 0xa
        }, {
            'p': [0xa, 0x85, -0x1bc],
            's': [0x5c, 0x5, 0x16],
            'c': 0x5f6e68,
            't': 0xa
        }, {
            'p': [0x37, 0x72, -0x1bc],
            's': [0x4, 0x4, 0x6b],
            'c': 0xafafaf,
            't': 0x2
        }, {
            'p': [0x47, 0x33, -0x189],
            's': [0x4, 0x3f, 0x4],
            'c': 0xafafaf,
            't': 0x2
        }, {
            'p': [0xcf, 0x33, -0x189],
            's': [0x4, 0x40, 0x4],
            'c': 0xafafaf,
            't': 0x2
        }, {
            'p': [0x74, 0x33, -0x189],
            's': [0x4, 0x4d, 0x5],
            'c': 0xafafaf,
            't': 0x2
        }, {
            'p': [0x47, 0x33, -0x1bd],
            's': [0x4, 0x3f, 0x4],
            'c': 0xafafaf,
            't': 0x2
        }, {
            'p': [0x47, 0x33, -0x1ef],
            's': [0x4, 0x3e, 0x4],
            'c': 0xafafaf,
            't': 0x2
        }, {
            'p': [0x8b, 0x6f, -0x189],
            's': [0x84, 0x4, 0x4],
            'c': 0xafafaf,
            't': 0x2
        }, {
            'p': [0x47, 0x6e, -0x1bc],
            's': [0x4, 0x4, 0x62],
            'l': 0x1,
            'c': 0xafafaf,
            't': 0x2
        }, {
            'p': [0x8b, 0x86, -0x1bb],
            's': [0x7, 0x7, 0x79],
            'c': 0xafafaf,
            't': 0x2
        }, {
            'p': [0x65, 0x79, -0x1bb],
            's': [0x4f, 0x3, 0x71],
            'l': 0x1,
            'r': [0x0, 0x0, 0.35],
            'c': 0x464646,
            't': 0x2
        }, {
            'p': [0x64, 0x7c, -0x1bb],
            's': [0x4f, 0x2, 0x71],
            'l': 0x1,
            'r': [0x0, 0x0, 0.35],
            't': 0x5
        }, {
            'p': [0x8b, 0x8d, -0x1bb],
            's': [0x7, 0x2, 0x79],
            'l': 0x1,
            't': 0x5
        }, {
            'p': [0xb2, 0x7c, -0x1bb],
            's': [0x4e, 0x3, 0x71],
            'l': 0x1,
            'r': [0x0, 0x0, -0.35],
            't': 0x5
        }, {
            'p': [0x8b, 0x42, -0x1bc],
            's': [0x88, 0x31, 0x68],
            'c': 0x8e8d7a,
            't': 0xa
        }, {
            'p': [0x8b, 0x73, -0x1bc],
            's': [0x6b, 0x5, 0x68],
            'c': 0x8e8d7a,
            't': 0xa
        }, {
            'p': [0x8b, 0x78, -0x1bc],
            's': [0x53, 0x5, 0x68],
            'c': 0x8e8d7a,
            't': 0xa
        }, {
            'p': [0x8b, 0x7d, -0x1bc],
            's': [0x37, 0x5, 0x68],
            'c': 0x8e8d7a,
            't': 0xa
        }, {
            'p': [0x8b, 0x82, -0x1bc],
            's': [0x1c, 0x4, 0x68],
            'c': 0x8e8d7a,
            't': 0xa
        }, {
            'p': [0xa1, 0x33, -0x189],
            's': [0x4, 0x4d, 0x5],
            'c': 0xafafaf,
            't': 0x2
        }, {
            'p': [0xd6, 0x71, -0x181],
            's': [0x30, 0x2, 0x46],
            'l': 0x1,
            'r': [0x0, 0x0, 0.52],
            'c': 0x696969,
            't': 0x2
        }, {
            'p': [0xd5, 0x73, -0x181],
            's': [0x30, 0x2, 0x46],
            'l': 0x1,
            'r': [0x0, 0x0, 0.52],
            't': 0x5
        }, {
            'p': [0xe9, 0x7d, -0x182],
            's': [0x5, 0x5, 0x47],
            'c': 0xafafaf,
            't': 0x2
        }, {
            'p': [0xe9, 0x82, -0x182],
            's': [0x5, 0x2, 0x47],
            't': 0x5
        }, {
            'p': [0x37, 0x41, 0xd],
            's': [0xc, 0xc, 0xc],
            'i': 0x1
        }, {
            'p': [0x37, 0x41, -0x40],
            's': [0xc, 0xc, 0xc],
            'i': 0x1
        }, {
            'p': [-0x41, 0x41, -0x40],
            's': [0xc, 0xc, 0xc],
            'i': 0x1
        }, {
            'p': [-0x41, 0x41, -0x34],
            's': [0xc, 0xc, 0xc],
            'i': 0x1
        }, {
            'p': [-0x48, 0x6e, -0x2d],
            's': [0x4, 0x4, 0x30],
            'c': 0x727272,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [-0x82, 0x57, -0x2c],
            's': [0x4, 0x4, 0x2e],
            'c': 0x727272,
            't': 0x2
        }, {
            'p': [-0x82, 0x6e, -0x2c],
            's': [0x4, 0x4, 0x2e],
            'c': 0x727272,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [0x1c, 0x41, -0x5f],
            's': [0xc, 0xc, 0xc],
            'i': 0x1
        }, {
            'p': [-0x58, 0x41, 0x24],
            's': [0xc, 0xc, 0xc],
            'i': 0x1
        }, {
            'p': [0x1c, 0x41, 0x32],
            's': [0xc, 0xc, 0xc],
            'i': 0x1
        }, {
            'p': [0x1c, 0x4d, 0x32],
            's': [0xc, 0xc, 0xc],
            'i': 0x1
        }, {
            'p': [0x92, 0x55, 0x23],
            's': [0x6, 0x8, 0x6],
            'i': 0x2
        }, {
            'p': [0x3c, 0x55, -0x24],
            's': [0x6, 0x8, 0x6],
            'i': 0x2
        }, {
            'p': [0x3c, 0x55, -0x1c],
            's': [0x6, 0x8, 0x6],
            'i': 0x2
        }, {
            'p': [-0x11, 0x41, -0xb2],
            's': [0xc, 0xc, 0xc],
            'i': 0x1
        }, {
            'p': [-0x38, 0x41, -0x80],
            's': [0xc, 0xc, 0xc],
            'i': 0x1
        }, {
            'p': [-0xa4, 0x34, -0x9e],
            's': [0xc, 0xc, 0xc],
            'i': 0x1
        }, {
            'p': [-0x98, 0x34, -0x9e],
            's': [0xc, 0xc, 0xc],
            'i': 0x1
        }, {
            'p': [-0x13b, 0x34, -0x56],
            's': [0xc, 0xc, 0xc],
            'i': 0x1
        }, {
            'p': [-0x13b, 0x34, -0x4a],
            's': [0xc, 0xc, 0xc],
            'i': 0x1
        }, {
            'p': [-0x13b, 0x34, 0x12],
            's': [0xc, 0xc, 0xc],
            'i': 0x1
        }, {
            'p': [-0x13b, 0x34, 0x6],
            's': [0xc, 0xc, 0xc],
            'i': 0x1
        }, {
            'p': [-0x13b, 0x40, 0x12],
            's': [0xc, 0xc, 0xc],
            'i': 0x1
        }, {
            'p': [-0xe7, 0x34, -0x5d],
            's': [0xc, 0xc, 0xc],
            'i': 0x1
        }, {
            'p': [-0x119, 0x34, -0x31],
            's': [0xc, 0xc, 0xc],
            'i': 0x1
        }, {
            'p': [-0x10d, 0x34, -0x31],
            's': [0xc, 0xc, 0xc],
            'i': 0x1
        }, {
            'p': [-0x80, 0x34, -0x10a],
            's': [0xc, 0xc, 0xc],
            'i': 0x1
        }, {
            'p': [-0x74, 0x34, -0x130],
            's': [0xc, 0xc, 0xc],
            'i': 0x1
        }, {
            'p': [-0x74, 0x40, -0x130],
            's': [0xc, 0xc, 0xc],
            'i': 0x1
        }, {
            'p': [-0xa2, 0x41, -0x1c],
            's': [0xc, 0xc, 0xc],
            'i': 0x1
        }, {
            'p': [-0x13, 0x41, -0x1c],
            's': [0xc, 0xc, 0xc],
            'i': 0x1
        }, {
            'p': [0xd8, 0x53, 0x28],
            's': [0xc, 0xc, 0xc],
            'i': 0x1
        }, {
            'p': [0x9d, 0x53, -0x38],
            's': [0xc, 0xc, 0xc],
            'i': 0x1
        }, {
            'p': [0x12c, 0x53, -0x32],
            's': [0xc, 0xc, 0xc],
            'i': 0x1
        }, {
            'p': [0x12c, 0x53, -0x3e],
            's': [0xc, 0xc, 0xc],
            'i': 0x1
        }, {
            'p': [0x169, 0x53, 0x1f],
            's': [0xc, 0xc, 0xc],
            'i': 0x1
        }, {
            'p': [0x168, 0x41, -0xdc],
            's': [0xc, 0xc, 0xc],
            'i': 0x1
        }, {
            'p': [0x2d, 0x41, -0x42],
            's': [0x6, 0x8, 0x6],
            'i': 0x2
        }, {
            'p': [-0x37, 0x41, -0x42],
            's': [0x6, 0x8, 0x6],
            'i': 0x2
        }, {
            'p': [-0x44, 0x41, 0x16],
            's': [0x6, 0x8, 0x6],
            'i': 0x2
        }, {
            'p': [-0x44, 0x41, 0xe],
            's': [0x6, 0x8, 0x6],
            'i': 0x2
        }, {
            'p': [-0xa3, 0x41, 0x36],
            's': [0x6, 0x8, 0x6],
            'i': 0x2
        }, {
            'p': [-0xa5, 0x41, -0x26],
            's': [0x6, 0x8, 0x6],
            'i': 0x2
        }, {
            'p': [-0x10d, 0x34, -0x3b],
            's': [0x6, 0x8, 0x6],
            'i': 0x2
        }, {
            'p': [-0x13d, 0x34, -0x40],
            's': [0x6, 0x8, 0x6],
            'i': 0x2
        }, {
            'p': [-0x13d, 0x34, -0x38],
            's': [0x6, 0x8, 0x6],
            'i': 0x2
        }, {
            'p': [-0x13d, 0x34, -0xad],
            's': [0x6, 0x8, 0x6],
            'i': 0x2
        }, {
            'p': [-0x131, 0x34, 0x14],
            's': [0x6, 0x8, 0x6],
            'i': 0x2
        }, {
            'p': [-0xb8, 0x34, -0xcc],
            's': [0x6, 0x8, 0x6],
            'i': 0x2
        }, {
            'p': [-0xb8, 0x34, -0xc4],
            's': [0x6, 0x8, 0x6],
            'i': 0x2
        }, {
            'p': [0x4b, 0x47, -0x137],
            's': [0x1f, 0x3, 0x7],
            'c': 0x7d7068
        }, {
            'p': [0x5e, 0x42, -0x124],
            's': [0x6, 0x7, 0x2c],
            'c': 0xa7988e,
            't': 0xb
        }, {
            'p': [0x38, 0x42, -0x124],
            's': [0x6, 0x7, 0x2c],
            'c': 0xa7988e,
            't': 0xb
        }, {
            'p': [0x4b, 0x42, -0x111],
            's': [0x20, 0x7, 0x6],
            'c': 0xa7988e,
            't': 0xb
        }, {
            'p': [0x4b, 0x42, -0x137],
            's': [0x20, 0x7, 0x6],
            'c': 0xa7988e,
            't': 0xb
        }, {
            'p': [0x4b, 0x47, -0x111],
            's': [0x1f, 0x3, 0x7],
            'c': 0x7d7068
        }, {
            'p': [0x38, 0x47, -0x124],
            's': [0x7, 0x3, 0x2d],
            'c': 0x7d7068,
            't': 0xb
        }, {
            'p': [0x5e, 0x47, -0x124],
            's': [0x7, 0x3, 0x2d],
            'c': 0x7d7068
        }, {
            'p': [0x4b, 0x42, -0x124],
            's': [0x20, 0x1, 0x21],
            'c': 0xa7988e
        }, {
            'p': [0x4b, 0x42, -0x124],
            's': [0x9, 0x17, 0x9],
            'c': 0xa7988e,
            't': 0xb
        }, {
            'p': [0x4b, 0x4d, -0x124],
            's': [0x14, 0x3, 0x14],
            'c': 0x7d7068,
            't': 0xb
        }, {
            'p': [0x4b, 0x56, -0x124],
            's': [0xe, 0x3, 0xe],
            'c': 0x7d7068,
            't': 0xb
        }, {
            'p': [0x4b, 0x4a, -0x137],
            's': [0x1f, 0x1, 0x7],
            'l': 0x1,
            't': 0x5
        }, {
            'p': [0x4b, 0x4a, -0x111],
            's': [0x1f, 0x1, 0x7],
            'l': 0x1,
            't': 0x5
        }, {
            'p': [0x5e, 0x4a, -0x124],
            's': [0x7, 0x1, 0x2d],
            'l': 0x1,
            't': 0x5
        }, {
            'p': [0x38, 0x4a, -0x124],
            's': [0x7, 0x1, 0x2d],
            'l': 0x1,
            't': 0x5
        }, {
            'p': [0x4b, 0x50, -0x124],
            's': [0x14, 0x1, 0x14],
            'l': 0x1,
            't': 0x5
        }, {
            'p': [0x4b, 0x59, -0x124],
            's': [0xe, 0x1, 0xe],
            'l': 0x1,
            't': 0x5
        }, {
            'p': [0x4b, 0x43, -0x124],
            's': [0x20, 0x2, 0x21],
            'c': 0x8bd9d4,
            'o': 0.7000000000000001,
            't': 0x5
        }, {
            'p': [0x3f, 0x3e, -0x235],
            's': [0xad, 0x3f, 0x80],
            'c': 0x7d6565,
            't': 0xa
        }, {
            'p': [0x15f, 0x53, 0x22],
            's': [0x6, 0x8, 0x6],
            'i': 0x2
        }, {
            'p': [0x128, 0x53, -0x19],
            's': [0x6, 0x8, 0x6],
            'i': 0x2
        }, {
            'p': [0x128, 0x53, -0x11],
            's': [0x6, 0x8, 0x6],
            'i': 0x2
        }, {
            'p': [0x177, 0x41, -0x8b],
            's': [0x6, 0x8, 0x6],
            'i': 0x2
        }, {
            'p': [0x145, 0x41, -0xca],
            's': [0x6, 0x8, 0x6],
            'i': 0x2
        }, {
            'p': [0x145, 0x41, -0xd2],
            's': [0x6, 0x8, 0x6],
            'i': 0x2
        }, {
            'p': [0xce, 0x41, -0xe3],
            's': [0x6, 0x8, 0x6],
            'i': 0x2
        }, {
            'p': [0xce, 0x41, -0xdc],
            's': [0x6, 0x8, 0x6],
            'i': 0x2
        }, {
            'p': [-0xde, 0x34, -0x127],
            's': [0x6, 0x8, 0x6],
            'i': 0x2
        }, {
            'p': [-0x11, 0x41, -0xbe],
            's': [0xc, 0xc, 0xc],
            'i': 0x1
        }, {
            'p': [0x9d, 0x41, -0xc9],
            's': [0xc, 0xc, 0xc],
            'i': 0x1
        }, {
            'p': [0x9d, 0x41, -0xd5],
            's': [0xc, 0xc, 0xc],
            'i': 0x1
        }, {
            'p': [-0x1, 0x41, -0x16a],
            's': [0xc, 0xc, 0xc],
            'i': 0x1
        }, {
            'p': [0xb, 0x41, -0x16a],
            's': [0xc, 0xc, 0xc],
            'i': 0x1
        }, {
            'p': [0x17, 0x41, -0x16a],
            's': [0xc, 0xc, 0xc],
            'i': 0x1
        }, {
            'p': [-0x1, 0x4d, -0x16b],
            's': [0xc, 0xc, 0xc],
            'i': 0x1
        }, {
            'p': [0x4d, 0x41, -0x16a],
            's': [0xc, 0xc, 0xc],
            'i': 0x1
        }, {
            'p': [0x59, 0x41, -0x16a],
            's': [0xc, 0xc, 0xc],
            'i': 0x1
        }, {
            'p': [0x87, 0x41, -0x16a],
            's': [0xc, 0xc, 0xc],
            'i': 0x1
        }, {
            'p': [0x87, 0x4d, -0x16b],
            's': [0xc, 0xc, 0xc],
            'i': 0x1
        }, {
            'p': [0x68, 0x41, -0x12d],
            's': [0xc, 0xc, 0xc],
            'i': 0x1
        }, {
            'p': [0x41, 0x41, -0xda],
            's': [0xc, 0xc, 0xc],
            'i': 0x1
        }, {
            'p': [-0xb, 0x42, -0x16d],
            's': [0x6, 0x8, 0x6],
            'i': 0x2
        }, {
            'p': [0x91, 0x41, -0x16d],
            's': [0x6, 0x8, 0x6],
            'i': 0x2
        }, {
            'p': [0x98, 0x41, -0x16d],
            's': [0x6, 0x8, 0x6],
            'i': 0x2
        }, {
            'p': [0x66, 0x41, -0x123],
            's': [0x6, 0x8, 0x6],
            'i': 0x2
        }, {
            'p': [0x93, 0x41, -0xc6],
            's': [0x6, 0x8, 0x6],
            'i': 0x2
        }, {
            'p': [0x37, 0x41, -0xd7],
            's': [0x6, 0x8, 0x6],
            'i': 0x2
        }, {
            'p': [-0x43, 0x41, -0x9],
            's': [0x1, 0x12, 0x4],
            'l': 0x1,
            'r': [0x0, 0x0, 0.17],
            'c': 0x787878,
            't': 0x2
        }, {
            'p': [-0x1f, 0x41, -0x1c],
            's': [0xc, 0xc, 0xc],
            'i': 0x1
        }, {
            'p': [-0x1f, 0x41, -0x10],
            's': [0xc, 0xc, 0xc],
            'i': 0x1
        }, {
            'p': [0x27, 0x42, -0x23],
            's': [0x1, 0x13, 0x5],
            'pe': 0x1,
            'v': 0x1,
            'c': 0x787878,
            't': 0x2
        }, {
            'p': [0x27, 0x42, -0x23],
            's': [0x1, 0x13, 0x3],
            'i': 0x3,
            't': 0x2,
            'd': 0x2
        }, {
            'p': [-0xa1, 0x57, -0x135],
            's': [0x4, 0x8, 0xa],
            'c': 0x898989,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [0x17d, 0x5b, -0x60],
            's': [0x4, 0x4, 0x56],
            'c': 0xafafaf,
            't': 0x2
        }, {
            'p': [0xca, 0x52, -0xb],
            's': [0x6e, 0x2, 0xa5],
            'l': 0x1,
            't': 0x5
        }, {
            'p': [0xb1, 0x79, -0x1bb],
            's': [0x4f, 0x3, 0x71],
            'l': 0x1,
            'r': [0x0, 0x0, -0.35],
            'c': 0x464646,
            't': 0x2
        }, {
            'p': [0x17f, 0x41, 0x1a],
            's': [0xc, 0x46, 0x6],
            'c': 0xac5353
        }, {
            'p': [0x3f, 0x79, -0x1f6],
            's': [0xae, 0x4, 0x4],
            'c': 0x616161,
            't': 0x2
        }, {
            'p': [-0x16, 0x60, -0x1f6],
            's': [0x4, 0x22, 0x4],
            'c': 0x616161,
            't': 0x2
        }, {
            'p': [0x3f, 0x9c, -0x238],
            's': [0x6, 0x6, 0x91],
            'c': 0x616161,
            't': 0x2
        }, {
            'p': [0x12, 0x8c, -0x238],
            's': [0x61, 0x3, 0x8a],
            'l': 0x1,
            'r': [0x0, 0x0, 0.35],
            'c': 0x616161,
            't': 0x2
        }, {
            'p': [0x6c, 0x8c, -0x238],
            's': [0x66, 0x3, 0x8a],
            'l': 0x1,
            'r': [0x0, 0x0, -0.35],
            'c': 0x616161,
            't': 0x2
        }, {
            'p': [0x3f, 0xa2, -0x238],
            's': [0x6, 0x2, 0x91],
            't': 0x5
        }, {
            'p': [0x6d, 0x8f, -0x238],
            's': [0x66, 0x2, 0x8a],
            'l': 0x1,
            'r': [0x0, 0x0, -0.35],
            't': 0x5
        }, {
            'p': [0x11, 0x8f, -0x238],
            's': [0x61, 0x2, 0x8a],
            'l': 0x1,
            'r': [0x0, 0x0, 0.35],
            't': 0x5
        }, {
            'p': [0x5d, 0x60, -0x1f6],
            's': [0x4, 0x32, 0x4],
            'c': 0x616161,
            't': 0x2
        }, {
            'p': [0x3f, 0x7d, -0x235],
            's': [0xad, 0x4, 0x80],
            'c': 0x7d6565,
            't': 0xa
        }, {
            'p': [0x3f, 0x85, -0x235],
            's': [0x83, 0x4, 0x80],
            'c': 0x7d6565,
            't': 0xa
        }, {
            'p': [0x3f, 0x81, -0x235],
            's': [0x99, 0x4, 0x80],
            'c': 0x7d6565,
            't': 0xa
        }, {
            'p': [0x3f, 0x89, -0x235],
            's': [0x6d, 0x4, 0x80],
            'c': 0x7d6565,
            't': 0xa
        }, {
            'p': [0x3f, 0x8d, -0x235],
            's': [0x56, 0x4, 0x80],
            'c': 0x7d6565,
            't': 0xa
        }, {
            'p': [0x3f, 0x91, -0x235],
            's': [0x41, 0x4, 0x80],
            'c': 0x7d6565,
            't': 0xa
        }, {
            'p': [0x3f, 0x95, -0x235],
            's': [0x2b, 0x4, 0x80],
            'c': 0x7d6565,
            't': 0xa
        }, {
            'p': [0x3f, 0x99, -0x235],
            's': [0x16, 0x3, 0x80],
            'c': 0x7d6565,
            't': 0xa
        }, {
            'p': [-0x6c, 0x6b, -0x1bf],
            's': [0x61, 0x2, 0x3b],
            'l': 0x1,
            'r': [0.35, 0x0, 0x0],
            'c': 0x525252,
            't': 0x2
        }, {
            'p': [-0x6c, 0x6c, -0x1be],
            's': [0x61, 0x2, 0x3b],
            'l': 0x1,
            'r': [0.35, 0x0, 0x0],
            't': 0x5
        }, {
            'p': [-0x6c, 0x74, -0x1db],
            's': [0x64, 0x5, 0x5],
            'c': 0x787878,
            't': 0x2
        }, {
            'p': [-0x6c, 0x79, -0x1db],
            's': [0x64, 0x2, 0x5],
            't': 0x5
        }, {
            'p': [0xa, 0x72, -0x188],
            's': [0x5e, 0x4, 0x4],
            'c': 0xafafaf,
            't': 0x2
        }, {
            'p': [0x37, 0x33, -0x188],
            's': [0x4, 0x3f, 0x4],
            'c': 0xafafaf,
            't': 0x2
        }, {
            'p': [-0x23, 0x33, -0x188],
            's': [0x4, 0x3f, 0x4],
            'c': 0xafafaf,
            't': 0x2
        }, {
            'p': [0xb, 0x33, -0x188],
            's': [0x4, 0x3f, 0x4],
            'c': 0xafafaf,
            't': 0x2
        }, {
            'p': [0x1e, 0x60, -0x1f6],
            's': [0x4, 0x34, 0x4],
            'c': 0x616161,
            't': 0x2
        }, {
            'p': [0x3f, 0x6d, -0x1f6],
            's': [0xae, 0x4, 0x4],
            'c': 0x616161,
            't': 0x2
        }, {
            'p': [0xa, 0x78, -0x1bc],
            's': [0x5c, 0x3, 0x66],
            'c': 0x5f6e68,
            't': 0xa
        }, {
            'p': [0x37, 0x33, -0x1bc],
            's': [0x4, 0x56, 0x4],
            'c': 0xafafaf,
            't': 0x2
        }, {
            'p': [0x128, 0x42, -0x124],
            's': [0x9, 0x13, 0x22],
            'c': 0x786b62,
            't': 0xb
        }, {
            'p': [0x12a, 0x65, -0x124],
            's': [0x3, 0x9, 0xc],
            'c': 0x5c5551,
            't': 0xb,
            'bo': 0x1
        }, {
            'p': [0x12a, 0x55, -0x12d],
            's': [0x4, 0x16, 0x6],
            'c': 0x5c5551,
            't': 0xb,
            'bo': 0x1
        }, {
            'p': [0x12a, 0x55, -0x11b],
            's': [0x4, 0x17, 0x6],
            'c': 0x5c5551,
            't': 0xb,
            'bo': 0x1
        }, {
            'p': [0x12c, 0x55, -0x124],
            's': [0x1, 0x16, 0x17],
            'c': 0x554f4c,
            't': 0xb
        }, {
            'p': [0x125, 0x55, -0x129],
            's': [0x1, 0x3, 0x1],
            'l': 0x1,
            'c': 0x988e62,
            't': 0x5
        }, {
            'p': [0x126, 0x55, -0x12d],
            's': [0x1, 0x2, 0x1],
            'l': 0x1,
            'r': [0x0, -0.35, 0x0],
            'c': 0x988e62,
            't': 0x5
        }, {
            'p': [0x125, 0x55, -0x132],
            's': [0x1, 0x3, 0x1],
            'l': 0x1,
            'r': [0x0, 0.35, 0x0],
            'c': 0x988e62,
            't': 0x5
        }, {
            'p': [0x126, 0x55, -0x120],
            's': [0x1, 0x2, 0x1],
            'l': 0x1,
            'r': [0x0, -0.17, 0x0],
            'c': 0x988e62,
            't': 0x5
        }, {
            'p': [0x125, 0x55, -0x11b],
            's': [0x1, 0x2, 0x1],
            'l': 0x1,
            'r': [0x0, 1.05, 0x0],
            'c': 0x988e62,
            't': 0x5
        }, {
            'p': [0x126, 0x55, -0x116],
            's': [0x1, 0x3, 0x1],
            'l': 0x1,
            'r': [0x0, 0.35, 0x0],
            'c': 0x988e62,
            't': 0x5
        }, {
            'p': [0x128, 0x55, -0x124],
            's': [0x1, 0x1, 0x3],
            'l': 0x1,
            'r': [0x0, 0x0, -0.35],
            'c': 0xc0b896,
            't': 0x5
        }, {
            'p': [0x129, 0x55, -0x124],
            's': [0x3, 0x4, 0x4],
            'l': 0x1,
            'r': [0x0, 0x0, -0.35],
            'c': 0xc0b896,
            't': 0x5
        }, {
            'p': [0x129, 0x56, -0x125],
            's': [0x3, 0x1, 0x1],
            'l': 0x1,
            'r': [0x0, 0x0, -0.35],
            'c': 0x0,
            't': 0x5
        }, {
            'p': [0x129, 0x56, -0x123],
            's': [0x3, 0x1, 0x1],
            'l': 0x1,
            'r': [0x0, 0x0, -0.35],
            'c': 0x0,
            't': 0x5
        }, {
            'p': [-0xe0, 0x35, -0x4a],
            's': [0xd8, 0x0, 0xe5],
            'i': 0x4,
            'l': 0x1,
            'en': 1.8,
            't': 0x5
        }, {
            'p': [-0x115, 0x33, -0x4d],
            's': [0x68, 0x2, 0xca],
            'v': 0x1,
            't': 0x5
        }, {
            'p': [-0x8b, 0x33, -0x6f],
            's': [0xac, 0x2, 0x82],
            'v': 0x1,
            't': 0x5
        }, {
            'p': [-0xd3, 0x33, -0xb7],
            's': [0xc, 0x2, 0xe],
            'v': 0x1,
            't': 0x5
        }, {
            'p': [-0xc9, 0x33, -0xb3],
            's': [0x8, 0x2, 0x6],
            'v': 0x1,
            't': 0x5
        }, {
            'p': [-0xb7, 0x33, -0xb6],
            's': [0x8, 0x2, 0xc],
            'v': 0x1,
            't': 0x5
        }, {
            'p': [0x16, 0x42, -0x30],
            's': [0xd2, 0x0, 0x102],
            'i': 0x4,
            'l': 0x1,
            'en': 1.8,
            't': 0x5
        }, {
            'p': [-0x1, 0x40, 0x0],
            's': [0x8c, 0x2, 0x8e],
            'v': 0x1,
            't': 0x5
        }, {
            'p': [-0x64, 0x40, 0x32],
            's': [0x3a, 0x2, 0x2a],
            'v': 0x1,
            't': 0x5
        }, {
            'p': [-0x95, 0x35, 0x8],
            's': [0x28, 0xd, 0x7e],
            'v': 0x1,
            't': 0x5
        }, {
            'p': [-0x36, 0x33, -0x8f],
            's': [0x3a, 0xf, 0x2a],
            'v': 0x1,
            't': 0x5
        }, {
            'p': [0x5, 0x40, -0x7b],
            's': [0x3c, 0x2, 0x68],
            'v': 0x1,
            't': 0x5
        }, {
            'p': [-0x7c, 0x33, -0x11d],
            's': [0xcb, 0x2, 0x32],
            'v': 0x1,
            't': 0x5
        }, {
            'p': [0x157, 0x40, -0xfc],
            's': [0x4d, 0x2, 0x2b],
            'v': 0x1,
            't': 0x5
        }, {
            'p': [0x157, 0x40, -0x7a],
            's': [0x52, 0x2, 0xd9],
            'v': 0x1,
            't': 0x5
        }, {
            'p': [0x147, 0x40, -0xb],
            's': [0x8c, 0x14, 0x81],
            'v': 0x1,
            't': 0x5
        }, {
            'p': [0xca, 0x52, -0xb],
            's': [0x6e, 0x2, 0xa5],
            'v': 0x1,
            't': 0x5
        }, {
            'p': [0xd5, 0x40, -0x70],
            's': [0x27, 0x14, 0x25],
            'v': 0x1,
            't': 0x5
        }, {
            'p': [0xd5, 0x40, -0xcf],
            's': [0x28, 0x2, 0x3f],
            'v': 0x1,
            't': 0x5
        }, {
            'p': [-0x83, 0x42, 0x32],
            's': [0x77, 0x0, 0xd2],
            'i': 0x4,
            'l': 0x1,
            'en': 1.8,
            't': 0x5
        }, {
            'p': [0x4a, 0x42, -0x10f],
            's': [0xd6, 0x0, 0xdf],
            'i': 0x4,
            'l': 0x1,
            'en': 1.8,
            't': 0x5
        }, {
            'p': [0x50, 0x33, -0x110],
            's': [0xe2, 0xf, 0xc2],
            'v': 0x1,
            't': 0x5
        }, {
            'p': [0x50, 0x33, -0x110],
            's': [0xe2, 0xf, 0xc2],
            'l': 0x1,
            't': 0x5
        }, {
            'p': [-0xb9, 0x33, -0xfe],
            's': [0x8, 0x2, 0xc],
            'v': 0x1,
            't': 0x5
        }, {
            'p': [-0xc3, 0x33, -0x101],
            's': [0xc, 0x2, 0x6],
            'v': 0x1,
            't': 0x5
        }, {
            'p': [-0xd8, 0x33, -0xfe],
            's': [0x13, 0x2, 0xc],
            'v': 0x1,
            't': 0x5
        }, {
            'p': [-0xc3, 0x35, -0x130],
            's': [0xc9, 0x0, 0x61],
            'i': 0x4,
            'l': 0x1,
            'en': 1.8,
            't': 0x5
        }, {
            'p': [-0x41, 0x35, -0x121],
            's': [0x40, 0xd, 0xc3],
            'i': 0x9,
            't': 0x5
        }, {
            'p': [-0x95, 0x35, -0x4e],
            's': [0x91, 0xd, 0x2e],
            'i': 0x9,
            't': 0x5,
            'd': 0x1
        }, {
            'p': [-0x65, 0x35, -0x8c],
            's': [0x24, 0xd, 0xb6],
            'i': 0x9,
            't': 0x5
        }, {
            'p': [0xd8, 0x42, -0x9d],
            's': [0xc5, 0x12, 0x35],
            'i': 0x9,
            't': 0x5,
            'd': 0x1
        }, {
            'p': [0x165, 0x42, -0x67],
            's': [0xf4, 0x12, 0x37],
            'i': 0x9,
            't': 0x5,
            'd': 0x1
        }, {
            'p': [0x158, 0x42, -0xf6],
            's': [0x52, 0x0, 0xea],
            'i': 0x4,
            'l': 0x1,
            'en': 1.8,
            't': 0x5
        }, {
            'p': [0xdc, 0x42, -0xd0],
            's': [0x58, 0x0, 0x34],
            'i': 0x4,
            'l': 0x1,
            'en': 1.8,
            't': 0x5
        }, {
            'p': [0x156, 0x54, 0x24],
            's': [0xaa, 0x0, 0xdf],
            'i': 0x4,
            'l': 0x1,
            'en': 1.8,
            't': 0x5
        }, {
            'p': [0xd0, 0x54, -0xa],
            's': [0x83, 0x0, 0xf0],
            'i': 0x4,
            'l': 0x1,
            'en': 1.8,
            't': 0x5
        }, {
            'p': [-0x48, 0x34, -0xd4],
            's': [0x62, 0x32, 0x6c],
            'c': 0x827256,
            't': 0xa,
            'bo': 0x1
        }, {
            'p': [0x41, 0x4d, -0xda],
            's': [0xc, 0x1, 0xc],
            'l': 0x1,
            't': 0x5
        }, {
            'p': [0x9d, 0x4d, -0xcf],
            's': [0xc, 0x1, 0x18],
            'l': 0x1,
            't': 0x5
        }, {
            'p': [0x53, 0x4d, -0x16b],
            's': [0x18, 0x1, 0xe],
            'l': 0x1,
            't': 0x5
        }, {
            'p': [0x11, 0x4d, -0x16b],
            's': [0x18, 0x1, 0xe],
            'l': 0x1,
            't': 0x5
        }, {
            'p': [-0x1, 0x59, -0x16b],
            's': [0xc, 0x1, 0xc],
            'l': 0x1,
            't': 0x5
        }, {
            'p': [0x87, 0x59, -0x16b],
            's': [0xc, 0x1, 0xc],
            'l': 0x1,
            't': 0x5
        }, {
            'p': [0x68, 0x4d, -0x12d],
            's': [0xc, 0x1, 0xc],
            'l': 0x1,
            't': 0x5
        }, {
            'p': [-0x11, 0x4d, -0xb8],
            's': [0xc, 0x1, 0x18],
            'l': 0x1,
            't': 0x5
        }, {
            'p': [0x1c, 0x4d, -0x5f],
            's': [0xc, 0x1, 0xc],
            'l': 0x1,
            't': 0x5
        }, {
            'p': [0x37, 0x4d, -0x40],
            's': [0xc, 0x1, 0xc],
            'l': 0x1,
            't': 0x5
        }, {
            'p': [-0x1f, 0x4d, -0x16],
            's': [0xc, 0x1, 0x18],
            'l': 0x1,
            't': 0x5
        }, {
            'p': [-0x13, 0x4d, -0x1c],
            's': [0xc, 0x1, 0xc],
            'l': 0x1,
            't': 0x5
        }, {
            'p': [-0x41, 0x4d, -0x3a],
            's': [0xc, 0x1, 0x18],
            'l': 0x1,
            't': 0x5
        }, {
            'p': [0x1c, 0x59, 0x32],
            's': [0xc, 0x1, 0xc],
            'l': 0x1,
            't': 0x5
        }, {
            'p': [-0x58, 0x4d, 0x24],
            's': [0xc, 0x1, 0xc],
            'l': 0x1,
            't': 0x5
        }, {
            'p': [-0xa2, 0x4d, -0x1c],
            's': [0xc, 0x1, 0xc],
            'l': 0x1,
            't': 0x5
        }, {
            'p': [-0x9e, 0x40, -0x9e],
            's': [0x18, 0x1, 0xc],
            'l': 0x1,
            't': 0x5
        }, {
            'p': [-0x113, 0x40, -0x31],
            's': [0x18, 0x1, 0xc],
            'l': 0x1,
            't': 0x5
        }, {
            'p': [-0x13b, 0x40, 0x6],
            's': [0xc, 0x1, 0xc],
            'l': 0x1,
            't': 0x5
        }, {
            'p': [-0x13b, 0x40, -0x50],
            's': [0xc, 0x1, 0x18],
            'l': 0x1,
            't': 0x5
        }, {
            'p': [-0x13b, 0x4c, 0x12],
            's': [0xc, 0x1, 0xc],
            'l': 0x1,
            't': 0x5
        }, {
            'p': [-0xe7, 0x40, -0x5d],
            's': [0xc, 0x1, 0xc],
            'l': 0x1,
            't': 0x5
        }, {
            'p': [-0x80, 0x40, -0x10a],
            's': [0xc, 0x1, 0xc],
            'l': 0x1,
            't': 0x5
        }, {
            'p': [-0x74, 0x4c, -0x130],
            's': [0xc, 0x1, 0xc],
            'l': 0x1,
            't': 0x5
        }, {
            'p': [0xd8, 0x5f, 0x28],
            's': [0xc, 0x1, 0xc],
            'l': 0x1,
            't': 0x5
        }, {
            'p': [0x9d, 0x5f, -0x38],
            's': [0xc, 0x1, 0xc],
            'l': 0x1,
            't': 0x5
        }, {
            'p': [0x169, 0x5f, 0x1f],
            's': [0xc, 0x1, 0xc],
            'l': 0x1,
            't': 0x5
        }, {
            'p': [0x12c, 0x5f, -0x32],
            's': [0xc, 0x1, 0xc],
            'l': 0x1,
            't': 0x5
        }, {
            'p': [0x168, 0x4d, -0xdc],
            's': [0xc, 0x1, 0xc],
            'l': 0x1,
            't': 0x5
        }, {
            'p': [-0x38, 0x4d, -0x80],
            's': [0xc, 0x1, 0xc],
            'l': 0x1,
            't': 0x5
        }, {
            'p': [-0x11a, 0x69, 0x19],
            's': [0x58, 0x4, 0x4],
            'c': 0x7d7d7d,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [-0x11a, 0x35, 0x19],
            's': [0x5, 0x39, 0x5],
            'c': 0x898989,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [-0xec, 0x35, 0x19],
            's': [0x4, 0x38, 0x4],
            'c': 0x828282,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [-0x148, 0x35, 0x19],
            's': [0x4, 0x38, 0x4],
            'c': 0x898989,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [-0xea, 0x5b, 0xe],
            's': [0x2, 0x4, 0x40],
            'c': 0x727272,
            't': 0x2
        }, {
            'p': [0x4c, 0x72, -0xbc],
            's': [0x54, 0x6, 0x2b],
            'c': 0x877960,
            't': 0xa
        }, {
            'p': [0x4c, 0x72, -0x5e],
            's': [0x54, 0x6, 0x2b],
            'c': 0x877960,
            't': 0xa
        }, {
            'p': [0x4c, 0x78, -0x65],
            's': [0x54, 0x5, 0x1d],
            'c': 0x877960,
            't': 0xa
        }, {
            'p': [0x4c, 0x7d, -0x6c],
            's': [0x54, 0x3, 0x10],
            'c': 0x877960,
            't': 0xa
        }, {
            'p': [0x4c, 0x80, -0x70],
            's': [0x54, 0x3, 0x7],
            'c': 0x877960,
            't': 0xa
        }, {
            'p': [0x4c, 0x78, -0xb5],
            's': [0x54, 0x5, 0x1d],
            'c': 0x877960,
            't': 0xa
        }, {
            'p': [0x4c, 0x7d, -0xaf],
            's': [0x54, 0x3, 0x10],
            'c': 0x877960,
            't': 0xa
        }, {
            'p': [0x4c, 0x80, -0xaa],
            's': [0x54, 0x3, 0x7],
            'c': 0x877960,
            't': 0xa
        }, {
            'p': [-0x10e, 0x33, -0xb1],
            's': [0x3, 0x14, 0xa],
            'i': 0x15,
            'l': 0x1,
            'r': [0x0, -1.57, 0x0]
        }, {
            'p': [-0x102, 0x33, 0x18],
            's': [0x3, 0x14, 0xa],
            'i': 0x15,
            'l': 0x1,
            'r': [0x0, 1.57, 0x0]
        }, {
            'p': [-0xe1, 0x33, -0x2a],
            's': [0x3, 0x14, 0xa],
            'i': 0x15,
            'l': 0x1,
            'r': [-3.14, 0x0, -3.14]
        }, {
            'p': [-0xa0, 0x40, -0x3],
            's': [0x3, 0x14, 0xa],
            'i': 0x15,
            'l': 0x1
        }, {
            'p': [-0x85, 0x41, 0x47],
            's': [0x3, 0x14, 0xa],
            'i': 0x15,
            'l': 0x1,
            'r': [0x0, 1.57, 0x0]
        }, {
            'p': [0x22, 0x3f, -0x8d],
            's': [0x3, 0x14, 0xa],
            'i': 0x15,
            'l': 0x1,
            'r': [-3.14, 0x0, -3.14]
        }, {
            'p': [-0x19, 0x40, -0x60],
            's': [0x3, 0x14, 0xa],
            'i': 0x15,
            'l': 0x1
        }, {
            'p': [-0x9, 0x41, 0x38],
            's': [0x3, 0x14, 0xa],
            'i': 0x15,
            'l': 0x1,
            'r': [0x0, 1.57, 0x0]
        }, {
            'p': [0x38, 0x55, -0x2],
            's': [0x3, 0x14, 0xa],
            'i': 0x15,
            'l': 0x1,
            'r': [0x0, 1.57, 0x0]
        }, {
            'p': [0x9d, 0x55, 0xb],
            's': [0x3, 0x14, 0xa],
            'i': 0x15,
            'l': 0x1,
            'r': [0x0, -1.57, 0x0]
        }, {
            'p': [0xad, 0x53, 0x2e],
            's': [0x3, 0x14, 0xa],
            'i': 0x15,
            'l': 0x1,
            'r': [0x0, 1.57, 0x0]
        }, {
            'p': [0x56, 0x55, 0x28],
            's': [0x3, 0x14, 0xa],
            'i': 0x15,
            'l': 0x1,
            'r': [0x0, 1.57, 0x0]
        }, {
            'p': [0xb3, 0x52, -0x41],
            's': [0x3, 0x14, 0xa],
            'i': 0x15,
            'l': 0x1,
            'r': [0x0, 1.57, 0x0]
        }, {
            'p': [0xe9, 0x52, -0x26],
            's': [0x3, 0x14, 0xa],
            'i': 0x15,
            'l': 0x1
        }, {
            'p': [0x170, 0x54, -0x1c],
            's': [0x3, 0x14, 0xa],
            'i': 0x15,
            'l': 0x1
        }, {
            'p': [0x60, 0x40, -0xd4],
            's': [0x3, 0x14, 0xa],
            'i': 0x15,
            'l': 0x1,
            'r': [0x0, 1.57, 0x0]
        }, {
            'p': [-0x69, 0x34, -0x10a],
            's': [0x3, 0x14, 0xa],
            'i': 0x15,
            'l': 0x1,
            'r': [0x0, 1.57, 0x0]
        }, {
            'p': [-0x8e, 0x33, -0x136],
            's': [0x3, 0x14, 0xa],
            'i': 0x15,
            'l': 0x1,
            'r': [0x0, -1.57, 0x0]
        }, {
            'p': [-0xb4, 0x33, -0x12d],
            's': [0x3, 0x14, 0xa],
            'i': 0x15,
            'l': 0x1,
            'r': [0x0, -1.57, 0x0]
        }, {
            'p': [-0xe1, 0x33, -0x115],
            's': [0x3, 0x14, 0xa],
            'i': 0x15,
            'l': 0x1
        }, {
            'p': [0x16e, 0x40, -0xf3],
            's': [0x3, 0x14, 0xa],
            'i': 0x15,
            'l': 0x1
        }, {
            'p': [0x15e, 0x40, -0x111],
            's': [0x3, 0x14, 0xa],
            'i': 0x15,
            'l': 0x1,
            'r': [0x0, 1.57, 0x0]
        }, {
            'p': [0x141, 0x40, -0xac],
            's': [0x3, 0x14, 0xa],
            'i': 0x15,
            'l': 0x1,
            'r': [3.14, 0x0, 3.14]
        }, {
            'p': [-0x48, 0x68, -0xd4],
            's': [0x63, 0x8, 0x6c],
            'c': 0x827256,
            't': 0xa
        }, {
            'p': [-0x48, 0x70, -0xd4],
            's': [0x41, 0x6, 0x6c],
            'c': 0x827256,
            't': 0xa
        }, {
            'p': [-0x48, 0x76, -0xd4],
            's': [0x23, 0x6, 0x6c],
            'c': 0x827256,
            't': 0xa
        }, {
            'p': [0x7f, 0x55, -0x12],
            's': [0x3, 0x14, 0xa],
            'i': 0x15,
            'l': 0x1,
            'r': [0x0, -1.57, 0x0]
        }, {
            'p': [-0x103, 0x55, 0x17],
            's': [0x1, 0x11, 0x11],
            'i': 0x16,
            'l': 0x1,
            'r': [0x0, 1.57, 0x0]
        }, {
            'p': [-0x131, 0x55, 0x17],
            's': [0x1, 0x11, 0x11],
            'i': 0x16,
            'l': 0x1,
            'r': [0x0, 1.57, 0x0]
        }, {
            'p': [-0xeb, 0x46, 0x4],
            's': [0x1, 0x11, 0x11],
            'i': 0x16,
            'l': 0x1,
            'r': [-3.14, 0x0, -3.14]
        }, {
            'p': [-0xe2, 0x54, -0x2c],
            's': [0x1, 0x11, 0x11],
            'i': 0x16,
            'l': 0x1,
            'r': [-3.14, 0x0, -3.14]
        }, {
            'p': [-0xe2, 0x54, -0x51],
            's': [0x1, 0x11, 0x11],
            'i': 0x16,
            'l': 0x1,
            'r': [-3.14, 0x0, -3.14]
        }, {
            'p': [-0x10f, 0x53, -0xb0],
            's': [0x1, 0x11, 0x11],
            'i': 0x16,
            'l': 0x1,
            'r': [0x0, -1.57, 0x0]
        }, {
            'p': [-0x134, 0x53, -0xb0],
            's': [0x1, 0x11, 0x11],
            'i': 0x16,
            'l': 0x1,
            'r': [0x0, -1.57, 0x0]
        }, {
            'p': [-0xe4, 0x60, -0xa4],
            's': [0x1, 0x11, 0x11],
            'i': 0x16,
            'l': 0x1,
            'r': [0x0, -1.57, 0x0]
        }, {
            'p': [-0x91, 0x60, -0xa4],
            's': [0x1, 0x11, 0x11],
            'i': 0x16,
            'l': 0x1,
            'r': [0x0, -1.57, 0x0]
        }, {
            'p': [-0xc5, 0x54, -0x67],
            's': [0x1, 0x11, 0x11],
            'i': 0x16,
            'l': 0x1,
            'r': [0x0, 1.57, 0x0]
        }, {
            'p': [-0x66, 0x61, -0x7b],
            's': [0x1, 0x11, 0x11],
            'i': 0x16,
            'l': 0x1,
            'r': [0x0, 1.57, 0x0]
        }, {
            'p': [-0x82, 0x61, -0x60],
            's': [0x1, 0x11, 0x11],
            'i': 0x16,
            'l': 0x1,
            'r': [-3.14, 0x0, -3.14]
        }, {
            'p': [-0x84, 0x5c, 0x4],
            's': [0x1, 0x11, 0x11],
            'i': 0x16,
            'l': 0x1,
            'r': [-3.14, 0x0, -3.14]
        }, {
            'p': [-0x9f, 0x63, 0xe],
            's': [0x1, 0x11, 0x11],
            'i': 0x16,
            'l': 0x1
        }, {
            'p': [-0xa8, 0x55, -0x2c],
            's': [0x1, 0x11, 0x11],
            'i': 0x16,
            'l': 0x1
        }, {
            'p': [-0x32, 0x54, -0x9d],
            's': [0x1, 0x11, 0x11],
            'i': 0x16,
            'l': 0x1,
            'r': [0x0, -1.57, 0x0]
        }, {
            'p': [-0x16, 0x53, -0xb9],
            's': [0x1, 0x11, 0x11],
            'i': 0x16,
            'l': 0x1
        }, {
            'p': [-0x18, 0x62, -0x61],
            's': [0x1, 0x11, 0x11],
            'i': 0x16,
            'l': 0x1
        }, {
            'p': [-0xe0, 0x54, -0x116],
            's': [0x1, 0x11, 0x11],
            'i': 0x16,
            'l': 0x1
        }, {
            'p': [-0xbb, 0x60, -0x104],
            's': [0x1, 0x11, 0x11],
            'i': 0x16,
            'l': 0x1,
            'r': [0x0, 1.57, 0x0]
        }, {
            'p': [-0xcc, 0x40, -0x12c],
            's': [0x1, 0x11, 0x11],
            'i': 0x16,
            'l': 0x1,
            'r': [0x0, -1.57, 0x0]
        }, {
            'p': [-0x8d, 0x57, -0x135],
            's': [0x1, 0x11, 0x11],
            'i': 0x16,
            'l': 0x1,
            'r': [0x0, -1.57, 0x0]
        }, {
            'p': [-0x4c, 0x57, -0x135],
            's': [0x1, 0x11, 0x11],
            'i': 0x16,
            'l': 0x1,
            'r': [0x0, -1.57, 0x0]
        }, {
            'p': [-0x31, 0x53, -0x10b],
            's': [0x1, 0x11, 0x11],
            'i': 0x16,
            'l': 0x1,
            'r': [0x0, 1.57, 0x0]
        }, {
            'p': [0x8c, 0x58, -0xc2],
            's': [0x1, 0x11, 0x11],
            'i': 0x16,
            'l': 0x1,
            'r': [0x0, 1.57, 0x0]
        }, {
            'p': [0x38, 0x5c, -0xd5],
            's': [0x1, 0x11, 0x11],
            'i': 0x16,
            'l': 0x1,
            'r': [0x0, 1.57, 0x0]
        }, {
            'p': [0x21, 0x5c, -0xbc],
            's': [0x1, 0x11, 0x11],
            'i': 0x16,
            'l': 0x1,
            'r': [-3.14, 0x0, -3.14]
        }, {
            'p': [0x21, 0x5c, -0x5d],
            's': [0x1, 0x11, 0x11],
            'i': 0x16,
            'l': 0x1,
            'r': [-3.14, 0x0, -3.14]
        }, {
            'p': [-0x49, 0x4c, 0x46],
            's': [0x1, 0x11, 0x11],
            'i': 0x16,
            'l': 0x1,
            'r': [0x0, 1.57, 0x0]
        }, {
            'p': [-0x46, 0x5c, 0x5],
            's': [0x1, 0x11, 0x11],
            'i': 0x16,
            'l': 0x1
        }, {
            'p': [0x2a, 0x61, 0x37],
            's': [0x1, 0x11, 0x11],
            'i': 0x16,
            'l': 0x1,
            'r': [0x0, 1.57, 0x0]
        }, {
            'p': [0xf2, 0x79, 0x2d],
            's': [0x1, 0x11, 0x11],
            'i': 0x16,
            'l': 0x1,
            'r': [0x0, 1.57, 0x0]
        }, {
            'p': [0xe3, 0x64, -0x5a],
            's': [0x1, 0x11, 0x11],
            'i': 0x16,
            'l': 0x1,
            'r': [-3.14, 0x0, -3.14]
        }, {
            'p': [0xe8, 0x5c, -0xd3],
            's': [0x1, 0x11, 0x11],
            'i': 0x16,
            'l': 0x1,
            'r': [-3.14, 0x0, -3.14]
        }, {
            'p': [0xc8, 0x58, -0xa1],
            's': [0x1, 0x11, 0x11],
            'i': 0x16,
            'l': 0x1
        }, {
            'p': [0x134, 0x69, 0x24],
            's': [0x1, 0x11, 0x11],
            'i': 0x16,
            'l': 0x1,
            'r': [0x0, 1.57, 0x0]
        }, {
            'p': [0x142, 0x62, -0x110],
            's': [0x1, 0x11, 0x11],
            'i': 0x16,
            'l': 0x1,
            'r': [0x0, -1.57, 0x0]
        }, {
            'p': [0x16f, 0x5c, 0xd],
            's': [0x1, 0x11, 0x11],
            'i': 0x16,
            'l': 0x1,
            'r': [3.14, 0x0, 3.14]
        }, {
            'p': [0x126, 0x74, -0x19],
            's': [0x1, 0x11, 0x11],
            'i': 0x16,
            'l': 0x1
        }, {
            'p': [0x14f, 0x64, -0x5c],
            's': [0x1, 0x11, 0x11],
            'i': 0x16,
            'l': 0x1
        }, {
            'p': [0x142, 0x5c, -0xd4],
            's': [0x1, 0x11, 0x11],
            'i': 0x16,
            'l': 0x1
        }, {
            'p': [0x17b, 0x63, -0x76],
            's': [0x1, 0x11, 0x11],
            'i': 0x16,
            'l': 0x1,
            'r': [3.14, 0x0, 3.14]
        }, {
            'p': [0x16d, 0x4e, -0xb3],
            's': [0x1, 0x11, 0x11],
            'i': 0x16,
            'l': 0x1,
            'r': [3.14, 0x0, 3.14]
        }, {
            'p': [0xaf, 0x63, -0x119],
            's': [0x7, 0x5, 0x9],
            'c': 0x5f544e,
            't': 0xb,
            'bo': 0x1
        }, {
            'p': [0xaf, 0x67, -0x138],
            's': [0x6, 0xa, 0x11],
            'c': 0xa7988e,
            't': 0xb,
            'bo': 0x1
        }, {
            'p': [0xa6, 0x41, -0x151],
            's': [0x7, 0x3, 0x4],
            'l': 0x1,
            'c': 0x413b38,
            't': 0x5
        }, {
            'p': [0xa5, 0x41, -0x15c],
            's': [0x4, 0x3, 0x7],
            'l': 0x1,
            'c': 0x413b38,
            't': 0x5
        }, {
            'p': [0xaf, 0x6b, -0xf6],
            's': [0x6, 0x5, 0xc],
            'l': 0x1,
            'c': 0xa7988e,
            't': 0xb
        }, {
            'p': [0xaf, 0x6b, -0x109],
            's': [0x6, 0x3, 0xe],
            'l': 0x1,
            'c': 0xa7988e,
            't': 0xb
        }, {
            'p': [0xaf, 0x78, -0xf4],
            's': [0x9, 0x5, 0x4],
            'c': 0x5f5651,
            't': 0xb,
            'bo': 0x1
        }, {
            'p': [0xa5, 0x41, -0xed],
            's': [0x7, 0x3, 0x4],
            'l': 0x1,
            'c': 0x413b38,
            't': 0x5
        }, {
            'p': [0xb7, 0x41, -0x12c],
            's': [0x4, 0x3, 0x7],
            'l': 0x1,
            'c': 0x413b38,
            't': 0x5
        }, {
            'p': [0xa7, 0x41, -0x118],
            's': [0x5, 0x2, 0x4],
            'l': 0x1,
            'c': 0x413b38,
            't': 0x5
        }, {
            'p': [0x30, 0x40, -0x10f],
            's': [0x4, 0x3, 0x7],
            'l': 0x1,
            'c': 0x413b38,
            't': 0x5
        }, {
            'p': [0x66, 0x40, -0x115],
            's': [0x4, 0x3, 0x7],
            'l': 0x1,
            'c': 0x413b38,
            't': 0x5
        }, {
            'p': [0xe5, 0x40, -0xe0],
            's': [0x4, 0x3, 0x7],
            'l': 0x1,
            'c': 0x413b38,
            't': 0x5
        }, {
            'p': [0x10b, 0x81, -0x15b],
            's': [0x16, 0x3, 0xa],
            'c': 0x7d7068,
            't': 0xb,
            'bo': 0x1
        }, {
            'p': [0xd6, 0x69, -0xec],
            's': [0x4, 0x5, 0x9],
            'c': 0xa7988e,
            't': 0xb,
            'bo': 0x1
        }, {
            'p': [0x11f, 0x73, -0xec],
            's': [0x17, 0x5, 0xc],
            'c': 0x5a4f48,
            't': 0xb,
            'bo': 0x1
        }, {
            'p': [0xed, 0x73, -0xec],
            's': [0x1e, 0x4, 0x9],
            'c': 0x736860,
            't': 0xb,
            'bo': 0x1
        }, {
            'p': [0x40, 0x40, -0x16c],
            's': [0x6, 0x3, 0x3],
            'l': 0x1,
            'c': 0x413b38,
            't': 0x5
        }, {
            'p': [-0x14, 0x40, -0x148],
            's': [0x4, 0x3, 0x7],
            'l': 0x1,
            'c': 0x413b38,
            't': 0x5
        }, {
            'p': [0xaf, 0x78, -0x163],
            's': [0x9, 0x5, 0x6],
            'c': 0x7d7068,
            't': 0xb,
            'bo': 0x1
        }, {
            'p': [0xb0, 0x4d, -0x16b],
            's': [0x5, 0x1f, 0x16],
            'c': 0xa7988e,
            't': 0xb,
            'bo': 0x1
        }, {
            'p': [0x82, 0x4d, -0x173],
            's': [0x5a, 0x1f, 0x4],
            'c': 0xa7988e,
            't': 0xb,
            'bo': 0x1
        }, {
            'p': [0x44, 0x4d, -0x173],
            's': [0x22, 0x18, 0x4],
            'c': 0xa7988e,
            't': 0xb,
            'bo': 0x1
        }, {
            'p': [0xc, 0x4d, -0x173],
            's': [0x4e, 0x1b, 0x4],
            'c': 0xa7988e,
            't': 0xb,
            'bo': 0x1
        }, {
            'p': [-0x1c, 0x4d, -0x159],
            's': [0x5, 0x1d, 0x3a],
            'c': 0xa7988e,
            't': 0xb,
            'bo': 0x1
        }, {
            'p': [-0x2c, 0x4d, -0x13b],
            's': [0x1b, 0x1d, 0x4],
            'c': 0xa7988e,
            't': 0xb,
            'bo': 0x1
        }, {
            'p': [-0x1c, 0x6a, -0x147],
            's': [0x5, 0x3, 0xe],
            'l': 0x1,
            'c': 0xa7988e,
            't': 0xb
        }, {
            'p': [-0x1c, 0x6a, -0x16b],
            's': [0x5, 0x2, 0x16],
            'l': 0x1,
            'c': 0xa7988e,
            't': 0xb
        }, {
            'p': [-0x24, 0x6a, -0x13b],
            's': [0xf, 0x3, 0x4],
            'l': 0x1,
            'c': 0xa7988e,
            't': 0xb
        }, {
            'p': [0x45, 0x65, -0x173],
            's': [0x10, 0x3, 0x4],
            'l': 0x1,
            'c': 0xa7988e,
            't': 0xb
        }, {
            'p': [0xb1, 0x41, -0x167],
            's': [0x9, 0xc, 0x18],
            'c': 0x645750,
            't': 0xb
        }, {
            'p': [0x40, 0x41, -0x174],
            's': [0xdc, 0xc, 0x8],
            'c': 0x615852,
            't': 0xb
        }, {
            'p': [-0x2b, 0x33, -0x155],
            's': [0x25, 0x1a, 0x3a],
            'c': 0x645851,
            't': 0xb
        }, {
            'p': [-0x1d, 0x4d, -0x13d],
            's': [0x9, 0x25, 0xa],
            'c': 0x5f554f,
            't': 0xb,
            'bo': 0x1
        }, {
            'p': [0x12f, 0x6e, -0x14f],
            's': [0x6, 0x4, 0x17],
            'c': 0xa7988e,
            't': 0xb,
            'bo': 0x1
        }, {
            'p': [0x123, 0x4a, -0x139],
            's': [0x7, 0x3, 0x4],
            'l': 0x1,
            'c': 0x413b38,
            't': 0x5
        }, {
            'p': [0x126, 0x41, -0xf6],
            's': [0x4, 0x3, 0x7],
            'l': 0x1,
            'c': 0x413b38,
            't': 0x5
        }, {
            'p': [0x12f, 0x6e, -0x10e],
            's': [0x6, 0x4, 0x18],
            'c': 0x665c56,
            't': 0xb,
            'bo': 0x1
        }, {
            'p': [0xb6, 0x41, -0x107],
            's': [0x4, 0x3, 0x7],
            'l': 0x1,
            'c': 0x413b38,
            't': 0x5
        }, {
            'p': [0x126, 0x41, -0x14f],
            's': [0x4, 0x3, 0x7],
            'l': 0x1,
            'c': 0x413b38,
            't': 0x5
        }, {
            'p': [0x10e, 0x41, -0x153],
            's': [0x8, 0x3, 0x4],
            'l': 0x1,
            'c': 0x413b38,
            't': 0x5
        }, {
            'p': [0x12f, 0x7b, -0x154],
            's': [0x9, 0x6, 0x4],
            'c': 0x7d7068,
            't': 0xb,
            'bo': 0x1
        }, {
            'p': [0xe3, 0x5f, -0xec],
            's': [0x2, 0x5, 0x9],
            'c': 0xa7988e,
            't': 0xb,
            'bo': 0x1
        }, {
            'p': [0x12f, 0x5f, -0xf9],
            's': [0x6, 0x5, 0x2],
            'c': 0xa7988e,
            't': 0xb,
            'bo': 0x1
        }, {
            'p': [0x12f, 0x65, -0x107],
            's': [0x6, 0x4, 0x2],
            'c': 0xa7988e,
            't': 0xb,
            'bo': 0x1
        }, {
            'p': [0x61, 0x68, -0xd9],
            's': [0x2, 0x2, 0xd],
            'l': 0x1,
            'c': 0x787878,
            't': 0x2
        }, {
            'p': [0x61, 0x61, -0xda],
            's': [0x1, 0x6, 0x9],
            'l': 0x1,
            'c': 0x787878,
            't': 0x2
        }, {
            'p': [0x61, 0x67, -0xdd],
            's': [0x1, 0x1, 0x1],
            'l': 0x1,
            'c': 0x787878,
            't': 0x5
        }, {
            'p': [0x61, 0x67, -0xd7],
            's': [0x1, 0x1, 0x1],
            'l': 0x1,
            'c': 0x787878,
            't': 0x5
        }, {
            'p': [0x70, 0x40, -0xda],
            's': [0x4, 0x3, 0x7],
            'l': 0x1,
            'c': 0x413b38,
            't': 0x5
        }, {
            'p': [-0x60, 0x62, -0x10f],
            's': [0x2, 0x2, 0xd],
            'l': 0x1,
            'c': 0x787878,
            't': 0x2
        }, {
            'p': [-0x60, 0x5b, -0x110],
            's': [0x1, 0x6, 0x9],
            'l': 0x1,
            'c': 0x787878,
            't': 0x2
        }, {
            'p': [-0x60, 0x61, -0x113],
            's': [0x1, 0x1, 0x1],
            'l': 0x1,
            'c': 0x787878,
            't': 0x5
        }, {
            'p': [-0x60, 0x61, -0x10d],
            's': [0x1, 0x1, 0x1],
            'l': 0x1,
            'c': 0x787878,
            't': 0x5
        }, {
            'p': [-0x8, 0x6b, 0x34],
            's': [0x2, 0x2, 0x11],
            'l': 0x1,
            'c': 0x787878,
            't': 0x2
        }, {
            'p': [-0x8, 0x64, 0x31],
            's': [0x1, 0x6, 0x9],
            'l': 0x1,
            'c': 0x787878,
            't': 0x2
        }, {
            'p': [-0x8, 0x6a, 0x2e],
            's': [0x1, 0x1, 0x1],
            'l': 0x1,
            'c': 0x787878,
            't': 0x5
        }, {
            'p': [-0x8, 0x6a, 0x34],
            's': [0x1, 0x1, 0x1],
            'l': 0x1,
            'c': 0x787878,
            't': 0x5
        }, {
            'p': [-0xd5, 0x32, -0xc5],
            's': [0x4, 0x3, 0x7],
            'l': 0x1,
            'c': 0x2f2f2f,
            't': 0x5
        }, {
            'p': [-0xb9, 0x32, -0xed],
            's': [0x4, 0x3, 0x7],
            'l': 0x1,
            'c': 0x2f2f2f,
            't': 0x5
        }, {
            'p': [-0xc7, 0x51, -0x104],
            's': [0x21, 0x3, 0x3],
            'c': 0x848484,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [-0xb5, 0x35, -0x104],
            's': [0x3, 0x1f, 0x3],
            'c': 0x848484,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [-0xd9, 0x35, -0x104],
            's': [0x3, 0x1f, 0x3],
            'c': 0x848484,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [0x82, 0x6c, -0x173],
            's': [0x5a, 0x1, 0x4],
            'l': 0x1,
            't': 0x5
        }, {
            'p': [0xc, 0x68, -0x173],
            's': [0x4e, 0x1, 0x4],
            'l': 0x1,
            't': 0x5
        }, {
            'p': [0x45, 0x68, -0x173],
            's': [0x10, 0x1, 0x4],
            'l': 0x1,
            't': 0x5
        }, {
            'p': [0xaf, 0x7d, -0x163],
            's': [0x9, 0x1, 0x6],
            'l': 0x1,
            't': 0x5
        }, {
            'p': [-0x1c, 0x6a, -0x157],
            's': [0x5, 0x1, 0x12],
            'l': 0x1,
            't': 0x5
        }, {
            'p': [-0x1c, 0x6c, -0x16b],
            's': [0x5, 0x1, 0x16],
            'l': 0x1,
            't': 0x5
        }, {
            'p': [-0x1c, 0x6d, -0x147],
            's': [0x5, 0x1, 0xe],
            'l': 0x1,
            't': 0x5
        }, {
            'p': [-0x26, 0x6d, -0x13b],
            's': [0xb, 0x1, 0x4],
            'l': 0x1,
            't': 0x5
        }, {
            'p': [-0x32, 0x6a, -0x13b],
            's': [0xd, 0x1, 0x4],
            'l': 0x1,
            't': 0x5
        }, {
            'p': [0xb0, 0x6c, -0x169],
            's': [0x5, 0x1, 0x19],
            'l': 0x1,
            't': 0x5
        }, {
            'p': [0xaf, 0x7d, -0x149],
            's': [0x9, 0x1, 0x1a],
            'l': 0x1,
            't': 0x5
        }, {
            'p': [0xaf, 0x85, -0x15b],
            's': [0x9, 0x1, 0xa],
            'l': 0x1,
            't': 0x5
        }, {
            'p': [0xaf, 0x71, -0x138],
            's': [0x6, 0x1, 0x11],
            'l': 0x1,
            't': 0x5
        }, {
            'p': [0xaf, 0x6e, -0x109],
            's': [0x6, 0x1, 0xe],
            'l': 0x1,
            't': 0x5
        }, {
            'p': [0xaf, 0x70, -0xf5],
            's': [0x6, 0x1, 0xe],
            'l': 0x1,
            't': 0x5
        }, {
            'p': [0x12f, 0x72, -0x10b],
            's': [0x6, 0x1, 0x12],
            'l': 0x1,
            't': 0x5
        }, {
            'p': [0x12f, 0x80, -0xec],
            's': [0x9, 0x1, 0xc],
            'l': 0x1,
            't': 0x5
        }, {
            'p': [0xc7, 0x7c, -0xec],
            's': [0x27, 0x1, 0xc],
            'l': 0x1,
            't': 0x5
        }, {
            'p': [0xaf, 0x84, -0xec],
            's': [0x9, 0x1, 0xc],
            'l': 0x1,
            't': 0x5
        }, {
            'p': [0x12f, 0x86, -0x15b],
            's': [0x9, 0x1, 0xa],
            'l': 0x1,
            't': 0x5
        }, {
            'p': [0x124, 0x81, -0x15b],
            's': [0xd, 0x1, 0xa],
            'l': 0x1,
            't': 0x5
        }, {
            'p': [0xd3, 0x81, -0x15b],
            's': [0x3f, 0x1, 0xa],
            'l': 0x1,
            't': 0x5
        }, {
            'p': [0x12c, 0x6e, -0x124],
            's': [0x7, 0x1, 0xc],
            'l': 0x1,
            't': 0x5
        }, {
            'p': [0x12c, 0x6b, -0x12d],
            's': [0x8, 0x1, 0x6],
            'l': 0x1,
            't': 0x5
        }, {
            'p': [0x9d, 0x55, 0xb],
            's': [0xa, 0x14, 0x1],
            'pe': 0x1,
            'v': 0x1,
            'c': 0x787878,
            't': 0x5
        }, {
            'p': [0x38, 0x55, -0x2],
            's': [0xa, 0x14, 0x1],
            'pe': 0x1,
            'v': 0x1,
            'c': 0x787878,
            't': 0x5
        }, {
            'p': [0x12f, 0x72, -0x14d],
            's': [0x6, 0x1, 0x13],
            'l': 0x1,
            't': 0x5
        }, {
            'p': [0x12f, 0x81, -0x154],
            's': [0x9, 0x1, 0x4],
            'l': 0x1,
            't': 0x5
        }, {
            'p': [0x12c, 0x5f, -0x3e],
            's': [0xc, 0x1, 0xc],
            'l': 0x1,
            't': 0x5
        }, {
            'p': [0x128, 0x5a, -0x19],
            's': [0x6, 0x1, 0x6],
            'l': 0x1,
            't': 0x5
        }, {
            'p': [0x128, 0x5a, -0x11],
            's': [0x6, 0x1, 0x6],
            'l': 0x1,
            't': 0x5
        }, {
            'p': [0x15f, 0x5a, 0x22],
            's': [0x6, 0x1, 0x6],
            'l': 0x1,
            't': 0x5
        }, {
            'p': [0x177, 0x48, -0x8b],
            's': [0x6, 0x1, 0x6],
            'l': 0x1,
            't': 0x5
        }, {
            'p': [0x145, 0x48, -0xd2],
            's': [0x6, 0x1, 0x6],
            'l': 0x1,
            't': 0x5
        }, {
            'p': [0x145, 0x48, -0xca],
            's': [0x6, 0x1, 0x6],
            'l': 0x1,
            't': 0x5
        }, {
            'p': [0x66, 0x48, -0x123],
            's': [0x6, 0x1, 0x6],
            'l': 0x1,
            't': 0x5
        }, {
            'p': [0x93, 0x48, -0xc6],
            's': [0x6, 0x1, 0x6],
            'l': 0x1,
            't': 0x5
        }, {
            'p': [0x98, 0x48, -0x16d],
            's': [0x6, 0x1, 0x6],
            'l': 0x1,
            't': 0x5
        }, {
            'p': [0x91, 0x48, -0x16d],
            's': [0x6, 0x1, 0x6],
            'l': 0x1,
            't': 0x5
        }, {
            'p': [0x2d, 0x48, -0x42],
            's': [0x6, 0x1, 0x6],
            'l': 0x1,
            't': 0x5
        }, {
            'p': [-0x37, 0x48, -0x42],
            's': [0x6, 0x1, 0x6],
            'l': 0x1,
            't': 0x5
        }, {
            'p': [-0x44, 0x48, 0xe],
            's': [0x6, 0x1, 0x6],
            'l': 0x1,
            't': 0x5
        }, {
            'p': [-0x44, 0x48, 0x16],
            's': [0x6, 0x1, 0x6],
            'l': 0x1,
            't': 0x5
        }, {
            'p': [-0xa3, 0x48, 0x36],
            's': [0x6, 0x1, 0x6],
            'l': 0x1,
            't': 0x5
        }, {
            'p': [-0xa5, 0x48, -0x26],
            's': [0x6, 0x1, 0x6],
            'l': 0x1,
            't': 0x5
        }, {
            'p': [-0x13d, 0x3b, -0xad],
            's': [0x6, 0x1, 0x6],
            'l': 0x1,
            't': 0x5
        }, {
            'p': [-0x13d, 0x3b, -0x38],
            's': [0x6, 0x1, 0x6],
            'l': 0x1,
            't': 0x5
        }, {
            'p': [-0x13d, 0x3b, -0x40],
            's': [0x6, 0x1, 0x6],
            'l': 0x1,
            't': 0x5
        }, {
            'p': [-0x131, 0x3b, 0x14],
            's': [0x6, 0x1, 0x6],
            'l': 0x1,
            't': 0x5
        }, {
            'p': [-0x10d, 0x3b, -0x3b],
            's': [0x6, 0x1, 0x6],
            'l': 0x1,
            't': 0x5
        }, {
            'p': [-0xde, 0x3b, -0x127],
            's': [0x6, 0x1, 0x6],
            'l': 0x1,
            't': 0x5
        }, {
            'p': [0xce, 0x48, -0xe3],
            's': [0x6, 0x1, 0x6],
            'l': 0x1,
            't': 0x5
        }, {
            'p': [0xce, 0x48, -0xdc],
            's': [0x6, 0x1, 0x6],
            'l': 0x1,
            't': 0x5
        }, {
            'p': [-0xcd, 0x33, -0x102],
            's': [0x3, 0x2, 0x4],
            'l': 0x1,
            't': 0x5
        }, {
            'p': [-0xbd, 0x33, -0xb4],
            's': [0x4, 0x2, 0x8],
            'l': 0x1,
            't': 0x5
        }, {
            'p': [-0xbd, 0x33, -0xb4],
            's': [0x4, 0x2, 0x8],
            'v': 0x1,
            't': 0x5
        }, {
            'p': [0x3d, 0x59, -0x2],
            's': [0x1, 0x2, 0x1],
            'pe': 0x1,
            'c': 0x787878,
            't': 0x5
        }, {
            'p': [0x3d, 0x63, -0x2],
            's': [0x1, 0x2, 0x1],
            'pe': 0x1,
            'c': 0x787878,
            't': 0x5
        }, {
            'p': [-0x8, 0x6d, 0x34],
            's': [0x2, 0x1, 0x11],
            'l': 0x1,
            'c': '#ffffff',
            't': 0x5
        }, {
            'p': [-0x60, 0x64, -0x10f],
            's': [0x2, 0x1, 0xd],
            'l': 0x1,
            'c': '#ffffff',
            't': 0x5
        }, {
            'p': [0x61, 0x6a, -0xd9],
            's': [0x2, 0x1, 0xd],
            'l': 0x1,
            'c': '#ffffff',
            't': 0x5
        }, {
            'p': [-0xea, 0x5f, 0xe],
            's': [0x3, 0x19, 0x40],
            'v': 0x1,
            'c': 0x727272,
            't': 0x2
        }, {
            'p': [0x37, 0x48, -0xd7],
            's': [0x6, 0x1, 0x6],
            'l': 0x1,
            't': 0x5
        }, {
            'p': [0x4b, 0x5a, -0x124],
            's': [0x3, 0x10, 0x3],
            'c': 0xa7988e,
            't': 0xb
        }, {
            'p': [0x4b, 0x63, -0x124],
            's': [0x2, 0x3, 0xc],
            'c': 0xa7988e,
            't': 0xb
        }, {
            'p': [0x4b, 0x66, -0x124],
            's': [0x2, 0x1, 0xc],
            'l': 0x1,
            't': 0x5
        }, {
            'p': [0x4b, 0x6a, -0x124],
            's': [0x3, 0x1, 0x3],
            'l': 0x1,
            't': 0x5
        }, {
            'p': [-0x114, 0x35, -0x10],
            's': [0x18, 0x24, 0x18],
            'i': 0x17,
            'l': 0x1,
            'tm': 0x0
        }, {
            'p': [0xf5, 0x43, -0x125],
            's': [0x18, 0x24, 0x18],
            'i': 0x17,
            'l': 0x1,
            'tm': '1'
        }, {
            'p': [0x61, 0x61, -0xd9],
            's': [0x2, 0x10, 0xd],
            'v': 0x1,
            'c': 0x787878,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [-0x60, 0x5b, -0x10f],
            's': [0x2, 0x10, 0xd],
            'v': 0x1,
            'c': 0x787878,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [-0x8, 0x64, 0x32],
            's': [0x2, 0x10, 0xd],
            'v': 0x1,
            'c': 0x787878,
            't': 0x2,
            'bo': 0x1
        }, {
            'p': [0xee, 0x42, -0x124],
            's': [0x72, 0x32, 0x5f],
            'i': 0xe,
            'l': 0x1
        }, {
            'p': [-0x111, 0x35, -0x16],
            's': [0x5b, 0x32, 0x56],
            'i': 0xe,
            'l': 0x1
        }, {
            'p': [0x4a, 0x42, -0x124],
            's': [0x5b, 0x32, 0x56],
            'i': 0xe,
            'l': 0x1
        }, {
            'p': [0xc0, 0x54, -0x9],
            's': [0x49, 0x32, 0x67],
            'i': 0xe,
            'l': 0x1
        }, {
            'p': [-0xc7, 0x53, -0xd4],
            's': [0x24, 0x8, 0x60],
            'c': 0x7f7f7f,
            't': 0xb,
            'bo': 0x1
        }]
    }, {
        'name': 'Kanji',
        'ambInd': 0x2,
        'modURL': '',
        'terrainSeed': '',
        'terrainWidth': 0xbb8,
        'terrainHeight': 0xbb8,
        'terrainMntMlt': 0x1,
        'terrainMntCol': '#a0a0a0',
        'terrainGrsCol': '#4a6904',
        'terrainDrtCol': '#8c6835',
        'skyDome': !0x0,
        'skyDomeCol0': '#071250',
        'skyDomeCol1': '#452e7d',
        'skyDomeCol2': '#2f3b7d',
        'zone': !0x1,
        'zoneSize': 0x1f4,
        'zoneSpeed': 0x1,
        'zoneCol0': '#c542d9',
        'zoneCol1': '#c542d9',
        'zoneCol2': '#c542d9',
        'sizeMlt': 0x2,
        'shadowR': 0x1000,
        'ambient': 0x5e5e6b,
        'light': 0x333d70,
        'sky': 0x0,
        'fog': 0x363284,
        'fogD': 888.9947618183014,
        'dthY': -118.35524224550045,
        'modes': [0x0],
        'camPos': [-0xb2, 0x32, -0xa],
        'spawns': [[-0x1d5, -0x1b, -0x5c, 0x0, 0x1], [-0x1b8, -0x1b, -0xe8, 0x0, 0x2], [-0x9a, -0x7, -0x1e3, 0x0, 0x1], [0x3, -0x7, -0x1dd, 0x0, 0x2], [-0xc, -0x7, -0x140, 0x0], [0x46, -0x7, -0xd7, 0x0, 0x1], [0x1f, -0x1b, -0x18, 0x0, 0x3], [-0xb3, -0xf, 0x1f, 0x0, 0x2], [-0xeb, -0x7, -0xa2, 0x0, 0x1], [-0x1ac, -0x8, -0x1f0, 0x0, 0x2], [-0x184, -0x8, -0x124, 0x0, 0x2]],
        'ambO': 0.7,
        'ambS': 0x5,
        'shadLength': 0x183,
        'shadWidth': 0x1a9,
        'objects': [{
            'p': [0xc0, -0x2c4, 0x205],
            's': [0x8b, 0x310, 0x8e],
            'l': 0x1,
            'c': '#b6b6b6',
            't': 0x5
        }, {
            'p': [-0x70, -0x2c8, 0x13f],
            's': [0xba, 0x2c6, 0xd6],
            'r': [-3.14, 0x0, 3.14],
            'c': '#757575',
            't': 0x5
        }, {
            'p': [-0xcf, -0x389, 0x2fd],
            's': [0xda, 0x441, 0x8e],
            'l': 0x1,
            'c': '#b6b6b6',
            't': 0x5
        }, {
            'p': [-0x70, -0x2, 0xd4],
            's': [0xbd, 0x2, 0x4],
            'c': '#4d4d4d',
            't': 0x5,
            'bo': 0x1
        }, {
            'p': [-0x70, -0x2, 0x1aa],
            's': [0xbd, 0x2, 0x4],
            'c': '#4d4d4d',
            't': 0x5
        }, {
            'p': [-0x14, -0x2, 0x13f],
            's': [0x5, 0x2, 0xda],
            'c': '#4d4d4d',
            't': 0x5,
            'bo': 0x1
        }, {
            'p': [-0xcc, -0x2, 0x13f],
            's': [0x5, 0x2, 0xda],
            'c': '#4d4d4d',
            't': 0x5,
            'bo': 0x1
        }, {
            'p': [0xc0, 0x4c, 0x205],
            's': [0x8e, 0x3, 0x91],
            'l': 0x1,
            'c': '#696969',
            't': 0x5
        }, {
            'p': [0x134, -0x2c4, 0xbf],
            's': [0x8b, 0x2e9, 0x8e],
            'c': '#b6b6b6',
            't': 0x5
        }, {
            'p': [0x134, 0xb, 0xbf],
            's': [0x64, 0x4b, 0x6a],
            'c': '#b6b6b6',
            't': 0x5
        }, {
            'p': [0x134, 0x56, 0xbf],
            's': [0x6a, 0x3, 0x6f],
            'c': '#707070',
            't': 0x5
        }, {
            'p': [0x134, 0x25, 0xbf],
            's': [0x91, 0x2, 0x93],
            'c': '#707070',
            't': 0x5
        }, {
            'p': [0x12c, -0x2c4, 0x1d3],
            's': [0x9e, 0x260, 0x8e],
            'l': 0x1,
            'c': '#7d7d7d',
            't': 0x5
        }, {
            'p': [0x0, 0xa5, 0x170],
            's': [0x8f, 0x3, 0x92],
            'c': '#828282',
            't': 0x5
        }, {
            'p': [0x22f, -0x2c4, 0x15],
            's': [0x9e, 0x31c, 0x8b],
            'l': 0x1,
            'c': '#7d7d7d',
            't': 0x5
        }, {
            'p': [0x134, -0x2c4, -0x37],
            's': [0x8b, 0x2b6, 0x8e],
            'c': '#b6b6b6',
            't': 0x5
        }, {
            'p': [-0x361, -0x2c4, 0x177],
            's': [0x8b, 0x39e, 0x8e],
            'l': 0x1,
            'c': '#b6b6b6',
            't': 0x5
        }, {
            'p': [-0x279, -0x389, -0x377],
            's': [0x91, 0x440, 0x8e],
            'l': 0x1,
            'c': '#e3e3e3',
            't': 0x5
        }, {
            'p': [0x26a, -0x2c4, 0xd7],
            's': [0x8b, 0x3b1, 0x8e],
            'l': 0x1,
            'c': '#b6b6b6',
            't': 0x5
        }, {
            'p': [0x1b6, -0x2c4, 0x273],
            's': [0x9e, 0x35a, 0x8b],
            'l': 0x1,
            'c': '#7d7d7d',
            't': 0x5
        }, {
            'p': [-0x33e, -0x389, 0x77],
            's': [0xb9, 0x3c5, 0x74],
            'l': 0x1,
            'c': '#f0f0f0',
            't': 0x5
        }, {
            'p': [-0x453, -0x29d, 0x1e],
            's': [0x8b, 0x39e, 0x8e],
            'l': 0x1,
            'c': '#141414',
            't': 0x5
        }, {
            'p': [-0x1f0, -0x389, 0x315],
            's': [0x91, 0x4b2, 0x8e],
            'l': 0x1,
            'c': '#b6b6b6',
            't': 0x5
        }, {
            'p': [0x19f, -0x389, 0x315],
            's': [0x91, 0x4e9, 0x8e],
            'l': 0x1,
            'c': '#b6b6b6',
            't': 0x5
        }, {
            'p': [-0x52, -0x389, 0x424],
            's': [0x171, 0x407, 0x8e],
            'l': 0x1,
            'c': '#fcfcfc',
            't': 0x5
        }, {
            'p': [-0x2c3, -0x389, 0x24a],
            's': [0xe1, 0x3f2, 0x100],
            'l': 0x1,
            'c': '#222222',
            't': 0x5
        }, {
            'p': [0x163, -0x389, -0x93],
            's': [0x91, 0x42a, 0x8e],
            'l': 0x1,
            'c': '#b6b6b6',
            't': 0x5
        }, {
            'p': [0x0, -0x2c4, 0x170],
            's': [0x8b, 0x369, 0x8e],
            'c': '#b6b6b6',
            't': 0x5
        }, {
            'p': [0x1e4, -0x389, -0x1db],
            's': [0xd0, 0x3c2, 0xd6],
            'l': 0x1,
            'c': '#f2f2f2',
            't': 0x5
        }, {
            'p': [0x379, -0x2c4, -0x105],
            's': [0xab, 0x379, 0x103],
            'l': 0x1,
            'c': '#7d7d7d',
            't': 0x5
        }, {
            'p': [0x223, -0x389, -0x1e6],
            's': [0x91, 0x4e9, 0x8e],
            'l': 0x1,
            'c': '#484848',
            't': 0x5
        }, {
            'p': [0x9a, -0x389, -0x3b4],
            's': [0x91, 0x4b2, 0x8e],
            'l': 0x1,
            'c': '#555454',
            't': 0x5
        }, {
            'p': [0x1f8, -0x2c4, 0x48],
            's': [0x9e, 0x260, 0x8e],
            'l': 0x1,
            'c': '#7d7d7d',
            't': 0x5
        }, {
            'p': [-0x3af, -0x389, 0x2cc],
            's': [0x91, 0x50c, 0x8e],
            'l': 0x1,
            'c': '#b6b6b6',
            't': 0x5
        }, {
            'p': [-0x3ef, -0x2c4, -0x19a],
            's': [0x9e, 0x31c, 0x8b],
            'l': 0x1,
            'c': '#7d7d7d',
            't': 0x5
        }, {
            'p': [-0x317, -0x389, -0x48f],
            's': [0x91, 0x4b2, 0x8e],
            'l': 0x1,
            'c': '#b6b6b6',
            't': 0x5
        }, {
            'p': [-0xa5, -0x389, -0x5d0],
            's': [0x91, 0x4bc, 0x8e],
            'l': 0x1,
            'c': '#616161',
            't': 0x5
        }, {
            'p': [0x114, -0x389, -0x2e3],
            's': [0x91, 0x40a, 0x8e],
            'l': 0x1,
            'c': '#b9b9b9',
            't': 0x5
        }, {
            'p': [0x57, -0x2c4, -0x37f],
            's': [0x9e, 0x2db, 0x8b],
            'l': 0x1,
            'c': '#acacac',
            't': 0x5
        }, {
            'p': [-0x2bc, -0x389, -0x332],
            's': [0x91, 0x3d5, 0x8e],
            'l': 0x1,
            'c': '#b6b6b6',
            't': 0x5
        }, {
            'p': [-0x6f, -0x2c4, -0x418],
            's': [0x9e, 0x31c, 0x97],
            'l': 0x1,
            'c': '#7d7d7d',
            't': 0x5
        }, {
            'p': [-0x376, -0x2c4, -0x2ac],
            's': [0x8b, 0x39e, 0x8e],
            'l': 0x1,
            'c': '#4b4b4b',
            't': 0x5
        }, {
            'p': [-0x195, -0x2c4, -0x3db],
            's': [0x9e, 0x2a8, 0x8b],
            'l': 0x1,
            'c': '#acacac',
            't': 0x5
        }, {
            'p': [-0xe0, -0x2c4, -0x4f5],
            's': [0x8b, 0x36c, 0x8e],
            'l': 0x1,
            'c': '#343434',
            't': 0x5
        }, {
            'p': [-0x234, -0x2c4, -0x4bf],
            's': [0x9e, 0x31c, 0x8b],
            'l': 0x1,
            'c': '#b4b4b4',
            't': 0x5
        }, {
            'p': [0x1f4, -0x389, -0x390],
            's': [0x91, 0x505, 0x8e],
            'l': 0x1,
            'c': '#b6b6b6',
            't': 0x5
        }, {
            'p': [0x53, -0x389, -0x4ee],
            's': [0x91, 0x458, 0x8e],
            'l': 0x1,
            'c': '#7f7f7f',
            't': 0x5
        }, {
            'p': [-0x19e, -0x389, -0x5a7],
            's': [0x91, 0x42c, 0x8e],
            'l': 0x1,
            'c': '#ffffff',
            't': 0x5
        }, {
            'p': [-0x250, -0x2c4, -0x58a],
            's': [0x9e, 0x430, 0x8b],
            'l': 0x1,
            'c': '#7d7d7d',
            't': 0x5
        }, {
            'p': [0xf2, -0x2c4, -0x446],
            's': [0x17a, 0x31c, 0x8b],
            'l': 0x1,
            'c': '#6e6e6e',
            't': 0x5
        }, {
            'p': [0x1e4, -0x2c4, -0x28d],
            's': [0x9e, 0x393, 0x8b],
            'l': 0x1,
            'c': '#6e6e6e',
            't': 0x5
        }, {
            'p': [-0x4c1, -0x2c4, -0x237],
            's': [0x9e, 0x48e, 0x8b],
            'l': 0x1,
            'c': '#7d7d7d',
            't': 0x5
        }, {
            'p': [-0x4fb, -0x389, -0x48d],
            's': [0x91, 0x4d6, 0x8e],
            'l': 0x1,
            'c': '#b6b6b6',
            't': 0x5
        }, {
            'p': [0x3df, -0x2c4, 0x86],
            's': [0xab, 0x46d, 0x8a],
            'l': 0x1,
            'c': '#7d7d7d',
            't': 0x5
        }, {
            'p': [0x564, -0x2c4, -0x46],
            's': [0xab, 0x43c, 0x8a],
            'l': 0x1,
            'c': '#7d7d7d',
            't': 0x5
        }, {
            'p': [0x2a8, -0x2c4, 0x220],
            's': [0xab, 0x43c, 0x8a],
            'l': 0x1,
            'c': '#7d7d7d',
            't': 0x5
        }, {
            'p': [0x178, -0x389, 0x4f8],
            's': [0x91, 0x4e9, 0x8e],
            'l': 0x1,
            'c': '#b6b6b6',
            't': 0x5
        }, {
            'p': [-0x5af, -0x389, -0x9b],
            's': [0x91, 0x519, 0x8e],
            'l': 0x1,
            'c': '#b6b6b6',
            't': 0x5
        }, {
            'p': [-0x4b6, -0x389, 0x178],
            's': [0x91, 0x519, 0x8e],
            'l': 0x1,
            'c': '#b6b6b6',
            't': 0x5
        }, {
            'p': [0x163, 0xa1, -0x93],
            's': [0x97, 0x5, 0x93],
            'l': 0x1,
            'c': '#737373',
            't': 0x5
        }, {
            'p': [0x107, 0x59, 0x90],
            's': [0x1, 0x40, 0x1],
            'l': 0x1,
            'c': '#ffffff',
            't': 0x5
        }, {
            'p': [-0x3f, 0xa8, 0x130],
            's': [0x1, 0x28, 0x1],
            'l': 0x1,
            'c': '#ffffff',
            't': 0x5
        }, {
            'p': [0x30, 0xa6, 0x13b],
            's': [0x1b, 0xe, 0x16],
            'l': 0x1,
            'c': '#acacac',
            't': 0x5
        }, {
            'p': [-0x70, -0x2, 0xdd],
            's': [0x3, 0x8, 0x3],
            'l': 0x1,
            'c': '#696969',
            't': 0x5
        }, {
            'p': [0x134, -0xe, -0x37],
            's': [0x90, 0x4, 0x93],
            'c': '#696565',
            't': 0x5,
            'bo': 0x1
        }, {
            'p': [-0xc4, -0x2, 0xdd],
            's': [0x3, 0x8, 0x3],
            'l': 0x1,
            'c': '#696969',
            't': 0x5
        }, {
            'p': [-0x9a, 0x6, 0xdd],
            's': [0x74, 0x36, 0x3],
            'l': 0x1,
            'c': '#343434',
            't': 0x5
        }, {
            'p': [-0x1c0, -0x389, -0x308],
            's': [0x91, 0x3af, 0x8e],
            'c': '#828282',
            't': 0x5
        }, {
            'p': [-0x1c0, 0x26, -0x308],
            's': [0x95, 0x4, 0x93],
            'c': '#616161',
            't': 0x5,
            'bo': 0x1
        }, {
            'p': [0x3a0, -0x2c4, -0x1bb],
            's': [0xab, 0x43c, 0x8a],
            'l': 0x1,
            'c': '#ffffff',
            't': 0x5
        }, {
            'p': [0x5c, 0x19, 0x13e],
            's': [0x24, 0x88, 0x3],
            'l': 0x1,
            'c': '#200028',
            't': 0x5
        }, {
            'p': [0x64, 0x84, 0x13b],
            's': [0x3, 0x14, 0x3],
            'l': 0x1,
            'c': '#d200ff',
            'e': '#d200ff',
            't': 0x5
        }, {
            'p': [0x54, 0x84, 0x13b],
            's': [0x3, 0x14, 0x3],
            'l': 0x1,
            'c': '#d200ff',
            'e': '#d200ff',
            't': 0x5
        }, {
            'p': [0x5c, 0x8d, 0x13b],
            's': [0x11, 0x3, 0x3],
            'l': 0x1,
            'c': '#d200ff',
            'e': '#d200ff',
            't': 0x5
        }, {
            'p': [0x5c, 0x7d, 0x13b],
            's': [0x11, 0x3, 0x3],
            'l': 0x1,
            'c': '#d200ff',
            'e': '#d200ff',
            't': 0x5
        }, {
            'p': [0x64, 0x6c, 0x13b],
            's': [0x3, 0x14, 0x3],
            'l': 0x1,
            'c': '#d200ff',
            'e': '#d200ff',
            't': 0x5
        }, {
            'p': [0x53, 0x6c, 0x13b],
            's': [0x3, 0x14, 0x3],
            'l': 0x1,
            'c': '#d200ff',
            'e': '#d200ff',
            't': 0x5
        }, {
            'p': [0x5c, 0x6c, 0x13b],
            's': [0x11, 0x3, 0x3],
            'l': 0x1,
            'c': '#d200ff',
            'e': '#d200ff',
            't': 0x5
        }, {
            'p': [0x5c, 0x65, 0x13b],
            's': [0x15, 0x3, 0x3],
            'l': 0x1,
            'c': '#d200ff',
            'e': '#d200ff',
            't': 0x5
        }, {
            'p': [0x5c, 0x53, 0x13b],
            's': [0x3, 0x12, 0x3],
            'l': 0x1,
            'c': '#d200ff',
            'e': '#d200ff',
            't': 0x5
        }, {
            'p': [0x5b, 0x4d, 0x13b],
            's': [0x13, 0x3, 0x3],
            'l': 0x1,
            'c': '#d200ff',
            'e': '#d200ff',
            't': 0x5
        }, {
            'p': [0x64, 0x3c, 0x13b],
            's': [0x3, 0x14, 0x3],
            'l': 0x1,
            'c': '#d200ff',
            'e': '#d200ff',
            't': 0x5
        }, {
            'p': [0x5b, 0x3c, 0x13b],
            's': [0x13, 0x3, 0x3],
            'l': 0x1,
            'c': '#d200ff',
            'e': '#d200ff',
            't': 0x5
        }, {
            'p': [0x5b, 0x45, 0x13b],
            's': [0x13, 0x3, 0x3],
            'l': 0x1,
            'c': '#d200ff',
            'e': '#d200ff',
            't': 0x5
        }, {
            'p': [0x64, 0x24, 0x13b],
            's': [0x3, 0x14, 0x3],
            'l': 0x1,
            'c': '#d200ff',
            'e': '#d200ff',
            't': 0x5
        }, {
            'p': [0x5b, 0x24, 0x13b],
            's': [0x15, 0x3, 0x3],
            'l': 0x1,
            'c': '#d200ff',
            'e': '#d200ff',
            't': 0x5
        }, {
            'p': [0x4d, 0x38, 0x142],
            's': [0x16, 0x5, 0x4],
            'l': 0x1,
            'c': '#3e3e3e',
            't': 0x5
        }, {
            'p': [0x4d, 0x76, 0x142],
            's': [0x16, 0x5, 0x4],
            'l': 0x1,
            'c': '#3e3e3e',
            't': 0x5
        }, {
            'p': [0x37, 0x2c, -0x341],
            's': [0x11, 0x3, 0x4],
            'l': 0x1,
            'r': [0x0, 0x0, -0.52],
            'c': '#f000ff',
            'e': '#f000ff',
            't': 0x5
        }, {
            'p': [0x2e, 0x29, -0x341],
            's': [0x3, 0x9, 0x4],
            'l': 0x1,
            'r': [0x0, 0x0, -0.52],
            'c': '#f000ff',
            'e': '#f000ff',
            't': 0x5
        }, {
            'p': [0x37, 0x32, -0x341],
            's': [0x3, 0x1, 0x4],
            'l': 0x1,
            'r': [0x0, 0x0, -0.52],
            'c': '#f000ff',
            'e': '#f000ff',
            't': 0x5
        }, {
            'p': [0x38, 0x34, -0x341],
            's': [0x3, 0x1, 0x4],
            'l': 0x1,
            'r': [0x0, 0x0, -0.52],
            'c': '#f000ff',
            'e': '#f000ff',
            't': 0x5
        }, {
            'p': [0x4e, 0x2c, -0x341],
            's': [0x11, 0x3, 0x4],
            'l': 0x1,
            'c': '#f000ff',
            'e': '#f000ff',
            't': 0x5
        }, {
            'p': [0x62, 0x30, -0x341],
            's': [0x11, 0x3, 0x4],
            'l': 0x1,
            'c': '#f000ff',
            'e': '#f000ff',
            't': 0x5
        }, {
            'p': [0x62, 0x28, -0x341],
            's': [0x11, 0x3, 0x4],
            'l': 0x1,
            'c': '#f000ff',
            'e': '#f000ff',
            't': 0x5
        }, {
            'p': [0x69, 0x27, -0x341],
            's': [0x3, 0xc, 0x4],
            'l': 0x1,
            'c': '#f000ff',
            'e': '#f000ff',
            't': 0x5
        }, {
            'p': [0x79, 0x2c, -0x341],
            's': [0x11, 0x3, 0x4],
            'l': 0x1,
            'r': [0x0, 0x0, 0.52],
            'c': '#f000ff',
            'e': '#f000ff',
            't': 0x5
        }, {
            'p': [0x76, 0x31, -0x341],
            's': [0x3, 0x1, 0x4],
            'l': 0x1,
            'r': [0x0, 0x0, -0.52],
            'c': '#f000ff',
            'e': '#f000ff',
            't': 0x5
        }, {
            'p': [0x56, 0x1f, -0x344],
            's': [0x6b, 0x1e, 0x4],
            'l': 0x1,
            'c': '#0012ff',
            't': 0x5
        }, {
            'p': [0x30, 0x18, -0x34a],
            's': [0x5, 0x28, 0x5],
            'l': 0x1,
            'c': '#575757',
            't': 0x5
        }, {
            'p': [0x7d, 0x18, -0x34a],
            's': [0x5, 0x28, 0x5],
            'l': 0x1,
            'c': '#575757',
            't': 0x5
        }, {
            'p': [-0x4b6, 0x6a, 0x178],
            's': [0x69, 0x1f2, 0x67],
            'l': 0x1,
            'c': '#b6b6b6',
            't': 0x5
        }, {
            'p': [-0x4b6, 0x258, 0x178],
            's': [0x5, 0x5c, 0x6],
            'l': 0x1,
            'c': '#b6b6b6',
            't': 0x5
        }, {
            'p': [-0x3f, 0xce, 0x130],
            's': [0x3, 0x4, 0x3],
            'l': 0x1,
            'c': '#000000',
            'e': '#ff0000',
            't': 0x5
        }, {
            'p': [0x107, 0x98, 0x90],
            's': [0x3, 0x4, 0x3],
            'l': 0x1,
            'c': '#000000',
            'e': '#ff0000',
            't': 0x5
        }, {
            'p': [0x5c, 0x16, 0x13e],
            's': [0x29, 0x8e, 0x1],
            'l': 0x1,
            'c': '#d200ff',
            'e': '#d200ff',
            't': 0x5
        }, {
            'p': [-0x33e, 0x3c, 0x78],
            's': [0xbf, 0x2, 0x79],
            'l': 0x1,
            'c': '#707070',
            't': 0x5
        }, {
            'p': [0x57, 0x17, -0x37f],
            's': [0xa1, 0x2, 0x90],
            'l': 0x1,
            'c': '#5a5a5a',
            't': 0x5
        }, {
            'p': [-0x168, 0x12, -0x2c7],
            's': [0x4, 0x10, 0x4],
            'l': 0x1,
            'c': '#00ff2d',
            'e': '#00ff2d',
            't': 0x5
        }, {
            'p': [-0x168, 0x18, -0x2c7],
            's': [0x10, 0x4, 0x4],
            'l': 0x1,
            'c': '#00ff2d',
            'e': '#00ff2d',
            't': 0x5
        }, {
            'p': [-0x168, 0x11, -0x2c7],
            's': [0x7, 0x12, 0x1],
            'l': 0x1,
            'c': '#252a26',
            't': 0x5
        }, {
            'p': [-0x168, 0x17, -0x2c7],
            's': [0x12, 0x6, 0x1],
            'l': 0x1,
            'c': '#252a26',
            't': 0x5
        }, {
            'p': [-0x175, 0x19, -0x2c7],
            's': [0x8, 0x2, 0x1],
            'l': 0x1,
            'c': '#555555',
            't': 0x5
        }, {
            'p': [-0x250, 0x16a, -0x58a],
            's': [0x6, 0xa3, 0x5],
            'l': 0x1,
            'c': '#7d7d7d',
            't': 0x5
        }, {
            'p': [-0x250, 0x20e, -0x58a],
            's': [0x6, 0x6, 0x5],
            'l': 0x1,
            'c': '#ff0000',
            'e': '#ff0000',
            't': 0x5
        }, {
            'p': [-0x1f0, 0xd2, 0x315],
            's': [0x5, 0xcc, 0x3],
            'l': 0x1,
            'c': '#b6b6b6',
            't': 0x5
        }, {
            'p': [0x114, 0x81, -0x2e3],
            's': [0x97, 0x3, 0x94],
            'l': 0x1,
            'c': '#898989',
            't': 0x5
        }, {
            'p': [0xca, 0x3a, -0x2e3],
            's': [0x3, 0x38, 0x80],
            'l': 0x1,
            'c': '#434343',
            't': 0x5
        }, {
            'p': [0xc9, 0x37, -0x2e3],
            's': [0x5, 0x3, 0x84],
            'l': 0x1,
            'c': '#575656',
            't': 0x5
        }, {
            'p': [-0x2bc, 0x4c, -0x332],
            's': [0x95, 0x3, 0x92],
            'l': 0x1,
            'c': '#787272',
            't': 0x5
        }, {
            'p': [-0x279, 0xb7, -0x377],
            's': [0x99, 0x3, 0x97],
            'l': 0x1,
            'c': '#8c8c8c',
            't': 0x5
        }, {
            'p': [-0x4fb, 0x11a, -0x48d],
            's': [0x4, 0xa9, 0x4],
            'l': 0x1,
            'c': '#b6b6b6',
            't': 0x5
        }, {
            'p': [-0x1bf, -0x18, -0x2c0],
            's': [0x7b, 0x35, 0x2],
            'l': 0x1,
            'c': '#505050',
            't': 0x5
        }, {
            'p': [-0x1bf, -0x1a, -0x2bf],
            's': [0x7f, 0x2, 0x4],
            'l': 0x1,
            'c': '#525252',
            't': 0x5
        }, {
            'p': [-0x195, -0x1c, -0x3db],
            's': [0xa2, 0x4, 0x8f],
            'l': 0x1,
            'c': '#7d7d7d',
            't': 0x5
        }, {
            'p': [-0x175, -0x9, -0x2c7],
            's': [0x8, 0x3, 0x2],
            'l': 0x1,
            'c': '#555555',
            't': 0x5
        }, {
            'p': [-0x167, -0x35, -0x2c7],
            's': [0x13, 0x3d, 0x2],
            'l': 0x1,
            'c': '#555555',
            't': 0x5
        }, {
            'p': [-0x175, -0x23, -0x2c7],
            's': [0x8, 0x3, 0x2],
            'l': 0x1,
            'c': '#555555',
            't': 0x5
        }, {
            'p': [-0x167, -0x38, -0x2c7],
            's': [0x18, 0x42, 0x1],
            'l': 0x1,
            'c': '#00b3ff',
            'e': '#00b3ff',
            't': 0x5
        }, {
            'p': [0x11a, 0x62, -0x94],
            's': [0x3, 0x37, 0x78],
            'l': 0x1,
            'c': '#3e3e3e',
            't': 0x5
        }, {
            'p': [0x11a, 0x62, -0x94],
            's': [0x7, 0x2, 0x7c],
            'l': 0x1,
            'c': '#525252',
            't': 0x5
        }, {
            'p': [-0x1, 0x57, 0x127],
            's': [0x79, 0x39, 0x3],
            'l': 0x1,
            'c': '#393939',
            't': 0x5
        }, {
            'p': [-0x1, 0x56, 0x126],
            's': [0x7e, 0x2, 0x6],
            'l': 0x1,
            'c': '#555555',
            't': 0x5
        }, {
            'p': [0xf8, -0x50, 0x60],
            's': [0x3, 0x70, 0x1f],
            'l': 0x1,
            'c': '#000337',
            't': 0x5
        }, {
            'p': [0xf8, -0x53, 0x60],
            's': [0x1, 0x75, 0x23],
            'l': 0x1,
            'c': '#00b3ff',
            'e': '#00b3ff',
            't': 0x5
        }, {
            'p': [0xfa, 0x6, 0x74],
            's': [0x3, 0x5, 0xa],
            'l': 0x1,
            'c': '#181717',
            't': 0x5
        }, {
            'p': [0xfa, -0x3d, 0x74],
            's': [0x3, 0x5, 0xa],
            'l': 0x1,
            'c': '#181717',
            't': 0x5
        }, {
            'p': [0x105, -0x35, -0x8b],
            's': [0x2, 0x1b, 0xb],
            'c': '#001100',
            't': 0x5
        }, {
            'p': [0x105, -0x32, -0x8b],
            's': [0x3, 0x1, 0x7],
            'c': '#0eff00',
            'e': '#0eff00',
            't': 0x5
        }, {
            'p': [0x105, -0x32, -0x88],
            's': [0x3, 0x8, 0x1],
            'c': '#0eff00',
            'e': '#0eff00',
            't': 0x5
        }, {
            'p': [0x105, -0x2b, -0x8a],
            's': [0x3, 0x1, 0x7],
            'r': [0.17, 0x0, 0x0],
            'c': '#0eff00',
            'e': '#0eff00',
            't': 0x5
        }, {
            'p': [0x105, -0x1f, -0x8a],
            's': [0x3, 0x1, 0x7],
            'r': [0.35, 0x0, 0x0],
            'c': '#0eff00',
            'e': '#0eff00',
            't': 0x5
        }, {
            'p': [0x105, -0x22, -0x89],
            's': [0x3, 0x1, 0x6],
            'r': [1.58, 0x0, 0x0],
            'c': '#0eff00',
            'e': '#0eff00',
            't': 0x5
        }, {
            'p': [0x105, -0x31, -0x81],
            's': [0x1, 0x2, 0xa],
            'c': '#555555',
            't': 0x5
        }, {
            'p': [0x105, -0x21, -0x81],
            's': [0x1, 0x2, 0xa],
            'c': '#555555',
            't': 0x5
        }, {
            'p': [0x105, -0x22, -0x8e],
            's': [0x3, 0x1, 0x6],
            'r': [1.58, 0x0, 0x0],
            'c': '#0eff00',
            'e': '#0eff00',
            't': 0x5
        }, {
            'p': [0x105, -0x36, -0x91],
            's': [0x3, 0x1d, 0x1],
            'c': '#0eff00',
            'e': '#0eff00',
            't': 0x5
        }, {
            'p': [0x105, -0x36, -0x85],
            's': [0x3, 0x1d, 0x1],
            'c': '#0eff00',
            'e': '#0eff00',
            't': 0x5
        }, {
            'p': [0x105, -0x1a, -0x8b],
            's': [0x3, 0x1, 0xb],
            'c': '#0eff00',
            'e': '#0eff00',
            't': 0x5
        }, {
            'p': [0x105, -0x36, -0x8b],
            's': [0x3, 0x1, 0xb],
            'c': '#0eff00',
            'e': '#0eff00',
            't': 0x5
        }, {
            'p': [0xd3, 0x84, -0x2a0],
            's': [0x2, 0x40, 0x2],
            'l': 0x1,
            'c': '#ffffff',
            't': 0x5
        }, {
            'p': [0xd3, 0xc3, -0x2a0],
            's': [0x3, 0x4, 0x3],
            'l': 0x1,
            'c': '#000000',
            'e': '#ff0000',
            't': 0x5
        }, {
            'p': [-0x4a, -0x2, 0xe5],
            's': [0x17, 0x14, 0x16],
            'l': 0x1,
            'c': '#acacac',
            't': 0x5
        }, {
            'p': [-0x4a, 0x12, 0xe5],
            's': [0x19, 0x1, 0x18],
            'l': 0x1,
            'c': '#666666',
            't': 0x5
        }, {
            'p': [0xed, -0x35, -0x283],
            's': [0x3, 0xa4, 0x23],
            'l': 0x1,
            'c': '#181717',
            't': 0x5
        }, {
            'p': [0xef, 0x4e, -0x299],
            's': [0x3, 0x6, 0x9],
            'l': 0x1,
            'c': '#343434',
            't': 0x5
        }, {
            'p': [0xef, -0x12, -0x299],
            's': [0x3, 0x6, 0x9],
            'l': 0x1,
            'c': '#343434',
            't': 0x5
        }, {
            'p': [0xed, -0x3a, -0x283],
            's': [0x1, 0xad, 0x29],
            'l': 0x1,
            'c': '#bf00ff',
            'e': '#bf00ff',
            't': 0x5
        }, {
            'p': [-0x279, 0x6f, -0x32f],
            's': [0x83, 0x3b, 0x2],
            'l': 0x1,
            'c': '#413f3f',
            't': 0x5
        }, {
            'p': [-0x279, 0x6d, -0x32f],
            's': [0x86, 0x2, 0x6],
            'l': 0x1,
            'c': '#555555',
            't': 0x5
        }, {
            'p': [0x11a, 0x59, 0x9e],
            's': [0x1b, 0xe, 0x16],
            'l': 0x1,
            'c': '#acacac',
            't': 0x5
        }, {
            'p': [-0x1, 0x74, 0x125],
            's': [0x76, 0x0, 0x35],
            'i': 0xb,
            'l': 0x1,
            'r': [1.57, 0x0, -3.14],
            'bb': 0x4
        }, {
            'p': [-0x9a, 0x21, 0xdb],
            's': [0x6e, 0x0, 0x31],
            'i': 0xb,
            'l': 0x1,
            'r': [1.57, 0x0, -3.14],
            'bb': 0x1
        }, {
            'p': [0x118, 0x7e, -0x93],
            's': [0x75, 0x0, 0x32],
            'i': 0xb,
            'l': 0x1,
            'r': [1.57, 0x0, 1.57],
            'bb': 0x3
        }, {
            'p': [0xc8, 0x55, -0x2e3],
            's': [0x7e, 0x0, 0x38],
            'i': 0xb,
            'l': 0x1,
            'r': [1.57, 0x0, 1.57],
            'bb': 0x2
        }, {
            'p': [-0x1bf, 0x2, -0x2be],
            's': [0x78, 0x0, 0x32],
            'i': 0xb,
            'l': 0x1,
            'r': [1.57, 0x0, 0x0],
            'bb': 0x2
        }, {
            'p': [-0x279, 0x8c, -0x32d],
            's': [0x7f, 0x0, 0x37],
            'i': 0xb,
            'l': 0x1,
            'r': [1.57, 0x0, 0x0],
            'bb': 0x1
        }, {
            'p': [-0x2a2, -0x42, -0x2d1],
            's': [0x3, 0x8e, 0x23],
            'l': 0x1,
            'c': '#000000',
            't': 0x5
        }, {
            'p': [-0x2a2, 0x2a, -0x2e7],
            's': [0x3, 0x6, 0x9],
            'l': 0x1,
            'c': '#343434',
            't': 0x5
        }, {
            'p': [-0x2a2, -0x36, -0x2e7],
            's': [0x3, 0x6, 0x9],
            'l': 0x1,
            'c': '#343434',
            't': 0x5
        }, {
            'p': [-0x2a2, -0x47, -0x2d1],
            's': [0x1, 0x96, 0x27],
            'l': 0x1,
            'c': '#00ff2d',
            'e': '#00ff2d',
            't': 0x5
        }, {
            'p': [0x6, -0x4, -0x342],
            's': [0x8, 0x3, 0x2],
            'l': 0x1,
            'c': '#555555',
            't': 0x5
        }, {
            'p': [-0x7, -0x30, -0x342],
            's': [0x13, 0x3d, 0x2],
            'l': 0x1,
            'c': '#555555',
            't': 0x5
        }, {
            'p': [0x7, -0x1e, -0x342],
            's': [0x8, 0x3, 0x2],
            'l': 0x1,
            'c': '#555555',
            't': 0x5
        }, {
            'p': [-0x7, -0x33, -0x342],
            's': [0x16, 0x42, 0x1],
            'l': 0x1,
            'c': '#00b3ff',
            'e': '#00b3ff',
            't': 0x5
        }, {
            'p': [0x10, 0x2c, -0x35c],
            's': [0x4, 0x3, 0x11],
            'l': 0x1,
            'r': [-0.52, 0x0, -1.57],
            'c': '#f000ff',
            'e': '#f000ff',
            't': 0x5
        }, {
            'p': [0x12, 0x2e, -0x356],
            's': [0x4, 0x9, 0x3],
            'l': 0x1,
            'r': [-0.52, 0x0, -3.14],
            'c': '#f000ff',
            'e': '#f000ff',
            't': 0x5
        }, {
            'p': [0x13, 0x32, -0x35b],
            's': [0x4, 0x1, 0x3],
            'l': 0x1,
            'r': [-0.52, -0.05, 0.08],
            'c': '#f000ff',
            'e': '#f000ff',
            't': 0x5
        }, {
            'p': [0x11, 0x2c, -0x36f],
            's': [0x4, 0x3, 0x11],
            'l': 0x1,
            'c': '#f000ff',
            'e': '#f000ff',
            't': 0x5
        }, {
            'p': [0x11, 0x30, -0x387],
            's': [0x4, 0x3, 0x11],
            'l': 0x1,
            'c': '#f000ff',
            'e': '#f000ff',
            't': 0x5
        }, {
            'p': [0x11, 0x28, -0x387],
            's': [0x4, 0x3, 0x11],
            'l': 0x1,
            'c': '#f000ff',
            'e': '#f000ff',
            't': 0x5
        }, {
            'p': [0x11, 0x27, -0x38e],
            's': [0x4, 0xc, 0x3],
            'l': 0x1,
            'c': '#f000ff',
            'e': '#f000ff',
            't': 0x5
        }, {
            'p': [0x11, 0x2c, -0x39e],
            's': [0x4, 0x3, 0x11],
            'l': 0x1,
            'r': [-0.44, 0x0, -1.57],
            'c': '#f000ff',
            'e': '#f000ff',
            't': 0x5
        }, {
            'p': [0x13, 0x33, -0x39d],
            's': [0x4, 0x1, 0x3],
            'l': 0x1,
            'r': [0x0, 0x0, -3.14],
            'c': '#f000ff',
            'e': '#f000ff',
            't': 0x5
        }, {
            'p': [0x14, 0x1f, -0x37b],
            's': [0x4, 0x1e, 0x6b],
            'l': 0x1,
            'c': '#0012ff',
            't': 0x5
        }, {
            'p': [0x1a, 0x18, -0x355],
            's': [0x5, 0x28, 0x5],
            'l': 0x1,
            'c': '#575757',
            't': 0x5
        }, {
            'p': [0x1a, 0x18, -0x3a2],
            's': [0x5, 0x28, 0x5],
            'l': 0x1,
            'c': '#575757',
            't': 0x5
        }, {
            'p': [0x13, 0x35, -0x35c],
            's': [0x4, 0x1, 0x3],
            'l': 0x1,
            'r': [-0.52, -0.05, 0.08],
            'c': '#f000ff',
            'e': '#f000ff',
            't': 0x5
        }, {
            'p': [-0x4fb, 0x1c3, -0x48d],
            's': [0x6, 0x8, 0x6],
            'l': 0x1,
            'c': '#fc0000',
            'e': '#ff0000',
            't': 0x5
        }, {
            'p': [-0x1f0, 0x19d, 0x315],
            's': [0x6, 0x6, 0x5],
            'l': 0x1,
            'c': '#056100',
            'e': '#056100',
            't': 0x5
        }, {
            'p': [-0x1c1, -0x389, 0x64d],
            's': [0xd1, 0x60c, 0x8e],
            'l': 0x1,
            'c': '#b6b6b6',
            't': 0x5
        }, {
            'p': [0x6d2, -0x389, 0x875],
            's': [0xd1, 0x6b2, 0x8e],
            'l': 0x1,
            'c': '#b6b6b6',
            't': 0x5
        }, {
            'p': [0x1e4, 0x39, -0x1db],
            's': [0xd9, 0x4, 0xdc],
            'l': 0x1,
            'c': '#a0a0a0',
            't': 0x5
        }, {
            'p': [0xed, -0x19, 0xbe],
            's': [0x3, 0x36, 0x79],
            'l': 0x1,
            'c': '#434343',
            't': 0x5
        }, {
            'p': [0xeb, 0x2, 0xbf],
            's': [0x73, 0x0, 0x32],
            'i': 0xb,
            'l': 0x1,
            'r': [1.57, 0x0, 1.57],
            'bb': 0x1
        }, {
            'p': [0xf2, 0x37, 0xa0],
            's': [0x11, 0x3, 0x4],
            'l': 0x1,
            'r': [-0.43, -1.57, 0x0],
            'c': '#f000ff',
            'e': '#f000ff',
            't': 0x5
        }, {
            'p': [0xf2, 0x36, 0x99],
            's': [0x3, 0x9, 0x4],
            'l': 0x1,
            'r': [-0.43, -1.57, 0x0],
            'c': '#f000ff',
            'e': '#f000ff',
            't': 0x5
        }, {
            'p': [0xf2, 0x3c, 0x9f],
            's': [0x3, 0x1, 0x4],
            'l': 0x1,
            'r': [-0.43, -1.57, 0x0],
            'c': '#f000ff',
            'e': '#f000ff',
            't': 0x5
        }, {
            'p': [0xf2, 0x39, 0xb6],
            's': [0xd, 0x3, 0x4],
            'l': 0x1,
            'r': [0x0, -1.57, 0x0],
            'c': '#f000ff',
            'e': '#f000ff',
            't': 0x5
        }, {
            'p': [0xf2, 0x3d, 0xcd],
            's': [0x11, 0x3, 0x4],
            'l': 0x1,
            'r': [0x0, -1.57, 0x0],
            'c': '#f000ff',
            'e': '#f000ff',
            't': 0x5
        }, {
            'p': [0xf2, 0x35, 0xcd],
            's': [0x11, 0x3, 0x4],
            'l': 0x1,
            'r': [0x0, -1.57, 0x0],
            'c': '#f000ff',
            'e': '#f000ff',
            't': 0x5
        }, {
            'p': [0xf2, 0x34, 0xd4],
            's': [0x3, 0xc, 0x4],
            'l': 0x1,
            'r': [0x0, -1.57, 0x0],
            'c': '#f000ff',
            'e': '#f000ff',
            't': 0x5
        }, {
            'p': [0xf2, 0x37, 0xe7],
            's': [0x11, 0x3, 0x4],
            'l': 0x1,
            'r': [-0.61, -1.57, 0x0],
            'c': '#f000ff',
            'e': '#f000ff',
            't': 0x5
        }, {
            'p': [0xf2, 0x3e, 0xe3],
            's': [0x3, 0x2, 0x4],
            'l': 0x1,
            'r': [1.57, -1.48, 1.57],
            'c': '#f000ff',
            'e': '#f000ff',
            't': 0x5
        }, {
            'p': [0xf5, 0x2c, 0xc1],
            's': [0x6b, 0x1e, 0x4],
            'l': 0x1,
            'r': [0x0, -1.57, 0x0],
            'c': '#0012ff',
            't': 0x5
        }, {
            'p': [0xfb, 0x25, 0x9b],
            's': [0x5, 0x28, 0x5],
            'l': 0x1,
            'r': [0x0, -1.57, 0x0],
            'c': '#575757',
            't': 0x5
        }, {
            'p': [0xfb, 0x25, 0xe8],
            's': [0x5, 0x28, 0x5],
            'l': 0x1,
            'r': [0x0, -1.57, 0x0],
            'c': '#575757',
            't': 0x5
        }, {
            'p': [0xf2, 0x3e, 0x9d],
            's': [0x3, 0x1, 0x4],
            'l': 0x1,
            'r': [-0.43, -1.57, 0x0],
            'c': '#f000ff',
            'e': '#f000ff',
            't': 0x5
        }, {
            'p': [-0x20, -0x2c4, -0x73e],
            's': [0x9e, 0x528, 0x8b],
            'l': 0x1,
            'c': '#7d7d7d',
            't': 0x5
        }, {
            'p': [0x9a, 0x4e, -0x36d],
            's': [0x81, 0x37, 0x2],
            'l': 0x1,
            'c': '#323232',
            't': 0x5
        }, {
            'p': [0x9a, 0x69, -0x36b],
            's': [0x82, 0x0, 0x35],
            'i': 0xb,
            'l': 0x1,
            'r': [1.57, 0x0, 0x0],
            'bb': 0x4
        }, {
            'p': [0x122, 0xab, -0xcf],
            's': [0x4, 0x27, 0x9],
            'l': 0x1,
            'c': '#ff003b',
            'e': '#ff003b',
            't': 0x5
        }, {
            'p': [0x122, 0xab, -0xbf],
            's': [0x4, 0x27, 0x9],
            'l': 0x1,
            'c': '#ff003b',
            'e': '#ff003b',
            't': 0x5
        }, {
            'p': [0x122, 0xb4, -0xb1],
            's': [0x4, 0x15, 0xa],
            'l': 0x1,
            'c': '#ff003b',
            'e': '#ff003b',
            't': 0x5
        }, {
            'p': [0x122, 0xc9, -0x8f],
            's': [0x4, 0x9, 0x18],
            'l': 0x1,
            'c': '#ff003b',
            'e': '#ff003b',
            't': 0x5
        }, {
            'p': [0x122, 0xab, -0x58],
            's': [0x4, 0x9, 0x18],
            'l': 0x1,
            'c': '#ff003b',
            'e': '#ff003b',
            't': 0x5
        }, {
            'p': [0x122, 0xba, -0x74],
            's': [0x4, 0x9, 0x18],
            'l': 0x1,
            'c': '#ff003b',
            't': 0x5
        }, {
            'p': [0x122, 0xbb, -0xc7],
            's': [0x4, 0x8, 0x7],
            'l': 0x1,
            'c': '#ff003b',
            'e': '#ff003b',
            't': 0x5
        }, {
            'p': [0x122, 0xab, -0xaa],
            's': [0x4, 0x9, 0x18],
            'l': 0x1,
            'c': '#ff003b',
            'e': '#ff003b',
            't': 0x5
        }, {
            'p': [0x122, 0xc9, -0xaa],
            's': [0x4, 0x9, 0x18],
            'l': 0x1,
            'c': '#ff003b',
            'e': '#ff003b',
            't': 0x5
        }, {
            'p': [0x122, 0xb4, -0xa3],
            's': [0x4, 0x15, 0xa],
            'l': 0x1,
            'c': '#ff003b',
            'e': '#ff003b',
            't': 0x5
        }, {
            'p': [0x122, 0xab, -0x8f],
            's': [0x4, 0x1e, 0x9],
            'l': 0x1,
            'c': '#ff003b',
            'e': '#ff003b',
            't': 0x5
        }, {
            'p': [0x122, 0xab, -0x60],
            's': [0x4, 0x27, 0x8],
            'l': 0x1,
            'c': '#ff003b',
            'e': '#ff003b',
            't': 0x5
        }, {
            'p': [0x122, 0xab, -0x74],
            's': [0x4, 0x9, 0x18],
            'l': 0x1,
            'c': '#ff003b',
            't': 0x5
        }, {
            'p': [0x122, 0xc9, -0x74],
            's': [0x4, 0x9, 0x18],
            'l': 0x1,
            'c': '#ff003b',
            't': 0x5
        }, {
            'p': [0x122, 0xb3, -0x7c],
            's': [0x4, 0x16, 0x8],
            'l': 0x1,
            'c': '#ff003b',
            't': 0x5
        }, {
            'p': [0x11a, 0x35, -0x94],
            's': [0x3, 0x21, 0x7b],
            'l': 0x1,
            'c': '#282828',
            't': 0x5
        }, {
            'p': [0x11a, 0x6, -0x94],
            's': [0x3, 0x21, 0x7b],
            'l': 0x1,
            'c': '#282828',
            't': 0x5
        }, {
            'p': [-0x1, 0x29, 0x128],
            's': [0x72, 0x24, 0x2],
            'l': 0x1,
            'c': '#282828',
            't': 0x5
        }, {
            'p': [0x11a, -0x28, -0x94],
            's': [0x3, 0x21, 0x7b],
            'l': 0x1,
            'c': '#282828',
            't': 0x5
        }, {
            'p': [0x11a, -0x57, -0x94],
            's': [0x3, 0x21, 0x7b],
            'l': 0x1,
            'c': '#282828',
            't': 0x5
        }, {
            'p': [0x11a, -0x85, -0x94],
            's': [0x3, 0x21, 0x7b],
            'l': 0x1,
            'c': '#282828',
            't': 0x5
        }, {
            'p': [0x11a, -0xb1, -0x94],
            's': [0x3, 0x21, 0x7b],
            'l': 0x1,
            'c': '#282828',
            't': 0x5
        }, {
            'p': [0x11a, -0xdf, -0x94],
            's': [0x3, 0x21, 0x7b],
            'l': 0x1,
            'c': '#282828',
            't': 0x5
        }, {
            'p': [0x11a, -0x10d, -0x94],
            's': [0x3, 0x21, 0x7b],
            'l': 0x1,
            'c': '#282828',
            't': 0x5
        }, {
            'p': [-0x1, -0x4, 0x128],
            's': [0x72, 0x24, 0x2],
            'l': 0x1,
            'c': '#f5e14c',
            'e': '#f5e14c',
            't': 0x5
        }, {
            'p': [-0x1, -0x32, 0x128],
            's': [0x72, 0x24, 0x2],
            'l': 0x1,
            'c': '#282828',
            't': 0x5
        }, {
            'p': [-0x1, -0x61, 0x128],
            's': [0x72, 0x24, 0x2],
            'l': 0x1,
            'c': '#282828',
            't': 0x5
        }, {
            'p': [-0x1, -0x91, 0x128],
            's': [0x72, 0x24, 0x2],
            'l': 0x1,
            'c': '#f5e14c',
            'e': '#f5e14c',
            't': 0x5
        }, {
            'p': [-0x1, -0xc1, 0x128],
            's': [0x72, 0x24, 0x2],
            'l': 0x1,
            'c': '#282828',
            't': 0x5
        }, {
            'p': [-0x1, -0xf1, 0x128],
            's': [0x72, 0x24, 0x2],
            'l': 0x1,
            'c': '#282828',
            't': 0x5
        }, {
            'p': [-0x1, -0x121, 0x128],
            's': [0x72, 0x24, 0x2],
            'l': 0x1,
            'c': '#282828',
            't': 0x5
        }, {
            'p': [0xee, -0x44, 0xc0],
            's': [0x3, 0x21, 0x77],
            'l': 0x1,
            'c': '#282828',
            't': 0x5
        }, {
            'p': [0xee, -0x6f, 0xc0],
            's': [0x3, 0x21, 0x77],
            'l': 0x1,
            'c': '#282828',
            't': 0x5
        }, {
            'p': [0xee, -0x9a, 0xc0],
            's': [0x3, 0x21, 0x77],
            'l': 0x1,
            'c': '#f5e14c',
            'e': '#f5e14c',
            't': 0x5
        }, {
            'p': [0xee, -0xc5, 0xc0],
            's': [0x3, 0x21, 0x77],
            'l': 0x1,
            'c': '#282828',
            't': 0x5
        }, {
            'p': [0xee, -0xf0, 0xc0],
            's': [0x3, 0x21, 0x77],
            'l': 0x1,
            'c': '#282828',
            't': 0x5
        }, {
            'p': [0xee, -0x11a, 0xc0],
            's': [0x3, 0x21, 0x77],
            'l': 0x1,
            'c': '#282828',
            't': 0x5
        }, {
            'p': [0xee, -0x144, 0xc0],
            's': [0x3, 0x21, 0x77],
            'l': 0x1,
            'c': '#282828',
            't': 0x5
        }, {
            'p': [0xee, -0x114, -0x36],
            's': [0x3, 0x3b, 0x77],
            'l': 0x1,
            'c': '#b6b6b6',
            't': 0x3
        }, {
            'p': [0x11a, -0x138, -0x94],
            's': [0x3, 0x21, 0x7b],
            'l': 0x1,
            'c': '#282828',
            't': 0x5
        }, {
            'p': [-0x1c0, -0x47, -0x2c1],
            's': [0x7a, 0x24, 0x2],
            'l': 0x1,
            'c': '#282828',
            't': 0x5
        }, {
            'p': [-0x1c0, -0x74, -0x2c1],
            's': [0x7a, 0x24, 0x2],
            'l': 0x1,
            'c': '#282828',
            't': 0x5
        }, {
            'p': [-0x1c0, -0xa2, -0x2c1],
            's': [0x7a, 0x24, 0x2],
            'l': 0x1,
            'c': '#f5e14c',
            'e': '#f5e14c',
            't': 0x5
        }, {
            'p': [-0x1c0, -0xd1, -0x2c1],
            's': [0x7a, 0x24, 0x2],
            'l': 0x1,
            'c': '#282828',
            't': 0x5
        }, {
            'p': [-0x1c0, -0x100, -0x2c1],
            's': [0x7a, 0x24, 0x2],
            'l': 0x1,
            'c': '#282828',
            't': 0x5
        }, {
            'p': [-0x1c0, -0x130, -0x2c1],
            's': [0x7a, 0x24, 0x2],
            'l': 0x1,
            'c': '#282828',
            't': 0x5
        }, {
            'p': [-0x1c0, -0x15f, -0x2c1],
            's': [0x7a, 0x24, 0x2],
            'l': 0x1,
            'c': '#282828',
            't': 0x5
        }, {
            'p': [-0x6e, 0x1f, -0x3cc],
            's': [0x89, 0x2e, 0x2],
            'l': 0x1,
            'c': '#282828',
            't': 0x5
        }, {
            'p': [-0x6e, -0x1a, -0x3cc],
            's': [0x89, 0x2e, 0x2],
            'l': 0x1,
            'c': '#282828',
            't': 0x5
        }, {
            'p': [-0x6e, -0x54, -0x3cc],
            's': [0x89, 0x2e, 0x2],
            'l': 0x1,
            'c': '#282828',
            't': 0x5
        }, {
            'p': [-0x6e, -0x8d, -0x3cc],
            's': [0x89, 0x2e, 0x2],
            'l': 0x1,
            'c': '#f5e14c',
            'e': '#f5e14c',
            't': 0x5
        }, {
            'p': [-0x6e, -0xc6, -0x3cc],
            's': [0x89, 0x2e, 0x2],
            'l': 0x1,
            'c': '#282828',
            't': 0x5
        }, {
            'p': [-0x6e, -0x100, -0x3cc],
            's': [0x89, 0x2e, 0x2],
            'l': 0x1,
            'c': '#282828',
            't': 0x5
        }, {
            'p': [-0x6e, -0x13a, -0x3cc],
            's': [0x89, 0x2e, 0x2],
            'l': 0x1,
            'c': '#282828',
            't': 0x5
        }, {
            'p': [-0x6e, -0x175, -0x3cc],
            's': [0x89, 0x2e, 0x2],
            'l': 0x1,
            'c': '#282828',
            't': 0x5
        }, {
            'p': [-0x6e, -0x1ae, -0x3cc],
            's': [0x89, 0x2e, 0x2],
            'l': 0x1,
            'c': '#282828',
            't': 0x5
        }, {
            'p': [-0x6e, -0x1e6, -0x3cc],
            's': [0x89, 0x2e, 0x2],
            'l': 0x1,
            'c': '#282828',
            't': 0x5
        }, {
            'p': [0xcb, 0x0, -0x2e2],
            's': [0x3, 0x2e, 0x79],
            'l': 0x1,
            'c': '#282828',
            't': 0x5
        }, {
            'p': [0xcb, -0x38, -0x2e2],
            's': [0x3, 0x2e, 0x79],
            'l': 0x1,
            'c': '#f5e14c',
            'e': '#f5e14c',
            't': 0x5
        }, {
            'p': [0xcb, -0x72, -0x2e2],
            's': [0x3, 0x2e, 0x79],
            'l': 0x1,
            'c': '#282828',
            't': 0x5
        }, {
            'p': [0xcb, -0xae, -0x2e2],
            's': [0x3, 0x2e, 0x79],
            'l': 0x1,
            'c': '#282828',
            't': 0x5
        }, {
            'p': [0xcb, -0xea, -0x2e2],
            's': [0x3, 0x2e, 0x79],
            'l': 0x1,
            'c': '#282828',
            't': 0x5
        }, {
            'p': [0x9c, 0x8e, -0x36d],
            's': [0x7a, 0x2a, 0x3],
            'l': 0x1,
            'c': '#282828',
            't': 0x5
        }, {
            'p': [0x9c, 0xc0, -0x36d],
            's': [0x7a, 0x2a, 0x3],
            'l': 0x1,
            'c': '#282828',
            't': 0x5
        }, {
            'p': [0x9c, 0xf3, -0x36d],
            's': [0x7a, 0x2a, 0x3],
            'l': 0x1,
            'c': '#f5e14c',
            'e': '#f5e14c',
            't': 0x5
        }, {
            'p': [0x265, 0xdd, 0xd9],
            's': [0x7, 0x76, 0x4],
            'l': 0x1,
            'c': '#aaaaaa',
            't': 0x5
        }, {
            'p': [-0xd7, -0x58, -0x3d9],
            's': [0x3, 0xa4, 0x23],
            'l': 0x1,
            'r': [0x0, 1.57, 0x0],
            'c': '#181717',
            't': 0x5
        }, {
            'p': [-0xc1, -0x30, -0x3d9],
            's': [0x3, 0x6, 0x9],
            'l': 0x1,
            'r': [0x0, 1.57, 0x0],
            'c': '#343434',
            't': 0x5
        }, {
            'p': [-0xc1, 0x2a, -0x3d9],
            's': [0x3, 0x6, 0x9],
            'l': 0x1,
            'r': [0x0, 1.57, 0x0],
            'c': '#343434',
            't': 0x5
        }, {
            'p': [-0xd7, -0x5b, -0x3d9],
            's': [0x1, 0xaa, 0x28],
            'l': 0x1,
            'r': [0x0, 1.57, 0x0],
            'c': '#f000ff',
            'e': '#f000ff',
            't': 0x5
        }, {
            'p': [-0xaa, 0x58, -0x3da],
            's': [0x4, 0x27, 0x9],
            'l': 0x1,
            'r': [0x0, 1.57, 0x0],
            'c': '#fffb00',
            'e': '#fffb00',
            't': 0x5
        }, {
            'p': [-0x9a, 0x58, -0x3da],
            's': [0x4, 0x27, 0x9],
            'l': 0x1,
            'r': [0x0, 1.57, 0x0],
            'c': '#fffb00',
            'e': '#fffb00',
            't': 0x5
        }, {
            'p': [-0x6a, 0x76, -0x3da],
            's': [0x4, 0x9, 0x18],
            'l': 0x1,
            'r': [0x0, 1.57, 0x0],
            'c': '#fffb00',
            'e': '#fffb00',
            't': 0x5
        }, {
            'p': [-0x33, 0x58, -0x3da],
            's': [0x4, 0x9, 0x18],
            'l': 0x1,
            'r': [0x0, 1.57, 0x0],
            'c': '#fffb00',
            'e': '#fffb00',
            't': 0x5
        }, {
            'p': [-0x4f, 0x67, -0x3da],
            's': [0x4, 0x9, 0x18],
            'l': 0x1,
            'r': [0x0, 1.57, 0x0],
            'c': '#fffb00',
            'e': '#fffb00',
            't': 0x5
        }, {
            'p': [-0xa2, 0x68, -0x3da],
            's': [0x4, 0x8, 0x7],
            'l': 0x1,
            'r': [0x0, 1.57, 0x0],
            'c': '#fffb00',
            'e': '#fffb00',
            't': 0x5
        }, {
            'p': [-0x85, 0x58, -0x3da],
            's': [0x4, 0x9, 0x18],
            'l': 0x1,
            'r': [0x0, 1.57, 0x0],
            'c': '#fffb00',
            't': 0x5
        }, {
            'p': [-0x85, 0x76, -0x3da],
            's': [0x4, 0x9, 0x18],
            'l': 0x1,
            'r': [0x0, 1.57, 0x0],
            'c': '#fffb00',
            't': 0x5
        }, {
            'p': [-0x7e, 0x61, -0x3da],
            's': [0x4, 0x15, 0xa],
            'l': 0x1,
            'r': [0x0, 1.57, 0x0],
            'c': '#fffb00',
            't': 0x5
        }, {
            'p': [-0x6a, 0x58, -0x3da],
            's': [0x4, 0x1e, 0x9],
            'l': 0x1,
            'r': [0x0, 1.57, 0x0],
            'c': '#fffb00',
            'e': '#fffb00',
            't': 0x5
        }, {
            'p': [-0x3b, 0x58, -0x3da],
            's': [0x4, 0x27, 0x8],
            'l': 0x1,
            'r': [0x0, 1.57, 0x0],
            'c': '#fffb00',
            'e': '#fffb00',
            't': 0x5
        }, {
            'p': [-0x4f, 0x58, -0x3da],
            's': [0x4, 0x9, 0x18],
            'l': 0x1,
            'r': [0x0, 1.57, 0x0],
            'c': '#fffb00',
            'e': '#fffb00',
            't': 0x5
        }, {
            'p': [-0x4f, 0x76, -0x3da],
            's': [0x4, 0x9, 0x18],
            'l': 0x1,
            'r': [0x0, 1.57, 0x0],
            'c': '#fffb00',
            'e': '#fffb00',
            't': 0x5
        }, {
            'p': [-0x57, 0x60, -0x3da],
            's': [0x4, 0x16, 0x8],
            'l': 0x1,
            'r': [0x0, 1.57, 0x0],
            'c': '#fffb00',
            'e': '#fffb00',
            't': 0x5
        }, {
            'p': [-0x8c, 0x61, -0x3da],
            's': [0x4, 0x15, 0xa],
            'l': 0x1,
            'r': [0x0, 1.57, 0x0],
            'c': '#fffb00',
            't': 0x5
        }, {
            'p': [0x56, -0x1f, -0x339],
            's': [0x89, 0x2e, 0x2],
            'l': 0x1,
            'c': '#282828',
            't': 0x5
        }, {
            'p': [0x56, -0x56, -0x339],
            's': [0x89, 0x2e, 0x2],
            'l': 0x1,
            'c': '#282828',
            't': 0x5
        }, {
            'p': [0x56, -0x8e, -0x339],
            's': [0x89, 0x2e, 0x2],
            'l': 0x1,
            'c': '#f5e14c',
            'e': '#f5e14c',
            't': 0x5
        }, {
            'p': [0x56, -0xc7, -0x339],
            's': [0x89, 0x2e, 0x2],
            'l': 0x1,
            'c': '#282828',
            't': 0x5
        }, {
            'p': [0x56, -0x101, -0x339],
            's': [0x89, 0x2e, 0x2],
            'l': 0x1,
            'c': '#282828',
            't': 0x5
        }, {
            'p': [0x3e, 0x4a, -0x407],
            's': [0x2, 0x40, 0x2],
            'l': 0x1,
            'c': '#ffffff',
            't': 0x5
        }, {
            'p': [0x1b0, -0x284, -0x1c6],
            's': [0x3b, 0x2b0, 0xad],
            'l': 0x1,
            'c': '#f2f2f2',
            't': 0x3
        }, {
            'p': [0x1df, 0x25, 0x16],
            's': [0x3, 0x29, 0x79],
            'l': 0x1,
            'c': '#282828',
            't': 0x5
        }, {
            'p': [0x1df, -0xc, 0x16],
            's': [0x3, 0x29, 0x79],
            'l': 0x1,
            'c': '#f5e14c',
            'e': '#f5e14c',
            't': 0x5
        }, {
            'p': [0x1df, -0x3e, 0x16],
            's': [0x3, 0x29, 0x79],
            'l': 0x1,
            'c': '#282828',
            't': 0x5
        }, {
            'p': [0x1df, -0x71, 0x16],
            's': [0x3, 0x29, 0x79],
            'l': 0x1,
            'c': '#282828',
            't': 0x5
        }, {
            'p': [0x1aa, -0x116, 0x4a],
            's': [0x3, 0x3b, 0x79],
            'l': 0x1,
            'c': '#b6b6b6',
            't': 0x3
        }, {
            'p': [-0x178, -0x8, -0x30a],
            's': [0x4, 0x25, 0x79],
            'l': 0x1,
            'c': '#282828',
            't': 0x5
        }, {
            'p': [-0x178, -0x38, -0x30a],
            's': [0x4, 0x25, 0x79],
            'l': 0x1,
            'c': '#282828',
            't': 0x5
        }, {
            'p': [-0x178, -0x67, -0x30a],
            's': [0x4, 0x25, 0x79],
            'l': 0x1,
            'c': '#282828',
            't': 0x5
        }, {
            'p': [-0x178, -0x97, -0x30a],
            's': [0x4, 0x25, 0x79],
            'l': 0x1,
            'c': '#282828',
            't': 0x5
        }, {
            'p': [-0x178, -0xc7, -0x30a],
            's': [0x4, 0x25, 0x79],
            'l': 0x1,
            'c': '#282828',
            't': 0x5
        }, {
            'p': [-0x178, -0xf7, -0x30a],
            's': [0x4, 0x25, 0x79],
            'l': 0x1,
            'c': '#282828',
            't': 0x5
        }, {
            'p': [-0x178, -0x126, -0x30a],
            's': [0x4, 0x25, 0x79],
            'l': 0x1,
            'c': '#282828',
            't': 0x5
        }, {
            'p': [-0x31b, 0x19, 0x175],
            's': [0x3, 0x43, 0x7c],
            'l': 0x1,
            'c': '#282828',
            't': 0x5
        }, {
            'p': [0xf6, 0xa, 0x60],
            's': [0x2, 0x3, 0x12],
            'l': 0x1,
            'c': '#ff0086',
            'e': '#ff0086',
            't': 0x5
        }, {
            'p': [0xf6, -0x2, 0x60],
            's': [0x2, 0x3, 0x12],
            'l': 0x1,
            'c': '#ff0086',
            'e': '#ff0086',
            't': 0x5
        }, {
            'p': [0xf6, -0x12, 0x61],
            's': [0x2, 0x3, 0x12],
            'l': 0x1,
            'r': [-0.17, 0x0, 0x0],
            'c': '#ff0086',
            'e': '#ff0086',
            't': 0x5
        }, {
            'p': [0xf6, -0x8, 0x64],
            's': [0x2, 0x3, 0x14],
            'l': 0x1,
            'r': [1.57, 0x0, 0x0],
            'c': '#ff0086',
            'e': '#ff0086',
            't': 0x5
        }, {
            'p': [0xf6, 0x12, 0x60],
            's': [0x2, 0x2, 0x8],
            'l': 0x1,
            'c': '#ff0086',
            'e': '#ff0086',
            't': 0x5
        }, {
            'p': [0xf6, -0x27, 0x60],
            's': [0x2, 0x3, 0x12],
            'l': 0x1,
            'r': [-0.52, 0x0, 0x0],
            'c': '#ff0086',
            'e': '#ff0086',
            't': 0x5
        }, {
            'p': [0xf6, -0x1e, 0x5f],
            's': [0x2, 0x2, 0x8],
            'l': 0x1,
            'c': '#ff0086',
            'e': '#ff0086',
            't': 0x5
        }, {
            'p': [0xf6, -0x28, 0x65],
            's': [0x2, 0x3, 0xe],
            'l': 0x1,
            'r': [1.57, 0x0, 0x0],
            'c': '#ff0086',
            'e': '#ff0086',
            't': 0x5
        }, {
            'p': [0xf6, -0x3a, 0x60],
            's': [0x2, 0x3, 0x12],
            'l': 0x1,
            'c': '#ff0086',
            'e': '#ff0086',
            't': 0x5
        }, {
            'p': [0xf6, -0x45, 0x65],
            's': [0x2, 0x7, 0x3],
            'l': 0x1,
            'r': [0.17, 0x0, 0x0],
            'c': '#ff0086',
            'e': '#ff0086',
            't': 0x5
        }, {
            'p': [-0x2a2, 0x29, -0x2d8],
            's': [0x4, 0x12, 0x2],
            'l': 0x1,
            'c': '#feff00',
            'e': '#feff00',
            't': 0x5
        }, {
            'p': [-0x2a2, 0x29, -0x2ca],
            's': [0x4, 0x12, 0x2],
            'l': 0x1,
            'c': '#feff00',
            'e': '#feff00',
            't': 0x5
        }, {
            'p': [-0x2a2, 0x29, -0x2d1],
            's': [0x4, 0x2, 0x10],
            'l': 0x1,
            'c': '#feff00',
            'e': '#feff00',
            't': 0x5
        }, {
            'p': [-0x2a2, 0x2e, -0x2d3],
            's': [0x4, 0xb, 0x1],
            'l': 0x1,
            'c': '#feff00',
            'e': '#feff00',
            't': 0x5
        }, {
            'p': [-0x2a2, 0x2e, -0x2cf],
            's': [0x4, 0xb, 0x1],
            'l': 0x1,
            'c': '#feff00',
            'e': '#feff00',
            't': 0x5
        }, {
            'p': [-0x2a2, 0x38, -0x2cb],
            's': [0x5, 0x3, 0x5],
            'l': 0x1,
            'c': '#ffffff',
            'e': '#ffffff',
            't': 0x5
        }, {
            'p': [-0x2a2, 0x3b, -0x2d1],
            's': [0x5, 0x3, 0x11],
            'l': 0x1,
            'c': '#ffffff',
            'e': '#ffffff',
            't': 0x5
        }, {
            'p': [-0x2a2, 0x3e, -0x2d1],
            's': [0x5, 0x3, 0xd],
            'l': 0x1,
            'c': '#ffffff',
            'e': '#ffffff',
            't': 0x5
        }, {
            'p': [-0x2a2, 0x2e, -0x2dd],
            's': [0x4, 0xa, 0x2],
            'l': 0x1,
            'c': '#feff00',
            'e': '#feff00',
            't': 0x5
        }, {
            'p': [-0x2a2, 0x2e, -0x2da],
            's': [0x4, 0x2, 0x4],
            'l': 0x1,
            'c': '#feff00',
            'e': '#feff00',
            't': 0x5
        }, {
            'p': [-0x2a2, 0x36, -0x2da],
            's': [0x4, 0x2, 0x4],
            'l': 0x1,
            'c': '#feff00',
            'e': '#feff00',
            't': 0x5
        }, {
            'p': [-0x2a2, 0x13, -0x2ca],
            's': [0x4, 0x3, 0x15],
            'l': 0x1,
            'r': [1.57, 0x0, 0x0],
            'c': '#feff00',
            'e': '#feff00',
            't': 0x5
        }, {
            'p': [-0x2a2, 0xb, -0x2d2],
            's': [0x4, 0x3, 0x10],
            'l': 0x1,
            'r': [3.14, 0x0, 0x0],
            'c': '#feff00',
            'e': '#feff00',
            't': 0x5
        }, {
            'p': [-0x2a2, 0x15, -0x2ce],
            's': [0x4, 0x3, 0x9],
            'l': 0x1,
            'r': [-2.97, 0x0, 0x0],
            'c': '#feff00',
            'e': '#feff00',
            't': 0x5
        }, {
            'p': [-0x2a2, 0x19, -0x2d7],
            's': [0x4, 0x2, 0x4],
            'l': 0x1,
            'r': [2.09, 0x0, 0x0],
            'c': '#feff00',
            'e': '#feff00',
            't': 0x5
        }, {
            'p': [-0x2a2, 0x1b, -0x2da],
            's': [0x4, 0x2, 0x4],
            'l': 0x1,
            'r': [2.09, 0x0, 0x0],
            'c': '#feff00',
            'e': '#feff00',
            't': 0x5
        }, {
            'p': [-0x2a2, -0x8, -0x2d1],
            's': [0x4, 0x4, 0x15],
            'l': 0x1,
            'r': [3.14, 0x0, 0x0],
            'c': '#feff00',
            'e': '#feff00',
            't': 0x5
        }, {
            'p': [-0x2a2, -0x26, -0x2cc],
            's': [0x4, 0x3, 0x15],
            'l': 0x1,
            'r': [1.4, 0x0, 0x0],
            'c': '#feff00',
            'e': '#feff00',
            't': 0x5
        }, {
            'p': [-0x2a2, -0x26, -0x2d5],
            's': [0x4, 0x3, 0x16],
            'l': 0x1,
            'r': [1.57, 0x0, 0x0],
            'c': '#feff00',
            'e': '#feff00',
            't': 0x5
        }, {
            'p': [-0x2a2, -0x2c, -0x2d8],
            's': [0x4, 0x3, 0xb],
            'l': 0x1,
            'r': [-2.79, 0x0, 0x0],
            'c': '#feff00',
            'e': '#feff00',
            't': 0x5
        }, {
            'p': [-0x167, -0x1, -0x2c7],
            's': [0x6, 0x1, 0x3],
            'l': 0x1,
            'c': '#fff000',
            'e': '#fff000',
            't': 0x5
        }, {
            'p': [-0x168, -0x6, -0x2c7],
            's': [0xa, 0x2, 0x3],
            'l': 0x1,
            'r': [0x0, 0x0, 0.35],
            'c': '#fff000',
            'e': '#fff000',
            't': 0x5
        }, {
            'p': [-0x162, -0x6, -0x2c7],
            's': [0x7, 0x2, 0x3],
            'l': 0x1,
            'r': [0x0, 0x0, 1.92],
            'c': '#fff000',
            'e': '#fff000',
            't': 0x5
        }, {
            'p': [-0x166, -0x14, -0x2c7],
            's': [0xc, 0x2, 0x3],
            'l': 0x1,
            'r': [0x0, 0x0, 1.57],
            'c': '#fff000',
            'e': '#fff000',
            't': 0x5
        }, {
            'p': [-0x169, -0x27, -0x2c7],
            's': [0xc, 0x2, 0x3],
            'l': 0x1,
            'r': [0x0, 0x0, 1.57],
            'c': '#fff000',
            'e': '#fff000',
            't': 0x5
        }, {
            'p': [-0x163, -0x2d, -0x2c7],
            's': [0x2, 0x8, 0x3],
            'l': 0x1,
            'r': [0x0, 0x0, 1.4],
            'c': '#fff000',
            'e': '#fff000',
            't': 0x5
        }, {
            'p': [0xd8, -0x2, 0x102],
            's': [0x18, 0x4, 0x4],
            'l': 0x1,
            'r': [0x0, 0x0, -0.01],
            'c': '#ffffff',
            'e': '#ffffff',
            't': 0x5
        }, {
            'p': [0xdb, 0x4, 0x102],
            's': [0x4, 0x14, 0x4],
            'l': 0x1,
            'r': [0x0, 0x0, -0.35],
            'c': '#ffe100',
            'e': '#ffe100',
            't': 0x5
        }, {
            'p': [0xd7, 0x4, 0x102],
            's': [0x4, 0x10, 0x4],
            'l': 0x1,
            'r': [0x0, 0x0, -0.19],
            'c': '#ffe100',
            'e': '#ffe100',
            't': 0x5
        }, {
            'p': [0xd7, -0x5, 0x102],
            's': [0x25, 0x1f, 0x2],
            'l': 0x1,
            'c': '#e31a1a',
            'e': '#e31a1a',
            't': 0x5
        }, {
            'p': [0xd7, -0x8, 0x102],
            's': [0x2a, 0x24, 0x1],
            'l': 0x1,
            'c': '#4d4d4d',
            't': 0x5
        }, {
            'p': [0xee, 0x12, 0x102],
            's': [0x3, 0x4, 0x4],
            'l': 0x1,
            'c': '#4d4d4d',
            't': 0x5
        }, {
            'p': [0xee, 0x1, 0x102],
            's': [0x3, 0x4, 0x4],
            'l': 0x1,
            'c': '#4d4d4d',
            't': 0x5
        }, {
            'p': [-0x18f, -0x265, -0x395],
            's': [0x7b, 0x23a, 0x2],
            'l': 0x1,
            'c': '#b6b6b6',
            't': 0x3
        }, {
            'p': [-0xcc, 0x3b, -0x3d8],
            's': [0x4, 0x15, 0x5],
            'l': 0x1,
            'r': [-1.57, 0x0, 1.57],
            'c': '#fffb00',
            'e': '#fffb00',
            't': 0x5
        }, {
            'p': [-0xd0, 0x2f, -0x3d8],
            's': [0x4, 0x3, 0x9],
            'l': 0x1,
            'r': [-1.57, 0.7, 1.57],
            'c': '#fffb00',
            'e': '#fffb00',
            't': 0x5
        }, {
            'p': [-0xd6, 0xc, -0x3d8],
            's': [0x4, 0x15, 0x5],
            'l': 0x1,
            'r': [0x0, 1.57, 0x0],
            'c': '#fffb00',
            'e': '#fffb00',
            't': 0x5
        }, {
            'p': [-0xd6, -0x6, -0x3d8],
            's': [0x4, 0x5, 0x11],
            'l': 0x1,
            'r': [0x0, 1.57, 0x0],
            'c': '#fffb00',
            'e': '#fffb00',
            't': 0x5
        }, {
            'p': [-0xdc, -0x28, -0x3d8],
            's': [0x4, 0x17, 0x4],
            'l': 0x1,
            'r': [0x0, 1.57, 0x0],
            'c': '#fffb00',
            'e': '#fffb00',
            't': 0x5
        }, {
            'p': [-0xe1, -0x17, -0x3d8],
            's': [0x4, 0x15, 0x4],
            'l': 0x1,
            'r': [1.57, 0x0, -1.57],
            'c': '#fffb00',
            'e': '#fffb00',
            't': 0x5
        }, {
            'p': [-0xd8, -0x1e, -0x3d8],
            's': [0x4, 0x9, 0x4],
            'l': 0x1,
            'r': [1.57, 0x0, -1.57],
            'c': '#fffb00',
            'e': '#fffb00',
            't': 0x5
        }, {
            'p': [-0xd6, -0x31, -0x3d8],
            's': [0x4, 0x5, 0x16],
            'l': 0x1,
            'r': [0x0, 1.57, 0x0],
            'c': '#fffb00',
            'e': '#fffb00',
            't': 0x5
        }, {
            'p': [-0xd6, -0x4a, -0x3d8],
            's': [0x4, 0xd, 0x5],
            'l': 0x1,
            'r': [0x0, 1.57, 0x0],
            'c': '#fffb00',
            'e': '#fffb00',
            't': 0x5
        }, {
            'p': [-0x7, 0x4, -0x340],
            's': [0xb, 0x3, 0x2],
            'l': 0x1,
            'c': '#ff0086',
            'e': '#ff0086',
            't': 0x5
        }, {
            'p': [-0x7, -0x1, -0x340],
            's': [0x5, 0x2, 0x2],
            'l': 0x1,
            'c': '#ff0086',
            'e': '#ff0086',
            't': 0x5
        }, {
            'p': [-0x4, -0x15, -0x340],
            's': [0x2, 0xc, 0x2],
            'l': 0x1,
            'c': '#ff0086',
            'e': '#ff0086',
            't': 0x5
        }, {
            'p': [-0x6, -0x13, -0x340],
            's': [0x9, 0x2, 0x2],
            'l': 0x1,
            'c': '#ff0086',
            'e': '#ff0086',
            't': 0x5
        }, {
            'p': [-0x6, -0xd, -0x340],
            's': [0xd, 0x3, 0x2],
            'l': 0x1,
            'c': '#ff0086',
            'e': '#ff0086',
            't': 0x5
        }, {
            'p': [-0x7, -0x1f, -0x340],
            's': [0xd, 0x3, 0x2],
            'l': 0x1,
            'c': '#ff0086',
            'e': '#ff0086',
            't': 0x5
        }, {
            'p': [-0x5, -0x25, -0x340],
            's': [0x5, 0x2, 0x2],
            'l': 0x1,
            'r': [0x0, 0x0, 0.7],
            'c': '#ff0086',
            'e': '#ff0086',
            't': 0x5
        }, {
            'p': [-0x2ba, -0x71, -0x2ea],
            's': [0x76, 0x0, 0x37],
            'i': 0xb,
            'l': 0x1,
            'r': [1.57, 0x0, 0x0],
            'bb': 0x1
        }, {
            'p': [-0x2bb, -0x2f1, -0x2eb],
            's': [0x3d, 0x258, 0x2],
            'l': 0x1,
            'c': '#b6b6b6',
            't': 0x3
        }, {
            'p': [-0x17c, -0x2c4, -0x62d],
            's': [0x6f, 0x523, 0x66],
            'l': 0x1,
            'c': '#7d7d7d',
            't': 0x5
        }, {
            'p': [-0x5d3, -0x2c4, -0x43b],
            's': [0x6f, 0x4fc, 0x66],
            'l': 0x1,
            'c': '#7d7d7d',
            't': 0x5
        }, {
            'p': [0x127, 0x33, -0xf0],
            's': [0x3, 0x64, 0x23],
            'l': 0x1,
            'c': '#181717',
            't': 0x5
        }, {
            'p': [0x129, 0x75, -0xda],
            's': [0x3, 0x6, 0x9],
            'l': 0x1,
            'c': '#343434',
            't': 0x5
        }, {
            'p': [0x129, 0x51, -0xda],
            's': [0x3, 0x6, 0x9],
            'l': 0x1,
            'c': '#343434',
            't': 0x5
        }, {
            'p': [0x127, 0x30, -0xf0],
            's': [0x1, 0x6a, 0x29],
            'l': 0x1,
            'c': '#ff0000',
            'e': '#ff0000',
            't': 0x5
        }, {
            'p': [0x127, 0x89, -0xf1],
            's': [0x4, 0x4, 0x16],
            'l': 0x1,
            'c': '#ffe100',
            'e': '#ffe100',
            't': 0x5
        }, {
            'p': [0x129, 0x82, -0xf5],
            's': [0x4, 0x3, 0x8],
            'l': 0x1,
            'r': [0.87, 0x0, 0x0],
            'c': '#ffe100',
            'e': '#ffe100',
            't': 0x5
        }, {
            'p': [0x127, 0x6a, -0xf1],
            's': [0x4, 0x11, 0x5],
            'l': 0x1,
            'c': '#ffe100',
            'e': '#ffe100',
            't': 0x5
        }, {
            'p': [0x127, 0x41, -0xf1],
            's': [0x4, 0x4, 0x14],
            'l': 0x1,
            'r': [-0.35, 0x0, 0x0],
            'c': '#ffe100',
            'e': '#ffe100',
            't': 0x5
        }, {
            'p': [0x127, 0x4a, -0xf6],
            's': [0x4, 0x3, 0x8],
            'l': 0x1,
            'r': [0.52, 0x0, 0x0],
            'c': '#ffe100',
            'e': '#ffe100',
            't': 0x5
        }, {
            'p': [0x127, 0x59, -0xf1],
            's': [0x4, 0x4, 0x16],
            'l': 0x1,
            'c': '#ffe100',
            'e': '#ffe100',
            't': 0x5
        }, {
            'p': [0xed, 0x46, -0x27e],
            's': [0x4, 0x14, 0x5],
            'l': 0x1,
            'r': [-0.79, 0x0, 0x0],
            'c': '#fffb00',
            'e': '#fffb00',
            't': 0x5
        }, {
            'p': [0xed, 0x59, -0x283],
            's': [0x4, 0x5, 0x17],
            'l': 0x1,
            'c': '#fffb00',
            'e': '#fffb00',
            't': 0x5
        }, {
            'p': [0xed, 0x1f, -0x288],
            's': [0x4, 0x19, 0x5],
            'l': 0x1,
            'c': '#fffb00',
            'e': '#fffb00',
            't': 0x5
        }, {
            'p': [0xed, 0x2c, -0x27c],
            's': [0x4, 0x5, 0x9],
            'l': 0x1,
            'r': [-0.17, 0x0, 0x0],
            'c': '#fffb00',
            'e': '#fffb00',
            't': 0x5
        }, {
            'p': [0xed, 0x4, -0x28d],
            's': [0x4, 0x16, 0x5],
            'l': 0x1,
            'r': [0.96, 0x0, 0x0],
            'c': '#fffb00',
            'e': '#fffb00',
            't': 0x5
        }, {
            'p': [0xed, 0x0, -0x27f],
            's': [0x4, 0x5, 0xb],
            'l': 0x1,
            'r': [0.96, 0x0, 0x0],
            'c': '#fffb00',
            'e': '#fffb00',
            't': 0x5
        }, {
            'p': [0xed, -0x1c, -0x283],
            's': [0x4, 0x5, 0x17],
            'l': 0x1,
            'c': '#fffb00',
            'e': '#fffb00',
            't': 0x5
        }, {
            'p': [0xd8, 0x2, 0x102],
            's': [0x1d, 0xa, 0x5],
            'l': 0x1,
            'r': [0x0, 0x0, -0.01],
            'c': '#ffffff',
            'e': '#ffffff',
            't': 0x5
        }, {
            'p': [0x129, 0x2c, -0x33],
            's': [0x3, 0x81, 0x23],
            'l': 0x1,
            'c': '#181717',
            't': 0x5
        }, {
            'p': [0x12b, 0x8c, -0x49],
            's': [0x3, 0x6, 0x9],
            'l': 0x1,
            'c': '#343434',
            't': 0x5
        }, {
            'p': [0x12b, 0x48, -0x49],
            's': [0x3, 0x6, 0x9],
            'l': 0x1,
            'c': '#343434',
            't': 0x5
        }, {
            'p': [0x129, 0x28, -0x33],
            's': [0x1, 0x88, 0x29],
            'l': 0x1,
            'c': '#bf00ff',
            'e': '#bf00ff',
            't': 0x5
        }, {
            'p': [0x129, 0x84, -0x2e],
            's': [0x4, 0x14, 0x5],
            'l': 0x1,
            'r': [-0.79, 0x0, 0x0],
            'c': '#fffb00',
            'e': '#fffb00',
            't': 0x5
        }, {
            'p': [0x129, 0x97, -0x33],
            's': [0x4, 0x5, 0x17],
            'l': 0x1,
            'c': '#fffb00',
            'e': '#fffb00',
            't': 0x5
        }, {
            'p': [0x129, 0x5d, -0x38],
            's': [0x4, 0x19, 0x5],
            'l': 0x1,
            'c': '#fffb00',
            'e': '#fffb00',
            't': 0x5
        }, {
            'p': [0x129, 0x6a, -0x2c],
            's': [0x4, 0x5, 0x9],
            'l': 0x1,
            'r': [-0.17, 0x0, 0x0],
            'c': '#fffb00',
            'e': '#fffb00',
            't': 0x5
        }, {
            'p': [0x129, 0x42, -0x3d],
            's': [0x4, 0x16, 0x5],
            'l': 0x1,
            'r': [0.96, 0x0, 0x0],
            'c': '#fffb00',
            'e': '#fffb00',
            't': 0x5
        }, {
            'p': [0x129, 0x3e, -0x2f],
            's': [0x4, 0x5, 0xb],
            'l': 0x1,
            'r': [0.96, 0x0, 0x0],
            'c': '#fffb00',
            'e': '#fffb00',
            't': 0x5
        }, {
            'p': [0xc0, -0x3b, 0x1be],
            's': [0x74, 0x76, 0x2],
            'l': 0x1,
            'c': '#b6b6b6',
            't': 0x3
        }, {
            'p': [0xc0, -0xc9, 0x1be],
            's': [0x74, 0x76, 0x2],
            'l': 0x1,
            'c': '#b6b6b6',
            't': 0x3
        }, {
            'p': [0xc0, -0x15b, 0x1be],
            's': [0x74, 0x76, 0x2],
            'l': 0x1,
            'c': '#b6b6b6',
            't': 0x3
        }, {
            'p': [0x1aa, -0xb6, 0x4a],
            's': [0x3, 0x3b, 0x79],
            'l': 0x1,
            'c': '#b6b6b6',
            't': 0x3
        }, {
            'p': [0x1aa, -0x171, 0x4a],
            's': [0x3, 0x3b, 0x79],
            'l': 0x1,
            'c': '#b6b6b6',
            't': 0x3
        }, {
            'p': [0xc0, -0x1f5, 0x1be],
            's': [0x74, 0x76, 0x2],
            'l': 0x1,
            'c': '#b6b6b6',
            't': 0x3
        }, {
            'p': [-0x2e1, -0x19e, 0x77],
            's': [0x3, 0x1c0, 0x39],
            'l': 0x1,
            'c': '#b6b6b6',
            't': 0x3
        }, {
            'p': [-0x31b, 0x7a, 0x175],
            's': [0x3, 0x43, 0x7c],
            'l': 0x1,
            'c': '#282828',
            't': 0x5
        }, {
            'p': [-0x31b, -0x4b, 0x175],
            's': [0x3, 0x43, 0x7c],
            'l': 0x1,
            'c': '#282828',
            't': 0x5
        }, {
            'p': [-0x31b, -0xb0, 0x175],
            's': [0x3, 0x43, 0x7c],
            'l': 0x1,
            'c': '#f5e14c',
            'e': '#f5e14c',
            't': 0x5
        }, {
            'p': [-0x31b, -0x11c, 0x175],
            's': [0x3, 0x43, 0x7c],
            'l': 0x1,
            'c': '#282828',
            't': 0x5
        }, {
            'p': [0x194, -0x1c7, -0x28d],
            's': [0x3, 0x28b, 0x3b],
            'l': 0x1,
            'c': '#b6b6b6',
            't': 0x3
        }, {
            'p': [0x193, 0x54, -0x27f],
            's': [0x3, 0x1d, 0x1e],
            'l': 0x1,
            'c': '#f5e14c',
            'e': '#f5e14c',
            't': 0x5
        }, {
            'p': [0x193, -0x5f, -0x29a],
            's': [0x3, 0x1d, 0x1d],
            'l': 0x1,
            'c': '#f5e14c',
            'e': '#f5e14c',
            't': 0x5
        }, {
            'p': [0x192, -0x24, -0x27e],
            's': [0x1, 0x1d, 0x1d],
            'l': 0x1,
            'c': '#f5e14c',
            'e': '#f5e14c',
            't': 0x5
        }, {
            'p': [-0x2e0, -0x90, 0x68],
            's': [0x2, 0x1c, 0x1a],
            'l': 0x1,
            'c': '#f5e14c',
            'e': '#f5e14c',
            't': 0x5
        }, {
            'p': [-0xdc, -0x2c5, -0x4ae],
            's': [0x3d, 0x347, 0x2],
            'l': 0x1,
            'c': '#b6b6b6',
            't': 0x3
        }, {
            'p': [-0xea, 0x46, -0x4ad],
            's': [0x1c, 0x1d, 0x3],
            'l': 0x1,
            'c': '#f5e14c',
            'e': '#f5e14c',
            't': 0x5
        }, {
            'p': [-0xea, -0xe7, -0x4ad],
            's': [0x1c, 0x1d, 0x3],
            'l': 0x1,
            'c': '#f5e14c',
            'e': '#f5e14c',
            't': 0x5
        }, {
            'p': [0xee, -0xb8, -0x36],
            's': [0x3, 0x3b, 0x77],
            'l': 0x1,
            'c': '#b6b6b6',
            't': 0x3
        }, {
            'p': [0xee, -0x5f, -0x36],
            's': [0x3, 0x3b, 0x77],
            'l': 0x1,
            'c': '#b6b6b6',
            't': 0x3
        }, {
            'p': [-0x72, -0x4e, 0xd5],
            's': [0xa3, 0x3a, 0x2],
            'l': 0x1,
            'c': '#757575',
            't': 0x3
        }, {
            'p': [-0x72, -0xa4, 0xd5],
            's': [0xa3, 0x3a, 0x2],
            'l': 0x1,
            'c': '#757575',
            't': 0x3
        }, {
            'p': [-0x72, -0xfd, 0xd5],
            's': [0xa3, 0x3a, 0x2],
            'l': 0x1,
            'c': '#757575',
            't': 0x3
        }, {
            'p': [-0x72, -0x159, 0xd5],
            's': [0xa3, 0x3a, 0x2],
            'l': 0x1,
            'c': '#757575',
            't': 0x3
        }, {
            'p': [0x378, -0x284, -0x10a],
            's': [0xad, 0x30d, 0xb2],
            'l': 0x1,
            'c': '#f2f2f2',
            't': 0x3
        }, {
            'p': [0xb0, -0x1d, 0x1bd],
            's': [0x1a, 0x1c, 0x1],
            'l': 0x1,
            'c': '#f5e14c',
            'e': '#f5e14c',
            't': 0x5
        }, {
            'p': [0x93, -0x11e, 0x1bd],
            's': [0x1b, 0x1c, 0x1],
            'l': 0x1,
            'c': '#f5e14c',
            'e': '#f5e14c',
            't': 0x5
        }, {
            'p': [0xec, 0x0, 0x1bd],
            's': [0x1a, 0x1c, 0x1],
            'l': 0x1,
            'c': '#f5e14c',
            'e': '#f5e14c',
            't': 0x5
        }, {
            'p': [0x225, -0xb6, 0xd8],
            's': [0x3, 0x183, 0x75],
            'l': 0x1,
            'c': '#b6b6b6',
            't': 0x3
        }, {
            'p': [0x1d2, -0x286, -0x1bc],
            's': [0xad, 0x2a9, 0x79],
            'l': 0x1,
            'c': '#f2f2f2',
            't': 0x3
        }, {
            'p': [0x219, -0x284, -0x1c6],
            's': [0x3b, 0x2b0, 0xad],
            'l': 0x1,
            'c': '#f2f2f2',
            't': 0x3
        }, {
            'p': [-0x178, -0x15a, -0x30a],
            's': [0x4, 0x25, 0x79],
            'l': 0x1,
            'c': '#282828',
            't': 0x5
        }, {
            'p': [-0x46, -0x4e, 0xd4],
            's': [0x1c, 0x1c, 0x1],
            'l': 0x1,
            'c': '#f5e14c',
            'e': '#f5e14c',
            't': 0x5
        }, {
            'p': [-0xa0, -0x86, 0xd4],
            's': [0x1c, 0x1c, 0x1],
            'l': 0x1,
            'c': '#f5e14c',
            'e': '#f5e14c',
            't': 0x5
        }, {
            'p': [0x1a2, -0x4b, -0x170],
            's': [0x1d, 0x1d, 0x3],
            'l': 0x1,
            'c': '#f5e14c',
            'e': '#f5e14c',
            't': 0x5
        }, {
            'p': [0x225, -0xc2, -0x170],
            's': [0x1d, 0x1d, 0x3],
            'l': 0x1,
            'c': '#f5e14c',
            'e': '#f5e14c',
            't': 0x5
        }, {
            'p': [0x225, -0xd, -0x170],
            's': [0x1d, 0x1d, 0x3],
            'l': 0x1,
            'c': '#f5e14c',
            'e': '#f5e14c',
            't': 0x5
        }, {
            'p': [0x1c0, -0xff, -0x170],
            's': [0x1d, 0x1d, 0x3],
            'l': 0x1,
            'c': '#f5e14c',
            'e': '#f5e14c',
            't': 0x5
        }, {
            'p': [0x17c, -0x6b, -0x18f],
            's': [0x3, 0x1d, 0x1d],
            'l': 0x1,
            'c': '#f5e14c',
            'e': '#f5e14c',
            't': 0x5
        }, {
            'p': [0x17c, -0xe3, -0x1c9],
            's': [0x3, 0x1d, 0x1d],
            'l': 0x1,
            'c': '#f5e14c',
            'e': '#f5e14c',
            't': 0x5
        }, {
            'p': [0x17c, -0x4d, -0x1e8],
            's': [0x3, 0x1d, 0x1d],
            'l': 0x1,
            'c': '#f5e14c',
            'e': '#f5e14c',
            't': 0x5
        }, {
            'p': [-0x161, -0xe0, -0x395],
            's': [0x1c, 0x1d, 0x3],
            'l': 0x1,
            'c': '#f5e14c',
            'e': '#f5e14c',
            't': 0x5
        }, {
            'p': [-0x161, -0x4b, -0x395],
            's': [0x1c, 0x1d, 0x3],
            'l': 0x1,
            'c': '#f5e14c',
            'e': '#f5e14c',
            't': 0x5
        }, {
            'p': [-0x181, -0x265, -0x3db],
            's': [0x78, 0x238, 0x39],
            'l': 0x1,
            'c': '#b6b6b6',
            't': 0x3
        }, {
            'p': [-0x146, -0xc2, -0x3ce],
            's': [0x3, 0x1d, 0x1d],
            'l': 0x1,
            'c': '#f5e14c',
            'e': '#f5e14c',
            't': 0x5
        }, {
            'p': [-0x2ab, -0x110, -0x2ea],
            's': [0x1c, 0x1d, 0x1],
            'l': 0x1,
            'c': '#f5e14c',
            'e': '#f5e14c',
            't': 0x5
        }, {
            'p': [-0x82, -0x30, 0xd4],
            's': [0x1c, 0x1c, 0x1],
            'l': 0x1,
            'c': '#f5e14c',
            'e': '#f5e14c',
            't': 0x5
        }, {
            'p': [0x128, -0x29b, 0x18a],
            's': [0x74, 0x21a, 0x2],
            'l': 0x1,
            'c': '#b6b6b6',
            't': 0x3
        }, {
            'p': [0xfc, -0xbc, 0x189],
            's': [0x1b, 0x1c, 0x1],
            'l': 0x1,
            'c': '#f5e14c',
            'e': '#f5e14c',
            't': 0x5
        }, {
            'p': [0x136, -0xf6, 0x189],
            's': [0x1b, 0x1c, 0x1],
            'l': 0x1,
            'c': '#f5e14c',
            'e': '#f5e14c',
            't': 0x5
        }, {
            'p': [0x117, -0x16e, 0x189],
            's': [0x1b, 0x1c, 0x1],
            'l': 0x1,
            'c': '#f5e14c',
            'e': '#f5e14c',
            't': 0x5
        }, {
            'p': [0x1a8, -0x154, 0x1e],
            's': [0x3, 0x1d, 0x1d],
            'l': 0x1,
            'c': '#f5e14c',
            'e': '#f5e14c',
            't': 0x5
        }, {
            'p': [0x1a8, -0x115, 0x5a],
            's': [0x3, 0x1d, 0x1d],
            'l': 0x1,
            'c': '#f5e14c',
            'e': '#f5e14c',
            't': 0x5
        }, {
            'p': [0x1a8, -0xb6, 0x5a],
            's': [0x3, 0x1d, 0x1d],
            'l': 0x1,
            'c': '#f5e14c',
            'e': '#f5e14c',
            't': 0x5
        }, {
            'p': [0xed, -0x5f, -0x9],
            's': [0x3, 0x1c, 0x1c],
            'l': 0x1,
            'c': '#f5e14c',
            'e': '#f5e14c',
            't': 0x5
        }, {
            'p': [0xed, -0x9a, -0x63],
            's': [0x3, 0x1c, 0x1c],
            'l': 0x1,
            'c': '#f5e14c',
            'e': '#f5e14c',
            't': 0x5
        }, {
            'p': [0x224, 0x57, 0xac],
            's': [0x3, 0x1d, 0x1d],
            'l': 0x1,
            'c': '#f5e14c',
            'e': '#f5e14c',
            't': 0x5
        }, {
            'p': [0x224, 0x95, 0xac],
            's': [0x3, 0x1d, 0x1d],
            'l': 0x1,
            'c': '#f5e14c',
            'e': '#f5e14c',
            't': 0x5
        }, {
            'p': [0x224, 0x95, 0xe9],
            's': [0x3, 0x1d, 0x1d],
            'l': 0x1,
            'c': '#f5e14c',
            'e': '#f5e14c',
            't': 0x5
        }, {
            'p': [0x224, -0x40, 0xac],
            's': [0x3, 0x1d, 0x1d],
            'l': 0x1,
            'c': '#f5e14c',
            'e': '#f5e14c',
            't': 0x5
        }, {
            'p': [0x56, -0x13e, -0x339],
            's': [0x89, 0x2e, 0x2],
            'l': 0x1,
            'c': '#282828',
            't': 0x5
        }, {
            'p': [0x56, -0x181, -0x339],
            's': [0x89, 0x2e, 0x2],
            'l': 0x1,
            'c': '#282828',
            't': 0x5
        }, {
            'p': [0xcb, -0x12d, -0x2e2],
            's': [0x3, 0x2e, 0x79],
            'l': 0x1,
            'c': '#282828',
            't': 0x5
        }, {
            'p': [0x193, 0x91, -0x29a],
            's': [0x3, 0x1d, 0x1e],
            'l': 0x1,
            'c': '#f5e14c',
            'e': '#f5e14c',
            't': 0x5
        }, {
            'p': [-0x39e, -0x2cf, -0x195],
            's': [0x3, 0x30d, 0x74],
            'l': 0x1,
            'c': '#b6b6b6',
            't': 0x3
        }, {
            'p': [-0x96, -0x275, -0x11f],
            's': [0xaa, 0x25a, 0x28],
            't': 0x5
        }, {
            'p': [-0xdc, -0x1d, -0x147],
            's': [0x34, 0x2, 0x28],
            't': 0x5
        }, {
            'p': [-0xd7, -0x13, -0xcf],
            's': [0x28, 0x2, 0x28],
            't': 0x5
        }, {
            'p': [-0x8c, -0x275, -0xed],
            's': [0x6e, 0x28c, 0x14],
            'c': '#878383',
            't': 0x5
        }, {
            'p': [-0x69, -0xf, -0xcd],
            's': [0x28, 0x2, 0x2c],
            't': 0x5
        }, {
            'p': [-0xc1, -0x275, -0x101],
            's': [0x4, 0x264, 0x14],
            'c': '#878383',
            't': 0x5
        }, {
            'p': [-0x10e, -0x275, -0x11f],
            's': [0x32, 0x293, 0x28],
            'c': '#585858',
            't': 0x5
        }, {
            'p': [-0x96, -0x275, -0x142],
            's': [0x5a, 0x28c, 0x1e],
            'c': '#878383',
            't': 0x5
        }, {
            'p': [-0x4, -0x275, -0x19e],
            's': [0x3a, 0x26e, 0x9a],
            't': 0x5
        }, {
            'p': [-0x6e, -0x1b, -0x110],
            's': [0xa, 0x32, 0xa],
            'c': '#878383',
            't': 0x5
        }, {
            'p': [-0xbe, -0x1b, -0x110],
            's': [0xa, 0x32, 0xa],
            'c': '#878383',
            't': 0x5
        }, {
            'p': [-0xbe, -0x1d, -0x130],
            's': [0xa, 0x34, 0x6],
            'c': '#878383',
            't': 0x5
        }, {
            'p': [-0x6e, -0x1d, -0x130],
            's': [0xa, 0x34, 0x6],
            'c': '#878383',
            't': 0x5
        }, {
            'p': [-0x46, -0x1b, -0x110],
            's': [0xa, 0x32, 0xa],
            'c': '#878383',
            't': 0x5
        }, {
            'p': [-0x95, -0x1b, -0x110],
            's': [0xa, 0x32, 0xa],
            'c': '#878383',
            't': 0x5
        }, {
            'p': [-0x95, -0x1d, -0x130],
            's': [0xa, 0x34, 0x6],
            'c': '#878383',
            't': 0x5
        }, {
            'p': [-0x73, 0x16, -0x12e],
            's': [0xa1, 0x1, 0x47],
            'c': '#4a4a4a',
            't': 0x5,
            'bo': 0x1
        }, {
            'p': [-0x54, -0x275, -0x1b5],
            's': [0x66, 0x26e, 0x6b],
            't': 0x5
        }, {
            'p': [-0xaa, -0x275, -0x18d],
            's': [0x46, 0x28c, 0x64],
            'c': '#878383',
            't': 0x5
        }, {
            'p': [-0x73, 0x17, -0x12e],
            's': [0x9f, 0x32, 0x47],
            'c': '#ffffff',
            't': 0x5
        }, {
            'p': [-0xa5, 0x17, -0x156],
            's': [0x3c, 0x32, 0xa],
            't': 0x5
        }, {
            'p': [-0x113, -0x275, -0x1b0],
            's': [0x3c, 0x293, 0xaa],
            'c': '#585858',
            't': 0x5
        }, {
            'p': [-0xa5, 0x16, -0x156],
            's': [0x3d, 0x1, 0xa],
            'c': '#4a4a4a',
            't': 0x5,
            'bo': 0x1
        }, {
            'p': [-0x113, 0x1e, -0x188],
            's': [0x3d, 0x1, 0xfb],
            'c': '#4a4a4a',
            't': 0x5,
            'bo': 0x1
        }, {
            'p': [-0x172, -0x275, -0x115],
            's': [0x96, 0x293, 0x14],
            'c': '#585858',
            't': 0x5
        }, {
            'p': [-0x12c, -0x14, -0x129],
            's': [0xa, 0x32, 0x14],
            'c': '#585858',
            't': 0x5
        }, {
            'p': [-0x113, 0x1f, -0x188],
            's': [0x3c, 0x5f, 0xfa],
            'c': '#ffffff',
            't': 0x5
        }, {
            'p': [-0xa5, 0x47, -0x156],
            's': [0x3f, 0x3, 0x7],
            'c': '#4a4a4a',
            't': 0x5
        }, {
            'p': [-0x54, 0x47, -0x12e],
            's': [0xe1, 0x3, 0x49],
            'c': '#4a4a4a',
            't': 0x5
        }, {
            'p': [-0xed, -0x275, -0x11d],
            's': [0x4, 0x265, 0x24],
            'c': '#878383',
            't': 0x5
        }, {
            'p': [-0xf0, -0x1d, -0x131],
            's': [0xa, 0xd, 0x4],
            'c': '#878383',
            't': 0x5
        }, {
            'p': [-0x1d1, -0x275, -0x115],
            's': [0x28, 0x25a, 0x14],
            't': 0x5
        }, {
            'p': [-0x172, 0x1e, -0x115],
            's': [0x97, 0x1, 0x15],
            'c': '#4a4a4a',
            't': 0x5,
            'bo': 0x1
        }, {
            'p': [-0x177, 0x1f, -0x115],
            's': [0x8c, 0x32, 0x14],
            'c': '#ffffff',
            't': 0x5,
            'bo': 0x1
        }, {
            'p': [-0xb4, -0x1d, -0xb9],
            's': [0x6e, 0x34, 0x4],
            'c': '#878383',
            't': 0x5
        }, {
            'p': [-0x51, -0x275, -0xd7],
            's': [0x8, 0x28c, 0x40],
            'c': '#878383',
            't': 0x5
        }, {
            'p': [-0x9b, 0x17, -0xd7],
            's': [0x9f, 0x1, 0x41],
            'c': '#4a4a4a',
            't': 0x5,
            'bo': 0x1
        }, {
            'p': [-0xca, -0x275, -0x55],
            's': [0xa2, 0x268, 0xc5],
            't': 0x5
        }, {
            'p': [-0x18b, -0x275, -0x89],
            's': [0xc8, 0x25a, 0xdc],
            't': 0x5
        }, {
            'p': [-0x1ea, -0x1b, -0xf2],
            's': [0xa, 0x28, 0xa],
            'c': '#878383',
            't': 0x5
        }, {
            'p': [-0x1b8, -0x1b, -0xf2],
            's': [0xa, 0x28, 0xa],
            'c': '#878383',
            't': 0x5
        }, {
            'p': [-0x1d5, -0x1b, -0x102],
            's': [0x4, 0x1, 0x1e],
            'l': 0x1,
            'c': '#ffffff',
            't': 0x2
        }, {
            'p': [-0x1e7, -0x275, -0x115],
            's': [0x4, 0x25d, 0x14],
            'c': '#878383',
            't': 0x5
        }, {
            'p': [-0x1cd, -0x1b, -0x102],
            's': [0x4, 0x1, 0x1e],
            'l': 0x1,
            'c': '#ffffff',
            't': 0x2
        }, {
            'p': [-0x1d6, -0x1b, -0x7a],
            's': [0x32, 0x28, 0x32],
            'c': '#ffffff',
            't': 0x5
        }, {
            'p': [-0x16d, -0x1b, -0xde],
            's': [0x8c, 0x28, 0x32],
            'c': '#878383',
            't': 0x5
        }, {
            'p': [-0x1b8, -0x1d, -0xc9],
            's': [0xa, 0x32, 0xa],
            'c': '#878383',
            't': 0x5
        }, {
            'p': [-0x1ea, -0x1b, -0xca],
            's': [0xa, 0x28, 0xa],
            'c': '#878383',
            't': 0x5
        }, {
            'p': [-0x1b0, -0x1d, -0xc0],
            's': [0xa, 0x32, 0xa],
            'c': '#878383',
            't': 0x5
        }, {
            'p': [-0x1ea, -0x1b, -0x98],
            's': [0xa, 0x28, 0xa],
            'c': '#878383',
            't': 0x5
        }, {
            'p': [-0x1c2, -0x1d, -0x98],
            's': [0xa, 0x32, 0xa],
            'c': '#878383',
            't': 0x5
        }, {
            'p': [-0x1b8, -0x1d, -0x90],
            's': [0xa, 0x32, 0xa],
            'c': '#878383',
            't': 0x5
        }, {
            'p': [-0x1b8, -0x1d, -0x64],
            's': [0xa, 0x32, 0xa],
            'c': '#878383',
            't': 0x5
        }, {
            'p': [-0x1c2, -0x1d, -0x5c],
            's': [0xa, 0x32, 0xa],
            'c': '#878383',
            't': 0x5
        }, {
            'p': [-0x1ea, -0x1b, -0x5c],
            's': [0xa, 0x28, 0xa],
            'c': '#878383',
            't': 0x5
        }, {
            'p': [-0x1ea, -0x1b, -0x20],
            's': [0xa, 0x28, 0xa],
            'c': '#878383',
            't': 0x5
        }, {
            'p': [-0x186, -0x1d, -0x66],
            's': [0xa, 0x32, 0xa],
            'c': '#878383',
            't': 0x5
        }, {
            'p': [-0x154, -0x1b, -0x70],
            's': [0x5a, 0x28, 0xa9],
            'c': '#878383',
            't': 0x5
        }, {
            'p': [-0x186, -0x1d, -0x8e],
            's': [0xa, 0x32, 0xa],
            'c': '#878383',
            't': 0x5
        }, {
            'p': [-0x186, -0x1d, -0xc0],
            's': [0xa, 0x32, 0xa],
            'c': '#878383',
            't': 0x5
        }, {
            'p': [-0x18b, 0xd, -0x89],
            's': [0xc8, 0x7c, 0xdc],
            'c': '#ffffff',
            't': 0x5,
            'bo': 0x1
        }, {
            'p': [-0x104, 0x17, -0xe1],
            's': [0x33, 0x1, 0x55],
            'c': '#4a4a4a',
            't': 0x5,
            'bo': 0x1
        }, {
            'p': [-0xb5, -0x11, -0x1c],
            's': [0x7a, 0x12, 0x6e],
            'c': '#878383',
            't': 0x5
        }, {
            'p': [-0xb5, -0x275, -0xf],
            's': [0x50, 0x275, 0x50],
            'c': '#878383',
            't': 0x5
        }, {
            'p': [-0x172, -0x275, -0x7],
            's': [0x96, 0x25a, 0x28],
            't': 0x5
        }, {
            'p': [-0xb5, -0x275, -0x5d],
            's': [0x28, 0x276, 0x14],
            't': 0x5
        }, {
            'p': [-0xdd, -0xd, -0x5d],
            's': [0x28, 0xe, 0x14],
            'i': 0x9,
            't': 0x5
        }, {
            'p': [-0x8d, -0xd, -0x5d],
            's': [0x28, 0xe, 0x14],
            'i': 0x9,
            't': 0x5,
            'd': 0x2
        }, {
            'p': [-0x12f, -0x258, 0xf],
            's': [0x90, 0x24c, 0x4],
            'c': '#878383',
            't': 0x5
        }, {
            'p': [-0x14f, -0x275, -0x19],
            's': [0x50, 0x26b, 0x4],
            'c': '#878383',
            't': 0x5
        }, {
            'p': [-0x5, -0x275, -0x129],
            's': [0x3c, 0x26e, 0x50],
            't': 0x5
        }, {
            'p': [-0x28, -0x275, -0x131],
            's': [0x32, 0x28c, 0x40],
            'c': '#878383',
            't': 0x5
        }, {
            'p': [0xe, -0x275, -0xf7],
            's': [0x16, 0x28e, 0x14],
            'c': '#878383',
            't': 0x5
        }, {
            'p': [-0x10, -0x1d, -0xf7],
            's': [0x26, 0x16, 0x14],
            't': 0x5
        }, {
            'p': [-0xc, -0x7, -0x14c],
            's': [0x6, 0x1e, 0xa],
            'c': '#878383',
            't': 0x5
        }, {
            'p': [0x16, -0x7, -0x14c],
            's': [0x6, 0x1e, 0xa],
            'c': '#878383',
            't': 0x5
        }, {
            'p': [0x16, -0x7, -0x12e],
            's': [0x6, 0x1e, 0xa],
            'c': '#878383',
            't': 0x5
        }, {
            'p': [-0x5, 0x16, -0x11f],
            's': [0x3d, 0x1, 0x65],
            'c': '#4a4a4a',
            't': 0x5,
            'bo': 0x1
        }, {
            'p': [-0x33, 0x16, -0xfc],
            's': [0x1f, 0x1, 0x1f],
            'l': 0x1,
            'c': '#4a4a4a',
            't': 0x5
        }, {
            'p': [-0x5, 0x17, -0x11f],
            's': [0x3d, 0x41, 0x65],
            'c': '#ffffff',
            't': 0x5
        }, {
            'p': [-0x33, 0x17, -0xfc],
            's': [0x1f, 0x30, 0x1f],
            'l': 0x1,
            'c': '#ffffff',
            't': 0x5
        }, {
            'p': [0x0, -0x7, -0xf2],
            's': [0x6, 0x1e, 0xa],
            'c': '#878383',
            't': 0x5
        }, {
            'p': [-0x20, -0x7, -0xf2],
            's': [0x6, 0x1e, 0xa],
            'c': '#878383',
            't': 0x5
        }, {
            'p': [-0x19a, -0x275, 0xf],
            's': [0x46, 0x25c, 0x4],
            'c': '#878383',
            't': 0x5
        }, {
            'p': [-0x1bf, -0x275, -0x5],
            's': [0x4, 0x25c, 0x2c],
            'c': '#878383',
            't': 0x5
        }, {
            'p': [-0xe1, -0x275, -0x1f7],
            's': [0x28, 0x26e, 0x70],
            'c': '#ffffff',
            't': 0x5
        }, {
            'p': [-0xe1, -0x258, -0x15d],
            's': [0x28, 0x248, 0x4],
            'c': '#878383',
            't': 0x5
        }, {
            'p': [-0xe1, -0x10, -0x15d],
            's': [0x28, 0x1, 0x4],
            'c': '#4a4a4a',
            't': 0x5
        }, {
            'p': [-0xed, -0x10, -0x11d],
            's': [0x4, 0x1, 0x24],
            'c': '#4a4a4a',
            't': 0x5
        }, {
            'p': [-0xf0, -0x10, -0x131],
            's': [0xa, 0x1, 0x4],
            'c': '#4a4a4a',
            't': 0x5
        }, {
            'p': [-0x113, -0x275, -0x22d],
            's': [0x3c, 0x27e, 0x4],
            'c': '#878383',
            't': 0x5
        }, {
            'p': [-0x113, 0x9, -0x22d],
            's': [0x3c, 0x1, 0x4],
            'c': '#4a4a4a',
            't': 0x5
        }, {
            'p': [0x19, -0x275, -0x76],
            's': [0x64, 0x25a, 0xc8],
            't': 0x5
        }, {
            'p': [-0x1d1, -0x1b, -0x101],
            's': [0x4, 0x1, 0x1e],
            'l': 0x1,
            'c': '#aaa3a3',
            't': 0x2
        }, {
            'p': [-0x12, -0x7, -0xe2],
            's': [0x4, 0x1, 0x1e],
            'l': 0x1,
            'r': [0x0, 0.17, 0x0],
            'c': '#aaa1a1',
            't': 0x2
        }, {
            'p': [-0xa, -0x7, -0xe4],
            's': [0x4, 0x1, 0x1e],
            'l': 0x1,
            'r': [0x0, 0.17, 0x0],
            'c': '#caaaaa',
            't': 0x2
        }, {
            'p': [-0xe, -0x7, -0xe2],
            's': [0x4, 0x1, 0x1e],
            'l': 0x1,
            'r': [0x0, 0.17, 0x0],
            'c': '#ffffff',
            't': 0x2
        }, {
            'p': [-0xaa, -0x275, -0x1d3],
            's': [0x46, 0x26e, 0x28],
            'c': '#ffffff',
            't': 0x5
        }, {
            'p': [-0xaa, -0x275, -0x20c],
            's': [0x46, 0x28c, 0x4a],
            'c': '#878383',
            't': 0x5
        }, {
            'p': [-0xaa, 0x16, -0x1c6],
            's': [0x47, 0x1, 0xd7],
            'c': '#4a4a4a',
            't': 0x5,
            'bo': 0x1
        }, {
            'p': [-0xaa, 0x17, -0x1c6],
            's': [0x46, 0x32, 0xd6],
            'c': '#ffffff',
            't': 0x5
        }, {
            'p': [-0xaa, 0x47, -0x1c6],
            's': [0x49, 0x3, 0xd9],
            'c': '#4a4a4a',
            't': 0x5
        }, {
            'p': [-0x31, -0x275, -0x169],
            's': [0x20, 0x27c, 0x30],
            't': 0x5
        }, {
            'p': [-0xa5, -0x275, -0x156],
            's': [0x3c, 0x28b, 0xa],
            'c': '#878383',
            't': 0x5
        }, {
            'p': [-0xb, -0x275, -0x1bf],
            's': [0x29, 0x27c, 0x2c],
            't': 0x5
        }, {
            'p': [-0x37, -0x7, -0x1e9],
            's': [0xa0, 0x1, 0x4],
            'c': '#4a4a4a',
            't': 0x5
        }, {
            'p': [0x19, -0x7, -0x19e],
            's': [0x4, 0x1, 0x9a],
            'c': '#4a4a4a',
            't': 0x5
        }, {
            'p': [-0xc, -0x7, -0x116],
            's': [0x6, 0x1e, 0xa],
            'c': '#878383',
            't': 0x5
        }, {
            'p': [-0x32, -0x275, -0xff],
            's': [0x1e, 0x28c, 0x24],
            'c': '#878383',
            't': 0x5
        }, {
            'p': [0x8, 0x7, -0x1bf],
            's': [0x4, 0x1, 0x2e],
            'l': 0x1,
            'c': '#4a4a4a',
            't': 0x5
        }, {
            'p': [-0x22, 0x7, -0x169],
            's': [0x4, 0x1, 0x31],
            'l': 0x1,
            'c': '#4a4a4a',
            't': 0x5
        }, {
            'p': [-0x6a, 0x7, -0x169],
            's': [0x4, 0x1, 0x30],
            'l': 0x1,
            'c': '#4a4a4a',
            't': 0x5
        }, {
            'p': [-0x58, -0x275, -0x65],
            's': [0x42, 0x268, 0xa4],
            't': 0x5
        }, {
            'p': [0x19, -0x1b, -0xc3],
            's': [0x64, 0x14, 0x2e],
            't': 0x5
        }, {
            'p': [-0x28, -0x275, -0x8a],
            's': [0x1e, 0x28c, 0xaa],
            'c': '#878383',
            't': 0x5
        }, {
            'p': [0x50, -0x275, -0xa7],
            's': [0xa, 0x28c, 0xa],
            'c': '#878383',
            't': 0x5
        }, {
            'p': [0x1e, -0x7, -0xd5],
            's': [0xa, 0x1e, 0xa],
            'c': '#878383',
            't': 0x5
        }, {
            'p': [-0x14, -0x1b, -0xa7],
            's': [0xa, 0x32, 0xa],
            'c': '#878383',
            't': 0x5
        }, {
            'p': [0x1a, -0x1b, -0xa7],
            's': [0xa, 0x32, 0xa],
            'c': '#878383',
            't': 0x5
        }, {
            'p': [0x37, -0x275, -0xdf],
            's': [0x3c, 0x28c, 0xa],
            'c': '#878383',
            't': 0x5
        }, {
            'p': [0x37, -0x1b, -0xa7],
            's': [0x28, 0x14, 0xa],
            't': 0x5
        }, {
            'p': [0x37, -0x1b, -0x79],
            's': [0x28, 0x14, 0x52],
            'i': 0x9,
            't': 0x5,
            'd': 0x3
        }, {
            'p': [0x3, -0x1b, -0x93],
            's': [0x38, 0x14, 0x32],
            't': 0x5
        }, {
            'p': [0x1a, -0x7, -0x7f],
            's': [0xa, 0x1f, 0xa],
            'c': '#878383',
            't': 0x5
        }, {
            'p': [-0x14, -0x7, -0x7f],
            's': [0xa, 0x1f, 0xa],
            'c': '#878383',
            't': 0x5
        }, {
            'p': [0x21, -0x1b, -0x7e],
            's': [0x4, 0x17, 0x5c],
            'c': '#878383',
            't': 0x5
        }, {
            'p': [0x50, -0x275, -0x7f],
            's': [0xa, 0x28c, 0xa],
            'c': '#878383',
            't': 0x5
        }, {
            'p': [0x4d, -0x275, -0x65],
            's': [0x4, 0x270, 0x2a],
            'c': '#878383',
            't': 0x5
        }, {
            'p': [0x4d, -0x275, -0x93],
            's': [0x4, 0x270, 0x1e],
            'c': '#878383',
            't': 0x5
        }, {
            'p': [-0x14, -0x1b, -0x3a],
            's': [0xa, 0x32, 0xa],
            'c': '#878383',
            't': 0x5
        }, {
            'p': [-0x121, 0x17, -0x67],
            's': [0xd, 0x1, 0xa0],
            'c': '#4a4a4a',
            't': 0x5,
            'bo': 0x1
        }, {
            'p': [-0xb5, 0x2, -0x15],
            's': [0x1e, 0x1, 0x4],
            'c': '#282828',
            'e': '#ffffff',
            't': 0x5
        }, {
            'p': [-0xa4, 0x2, -0x15],
            's': [0x4, 0x1, 0x44],
            'c': '#282828',
            'e': '#ffffff',
            't': 0x5
        }, {
            'p': [-0xc6, 0x2, -0x15],
            's': [0x4, 0x1, 0x44],
            'c': '#282828',
            'e': '#ffffff',
            't': 0x5
        }, {
            'p': [-0x8d, 0x1, -0x1c],
            's': [0x2a, 0x2, 0x6e],
            'c': '#282828',
            't': 0x5
        }, {
            'p': [-0xb5, 0x1, -0x45],
            's': [0x26, 0x2, 0x1c],
            'c': '#282828',
            't': 0x5
        }, {
            'p': [-0xb5, 0x2, -0x27],
            's': [0x1e, 0x1, 0x20],
            'c': '#282828',
            't': 0x5
        }, {
            'p': [-0xb5, 0x2, -0x3],
            's': [0x1e, 0x1, 0x20],
            'c': '#282828',
            't': 0x5
        }, {
            'p': [-0x96, -0xe, 0x1b],
            's': [0x2, 0x11, 0x4],
            'i': 0x3,
            'c': '#ab1212',
            't': 0x5,
            'd': 0x1
        }, {
            'p': [0xf, -0x275, -0xe],
            's': [0x8c, 0x28c, 0xa],
            'c': '#878383',
            't': 0x5
        }, {
            'p': [-0x58, -0x275, -0x11],
            's': [0x42, 0x26a, 0x4],
            'c': '#878383',
            't': 0x5
        }, {
            'p': [-0xb5, -0x11, 0x1f],
            's': [0x9b, 0x1, 0x18],
            't': 0xc
        }, {
            'p': [-0xb5, -0x11, 0x2c],
            's': [0x9a, 0x2, 0x2],
            'c': '#464646',
            't': 0x5
        }, {
            'p': [-0x78, -0x11, 0xf],
            's': [0x2, 0x2, 0x38],
            'c': '#464646',
            't': 0x5
        }, {
            'p': [-0xb4, -0x11, 0x1a],
            's': [0x2, 0x2, 0x22],
            'c': '#464646',
            't': 0x5
        }, {
            'p': [-0x71, -0x11, 0x0],
            's': [0x13, 0x1, 0x22],
            't': 0xc
        }, {
            'p': [-0x71, -0x11, -0xe],
            's': [0x12, 0x2, 0x2],
            'c': '#464646',
            't': 0x5
        }, {
            'p': [-0x71, -0x10, 0x2],
            's': [0x13, 0x1, 0x1e],
            'v': 0x1,
            't': 0xc
        }, {
            'p': [-0xe, -0x8, -0xe3],
            's': [0x11, 0x1, 0x14],
            'v': 0x1,
            't': 0x5
        }, {
            'p': [0xf, 0x17, -0x76],
            's': [0x8d, 0x2, 0xdd],
            'c': '#4a4a4a',
            't': 0x5,
            'bo': 0x1
        }, {
            'p': [0xf, 0x19, -0x76],
            's': [0x8c, 0x4b, 0xdb],
            'c': '#ffffff',
            't': 0x5
        }, {
            'p': [-0xb4, 0x18, -0xd7],
            's': [0xd0, 0xa1, 0x40],
            'c': '#ffffff',
            't': 0x5
        }, {
            'p': [-0xb4, -0x7, -0xaf],
            's': [0x6e, 0xc0, 0x10],
            'c': '#ffffff',
            't': 0x5
        }, {
            'p': [-0xb4, 0x19, -0xa7],
            's': [0x5d, 0x96, 0x1],
            'c': '#5f5f5f',
            't': 0x5
        }, {
            'p': [-0xb4, 0x19, -0xa6],
            's': [0xa, 0xa0, 0x2],
            'c': '#ffffff',
            't': 0x5
        }, {
            'p': [-0x9b, 0x19, -0xa6],
            's': [0x28, 0xa, 0x2],
            'c': '#ffffff',
            't': 0x5
        }, {
            'p': [-0xcd, 0x19, -0xa6],
            's': [0x28, 0xa, 0x2],
            'c': '#ffffff',
            't': 0x5
        }, {
            'p': [-0xcd, 0x4b, -0xa6],
            's': [0x28, 0xa, 0x2],
            'c': '#ffffff',
            't': 0x5
        }, {
            'p': [-0x9b, 0x4b, -0xa6],
            's': [0x28, 0xa, 0x2],
            'c': '#ffffff',
            't': 0x5
        }, {
            'p': [-0xcd, 0x7d, -0xa6],
            's': [0x28, 0xa, 0x2],
            'c': '#ffffff',
            't': 0x5
        }, {
            'p': [-0x9b, 0x7d, -0xa6],
            's': [0x28, 0xa, 0x2],
            'c': '#ffffff',
            't': 0x5
        }, {
            'p': [-0xcd, 0xaf, -0xa6],
            's': [0x28, 0xa, 0x2],
            'c': '#ffffff',
            't': 0x5
        }, {
            'p': [-0x9b, 0xaf, -0xa6],
            's': [0x28, 0xa, 0x2],
            'c': '#ffffff',
            't': 0x5
        }, {
            'p': [-0x9b, 0x87, -0xa7],
            's': [0x28, 0x28, 0x2],
            'c': '#ffffff',
            'e': '#f5e14c',
            't': 0x5
        }, {
            'p': [-0xcd, 0x55, -0xa7],
            's': [0x28, 0x28, 0x2],
            'c': '#ffffff',
            'e': '#f5e14c',
            't': 0x5
        }, {
            'p': [-0xe6, 0x19, -0xa6],
            's': [0xa, 0xa0, 0x2],
            'c': '#ffffff',
            't': 0x5
        }, {
            'p': [-0x82, 0x19, -0xa6],
            's': [0xa, 0xa0, 0x2],
            'c': '#ffffff',
            't': 0x5
        }, {
            'p': [-0xb4, 0x17, -0xaf],
            's': [0x6f, 0x3, 0x15],
            'c': '#4a4a4a',
            't': 0x5,
            'bo': 0x1
        }, {
            'p': [-0xb4, 0xb9, -0xaf],
            's': [0x70, 0x3, 0x16],
            'c': '#4a4a4a',
            't': 0x5
        }, {
            'p': [-0xb4, 0xb9, -0xd7],
            's': [0xd4, 0x3, 0x42],
            'c': '#4a4a4a',
            't': 0x5
        }, {
            'p': [0x50, -0x275, -0xd5],
            's': [0xa, 0x28c, 0xa],
            'c': '#878383',
            't': 0x5
        }, {
            'p': [-0xe1, -0x7, -0x22d],
            's': [0x28, 0x1, 0x4],
            'c': '#4a4a4a',
            't': 0x5
        }, {
            'p': [-0x113, 0x7d, -0x188],
            's': [0x3e, 0x3, 0xfd],
            'c': '#4a4a4a',
            't': 0x5
        }, {
            'p': [-0x177, 0x51, -0x115],
            's': [0x8f, 0x3, 0x16],
            'c': '#4a4a4a',
            't': 0x5
        }, {
            'p': [-0x1d1, -0x1c, -0x102],
            's': [0x11, 0x1, 0x1e],
            'v': 0x1,
            'c': '#8e2e2e',
            't': 0x5
        }, {
            'p': [0x4d, -0x275, -0xbe],
            's': [0x4, 0x26e, 0x24],
            'c': '#878383',
            't': 0x5
        }, {
            'p': [-0x8c, -0x7, -0x1e2],
            's': [0xa, 0x1e, 0xa],
            'c': '#878383',
            't': 0x5
        }, {
            'p': [-0x8c, -0x7, -0x1c4],
            's': [0xa, 0x1e, 0xa],
            'c': '#878383',
            't': 0x5
        }, {
            'p': [-0xc8, -0x7, -0x1e2],
            's': [0xa, 0x1e, 0xa],
            'c': '#878383',
            't': 0x5
        }, {
            'p': [-0xc8, -0x7, -0x1c4],
            's': [0xa, 0x1e, 0xa],
            'c': '#878383',
            't': 0x5
        }, {
            'p': [0x50, -0x275, -0x18],
            's': [0xa, 0x28c, 0xa],
            'c': '#878383',
            't': 0x5
        }, {
            'p': [0x17, -0x275, -0x17],
            's': [0xa, 0x28c, 0xa],
            'c': '#878383',
            't': 0x5
        }, {
            'p': [0x3, -0x1b, -0x78],
            's': [0x38, 0x14, 0x4],
            'c': '#878383',
            't': 0x5
        }, {
            'p': [-0xe1, -0x7, -0x1c1],
            's': [0x28, 0x1, 0x4],
            'c': '#4a4a4a',
            't': 0x5
        }, {
            'p': [-0x18c, 0x71, -0xfa],
            's': [0x6e, 0x30, 0x4],
            'c': '#000337',
            't': 0x5
        }, {
            'p': [-0x18c, 0xa0, -0xfa],
            's': [0x70, 0x2, 0x5],
            'l': 0x1,
            'c': '#00b3ff',
            'e': '#00b3ff',
            't': 0x5
        }, {
            'p': [-0x18c, 0x6f, -0xfa],
            's': [0x70, 0x2, 0x5],
            'l': 0x1,
            'c': '#00b3ff',
            'e': '#00b3ff',
            't': 0x5
        }, {
            'p': [-0x1c4, 0x6f, -0xfa],
            's': [0x2, 0x33, 0x5],
            'l': 0x1,
            'c': '#00b3ff',
            'e': '#00b3ff',
            't': 0x5
        }, {
            'p': [-0x155, 0x6f, -0xfa],
            's': [0x2, 0x33, 0x5],
            'l': 0x1,
            'c': '#00b3ff',
            'e': '#00b3ff',
            't': 0x5
        }, {
            'p': [-0x198, 0x7a, -0xfa],
            's': [0x9, 0x9, 0x5],
            'l': 0x1,
            'c': '#ffffff',
            'e': '#ffffff',
            't': 0x5
        }, {
            'p': [-0x1a3, 0x7a, -0xfa],
            's': [0x9, 0x9, 0x5],
            'l': 0x1,
            'c': '#ffffff',
            'e': '#ffffff',
            't': 0x5
        }, {
            'p': [-0x1b6, 0x84, -0xfa],
            's': [0x9, 0x9, 0x5],
            'l': 0x1,
            'r': [0x0, 0x0, -0.87],
            'c': '#ffffff',
            'e': '#ffffff',
            't': 0x5
        }, {
            'p': [-0x1a3, 0x7d, -0xfa],
            's': [0x3, 0x3, 0x6],
            'l': 0x1,
            'c': '#ff5a00',
            'e': '#ff5a00',
            't': 0x5
        }, {
            'p': [-0x198, 0x7d, -0xfa],
            's': [0x3, 0x3, 0x6],
            'l': 0x1,
            'c': '#00ff0f',
            'e': '#00ff0f',
            't': 0x5
        }, {
            'p': [-0x1b4, 0x86, -0xfa],
            's': [0x3, 0x3, 0x6],
            'l': 0x1,
            'r': [0x0, 0x0, -0.87],
            'c': '#ff5a00',
            'e': '#ff5a00',
            't': 0x5
        }, {
            'p': [-0x1b4, 0x7a, -0xfa],
            's': [0x2, 0x2f, 0x6],
            'l': 0x1,
            'r': [0x0, 0x0, -0.87],
            'c': '#ffe100',
            'e': '#ffe100',
            't': 0x5
        }, {
            'p': [-0x1bc, 0x91, -0xfa],
            's': [0x2, 0x2f, 0x6],
            'l': 0x1,
            'r': [0x0, 0x0, -1.57],
            'c': '#ffe100',
            'e': '#ffe100',
            't': 0x5
        }, {
            'p': [-0x183, 0x8e, -0xfa],
            's': [0x2, 0xc, 0x6],
            'l': 0x1,
            'r': [0x0, 0x0, -1.05],
            'c': '#ffffff',
            'e': '#ffffff',
            't': 0x5
        }, {
            'p': [-0x174, 0x8b, -0xfb],
            's': [0x3, 0xe, 0x7],
            'l': 0x1,
            'r': [0x0, 0x0, 1.57],
            'c': '#ffffff',
            'e': '#ffffff',
            't': 0x5
        }, {
            'p': [-0x16a, 0x8b, -0xfa],
            's': [0x3, 0xe, 0x6],
            'l': 0x1,
            'r': [0x0, 0x0, -1.57],
            'c': '#ffffff',
            'e': '#ffffff',
            't': 0x5
        }, {
            'p': [-0x15b, 0x8e, -0xfa],
            's': [0x2, 0xc, 0x6],
            'l': 0x1,
            'r': [0x0, 0x0, 1.05],
            'c': '#ffffff',
            'e': '#ffffff',
            't': 0x5
        }, {
            'p': [-0x17c, 0x80, -0xfb],
            's': [0x5, 0x5, 0x7],
            'l': 0x1,
            'c': '#ffffff',
            'e': '#ff00ff',
            't': 0x5
        }, {
            'p': [-0x162, 0x80, -0xfb],
            's': [0x5, 0x5, 0x7],
            'l': 0x1,
            'c': '#ffffff',
            'e': '#ff00ff',
            't': 0x5
        }, {
            'p': [-0x1a5, 0x73, -0xfa],
            's': [0x36, 0x2, 0x5],
            'l': 0x1,
            'c': '#ff0000',
            'e': '#ff0000',
            't': 0x5
        }, {
            'p': [-0x1a4, 0x9c, -0xfa],
            's': [0x36, 0x2, 0x5],
            'l': 0x1,
            'c': '#ff0000',
            'e': '#ff0000',
            't': 0x5
        }, {
            'p': [-0x1c0, 0x73, -0xfa],
            's': [0x2, 0x2b, 0x5],
            'l': 0x1,
            'c': '#ff0000',
            'e': '#ff0000',
            't': 0x5
        }, {
            'p': [-0x189, 0x73, -0xfa],
            's': [0x2, 0x2b, 0x5],
            'l': 0x1,
            'c': '#ff0000',
            'e': '#ff0000',
            't': 0x5
        }, {
            'p': [-0x173, 0x7f, -0xfa],
            's': [0x5, 0x3, 0x6],
            'l': 0x1,
            'r': [0x0, 0x0, 1.57],
            'c': '#ff0000',
            'e': '#ff0000',
            't': 0x5
        }, {
            'p': [-0x168, 0x7f, -0xfa],
            's': [0x5, 0x3, 0x6],
            'l': 0x1,
            'r': [0x0, 0x0, 1.57],
            'c': '#ff0000',
            'e': '#ff0000',
            't': 0x5
        }, {
            'p': [-0x16b, 0x7c, -0xfa],
            's': [0x3, 0x8, 0x6],
            'l': 0x1,
            'r': [0x0, 0x0, 1.57],
            'c': '#ff0000',
            'e': '#ff0000',
            't': 0x5
        }, {
            'p': [-0x173, 0x54, -0x116],
            's': [0x16, 0xe, 0x8],
            't': 0x5
        }, {
            'p': [-0x14a, 0x54, -0x116],
            's': [0x16, 0xf, 0x8],
            't': 0x5
        }, {
            'p': [-0x14b, 0x57, -0x116],
            's': [0x3c, 0x4, 0x4],
            'c': '#878383',
            't': 0x5
        }, {
            'p': [-0x133, 0x57, -0x122],
            's': [0x4, 0x4, 0x14],
            'c': '#878383',
            't': 0x5
        }, {
            'p': [-0x133, 0x69, -0x13f],
            's': [0x4, 0x4, 0x1e],
            'c': '#878383',
            't': 0x5
        }, {
            'p': [-0x12d, 0x6d, -0x14c],
            's': [0xf, 0x17, 0x4],
            'c': '#878383',
            't': 0x5
        }, {
            'p': [-0x133, 0x47, -0x12e],
            's': [0x5, 0x1, 0x5],
            'c': '#ffffff',
            't': 0x5
        }, {
            'p': [-0x133, 0x5f, -0x12e],
            's': [0x5, 0x1, 0x5],
            'c': '#ffffff',
            't': 0x5
        }, {
            'p': [-0x133, 0x68, -0x145],
            's': [0x5, 0x6, 0x1],
            'c': '#ffffff',
            't': 0x5
        }, {
            'p': [-0x12f, 0x3e, -0x1d],
            's': [0x1, 0x2, 0xa],
            'c': '#1f1f1f',
            't': 0x5
        }, {
            'p': [-0x12f, 0x34, -0x7],
            's': [0x3, 0x2, 0x6],
            'l': 0x1,
            'c': '#fffb00',
            'e': '#fffb00',
            't': 0x5
        }, {
            'p': [-0x12f, 0x3b, -0x7],
            's': [0x2, 0x10, 0x1],
            'l': 0x1,
            'r': [-0.96, 0x0, 0x0],
            'c': '#ffffff',
            'e': '#ffffff',
            't': 0x5
        }, {
            'p': [-0x12f, 0x3a, -0xb],
            's': [0x2, 0xb, 0x1],
            'l': 0x1,
            'r': [-1.31, 0x0, 0x0],
            'c': '#ffffff',
            'e': '#ffffff',
            't': 0x5
        }, {
            'p': [-0x12f, 0x2f, -0xb],
            's': [0x4, 0x5, 0xf],
            'l': 0x1,
            'c': '#ffffff',
            'e': '#ffffff',
            't': 0x5
        }, {
            'p': [-0x12f, 0x29, 0x2],
            's': [0x3, 0x1e, 0x1],
            'l': 0x1,
            'c': '#181717',
            't': 0x5
        }, {
            'p': [-0x12f, 0x29, -0x18],
            's': [0x3, 0x1e, 0x1],
            'l': 0x1,
            'c': '#181717',
            't': 0x5
        }, {
            'p': [-0x12f, 0x47, -0xb],
            's': [0x3, 0x1, 0x1b],
            'l': 0x1,
            'c': '#181717',
            't': 0x5
        }, {
            'p': [-0x12f, 0x28, -0xb],
            's': [0x3, 0x1, 0x1b],
            'l': 0x1,
            'c': '#181717',
            't': 0x5
        }, {
            'p': [-0x12f, 0x2d, -0x1d],
            's': [0x1, 0x2, 0xa],
            'c': '#1f1f1f',
            't': 0x5
        }, {
            'p': [-0x12f, 0x29, -0xb],
            's': [0x1, 0x1e, 0x19],
            'c': '#2a8586',
            't': 0x5
        }, {
            'p': [-0x12f, 0x34, -0xd],
            's': [0x4, 0x1, 0x9],
            'l': 0x1,
            'c': '#ff7800',
            'e': '#ff7800',
            't': 0x5
        }, {
            'p': [-0x12f, 0x2d, -0xb],
            's': [0x3, 0x2, 0x9],
            'l': 0x1,
            'c': '#ffffff',
            'e': '#ffffff',
            't': 0x5
        }, {
            'p': [-0x12f, 0x34, -0xe],
            's': [0x2, 0x2, 0x3],
            'l': 0x1,
            'c': '#fffb00',
            'e': '#fffb00',
            't': 0x5
        }, {
            'p': [-0x12f, 0x34, -0xb],
            's': [0x2, 0x2, 0x2],
            'l': 0x1,
            'c': '#68ff00',
            'e': '#68ff00',
            't': 0x5
        }, {
            'p': [-0x12f, 0x36, -0xa],
            's': [0x3, 0x6, 0x3],
            'l': 0x1,
            'c': '#fffb00',
            'e': '#fffb00',
            't': 0x5
        }, {
            'p': [-0x12f, 0x35, -0xa],
            's': [0x4, 0x9, 0x1],
            'l': 0x1,
            'c': '#ff9600',
            'e': '#ff9600',
            't': 0x5
        }, {
            'p': [-0x12f, 0x3f, -0x5],
            's': [0x3, 0x6, 0x2],
            'l': 0x1,
            'r': [0.7, 0x0, 0x0],
            'c': '#ff0000',
            'e': '#ff0000',
            't': 0x5
        }, {
            'p': [-0x12f, 0x40, -0x9],
            's': [0x3, 0x4, 0x2],
            'l': 0x1,
            'r': [0.09, 0x0, 0x0],
            'c': '#ff0000',
            'e': '#ff0000',
            't': 0x5
        }, {
            'p': [-0x12f, 0x3c, -0x3],
            's': [0x3, 0x3, 0x2],
            'l': 0x1,
            'r': [1.14, 0x0, 0x0],
            'c': '#ff0000',
            'e': '#ff0000',
            't': 0x5
        }, {
            'p': [-0x1be, 0x2c, -0x116],
            's': [0x4, 0x1, 0x1],
            'c': '#372d2d',
            't': 0x5
        }, {
            'p': [-0x1be, 0x3b, -0x116],
            's': [0x4, 0x1, 0x1],
            'c': '#372d2d',
            't': 0x5
        }, {
            'p': [-0x1c8, 0x29, -0x116],
            's': [0x1, 0x17, 0x2],
            'l': 0x1,
            'c': '#ff00e0',
            'e': '#d200ff',
            't': 0x5
        }, {
            'p': [-0x1c0, 0x29, -0x116],
            's': [0x1, 0x17, 0x2],
            'l': 0x1,
            'c': '#ff00e0',
            'e': '#d200ff',
            't': 0x5
        }, {
            'p': [-0x1c4, 0x29, -0x116],
            's': [0x7, 0x1, 0x2],
            'l': 0x1,
            'c': '#ff00e0',
            'e': '#d200ff',
            't': 0x5
        }, {
            'p': [-0x1c4, 0x3f, -0x116],
            's': [0x7, 0x1, 0x2],
            'l': 0x1,
            'c': '#ff00e0',
            'e': '#d200ff',
            't': 0x5
        }, {
            'p': [-0x1c4, 0x2a, -0x116],
            's': [0x7, 0x15, 0x1],
            'c': '#120216',
            'e': '#010903',
            't': 0x5
        }, {
            'p': [-0x1c4, 0x3c, -0x116],
            's': [0x5, 0x1, 0x2],
            'l': 0x1,
            'c': '#ff00e0',
            'e': '#d200ff',
            't': 0x5
        }, {
            'p': [-0x1c5, 0x3b, -0x116],
            's': [0x1, 0x3, 0x2],
            'l': 0x1,
            'c': '#ff00e0',
            'e': '#d200ff',
            't': 0x5
        }, {
            'p': [-0x1c3, 0x3b, -0x116],
            's': [0x1, 0x3, 0x2],
            'l': 0x1,
            'c': '#ff00e0',
            'e': '#d200ff',
            't': 0x5
        }, {
            'p': [-0x1c4, 0x34, -0x116],
            's': [0x1, 0x6, 0x2],
            'l': 0x1,
            'c': '#ff00e0',
            'e': '#d200ff',
            't': 0x5
        }, {
            'p': [-0x1c3, 0x39, -0x116],
            's': [0x3, 0x1, 0x2],
            'l': 0x1,
            'r': [0x0, 0x0, 0.7],
            'c': '#ff00e0',
            'e': '#d200ff',
            't': 0x5
        }, {
            'p': [-0x1c5, 0x39, -0x116],
            's': [0x3, 0x1, 0x2],
            'l': 0x1,
            'r': [0x0, 0x0, -0.7],
            'c': '#ff00e0',
            'e': '#d200ff',
            't': 0x5
        }, {
            'p': [-0x1c4, 0x36, -0x116],
            's': [0x5, 0x1, 0x2],
            'l': 0x1,
            'c': '#ff00e0',
            'e': '#d200ff',
            't': 0x5
        }, {
            'p': [-0x1c2, 0x2e, -0x116],
            's': [0x1, 0x4, 0x2],
            'l': 0x1,
            'c': '#ff00e0',
            'e': '#d200ff',
            't': 0x5
        }, {
            'p': [-0x1c4, 0x2e, -0x116],
            's': [0x1, 0x5, 0x2],
            'l': 0x1,
            'c': '#ff00e0',
            'e': '#d200ff',
            't': 0x5
        }, {
            'p': [-0x1c4, 0x31, -0x116],
            's': [0x5, 0x1, 0x2],
            'l': 0x1,
            'c': '#ff00e0',
            'e': '#d200ff',
            't': 0x5
        }, {
            'p': [-0x1c5, 0x2d, -0x116],
            's': [0x3, 0x1, 0x2],
            'l': 0x1,
            'c': '#ff00e0',
            'e': '#d200ff',
            't': 0x5
        }, {
            'p': [-0x1c6, 0x2c, -0x116],
            's': [0x1, 0x1, 0x2],
            'l': 0x1,
            'c': '#ff00e0',
            'e': '#d200ff',
            't': 0x5
        }, {
            'p': [-0x1c3, 0x2c, -0x116],
            's': [0x1, 0x1, 0x2],
            'l': 0x1,
            'c': '#ff00e0',
            'e': '#d200ff',
            't': 0x5
        }, {
            'p': [-0x1c4, 0x2b, -0x116],
            's': [0x3, 0x1, 0x2],
            'l': 0x1,
            'c': '#ff00e0',
            'e': '#d200ff',
            't': 0x5
        }, {
            'p': [-0x1c6, 0x2b, -0x116],
            's': [0x1, 0x1, 0x2],
            'l': 0x1,
            'c': '#ff00e0',
            'e': '#d200ff',
            't': 0x5
        }, {
            'p': [-0x1c3, 0x2d, -0x116],
            's': [0x1, 0x1, 0x2],
            'l': 0x1,
            'c': '#ff00e0',
            'e': '#d200ff',
            't': 0x5
        }, {
            'p': [-0x37, 0x1e, -0xb],
            's': [0x4, 0x1, 0x1],
            'c': '#372d2d',
            't': 0x5
        }, {
            'p': [-0x37, 0x2d, -0xb],
            's': [0x4, 0x1, 0x1],
            'c': '#372d2d',
            't': 0x5
        }, {
            'p': [-0x41, 0x1b, -0xb],
            's': [0x1, 0x17, 0x2],
            'l': 0x1,
            'c': '#ff00e0',
            'e': '#d200ff',
            't': 0x5
        }, {
            'p': [-0x39, 0x1b, -0xb],
            's': [0x1, 0x17, 0x2],
            'l': 0x1,
            'c': '#ff00e0',
            'e': '#d200ff',
            't': 0x5
        }, {
            'p': [-0x3d, 0x1b, -0xb],
            's': [0x7, 0x1, 0x2],
            'l': 0x1,
            'c': '#ff00e0',
            'e': '#d200ff',
            't': 0x5
        }, {
            'p': [-0x3d, 0x31, -0xb],
            's': [0x7, 0x1, 0x2],
            'l': 0x1,
            'c': '#ff00e0',
            'e': '#d200ff',
            't': 0x5
        }, {
            'p': [-0x3d, 0x1c, -0xb],
            's': [0x7, 0x15, 0x1],
            'c': '#120216',
            'e': '#010903',
            't': 0x5
        }, {
            'p': [-0x3d, 0x2e, -0xb],
            's': [0x5, 0x1, 0x2],
            'l': 0x1,
            'c': '#ff00e0',
            'e': '#d200ff',
            't': 0x5
        }, {
            'p': [-0x3e, 0x2d, -0xb],
            's': [0x1, 0x3, 0x2],
            'l': 0x1,
            'c': '#ff00e0',
            'e': '#d200ff',
            't': 0x5
        }, {
            'p': [-0x3c, 0x2d, -0xb],
            's': [0x1, 0x3, 0x2],
            'l': 0x1,
            'c': '#ff00e0',
            'e': '#d200ff',
            't': 0x5
        }, {
            'p': [-0x3d, 0x26, -0xb],
            's': [0x1, 0x6, 0x2],
            'l': 0x1,
            'c': '#ff00e0',
            'e': '#d200ff',
            't': 0x5
        }, {
            'p': [-0x3c, 0x2b, -0xb],
            's': [0x3, 0x1, 0x2],
            'l': 0x1,
            'r': [0x0, 0x0, 0.7],
            'c': '#ff00e0',
            'e': '#d200ff',
            't': 0x5
        }, {
            'p': [-0x3e, 0x2b, -0xb],
            's': [0x3, 0x1, 0x2],
            'l': 0x1,
            'r': [0x0, 0x0, -0.7],
            'c': '#ff00e0',
            'e': '#d200ff',
            't': 0x5
        }, {
            'p': [-0x3d, 0x28, -0xb],
            's': [0x5, 0x1, 0x2],
            'l': 0x1,
            'c': '#ff00e0',
            'e': '#d200ff',
            't': 0x5
        }, {
            'p': [-0x3d, 0x20, -0xb],
            's': [0x1, 0x5, 0x2],
            'l': 0x1,
            'c': '#ff00e0',
            'e': '#d200ff',
            't': 0x5
        }, {
            'p': [-0x3d, 0x23, -0xb],
            's': [0x5, 0x1, 0x2],
            'l': 0x1,
            'c': '#ff00e0',
            'e': '#d200ff',
            't': 0x5
        }, {
            'p': [-0x3e, 0x1f, -0xb],
            's': [0x3, 0x1, 0x2],
            'l': 0x1,
            'c': '#ff00e0',
            'e': '#d200ff',
            't': 0x5
        }, {
            'p': [-0x3c, 0x1e, -0xb],
            's': [0x1, 0x1, 0x2],
            'l': 0x1,
            'c': '#ff00e0',
            'e': '#d200ff',
            't': 0x5
        }, {
            'p': [-0x3d, 0x1d, -0xb],
            's': [0x3, 0x1, 0x2],
            'l': 0x1,
            'c': '#ff00e0',
            'e': '#d200ff',
            't': 0x5
        }, {
            'p': [-0x3f, 0x1d, -0xb],
            's': [0x1, 0x1, 0x2],
            'l': 0x1,
            'c': '#ff00e0',
            'e': '#d200ff',
            't': 0x5
        }, {
            'p': [-0x3c, 0x1f, -0xb],
            's': [0x1, 0x1, 0x2],
            'l': 0x1,
            'c': '#ff00e0',
            'e': '#d200ff',
            't': 0x5
        }, {
            'p': [0xf, -0x16, 0x13],
            's': [0x1, 0xa4, 0x23],
            'c': '#181717',
            't': 0x5
        }, {
            'p': [0xf, -0x15, 0x22],
            's': [0x3, 0xa1, 0x1],
            'l': 0x1,
            'c': '#bf00ff',
            'e': '#bf00ff',
            't': 0x5
        }, {
            'p': [0xf, -0x15, 0x4],
            's': [0x2, 0xa1, 0x1],
            'l': 0x1,
            'c': '#bf00ff',
            'e': '#bf00ff',
            't': 0x5
        }, {
            'p': [0xf, -0x14, 0x13],
            's': [0x2, 0x1, 0x1d],
            'l': 0x1,
            'c': '#bf00ff',
            'e': '#bf00ff',
            't': 0x5
        }, {
            'p': [0xf, 0x8b, 0x13],
            's': [0x3, 0x1, 0x1d],
            'l': 0x1,
            'c': '#bf00ff',
            'e': '#bf00ff',
            't': 0x5
        }, {
            'p': [0x10, 0x3a, -0x6],
            's': [0x1, 0x3, 0x10],
            'c': '#101010',
            't': 0x5
        }, {
            'p': [0xf, 0x83, 0x12],
            's': [0x4, 0x1, 0x11],
            'l': 0x1,
            'c': '#fffb00',
            'e': '#fffb00',
            't': 0x5
        }, {
            'p': [0xf, 0x82, 0x12],
            's': [0x3, 0x3, 0x13],
            'l': 0x1,
            'c': '#ffffff',
            't': 0x5
        }, {
            'p': [0xf, 0x7b, 0x12],
            's': [0x4, 0x1, 0xe],
            'l': 0x1,
            'c': '#fffb00',
            'e': '#fffb00',
            't': 0x5
        }, {
            'p': [0xf, 0x7a, 0x12],
            's': [0x3, 0x3, 0x10],
            'l': 0x1,
            'c': '#ffffff',
            't': 0x5
        }, {
            'p': [0xf, 0x72, 0x12],
            's': [0x4, 0x1, 0x15],
            'l': 0x1,
            'c': '#fffb00',
            'e': '#fffb00',
            't': 0x5
        }, {
            'p': [0xf, 0x71, 0x12],
            's': [0x3, 0x3, 0x17],
            'l': 0x1,
            'c': '#ffffff',
            't': 0x5
        }, {
            'p': [0xf, 0x72, 0x12],
            's': [0x4, 0x11, 0x1],
            'l': 0x1,
            'c': '#fffb00',
            'e': '#fffb00',
            't': 0x5
        }, {
            'p': [0xf, 0x72, 0x12],
            's': [0x3, 0x11, 0x3],
            'l': 0x1,
            'c': '#ffffff',
            't': 0x5
        }, {
            'p': [0xf, 0x67, 0x12],
            's': [0x3, 0x3, 0x13],
            'l': 0x1,
            'r': [0.17, 0x0, 0x0],
            'c': '#ffffff',
            't': 0x5
        }, {
            'p': [0xf, 0x68, 0x12],
            's': [0x4, 0x1, 0x11],
            'l': 0x1,
            'r': [0.17, 0x0, 0x0],
            'c': '#fffb00',
            'e': '#fffb00',
            't': 0x5
        }, {
            'p': [0xf, 0x5f, 0x11],
            's': [0x4, 0xd, 0x1],
            'l': 0x1,
            'r': [-0.52, 0x0, 0x0],
            'c': '#fffb00',
            'e': '#fffb00',
            't': 0x5
        }, {
            'p': [0xf, 0x5f, 0x10],
            's': [0x3, 0xc, 0x3],
            'l': 0x1,
            'r': [-0.52, 0x0, 0x0],
            'c': '#ffffff',
            't': 0x5
        }, {
            'p': [0xf, 0x5e, 0x12],
            's': [0x4, 0x1, 0x15],
            'l': 0x1,
            'c': '#fffb00',
            'e': '#fffb00',
            't': 0x5
        }, {
            'p': [0xf, 0x5d, 0x12],
            's': [0x3, 0x3, 0x17],
            'l': 0x1,
            'c': '#ffffff',
            't': 0x5
        }, {
            'p': [0xf, 0x51, 0xe],
            's': [0x4, 0xd, 0x1],
            'l': 0x1,
            'r': [0.17, 0x0, 0x0],
            'c': '#fffb00',
            'e': '#fffb00',
            't': 0x5
        }, {
            'p': [0xf, 0x50, 0xe],
            's': [0x3, 0xf, 0x3],
            'l': 0x1,
            'r': [0.17, 0x0, 0x0],
            'c': '#ffffff',
            't': 0x5
        }, {
            'p': [0xf, 0x4a, 0x12],
            's': [0x4, 0x1, 0xd],
            'l': 0x1,
            'c': '#fffb00',
            'e': '#fffb00',
            't': 0x5
        }, {
            'p': [0xf, 0x49, 0x12],
            's': [0x3, 0x3, 0xf],
            'l': 0x1,
            'c': '#ffffff',
            't': 0x5
        }, {
            'p': [0xf, 0x45, 0x12],
            's': [0x4, 0x1, 0x14],
            'l': 0x1,
            'c': '#fffb00',
            'e': '#fffb00',
            't': 0x5
        }, {
            'p': [0xf, 0x44, 0x12],
            's': [0x3, 0x3, 0x16],
            'l': 0x1,
            'c': '#ffffff',
            't': 0x5
        }, {
            'p': [0xf, 0x36, 0x11],
            's': [0x4, 0x12, 0x1],
            'l': 0x1,
            'r': [-0.52, 0x0, 0x0],
            'c': '#fffb00',
            'e': '#fffb00',
            't': 0x5
        }, {
            'p': [0xf, 0x35, 0x12],
            's': [0x3, 0x13, 0x3],
            'l': 0x1,
            'r': [-0.52, 0x0, 0x0],
            'c': '#ffffff',
            't': 0x5
        }, {
            'p': [0xf, 0x1e, 0x12],
            's': [0x4, 0x10, 0x1],
            'l': 0x1,
            'c': '#fffb00',
            'e': '#fffb00',
            't': 0x5
        }, {
            'p': [0xf, 0x1d, 0x12],
            's': [0x3, 0x12, 0x3],
            'l': 0x1,
            'c': '#ffffff',
            't': 0x5
        }, {
            'p': [0xf, 0x7, 0x1b],
            's': [0x4, 0x1a, 0x1],
            'l': 0x1,
            'r': [-0.7, 0x0, 0x0],
            'c': '#fffb00',
            'e': '#fffb00',
            't': 0x5
        }, {
            'p': [0xf, 0x6, 0x1b],
            's': [0x3, 0x1c, 0x3],
            'l': 0x1,
            'r': [-0.7, 0x0, 0x0],
            'c': '#ffffff',
            't': 0x5
        }, {
            'p': [0xf, 0x6, 0xa],
            's': [0x4, 0x13, 0x1],
            'l': 0x1,
            'r': [0.52, 0x0, 0x0],
            'c': '#fffb00',
            'e': '#fffb00',
            't': 0x5
        }, {
            'p': [0xf, 0x5, 0x9],
            's': [0x3, 0x16, 0x3],
            'l': 0x1,
            'r': [0.52, 0x0, 0x0],
            'c': '#ffffff',
            't': 0x5
        }, {
            'p': [0xf, -0xa, 0x12],
            's': [0x4, 0x1, 0x17],
            'l': 0x1,
            'r': [0.35, 0x0, 0x0],
            'c': '#fffb00',
            'e': '#fffb00',
            't': 0x5
        }, {
            'p': [0xf, -0xb, 0x12],
            's': [0x3, 0x3, 0x19],
            'l': 0x1,
            'r': [0.35, 0x0, 0x0],
            'c': '#ffffff',
            't': 0x5
        }, {
            'p': [0xf, -0x4, 0x12],
            's': [0x4, 0x9, 0x1],
            'l': 0x1,
            'r': [0.17, 0x0, 0x0],
            'c': '#fffb00',
            'e': '#fffb00',
            't': 0x5
        }, {
            'p': [0xf, -0x5, 0x12],
            's': [0x3, 0xb, 0x3],
            'l': 0x1,
            'r': [0.17, 0x0, 0x0],
            'c': '#ffffff',
            't': 0x5
        }, {
            'p': [0x10, -0xa, -0x6],
            's': [0x1, 0x3, 0x10],
            'c': '#101010',
            't': 0x5,
            'bo': 0x1
        }, {
            'p': [-0xaa, -0x26, -0x249],
            's': [0x1, 0xa4, 0x23],
            'c': '#181717',
            't': 0x5,
            'bo': 0x1
        }, {
            'p': [-0xaa, -0x25, -0x23a],
            's': [0x3, 0xa1, 0x1],
            'l': 0x1,
            'c': '#bf00ff',
            'e': '#bf00ff',
            't': 0x5
        }, {
            'p': [-0xaa, -0x25, -0x258],
            's': [0x2, 0xa1, 0x1],
            'l': 0x1,
            'c': '#bf00ff',
            'e': '#bf00ff',
            't': 0x5
        }, {
            'p': [-0xaa, -0x24, -0x249],
            's': [0x2, 0x1, 0x1d],
            'l': 0x1,
            'c': '#bf00ff',
            'e': '#bf00ff',
            't': 0x5
        }, {
            'p': [-0xaa, 0x7b, -0x249],
            's': [0x3, 0x1, 0x1d],
            'l': 0x1,
            'c': '#bf00ff',
            'e': '#bf00ff',
            't': 0x5
        }, {
            'p': [-0xa9, 0x2d, -0x231],
            's': [0x1, 0x3, 0x10],
            'c': '#101010',
            't': 0x5,
            'bo': 0x1
        }, {
            'p': [-0xaa, 0x73, -0x24a],
            's': [0x4, 0x1, 0x11],
            'l': 0x1,
            'c': '#fffb00',
            'e': '#fffb00',
            't': 0x5
        }, {
            'p': [-0xaa, 0x72, -0x24a],
            's': [0x3, 0x3, 0x13],
            'l': 0x1,
            'c': '#ffffff',
            't': 0x5
        }, {
            'p': [-0xaa, 0x6b, -0x24a],
            's': [0x4, 0x1, 0xe],
            'l': 0x1,
            'c': '#fffb00',
            'e': '#fffb00',
            't': 0x5
        }, {
            'p': [-0xaa, 0x6a, -0x24a],
            's': [0x3, 0x3, 0x10],
            'l': 0x1,
            'c': '#ffffff',
            't': 0x5
        }, {
            'p': [-0xaa, 0x62, -0x24a],
            's': [0x4, 0x1, 0x15],
            'l': 0x1,
            'c': '#fffb00',
            'e': '#fffb00',
            't': 0x5
        }, {
            'p': [-0xaa, 0x61, -0x24a],
            's': [0x3, 0x3, 0x17],
            'l': 0x1,
            'c': '#ffffff',
            't': 0x5
        }, {
            'p': [-0xaa, 0x62, -0x24a],
            's': [0x4, 0x11, 0x1],
            'l': 0x1,
            'c': '#fffb00',
            'e': '#fffb00',
            't': 0x5
        }, {
            'p': [-0xaa, 0x62, -0x24a],
            's': [0x3, 0x11, 0x3],
            'l': 0x1,
            'c': '#ffffff',
            't': 0x5
        }, {
            'p': [-0xaa, 0x57, -0x24a],
            's': [0x3, 0x3, 0x13],
            'l': 0x1,
            'r': [0.17, 0x0, 0x0],
            'c': '#ffffff',
            't': 0x5
        }, {
            'p': [-0xaa, 0x58, -0x24a],
            's': [0x4, 0x1, 0x11],
            'l': 0x1,
            'r': [0.17, 0x0, 0x0],
            'c': '#fffb00',
            'e': '#fffb00',
            't': 0x5
        }, {
            'p': [-0xaa, 0x4f, -0x24b],
            's': [0x4, 0xd, 0x1],
            'l': 0x1,
            'r': [-0.52, 0x0, 0x0],
            'c': '#fffb00',
            'e': '#fffb00',
            't': 0x5
        }, {
            'p': [-0xaa, 0x4f, -0x24c],
            's': [0x3, 0xc, 0x3],
            'l': 0x1,
            'r': [-0.52, 0x0, 0x0],
            'c': '#ffffff',
            't': 0x5
        }, {
            'p': [-0xaa, 0x4e, -0x24a],
            's': [0x4, 0x1, 0x15],
            'l': 0x1,
            'c': '#fffb00',
            'e': '#fffb00',
            't': 0x5
        }, {
            'p': [-0xaa, 0x4d, -0x24a],
            's': [0x3, 0x3, 0x17],
            'l': 0x1,
            'c': '#ffffff',
            't': 0x5
        }, {
            'p': [-0xaa, 0x41, -0x24e],
            's': [0x4, 0xd, 0x1],
            'l': 0x1,
            'r': [0.17, 0x0, 0x0],
            'c': '#fffb00',
            'e': '#fffb00',
            't': 0x5
        }, {
            'p': [-0xaa, 0x41, -0x24e],
            's': [0x4, 0x7, 0x1],
            'l': 0x1,
            'r': [0.87, 0x0, 0x0],
            'c': '#fffb00',
            'e': '#fffb00',
            't': 0x5
        }, {
            'p': [-0xaa, 0x40, -0x24e],
            's': [0x3, 0xf, 0x3],
            'l': 0x1,
            'r': [0.17, 0x0, 0x0],
            'c': '#ffffff',
            't': 0x5
        }, {
            'p': [-0xaa, 0x41, -0x24e],
            's': [0x3, 0x8, 0x3],
            'l': 0x1,
            'r': [0.87, 0x0, 0x0],
            'c': '#ffffff',
            't': 0x5
        }, {
            'p': [-0xaa, 0x3a, -0x24a],
            's': [0x4, 0x1, 0xd],
            'l': 0x1,
            'c': '#fffb00',
            'e': '#fffb00',
            't': 0x5
        }, {
            'p': [-0xaa, 0x39, -0x24a],
            's': [0x3, 0x3, 0xf],
            'l': 0x1,
            'c': '#ffffff',
            't': 0x5
        }, {
            'p': [-0xaa, 0x35, -0x24a],
            's': [0x4, 0x1, 0x14],
            'l': 0x1,
            'c': '#fffb00',
            'e': '#fffb00',
            't': 0x5
        }, {
            'p': [-0xaa, 0x34, -0x24a],
            's': [0x3, 0x3, 0x16],
            'l': 0x1,
            'c': '#ffffff',
            't': 0x5
        }, {
            'p': [-0xaa, 0x26, -0x24b],
            's': [0x4, 0x12, 0x1],
            'l': 0x1,
            'r': [-0.52, 0x0, 0x0],
            'c': '#fffb00',
            'e': '#fffb00',
            't': 0x5
        }, {
            'p': [-0xaa, 0x25, -0x24a],
            's': [0x3, 0x13, 0x3],
            'l': 0x1,
            'r': [-0.52, 0x0, 0x0],
            'c': '#ffffff',
            't': 0x5
        }, {
            'p': [-0xaa, 0xe, -0x24a],
            's': [0x4, 0x10, 0x1],
            'l': 0x1,
            'c': '#fffb00',
            'e': '#fffb00',
            't': 0x5
        }, {
            'p': [-0xaa, 0xd, -0x24a],
            's': [0x3, 0x12, 0x3],
            'l': 0x1,
            'c': '#ffffff',
            't': 0x5
        }, {
            'p': [-0xaa, -0x9, -0x241],
            's': [0x4, 0x1a, 0x1],
            'l': 0x1,
            'r': [-0.7, 0x0, 0x0],
            'c': '#fffb00',
            'e': '#fffb00',
            't': 0x5
        }, {
            'p': [-0xaa, -0xa, -0x241],
            's': [0x3, 0x1c, 0x3],
            'l': 0x1,
            'r': [-0.7, 0x0, 0x0],
            'c': '#ffffff',
            't': 0x5
        }, {
            'p': [-0xaa, -0xa, -0x252],
            's': [0x4, 0x13, 0x1],
            'l': 0x1,
            'r': [0.52, 0x0, 0x0],
            'c': '#fffb00',
            'e': '#fffb00',
            't': 0x5
        }, {
            'p': [-0xaa, -0xb, -0x253],
            's': [0x3, 0x16, 0x3],
            'l': 0x1,
            'r': [0.52, 0x0, 0x0],
            'c': '#ffffff',
            't': 0x5
        }, {
            'p': [-0xaa, -0x1a, -0x24a],
            's': [0x4, 0x1, 0x17],
            'l': 0x1,
            'r': [0.35, 0x0, 0x0],
            'c': '#fffb00',
            'e': '#fffb00',
            't': 0x5
        }, {
            'p': [-0xaa, -0x1b, -0x24a],
            's': [0x3, 0x3, 0x19],
            'l': 0x1,
            'r': [0.35, 0x0, 0x0],
            'c': '#ffffff',
            't': 0x5
        }, {
            'p': [-0xaa, -0x14, -0x24a],
            's': [0x4, 0x9, 0x1],
            'l': 0x1,
            'r': [0.17, 0x0, 0x0],
            'c': '#fffb00',
            'e': '#fffb00',
            't': 0x5
        }, {
            'p': [-0xaa, -0x15, -0x24a],
            's': [0x3, 0xb, 0x3],
            'l': 0x1,
            'r': [0.17, 0x0, 0x0],
            'c': '#ffffff',
            't': 0x5
        }, {
            'p': [-0xa9, -0x1a, -0x231],
            's': [0x1, 0x3, 0x10],
            'c': '#101010',
            't': 0x5,
            'bo': 0x1
        }, {
            'p': [-0x132, 0x25, -0x1f7],
            's': [0x1, 0x7, 0x5],
            'c': '#878383',
            't': 0x5
        }, {
            'p': [-0x132, 0x24, -0x1fa],
            's': [0x2, 0x9, 0x1],
            'c': '#cfcfcf',
            't': 0x5,
            'bo': 0x1
        }, {
            'p': [-0x132, 0x24, -0x1f3],
            's': [0x2, 0x9, 0x7],
            'c': '#cfcfcf',
            't': 0x5,
            'bo': 0x1
        }, {
            'p': [-0x132, 0x24, -0x1f8],
            's': [0x2, 0x1, 0x3],
            'c': '#cfcfcf',
            't': 0x5,
            'bo': 0x1
        }, {
            'p': [-0x132, 0x2c, -0x1f8],
            's': [0x2, 0x1, 0x3],
            'c': '#cfcfcf',
            't': 0x5
        }, {
            'p': [-0x132, 0x34, -0x1f7],
            's': [0x1, 0x7, 0x5],
            'c': '#878383',
            't': 0x5
        }, {
            'p': [-0x132, 0x33, -0x1fa],
            's': [0x2, 0x9, 0x1],
            'c': '#cfcfcf',
            't': 0x5
        }, {
            'p': [-0x132, 0x33, -0x1f3],
            's': [0x2, 0x9, 0x7],
            'c': '#cfcfcf',
            't': 0x5
        }, {
            'p': [-0x132, 0x33, -0x1f8],
            's': [0x2, 0x1, 0x3],
            'c': '#cfcfcf',
            't': 0x5
        }, {
            'p': [-0x132, 0x3b, -0x1f8],
            's': [0x2, 0x1, 0x3],
            'c': '#cfcfcf',
            't': 0x5
        }, {
            'p': [-0x131, 0x28, -0x1ec],
            's': [0x2, 0x1, 0x7],
            'c': '#878383',
            't': 0x5,
            'bo': 0x1
        }, {
            'p': [-0x131, 0x37, -0x1ec],
            's': [0x2, 0x1, 0x7],
            'c': '#878383',
            't': 0x5
        }, {
            'p': [-0x131, -0x6, -0x1e8],
            's': [0x2, 0x3e, 0x1],
            'c': '#878383',
            't': 0x5,
            'bo': 0x1
        }, {
            'p': [-0x113, 0x7c, -0x1de],
            's': [0x1f, 0x10, 0x21],
            'c': '#ffffff',
            't': 0x5
        }, {
            'p': [-0x113, 0x83, -0x1e4],
            's': [0x8, 0x25, 0x8],
            'c': '#bfbbbb',
            't': 0x5
        }, {
            'p': [-0x113, 0x83, -0x1e4],
            's': [0x2, 0x9e, 0x2],
            'c': '#ffffff',
            't': 0x5
        }, {
            'p': [-0x113, 0x121, -0x1e4],
            's': [0x4, 0x7, 0x3],
            'l': 0x1,
            'c': '#ff0000',
            'e': '#ff0000',
            't': 0x5
        }, {
            'p': [-0x113, 0x83, -0x1da],
            's': [0x1, 0x4a, 0x1],
            'c': '#ffffff',
            't': 0x5
        }, {
            'p': [-0x113, 0x61, -0x188],
            's': [0x3d, 0x14, 0xfb],
            'c': '#4a4a4a',
            't': 0x5
        }, {
            'p': [-0x113, 0x51, -0x188],
            's': [0x3d, 0x8, 0xfb],
            'c': '#4a4a4a',
            't': 0x5
        }, {
            'p': [-0x18b, 0x5f, -0x89],
            's': [0xc9, 0x1b, 0xdd],
            'c': '#4a4a4a',
            't': 0x5
        }, {
            'p': [-0x18b, 0x86, -0x89],
            's': [0xcb, 0x4, 0xdf],
            'c': '#4a4a4a',
            't': 0x5
        }, {
            'p': [-0x113, 0xca, -0x1d9],
            's': [0x4, 0x7, 0x4],
            'i': 0x10,
            'l': 0x1,
            'r': [0.35, 0x0, 0x0]
        }, {
            'p': [-0xc4, -0xb, -0x149],
            's': [0x1, 0x7, 0x5],
            'c': '#878383',
            't': 0x5
        }, {
            'p': [-0xc4, -0xc, -0x14c],
            's': [0x2, 0x9, 0x1],
            'c': '#cfcfcf',
            't': 0x5,
            'bo': 0x1
        }, {
            'p': [-0xc4, -0xc, -0x145],
            's': [0x2, 0x9, 0x7],
            'c': '#cfcfcf',
            't': 0x5,
            'bo': 0x1
        }, {
            'p': [-0xc4, -0xc, -0x14a],
            's': [0x2, 0x1, 0x3],
            'c': '#cfcfcf',
            't': 0x5,
            'bo': 0x1
        }, {
            'p': [-0xc4, -0x4, -0x14a],
            's': [0x2, 0x1, 0x3],
            'c': '#cfcfcf',
            't': 0x5
        }, {
            'p': [-0xc4, -0x8, -0x14a],
            's': [0x2, 0x1, 0x3],
            'c': '#cfcfcf',
            't': 0x5
        }, {
            'p': [-0xc4, 0x4, -0x149],
            's': [0x1, 0x7, 0x5],
            'c': '#878383',
            't': 0x5
        }, {
            'p': [-0xc4, 0x3, -0x14c],
            's': [0x2, 0x9, 0x1],
            'c': '#cfcfcf',
            't': 0x5
        }, {
            'p': [-0xc4, 0x3, -0x145],
            's': [0x2, 0x9, 0x7],
            'c': '#cfcfcf',
            't': 0x5
        }, {
            'p': [-0xc4, 0x3, -0x14a],
            's': [0x2, 0x1, 0x3],
            'c': '#cfcfcf',
            't': 0x5
        }, {
            'p': [-0xc4, 0xb, -0x14a],
            's': [0x2, 0x1, 0x3],
            'c': '#cfcfcf',
            't': 0x5
        }, {
            'p': [-0xc4, 0x7, -0x14a],
            's': [0x2, 0x1, 0x3],
            'c': '#cfcfcf',
            't': 0x5
        }, {
            'p': [-0xc3, -0x8, -0x13e],
            's': [0x2, 0x1, 0x7],
            'c': '#878383',
            't': 0x5,
            'bo': 0x1
        }, {
            'p': [-0xc3, 0x7, -0x13e],
            's': [0x2, 0x1, 0x7],
            'c': '#878383',
            't': 0x5
        }, {
            'p': [-0xc3, -0x36, -0x13a],
            's': [0x2, 0x3e, 0x1],
            'c': '#878383',
            't': 0x5,
            'bo': 0x1
        }, {
            'p': [-0xce, 0x42, -0x1ae],
            's': [0x7, 0x1, 0x5],
            'c': '#ffffff',
            't': 0x5
        }, {
            'p': [-0xcf, -0x64, -0x190],
            's': [0x4, 0x69, 0x4],
            'c': '#878383',
            't': 0x5
        }, {
            'p': [-0xca, -0x7, -0x173],
            's': [0xe, 0x4, 0x36],
            'c': '#878383',
            't': 0x5
        }, {
            'p': [-0xcf, 0x1, -0x1a1],
            's': [0x4, 0x4, 0x1e],
            'c': '#878383',
            't': 0x5
        }, {
            'p': [-0xca, 0x5, -0x1ae],
            's': [0xe, 0x49, 0x4],
            'c': '#878383',
            't': 0x5,
            'bo': 0x1
        }, {
            'p': [-0xcf, -0x9, -0x190],
            's': [0x5, 0x1, 0x5],
            'c': '#ffffff',
            't': 0x5
        }, {
            'p': [-0xcf, 0xd, -0x1ae],
            's': [0x5, 0x1, 0x5],
            'c': '#ffffff',
            't': 0x5,
            'bo': 0x1
        }, {
            'p': [-0xcf, -0x8, -0x17c],
            's': [0x5, 0x6, 0x1],
            'l': 0x1,
            'c': '#ffffff',
            't': 0x5
        }, {
            'p': [-0xcf, 0x0, -0x19e],
            's': [0x5, 0x6, 0x1],
            'l': 0x1,
            'c': '#ffffff',
            't': 0x5
        }, {
            'p': [-0xf8, 0x5, -0x181],
            's': [0xe, 0x7f, 0x3],
            'c': '#878383',
            't': 0x5,
            'bo': 0x1
        }, {
            'p': [-0xe1, 0x1, -0x1a1],
            's': [0x20, 0x4, 0x5],
            'c': '#878383',
            't': 0x5
        }, {
            'p': [-0xf3, 0x1, -0x1ab],
            's': [0x4, 0x4, 0x57],
            'c': '#878383',
            't': 0x5
        }, {
            'p': [-0xf3, 0x0, -0x1b4],
            's': [0x5, 0x6, 0x1],
            'l': 0x1,
            'c': '#ffffff',
            't': 0x5
        }, {
            'p': [-0xf3, 0x0, -0x18f],
            's': [0x5, 0x6, 0x1],
            'l': 0x1,
            'c': '#ffffff',
            't': 0x5
        }, {
            'p': [-0xf3, 0xd, -0x181],
            's': [0x5, 0x1, 0x4],
            'l': 0x1,
            'c': '#ffffff',
            't': 0x5
        }, {
            'p': [-0xf3, 0x39, -0x181],
            's': [0x5, 0x1, 0x4],
            'c': '#ffffff',
            't': 0x5
        }, {
            'p': [-0xf3, 0x77, -0x181],
            's': [0x5, 0x1, 0x4],
            'c': '#ffffff',
            't': 0x5
        }, {
            'p': [-0xf1, -0x5, -0x1e0],
            's': [0xa, 0xb, 0x14],
            't': 0x5
        }, {
            'p': [-0xf1, -0x8, -0x1e0],
            's': [0x9, 0xb, 0x13],
            'c': '#878383',
            't': 0x5
        }, {
            'p': [-0xf3, 0x0, -0x1d1],
            's': [0x5, 0x6, 0x1],
            'c': '#ffffff',
            't': 0x5
        }, {
            'p': [-0xf1, -0x7, -0x1eb],
            's': [0x4, 0x7, 0x4],
            'c': '#878383',
            't': 0x5
        }, {
            'p': [-0xaa, 0x26, -0x1c6],
            's': [0x47, 0x14, 0xd7],
            'c': '#4a4a4a',
            't': 0x5
        }, {
            'p': [-0xc8, -0x1a, -0x150],
            's': [0xa, 0xb, 0x14],
            't': 0x5
        }, {
            'p': [-0xc8, -0x1d, -0x150],
            's': [0x9, 0xb, 0x13],
            'c': '#878383',
            't': 0x5
        }, {
            'p': [-0x96, 0xf, -0x133],
            's': [0x48, 0x2, 0x2],
            'c': '#ca2f00',
            't': 0x5
        }, {
            'p': [-0x42, 0x14, -0x133],
            's': [0x2, 0x2, 0x40],
            'c': '#ca2f00',
            't': 0x5
        }, {
            'p': [-0x76, -0xe, -0xf9],
            's': [0x7d, 0x5, 0x3],
            'c': '#878383',
            't': 0x5,
            'bo': 0x1
        }, {
            'p': [-0xb2, -0x9, -0xf8],
            's': [0x5, 0xc9, 0x5],
            'c': '#878383',
            't': 0x5
        }, {
            'p': [-0xd3, 0x1c, -0xf2],
            's': [0x3d, 0x5, 0x11],
            'c': '#878383',
            't': 0x5,
            'bo': 0x1
        }, {
            'p': [-0xf3, 0x17, -0xfd],
            's': [0xa, 0x11, 0x14],
            't': 0x5
        }, {
            'p': [-0xe6, 0x1b, -0xf2],
            's': [0x1, 0x7, 0x12],
            'c': '#ffffff',
            't': 0x5,
            'bo': 0x1
        }, {
            'p': [-0xc0, 0x1b, -0xf2],
            's': [0x1, 0x7, 0x12],
            'c': '#ffffff',
            't': 0x5,
            'bo': 0x1
        }, {
            'p': [-0xa8, -0xf, -0xf2],
            's': [0x1, 0x7, 0x12],
            'c': '#ffffff',
            't': 0x5,
            'bo': 0x1
        }, {
            'p': [-0x7b, -0xf, -0xf2],
            's': [0x1, 0x7, 0x12],
            'c': '#ffffff',
            't': 0x5,
            'bo': 0x1
        }, {
            'p': [-0x50, -0xf, -0xf2],
            's': [0x1, 0x7, 0x12],
            'c': '#ffffff',
            't': 0x5,
            'bo': 0x1
        }, {
            'p': [-0xb2, 0x0, -0xf2],
            's': [0x6, 0x1, 0x12],
            'c': '#ffffff',
            't': 0x5,
            'bo': 0x1
        }, {
            'p': [-0xb2, 0x15, -0xf2],
            's': [0x6, 0x1, 0x12],
            'c': '#ffffff',
            't': 0x5,
            'bo': 0x1
        }, {
            'p': [-0xb2, 0x2c, -0xf2],
            's': [0x6, 0x1, 0x12],
            'c': '#ffffff',
            't': 0x5
        }, {
            'p': [-0xb2, 0x6a, -0xf2],
            's': [0x6, 0x1, 0x12],
            'c': '#ffffff',
            't': 0x5
        }, {
            'p': [-0xc3, 0x19, -0x128],
            's': [0x4, 0x1, 0x1],
            'c': '#372d2d',
            't': 0x5
        }, {
            'p': [-0xc3, 0x28, -0x128],
            's': [0x4, 0x1, 0x1],
            'c': '#372d2d',
            't': 0x5
        }, {
            'p': [-0xcd, 0x16, -0x128],
            's': [0x1, 0x17, 0x2],
            'l': 0x1,
            'c': '#ff00e0',
            'e': '#d200ff',
            't': 0x5
        }, {
            'p': [-0xc5, 0x16, -0x128],
            's': [0x1, 0x17, 0x2],
            'l': 0x1,
            'c': '#ff00e0',
            'e': '#d200ff',
            't': 0x5
        }, {
            'p': [-0xc9, 0x16, -0x128],
            's': [0x7, 0x1, 0x2],
            'l': 0x1,
            'c': '#ff00e0',
            'e': '#d200ff',
            't': 0x5
        }, {
            'p': [-0xc9, 0x2c, -0x128],
            's': [0x7, 0x1, 0x2],
            'l': 0x1,
            'c': '#ff00e0',
            'e': '#d200ff',
            't': 0x5
        }, {
            'p': [-0xc9, 0x17, -0x128],
            's': [0x7, 0x15, 0x1],
            'c': '#120216',
            'e': '#010903',
            't': 0x5
        }, {
            'p': [-0xc9, 0x29, -0x128],
            's': [0x5, 0x1, 0x2],
            'l': 0x1,
            'c': '#ff00e0',
            'e': '#d200ff',
            't': 0x5
        }, {
            'p': [-0xca, 0x28, -0x128],
            's': [0x1, 0x3, 0x2],
            'l': 0x1,
            'c': '#ff00e0',
            'e': '#d200ff',
            't': 0x5
        }, {
            'p': [-0xc8, 0x28, -0x128],
            's': [0x1, 0x3, 0x2],
            'l': 0x1,
            'c': '#ff00e0',
            'e': '#d200ff',
            't': 0x5
        }, {
            'p': [-0xc9, 0x21, -0x128],
            's': [0x1, 0x6, 0x2],
            'l': 0x1,
            'c': '#ff00e0',
            'e': '#d200ff',
            't': 0x5
        }, {
            'p': [-0xc8, 0x26, -0x128],
            's': [0x3, 0x1, 0x2],
            'l': 0x1,
            'r': [0x0, 0x0, 0.7],
            'c': '#ff00e0',
            'e': '#d200ff',
            't': 0x5
        }, {
            'p': [-0xca, 0x26, -0x128],
            's': [0x3, 0x1, 0x2],
            'l': 0x1,
            'r': [0x0, 0x0, -0.7],
            'c': '#ff00e0',
            'e': '#d200ff',
            't': 0x5
        }, {
            'p': [-0xc9, 0x23, -0x128],
            's': [0x5, 0x1, 0x2],
            'l': 0x1,
            'c': '#ff00e0',
            'e': '#d200ff',
            't': 0x5
        }, {
            'p': [-0xcb, 0x22, -0x128],
            's': [0x3, 0x1, 0x2],
            'l': 0x1,
            'r': [0x0, 0x0, -0.7],
            'c': '#ff00e0',
            'e': '#d200ff',
            't': 0x5
        }, {
            'p': [-0xc7, 0x22, -0x128],
            's': [0x3, 0x1, 0x2],
            'l': 0x1,
            'r': [0x0, 0x0, 0.52],
            'c': '#ff00e0',
            'e': '#d200ff',
            't': 0x5
        }, {
            'p': [-0xc7, 0x1b, -0x128],
            's': [0x1, 0x4, 0x2],
            'l': 0x1,
            'c': '#ff00e0',
            'e': '#d200ff',
            't': 0x5
        }, {
            'p': [-0xc9, 0x1b, -0x128],
            's': [0x1, 0x5, 0x2],
            'l': 0x1,
            'c': '#ff00e0',
            'e': '#d200ff',
            't': 0x5
        }, {
            'p': [-0xc9, 0x1e, -0x128],
            's': [0x5, 0x1, 0x2],
            'l': 0x1,
            'c': '#ff00e0',
            'e': '#d200ff',
            't': 0x5
        }, {
            'p': [-0xca, 0x1c, -0x128],
            's': [0x3, 0x1, 0x2],
            'l': 0x1,
            'c': '#ff00e0',
            'e': '#d200ff',
            't': 0x5
        }, {
            'p': [-0xca, 0x1a, -0x128],
            's': [0x3, 0x1, 0x2],
            'l': 0x1,
            'c': '#ff00e0',
            'e': '#d200ff',
            't': 0x5
        }, {
            'p': [-0xcb, 0x19, -0x128],
            's': [0x1, 0x1, 0x2],
            'l': 0x1,
            'c': '#ff00e0',
            'e': '#d200ff',
            't': 0x5
        }, {
            'p': [-0xc8, 0x19, -0x128],
            's': [0x1, 0x1, 0x2],
            'l': 0x1,
            'c': '#ff00e0',
            'e': '#d200ff',
            't': 0x5
        }, {
            'p': [-0xc9, 0x18, -0x128],
            's': [0x3, 0x1, 0x2],
            'l': 0x1,
            'c': '#ff00e0',
            'e': '#d200ff',
            't': 0x5
        }, {
            'p': [-0xcb, 0x18, -0x128],
            's': [0x1, 0x1, 0x2],
            'l': 0x1,
            'c': '#ff00e0',
            'e': '#d200ff',
            't': 0x5
        }, {
            'p': [-0xc8, 0x1a, -0x128],
            's': [0x1, 0x1, 0x2],
            'l': 0x1,
            'c': '#ff00e0',
            'e': '#d200ff',
            't': 0x5
        }, {
            'p': [-0x2a, 0x9, -0x172],
            's': [0xa, 0xb, 0x14],
            't': 0x5
        }, {
            'p': [-0x2a, 0x6, -0x172],
            's': [0x9, 0xb, 0x13],
            'c': '#878383',
            't': 0x5
        }, {
            'p': [-0x2a, 0x9, -0x15d],
            's': [0x5, 0x4, 0x1b],
            'c': '#878383',
            't': 0x5
        }, {
            'p': [-0x2a, 0x6, -0x15e],
            's': [0x6, 0x8, 0x1],
            't': 0x5
        }, {
            'p': [-0x4, 0x18, -0x1c8],
            's': [0x19, 0x15, 0x19],
            'c': '#acacac',
            't': 0x5
        }, {
            'p': [-0x4, 0x2d, -0x1c8],
            's': [0x1c, 0x1, 0x1c],
            'c': '#666666',
            't': 0x5
        }, {
            'p': [-0x4, 0x17, -0x1c8],
            's': [0x1c, 0x1, 0x1c],
            'c': '#666666',
            't': 0x5
        }, {
            'p': [0x7, 0x8, -0x1bd],
            's': [0x2, 0xf, 0x2],
            'c': '#666666',
            't': 0x5
        }, {
            'p': [0x7, 0x8, -0x1d3],
            's': [0x2, 0xf, 0x2],
            'c': '#666666',
            't': 0x5
        }, {
            'p': [-0xf, 0x7, -0x1bd],
            's': [0x2, 0x10, 0x2],
            'c': '#666666',
            't': 0x5
        }, {
            'p': [-0xf, 0x8, -0x1d3],
            's': [0x2, 0xf, 0x2],
            'c': '#666666',
            't': 0x5
        }, {
            'p': [0x7, 0x9, -0x1c8],
            's': [0x1, 0x1, 0x16],
            'c': '#666666',
            't': 0x5
        }, {
            'p': [-0xf, 0x9, -0x1c8],
            's': [0x1, 0x1, 0x16],
            'c': '#666666',
            't': 0x5
        }, {
            'p': [-0x4, 0x9, -0x1bd],
            's': [0x14, 0x1, 0x1],
            'c': '#666666',
            't': 0x5
        }, {
            'p': [-0x4, 0x9, -0x1d3],
            's': [0x14, 0x1, 0x1],
            'c': '#666666',
            't': 0x5
        }, {
            'p': [0x5, 0x2e, -0x1bf],
            's': [0x5, 0x3, 0x5],
            'c': '#666666',
            't': 0x5
        }, {
            'p': [0x0, -0x7, -0x1e9],
            's': [0x32, 0x1e, 0x1],
            'pe': 0x1,
            'c': '#4a4a4a',
            't': 0xc
        }, {
            'p': [0x19, -0x7, -0x1d0],
            's': [0x1, 0x1e, 0x32],
            'pe': 0x1,
            'c': '#4a4a4a',
            't': 0xc
        }, {
            'p': [-0x1a, -0x7, -0x1e9],
            's': [0x2, 0x1f, 0x2],
            'l': 0x1,
            'c': '#4a4a4a',
            't': 0x5
        }, {
            'p': [0x19, -0x7, -0x1e9],
            's': [0x2, 0x1f, 0x2],
            'l': 0x1,
            'c': '#4a4a4a',
            't': 0x5
        }, {
            'p': [0x19, -0x7, -0x1b7],
            's': [0x2, 0x1f, 0x2],
            'l': 0x1,
            'c': '#4a4a4a',
            't': 0x5
        }, {
            'p': [-0x6e, -0x7, -0x1e9],
            's': [0x32, 0x1e, 0x1],
            'pe': 0x1,
            'c': '#4a4a4a',
            't': 0xc
        }, {
            'p': [-0x86, -0x7, -0x1e9],
            's': [0x2, 0x1f, 0x2],
            'l': 0x1,
            'c': '#4a4a4a',
            't': 0x5
        }, {
            'p': [-0x54, -0x7, -0x1e9],
            's': [0x2, 0x1f, 0x2],
            'l': 0x1,
            'c': '#4a4a4a',
            't': 0x5
        }, {
            'p': [0x19, -0x7, -0x152],
            's': [0x2, 0x1f, 0x2],
            'l': 0x1,
            'c': '#4a4a4a',
            't': 0x5
        }, {
            'p': [0x19, -0x7, -0x16c],
            's': [0x1, 0x1e, 0x32],
            'pe': 0x1,
            'c': '#4a4a4a',
            't': 0xc
        }, {
            'p': [0x19, -0x7, -0x186],
            's': [0x2, 0x1f, 0x2],
            'l': 0x1,
            'c': '#4a4a4a',
            't': 0x5
        }, {
            'p': [-0xe1, 0x41, -0x1fc],
            's': [0x2c, 0x2, 0x2],
            'c': '#ca2f00',
            't': 0x5
        }, {
            'p': [-0xe1, 0x3c, -0x1fc],
            's': [0x2c, 0x2, 0x2],
            'c': '#ca2f00',
            't': 0x5
        }, {
            'p': [-0x42, 0x16, -0x152],
            's': [0x2, 0x37, 0x2],
            'c': '#ca2f00',
            't': 0x5
        }, {
            'p': [-0x96, 0x12, -0x133],
            's': [0x48, 0x2, 0x2],
            'c': '#ca2f00',
            't': 0x5
        }, {
            'p': [-0xf4, 0x1b, -0x15a],
            's': [0x2, 0x14, 0x2],
            'c': '#ca2f00',
            't': 0x5,
            'bo': 0x1
        }, {
            'p': [-0x113, 0x1b, -0x15a],
            's': [0x3c, 0x2, 0x2],
            'c': '#ca2f00',
            't': 0x5
        }, {
            'p': [-0x132, 0x1b, -0x15d],
            's': [0x2, 0x2, 0x8],
            'c': '#ca2f00',
            't': 0x5
        }, {
            'p': [-0x132, -0x9, -0x160],
            's': [0x2, 0x24, 0x2],
            'c': '#ca2f00',
            't': 0x5
        }, {
            'p': [-0x54, 0x26, -0x12e],
            's': [0xdf, 0x14, 0x48],
            'c': '#4a4a4a',
            't': 0x5
        }, {
            'p': [-0x19, 0x11, -0x12b],
            's': [0x17, 0x2, 0x37],
            'c': '#ca2f00',
            't': 0x5
        }, {
            'p': [-0x19, 0xd, -0x12b],
            's': [0x17, 0x2, 0x37],
            'c': '#ca2f00',
            't': 0x5
        }, {
            'p': [-0x22, 0xd, -0xf7],
            's': [0x2, 0x2, 0x31],
            'c': '#ca2f00',
            't': 0x5
        }, {
            'p': [-0x22, 0x11, -0xf7],
            's': [0x2, 0x2, 0x31],
            'c': '#ca2f00',
            't': 0x5,
            'bo': 0x1
        }, {
            'p': [0xf, 0x63, -0x76],
            's': [0x8d, 0x4, 0xdd],
            'c': '#4a4a4a',
            't': 0x5
        }, {
            'p': [0xf, 0x3e, -0x76],
            's': [0x8d, 0x19, 0xdd],
            'c': '#4a4a4a',
            't': 0x5
        }, {
            'p': [-0xb4, 0x5e, -0xd7],
            's': [0xd4, 0x1d, 0x42],
            'c': '#4a4a4a',
            't': 0x5
        }, {
            'p': [-0xb4, 0x8d, -0xd7],
            's': [0xd4, 0xc, 0x42],
            'c': '#4a4a4a',
            't': 0x5
        }, {
            'p': [-0x1f, 0x65, -0x21],
            's': [0x1f, 0x17, 0x21],
            'c': '#4a4a4a',
            't': 0x5
        }, {
            'p': [-0x1f, 0x6a, -0x28],
            's': [0x8, 0x25, 0x8],
            'c': '#bfbbbb',
            't': 0x5
        }, {
            'p': [-0x1f, 0x6a, -0x28],
            's': [0x2, 0x9e, 0x2],
            'c': '#ffffff',
            't': 0x5
        }, {
            'p': [-0x1f, 0x108, -0x28],
            's': [0x4, 0x7, 0x3],
            'l': 0x1,
            'c': '#ff0000',
            'e': '#ff0000',
            't': 0x5
        }, {
            'p': [-0x1f, 0x6a, -0x1e],
            's': [0x1, 0x4a, 0x1],
            'c': '#ffffff',
            't': 0x5
        }, {
            'p': [-0xb5, -0xd, -0x69],
            's': [0x78, 0x11, 0x4],
            'c': '#ffffff',
            't': 0x5
        }, {
            'p': [-0x121, -0x1d, -0x67],
            's': [0xc, 0x34, 0xa0],
            'c': '#878383',
            't': 0x5,
            'bo': 0x1
        }, {
            'p': [-0x12, -0x1b, -0x56],
            's': [0x4, 0x4, 0x27],
            'c': '#878383',
            't': 0x5
        }, {
            'p': [-0x16, -0x1b, -0x55],
            's': [0x4, 0x4, 0x27],
            'c': '#878383',
            't': 0x5
        }, {
            'p': [-0x13, -0x17, -0x56],
            's': [0x4, 0x4, 0x27],
            'c': '#878383',
            't': 0x5
        }, {
            'p': [-0x8, -0x7, -0x80],
            's': [0xc, 0xc, 0xc],
            'i': 0x8
        }, {
            'p': [0x1d, -0x1b, -0x56],
            's': [0x3, 0x2, 0x8],
            'c': '#878383',
            't': 0x5
        }, {
            'p': [0x19, -0x1b, -0x56],
            's': [0x3, 0x2, 0x8],
            'c': '#878383',
            't': 0x5
        }, {
            'p': [0x1c, -0x19, -0x56],
            's': [0x3, 0x2, 0x8],
            'r': [0x0, 0.17, 0x0],
            'c': '#878383',
            't': 0x5
        }, {
            'p': [0x14, -0x1b, -0x22],
            's': [0xc, 0xc, 0xc],
            'i': 0x8
        }, {
            'p': [0x47, -0x1b, -0x16],
            's': [0x4, 0x7, 0x4],
            'i': 0x10
        }, {
            'p': [0x49, -0x1b, -0x37],
            's': [0x4, 0x7, 0x4],
            'i': 0x10,
            'l': 0x1
        }, {
            'p': [0x4c, -0x7, -0xaf],
            's': [0x4, 0x7, 0x4],
            'i': 0x10,
            'l': 0x1
        }, {
            'p': [0x36, -0x7, -0xd4],
            's': [0xc, 0xc, 0xc],
            'i': 0x8
        }, {
            'p': [0x15, -0x7, -0xd4],
            's': [0x3, 0x2, 0x8],
            'c': '#878383',
            't': 0x5
        }, {
            'p': [0x15, -0x5, -0xd5],
            's': [0x3, 0x2, 0x8],
            'r': [0x0, 0.17, 0x0],
            'c': '#878383',
            't': 0x5
        }, {
            'p': [-0x16, -0x7, -0xd7],
            's': [0x4, 0x7, 0x4],
            'i': 0x10,
            'l': 0x1
        }, {
            'p': [0x52, 0x14, -0x72],
            's': [0x2, 0x2, 0xbf],
            'c': '#ca2f00',
            't': 0x5
        }, {
            'p': [0x52, 0x10, -0x72],
            's': [0x2, 0x2, 0xbf],
            'c': '#ca2f00',
            't': 0x5
        }, {
            'p': [0x3e, -0x1b, -0x15],
            's': [0x4, 0x10, 0x1],
            'l': 0x1,
            'r': [0.17, 0x0, 0x0],
            'c': '#ffffff',
            't': 0x2
        }, {
            'p': [0x38, -0x1b, -0x15],
            's': [0x4, 0x10, 0x1],
            'l': 0x1,
            'r': [0.17, 0x0, 0x0],
            'c': '#ffffff',
            't': 0x2
        }, {
            'p': [-0xea, -0x11, -0xcf],
            's': [0x1, 0x13, 0x17],
            'c': '#8c8c8c',
            't': 0x5
        }, {
            'p': [-0xea, 0x4, -0xcf],
            's': [0x1, 0x1, 0x1],
            'c': '#ffffff',
            'e': '#ff0000',
            't': 0x5
        }, {
            'p': [-0xea, 0x4, -0xce],
            's': [0x1, 0x1, 0x1],
            'c': '#8c8c8c',
            'e': '#ffffff',
            't': 0x5
        }, {
            'p': [-0xea, -0x11, -0xc3],
            's': [0x2, 0x13, 0x1],
            'c': '#bbbbbb',
            't': 0x5
        }, {
            'p': [-0xea, -0x11, -0xdb],
            's': [0x2, 0x13, 0x1],
            'c': '#bbbbbb',
            't': 0x5
        }, {
            'p': [-0xea, 0x2, -0xcf],
            's': [0x2, 0x1, 0x19],
            'c': '#bbbbbb',
            't': 0x5
        }, {
            'p': [-0xea, -0x11, -0xcf],
            's': [0x2, 0x13, 0x1],
            'c': '#bbbbbb',
            't': 0x5
        }, {
            'p': [-0xf4, 0x11, -0xe4],
            's': [0x15, 0x2, 0x52],
            'c': '#ca2f00',
            't': 0x5,
            'bo': 0x1
        }, {
            'p': [-0xf4, 0x15, -0xe4],
            's': [0x15, 0x2, 0x52],
            'c': '#ca2f00',
            't': 0x5
        }, {
            'p': [-0xb2, 0x11, -0xb1],
            's': [0x6f, 0x2, 0x17],
            'c': '#ca2f00',
            't': 0x5,
            'bo': 0x1
        }, {
            'p': [-0xb2, 0x15, -0xb1],
            's': [0x6f, 0x2, 0x17],
            'c': '#ca2f00',
            't': 0x5
        }, {
            'p': [-0xeb, 0x11, -0xb1],
            's': [0x3, 0x2, 0x17],
            'c': '#ca2f00',
            't': 0x5
        }, {
            'p': [-0xeb, 0x15, -0xb1],
            's': [0x3, 0x2, 0x17],
            'c': '#ca2f00',
            't': 0x5
        }, {
            'p': [-0xf4, 0x11, -0x112],
            's': [0x2, 0x72, 0x2],
            'c': '#ca2f00',
            't': 0x5,
            'bo': 0x1
        }, {
            'p': [-0xf4, 0x11, -0x10f],
            's': [0x2, 0x2, 0x4],
            'c': '#ca2f00',
            't': 0x5,
            'bo': 0x1
        }, {
            'p': [-0xf5, 0x15, -0x10e],
            's': [0x2, 0x72, 0x2],
            'c': '#ca2f00',
            't': 0x5,
            'bo': 0x1
        }, {
            'p': [-0xeb, 0x0, -0xcf],
            's': [0x1, 0x6, 0x1d],
            'c': '#4a4a4a',
            't': 0x5
        }, {
            'p': [-0xb5, 0x4, -0x69],
            's': [0x78, 0x1, 0x4],
            'c': '#4a4a4a',
            't': 0x5
        }, {
            'p': [-0x125, -0x5f, -0x5d],
            's': [0x4, 0x9e, 0x3],
            'c': '#878383',
            't': 0x5
        }, {
            'p': [-0x125, 0x3f, -0x54],
            's': [0x4, 0x3, 0x15],
            'c': '#878383',
            't': 0x5
        }, {
            'p': [-0x125, 0x42, -0x4b],
            's': [0x4, 0x4a, 0x3],
            'c': '#878383',
            't': 0x5
        }, {
            'p': [-0x51, -0xe, -0xb5],
            's': [0x5, 0x42, 0x4],
            'c': '#878383',
            't': 0x5,
            'bo': 0x1
        }, {
            'p': [-0x40, 0x2e, -0xb5],
            's': [0x1d, 0x6, 0x4],
            'c': '#878383',
            't': 0x5,
            'bo': 0x1
        }, {
            'p': [-0x38, 0x34, -0xb5],
            's': [0x8, 0x36, 0x4],
            'c': '#878383',
            't': 0x5
        }, {
            'p': [-0x51, 0xb, -0xb7],
            's': [0x6, 0x1, 0x9],
            't': 0x5,
            'bo': 0x1
        }, {
            'p': [-0x51, 0x2c, -0xb7],
            's': [0x6, 0x1, 0x9],
            't': 0x5,
            'bo': 0x1
        }, {
            'p': [-0x38, 0x36, -0xb5],
            's': [0x9, 0x1, 0x5],
            't': 0x5
        }, {
            'p': [-0x38, 0x61, -0xb5],
            's': [0x9, 0x1, 0x5],
            't': 0x5
        }, {
            'p': [-0x11a, -0xa, -0xab],
            's': [0x2, 0x22, 0x2],
            'c': '#4a4a4a',
            't': 0x5,
            'bo': 0x1
        }, {
            'p': [-0xed, -0xe, -0xab],
            's': [0x2, 0x26, 0x2],
            'c': '#4a4a4a',
            't': 0x5,
            'bo': 0x1
        }, {
            'p': [-0xfa, -0x2, -0xb7],
            's': [0xc, 0xa, 0x4],
            'c': '#b32c2c',
            't': 0x5
        }, {
            'p': [-0x105, -0x2, -0xb7],
            's': [0x6, 0xa, 0x4],
            'c': '#b32c2c',
            't': 0x5
        }, {
            'p': [-0x106, -0xd, -0xb7],
            's': [0x1, 0xc, 0x3],
            'c': '#ffffff',
            't': 0x5
        }, {
            'p': [-0xfe, -0x1, -0xb6],
            's': [0x2, 0x1, 0x3],
            'c': '#ffffff',
            'e': '#ff0000',
            't': 0x5
        }, {
            'p': [-0x106, -0x1, -0xb6],
            's': [0x2, 0x1, 0x3],
            'c': '#ffffff',
            'e': '#ff0000',
            't': 0x5
        }, {
            'p': [-0xf4, 0x2f, -0x137],
            's': [0x2, 0x2, 0x48],
            'c': '#ca2f00',
            't': 0x5,
            'bo': 0x1
        }, {
            'p': [-0x38, 0x14, -0xe],
            's': [0x2, 0x2, 0xc],
            'c': '#ca2f00',
            't': 0x5
        }, {
            'p': [-0x37, 0x10, -0x10],
            's': [0x3, 0x2, 0x8],
            'c': '#ca2f00',
            't': 0x5
        }, {
            'p': [-0x37, -0x11, -0xd],
            's': [0x3, 0x21, 0x2],
            'c': '#ca2f00',
            't': 0x5
        }, {
            'p': [0xc, 0x10, -0x13],
            's': [0x83, 0x2, 0x2],
            'c': '#ca2f00',
            't': 0x5
        }, {
            'p': [0xc, 0x14, -0x13],
            's': [0x86, 0x2, 0x2],
            'c': '#ca2f00',
            't': 0x5
        }, {
            'p': [-0x38, -0x11, -0x9],
            's': [0x2, 0x25, 0x2],
            'c': '#ca2f00',
            't': 0x5
        }, {
            'p': [-0x5a, -0x13, -0x9],
            's': [0x46, 0x2, 0x2],
            'c': '#ca2f00',
            't': 0x5
        }, {
            'p': [-0x5a, -0x13, -0xd],
            's': [0x46, 0x2, 0x2],
            'c': '#ca2f00',
            't': 0x5
        }, {
            'p': [-0xb4, 0xbc, -0xd7],
            's': [0x94, 0x12, 0x35],
            'c': '#ffffff',
            't': 0x5
        }, {
            'p': [-0x140, 0x8a, -0x47],
            's': [0x2d, 0x10, 0x56],
            't': 0x5
        }, {
            'p': [-0xe8, 0x3, 0x14],
            's': [0xc, 0xc, 0xc],
            'i': 0x1
        }, {
            'p': [-0x82, 0x3, 0x8],
            's': [0xc, 0xc, 0xc],
            'i': 0x1
        }, {
            'p': [-0x82, 0x3, -0x4],
            's': [0xc, 0xc, 0xc],
            'i': 0x1
        }, {
            'p': [-0x125, 0x25, -0x82],
            's': [0x3, 0x7, 0x5],
            'c': '#878383',
            't': 0x5
        }, {
            'p': [-0x125, 0x24, -0x85],
            's': [0x4, 0x9, 0x1],
            'c': '#cfcfcf',
            't': 0x5
        }, {
            'p': [-0x125, 0x24, -0x7e],
            's': [0x4, 0x9, 0x7],
            'c': '#cfcfcf',
            't': 0x5
        }, {
            'p': [-0x125, 0x24, -0x83],
            's': [0x4, 0x1, 0x3],
            'c': '#cfcfcf',
            't': 0x5
        }, {
            'p': [-0x125, 0x2c, -0x83],
            's': [0x4, 0x1, 0x3],
            'c': '#cfcfcf',
            't': 0x5
        }, {
            'p': [-0x125, 0x34, -0x82],
            's': [0x3, 0x7, 0x5],
            'c': '#878383',
            't': 0x5
        }, {
            'p': [-0x125, 0x33, -0x85],
            's': [0x4, 0x9, 0x1],
            'c': '#cfcfcf',
            't': 0x5
        }, {
            'p': [-0x125, 0x33, -0x7e],
            's': [0x4, 0x9, 0x7],
            'c': '#cfcfcf',
            't': 0x5
        }, {
            'p': [-0x125, 0x33, -0x83],
            's': [0x4, 0x1, 0x3],
            'c': '#cfcfcf',
            't': 0x5
        }, {
            'p': [-0x125, 0x3b, -0x83],
            's': [0x4, 0x1, 0x3],
            'c': '#cfcfcf',
            't': 0x5
        }, {
            'p': [-0x127, 0x35, -0x6c],
            's': [0x2, 0x1, 0x1e],
            'c': '#878383',
            't': 0x5
        }, {
            'p': [-0x127, 0x26, -0x6d],
            's': [0x2, 0x1, 0x21],
            'c': '#878383',
            't': 0x5
        }, {
            'p': [-0x8b, 0x5, -0x170],
            's': [0xc, 0x46, 0x2],
            'c': '#878383',
            't': 0x5,
            'bo': 0x1
        }, {
            'p': [-0x8b, 0x3b, -0x1c5],
            's': [0xe, 0x3, 0x21],
            'c': '#878383',
            't': 0x5,
            'bo': 0x1
        }, {
            'p': [-0x8b, 0x3e, -0x1d4],
            's': [0xe, 0xe, 0x3],
            'c': '#878383',
            't': 0x5,
            'bo': 0x1
        }, {
            'p': [-0x86, 0x43, -0x1d4],
            's': [0x5, 0x1, 0x4],
            'c': '#ffffff',
            't': 0x5,
            'bo': 0x1
        }, {
            'p': [-0x86, 0x37, -0x1b6],
            's': [0x5, 0x1, 0x4],
            'c': '#ffffff',
            't': 0x5,
            'bo': 0x1
        }, {
            'p': [-0x86, 0x1a, -0x1b6],
            's': [0x5, 0x1, 0x4],
            'c': '#ffffff',
            't': 0x5,
            'bo': 0x1
        }, {
            'p': [-0xaa, 0x4a, -0x200],
            's': [0x46, 0xf, 0x48],
            'c': '#ffffff',
            't': 0x5
        }, {
            'p': [-0x88, 0x13, -0xed],
            's': [0x77, 0x4, 0x15],
            'c': '#4a4a4a',
            't': 0x5
        }, {
            'p': [-0x88, -0x18, -0xed],
            's': [0x77, 0x18, 0x15],
            'c': '#4a4a4a',
            't': 0x5,
            'bo': 0x1
        }, {
            'p': [-0xb4, -0x12, -0xb1],
            's': [0x6f, 0x12, 0x15],
            'c': '#4a4a4a',
            't': 0x5
        }, {
            'p': [-0x182, 0xa, -0x71],
            's': [0x2, 0x2, 0xb0],
            'c': '#ca2f00',
            't': 0x5
        }, {
            'p': [-0x150, 0x6, -0x1a],
            's': [0x62, 0x2, 0x2],
            'c': '#ca2f00',
            't': 0x5,
            'bo': 0x1
        }, {
            'p': [-0x182, 0x6, -0x71],
            's': [0x2, 0x2, 0xb0],
            'c': '#ca2f00',
            't': 0x5,
            'bo': 0x1
        }, {
            'p': [-0x1a0, 0x5, -0xc0],
            's': [0x2e, 0x2, 0x2],
            'c': '#ca2f00',
            't': 0x5,
            'bo': 0x1
        }, {
            'p': [-0x1b8, 0x5, -0xe6],
            's': [0x2, 0x2, 0x4e],
            'c': '#ca2f00',
            't': 0x5,
            'bo': 0x1
        }, {
            'p': [-0x1a0, 0xa, -0xc0],
            's': [0x2e, 0x2, 0x2],
            'c': '#ca2f00',
            't': 0x5
        }, {
            'p': [-0x1b8, 0xa, -0xe6],
            's': [0x2, 0x2, 0x4e],
            'c': '#ca2f00',
            't': 0x5,
            'bo': 0x1
        }, {
            'p': [-0x1b2, -0x1b, -0x85],
            's': [0x3, 0x2, 0x8],
            'c': '#878383',
            't': 0x5
        }, {
            'p': [-0x1b6, -0x1b, -0x85],
            's': [0x3, 0x2, 0x8],
            'c': '#878383',
            't': 0x5
        }, {
            'p': [-0x1b3, -0x19, -0x85],
            's': [0x3, 0x2, 0x8],
            'r': [0x0, 0.17, 0x0],
            'c': '#878383',
            't': 0x5
        }, {
            'p': [-0x1b7, -0x1b, -0x21],
            's': [0xc, 0xc, 0xc],
            'i': 0x8
        }, {
            'p': [-0x1e9, -0x1b, -0xe6],
            's': [0xc, 0xc, 0xc],
            'i': 0x8
        }, {
            'p': [-0x1ec, -0x1b, -0x2b],
            's': [0x4, 0x7, 0x4],
            'i': 0x10
        }, {
            'p': [-0x1c0, -0x1b, -0xf4],
            's': [0x4, 0x7, 0x4],
            'i': 0x10
        }, {
            'p': [-0x1b0, -0xf, -0x94],
            's': [0x4, 0x7, 0x4],
            'i': 0x10,
            'l': 0x1
        }, {
            'p': [-0xbd, 0x12, -0x115],
            's': [0x2, 0x2, 0x40],
            'c': '#ca2f00',
            't': 0x5,
            'bo': 0x1
        }, {
            'p': [-0xbd, 0xf, -0x115],
            's': [0x2, 0x2, 0x40],
            'c': '#ca2f00',
            't': 0x5,
            'bo': 0x1
        }, {
            'p': [-0xe6, 0xcb, -0xd7],
            's': [0x22, 0x14, 0x2d],
            'c': '#4a4a4a',
            't': 0x5
        }, {
            'p': [-0xe6, 0xda, -0xde],
            's': [0x8, 0x25, 0x8],
            'c': '#bfbbbb',
            't': 0x5
        }, {
            'p': [-0xe6, 0xda, -0xde],
            's': [0x2, 0x9e, 0x2],
            'c': '#ffffff',
            't': 0x5
        }, {
            'p': [-0xe6, 0x178, -0xde],
            's': [0x4, 0x7, 0x3],
            'c': '#ff0000',
            'e': '#ff0000',
            't': 0x5
        }, {
            'p': [-0x45, 0x14, -0x133],
            's': [0x2, 0x2, 0x40],
            'c': '#ca2f00',
            't': 0x5
        }, {
            'p': [-0x45, 0x16, -0x152],
            's': [0x2, 0x37, 0x2],
            'c': '#ca2f00',
            't': 0x5
        }, {
            'p': [-0xf6, 0x26, -0x1b3],
            's': [0x9, 0x1, 0x1],
            'c': '#372d2d',
            't': 0x5
        }, {
            'p': [-0xf6, 0x37, -0x1b3],
            's': [0x9, 0x1, 0x1],
            'c': '#372d2d',
            't': 0x5
        }, {
            'p': [-0xf1, 0x24, -0x1b3],
            's': [0x1, 0x16, 0x2],
            'l': 0x1,
            'c': '#00ff2d',
            'e': '#00ff2d',
            't': 0x5
        }, {
            'p': [-0xea, 0x25, -0x1b3],
            's': [0xd, 0x14, 0x1],
            'c': '#021606',
            'e': '#010903',
            't': 0x5
        }, {
            'p': [-0xe3, 0x24, -0x1b3],
            's': [0x1, 0x16, 0x2],
            'l': 0x1,
            'c': '#00ff2d',
            'e': '#00ff2d',
            't': 0x5
        }, {
            'p': [-0xea, 0x24, -0x1b3],
            's': [0xe, 0x1, 0x2],
            'l': 0x1,
            'c': '#00ff2d',
            'e': '#00ff2d',
            't': 0x5
        }, {
            'p': [-0xea, 0x39, -0x1b3],
            's': [0xe, 0x1, 0x2],
            'l': 0x1,
            'c': '#00ff2d',
            'e': '#00ff2d',
            't': 0x5
        }, {
            'p': [-0xe7, 0x36, -0x1b3],
            's': [0x5, 0x1, 0x2],
            'l': 0x1,
            'c': '#00ff2d',
            'e': '#00ff2d',
            't': 0x5
        }, {
            'p': [-0xe8, 0x34, -0x1b3],
            's': [0x5, 0x1, 0x2],
            'l': 0x1,
            'r': [0x0, 0x0, 0.7],
            'c': '#00ff2d',
            'e': '#00ff2d',
            't': 0x5
        }, {
            'p': [-0xe7, 0x2f, -0x1b3],
            's': [0x5, 0x1, 0x2],
            'l': 0x1,
            'c': '#00ff2d',
            'e': '#00ff2d',
            't': 0x5
        }, {
            'p': [-0xe5, 0x26, -0x1b3],
            's': [0x1, 0x6, 0x2],
            'l': 0x1,
            'c': '#00ff2d',
            'e': '#00ff2d',
            't': 0x5
        }, {
            'p': [-0xe8, 0x28, -0x1b3],
            's': [0x1, 0x3, 0x2],
            'l': 0x1,
            'r': [0x0, 0x0, 1.22],
            'c': '#00ff2d',
            'e': '#00ff2d',
            't': 0x5
        }, {
            'p': [-0xe8, 0x2a, -0x1b3],
            's': [0x1, 0x4, 0x2],
            'l': 0x1,
            'r': [0x0, 0x0, 0.7],
            'c': '#00ff2d',
            'e': '#00ff2d',
            't': 0x5
        }, {
            'p': [-0xeb, 0x27, -0x1b3],
            's': [0x1, 0x4, 0x2],
            'l': 0x1,
            'r': [0x0, 0x0, -0.17],
            'c': '#ff0000',
            'e': '#ff0000',
            't': 0x5
        }, {
            'p': [-0xee, 0x27, -0x1b3],
            's': [0x1, 0x4, 0x2],
            'l': 0x1,
            'r': [0x0, 0x0, -0.17],
            'c': '#ff0000',
            'e': '#ff0000',
            't': 0x5
        }, {
            'p': [-0xec, 0x27, -0x1b3],
            's': [0x2, 0x1, 0x2],
            'l': 0x1,
            'r': [0x0, 0x0, -0.17],
            'c': '#ff0000',
            'e': '#ff0000',
            't': 0x5
        }, {
            'p': [-0xed, 0x2a, -0x1b3],
            's': [0x2, 0x1, 0x2],
            'l': 0x1,
            'r': [0x0, 0x0, -0.17],
            'c': '#ff0000',
            'e': '#ff0000',
            't': 0x5
        }, {
            'p': [-0xed, 0x2b, -0x1b3],
            's': [0x4, 0x1, 0x2],
            'l': 0x1,
            'r': [0x0, 0x0, -0.17],
            'c': '#fffe00',
            'e': '#fff000',
            't': 0x5
        }, {
            'p': [-0xed, 0x2c, -0x1b3],
            's': [0x1, 0x4, 0x2],
            'l': 0x1,
            'r': [0x0, 0x0, 0.18],
            'c': '#002dff',
            'e': '#0000ff',
            't': 0x5
        }, {
            'p': [-0xed, 0x32, -0x1b3],
            's': [0x3, 0x1, 0x2],
            'l': 0x1,
            'c': '#ffffff',
            'e': '#ffffff',
            't': 0x5
        }, {
            'p': [-0xed, 0x35, -0x1b3],
            's': [0x3, 0x1, 0x2],
            'l': 0x1,
            'c': '#ffffff',
            'e': '#ffffff',
            't': 0x5
        }, {
            'p': [-0xec, 0x32, -0x1b3],
            's': [0x1, 0x3, 0x2],
            'l': 0x1,
            'c': '#ffffff',
            'e': '#ffffff',
            't': 0x5
        }, {
            'p': [-0xef, 0x32, -0x1b3],
            's': [0x1, 0x4, 0x2],
            'l': 0x1,
            'c': '#ffffff',
            'e': '#ffffff',
            't': 0x5
        }, {
            'p': [-0xee, 0x36, -0x1b3],
            's': [0x3, 0x1, 0x2],
            'l': 0x1,
            'c': '#ff8700',
            'e': '#553200',
            't': 0x5
        }, {
            'p': [-0xec, 0x36, -0x1b3],
            's': [0x1, 0x1, 0x2],
            'l': 0x1,
            'c': '#ff8700',
            'e': '#553200',
            't': 0x5
        }, {
            'p': [-0xe8, 0x21, -0x1b3],
            's': [0x1, 0x3, 0x1],
            'l': 0x1,
            'c': '#372d2d',
            't': 0x5
        }, {
            'p': [-0xec, 0x21, -0x1b3],
            's': [0x1, 0x3, 0x1],
            'l': 0x1,
            'c': '#372d2d',
            't': 0x5
        }, {
            'p': [-0xea, 0x21, -0x1b3],
            's': [0x8, 0x1, 0x2],
            'l': 0x1,
            'c': '#000de8',
            'e': '#004aff',
            't': 0x5
        }, {
            'p': [-0xea, 0x19, -0x1b3],
            's': [0x4, 0x1, 0x2],
            'l': 0x1,
            'c': '#000de8',
            'e': '#004aff',
            't': 0x5
        }, {
            'p': [-0xee, 0x15, -0x1b3],
            's': [0x1, 0xd, 0x2],
            'l': 0x1,
            'c': '#000de8',
            'e': '#004aff',
            't': 0x5
        }, {
            'p': [-0xe6, 0x15, -0x1b3],
            's': [0x1, 0xd, 0x2],
            'l': 0x1,
            'c': '#000de8',
            'e': '#004aff',
            't': 0x5
        }, {
            'p': [-0xea, 0x16, -0x1b3],
            's': [0x7, 0xb, 0x1],
            'l': 0x1,
            'c': '#000337',
            't': 0x5
        }, {
            'p': [-0xea, 0x1f, -0x1b3],
            's': [0x3, 0x1, 0x2],
            'l': 0x1,
            'c': '#000de8',
            'e': '#004aff',
            't': 0x5
        }, {
            'p': [-0xea, 0x1d, -0x1b3],
            's': [0x3, 0x1, 0x2],
            'l': 0x1,
            'c': '#000de8',
            'e': '#004aff',
            't': 0x5
        }, {
            'p': [-0xec, 0x1d, -0x1b3],
            's': [0x1, 0x3, 0x2],
            'l': 0x1,
            'c': '#000de8',
            'e': '#004aff',
            't': 0x5
        }, {
            'p': [-0xea, 0x1b, -0x1b3],
            's': [0x5, 0x1, 0x2],
            'l': 0x1,
            'c': '#000de8',
            'e': '#004aff',
            't': 0x5
        }, {
            'p': [-0xea, 0x15, -0x1b3],
            's': [0x8, 0x1, 0x2],
            'l': 0x1,
            'c': '#000de8',
            'e': '#004aff',
            't': 0x5
        }, {
            'p': [-0xea, 0x17, -0x1b3],
            's': [0x1, 0x4, 0x2],
            'l': 0x1,
            'c': '#000de8',
            'e': '#004aff',
            't': 0x5
        }, {
            'p': [-0xea, 0x17, -0x1b3],
            's': [0x6, 0x1, 0x2],
            'l': 0x1,
            'c': '#000de8',
            'e': '#004aff',
            't': 0x5
        }, {
            'p': [-0xee, 0x27, -0x1b3],
            's': [0x1, 0x1, 0x2],
            'l': 0x1,
            'r': [0x0, 0x0, -0.17],
            'c': '#ff0000',
            'e': '#ff0000',
            't': 0x5
        }, {
            'p': [-0x154, -0x27, -0x70],
            's': [0x5b, 0x1b, 0xaa],
            'c': '#4a4a4a',
            't': 0x5
        }, {
            'p': [-0x152, 0xa, -0x1a],
            's': [0x5e, 0x2, 0x2],
            'c': '#ca2f00',
            't': 0x5
        }, {
            'p': [-0x1d5, -0x1b, -0x7a],
            's': [0x33, 0xf, 0x34],
            'c': '#4a4a4a',
            't': 0x5
        }, {
            'p': [-0x1ad, -0x1b, -0x91],
            's': [0xc, 0xc, 0xc],
            'i': 0x8
        }, {
            'p': [-0x187, -0x1b, -0x51],
            's': [0xc, 0xc, 0xc],
            'i': 0x8
        }, {
            'p': [-0x1eb, -0x1b, -0xa1],
            's': [0x4, 0x7, 0x4],
            'i': 0x10
        }, {
            'p': [-0x1bf, -0x1b, -0x2a],
            's': [0x3, 0x2, 0x8],
            'c': '#878383',
            't': 0x5
        }, {
            'p': [-0x1c3, -0x1b, -0x2a],
            's': [0x3, 0x2, 0x8],
            'c': '#878383',
            't': 0x5
        }, {
            'p': [-0x1c0, -0x19, -0x2a],
            's': [0x3, 0x2, 0x8],
            'r': [0x0, 0.17, 0x0],
            'c': '#878383',
            't': 0x5
        }, {
            'p': [-0x185, -0x1c, -0x35],
            's': [0x4, 0x4, 0x27],
            'c': '#878383',
            't': 0x5
        }, {
            'p': [-0x189, -0x1c, -0x34],
            's': [0x4, 0x4, 0x27],
            'c': '#878383',
            't': 0x5
        }, {
            'p': [-0x186, -0x18, -0x35],
            's': [0x4, 0x4, 0x27],
            'c': '#878383',
            't': 0x5
        }, {
            'p': [-0x16d, -0x1b, -0xdd],
            's': [0x8f, 0xe, 0x32],
            'c': '#4a4a4a',
            't': 0x5
        }, {
            'p': [-0x19c, 0xc, -0x4b],
            's': [0x2, 0x1, 0x15],
            'c': '#878383',
            't': 0x5
        }, {
            'p': [-0x19c, 0xb, -0x4b],
            's': [0x1, 0x3, 0x14],
            'c': '#ffffff',
            'e': '#f5e14c',
            't': 0x5
        }, {
            'p': [-0x19c, 0xc, -0x97],
            's': [0x2, 0x1, 0x15],
            'c': '#878383',
            't': 0x5
        }, {
            'p': [-0x19c, 0xb, -0x97],
            's': [0x1, 0x3, 0x14],
            'c': '#ffffff',
            'e': '#f5e14c',
            't': 0x5
        }, {
            'p': [-0x1d2, 0xc, -0xd1],
            's': [0x2, 0x1, 0x15],
            'c': '#878383',
            't': 0x5
        }, {
            'p': [-0x1d2, 0xb, -0xd1],
            's': [0x1, 0x3, 0x14],
            'c': '#ffffff',
            'e': '#f5e14c',
            't': 0x5
        }, {
            'p': [-0x181, -0xc, -0x94],
            's': [0x1, 0x1b, 0x52],
            'c': '#ffffff',
            't': 0x5
        }, {
            'p': [-0x16d, -0xd, -0xdc],
            's': [0x8e, 0x1c, 0x2f],
            'c': '#ffffff',
            't': 0x5
        }, {
            'p': [0x19, -0x1b, -0x70],
            's': [0xc, 0xc, 0xc],
            'i': 0x1
        }, {
            'p': [0xd, -0x1b, -0x70],
            's': [0xc, 0xc, 0xc],
            'i': 0x1
        }, {
            'p': [0x19, -0xf, -0x70],
            's': [0xc, 0xc, 0xc],
            'i': 0x1
        }, {
            'p': [-0x1c2, -0x1b, -0x20],
            's': [0xa, 0x28, 0xa],
            'c': '#878383',
            't': 0x5
        }, {
            'p': [-0x178, -0x2ca, 0x170],
            's': [0xa2, 0x31c, 0x8b],
            'c': '#6b6b6b',
            't': 0x5
        }, {
            'p': [-0x1dd, -0x2ca, 0x10f],
            's': [0x8b, 0x2dc, 0xa1],
            'c': '#b6b6b6',
            't': 0x5,
            'bo': 0x1
        }, {
            'p': [-0x178, 0x52, 0x170],
            's': [0xa7, 0x3, 0x8e],
            'l': 0x1,
            'c': '#555555',
            't': 0x5
        }, {
            'p': [-0x1dd, 0x12, 0x10f],
            's': [0x91, 0x3, 0xa5],
            'l': 0x1,
            'c': '#696969',
            't': 0x5
        }, {
            'p': [-0x124, 0x32, 0x14d],
            's': [0x16, 0x4, 0x2],
            'l': 0x1,
            'c': '#3e3e3e',
            't': 0x5
        }, {
            'p': [-0x124, 0x2, 0x14d],
            's': [0x16, 0x4, 0x2],
            'l': 0x1,
            'c': '#3e3e3e',
            't': 0x5
        }, {
            'p': [-0x118, 0x2, 0x14d],
            's': [0x2, 0x45, 0x2],
            'l': 0x1,
            'c': '#3e3e3e',
            't': 0x5
        }, {
            'p': [-0x10b, -0x9, 0x14d],
            's': [0x19, 0x53, 0x5],
            'l': 0x1,
            'c': '#000000',
            't': 0x5
        }, {
            'p': [-0x10b, 0x45, 0x14a],
            's': [0x12, 0x2, 0x1],
            'l': 0x1,
            'c': '#ff0000',
            'e': '#ff0000',
            't': 0x5
        }, {
            'p': [-0x107, 0x41, 0x14a],
            's': [0x6, 0x2, 0x1],
            'l': 0x1,
            'c': '#ff0000',
            'e': '#ff0000',
            't': 0x5
        }, {
            'p': [-0x111, 0x3e, 0x14a],
            's': [0x6, 0x2, 0x1],
            'l': 0x1,
            'c': '#ff0000',
            'e': '#ff0000',
            't': 0x5
        }, {
            'p': [-0x107, 0x3e, 0x14a],
            's': [0xa, 0x2, 0x1],
            'l': 0x1,
            'c': '#ff0000',
            'e': '#ff0000',
            't': 0x5
        }, {
            'p': [-0x10a, 0x37, 0x14a],
            's': [0x2, 0x7, 0x1],
            'l': 0x1,
            'c': '#ff0000',
            'e': '#ff0000',
            't': 0x5
        }, {
            'p': [-0x111, 0x39, 0x14a],
            's': [0x2, 0xa, 0x1],
            'l': 0x1,
            'c': '#ff0000',
            'e': '#ff0000',
            't': 0x5
        }, {
            'p': [-0x105, 0x37, 0x14a],
            's': [0x2, 0x7, 0x1],
            'l': 0x1,
            'c': '#ff0000',
            'e': '#ff0000',
            't': 0x5
        }, {
            'p': [-0x10b, 0x30, 0x14a],
            's': [0x12, 0x2, 0x1],
            'l': 0x1,
            'c': '#ff0000',
            'e': '#ff0000',
            't': 0x5
        }, {
            'p': [-0x113, 0x23, 0x14a],
            's': [0x2, 0xa, 0x1],
            'l': 0x1,
            'c': '#ff0000',
            'e': '#ff0000',
            't': 0x5
        }, {
            'p': [-0x103, 0x22, 0x14a],
            's': [0x2, 0xb, 0x1],
            'l': 0x1,
            'c': '#ff0000',
            'e': '#ff0000',
            't': 0x5
        }, {
            'p': [-0x10b, 0x29, 0x14a],
            's': [0x9, 0x2, 0x1],
            'l': 0x1,
            'c': '#ff0000',
            'e': '#ff0000',
            't': 0x5
        }, {
            'p': [-0x10b, 0x22, 0x14a],
            's': [0x2, 0x11, 0x1],
            'l': 0x1,
            'c': '#ff0000',
            'e': '#ff0000',
            't': 0x5
        }, {
            'p': [-0x10b, 0x1c, 0x14a],
            's': [0x11, 0x2, 0x1],
            'l': 0x1,
            'c': '#ff0000',
            'e': '#ff0000',
            't': 0x5
        }, {
            'p': [-0x10b, 0x18, 0x14a],
            's': [0xe, 0x2, 0x1],
            'l': 0x1,
            'c': '#ff0000',
            'e': '#ff0000',
            't': 0x5
        }, {
            'p': [-0x10b, 0xe, 0x14a],
            's': [0x2, 0xe, 0x1],
            'l': 0x1,
            'c': '#ff0000',
            'e': '#ff0000',
            't': 0x5
        }, {
            'p': [-0x10b, 0x11, 0x14a],
            's': [0xe, 0x2, 0x1],
            'l': 0x1,
            'c': '#ff0000',
            'e': '#ff0000',
            't': 0x5
        }, {
            'p': [-0x104, -0x1, 0x14a],
            's': [0x2, 0xc, 0x1],
            'l': 0x1,
            'c': '#ff0000',
            'e': '#ff0000',
            't': 0x5
        }, {
            'p': [-0x105, 0x6, 0x14a],
            's': [0x6, 0x2, 0x1],
            'l': 0x1,
            'c': '#ff0000',
            'e': '#ff0000',
            't': 0x5
        }, {
            'p': [-0x107, -0x4, 0x14a],
            's': [0x2, 0xd, 0x1],
            'l': 0x1,
            'c': '#ff0000',
            'e': '#ff0000',
            't': 0x5
        }, {
            'p': [-0x106, -0x2, 0x14a],
            's': [0x7, 0x2, 0x1],
            'l': 0x1,
            'c': '#ff0000',
            'e': '#ff0000',
            't': 0x5
        }, {
            'p': [-0x10f, 0x9, 0x14a],
            's': [0xa, 0x2, 0x1],
            'l': 0x1,
            'c': '#ff0000',
            'e': '#ff0000',
            't': 0x5
        }, {
            'p': [-0x10f, 0x4, 0x14a],
            's': [0x4, 0x2, 0x1],
            'l': 0x1,
            'c': '#ff0000',
            'e': '#ff0000',
            't': 0x5
        }, {
            'p': [-0x10c, 0x3, 0x14a],
            's': [0x2, 0x8, 0x1],
            'l': 0x1,
            'c': '#ff0000',
            'e': '#ff0000',
            't': 0x5
        }, {
            'p': [-0x10b, -0x1, 0x14a],
            's': [0x2, 0x2, 0x1],
            'l': 0x1,
            'c': '#ff0000',
            'e': '#ff0000',
            't': 0x5
        }, {
            'p': [-0x10f, -0x1, 0x14a],
            's': [0x2, 0x2, 0x1],
            'l': 0x1,
            'c': '#ff0000',
            'e': '#ff0000',
            't': 0x5
        }, {
            'p': [-0x113, -0x1, 0x14a],
            's': [0x2, 0x2, 0x1],
            'l': 0x1,
            'c': '#ff0000',
            'e': '#ff0000',
            't': 0x5
        }, {
            'p': [-0x10d, -0x5, 0x14a],
            's': [0x2, 0x7, 0x1],
            'l': 0x1,
            'c': '#ff0000',
            'e': '#ff0000',
            't': 0x5
        }, {
            'p': [-0x111, -0x6, 0x14a],
            's': [0x2, 0x8, 0x1],
            'l': 0x1,
            'c': '#ff0000',
            'e': '#ff0000',
            't': 0x5
        }, {
            'p': [-0x10b, -0xc, 0x14c],
            's': [0x1c, 0x59, 0x1],
            'l': 0x1,
            'c': '#00ff69',
            'e': '#00ff69',
            't': 0x5
        }, {
            'p': [-0x10b, 0x2d, 0x14a],
            's': [0x12, 0x2, 0x1],
            'l': 0x1,
            'c': '#ff0000',
            'e': '#ff0000',
            't': 0x5
        }, {
            'p': [-0x112, 0x3, 0x14a],
            's': [0x2, 0x8, 0x1],
            'l': 0x1,
            'c': '#ff0000',
            'e': '#ff0000',
            't': 0x5
        }, {
            'p': [-0x133, 0x54, 0x133],
            's': [0x2, 0x4c, 0x2],
            'l': 0x1,
            'c': '#aaaaaa',
            't': 0x5
        }, {
            'p': [-0x133, 0xa0, 0x133],
            's': [0x3, 0x4, 0x3],
            'l': 0x1,
            'c': '#000000',
            'e': '#ff0000',
            't': 0x5
        }, {
            'p': [-0x19a, -0xd, 0xb4],
            's': [0x2, 0x1b, 0xb],
            'l': 0x1,
            'c': '#001100',
            't': 0x5
        }, {
            'p': [-0x19a, -0xa, 0xb4],
            's': [0x3, 0x1, 0x7],
            'l': 0x1,
            'c': '#0eff00',
            'e': '#0eff00',
            't': 0x5
        }, {
            'p': [-0x19a, -0xa, 0xb7],
            's': [0x3, 0x8, 0x1],
            'l': 0x1,
            'c': '#0eff00',
            'e': '#0eff00',
            't': 0x5
        }, {
            'p': [-0x19a, -0x3, 0xb5],
            's': [0x3, 0x1, 0x7],
            'l': 0x1,
            'r': [0.17, 0x0, 0x0],
            'c': '#0eff00',
            'e': '#0eff00',
            't': 0x5
        }, {
            'p': [-0x19a, 0x9, 0xb5],
            's': [0x3, 0x1, 0x7],
            'l': 0x1,
            'r': [0.35, 0x0, 0x0],
            'c': '#0eff00',
            'e': '#0eff00',
            't': 0x5
        }, {
            'p': [-0x19a, 0x6, 0xb6],
            's': [0x3, 0x1, 0x6],
            'l': 0x1,
            'r': [1.58, 0x0, 0x0],
            'c': '#0eff00',
            'e': '#0eff00',
            't': 0x5
        }, {
            'p': [-0x19a, -0x9, 0xbe],
            's': [0x1, 0x2, 0x7],
            'l': 0x1,
            'c': '#555555',
            't': 0x5
        }, {
            'p': [-0x19a, 0x7, 0xbe],
            's': [0x1, 0x2, 0x8],
            'l': 0x1,
            'c': '#555555',
            't': 0x5
        }, {
            'p': [-0x19a, 0x6, 0xb1],
            's': [0x3, 0x1, 0x6],
            'l': 0x1,
            'r': [1.58, 0x0, 0x0],
            'c': '#0eff00',
            'e': '#0eff00',
            't': 0x5
        }, {
            'p': [-0x19a, -0xf, 0xb4],
            's': [0x1, 0x1e, 0xd],
            'l': 0x1,
            'c': '#0eff00',
            'e': '#0eff00',
            't': 0x5
        }, {
            'p': [-0x19d, 0x17, 0xf4],
            's': [0x3, 0x2a, 0x63],
            'l': 0x1,
            'c': '#5f5f5f',
            't': 0x5
        }, {
            'p': [-0x19f, 0x14, 0xcc],
            's': [0x3, 0x2f, 0x3],
            'l': 0x1,
            'c': '#696969',
            't': 0x5
        }, {
            'p': [-0x19f, 0x14, 0x119],
            's': [0x3, 0x2f, 0x3],
            'l': 0x1,
            'c': '#696969',
            't': 0x5
        }, {
            'p': [-0x154, 0x54, 0x13a],
            's': [0x28, 0x13, 0x16],
            'l': 0x1,
            'c': '#989898',
            't': 0x5
        }, {
            'p': [-0x161, 0x1a, 0x129],
            's': [0x68, 0x32, 0x3],
            'l': 0x1,
            'c': '#252525',
            't': 0x5
        }, {
            'p': [-0x161, 0x1a, 0x129],
            's': [0x6a, 0x3, 0x8],
            'l': 0x1,
            'c': '#4b4b4b',
            't': 0x5
        }, {
            'p': [-0x161, 0x34, 0x127],
            's': [0x67, 0x0, 0x2f],
            'i': 0xb,
            'l': 0x1,
            'r': [1.57, 0x0, -3.14],
            'bb': 0x3
        }, {
            'p': [-0x19b, 0x2c, 0xf4],
            's': [0x60, 0x0, 0x28],
            'i': 0xb,
            'l': 0x1,
            'r': [1.57, 0x0, -1.57],
            'bb': 0x2
        }, {
            'p': [-0x1c6, 0x29, 0xc3],
            's': [0x11, 0x3, 0x4],
            'l': 0x1,
            'r': [-3.14, 0x0, -2.62],
            'c': '#f000ff',
            'e': '#f000ff',
            't': 0x5
        }, {
            'p': [-0x1bd, 0x26, 0xc3],
            's': [0x3, 0x9, 0x4],
            'l': 0x1,
            'r': [-3.14, 0x0, -2.62],
            'c': '#f000ff',
            'e': '#f000ff',
            't': 0x5
        }, {
            'p': [-0x1c2, 0x2d, 0xc3],
            's': [0x3, 0x1, 0x4],
            'l': 0x1,
            'r': [-3.14, 0x0, -2.62],
            'c': '#f000ff',
            'e': '#f000ff',
            't': 0x5
        }, {
            'p': [-0x1c1, 0x30, 0xc3],
            's': [0x3, 0x1, 0x4],
            'l': 0x1,
            'r': [-3.14, 0x0, -2.62],
            'c': '#f000ff',
            'e': '#f000ff',
            't': 0x5
        }, {
            'p': [-0x1da, 0x29, 0xc3],
            's': [0x11, 0x3, 0x4],
            'l': 0x1,
            'r': [3.14, 0x0, 3.14],
            'c': '#f000ff',
            'e': '#f000ff',
            't': 0x5
        }, {
            'p': [-0x1f1, 0x2d, 0xc3],
            's': [0x11, 0x3, 0x4],
            'l': 0x1,
            'r': [3.14, 0x0, 3.14],
            'c': '#f000ff',
            'e': '#f000ff',
            't': 0x5
        }, {
            'p': [-0x1f1, 0x25, 0xc3],
            's': [0x11, 0x3, 0x4],
            'l': 0x1,
            'r': [3.14, 0x0, 3.14],
            'c': '#f000ff',
            'e': '#f000ff',
            't': 0x5
        }, {
            'p': [-0x1f8, 0x24, 0xc3],
            's': [0x3, 0xc, 0x4],
            'l': 0x1,
            'r': [3.14, 0x0, 3.14],
            'c': '#f000ff',
            'e': '#f000ff',
            't': 0x5
        }, {
            'p': [-0x208, 0x29, 0xc3],
            's': [0x11, 0x3, 0x4],
            'l': 0x1,
            'r': [3.14, 0x0, 2.62],
            'c': '#f000ff',
            'e': '#f000ff',
            't': 0x5
        }, {
            'p': [-0x208, 0x31, 0xc3],
            's': [0x3, 0x1, 0x4],
            'l': 0x1,
            'r': [-3.14, 0x0, -2.19],
            'c': '#f000ff',
            'e': '#f000ff',
            't': 0x5
        }, {
            'p': [-0x1e5, 0x1c, 0xc6],
            's': [0x6b, 0x1e, 0x4],
            'l': 0x1,
            'r': [3.14, 0x0, 3.14],
            'c': '#0012ff',
            't': 0x5
        }, {
            'p': [-0x1bf, 0x15, 0xcc],
            's': [0x5, 0x28, 0x5],
            'l': 0x1,
            'r': [3.14, 0x0, 3.14],
            'c': '#575757',
            't': 0x5
        }, {
            'p': [-0x20c, 0x15, 0xcc],
            's': [0x5, 0x28, 0x5],
            'l': 0x1,
            'r': [3.14, 0x0, 3.14],
            'c': '#575757',
            't': 0x5
        }, {
            'p': [-0x160, -0x14, 0x12a],
            's': [0x59, 0x24, 0x2],
            'l': 0x1,
            'c': '#282828',
            't': 0x5
        }, {
            'p': [-0x160, -0x42, 0x12a],
            's': [0x59, 0x24, 0x2],
            'l': 0x1,
            'c': '#282828',
            't': 0x5
        }, {
            'p': [-0x160, -0x72, 0x12a],
            's': [0x59, 0x24, 0x2],
            'l': 0x1,
            'c': '#f5e14c',
            'e': '#f5e14c',
            't': 0x5
        }, {
            'p': [-0x160, -0xa3, 0x12a],
            's': [0x59, 0x24, 0x2],
            'l': 0x1,
            'c': '#282828',
            't': 0x5
        }, {
            'p': [-0x160, -0xd4, 0x12a],
            's': [0x59, 0x24, 0x2],
            'l': 0x1,
            'c': '#f5e14c',
            'e': '#f5e14c',
            't': 0x5
        }, {
            'p': [-0x160, -0x108, 0x12a],
            's': [0x59, 0x24, 0x2],
            'l': 0x1,
            'c': '#282828',
            't': 0x5
        }, {
            'p': [-0x1bd, -0x104, 0xbe],
            's': [0x38, 0x10c, 0x1],
            'l': 0x1,
            'c': '#b6b6b6',
            't': 0x3
        }, {
            'p': [-0x1ff, -0x104, 0xbe],
            's': [0x38, 0x10c, 0x1],
            'l': 0x1,
            'c': '#b6b6b6',
            't': 0x3
        }, {
            'p': [-0x20e, -0x32, 0xbe],
            's': [0x1a, 0x1c, 0x2],
            'l': 0x1,
            'c': '#f5e14c',
            'e': '#f5e14c',
            't': 0x5
        }, {
            'p': [-0x160, -0x146, 0x12a],
            's': [0x59, 0x24, 0x2],
            'l': 0x1,
            'c': '#282828',
            't': 0x5
        }, {
            'p': [-0x2d8, -0x2c3, -0x7f],
            's': [0xba, 0x2e8, 0xd6],
            'r': [-3.14, 0x0, 3.14],
            'c': '#757575',
            't': 0x5,
            'bo': 0x1
        }, {
            'p': [-0x308, -0x384, -0x3b],
            's': [0x91, 0x40a, 0x8e],
            'l': 0x1,
            'c': '#b6b6b6',
            't': 0x5
        }, {
            'p': [-0x282, 0x2c, -0x53],
            's': [0x4, 0x32, 0x70],
            'l': 0x1,
            'c': '#000337',
            't': 0x5
        }, {
            'p': [-0x285, 0x25, -0x25],
            's': [0x4, 0x3a, 0x4],
            'l': 0x1,
            'c': '#434343',
            't': 0x5
        }, {
            'p': [-0x285, 0x25, -0x7f],
            's': [0x4, 0x3a, 0x4],
            'l': 0x1,
            'c': '#434343',
            't': 0x5
        }, {
            'p': [-0x282, 0x29, -0x53],
            's': [0x1, 0x38, 0x76],
            'l': 0x1,
            'c': '#00b3ff',
            'e': '#00b3ff',
            't': 0x5
        }, {
            'p': [-0x308, 0x86, -0x3b],
            's': [0x96, 0x4, 0x95],
            'l': 0x1,
            'c': '#616161',
            't': 0x5
        }, {
            'p': [-0x2cb, 0x4, 0x24],
            's': [0x3, 0x7a, 0x21],
            'l': 0x1,
            'c': '#181717',
            't': 0x5
        }, {
            'p': [-0x2cd, 0x66, 0xf],
            's': [0x3, 0x6, 0x9],
            'l': 0x1,
            'c': '#343434',
            't': 0x5
        }, {
            'p': [-0x2cd, 0x1e, 0xf],
            's': [0x3, 0x6, 0x9],
            'l': 0x1,
            'c': '#343434',
            't': 0x5
        }, {
            'p': [-0x2cb, 0x0, 0x24],
            's': [0x1, 0x81, 0x27],
            'l': 0x1,
            'c': '#ff0000',
            'e': '#ff0000',
            't': 0x5
        }, {
            'p': [-0x288, -0x48, -0x101],
            's': [0x3, 0x64, 0x23],
            'l': 0x1,
            'c': '#181717',
            't': 0x5
        }, {
            'p': [-0x28a, -0x6, -0xeb],
            's': [0x3, 0x6, 0x9],
            'l': 0x1,
            'c': '#343434',
            't': 0x5
        }, {
            'p': [-0x28a, -0x2a, -0xeb],
            's': [0x3, 0x6, 0x9],
            'l': 0x1,
            'c': '#343434',
            't': 0x5
        }, {
            'p': [-0x288, -0x4a, -0x101],
            's': [0x1, 0x68, 0x28],
            'l': 0x1,
            'c': '#ff0000',
            'e': '#ff0000',
            't': 0x5
        }, {
            'p': [-0x294, 0x39, -0xdd],
            's': [0x11, 0x3, 0x6],
            'l': 0x1,
            'r': [-3.14, 0x0, -2.62],
            'c': '#f000ff',
            'e': '#f000ff',
            't': 0x5
        }, {
            'p': [-0x28c, 0x34, -0xdd],
            's': [0x3, 0xc, 0x6],
            'l': 0x1,
            'r': [-3.14, 0x0, -2.62],
            'c': '#f000ff',
            'e': '#f000ff',
            't': 0x5
        }, {
            'p': [-0x291, 0x3e, -0xdd],
            's': [0x3, 0x1, 0x6],
            'l': 0x1,
            'r': [-3.14, 0x0, -2.62],
            'c': '#f000ff',
            'e': '#f000ff',
            't': 0x5
        }, {
            'p': [-0x290, 0x41, -0xdd],
            's': [0x3, 0x1, 0x6],
            'l': 0x1,
            'r': [-3.14, 0x0, -2.62],
            'c': '#f000ff',
            'e': '#f000ff',
            't': 0x5
        }, {
            'p': [-0x2aa, 0x39, -0xdd],
            's': [0x11, 0x3, 0x6],
            'l': 0x1,
            'r': [-3.14, 0x0, -3.14],
            'c': '#f000ff',
            'e': '#f000ff',
            't': 0x5
        }, {
            'p': [-0x2c2, 0x3d, -0xdd],
            's': [0x11, 0x3, 0x6],
            'l': 0x1,
            'r': [-3.14, 0x0, -3.14],
            'c': '#f000ff',
            'e': '#f000ff',
            't': 0x5
        }, {
            'p': [-0x2c1, 0x35, -0xdd],
            's': [0x11, 0x3, 0x6],
            'l': 0x1,
            'r': [-3.14, 0x0, -3.14],
            'c': '#f000ff',
            'e': '#f000ff',
            't': 0x5
        }, {
            'p': [-0x2c8, 0x34, -0xdd],
            's': [0x3, 0xc, 0x6],
            'l': 0x1,
            'r': [-3.14, 0x0, -3.14],
            'c': '#f000ff',
            'e': '#f000ff',
            't': 0x5
        }, {
            'p': [-0x2d9, 0x38, -0xdd],
            's': [0x11, 0x3, 0x6],
            'l': 0x1,
            'r': [3.14, 0x0, 2.62],
            'c': '#f000ff',
            'e': '#f000ff',
            't': 0x5
        }, {
            'p': [-0x2d8, 0x3f, -0xdd],
            's': [0x3, 0x1, 0x6],
            'l': 0x1,
            'r': [-3.14, 0x0, -2.62],
            'c': '#f000ff',
            'e': '#f000ff',
            't': 0x5
        }, {
            'p': [-0x2b3, 0x2c, -0xdd],
            's': [0x6b, 0x1e, 0x4],
            'l': 0x1,
            'r': [-3.14, 0x0, -3.14],
            'c': '#0012ff',
            't': 0x5
        }, {
            'p': [-0x28d, 0x25, -0xdd],
            's': [0x5, 0x7, 0x4],
            'l': 0x1,
            'r': [-3.14, 0x0, -3.14],
            'c': '#575757',
            't': 0x5
        }, {
            'p': [-0x2d9, 0x25, -0xdd],
            's': [0x5, 0x7, 0x4],
            'l': 0x1,
            'r': [-3.14, 0x0, -3.14],
            'c': '#575757',
            't': 0x5
        }, {
            'p': [-0x27c, -0x13, -0x7d],
            's': [0x3, 0x2b, 0xb7],
            'l': 0x1,
            'c': '#282828',
            't': 0x5
        }, {
            'p': [-0x27c, -0x4b, -0x7d],
            's': [0x3, 0x2b, 0xb7],
            'l': 0x1,
            'c': '#282828',
            't': 0x5
        }, {
            'p': [-0x27c, -0x84, -0x7d],
            's': [0x3, 0x2b, 0xb7],
            'l': 0x1,
            'c': '#282828',
            't': 0x5
        }, {
            'p': [-0x280, 0x45, -0x31],
            's': [0x2, 0x3, 0x17],
            'l': 0x1,
            'c': '#ff0086',
            'e': '#ff0086',
            't': 0x5
        }, {
            'p': [-0x280, 0x3f, -0x2b],
            's': [0x2, 0x3, 0x11],
            'l': 0x1,
            'r': [-0.87, 0x0, 0x0],
            'c': '#ff0086',
            'e': '#ff0086',
            't': 0x5
        }, {
            'p': [-0x280, 0x4e, -0x32],
            's': [0x2, 0x2, 0x7],
            'l': 0x1,
            'r': [0.87, 0x0, 0x0],
            'c': '#ff0086',
            'e': '#ff0086',
            't': 0x5
        }, {
            'p': [-0x280, 0x44, -0x73],
            's': [0x2, 0x3, 0x17],
            'l': 0x1,
            'c': '#ff0086',
            'e': '#ff0086',
            't': 0x5
        }, {
            'p': [-0x280, 0x4d, -0x72],
            's': [0x2, 0x2, 0x8],
            'l': 0x1,
            'r': [-0.35, 0x0, 0x0],
            'c': '#ff0086',
            'e': '#ff0086',
            't': 0x5
        }, {
            'p': [-0x280, 0x40, -0x51],
            's': [0x2, 0x3, 0x14],
            'l': 0x1,
            'c': '#ff0086',
            'e': '#ff0086',
            't': 0x5
        }, {
            'p': [-0x280, 0x49, -0x51],
            's': [0x2, 0x3, 0x14],
            'l': 0x1,
            'c': '#ff0086',
            'e': '#ff0086',
            't': 0x5
        }, {
            'p': [-0x280, 0x44, -0x5b],
            's': [0x2, 0x3, 0x15],
            'l': 0x1,
            'r': [1.57, 0x0, 0x0],
            'c': '#ff0086',
            'e': '#ff0086',
            't': 0x5
        }, {
            'p': [-0x280, 0x3c, -0x73],
            's': [0x2, 0x2, 0x8],
            'l': 0x1,
            'c': '#ff0086',
            'e': '#ff0086',
            't': 0x5
        }, {
            'p': [-0x2ca, 0x72, 0x2d],
            's': [0x2, 0x13, 0x3],
            'l': 0x1,
            'r': [-1.57, 0x0, 0x0],
            'c': '#00ff69',
            'e': '#00ff69',
            't': 0x5
        }, {
            'p': [-0x2ca, 0x62, 0x27],
            's': [0x2, 0x13, 0x3],
            'l': 0x1,
            'r': [-0.7, 0x0, 0x0],
            'c': '#00ff69',
            'e': '#00ff69',
            't': 0x5
        }, {
            'p': [-0x2ca, 0x78, 0x29],
            's': [0x2, 0xc, 0x2],
            'l': 0x1,
            'r': [-1.57, 0x0, 0x0],
            'c': '#00ff69',
            'e': '#00ff69',
            't': 0x5
        }, {
            'p': [-0x2ca, 0x50, 0x26],
            's': [0x2, 0x3, 0x11],
            'l': 0x1,
            'r': [-1.57, 0x0, 0x0],
            'c': '#00ff69',
            'e': '#00ff69',
            't': 0x5
        }, {
            'p': [-0x2ca, 0x3a, 0x2d],
            's': [0x2, 0x13, 0x3],
            'l': 0x1,
            'r': [-1.4, 0x0, 0x0],
            'c': '#00ff69',
            'e': '#00ff69',
            't': 0x5
        }, {
            'p': [-0x2ca, 0x36, 0x2b],
            's': [0x2, 0x3, 0x11],
            'l': 0x1,
            'r': [-1.57, 0x0, 0x0],
            'c': '#00ff69',
            'e': '#00ff69',
            't': 0x5
        }, {
            'p': [-0x2ca, 0x2f, 0x2b],
            's': [0x2, 0x11, 0x3],
            'l': 0x1,
            'r': [-1.57, 0x0, 0x0],
            'c': '#00ff69',
            'e': '#00ff69',
            't': 0x5
        }, {
            'p': [-0x2ca, 0x19, 0x2c],
            's': [0x2, 0x11, 0x3],
            'l': 0x1,
            'r': [-1.57, 0x0, 0x0],
            'c': '#00ff69',
            'e': '#00ff69',
            't': 0x5
        }, {
            'p': [-0x2ca, 0x20, 0x28],
            's': [0x2, 0xa, 0x3],
            'l': 0x1,
            'r': [-1.57, 0x0, 0x0],
            'c': '#00ff69',
            'e': '#00ff69',
            't': 0x5
        }, {
            'p': [-0x2ca, 0x19, 0x2c],
            's': [0x2, 0x11, 0x3],
            'l': 0x1,
            'r': [-2.27, 0x0, 0x0],
            'c': '#00ff69',
            'e': '#00ff69',
            't': 0x5
        }, {
            'p': [-0x288, 0xe, -0x102],
            's': [0x4, 0x4, 0x16],
            'l': 0x1,
            'c': '#ffe100',
            'e': '#ffe100',
            't': 0x5
        }, {
            'p': [-0x286, 0x7, -0x106],
            's': [0x4, 0x3, 0x8],
            'l': 0x1,
            'r': [0.87, 0x0, 0x0],
            'c': '#ffe100',
            'e': '#ffe100',
            't': 0x5
        }, {
            'p': [-0x288, -0x16, -0x102],
            's': [0x4, 0x11, 0x5],
            'l': 0x1,
            'c': '#ffe100',
            'e': '#ffe100',
            't': 0x5
        }, {
            'p': [-0x288, -0x3a, -0x102],
            's': [0x4, 0x4, 0x14],
            'l': 0x1,
            'r': [-0.35, 0x0, 0x0],
            'c': '#ffe100',
            'e': '#ffe100',
            't': 0x5
        }, {
            'p': [-0x288, -0x31, -0x107],
            's': [0x4, 0x3, 0x8],
            'l': 0x1,
            'r': [0.52, 0x0, 0x0],
            'c': '#ffe100',
            'e': '#ffe100',
            't': 0x5
        }, {
            'p': [-0x288, -0x24, -0x102],
            's': [0x4, 0x4, 0x16],
            'l': 0x1,
            'c': '#ffe100',
            'e': '#ffe100',
            't': 0x5
        }, {
            'p': [-0x39f, -0x3be, -0x121],
            's': [0x91, 0x4b2, 0x8e],
            'l': 0x1,
            'c': '#969696',
            't': 0x5
        }, {
            'p': [-0x39f, 0xf4, -0x121],
            's': [0x94, 0x4, 0x92],
            'l': 0x1,
            'c': '#707070',
            't': 0x5
        }, {
            'p': [-0x356, -0x304, -0x122],
            's': [0x3, 0x3dd, 0x74],
            'l': 0x1,
            'c': '#b6b6b6',
            't': 0x3
        }, {
            'p': [-0x354, 0x9e, -0x14e],
            's': [0x1, 0x1d, 0x1c],
            'l': 0x1,
            'c': '#f5e14c',
            'e': '#f5e14c',
            't': 0x5
        }, {
            'p': [-0x354, 0x61, -0x114],
            's': [0x1, 0x1d, 0x1c],
            'l': 0x1,
            'c': '#f5e14c',
            'e': '#f5e14c',
            't': 0x5
        }, {
            'p': [-0x354, -0x34, -0x114],
            's': [0x1, 0x1d, 0x1c],
            'l': 0x1,
            'c': '#f5e14c',
            'e': '#f5e14c',
            't': 0x5
        }, {
            'p': [-0x354, -0x34, -0x14f],
            's': [0x1, 0x1d, 0x1c],
            'l': 0x1,
            'c': '#f5e14c',
            'e': '#f5e14c',
            't': 0x5
        }, {
            'p': [-0x354, -0x8f, -0x130],
            's': [0x1, 0x1d, 0x1c],
            'l': 0x1,
            'c': '#f5e14c',
            'e': '#f5e14c',
            't': 0x5
        }, {
            'p': [-0x354, -0x161, -0x131],
            's': [0x1, 0x1d, 0x1c],
            'l': 0x1,
            'c': '#f5e14c',
            'e': '#f5e14c',
            't': 0x5
        }, {
            'p': [-0x356, -0x304, -0x122],
            's': [0x3, 0x3dd, 0x74],
            'l': 0x1,
            'c': '#b6b6b6',
            't': 0x3
        }, {
            'p': [-0x344, -0x364, -0x208],
            's': [0x91, 0x40a, 0x8e],
            'c': '#828282',
            't': 0x5
        }, {
            'p': [-0x313, -0x2ec, -0x23c],
            's': [0x9e, 0x2f5, 0x8b],
            'c': '#7d7d7d',
            't': 0x5
        }, {
            'p': [-0x344, 0xa6, -0x208],
            's': [0x98, 0x4, 0x96],
            'l': 0x1,
            'c': '#919191',
            't': 0x5
        }, {
            'p': [-0x2cc, 0xd, -0x240],
            's': [0x3, 0x2f, 0x6f],
            'l': 0x1,
            'c': '#484848',
            't': 0x5
        }, {
            'p': [-0x2ce, 0x9, -0x216],
            's': [0x3, 0x35, 0x4],
            'l': 0x1,
            'c': '#696969',
            't': 0x5
        }, {
            'p': [-0x2ce, 0x9, -0x269],
            's': [0x3, 0x35, 0x4],
            'l': 0x1,
            'c': '#696969',
            't': 0x5
        }, {
            'p': [-0x2fb, 0x5d, -0x209],
            's': [0x3, 0x3c, 0x80],
            'c': '#3c3c3c',
            't': 0x5
        }, {
            'p': [-0x2fb, 0x5a, -0x209],
            's': [0x7, 0x3, 0x83],
            'l': 0x1,
            'c': '#393939',
            't': 0x5
        }, {
            'p': [-0x2ca, 0x25, -0x240],
            's': [0x6d, 0x0, 0x2d],
            'i': 0xb,
            'l': 0x1,
            'r': [1.57, 0x0, -1.57],
            'bb': 0x3
        }, {
            'p': [-0x2f9, 0x7b, -0x209],
            's': [0x80, 0x0, 0x3d],
            'i': 0xb,
            'l': 0x1,
            'r': [1.57, 0x0, -1.57],
            'bb': 0x4
        }, {
            'p': [-0x30b, 0x91, -0x245],
            's': [0x2, 0x4c, 0x2],
            'l': 0x1,
            'c': '#aaaaaa',
            't': 0x5
        }, {
            'p': [-0x30b, 0xdd, -0x245],
            's': [0x3, 0x4, 0x3],
            'l': 0x1,
            'c': '#000000',
            'e': '#ff0000',
            't': 0x5
        }, {
            'p': [-0x2fb, 0x2d, -0x208],
            's': [0x3, 0x25, 0x79],
            'l': 0x1,
            'c': '#282828',
            't': 0x5
        }, {
            'p': [-0x2c4, -0x53, -0x23d],
            's': [0x3, 0x25, 0x79],
            'l': 0x1,
            'c': '#282828',
            't': 0x5
        }, {
            'p': [-0x2c4, -0x81, -0x23d],
            's': [0x3, 0x25, 0x79],
            'l': 0x1,
            'c': '#282828',
            't': 0x5
        }, {
            'p': [-0x2c4, -0xaf, -0x23d],
            's': [0x3, 0x25, 0x79],
            'l': 0x1,
            'c': '#282828',
            't': 0x5
        }, {
            'p': [-0x2c4, -0xdd, -0x23d],
            's': [0x3, 0x25, 0x79],
            'l': 0x1,
            'c': '#282828',
            't': 0x5
        }, {
            'p': [-0x2c4, -0x10c, -0x23d],
            's': [0x3, 0x25, 0x79],
            'l': 0x1,
            'c': '#282828',
            't': 0x5
        }, {
            'p': [-0x2c4, -0x25, -0x23d],
            's': [0x3, 0x25, 0x79],
            'l': 0x1,
            'c': '#282828',
            't': 0x5
        }, {
            'p': [-0x2fb, -0x4, -0x208],
            's': [0x3, 0x25, 0x79],
            'l': 0x1,
            'c': '#282828',
            't': 0x5
        }, {
            'p': [-0x2fb, -0x33, -0x208],
            's': [0x3, 0x25, 0x79],
            'l': 0x1,
            'c': '#282828',
            't': 0x5
        }, {
            'p': [-0x2fb, -0x63, -0x208],
            's': [0x3, 0x25, 0x79],
            'l': 0x1,
            'c': '#282828',
            't': 0x5
        }, {
            'p': [-0x2fb, -0x95, -0x208],
            's': [0x3, 0x25, 0x79],
            'l': 0x1,
            'c': '#282828',
            't': 0x5
        }, {
            'p': [-0x2fb, -0xc5, -0x208],
            's': [0x3, 0x25, 0x79],
            'l': 0x1,
            'c': '#282828',
            't': 0x5
        }, {
            'p': [-0x2fb, -0xf6, -0x208],
            's': [0x3, 0x25, 0x79],
            'l': 0x1,
            'c': '#282828',
            't': 0x5
        }, {
            'p': [-0x2fb, -0x127, -0x208],
            's': [0x3, 0x25, 0x79],
            'l': 0x1,
            'c': '#282828',
            't': 0x5
        }, {
            'p': [-0x308, 0x31, -0x267],
            's': [0x3, 0x70, 0x1f],
            'l': 0x1,
            'c': '#000337',
            't': 0x5
        }, {
            'p': [-0x308, 0x2e, -0x267],
            's': [0x1, 0x76, 0x24],
            'l': 0x1,
            'c': '#00b3ff',
            'e': '#00b3ff',
            't': 0x5
        }, {
            'p': [-0x308, 0x87, -0x253],
            's': [0x3, 0x5, 0xa],
            'l': 0x1,
            'c': '#181717',
            't': 0x5
        }, {
            'p': [-0x308, 0x44, -0x253],
            's': [0x3, 0x5, 0xa],
            'l': 0x1,
            'c': '#181717',
            't': 0x5
        }, {
            'p': [-0x306, 0x8b, -0x267],
            's': [0x2, 0x3, 0x12],
            'l': 0x1,
            'c': '#ff0086',
            'e': '#ff0086',
            't': 0x5
        }, {
            'p': [-0x306, 0x7f, -0x267],
            's': [0x2, 0x3, 0x12],
            'l': 0x1,
            'c': '#ff0086',
            'e': '#ff0086',
            't': 0x5
        }, {
            'p': [-0x306, 0x6f, -0x266],
            's': [0x2, 0x3, 0x12],
            'l': 0x1,
            'r': [-0.17, 0x0, 0x0],
            'c': '#ff0086',
            'e': '#ff0086',
            't': 0x5
        }, {
            'p': [-0x306, 0x79, -0x263],
            's': [0x2, 0x3, 0x14],
            'l': 0x1,
            'r': [1.57, 0x0, 0x0],
            'c': '#ff0086',
            'e': '#ff0086',
            't': 0x5
        }, {
            'p': [-0x306, 0x93, -0x267],
            's': [0x2, 0x2, 0x8],
            'l': 0x1,
            'c': '#ff0086',
            'e': '#ff0086',
            't': 0x5
        }, {
            'p': [-0x306, 0x5a, -0x267],
            's': [0x2, 0x3, 0x12],
            'l': 0x1,
            'r': [-0.52, 0x0, 0x0],
            'c': '#ff0086',
            'e': '#ff0086',
            't': 0x5
        }, {
            'p': [-0x306, 0x63, -0x268],
            's': [0x2, 0x2, 0x8],
            'l': 0x1,
            'c': '#ff0086',
            'e': '#ff0086',
            't': 0x5
        }, {
            'p': [-0x306, 0x59, -0x262],
            's': [0x2, 0x3, 0xe],
            'l': 0x1,
            'r': [1.57, 0x0, 0x0],
            'c': '#ff0086',
            'e': '#ff0086',
            't': 0x5
        }, {
            'p': [-0x306, 0x47, -0x267],
            's': [0x2, 0x3, 0x12],
            'l': 0x1,
            'c': '#ff0086',
            'e': '#ff0086',
            't': 0x5
        }, {
            'p': [-0x306, 0x3c, -0x262],
            's': [0x2, 0x7, 0x3],
            'l': 0x1,
            'r': [0.17, 0x0, 0x0],
            'c': '#ff0086',
            'e': '#ff0086',
            't': 0x5
        }, {
            'p': [-0x308, 0x1e, -0x1aa],
            's': [0x3, 0x7a, 0x21],
            'l': 0x1,
            'c': '#181717',
            't': 0x5
        }, {
            'p': [-0x308, 0x80, -0x1bf],
            's': [0x3, 0x6, 0x9],
            'l': 0x1,
            'c': '#343434',
            't': 0x5
        }, {
            'p': [-0x308, 0x38, -0x1bf],
            's': [0x3, 0x6, 0x9],
            'l': 0x1,
            'c': '#343434',
            't': 0x5
        }, {
            'p': [-0x308, 0x1b, -0x1aa],
            's': [0x1, 0x7f, 0x25],
            'l': 0x1,
            'c': '#ff0000',
            'e': '#ff0000',
            't': 0x5
        }, {
            'p': [-0x307, 0x8c, -0x1a1],
            's': [0x2, 0x13, 0x3],
            'l': 0x1,
            'r': [-1.57, 0x0, 0x0],
            'c': '#00ff69',
            'e': '#00ff69',
            't': 0x5
        }, {
            'p': [-0x307, 0x7c, -0x1a7],
            's': [0x2, 0x13, 0x3],
            'l': 0x1,
            'r': [-0.7, 0x0, 0x0],
            'c': '#00ff69',
            'e': '#00ff69',
            't': 0x5
        }, {
            'p': [-0x307, 0x92, -0x1a5],
            's': [0x2, 0xc, 0x2],
            'l': 0x1,
            'r': [-1.57, 0x0, 0x0],
            'c': '#00ff69',
            'e': '#00ff69',
            't': 0x5
        }, {
            'p': [-0x307, 0x6a, -0x1a8],
            's': [0x2, 0x3, 0x11],
            'l': 0x1,
            'r': [-1.57, 0x0, 0x0],
            'c': '#00ff69',
            'e': '#00ff69',
            't': 0x5
        }, {
            'p': [-0x307, 0x54, -0x1a1],
            's': [0x2, 0x13, 0x3],
            'l': 0x1,
            'r': [-1.4, 0x0, 0x0],
            'c': '#00ff69',
            'e': '#00ff69',
            't': 0x5
        }, {
            'p': [-0x307, 0x50, -0x1a3],
            's': [0x2, 0x3, 0x11],
            'l': 0x1,
            'r': [-1.57, 0x0, 0x0],
            'c': '#00ff69',
            'e': '#00ff69',
            't': 0x5
        }, {
            'p': [-0x307, 0x49, -0x1a3],
            's': [0x2, 0x11, 0x3],
            'l': 0x1,
            'r': [-1.57, 0x0, 0x0],
            'c': '#00ff69',
            'e': '#00ff69',
            't': 0x5
        }, {
            'p': [-0x307, 0x33, -0x1a2],
            's': [0x2, 0x11, 0x3],
            'l': 0x1,
            'r': [-1.57, 0x0, 0x0],
            'c': '#00ff69',
            'e': '#00ff69',
            't': 0x5
        }, {
            'p': [-0x307, 0x3a, -0x1a6],
            's': [0x2, 0xa, 0x3],
            'l': 0x1,
            'r': [-1.57, 0x0, 0x0],
            'c': '#00ff69',
            'e': '#00ff69',
            't': 0x5
        }, {
            'p': [-0x307, 0x33, -0x1a2],
            's': [0x2, 0x11, 0x3],
            'l': 0x1,
            'r': [-2.27, 0x0, 0x0],
            'c': '#00ff69',
            'e': '#00ff69',
            't': 0x5
        }, {
            'p': [-0x1c0, 0x2b, -0x2c2],
            's': [0x80, 0x2a, 0x6],
            'l': 0x1,
            'c': '#1b1b1b',
            't': 0x5
        }, {
            'p': [-0x194, 0x3a, -0x2c0],
            's': [0x14, 0x2, 0x4],
            'l': 0x1,
            'r': [0x0, 0x0, -0.87],
            'c': '#ff0000',
            'e': '#ff0000',
            't': 0x5
        }, {
            'p': [-0x18a, 0x3b, -0x2bf],
            's': [0x14, 0x2, 0x3],
            'l': 0x1,
            'r': [0x0, 0x0, -2.27],
            'c': '#ff0000',
            'e': '#ff0000',
            't': 0x5
        }, {
            'p': [-0x190, 0x43, -0x2bf],
            's': [0x17, 0x2, 0x3],
            'l': 0x1,
            'r': [0x0, 0x0, 3.14],
            'c': '#ff0000',
            'e': '#ff0000',
            't': 0x5
        }, {
            'p': [-0x190, 0x4b, -0x2bf],
            's': [0x2, 0xb, 0x3],
            'l': 0x1,
            'r': [0x0, 0x0, 3.14],
            'c': '#ff0000',
            'e': '#ff0000',
            't': 0x5
        }, {
            'p': [-0x1ac, 0x35, -0x2c0],
            's': [0x7, 0x2, 0x5],
            'l': 0x1,
            'r': [0x0, 0x0, 3.14],
            'c': '#ff0000',
            'e': '#ff0000',
            't': 0x5
        }, {
            'p': [-0x1ac, 0x3b, -0x2c0],
            's': [0xa, 0x2, 0x6],
            'l': 0x1,
            'r': [0x0, 0x0, 3.14],
            'c': '#ff0000',
            'e': '#ff0000',
            't': 0x5
        }, {
            'p': [-0x1aa, 0x4b, -0x2bf],
            's': [0x2, 0x12, 0x3],
            'l': 0x1,
            'r': [0x0, 0x0, -2.79],
            'c': '#ff0000',
            'e': '#ff0000',
            't': 0x5
        }, {
            'p': [-0x1ab, 0x49, -0x2bf],
            's': [0x14, 0x2, 0x3],
            'l': 0x1,
            'r': [0x0, 0x0, -2.79],
            'c': '#ff0000',
            'e': '#ff0000',
            't': 0x5
        }, {
            'p': [-0x1ad, 0x43, -0x2bf],
            's': [0x14, 0x2, 0x3],
            'l': 0x1,
            'r': [0x0, 0x0, -2.79],
            'c': '#ff0000',
            'e': '#ff0000',
            't': 0x5
        }, {
            'p': [-0x1c8, 0x4c, -0x2bf],
            's': [0x2, 0x14, 0x3],
            'l': 0x1,
            'r': [0x0, 0x0, 2.8],
            'c': '#ff0000',
            'e': '#ff0000',
            't': 0x5
        }, {
            'p': [-0x1c6, 0x49, -0x2bf],
            's': [0xf, 0x2, 0x2],
            'l': 0x1,
            'r': [0x0, 0x0, -3.05],
            'c': '#ff0000',
            'e': '#ff0000',
            't': 0x5
        }, {
            'p': [-0x1ce, 0x44, -0x2c0],
            's': [0x2, 0xf, 0x5],
            'l': 0x1,
            'r': [0x0, 0x0, -3.13],
            'c': '#ff0000',
            'e': '#ff0000',
            't': 0x5
        }, {
            'p': [-0x1c8, 0x39, -0x2bf],
            's': [0x2, 0x5, 0x3],
            'l': 0x1,
            'r': [0x0, 0x0, -3.14],
            'c': '#ff0000',
            'e': '#ff0000',
            't': 0x5
        }, {
            'p': [-0x1cf, 0x36, -0x2bf],
            's': [0xc, 0x2, 0x3],
            'l': 0x1,
            'r': [0x0, 0x0, 2.97],
            'c': '#ff0000',
            'e': '#ff0000',
            't': 0x5
        }, {
            'p': [-0x1d4, 0x4a, -0x2bf],
            's': [0x9, 0x2, 0x3],
            'l': 0x1,
            'r': [0x0, 0x0, 2.79],
            'c': '#ff0000',
            'e': '#ff0000',
            't': 0x5
        }, {
            'p': [-0x1ec, 0x4a, -0x2bf],
            's': [0x2, 0xb, 0x4],
            'l': 0x1,
            'r': [0x0, 0x0, -3.14],
            'c': '#ff0000',
            'e': '#ff0000',
            't': 0x5
        }, {
            'p': [-0x1f1, 0x4a, -0x2bf],
            's': [0x2, 0xb, 0x4],
            'l': 0x1,
            'r': [0x0, 0x0, -3.14],
            'c': '#ff0000',
            'e': '#ff0000',
            't': 0x5
        }, {
            'p': [-0x1f5, 0x45, -0x2bf],
            's': [0x2, 0x6, 0x4],
            'l': 0x1,
            'r': [0x0, 0x0, -3.14],
            'c': '#ff0000',
            'e': '#ff0000',
            't': 0x5
        }, {
            'p': [-0x1ef, 0x46, -0x2bf],
            's': [0xc, 0x2, 0x4],
            'l': 0x1,
            'r': [0x0, 0x0, -3.14],
            'c': '#ff0000',
            'e': '#ff0000',
            't': 0x5
        }, {
            'p': [-0x1e9, 0x45, -0x2bf],
            's': [0x2, 0x6, 0x4],
            'l': 0x1,
            'r': [0x0, 0x0, -3.14],
            'c': '#ff0000',
            'e': '#ff0000',
            't': 0x5
        }, {
            'p': [-0x1ef, 0x4b, -0x2bf],
            's': [0xe, 0x2, 0x4],
            'l': 0x1,
            'r': [0x0, 0x0, -3.14],
            'c': '#ff0000',
            'e': '#ff0000',
            't': 0x5
        }, {
            'p': [-0x1ef, 0x36, -0x2bf],
            's': [0x2, 0x8, 0x3],
            'l': 0x1,
            'c': '#ff0000',
            'e': '#ff0000',
            't': 0x5
        }, {
            'p': [-0x1ef, 0x37, -0x2bf],
            's': [0xe, 0x2, 0x3],
            'l': 0x1,
            'r': [0x0, 0x0, -3.14],
            'c': '#ff0000',
            'e': '#ff0000',
            't': 0x5
        }, {
            'p': [-0x1c0, 0x29, -0x2c2],
            's': [0x83, 0x2, 0x9],
            'l': 0x1,
            'c': '#000000',
            'e': '#ff0000',
            't': 0x5
        }, {
            'p': [-0x1c0, 0x55, -0x2c2],
            's': [0x83, 0x2, 0x9],
            'l': 0x1,
            'c': '#000000',
            'e': '#ff0000',
            't': 0x5
        }, {
            'p': [-0x201, 0x29, -0x2c2],
            's': [0x2, 0x2e, 0x9],
            'l': 0x1,
            'c': '#000000',
            'e': '#ff0000',
            't': 0x5
        }, {
            'p': [-0x180, 0x29, -0x2c2],
            's': [0x3, 0x2e, 0x9],
            'l': 0x1,
            'c': '#000000',
            'e': '#ff0000',
            't': 0x5
        }, {
            'p': [0xfa, -0xa, -0x2b],
            's': [0x3, 0x30, 0x71],
            'l': 0x1,
            'c': '#434343',
            't': 0x5
        }, {
            'p': [0xf8, 0xe, -0x2b],
            's': [0x6e, 0x0, 0x2e],
            'i': 0xb,
            'l': 0x1,
            'r': [1.57, 0x0, 1.57],
            'bb': 0x2
        }, {
            'p': [-0x51, -0x18, -0xcc],
            's': [0x9, 0x18, 0x2d],
            'c': '#4a4a4a',
            't': 0x5,
            'bo': 0x1
        }, {
            'p': [-0x121, 0x1a, -0x31],
            's': [0xa, 0xb, 0x14],
            't': 0x5
        }, {
            'p': [-0x121, 0x17, -0x31],
            's': [0x9, 0xb, 0x13],
            'c': '#878383',
            't': 0x5
        }, {
            'p': [0x134, -0x2c2, -0x18e],
            's': [0x8b, 0x369, 0x8e],
            'c': '#616161',
            't': 0x5
        }, {
            'p': [0x10c, -0x2c4, -0x165],
            's': [0x7b, 0x2fb, 0x87],
            'r': [-3.14, 0x0, 3.14],
            'c': '#a0a0a0',
            't': 0x5
        }, {
            'p': [0x134, 0xa7, -0x18e],
            's': [0x8f, 0x3, 0x92],
            'c': '#575757',
            't': 0x5
        }, {
            'p': [0xd5, 0x3f, -0x161],
            's': [0x4, 0x32, 0x70],
            'l': 0x1,
            'c': '#000337',
            't': 0x5
        }, {
            'p': [0xd3, 0x70, -0x161],
            's': [0x2, 0x2, 0x70],
            'l': 0x1,
            'c': '#000de8',
            'e': '#004aff',
            't': 0x5
        }, {
            'p': [0xd3, 0x3e, -0x161],
            's': [0x2, 0x2, 0x70],
            'l': 0x1,
            'c': '#000de8',
            'e': '#004aff',
            't': 0x5
        }, {
            'p': [0xd3, 0x3e, -0x199],
            's': [0x2, 0x34, 0x2],
            'l': 0x1,
            'c': '#000de8',
            'e': '#004aff',
            't': 0x5
        }, {
            'p': [0xd3, 0x3e, -0x129],
            's': [0x2, 0x34, 0x2],
            'l': 0x1,
            'c': '#000de8',
            'e': '#004aff',
            't': 0x5
        }, {
            'p': [0xd8, 0x39, -0x133],
            's': [0x4, 0x3a, 0x4],
            'l': 0x1,
            'c': '#434343',
            't': 0x5
        }, {
            'p': [0xd8, 0x39, -0x18d],
            's': [0x4, 0x3a, 0x4],
            'l': 0x1,
            'c': '#434343',
            't': 0x5
        }, {
            'p': [0x10b, 0x37, -0x164],
            's': [0x7e, 0x2, 0x89],
            'l': 0x1,
            'r': [-3.14, 0x0, 3.14],
            'c': '#4d4d4d',
            't': 0x5
        }, {
            'p': [0xfe, -0x3, -0x1ef],
            's': [0x3, 0xa4, 0x23],
            'l': 0x1,
            'c': '#181717',
            't': 0x5
        }, {
            'p': [0x100, 0x25, -0x1d9],
            's': [0x3, 0x6, 0x9],
            'l': 0x1,
            'c': '#343434',
            't': 0x5
        }, {
            'p': [0x100, 0x7f, -0x1d9],
            's': [0x3, 0x6, 0x9],
            'l': 0x1,
            'c': '#343434',
            't': 0x5
        }, {
            'p': [0xfe, -0x6, -0x1ef],
            's': [0x1, 0xaa, 0x2a],
            'l': 0x1,
            'c': '#0eff00',
            'e': '#0eff00',
            't': 0x5
        }, {
            'p': [0xd5, 0x28, -0x114],
            's': [0x4, 0x10, 0x4],
            'l': 0x1,
            'c': '#00ff2d',
            'e': '#00ff2d',
            't': 0x5
        }, {
            'p': [0xd5, 0x27, -0x114],
            's': [0x1, 0x12, 0x6],
            'l': 0x1,
            'c': '#252a26',
            't': 0x5
        }, {
            'p': [0xd5, 0x2d, -0x114],
            's': [0x1, 0x6, 0x11],
            'l': 0x1,
            'c': '#252a26',
            't': 0x5
        }, {
            'p': [0xd5, 0x2f, -0x11f],
            's': [0x1, 0x2, 0x5],
            'l': 0x1,
            'c': '#252a26',
            't': 0x5
        }, {
            'p': [0xcd, -0x7, -0x163],
            's': [0x3, 0x38, 0x7d],
            'c': '#5a5a5a',
            't': 0x5
        }, {
            'p': [0xcb, -0xa, -0x164],
            's': [0x5, 0x3, 0x80],
            'l': 0x1,
            'c': '#575656',
            't': 0x5
        }, {
            'p': [0x134, 0x67, -0x146],
            's': [0x71, 0x37, 0x3],
            'l': 0x1,
            'c': '#3c3c3c',
            't': 0x5
        }, {
            'p': [0x134, 0x66, -0x146],
            's': [0x77, 0x2, 0x8],
            'l': 0x1,
            'c': '#5c5c5c',
            't': 0x5
        }, {
            'p': [0xd5, 0x2e, -0x114],
            's': [0x4, 0x4, 0xf],
            'l': 0x1,
            'c': '#00ff2d',
            'e': '#00ff2d',
            't': 0x5
        }, {
            'p': [0x122, 0x39, -0x127],
            's': [0x2, 0x17, 0x2],
            'l': 0x1,
            'c': '#373737',
            't': 0x5
        }, {
            'p': [0x10e, -0x12, -0x113],
            's': [0x29, 0x1, 0x13],
            'l': 0x1,
            'c': '#646464',
            't': 0x5
        }, {
            'p': [0x122, 0x4f, -0x11d],
            's': [0x3, 0x3, 0x1b],
            'l': 0x1,
            'c': '#373737',
            't': 0x5
        }, {
            'p': [0x122, -0x11, -0x113],
            's': [0x1, 0x60, 0x1],
            'l': 0x1,
            'c': '#505050',
            't': 0x5
        }, {
            'p': [0xfa, -0x11, -0x113],
            's': [0x1, 0x61, 0x1],
            'l': 0x1,
            'c': '#505050',
            't': 0x5
        }, {
            'p': [0xfa, 0x4f, -0x11d],
            's': [0x3, 0x3, 0x1b],
            'l': 0x1,
            'c': '#373737',
            't': 0x5
        }, {
            'p': [0xfa, 0x39, -0x127],
            's': [0x2, 0x17, 0x2],
            'l': 0x1,
            'c': '#373737',
            't': 0x5
        }, {
            'p': [0x10e, -0x12, -0x109],
            's': [0x2b, 0x2, 0x1],
            'l': 0x1,
            'c': '#e84d4d',
            't': 0x5
        }, {
            'p': [0x10e, -0x12, -0x11d],
            's': [0x2b, 0x2, 0x1],
            'l': 0x1,
            'c': '#e84d4d',
            't': 0x5
        }, {
            'p': [0xf9, -0x12, -0x113],
            's': [0x1, 0x2, 0x13],
            'l': 0x1,
            'c': '#e84d4d',
            't': 0x5
        }, {
            'p': [0x123, -0x12, -0x113],
            's': [0x1, 0x2, 0x13],
            'l': 0x1,
            'c': '#e84d4d',
            't': 0x5
        }, {
            'p': [0xf9, -0x10, -0x109],
            's': [0x1, 0xb, 0x1],
            'l': 0x1,
            'c': '#e84d4d',
            't': 0x5
        }, {
            'p': [0x123, -0x10, -0x109],
            's': [0x1, 0xb, 0x1],
            'l': 0x1,
            'c': '#e84d4d',
            't': 0x5
        }, {
            'p': [0x123, -0x10, -0x11d],
            's': [0x1, 0xb, 0x1],
            'l': 0x1,
            'c': '#e84d4d',
            't': 0x5
        }, {
            'p': [0xf9, -0x10, -0x11d],
            's': [0x1, 0xb, 0x1],
            'l': 0x1,
            'c': '#e84d4d',
            't': 0x5
        }, {
            'p': [0x10e, -0x10, -0x109],
            's': [0x1, 0xb, 0x1],
            'l': 0x1,
            'c': '#e84d4d',
            't': 0x5
        }, {
            'p': [0x10e, -0x10, -0x11d],
            's': [0x1, 0xb, 0x1],
            'l': 0x1,
            'c': '#e84d4d',
            't': 0x5
        }, {
            'p': [0x10e, -0x5, -0x109],
            's': [0x2c, 0x1, 0x2],
            'l': 0x1,
            'c': '#e84d4d',
            't': 0x5
        }, {
            'p': [0x10e, -0x5, -0x11d],
            's': [0x2c, 0x1, 0x2],
            'l': 0x1,
            'c': '#e84d4d',
            't': 0x5
        }, {
            'p': [0xf9, -0x10, -0x113],
            's': [0x1, 0xb, 0x1],
            'l': 0x1,
            'c': '#e84d4d',
            't': 0x5
        }, {
            'p': [0x123, -0x10, -0x113],
            's': [0x1, 0xb, 0x1],
            'l': 0x1,
            'c': '#e84d4d',
            't': 0x5
        }, {
            'p': [0x123, -0x5, -0x113],
            's': [0x2, 0x1, 0x12],
            'l': 0x1,
            'c': '#e84d4d',
            't': 0x5
        }, {
            'p': [0xf9, -0x5, -0x113],
            's': [0x2, 0x1, 0x12],
            'l': 0x1,
            'c': '#e84d4d',
            't': 0x5
        }, {
            'p': [0x134, 0x83, -0x144],
            's': [0x6c, 0x0, 0x32],
            'i': 0xb,
            'l': 0x1,
            'r': [1.57, 0x0, 0x0],
            'bb': 0x1
        }, {
            'p': [0xcb, 0x15, -0x163],
            's': [0x78, 0x0, 0x35],
            'i': 0xb,
            'l': 0x1,
            'r': [1.57, 0x0, 1.57],
            'bb': 0x4
        }, {
            'p': [0x10f, 0x1b, -0x11e],
            's': [0x68, 0x0, 0x2a],
            'i': 0xb,
            'l': 0x1,
            'r': [1.57, 0x0, 0x0],
            'bb': 0x2
        }, {
            'p': [0x10e, 0x4, -0x120],
            's': [0x6a, 0x2d, 0x3],
            'c': '#3c3c3c',
            't': 0x5
        }, {
            'p': [0x10c, -0x2b, -0x121],
            's': [0x68, 0x24, 0x2],
            'l': 0x1,
            'c': '#282828',
            't': 0x5
        }, {
            'p': [0x10c, -0x58, -0x121],
            's': [0x68, 0x24, 0x2],
            'l': 0x1,
            'c': '#f5e14c',
            'e': '#f5e14c',
            't': 0x5
        }, {
            'p': [0x10c, -0x85, -0x121],
            's': [0x68, 0x24, 0x2],
            'l': 0x1,
            'c': '#282828',
            't': 0x5
        }, {
            'p': [0x10c, -0xb3, -0x121],
            's': [0x68, 0x24, 0x2],
            'l': 0x1,
            'c': '#282828',
            't': 0x5
        }, {
            'p': [0x10c, -0xe2, -0x121],
            's': [0x68, 0x24, 0x2],
            'l': 0x1,
            'c': '#282828',
            't': 0x5
        }, {
            'p': [0x10c, -0x111, -0x121],
            's': [0x68, 0x24, 0x2],
            'l': 0x1,
            'c': '#282828',
            't': 0x5
        }, {
            'p': [0x10c, -0x13f, -0x121],
            's': [0x68, 0x24, 0x2],
            'l': 0x1,
            'c': '#282828',
            't': 0x5
        }, {
            'p': [0x10c, -0x16d, -0x121],
            's': [0x68, 0x24, 0x2],
            'l': 0x1,
            'c': '#282828',
            't': 0x5
        }, {
            'p': [0xcd, -0x43, -0x164],
            's': [0x3, 0x2f, 0x75],
            'l': 0x1,
            'c': '#282828',
            't': 0x5
        }, {
            'p': [0xcd, -0x7c, -0x164],
            's': [0x3, 0x2f, 0x75],
            'l': 0x1,
            'c': '#282828',
            't': 0x5
        }, {
            'p': [0xcd, -0xb6, -0x164],
            's': [0x3, 0x2f, 0x75],
            'l': 0x1,
            'c': '#282828',
            't': 0x5
        }, {
            'p': [0xcd, -0xf3, -0x164],
            's': [0x3, 0x2f, 0x75],
            'l': 0x1,
            'c': '#282828',
            't': 0x5
        }, {
            'p': [0xfd, 0x83, -0x1f6],
            's': [0x4, 0x3, 0x18],
            'l': 0x1,
            'r': [1.74, 0x0, 0x0],
            'c': '#ff004a',
            'e': '#ff004a',
            't': 0x5
        }, {
            'p': [0xfd, 0x77, -0x1ef],
            's': [0x4, 0x3, 0x13],
            'l': 0x1,
            'r': [-0.01, 0x0, 0x0],
            'c': '#ff004a',
            'e': '#ff004a',
            't': 0x5
        }, {
            'p': [0xfd, 0x77, -0x1e7],
            's': [0x4, 0x9, 0x3],
            'l': 0x1,
            'r': [-0.01, 0x0, 0x0],
            'c': '#ff004a',
            'e': '#ff004a',
            't': 0x5
        }, {
            'p': [0xfd, 0x65, -0x1ef],
            's': [0x4, 0x3, 0x15],
            'l': 0x1,
            'r': [-0.01, 0x0, 0x0],
            'c': '#ff004a',
            'e': '#ff004a',
            't': 0x5
        }, {
            'p': [0xfd, 0x5b, -0x1f1],
            's': [0x4, 0x3, 0xc],
            'l': 0x1,
            'r': [0.51, 0x0, 0x0],
            'c': '#ff004a',
            'e': '#ff004a',
            't': 0x5
        }, {
            'p': [0xfd, 0x39, -0x1ee],
            's': [0x4, 0xc, 0x3],
            'l': 0x1,
            'r': [-0.01, 0x0, 0x0],
            'c': '#ff004a',
            'e': '#ff004a',
            't': 0x5
        }, {
            'p': [0xfd, 0x49, -0x1ef],
            's': [0x4, 0x3, 0x13],
            'l': 0x1,
            'r': [-0.01, 0x0, 0x0],
            'c': '#ff004a',
            'e': '#ff004a',
            't': 0x5
        }, {
            'p': [0xfd, 0x17, -0x1e6],
            's': [0x4, 0x10, 0x3],
            'l': 0x1,
            'r': [-0.01, 0x0, 0x0],
            'c': '#ff004a',
            'e': '#ff004a',
            't': 0x5
        }, {
            'p': [0xfd, 0x17, -0x1f6],
            's': [0x4, 0x10, 0x3],
            'l': 0x1,
            'r': [-0.01, 0x0, 0x0],
            'c': '#ff004a',
            'e': '#ff004a',
            't': 0x5
        }, {
            'p': [0xfd, 0x17, -0x1ee],
            's': [0x4, 0x3, 0x13],
            'l': 0x1,
            'r': [-0.01, 0x0, 0x0],
            'c': '#ff004a',
            'e': '#ff004a',
            't': 0x5
        }, {
            'p': [0xfd, 0x24, -0x1ee],
            's': [0x4, 0x3, 0x13],
            'l': 0x1,
            'r': [-0.01, 0x0, 0x0],
            'c': '#ff004a',
            'e': '#ff004a',
            't': 0x5
        }, {
            'p': [0xfd, 0x20, -0x1ee],
            's': [0x4, 0xc, 0x3],
            'l': 0x1,
            'r': [-0.01, 0x0, 0x0],
            'c': '#ff004a',
            'e': '#ff004a',
            't': 0x5
        }, {
            'p': [0xd3, 0x3e, -0x18d],
            's': [0x2, 0x10, 0x1],
            'l': 0x1,
            'c': '#000de8',
            'e': '#004aff',
            't': 0x5
        }, {
            'p': [0xd3, 0x45, -0x18e],
            's': [0x2, 0x1, 0x14],
            'l': 0x1,
            'c': '#000de8',
            'e': '#004aff',
            't': 0x5
        }, {
            'p': [0xd3, 0x49, -0x189],
            's': [0x2, 0x1, 0xb],
            'l': 0x1,
            'r': [0.7, 0x0, 0x0],
            'c': '#000de8',
            'e': '#004aff',
            't': 0x5
        }, {
            'p': [0xd3, 0x4c, -0x18a],
            's': [0x2, 0x2, 0x10],
            'l': 0x1,
            'r': [0.35, 0x0, 0x0],
            'c': '#000de8',
            'e': '#004aff',
            't': 0x5
        }, {
            'p': [0xd3, 0x50, -0x189],
            's': [0x2, 0x4, 0x12],
            'l': 0x1,
            'r': [0.35, 0x0, 0x0],
            'c': '#000de8',
            'e': '#004aff',
            't': 0x5
        }, {
            'p': [0xd3, 0x52, -0x18a],
            's': [0x2, 0x4, 0xc],
            'l': 0x1,
            'c': '#000de8',
            'e': '#004aff',
            't': 0x5
        }, {
            'p': [0xd3, 0x51, -0x186],
            's': [0x2, 0x4, 0x7],
            'l': 0x1,
            'r': [0.87, 0x0, 0x0],
            'c': '#000de8',
            'e': '#004aff',
            't': 0x5
        }, {
            'p': [0xd3, 0x53, -0x191],
            's': [0x2, 0xc, 0x2],
            'l': 0x1,
            'c': '#000de8',
            'e': '#004aff',
            't': 0x5
        }, {
            'p': [0xd3, 0x5c, -0x18a],
            's': [0x2, 0x7, 0x2],
            'l': 0x1,
            'c': '#000de8',
            'e': '#004aff',
            't': 0x5
        }, {
            'p': [0xd3, 0x5b, -0x18a],
            's': [0x2, 0x9, 0x2],
            'l': 0x1,
            'r': [-1.05, 0x0, 0x0],
            'c': '#000de8',
            'e': '#004aff',
            't': 0x5
        }, {
            'p': [0xd3, 0x61, -0x18b],
            's': [0x2, 0x5, 0x6],
            'l': 0x1,
            'r': [0.52, 0x0, 0x0],
            'c': '#000de8',
            'e': '#004aff',
            't': 0x5
        }, {
            'p': [0xd3, 0x64, -0x18f],
            's': [0x2, 0x1, 0xa],
            'l': 0x1,
            'r': [0.69, 0x0, 0x0],
            'c': '#000de8',
            'e': '#004aff',
            't': 0x5
        }, {
            'p': [0xd3, 0x65, -0x18d],
            's': [0x2, 0x1, 0xb],
            'l': 0x1,
            'r': [0.35, 0x0, 0x0],
            'c': '#000de8',
            'e': '#004aff',
            't': 0x5
        }, {
            'p': [0xd2, 0x63, -0x18a],
            's': [0x1, 0x1, 0x2],
            'l': 0x1,
            'r': [0.52, 0x0, 0x0],
            'c': '#e80000',
            'e': '#ff0000',
            't': 0x5
        }, {
            'p': [0xd3, 0x4b, -0x17a],
            's': [0x2, 0x1a, 0x3],
            'l': 0x1,
            'c': '#e80000',
            'e': '#ff0000',
            't': 0x5
        }, {
            'p': [0xd3, 0x59, -0x177],
            's': [0x2, 0x3, 0x9],
            'l': 0x1,
            'c': '#e80000',
            'e': '#ff0000',
            't': 0x5
        }, {
            'p': [0xd3, 0x50, -0x174],
            's': [0x2, 0x3, 0xc],
            'l': 0x1,
            'r': [1.05, 0x0, 0x0],
            'c': '#e80000',
            'e': '#ff0000',
            't': 0x5
        }, {
            'p': [0xd3, 0x60, -0x173],
            's': [0x2, 0x3, 0x9],
            'l': 0x1,
            'r': [-0.87, 0x0, 0x0],
            'c': '#e80000',
            'e': '#ff0000',
            't': 0x5
        }, {
            'p': [0xd3, 0x4c, -0x160],
            's': [0x2, 0x18, 0x3],
            'l': 0x1,
            'c': '#e80000',
            'e': '#ff0000',
            't': 0x5
        }, {
            'p': [0xd3, 0x5e, -0x162],
            's': [0x2, 0x3, 0xe],
            'l': 0x1,
            'c': '#e80000',
            'e': '#ff0000',
            't': 0x5
        }, {
            'p': [0xd3, 0x55, -0x165],
            's': [0x2, 0x3, 0xe],
            'l': 0x1,
            'c': '#e80000',
            'e': '#ff0000',
            't': 0x5
        }, {
            'p': [0xd3, 0x5f, -0x168],
            's': [0x2, 0x5, 0x3],
            'l': 0x1,
            'r': [-0.35, 0x0, 0x0],
            'c': '#e80000',
            'e': '#ff0000',
            't': 0x5
        }, {
            'p': [0xd3, 0x53, -0x168],
            's': [0x2, 0xc, 0x3],
            'l': 0x1,
            'c': '#e80000',
            'e': '#ff0000',
            't': 0x5
        }, {
            'p': [0xd3, 0x4c, -0x16b],
            's': [0x2, 0xc, 0x3],
            'l': 0x1,
            'r': [0.35, 0x0, 0x0],
            'c': '#e80000',
            'e': '#ff0000',
            't': 0x5
        }, {
            'p': [0xd3, 0x4c, -0x14d],
            's': [0x2, 0x19, 0x3],
            'l': 0x1,
            'c': '#e80000',
            'e': '#ff0000',
            't': 0x5
        }, {
            'p': [0xd3, 0x4c, -0x158],
            's': [0x2, 0x9, 0x3],
            'l': 0x1,
            'r': [0.52, 0x0, 0x0],
            'c': '#e80000',
            'e': '#ff0000',
            't': 0x5
        }, {
            'p': [0xd3, 0x57, -0x156],
            's': [0x2, 0x9, 0x3],
            'l': 0x1,
            'c': '#e80000',
            'e': '#ff0000',
            't': 0x5
        }, {
            'p': [0xd3, 0x5f, -0x156],
            's': [0x2, 0x5, 0x3],
            'l': 0x1,
            'r': [-0.35, 0x0, 0x0],
            'c': '#e80000',
            'e': '#ff0000',
            't': 0x5
        }, {
            'p': [0xd3, 0x5d, -0x156],
            's': [0x2, 0xc, 0x3],
            'l': 0x1,
            'r': [2.27, 0x0, 0x0],
            'c': '#e80000',
            'e': '#ff0000',
            't': 0x5
        }, {
            'p': [0xd3, 0x61, -0x142],
            's': [0x2, 0x3, 0x9],
            'l': 0x1,
            'c': '#e80000',
            'e': '#ff0000',
            't': 0x5
        }, {
            'p': [0xd3, 0x53, -0x141],
            's': [0x2, 0xe, 0x3],
            'l': 0x1,
            'c': '#e80000',
            'e': '#ff0000',
            't': 0x5
        }, {
            'p': [0xd3, 0x4b, -0x146],
            's': [0x2, 0xb, 0x3],
            'l': 0x1,
            'r': [0.52, 0x0, 0x0],
            'c': '#e80000',
            'e': '#ff0000',
            't': 0x5
        }, {
            'p': [0xd3, 0x4f, -0x135],
            's': [0x2, 0x16, 0x3],
            'l': 0x1,
            'c': '#e80000',
            'e': '#ff0000',
            't': 0x5
        }, {
            'p': [0xd3, 0x5f, -0x137],
            's': [0x2, 0x3, 0x9],
            'l': 0x1,
            'c': '#e80000',
            'e': '#ff0000',
            't': 0x5
        }, {
            'p': [0xd3, 0x4c, -0x137],
            's': [0x2, 0x3, 0x9],
            'l': 0x1,
            'c': '#e80000',
            'e': '#ff0000',
            't': 0x5
        }, {
            'p': [-0x51, 0x13, -0xcc],
            's': [0x9, 0x4, 0x2d],
            'c': '#4a4a4a',
            't': 0x5,
            'bo': 0x1
        }, {
            'p': [-0xb5, -0x11, 0x12],
            's': [0x9a, 0x2, 0x2],
            'c': '#464646',
            't': 0x5
        }, {
            'p': [-0xa5, 0x26, -0x156],
            's': [0x3d, 0x14, 0x9],
            'c': '#4a4a4a',
            't': 0x5
        }, {
            'p': [-0x79, -0x275, -0x169],
            's': [0x20, 0x27c, 0x30],
            't': 0x5
        }, {
            'p': [-0x40, 0x7, -0x169],
            's': [0x4, 0x1, 0x31],
            'l': 0x1,
            'c': '#4a4a4a',
            't': 0x5
        }, {
            'p': [-0x31, 0x7, -0x180],
            's': [0x22, 0x1, 0x4],
            'l': 0x1,
            'c': '#4a4a4a',
            't': 0x5
        }, {
            'p': [-0x79, 0x7, -0x180],
            's': [0x22, 0x1, 0x4],
            'l': 0x1,
            'c': '#4a4a4a',
            't': 0x5
        }, {
            'p': [-0x7c, -0x5, -0x1b5],
            's': [0x16, 0xb, 0x8],
            't': 0x5
        }, {
            'p': [-0x7c, -0x7, -0x1b5],
            's': [0x15, 0xb, 0x6],
            'c': '#878383',
            't': 0x5
        }, {
            'p': [-0x69, -0x4, -0x1b5],
            's': [0x16, 0x4, 0x4],
            'c': '#878383',
            't': 0x5
        }, {
            'p': [-0x64, -0x7, -0x1b5],
            's': [0x1, 0x8, 0x6],
            't': 0x5
        }, {
            'p': [-0x60, -0x8, -0x1b5],
            's': [0x4, 0x4, 0x4],
            'c': '#878383',
            't': 0x5
        }, {
            'p': [-0x1e, 0x7, -0x1bf],
            's': [0x4, 0x1, 0x2e],
            'l': 0x1,
            'c': '#4a4a4a',
            't': 0x5
        }, {
            'p': [-0xb, 0x7, -0x1aa],
            's': [0x22, 0x1, 0x4],
            'l': 0x1,
            'c': '#4a4a4a',
            't': 0x5
        }, {
            'p': [-0xb, 0x7, -0x1d4],
            's': [0x22, 0x1, 0x4],
            'l': 0x1,
            'c': '#4a4a4a',
            't': 0x5
        }, {
            'p': [-0x20, -0x8, -0x1b0],
            's': [0x2, 0xf, 0x4],
            'i': 0x3,
            'c': '#ab1212',
            't': 0x5,
            'd': 0x2
        }, {
            'p': [-0x55, -0x1b, -0x159],
            's': [0x28, 0x14, 0x4d],
            'i': 0x9,
            't': 0x5,
            'd': 0x3
        }, {
            'p': [-0xd7, -0x1b, -0xf7],
            's': [0x28, 0xa, 0x28],
            'i': 0x9,
            't': 0x5,
            'd': 0x1
        }, {
            'p': [-0xa0, -0x11, -0xcf],
            's': [0x46, 0x4, 0x28],
            'i': 0x9,
            't': 0x5
        }, {
            'p': [-0x149, -0x1b, -0x5],
            's': [0x5c, 0xe, 0x24],
            'i': 0x9,
            't': 0x5
        }, {
            'p': [-0xb5, 0x3, -0x1c],
            's': [0x78, 0x32, 0x6c],
            'i': 0xe,
            'l': 0x1
        }, {
            'p': [-0x177, -0x8, -0x166],
            's': [0x89, 0x32, 0x63],
            'i': 0xe,
            'l': 0x1
        }, {
            'p': [-0x37, -0x7, -0x1b4],
            's': [0x9a, 0x32, 0x62],
            'i': 0xe,
            'l': 0x1
        }, {
            'p': [0x0, -0x7, -0x16f],
            's': [0x18, 0x24, 0x18],
            'i': 0x17,
            'l': 0x1,
            'tm': 0x0
        }, {
            'p': [-0x19e, -0x1b, -0x39],
            's': [0x18, 0x24, 0x18],
            'i': 0x17,
            'l': 0x1,
            'tm': '1'
        }, {
            'p': [-0x77, -0x7, -0x182],
            's': [0x2, 0xf, 0x4],
            'i': 0x3,
            'c': '#ab1212',
            't': 0x5,
            'd': 0x3
        }, {
            'p': [-0xf2, -0xe, -0x6],
            's': [0x2, 0x12, 0x4],
            'i': 0x3,
            'c': '#ab1212',
            't': 0x5,
            'd': 0x2
        }, {
            'p': [-0xdd, 0x1, -0x1c],
            's': [0x2a, 0x2, 0x6e],
            'c': '#282828',
            't': 0x5
        }, {
            'p': [-0xb5, 0x1, 0x14],
            's': [0x26, 0x2, 0xe],
            'c': '#282828',
            't': 0x5
        }, {
            'p': [-0x67, -0x11, 0xf],
            's': [0x2, 0x2, 0x3c],
            'c': '#464646',
            't': 0x5
        }, {
            'p': [-0x103, -0x11, 0x1f],
            's': [0x2, 0x2, 0x1c],
            'c': '#464646',
            't': 0x5
        }, {
            'p': [-0x80, 0x3, -0x4a],
            's': [0xc, 0xc, 0xc],
            'i': 0x1
        }, {
            'p': [-0xe8, 0x3, 0x8],
            's': [0xc, 0xc, 0xc],
            'i': 0x1
        }, {
            'p': [-0x23, -0x1b, -0x24],
            's': [0x28, 0xe, 0x22],
            'i': 0x9,
            't': 0x5,
            'd': 0x2
        }, {
            'p': [-0xd6, -0xe, 0x1b],
            's': [0x2, 0x11, 0x4],
            'i': 0x3,
            'c': '#ab1212',
            't': 0x5,
            'd': 0x1
        }, {
            'p': [-0x51, -0xa, -0x75],
            's': [0xa, 0xb, 0x14],
            't': 0x5
        }, {
            'p': [-0x51, -0xd, -0x75],
            's': [0x9, 0xb, 0x13],
            'c': '#878383',
            't': 0x5
        }, {
            'p': [-0x51, -0xa, -0x48],
            's': [0xa, 0xb, 0x14],
            't': 0x5
        }, {
            'p': [-0x51, -0xd, -0x48],
            's': [0x9, 0xb, 0x13],
            'c': '#878383',
            't': 0x5
        }, {
            'p': [-0x51, -0xa, -0x6f],
            's': [0x5, 0x4, 0x45],
            'c': '#878383',
            't': 0x5
        }, {
            'p': [-0x51, -0xd, -0x5c],
            's': [0x6, 0x8, 0x1],
            't': 0x5
        }, {
            'p': [-0x51, -0xd, -0x8c],
            's': [0x6, 0x8, 0x1],
            't': 0x5
        }, {
            'p': [-0xd9, -0xb, -0xa2],
            's': [0x16, 0xb, 0x8],
            't': 0x5
        }, {
            'p': [-0xd9, -0xd, -0xa2],
            's': [0x15, 0xb, 0x6],
            'c': '#878383',
            't': 0x5
        }, {
            'p': [-0xb0, -0xb, -0xa2],
            's': [0x16, 0xb, 0x8],
            't': 0x5
        }, {
            'p': [-0xb0, -0xd, -0xa2],
            's': [0x15, 0xb, 0x6],
            'c': '#878383',
            't': 0x5
        }, {
            'p': [-0xcd, -0xd, -0xa2],
            's': [0x1, 0x8, 0x6],
            't': 0x5
        }, {
            'p': [-0xbc, -0xd, -0xa2],
            's': [0x1, 0x8, 0x6],
            't': 0x5
        }, {
            'p': [-0xa3, -0xd, -0xa2],
            's': [0x1, 0x8, 0x6],
            't': 0x5
        }, {
            'p': [-0x81, -0xe, -0xa2],
            's': [0x4, 0x8, 0x4],
            'c': '#878383',
            't': 0x5
        }, {
            'p': [-0x85, -0xd, -0xa2],
            's': [0x1, 0x8, 0x6],
            't': 0x5
        }, {
            'p': [-0x104, -0x275, -0xe1],
            's': [0x32, 0x28c, 0x54],
            'c': '#878383',
            't': 0x5,
            'bo': 0x1
        }, {
            'p': [-0x115, -0xe, -0xb1],
            's': [0x6, 0x9, 0x1],
            't': 0x5
        }, {
            'p': [-0x103, -0xe, -0xab],
            's': [0x2c, 0x24, 0x1],
            'c': '#ffffff',
            't': 0xc,
            'bo': 0x1
        }, {
            'p': [-0x104, -0x1b, -0xe1],
            's': [0x33, 0x1b, 0x55],
            'c': '#4a4a4a',
            't': 0x5
        }, {
            'p': [-0x115, -0xa, -0x9d],
            's': [0xa, 0xb, 0x14],
            't': 0x5
        }, {
            'p': [-0x115, -0xd, -0x9d],
            's': [0x9, 0xb, 0x13],
            'c': '#878383',
            't': 0x5
        }, {
            'p': [-0x115, -0xa, -0x73],
            's': [0xa, 0xb, 0x14],
            't': 0x5
        }, {
            'p': [-0x115, -0xd, -0x73],
            's': [0x9, 0xb, 0x13],
            'c': '#878383',
            't': 0x5
        }, {
            'p': [-0x115, -0xa, -0x96],
            's': [0x5, 0x4, 0x41],
            'c': '#878383',
            't': 0x5
        }, {
            'p': [-0x115, -0xd, -0x88],
            's': [0x6, 0x8, 0x1],
            't': 0x5
        }, {
            'p': [-0xf6, -0xd, -0xb7],
            's': [0x1, 0xc, 0x3],
            'c': '#ffffff',
            't': 0x5
        }, {
            'p': [-0xfa, -0xd, -0xb7],
            's': [0x1, 0xc, 0x3],
            'c': '#ffffff',
            't': 0x5
        }, {
            'p': [-0xf2, -0x11, 0x1f],
            's': [0x2, 0x2, 0x18],
            'c': '#464646',
            't': 0x5
        }, {
            'p': [-0xb5, -0x10, 0x1f],
            's': [0x9b, 0x1, 0x18],
            'v': 0x1,
            't': 0xc
        }, {
            'p': [-0x12f, -0xc, 0xf],
            's': [0x90, 0x2, 0x4],
            'c': '#878383',
            't': 0x5
        }, {
            'p': [-0x51, -0xe, -0x8f],
            's': [0x5, 0x4, 0x5],
            'c': '#878383',
            't': 0x5
        }, {
            'p': [-0x85, -0xd, -0x71],
            's': [0xc, 0xc, 0xc],
            'i': 0x1
        }, {
            'p': [-0x91, -0xd, -0x71],
            's': [0xc, 0xc, 0xc],
            'i': 0x1
        }, {
            'p': [-0x8c, -0x1, -0x71],
            's': [0xc, 0xc, 0xc],
            'i': 0x1
        }, {
            'p': [-0xab, -0xa, -0xa2],
            's': [0x4e, 0x4, 0x4],
            'c': '#878383',
            't': 0x5
        }, {
            'p': [-0x39, 0xd, -0x51],
            's': [0x3, 0x7, 0x5],
            'c': '#878383',
            't': 0x5
        }, {
            'p': [-0x39, 0xc, -0x54],
            's': [0x4, 0x9, 0x1],
            'c': '#cfcfcf',
            't': 0x5,
            'bo': 0x1
        }, {
            'p': [-0x39, 0xc, -0x52],
            's': [0x4, 0x1, 0x3],
            'c': '#cfcfcf',
            't': 0x5,
            'bo': 0x1
        }, {
            'p': [-0x39, 0x14, -0x52],
            's': [0x4, 0x1, 0x3],
            'c': '#cfcfcf',
            't': 0x5,
            'bo': 0x1
        }, {
            'p': [-0x39, 0x1c, -0x51],
            's': [0x3, 0x7, 0x5],
            'c': '#878383',
            't': 0x5
        }, {
            'p': [-0x39, 0x1b, -0x54],
            's': [0x4, 0x9, 0x1],
            'c': '#cfcfcf',
            't': 0x5
        }, {
            'p': [-0x39, 0x1b, -0x4d],
            's': [0x4, 0x9, 0x7],
            'c': '#cfcfcf',
            't': 0x5
        }, {
            'p': [-0x39, 0x1b, -0x52],
            's': [0x4, 0x1, 0x3],
            'c': '#cfcfcf',
            't': 0x5
        }, {
            'p': [-0x39, 0x23, -0x52],
            's': [0x4, 0x1, 0x3],
            'c': '#cfcfcf',
            't': 0x5
        }, {
            'p': [-0x37, 0x10, -0x46],
            's': [0x2, 0x1, 0x7],
            'c': '#878383',
            't': 0x5,
            'bo': 0x1
        }, {
            'p': [-0x37, 0x1f, -0x47],
            's': [0x2, 0x1, 0x7],
            'c': '#878383',
            't': 0x5
        }, {
            'p': [-0x37, 0x10, -0x42],
            's': [0x2, 0x58, 0x1],
            'c': '#878383',
            't': 0x5,
            'bo': 0x1
        }, {
            'p': [-0x37, 0x20, -0x44],
            's': [0x2, 0x48, 0x1],
            'c': '#878383',
            't': 0x5
        }, {
            'p': [-0x39, 0xc, -0x4d],
            's': [0x4, 0x9, 0x7],
            'c': '#cfcfcf',
            't': 0x5,
            'bo': 0x1
        }, {
            'p': [-0xb4, 0x3, -0x1b],
            's': [0xc, 0xc, 0xc],
            'i': 0x1
        }, {
            'p': [-0xb4, 0x3, -0xf],
            's': [0xc, 0xc, 0xc],
            'i': 0x1
        }, {
            'p': [-0xb4, 0xf, -0x15],
            's': [0xc, 0xc, 0xc],
            'i': 0x1
        }, {
            'p': [-0xb4, 0x1, -0x15],
            's': [0x2, 0x1b, 0xd],
            'l': 0x1,
            'c': '#282828',
            't': 0x5
        }, {
            'p': [-0xb4, 0x0, -0x15],
            's': [0x2, 0x10, 0x19],
            'l': 0x1,
            'c': '#282828',
            't': 0x5
        }, {
            'p': [-0xb4, 0x3, -0x15],
            's': [0xd, 0x19, 0x2],
            'l': 0x1,
            'c': '#282828',
            't': 0x5
        }, {
            'p': [-0xb4, -0xe, -0x15],
            's': [0xc, 0x1d, 0x18],
            'l': 0x1,
            'c': '#ffffff',
            't': 0xc
        }, {
            'p': [-0xb4, 0xf, -0x15],
            's': [0xc, 0xc, 0xc],
            'c': '#ffffff',
            't': 0xc
        }, {
            'p': [-0xb4, 0x8, -0x12],
            's': [0xe, 0x3, 0x2],
            'l': 0x1,
            'c': '#8e8e8e',
            't': 0xb
        }, {
            'p': [-0xb4, 0x8, -0x10],
            's': [0xe, 0x3, 0x2],
            'l': 0x1,
            'c': '#d2cfcf',
            't': 0xb
        }, {
            'p': [-0xb4, 0x9, -0x11],
            's': [0xf, 0x1, 0x1],
            'l': 0x1,
            'c': '#ff0000',
            'e': '#ff0000',
            't': 0x5
        }, {
            'p': [-0x42, -0xe, -0xb6],
            's': [0x19, 0x3d, 0x3],
            'c': '#878383',
            't': 0x5
        }, {
            'p': [-0x177, -0x26, -0x183],
            's': [0x8c, 0x1e, 0xc8],
            't': 0x5
        }, {
            'p': [-0x1d1, -0x26, -0x197],
            's': [0x28, 0x1e, 0x28],
            't': 0x5
        }, {
            'p': [-0x1bf, -0x26, -0x151],
            's': [0x4, 0x21, 0x64],
            'c': '#878383',
            't': 0x5
        }, {
            'p': [-0x1e7, -0x27e, -0x165],
            's': [0x4, 0x279, 0x8c],
            'c': '#878383',
            't': 0x5
        }, {
            'p': [-0x177, -0x26, -0x1d5],
            's': [0x8c, 0x2c, 0x26],
            'c': '#ffffff',
            't': 0x5
        }, {
            'p': [-0x145, -0x26, -0x1af],
            's': [0x28, 0x2c, 0x26],
            't': 0x5
        }, {
            'p': [-0x159, -0x26, -0x19a],
            's': [0x52, 0x2e, 0x4],
            't': 0x5
        }, {
            'p': [-0x1c7, -0x26, -0x1c9],
            's': [0x14, 0x1e, 0x3c],
            't': 0x5
        }, {
            'p': [-0x1b2, -0x26, -0x1f1],
            's': [0x3e, 0x1e, 0x14],
            't': 0x5
        }, {
            'p': [-0x1dd, -0x27e, -0x1ad],
            's': [0x18, 0x279, 0x4],
            'c': '#878383',
            't': 0x5
        }, {
            'p': [-0x1d3, -0x27e, -0x1d5],
            's': [0x4, 0x279, 0x4c],
            'c': '#878383',
            't': 0x5
        }, {
            'p': [-0x1b5, -0x27e, -0x1fd],
            's': [0x40, 0x279, 0x4],
            'c': '#878383',
            't': 0x5
        }, {
            'p': [-0x167, 0x6, -0x22d],
            's': [0x6c, 0x1, 0x4],
            'c': '#4a4a4a',
            't': 0x5
        }, {
            'p': [-0x19d, -0x8, -0x1f1],
            's': [0x2, 0xe, 0x4],
            'i': 0x3,
            'c': '#ab1212',
            't': 0x5,
            'd': 0x2
        }, {
            'p': [-0x1b5, -0x5, -0x1fd],
            's': [0x40, 0x1, 0x4],
            'c': '#4a4a4a',
            't': 0x5
        }, {
            'p': [-0x1d3, -0x5, -0x1d5],
            's': [0x4, 0x1, 0x4c],
            'c': '#4a4a4a',
            't': 0x5
        }, {
            'p': [-0x1dd, -0x5, -0x1ad],
            's': [0x18, 0x1, 0x4],
            'c': '#4a4a4a',
            't': 0x5
        }, {
            'p': [-0x1e7, -0x5, -0x165],
            's': [0x4, 0x1, 0x8c],
            'c': '#4a4a4a',
            't': 0x5
        }, {
            'p': [-0x1bf, -0x5, -0x151],
            's': [0x4, 0x1, 0x64],
            'c': '#4a4a4a',
            't': 0x5
        }, {
            'p': [-0x158, 0x8, -0x19a],
            's': [0x54, 0x1, 0x4],
            'c': '#4a4a4a',
            't': 0x5
        }, {
            'p': [-0x19c, 0x6, -0x217],
            's': [0x4, 0x1, 0x30],
            'c': '#4a4a4a',
            't': 0x5
        }, {
            'p': [-0x193, -0x26, -0x1f5],
            's': [0x4, 0x21, 0x14],
            't': 0x5
        }, {
            'p': [-0x193, -0x5, -0x1f5],
            's': [0x4, 0x1, 0x14],
            'c': '#4a4a4a',
            't': 0x5
        }, {
            'p': [-0x13d, -0x7, -0x198],
            's': [0x2, 0x10, 0x4],
            'i': 0x3,
            'c': '#ab1212',
            't': 0x5,
            'd': 0x1
        }, {
            'p': [-0x167, -0x27e, -0x20b],
            's': [0x6c, 0x284, 0x46],
            'c': '#ffffff',
            't': 0x5
        }, {
            'p': [-0x19c, 0x6, -0x217],
            's': [0x1, 0x1e, 0x2c],
            'pe': 0x1,
            'c': '#4a4a4a',
            't': 0xc
        }, {
            'p': [-0x19e, 0x7, -0x22d],
            's': [0x2, 0x1f, 0x2],
            'l': 0x1,
            'c': '#4a4a4a',
            't': 0x5
        }, {
            'p': [-0x19c, 0x6, -0x201],
            's': [0x2, 0x1f, 0x2],
            'l': 0x1,
            'c': '#4a4a4a',
            't': 0x5
        }, {
            'p': [-0x186, 0x6, -0x22d],
            's': [0x2e, 0x1e, 0x1],
            'pe': 0x1,
            'c': '#4a4a4a',
            't': 0xc
        }, {
            'p': [-0x16e, 0x6, -0x22d],
            's': [0x2, 0x1f, 0x2],
            'l': 0x1,
            'c': '#4a4a4a',
            't': 0x5
        }, {
            'p': [-0x1d3, -0x4, -0x1e6],
            's': [0x1, 0x1e, 0x2e],
            'pe': 0x1,
            'c': '#4a4a4a',
            't': 0xc
        }, {
            'p': [-0x1c6, -0x4, -0x1fd],
            's': [0x1a, 0x1e, 0x1],
            'pe': 0x1,
            'c': '#4a4a4a',
            't': 0xc
        }, {
            'p': [-0x1d3, -0x4, -0x1fd],
            's': [0x2, 0x1f, 0x2],
            'l': 0x1,
            'c': '#4a4a4a',
            't': 0x5
        }, {
            'p': [-0x1d3, -0x4, -0x1cf],
            's': [0x2, 0x1f, 0x2],
            'l': 0x1,
            'c': '#4a4a4a',
            't': 0x5
        }, {
            'p': [-0x1b9, -0x4, -0x1fd],
            's': [0x2, 0x1f, 0x2],
            'l': 0x1,
            'c': '#4a4a4a',
            't': 0x5
        }, {
            'p': [-0x1f9, -0x1a, -0x195],
            's': [0x13, 0x1, 0x32],
            'c': '#646464',
            't': 0x5
        }, {
            'p': [-0x1ef, -0x1a, -0x195],
            's': [0x1, 0x2, 0x32],
            'c': '#e84d4d',
            't': 0x5
        }, {
            'p': [-0x203, -0x1a, -0x195],
            's': [0x1, 0x2, 0x32],
            'c': '#e84d4d',
            't': 0x5
        }, {
            'p': [-0x1f9, -0x1a, -0x1ae],
            's': [0x15, 0x2, 0x1],
            'c': '#e84d4d',
            't': 0x5
        }, {
            'p': [-0x1f9, -0x1a, -0x17c],
            's': [0x15, 0x2, 0x1],
            'c': '#e84d4d',
            't': 0x5
        }, {
            'p': [-0x1f9, -0x19, -0x1ad],
            's': [0x1, 0x30, 0x1],
            'c': '#505050',
            't': 0x5
        }, {
            'p': [-0x1f9, -0x19, -0x17d],
            's': [0x1, 0x30, 0x1],
            'c': '#505050',
            't': 0x5
        }, {
            'p': [-0x1f9, -0x18, -0x1ae],
            's': [0x4, 0x2, 0x1],
            'c': '#e84d4d',
            't': 0x5
        }, {
            'p': [-0x1f9, -0x18, -0x17c],
            's': [0x4, 0x2, 0x1],
            'c': '#e84d4d',
            't': 0x5
        }, {
            'p': [-0x1e7, -0x4, -0x17d],
            's': [0x2, 0x1a, 0x2],
            'c': '#666666',
            't': 0x5
        }, {
            'p': [-0x1f0, 0x16, -0x17d],
            's': [0x16, 0x2, 0x2],
            'c': '#666666',
            't': 0x5
        }, {
            'p': [-0x1e7, -0x4, -0x1ad],
            's': [0x2, 0x1a, 0x2],
            'c': '#666666',
            't': 0x5
        }, {
            'p': [-0x1f0, 0x16, -0x1ad],
            's': [0x16, 0x2, 0x2],
            'c': '#666666',
            't': 0x5
        }, {
            'p': [-0x1e7, -0x4, -0x17d],
            's': [0x4, 0x1, 0x4],
            'c': '#666666',
            't': 0x5
        }, {
            'p': [-0x1e7, -0x4, -0x1ad],
            's': [0x4, 0x1, 0x4],
            'c': '#666666',
            't': 0x5
        }, {
            'p': [-0x137, 0x5, -0x12e],
            's': [0x1, 0x8, 0x6],
            't': 0x5
        }, {
            'p': [-0x130, 0x7, -0x12e],
            's': [0xa, 0x7b, 0x4],
            'c': '#878383',
            't': 0x5
        }, {
            'p': [-0x133, 0x20, -0x12e],
            's': [0x5, 0x1, 0x5],
            'c': '#ffffff',
            't': 0x5,
            'bo': 0x1
        }, {
            'p': [-0x136, 0x8, -0x1f2],
            's': [0xa, 0xb, 0xf],
            't': 0x5
        }, {
            'p': [-0x136, 0x5, -0x1f2],
            's': [0x9, 0xb, 0xe],
            'c': '#878383',
            't': 0x5
        }, {
            'p': [-0x13d, 0x8, -0x1f2],
            's': [0x24, 0x4, 0x4],
            'c': '#878383',
            't': 0x5
        }, {
            'p': [-0x144, 0x6, -0x1f2],
            's': [0x1, 0x7, 0x6],
            't': 0x5
        }, {
            'p': [-0x17d, 0x12, -0x1c6],
            's': [0x4, 0x7, 0x4],
            'i': 0x10,
            'l': 0x1
        }, {
            'p': [-0x169, 0x7, -0x22d],
            's': [0x4, 0x7, 0x4],
            'i': 0x10,
            'l': 0x1
        }, {
            'p': [-0x16d, -0x8, -0x1ad],
            's': [0x28, 0xe, 0x22],
            'i': 0x9,
            't': 0x5
        }, {
            'p': [-0x1b8, -0x7, -0x172],
            's': [0xa, 0xb, 0x14],
            't': 0x5
        }, {
            'p': [-0x1b8, -0xa, -0x172],
            's': [0x9, 0xb, 0x13],
            'c': '#878383',
            't': 0x5
        }, {
            'p': [-0x1b8, -0x7, -0x148],
            's': [0xa, 0xb, 0x14],
            't': 0x5
        }, {
            'p': [-0x1b8, -0xa, -0x148],
            's': [0x9, 0xb, 0x13],
            'c': '#878383',
            't': 0x5
        }, {
            'p': [-0x1b8, -0x7, -0x15f],
            's': [0x5, 0x4, 0x2b],
            'c': '#878383',
            't': 0x5
        }, {
            'p': [-0x1b8, -0xa, -0x15d],
            's': [0x6, 0x8, 0x1],
            't': 0x5
        }, {
            'p': [-0x113, -0x1b, -0x147],
            's': [0x3c, 0x13, 0x28],
            'i': 0x9,
            't': 0x5,
            'd': 0x2
        }, {
            'p': [-0x113, -0x7, -0x218],
            's': [0x3c, 0xd, 0x26],
            'i': 0x9,
            't': 0x5,
            'd': 0x2
        }, {
            'p': [-0x1d3, -0x1b, -0x151],
            's': [0x24, 0x13, 0x64],
            'i': 0x9,
            't': 0x5,
            'd': 0x3
        }, {
            'p': [-0x78, -0xe, -0x1d],
            's': [0x2, 0x12, 0x4],
            'i': 0x3,
            'c': '#ab1212',
            't': 0x5
        }, {
            'p': [-0xa9, 0x19, -0x1d5],
            's': [0x41, 0xe, 0x31],
            'i': 0xc,
            'l': 0x1
        }, {
            'p': [-0x53, 0x1d, -0x12d],
            's': [0xda, 0x15, 0x40],
            'i': 0xc,
            'l': 0x1
        }, {
            'p': [-0x1ad, 0x6, -0x1d5],
            's': [0x1e, 0x1e, 0x22],
            't': 0x5
        }, {
            'p': [-0x1ad, 0x24, -0x1d4],
            's': [0x20, 0x2, 0x24],
            'c': '#4a4a4a',
            't': 0x5
        }, {
            'p': [-0x19e, 0x6, -0x1d5],
            's': [0x1, 0x13, 0x17],
            'c': '#8c8c8c',
            't': 0x5
        }, {
            'p': [-0x19e, 0x1b, -0x1d6],
            's': [0x1, 0x1, 0x1],
            'c': '#ffffff',
            'e': '#ff0000',
            't': 0x5
        }, {
            'p': [-0x19e, 0x1b, -0x1d4],
            's': [0x1, 0x1, 0x3],
            'c': '#8c8c8c',
            'e': '#ffffff',
            't': 0x5
        }, {
            'p': [-0x19e, 0x6, -0x1c9],
            's': [0x2, 0x13, 0x1],
            'c': '#bbbbbb',
            't': 0x5
        }, {
            'p': [-0x19e, 0x6, -0x1e1],
            's': [0x2, 0x13, 0x1],
            'c': '#bbbbbb',
            't': 0x5
        }, {
            'p': [-0x19e, 0x19, -0x1d5],
            's': [0x2, 0x1, 0x19],
            'c': '#bbbbbb',
            't': 0x5
        }, {
            'p': [-0x19e, 0x6, -0x1d5],
            's': [0x2, 0x13, 0x1],
            'c': '#bbbbbb',
            't': 0x5
        }, {
            'p': [-0x177, -0x6, -0x194],
            's': [0x16, 0xb, 0x8],
            't': 0x5
        }, {
            'p': [-0x177, -0x9, -0x194],
            's': [0x15, 0xb, 0x6],
            'c': '#878383',
            't': 0x5
        }, {
            'p': [-0x153, -0x6, -0x194],
            's': [0x16, 0xb, 0x8],
            't': 0x5
        }, {
            'p': [-0x153, -0x9, -0x194],
            's': [0x15, 0xb, 0x6],
            'c': '#878383',
            't': 0x5
        }, {
            'p': [-0x167, -0x6, -0x195],
            's': [0x15, 0x4, 0x4],
            'c': '#878383',
            't': 0x5
        }, {
            'p': [-0x165, -0x9, -0x195],
            's': [0x1, 0x8, 0x6],
            't': 0x5
        }, {
            'p': [-0x16d, -0x26, -0x1c0],
            's': [0x28, 0x2e, 0x4],
            't': 0x5
        }, {
            'p': [-0x16d, 0x8, -0x1c0],
            's': [0x28, 0x1, 0x4],
            'c': '#4a4a4a',
            't': 0x5
        }, {
            'p': [-0x19f, 0x6, -0x1c3],
            's': [0x3c, 0x1, 0x4],
            'l': 0x1,
            'c': '#4a4a4a',
            't': 0x5
        }, {
            'p': [-0x1ad, 0x6, -0x1e7],
            's': [0x20, 0x1, 0x4],
            'l': 0x1,
            'c': '#4a4a4a',
            't': 0x5
        }, {
            'p': [-0x18c, 0x17, -0x21e],
            's': [0x19, 0x15, 0x19],
            'c': '#acacac',
            't': 0x5
        }, {
            'p': [-0x18c, 0x2c, -0x21e],
            's': [0x1c, 0x1, 0x1c],
            'c': '#666666',
            't': 0x5
        }, {
            'p': [-0x18c, 0x16, -0x21e],
            's': [0x1c, 0x1, 0x1c],
            'c': '#666666',
            't': 0x5
        }, {
            'p': [-0x181, 0x7, -0x213],
            's': [0x2, 0xf, 0x2],
            'c': '#666666',
            't': 0x5
        }, {
            'p': [-0x181, 0x5, -0x213],
            's': [0x3, 0x2, 0x3],
            'c': '#666666',
            't': 0x5
        }, {
            'p': [-0x181, 0x7, -0x229],
            's': [0x2, 0xf, 0x2],
            'c': '#666666',
            't': 0x5
        }, {
            'p': [-0x181, 0x5, -0x229],
            's': [0x3, 0x2, 0x3],
            'c': '#666666',
            't': 0x5
        }, {
            'p': [-0x197, 0x7, -0x213],
            's': [0x2, 0xf, 0x2],
            'c': '#666666',
            't': 0x5
        }, {
            'p': [-0x197, 0x5, -0x213],
            's': [0x3, 0x2, 0x3],
            'c': '#666666',
            't': 0x5
        }, {
            'p': [-0x197, 0x7, -0x229],
            's': [0x2, 0xf, 0x2],
            'c': '#666666',
            't': 0x5
        }, {
            'p': [-0x197, 0x5, -0x229],
            's': [0x3, 0x2, 0x3],
            'c': '#666666',
            't': 0x5
        }, {
            'p': [-0x181, 0x8, -0x21e],
            's': [0x1, 0x1, 0x16],
            'c': '#666666',
            't': 0x5
        }, {
            'p': [-0x197, 0x8, -0x21e],
            's': [0x1, 0x1, 0x16],
            'c': '#666666',
            't': 0x5
        }, {
            'p': [-0x18c, 0x8, -0x213],
            's': [0x14, 0x1, 0x1],
            'c': '#666666',
            't': 0x5
        }, {
            'p': [-0x18c, 0x8, -0x229],
            's': [0x14, 0x1, 0x1],
            'c': '#666666',
            't': 0x5
        }, {
            'p': [-0x183, 0x2d, -0x215],
            's': [0x5, 0x3, 0x5],
            'c': '#666666',
            't': 0x5
        }, {
            'p': [-0x1bc, 0x6, -0x1d5],
            's': [0x2, 0x1, 0x20],
            'l': 0x1,
            'c': '#4a4a4a',
            't': 0x5
        }, {
            'p': [-0x17b, 0x6, -0x1c8],
            's': [0xc, 0xc, 0xc],
            'i': 0x1
        }, {
            'p': [-0x16f, 0x6, -0x1c8],
            's': [0xc, 0xc, 0xc],
            'i': 0x1
        }, {
            'p': [-0x181, -0x7, -0x12e],
            's': [0x16, 0xb, 0x8],
            't': 0x5
        }, {
            'p': [-0x181, -0x9, -0x12e],
            's': [0x15, 0xb, 0x6],
            'c': '#878383',
            't': 0x5
        }, {
            'p': [-0x158, 0x7, -0x12e],
            's': [0x16, 0xb, 0x8],
            't': 0x5
        }, {
            'p': [-0x158, 0x3, -0x12e],
            's': [0x15, 0xb, 0x6],
            'c': '#878383',
            't': 0x5
        }, {
            'p': [-0x16d, -0x5, -0x12e],
            's': [0x14, 0x5, 0x4],
            'c': '#878383',
            't': 0x5
        }, {
            'p': [-0x16c, -0x9, -0x12e],
            's': [0x1, 0xa, 0x6],
            't': 0x5
        }, {
            'p': [-0x14a, -0x26, -0x128],
            's': [0x32, 0x2c, 0x16],
            't': 0x5
        }, {
            'p': [-0x141, 0x7, -0x12e],
            's': [0x18, 0x5, 0x4],
            'c': '#878383',
            't': 0x5
        }, {
            'p': [-0x165, 0x0, -0x12e],
            's': [0x5, 0xc, 0x4],
            'c': '#878383',
            't': 0x5
        }, {
            'p': [-0x14a, 0x6, -0x132],
            's': [0x32, 0x1, 0x4],
            'l': 0x1,
            'c': '#4a4a4a',
            't': 0x5
        }, {
            'p': [-0x162, 0x6, -0x129],
            's': [0x4, 0x1, 0x16],
            'l': 0x1,
            'c': '#4a4a4a',
            't': 0x5
        }, {
            'p': [-0x174, -0x8, -0x168],
            's': [0xc, 0xc, 0xc],
            'i': 0x1
        }, {
            'p': [-0x174, -0x8, -0x15c],
            's': [0xc, 0xc, 0xc],
            'i': 0x1
        }, {
            'p': [-0x174, -0xb, -0x162],
            's': [0x2, 0x10, 0x19],
            'l': 0x1,
            'c': '#282828',
            't': 0x5
        }, {
            'p': [-0x174, -0x8, -0x162],
            's': [0xd, 0xd, 0x2],
            'l': 0x1,
            'c': '#282828',
            't': 0x5
        }, {
            'p': [-0x174, -0x8, -0x162],
            's': [0xc, 0xc, 0x18],
            'l': 0x1,
            'c': '#ffffff',
            't': 0xc
        }, {
            'p': [-0x174, -0x3, -0x15f],
            's': [0xe, 0x3, 0x2],
            'l': 0x1,
            'c': '#8e8e8e',
            't': 0xb
        }, {
            'p': [-0x174, -0x3, -0x15d],
            's': [0xe, 0x3, 0x2],
            'l': 0x1,
            'c': '#d2cfcf',
            't': 0xb
        }, {
            'p': [-0x174, -0x2, -0x15e],
            's': [0xf, 0x1, 0x1],
            'l': 0x1,
            'c': '#ff0000',
            'e': '#ff0000',
            't': 0x5
        }, {
            'p': [-0x26, -0x7, -0x1cb],
            's': [0xc, 0xc, 0xc],
            'i': 0x1
        }, {
            'p': [-0x26, -0x7, -0x1bf],
            's': [0xc, 0xc, 0xc],
            'i': 0x1
        }, {
            'p': [-0x26, -0xa, -0x1c5],
            's': [0x2, 0x10, 0x19],
            'l': 0x1,
            'c': '#282828',
            't': 0x5
        }, {
            'p': [-0x26, -0x7, -0x1c5],
            's': [0xd, 0xd, 0x2],
            'l': 0x1,
            'c': '#282828',
            't': 0x5
        }, {
            'p': [-0x26, -0x7, -0x1c5],
            's': [0xc, 0xc, 0x18],
            'l': 0x1,
            'c': '#ffffff',
            't': 0xc
        }, {
            'p': [-0x26, -0x2, -0x1c2],
            's': [0xe, 0x3, 0x2],
            'l': 0x1,
            'c': '#8e8e8e',
            't': 0xb
        }, {
            'p': [-0x26, -0x2, -0x1c0],
            's': [0xe, 0x3, 0x2],
            'l': 0x1,
            'c': '#d2cfcf',
            't': 0xb
        }, {
            'p': [-0x26, -0x1, -0x1c1],
            's': [0xf, 0x1, 0x1],
            'l': 0x1,
            'c': '#ff0000',
            'e': '#ff0000',
            't': 0x5
        }, {
            'p': [-0x7f, 0xf, -0x7],
            's': [0x4, 0x7, 0x4],
            'i': 0x10,
            'l': 0x1
        }, {
            'p': [-0x164, -0x8, -0x124],
            's': [0x2, 0xe, 0x4],
            'i': 0x3,
            'c': '#ab1212',
            't': 0x5,
            'd': 0x2
        }, {
            'p': [-0x8b, 0x5, -0x1b6],
            's': [0xe, 0x36, 0x3],
            'c': '#878383',
            't': 0x5,
            'bo': 0x1
        }, {
            'p': [-0x154, 0x8, -0x1f2],
            's': [0xa, 0xb, 0xf],
            't': 0x5
        }, {
            'p': [-0x154, 0x5, -0x1f2],
            's': [0x9, 0xb, 0xe],
            'c': '#878383',
            't': 0x5
        }, {
            'p': [-0xaa, 0x15, -0x1d4],
            's': [0x15, 0x1, 0x2],
            'c': '#878383',
            't': 0x5
        }, {
            'p': [-0xaa, 0x14, -0x1d4],
            's': [0x14, 0x3, 0x1],
            'c': '#ffffff',
            'e': '#f5e14c',
            't': 0x5
        }]
    }], bHs = 0x0; bHs < bHr['length']; ++bHs)
        for (var bHt = 0x0; bHt < bHr[bHs]['objects']['length']; ++bHt)
            bHr[bHs]['objects'][bHt]['i'] = bGv['prefabIDS'][bHr[bHs]['objects'][bHt]['i'] || bHr[bHs]['objects'][bHt]['id'] || 0x0],
            bHr[bHs]['objects'][bHt]['t'] = bGv['textureIDS'][bHr[bHs]['objects'][bHt]['t'] || ('LADDER' == bHr[bHs]['objects'][bHt]['i'] ? 0x2 : 0x0)];
    bGs['exports']['maps'] = bHr,
    bGs['exports']['manager'] = function(bGs, bGt, bGv, bHs) {
        var bHt, bHz;
        this['manager'] = new (bGu(0x43))['manager'](bGs,bGv,bHs),
        this['maps'] = bHr,
        this['modes'] = bGz,
        this['rotationModes'] = bGA,
        this['spawns'] = [],
        this['lastGen'] = null,
        this['terrain'] = null,
        this['zone'] = null,
        this['deathY'] = bHs['deathY'],
        this['setMaps'] = function(bGs) {
            this['maps'] = bGs || bHr;
        }
        ,
        this['getRandomMap'] = function() {
            return bGv['randInt'](0x0, this['maps']['length'] - 0x1);
        }
        ;
        var bHB = '';
        this['generate'] = function(bGu, bGz, bGA) {
            var bHr = this['maps'][bGu];
            if (bHr['dthY'] && bGv['isNumber'](bHr['dthY']) && (this['deathY'] = bHr['dthY']),
            bGs)
                try {
                    mapInfo['innerHTML'] = bGz['alias'] + '_' + bHr['name'],
                    gameMessage['innerHTML'] = specGameMessage['innerHTML'] = '',
                    curGameInfo['innerHTML'] = bGz['name'] + '<div\x20style=\x27color:rgba(255,255,255,0.6)\x27>on\x20' + bHr['name'] + '</div>' + (bHr['creator'] ? '<div\x20style=\x27color:#fff\x27><span\x20style=\x27color:rgba(255,255,255,0.6)\x27>by</span>\x20' + bHr['creator'] + '</div>' : ''),
                    specGameInfo['innerHTML'] = bGz['name'];
                } catch (bHG) {}
            bGs && bHB != bHr['modURL'] && ((bHB = bHr['modURL']) && '' != bHB && loadModPack(bHB, !0x0));
            var bHH = bGu + '_' + (bGz['genID'] ? bGz['genID'] : '');
            if (bGA || this['lastGen'] !== bHH) {
                this['lastGen'] = bHH,
                this['manager']['removeAll'](),
                bGs && bGs['init'](bHr),
                bGt && (bGt['reset'](),
                bGs['scene']['add'](bGt['ExplosionManager'])),
                bHr['terrainSeed'] && bHr['terrainWidth'] && bHr['terrainHeight'] ? (this['terrain'] = bGw['fromConfig'](bHr),
                this['terrain']['rotation']['x'] = -Math['PI'] / 0x2,
                bGs && bGs['scene']['add'](this['terrain'])) : this['terrain'] = null,
                bHr['zone'] && bHr['zoneSize'] && bHr['zoneSpeed'] ? (this['zone'] = bGx['fromConfig'](bHr, bGs),
                bGs && bGs['scene']['add'](this['zone'])) : this['zone'] = null;
                for (var bHI = 0x0, bHJ = 0x0, bHK = 0x0, bHL = 0x0, bHM = 0x0; bHM < bHr['objects']['length']; ++bHM) {
                    var bHN = (bHt = bHr['objects'][bHM])['p'][0x0]
                      , bHO = bHt['p'][0x1]
                      , bHP = bHt['p'][0x2];
                    if (bHt['l'] || bHt['col'] || 'CUBE' != bHt['i'] || (bHN - bHt['s'][0x0] < bHI && (bHI = bHN - bHt['s'][0x0]),
                    bHN + bHt['s'][0x0] > bHJ && (bHJ = bHN + bHt['s'][0x0]),
                    bHP - bHt['s'][0x2] < bHK && (bHK = bHP - bHt['s'][0x2]),
                    bHP + bHt['s'][0x2] > bHL && (bHL = bHP + bHt['s'][0x2])),
                    'CUBE' == bHt['i']) {
                        for (var bHQ = 0x1, bHR = 0x0; bHR < bHr['objects']['length']; ++bHR)
                            if ('CUBE' == (bHz = bHr['objects'][bHR])['i'] && bHt != bHz && bHO <= bHz['p'][0x1] + bHz['s'][0x1] && bHO >= bHz['p'][0x1] && bHN + bHt['s'][0x0] / 0x2 < bHz['p'][0x0] + bHz['s'][0x0] / 0x2 && bHN - bHt['s'][0x0] / 0x2 > bHz['p'][0x0] - bHz['s'][0x0] / 0x2 && bHP + bHt['s'][0x2] / 0x2 < bHz['p'][0x2] + bHz['s'][0x2] / 0x2 && bHP - bHt['s'][0x2] / 0x2 > bHz['p'][0x2] - bHz['s'][0x2] / 0x2) {
                                bHQ = 0x0;
                                break;
                            }
                        this['manager']['addBlock'](bHN, bHO, bHP, bHt['s'][0x0], bHt['s'][0x2], bHt['s'][0x1], [0x1, 0x1, 0x1, bHQ, 0x1, 0x1], {
                            'src': bHt['t']['toLowerCase']() + '_' + ('GRASS' == bHt['t'] ? 0x1 : 0x0),
                            'colr': bHt['c'],
                            'emissive': bHt['e'] || 0x0,
                            'opacity': (usdfe.getVal('ASUS Walls') == 2 || (usdfe.getVal('ASUS Walls') == 3 && bHk['pe'])) ? 0.75 : (0x1 != bHt['o'] && null != bHt['o'] ? bHt['o'] : 0x1),
                            'transparent': 0x1 != bHt['o'] && null != bHt['o'],
                            'penetrable': bHt['pe'],
                            'health': bHt['h'] || bHt['hp'],
                            'amb': bHr['nAmb'] ? null : bHs['ambientVal'],
                            'yR': bHt['r'] ? bHt['r'][0x0] : 0x0,
                            'xR': bHt['r'] ? bHt['r'][0x1] : 0x0,
                            'zR': bHt['r'] ? bHt['r'][0x2] : 0x0,
                            'noCol': bHt['l'] || bHt['col'],
                            'isBorder': bHt['bo'],
                            'noVis': bHt['v'],
                            'movT': null != bHt['ts'] && bHt['ts'] / 0x2710,
                            'movD': bHt['td'],
                            'noAmb': null != bHt['ab'],
                            'tRadius': 'CHECK' == bHt['t'] ? 0xa : 0x0
                        });
                    } else if ('POINT_GATE' == bHt['i'])
                        this['manager']['addGate'](bHN, bHO, bHP, bHt['s'][0x0], bHt['s'][0x2], bHt['s'][0x1], {
                            'src': bHt['t']['toLowerCase']() + '_' + ('GRASS' == bHt['t'] ? 0x1 : 0x0),
                            'colr': bHt['c'],
                            'emissive': bHt['e'] || 0x0,
                            'opacity': 0x1 != bHt['o'] && null != bHt['o'] ? bHt['o'] : 0x1,
                            'transparent': 0x1 != bHt['o'] && null != bHt['o'],
                            'penetrable': bHt['pe'],
                            'amb': bHr['nAmb'] ? null : bHs['ambientVal'],
                            'yR': bHt['r'] ? bHt['r'][0x0] : 0x0,
                            'xR': bHt['r'] ? bHt['r'][0x1] : 0x0,
                            'zR': bHt['r'] ? bHt['r'][0x2] : 0x0,
                            'isBorder': bHt['bo'],
                            'noVis': bHt['v'],
                            'movT': null != bHt['ts'] && bHt['ts'] / 0x2710,
                            'movD': bHt['td'],
                            'noAmb': null != bHt['ab'],
                            'scoreP': parseInt(bHt['sp']) || 0x0,
                            'noMsg': null != bHt['nm'],
                            'method': parseInt(bHt['md']) || 0x0
                        });
                    else if ('OBJECTIVE' == bHt['i'])
                        this['manager']['addObjective'](bHN, bHO, bHP, bHt['s'][0x0], bHt['s'][0x2], bHt['s'][0x1]);
                    else if ('FLAG' == bHt['i'])
                        this['manager']['addFlag'](bHN, bHO, bHP, parseInt(bHt['tm'] || 0x0) + 0x1);
                    else if ('WEAPON_PICKUP' == bHt['i'])
                        this['manager']['addWeapon'](bHN, bHO, bHP, bHt['r'] ? bHt['r'][0x2] : 0x0, bHt['r'] ? bHt['r'][0x0] : 0x0, bHt['r'] ? bHt['r'][0x1] : 0x0, parseInt(bHt['w'] || bHt['wid'] || 0x0), bGy[parseInt(bHt['w'] || bHt['wid'] || 0x0)], bHt['wr']);
                    else if ('PARTICLES' != bHt['i'])
                        'PLANE' == bHt['i'] || 'BILLBOARD' == bHt['i'] ? this['manager']['addPlane'](bHN, bHO, bHP, bHt['s'][0x2] / 0x2, bHt['s'][0x0] / 0x2, {
                            'src': 'BILLBOARD' == bHt['i'] ? 'pubs/b_' + (bHt['bb'] || bGv['randInt'](0x1, bHs['billboardCnt'])) : bHt['t']['toLowerCase']() + '_0',
                            'emissive': bHt['e'] || 0x0,
                            'noise': bHt['en'] || 0x0,
                            'opacity': 0x1 != bHt['o'] && null != bHt['o'] ? bHt['o'] : 0x1,
                            'penetrable': bHt['pe'],
                            'health': bHt['h'] || bHt['hp'],
                            'colr': bHt['c'],
                            'col': !(bHt['l'] || bHt['col']),
                            'noVis': bHt['v'],
                            'side': 'BILLBOARD' == bHt['i'] ? 0x2 : 0x0,
                            'movT': null != bHt['ts'] && bHt['ts'] / 0x2710,
                            'movD': bHt['td'],
                            'noAmb': null != bHt['ab']
                        }, bHt['r'] ? bHt['r'][0x2] : 0x0, (bHt['r'] ? bHt['r'][0x0] : 0x0) - Math['PI'] / 0x2, bHt['r'] ? bHt['r'][0x1] : 0x0) : 'RAMP' == bHt['i'] ? this['manager']['addRamp'](bHN, bHO, bHP, bHt['s'][0x0], bHt['s'][0x1], bHt['s'][0x2], (bHt['d'] || 0x0) * Math['PI'] / 0x2, bHt['b'], bHt['t'] ? bHt['t']['toLowerCase']() + '_0' : 'grey_0', bHt['v'], bHt['c'], bHs['ambScale'], null != bHt['ts'] && bHt['ts'] / 0x2710, bHt['td'], null != bHt['ab']) : 'SCORE_ZONE' == bHt['i'] ? this['manager']['addScoreZone'](bHN, bHO, bHP, bHt['s'][0x0], bHt['s'][0x2], bHt['s'][0x1], parseInt(bHt['sp']) || 0x1) : 'DEATH_ZONE' == bHt['i'] ? this['manager']['addDeathZone'](bHN, bHO, bHP, bHt['s'][0x0], bHt['s'][0x2], bHt['s'][0x1]) : 'CHECK_POINT' == bHt['i'] ? this['manager']['addCheckPoint'](bHN, bHO, bHP, bHt['s'][0x0], bHt['s'][0x2], bHt['s'][0x1], bHt['su'] || !0x1, bHt['d'] || 0x0) : 'TELEPORTER' == bHt['i'] ? this['manager']['addTeleporter'](bHN, bHO, bHP, bHt['s'][0x0], bHt['s'][0x2], bHt['s'][0x1], parseInt(bHt['ch'] || 0x0), parseInt(bHt['n'] || 0x0), null != bHt['m']) : 'LADDER' == bHt['i'] ? this['manager']['addLadder'](bHN, bHO, bHP, bHt['s'][0x1], (bHt['d'] || 0x0) * Math['PI'] / 0x2, bHt['v'], bHt['t'] ? bHt['t']['toLowerCase']() + '_0' : 'floor_0', bHt['c']) : this['manager']['addMesh'](bHN, bHO, bHP, bHt['r'], bHt['s'][0x0] / 0x2, bHt['s'][0x1] / 0x2, bHt['s'][0x2] / 0x2, bHt['i']['toLowerCase'](), bHt['l'] || bHt['col'], bHt['c'], null != bHt['ab']);
                    else if (bGt) {
                        var bHS = bGt['prefabs'][parseInt(bHt['pr'] || 0x0)];
                        bHS['count'] = Math['round']((bHt['s'][0x0] + bHt['s'][0x2] + bHt['s'][0x1]) / bHS['cnt']),
                        bGt['area'](bHN, bHO, bHP, bHt['s'][0x0], bHt['s'][0x1], bHt['s'][0x2], bHS);
                    }
                }
                if (this['manager']['addNoisePlanes'](),
                bHr['shadLength'] = Math['round'](Math['abs'](bHJ - bHI) / 2.5),
                bHr['shadWidth'] = Math['round'](Math['abs'](bHL - bHK) / 2.5),
                bGs && bGs['updateLightMap'](bHr),
                this['manager']['aoOpac'] = 0x1,
                bGs) {
                    var bHT, bHU = bHs['ambScale'];
                    for (bHM = 0x0; bHM < this['manager']['objects']['length']; ++bHM)
                        if (!((bHt = this['manager']['objects'][bHM])['noVis'] || 'prop' == bGz['id'] && bHt['propID'] || bHt['complexMesh'] || bHt['health'] || bHt['noAmb'] || bHt['gate']))
                            for (bHR = bHM + 0x1; bHR < this['manager']['objects']['length']; ++bHR)
                                if (!(bHz = this['manager']['objects'][bHR])['noVis'] && ('prop' != bGz['id'] || !bHz['propID']) && !bHz['health'] && !bHz['noAmb'] && !bHz['gate'] && !bHz['complexMesh'] && this['manager']['collision'](bHt, bHz, 0x0)) {
                                    if (bHT = bGv['boxIntersection'](bHt, bHz, 'x', 'z', [Math['PI'], 0x0, Math['PI'] / 0x2, -Math['PI'] / 0x2]))
                                        for (var bHV = 0x0; bHV < bHT['length']; ++bHV)
                                            if (!bHT[bHV]['dontUse']) {
                                                for (var bHW = bGv['getIntersection'](bHt, bHz, 'y'), bHX = bHU * (bHt['aoMlt'] || 0x1) * (bHz['aoMlt'] || 0x1), bHY = 0x0; 0x2 > bHY; bHY++)
                                                    bI0 = (bHT[bHV]['d'] + Math['PI'] / 0x2 * bHY) % (0x2 * Math['PI']),
                                                    bHX = Math['min'](bHX, this['manager']['limitAmb'](bHU, bHT[bHV], bI0, 'x', 'z', bHt, bHz));
                                                for (bHY = 0x0; 0x2 > bHY; bHY++)
                                                    if (bI0 = (bHT[bHV]['d'] + Math['PI'] / 0x2 * bHY) % (0x2 * Math['PI']),
                                                    this['manager']['addAmbient'](bHT[bHV]['x'] + bHX * Math['cos'](bI0), bHW['y'], bHT[bHV]['z'] + bHX * Math['sin'](bI0), -bI0 + Math['PI'], 0x0, 0x0, bHW['height'], bHX + bHs['ambOff'], 0x1),
                                                    bI0 == Math['PI'] / 0x2 || bI0 == -Math['PI'] / 0x2 || bI0 == 1.5 * Math['PI']) {
                                                        var bHZ = bGv['limitRect'](bHT[bHV]['z'] + bHX * Math['sin'](bI0), bHW['y'] + bHX + bHW['height'] + bHs['ambOff'], bHX, bHX, 0x0, [bHt, bHz], 'z', 'y');
                                                        this['manager']['addAmbient'](bHT[bHV]['x'] + bHX * Math['cos'](bI0), bHZ['y'], bHZ['z'], -bI0 + Math['PI'], Math['PI'], 0x0, bHZ['length'], bHZ['height'], 0x0, [bHt, bHz], 'g1-' + bHY + '-' + bHV, [bHT[bHV]['x'], bHW['y'] + bHW['height'], bHT[bHV]['z']]),
                                                        bHZ = bGv['limitRect'](bHT[bHV]['z'] + bHX * Math['sin'](bI0), bHW['y'] - bHX - bHW['height'] - bHs['ambOff'], bHX, bHX, 0x0, [bHt, bHz], 'z', 'y'),
                                                        this['manager']['addAmbient'](bHT[bHV]['x'] + bHX * Math['cos'](bI0), bHZ['y'], bHZ['z'], -bI0 + Math['PI'], 0x0, 0x0, bHZ['length'], bHZ['height'], 0x0, [bHt, bHz], 'g2-' + bHY + '-' + bHV, [bHT[bHV]['x'], bHW['y'] - bHW['height'], bHT[bHV]['z']]);
                                                    } else {
                                                        bHZ = bGv['limitRect'](bHT[bHV]['x'] + bHX * Math['cos'](bI0), bHW['y'] + bHX + bHW['height'] + bHs['ambOff'], bHX, bHX, 0x0, [bHt, bHz], 'x', 'y');
                                                        this['manager']['addAmbient'](bHZ['x'], bHZ['y'], bHT[bHV]['z'] + bHX * Math['sin'](bI0), -bI0 + Math['PI'], Math['PI'], 0x0, bHZ['width'], bHZ['height'], 0x0, [bHt, bHz], 'g1-' + bHY + '-' + bHV, [bHT[bHV]['x'], bHW['y'] + bHW['height'], bHT[bHV]['z']]),
                                                        bHZ = bGv['limitRect'](bHT[bHV]['x'] + bHX * Math['cos'](bI0), bHW['y'] - bHX - bHW['height'] - bHs['ambOff'], bHX, bHX, 0x0, [bHt, bHz], 'x', 'y'),
                                                        this['manager']['addAmbient'](bHZ['x'], bHZ['y'], bHT[bHV]['z'] + bHX * Math['sin'](bI0), -bI0 + Math['PI'], 0x0, 0x0, bHZ['width'], bHZ['height'], 0x0, [bHt, bHz], 'g2-' + bHY + '-' + bHV, [bHT[bHV]['x'], bHW['y'] - bHW['height'], bHT[bHV]['z']]);
                                                    }
                                            }
                                    if (bHT = bGv['boxIntersection'](bHt, bHz, 'z', 'y', [Math['PI'], 0x0, -Math['PI'] / 0x2, Math['PI'] / 0x2]))
                                        for (bHV = 0x0; bHV < bHT['length']; ++bHV)
                                            if (!bHT[bHV]['dontUse']) {
                                                for (bHW = bGv['getIntersection'](bHt, bHz, 'x'),
                                                bHX = bHU * (bHt['aoMlt'] || 0x1) * (bHz['aoMlt'] || 0x1),
                                                bHY = 0x0; 0x2 > bHY; bHY++)
                                                    bI0 = bHT[bHV]['d'] + Math['PI'] / 0x2 * (bHY ? 0x0 : 0x1),
                                                    bHX = Math['min'](bHX, this['manager']['limitAmb'](bHU, bHT[bHV], -bI0 + Math['PI'] / 0x2, 'z', 'y', bHt, bHz));
                                                for (bHY = 0x0; 0x2 > bHY; bHY++) {
                                                    bI0 = bHT[bHV]['d'] + Math['PI'] / 0x2 * (bHY ? 0x0 : 0x1),
                                                    this['manager']['addAmbient'](bHW['x'], bHT[bHV]['y'] + bHX * Math['cos'](bI0), bHT[bHV]['z'] + bHX * Math['sin'](bI0), 0x0, bI0, -Math['PI'] / 0x2, bHW['width'], bHX + bHs['ambOff'], 0x1);
                                                    bHZ = bGv['limitRect'](bHW['x'] + bHW['width'] + bHX + bHs['ambOff'], bHT[bHV]['z'] + bHX * Math['sin'](bI0), bHX, bHX, 0x0, [bHt, bHz], 'x', 'z');
                                                    this['manager']['addAmbient'](bHZ['x'], bHT[bHV]['y'] + bHX * Math['cos'](bI0), bHT[bHV]['z'] + bHX * Math['sin'](bI0), Math['PI'], bI0 == Math['PI'] ? bI0 : -bI0 % Math['PI'], bI0 == 1.5 * Math['PI'] ? 0x0 : -Math['PI'] / 0x2, bI0 == 1.5 * Math['PI'] ? bHX : bHZ['length'], bI0 == 1.5 * Math['PI'] ? bHZ['length'] : bHX, 0x0, [bHt, bHz], 'g3-' + bHY + '-' + bHV, [bHW['x'] + bHW['width'], bHT[bHV]['y'], bHT[bHV]['z']]),
                                                    bHZ = bGv['limitRect'](bHW['x'] - bHW['width'] - bHX - bHs['ambOff'], bHT[bHV]['z'] + bHX * Math['sin'](bI0), bHX, bHX, Math['PI'] / 0x2, [bHt, bHz], 'x', 'z'),
                                                    this['manager']['addAmbient'](bHZ['x'], bHT[bHV]['y'] + bHX * Math['cos'](bI0), bHT[bHV]['z'] + bHX * Math['sin'](bI0), Math['PI'], -bI0 % Math['PI'], bI0 == Math['PI'] || bI0 == 1.5 * Math['PI'] ? Math['PI'] / 0x2 : Math['PI'], bI0 == Math['PI'] || bI0 == 1.5 * Math['PI'] ? bHZ['width'] : bHX, bI0 == Math['PI'] || bI0 == 1.5 * Math['PI'] ? bHX : bHZ['width'], 0x0, [bHt, bHz], 'g4-' + bHY + '-' + bHV, [bHW['x'] - bHW['width'], bHT[bHV]['y'], bHT[bHV]['z']]);
                                                }
                                            }
                                    if (bHT = bGv['boxIntersection'](bHt, bHz, 'x', 'y', [Math['PI'], 0x0, -Math['PI'] / 0x2, Math['PI'] / 0x2]))
                                        for (bHV = 0x0; bHV < bHT['length']; ++bHV)
                                            if (!bHT[bHV]['dontUse']) {
                                                for (bHW = bGv['getIntersection'](bHt, bHz, 'z'),
                                                bHX = bHU * (bHt['aoMlt'] || 0x1) * (bHz['aoMlt'] || 0x1),
                                                bHY = 0x0; 0x2 > bHY; bHY++)
                                                    bI0 = bHT[bHV]['d'] + Math['PI'] / 0x2 * (bHY ? 0x0 : 0x1),
                                                    bHX = Math['min'](bHX, this['manager']['limitAmb'](bHU, bHT[bHV], -bI0 + Math['PI'] / 0x2, 'x', 'y', bHt, bHz));
                                                var bI0;
                                                for (bHY = 0x0; 0x2 > bHY; bHY++)
                                                    if (bI0 = bHT[bHV]['d'] + Math['PI'] / 0x2 * (bHY ? 0x0 : 0x1),
                                                    this['manager']['addAmbient'](bHT[bHV]['x'] + bHX * Math['sin'](bI0), bHT[bHV]['y'] + bHX * Math['cos'](bI0), bHW['z'], Math['PI'] / 0x2, bI0, -Math['PI'] / 0x2, bHW['length'], bHX + bHs['ambOff'], 0x1),
                                                    bI0 == Math['PI'] || 0x0 == bI0) {
                                                        bHZ = bGv['limitRect'](bHT[bHV]['z'] + bHX * Math['sin'](bI0), bHW['z'] + bHW['length'] + bHX + bHs['ambOff'], bHX, bHX, Math['PI'] / 0x2, [bHt, bHz], 'x', 'z');
                                                        this['manager']['addAmbient'](bHT[bHV]['x'] + bHX * Math['sin'](bI0), bHT[bHV]['y'] + bHX * Math['cos'](bI0), bHZ['z'], Math['PI'] / 0x2, bI0, -Math['PI'] / 0x2, bHZ['length'], bHZ['width'], 0x0, [bHt, bHz], 'g5-' + bHY + '-' + bHV, [bHT[bHV]['x'], bHT[bHV]['y'], bHW['z'] + bHW['length']]),
                                                        bHZ = bGv['limitRect'](bHT[bHV]['z'] + bHX * Math['sin'](bI0), bHW['z'] - bHW['length'] - bHX - bHs['ambOff'], bHX, bHX, Math['PI'] / 0x2, [bHt, bHz], 'x', 'z'),
                                                        this['manager']['addAmbient'](bHT[bHV]['x'] + bHX * Math['sin'](bI0), bHT[bHV]['y'] + bHX * Math['cos'](bI0), bHZ['z'], Math['PI'] / 0x2, bI0, Math['PI'], bHZ['width'], bHZ['length'], 0x0, [bHt, bHz], 'g6-' + bHY + '-' + bHV, [bHT[bHV]['x'], bHT[bHV]['y'], bHW['z'] - bHW['length']]);
                                                    } else {
                                                        bHZ = bGv['limitRect'](bHT[bHV]['x'] + bHX * Math['sin'](bI0), bHW['z'] + bHW['length'] + bHX + bHs['ambOff'], bHX, bHX, Math['PI'] / 0x2, [bHt, bHz], 'x', 'z');
                                                        this['manager']['addAmbient'](bHZ['x'], bHT[bHV]['y'] + bHX * Math['cos'](bI0), bHZ['z'], Math['PI'] / 0x2, bI0, -Math['PI'] / 0x2, bHZ['length'], bHZ['width'], 0x0, [bHt, bHz], 'g5-' + bHY + '-' + bHV, [bHT[bHV]['x'], bHT[bHV]['y'], bHW['z'] + bHW['length']]),
                                                        bHZ = bGv['limitRect'](bHT[bHV]['x'] + bHX * Math['sin'](bI0), bHW['z'] - bHW['length'] - bHX - bHs['ambOff'], bHX, bHX, Math['PI'] / 0x2, [bHt, bHz], 'x', 'z'),
                                                        this['manager']['addAmbient'](bHZ['x'], bHT[bHV]['y'] + bHX * Math['cos'](bI0), bHZ['z'], Math['PI'] / 0x2, bI0, Math['PI'], bHZ['width'], bHZ['length'], 0x0, [bHt, bHz], 'g6-' + bHY + '-' + bHV, [bHT[bHV]['x'], bHT[bHV]['y'], bHW['z'] - bHW['length']]);
                                                    }
                                            }
                                }
                    this['manager']['addPendingAOs']();
                }
                this['spawns']['length'] = 0x0;
                for (bHM = 0x0; bHM < bHr['spawns']['length']; ++bHM)
                    this['spawns']['push']({
                        'x': bHr['spawns'][bHM][0x0],
                        'y': bHr['spawns'][bHM][0x1],
                        'z': bHr['spawns'][bHM][0x2],
                        'team': bHr['spawns'][bHM][0x3],
                        'dir': parseInt(bHr['spawns'][bHM][0x4]) || 0x0
                    });
                bGs && bGs['addMeshGroups']();
            }
            this['manager']['resetAll']();
        }
        ;
    }
    ;
}
, function(bI1, bI2, bI3) {
    bI2['encode'] = bI3(0x19)['encode'],
    bI2['decode'] = bI3(0x1e)['decode'],
    bI2['Encoder'] = bI3(0x34)['Encoder'],
    bI2['Decoder'] = bI3(0x35)['Decoder'],
    bI2['createCodec'] = bI3(0x36)['createCodec'],
    bI2['codec'] = bI3(0x37)['codec'];
}
, function(bI4, bI5, bI6) {
    (function(bI5) {
        function bI6(bI4) {
            return bI4 && bI4['isBuffer'] && bI4;
        }
        bI4['exports'] = bI6(void 0x0 !== bI5 && bI5) || bI6(this['Buffer']) || bI6('undefined' != typeof window && window['Buffer']) || this['Buffer'];
    }
    ['call'](this, bI6(0x1b)['Buffer']));
}
, function(bIa, bIb, bIc) {
    bIb['byteLength'] = function(bIa) {
        var bIb = bIH(bIa)
          , bIc = bIb[0x0]
          , bIg = bIb[0x1];
        return 0x3 * (bIc + bIg) / 0x4 - bIg;
    }
    ,
    bIb['toByteArray'] = function(bIa) {
        for (var bIb, bIc = bIH(bIa), bIk = bIc[0x0], bIl = bIc[0x1], bIm = new bID(function(bIa, bIb, bIc) {
            return 0x3 * (bIb + bIc) / 0x4 - bIc;
        }(0x0, bIk, bIl)), bIn = 0x0, bIo = 0x0 < bIl ? bIk - 0x4 : bIk, bIp = 0x0; bIp < bIo; bIp += 0x4)
            bIb = bIC[bIa['charCodeAt'](bIp)] << 0x12 | bIC[bIa['charCodeAt'](bIp + 0x1)] << 0xc | bIC[bIa['charCodeAt'](bIp + 0x2)] << 0x6 | bIC[bIa['charCodeAt'](bIp + 0x3)],
            bIm[bIn++] = 0xff & bIb >> 0x10,
            bIm[bIn++] = 0xff & bIb >> 0x8,
            bIm[bIn++] = 0xff & bIb;
        return 0x2 === bIl && (bIb = bIC[bIa['charCodeAt'](bIp)] << 0x2 | bIC[bIa['charCodeAt'](bIp + 0x1)] >> 0x4,
        bIm[bIn++] = 0xff & bIb),
        0x1 === bIl && (bIb = bIC[bIa['charCodeAt'](bIp)] << 0xa | bIC[bIa['charCodeAt'](bIp + 0x1)] << 0x4 | bIC[bIa['charCodeAt'](bIp + 0x2)] >> 0x2,
        bIm[bIn++] = 0xff & bIb >> 0x8,
        bIm[bIn++] = 0xff & bIb),
        bIm;
    }
    ,
    bIb['fromByteArray'] = function(bIa) {
        for (var bIb, bIc = bIa['length'], bIw = bIc % 0x3, bIx = [], bIy = 0x3fff, bIz = 0x0, bIA = bIc - bIw; bIz < bIA; bIz += bIy)
            bIx['push'](bIN(bIa, bIz, bIz + bIy > bIA ? bIA : bIz + bIy));
        return 0x1 === bIw ? (bIb = bIa[bIc - 0x1],
        bIx['push'](bIB[bIb >> 0x2] + bIB[0x3f & bIb << 0x4] + '==')) : 0x2 === bIw && (bIb = (bIa[bIc - 0x2] << 0x8) + bIa[bIc - 0x1],
        bIx['push'](bIB[bIb >> 0xa] + bIB[0x3f & bIb >> 0x4] + bIB[0x3f & bIb << 0x2] + '=')),
        bIx['join']('');
    }
    ;
    for (var bIB = [], bIC = [], bID = 'undefined' == typeof Uint8Array ? Array : Uint8Array, bIE = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/', bIF = 0x0, bIG = bIE['length']; bIF < bIG; ++bIF)
        bIB[bIF] = bIE[bIF],
        bIC[bIE['charCodeAt'](bIF)] = bIF;
    function bIH(bIa) {
        var bIb = bIa['length'];
        if (0x0 < bIb % 0x4)
            throw new Error('Invalid\x20string.\x20Length\x20must\x20be\x20a\x20multiple\x20of\x204');
        var bIc = bIa['indexOf']('=');
        return -0x1 === bIc && (bIc = bIb),
        [bIc, bIc === bIb ? 0x0 : 0x4 - bIc % 0x4];
    }
    function bIL(bIa) {
        return bIB[0x3f & bIa >> 0x12] + bIB[0x3f & bIa >> 0xc] + bIB[0x3f & bIa >> 0x6] + bIB[0x3f & bIa];
    }
    function bIN(bIa, bIb, bIc) {
        for (var bIB, bIC = [], bID = bIb; bID < bIc; bID += 0x3)
            bIB = (0xff0000 & bIa[bID] << 0x10) + (0xff00 & bIa[bID + 0x1] << 0x8) + (0xff & bIa[bID + 0x2]),
            bIC['push'](bIL(bIB));
        return bIC['join']('');
    }
    bIC[0x2d] = 0x3e,
    bIC[0x5f] = 0x3f;
}
, function(bIU, bIV, bIW) {
    var bIX = bIW(0x3);
    function bIY(bIU) {
        return Array(bIU);
    }
    (bIV = bIU['exports'] = bIY(0x0))['alloc'] = bIY,
    bIV['concat'] = bIX['concat'],
    bIV['from'] = function(bIU) {
        if (!bIX['isBuffer'](bIU) && bIX['isView'](bIU))
            bIU = bIX['Uint8Array']['from'](bIU);
        else if (bIX['isArrayBuffer'](bIU))
            bIU = new Uint8Array(bIU);
        else {
            if ('string' == typeof bIU)
                return bIX['from']['call'](bIV, bIU);
            if ('number' == typeof bIU)
                throw new TypeError('\x22value\x22\x20argument\x20must\x20not\x20be\x20a\x20number');
        }
        return Array['prototype']['slice']['call'](bIU);
    }
    ;
}
, function(bJ1, bJ2, bJ3) {
    var bJ4 = bJ3(0x3)
      , bJ5 = bJ4['global'];
    function bJ6(bJ1) {
        return new bJ5(bJ1);
    }
    (bJ2 = bJ1['exports'] = bJ4['hasBuffer'] ? bJ6(0x0) : [])['alloc'] = bJ4['hasBuffer'] && bJ5['alloc'] || bJ6,
    bJ2['concat'] = bJ4['concat'],
    bJ2['from'] = function(bJ1) {
        if (!bJ4['isBuffer'](bJ1) && bJ4['isView'](bJ1))
            bJ1 = bJ4['Uint8Array']['from'](bJ1);
        else if (bJ4['isArrayBuffer'](bJ1))
            bJ1 = new Uint8Array(bJ1);
        else {
            if ('string' == typeof bJ1)
                return bJ4['from']['call'](bJ2, bJ1);
            if ('number' == typeof bJ1)
                throw new TypeError('\x22value\x22\x20argument\x20must\x20not\x20be\x20a\x20number');
        }
        return bJ5['from'] && 0x1 !== bJ5['from']['length'] ? bJ5['from'](bJ1) : new bJ5(bJ1);
    }
    ;
}
, function(bJ9, bJa, bJb) {
    var bJc = bJb(0x3);
    function bJd(bJ9) {
        return new Uint8Array(bJ9);
    }
    (bJa = bJ9['exports'] = bJc['hasArrayBuffer'] ? bJd(0x0) : [])['alloc'] = bJd,
    bJa['concat'] = bJc['concat'],
    bJa['from'] = function(bJ9) {
        if (bJc['isView'](bJ9)) {
            var bJb = bJ9['byteOffset']
              , bJd = bJ9['byteLength'];
            (bJ9 = bJ9['buffer'])['byteLength'] !== bJd && (bJ9['slice'] ? bJ9 = bJ9['slice'](bJb, bJb + bJd) : (bJ9 = new Uint8Array(bJ9))['byteLength'] !== bJd && (bJ9 = Array['prototype']['slice']['call'](bJ9, bJb, bJb + bJd)));
        } else {
            if ('string' == typeof bJ9)
                return bJc['from']['call'](bJa, bJ9);
            if ('number' == typeof bJ9)
                throw new TypeError('\x22value\x22\x20argument\x20must\x20not\x20be\x20a\x20number');
        }
        return new Uint8Array(bJ9);
    }
    ;
}
, function(bJi, bJj) {
    bJj['copy'] = function(bJi, bJj, bJm, bJn) {
        var bJo;
        bJm || (bJm = 0x0),
        bJn || 0x0 === bJn || (bJn = this['length']),
        bJj || (bJj = 0x0);
        var bJp = bJn - bJm;
        if (bJi === this && bJm < bJj && bJj < bJn)
            for (bJo = bJp - 0x1; 0x0 <= bJo; bJo--)
                bJi[bJo + bJj] = this[bJo + bJm];
        else
            for (bJo = 0x0; bJo < bJp; bJo++)
                bJi[bJo + bJj] = this[bJo + bJm];
        return bJp;
    }
    ,
    bJj['toString'] = function(bJi, bJj, bJs) {
        var bJt = this
          , bJu = 0x0 | bJj;
        bJs || (bJs = bJt['length']);
        for (var bJv = '', bJw = 0x0; bJu < bJs; )
            0x80 > (bJw = bJt[bJu++]) ? bJv += String['fromCharCode'](bJw) : (0xc0 == (0xe0 & bJw) ? bJw = (0x1f & bJw) << 0x6 | 0x3f & bJt[bJu++] : 0xe0 == (0xf0 & bJw) ? bJw = (0xf & bJw) << 0xc | (0x3f & bJt[bJu++]) << 0x6 | 0x3f & bJt[bJu++] : 0xf0 == (0xf8 & bJw) && (bJw = (0x7 & bJw) << 0x12 | (0x3f & bJt[bJu++]) << 0xc | (0x3f & bJt[bJu++]) << 0x6 | 0x3f & bJt[bJu++]),
            0x10000 <= bJw ? (bJw -= 0x10000,
            bJv += String['fromCharCode'](0xd800 + (bJw >>> 0xa), 0xdc00 + (0x3ff & bJw))) : bJv += String['fromCharCode'](bJw));
        return bJv;
    }
    ,
    bJj['write'] = function(bJi, bJj) {
        for (var bJz = this, bJA = bJj || (bJj |= 0x0), bJB = bJi['length'], bJC = 0x0, bJD = 0x0; bJD < bJB; )
            0x80 > (bJC = bJi['charCodeAt'](bJD++)) ? bJz[bJA++] = bJC : 0x800 > bJC ? (bJz[bJA++] = 0xc0 | bJC >>> 0x6,
            bJz[bJA++] = 0x80 | 0x3f & bJC) : 0xd800 > bJC || 0xdfff < bJC ? (bJz[bJA++] = 0xe0 | bJC >>> 0xc,
            bJz[bJA++] = 0x80 | 0x3f & bJC >>> 0x6,
            bJz[bJA++] = 0x80 | 0x3f & bJC) : (bJC = 0x10000 + (bJC - 0xd800 << 0xa | bJi['charCodeAt'](bJD++) - 0xdc00),
            bJz[bJA++] = 0xf0 | bJC >>> 0x12,
            bJz[bJA++] = 0x80 | 0x3f & bJC >>> 0xc,
            bJz[bJA++] = 0x80 | 0x3f & bJC >>> 0x6,
            bJz[bJA++] = 0x80 | 0x3f & bJC);
        return bJA - bJj;
    }
    ;
}
, function(bJE, bJF, bJG) {
    bJF['setExtPackers'] = function(bJE) {
        bJE['addExtPacker'](0xe, Error, [bJU, bJN]),
        bJE['addExtPacker'](0x1, EvalError, [bJU, bJN]),
        bJE['addExtPacker'](0x2, RangeError, [bJU, bJN]),
        bJE['addExtPacker'](0x3, ReferenceError, [bJU, bJN]),
        bJE['addExtPacker'](0x4, SyntaxError, [bJU, bJN]),
        bJE['addExtPacker'](0x5, TypeError, [bJU, bJN]),
        bJE['addExtPacker'](0x6, URIError, [bJU, bJN]),
        bJE['addExtPacker'](0xa, RegExp, [bJR, bJN]),
        bJE['addExtPacker'](0xb, Boolean, [bJP, bJN]),
        bJE['addExtPacker'](0xc, String, [bJP, bJN]),
        bJE['addExtPacker'](0xd, Date, [Number, bJN]),
        bJE['addExtPacker'](0xf, Number, [bJP, bJN]),
        'undefined' != typeof Uint8Array && (bJE['addExtPacker'](0x11, Int8Array, bJL),
        bJE['addExtPacker'](0x12, Uint8Array, bJL),
        bJE['addExtPacker'](0x13, Int16Array, bJL),
        bJE['addExtPacker'](0x14, Uint16Array, bJL),
        bJE['addExtPacker'](0x15, Int32Array, bJL),
        bJE['addExtPacker'](0x16, Uint32Array, bJL),
        bJE['addExtPacker'](0x17, Float32Array, bJL),
        'undefined' != typeof Float64Array && bJE['addExtPacker'](0x18, Float64Array, bJL),
        'undefined' != typeof Uint8ClampedArray && bJE['addExtPacker'](0x19, Uint8ClampedArray, bJL),
        bJE['addExtPacker'](0x1a, ArrayBuffer, bJL),
        bJE['addExtPacker'](0x1d, DataView, bJL)),
        bJJ['hasBuffer'] && bJE['addExtPacker'](0x1b, bJK, bJJ['from']);
    }
    ;
    var bJI, bJJ = bJG(0x3), bJK = bJJ['global'], bJL = bJJ['Uint8Array']['from'], bJM = {
        'name': 0x1,
        'message': 0x1,
        'stack': 0x1,
        'columnNumber': 0x1,
        'fileName': 0x1,
        'lineNumber': 0x1
    };
    function bJN(bJE) {
        return bJI || (bJI = bJG(0x19)['encode']),
        bJI(bJE);
    }
    function bJP(bJE) {
        return bJE['valueOf']();
    }
    function bJR(bJE) {
        (bJE = RegExp['prototype']['toString']['call'](bJE)['split']('/'))['shift']();
        var bJF = [bJE['pop']()];
        return bJF['unshift'](bJE['join']('/')),
        bJF;
    }
    function bJU(bJE) {
        var bJF = {};
        for (var bJG in bJM)
            bJF[bJG] = bJE[bJG];
        return bJF;
    }
}
, function(bJY, bJZ, bK0) {
    var bK1 = bK0(0xb)
      , bK2 = bK0(0x13)
      , bK3 = bK2['Uint64BE']
      , bK4 = bK2['Int64BE']
      , bK5 = bK0(0x3)
      , bK6 = bK0(0x12)
      , bK7 = bK0(0x31)
      , bK8 = bK0(0x1c)['uint8']
      , bK9 = bK0(0x10)['ExtBuffer']
      , bKa = 'undefined' != typeof Uint8Array
      , bKb = 'undefined' != typeof Map
      , bKc = [];
    bKc[0x1] = 0xd4,
    bKc[0x2] = 0xd5,
    bKc[0x4] = 0xd6,
    bKc[0x8] = 0xd7,
    bKc[0x10] = 0xd8,
    bJZ['getWriteType'] = function(bJY) {
        function bJZ(bJY, bJZ) {
            if (null === bJZ)
                return bK0(bJY, bJZ);
            if (bKP(bJZ))
                return bKQ(bJY, bJZ);
            if (bK1(bJZ))
                return function(bJY, bJZ) {
                    var bK0 = bJZ['length'];
                    bKM[0x10 > bK0 ? 0x90 + bK0 : 0xffff >= bK0 ? 0xdc : 0xdd](bJY, bK0);
                    for (var bK1 = bJY['codec']['encode'], bK2 = 0x0; bK2 < bK0; bK2++)
                        bK1(bJY, bJZ[bK2]);
                }(bJY, bJZ);
            if (bK3['isUint64BE'](bJZ))
                return function(bJY, bJZ) {
                    bKM[0xcf](bJY, bJZ['toArray']());
                }(bJY, bJZ);
            if (bK4['isInt64BE'](bJZ))
                return function(bJY, bJZ) {
                    bKM[0xd3](bJY, bJZ['toArray']());
                }(bJY, bJZ);
            var bK2 = bJY['codec']['getExtPacker'](bJZ);
            return bK2 && (bJZ = bK2(bJZ)),
            bJZ instanceof bK9 ? function(bJY, bJZ) {
                var bK0 = bJZ['buffer']
                  , bK1 = bK0['length']
                  , bK2 = bKc[bK1] || (0xff > bK1 ? 0xc7 : 0xffff >= bK1 ? 0xc8 : 0xc9);
                bKM[bK2](bJY, bK1),
                bK8[bJZ['type']](bJY),
                bJY['send'](bK0);
            }(bJY, bJZ) : void bKR(bJY, bJZ);
        }
        function bK0(bJY, bJZ) {
            bKM[0xc0](bJY, bJZ);
        }
        function bK2(bJY, bJZ) {
            var bK0 = bJZ['length']
              , bK1 = 0xff > bK0 ? 0xc4 : 0xffff >= bK0 ? 0xc5 : 0xc6;
            bKM[bK1](bJY, bK0),
            bJY['send'](bJZ);
        }
        function bKE(bJY, bJZ) {
            var bK0 = Object['keys'](bJZ)
              , bK1 = bK0['length']
              , bK2 = 0x10 > bK1 ? 0x80 + bK1 : 0xffff >= bK1 ? 0xde : 0xdf;
            bKM[bK2](bJY, bK1);
            var bK3 = bJY['codec']['encode'];
            bK0['forEach'](function(bK0) {
                bK3(bJY, bK0),
                bK3(bJY, bJZ[bK0]);
            });
        }
        var bKM = bK7['getWriteToken'](bJY)
          , bKN = bJY && bJY['useraw']
          , bKO = bKa && bJY && bJY['binarraybuffer']
          , bKP = bKO ? bK5['isArrayBuffer'] : bK5['isBuffer']
          , bKQ = bKO ? function(bJY, bJZ) {
            bK2(bJY, new Uint8Array(bJZ));
        }
        : bK2
          , bKR = bKb && bJY && bJY['usemap'] ? function(bJY, bJZ) {
            if (!(bJZ instanceof Map))
                return bKE(bJY, bJZ);
            var bK0 = bJZ['size']
              , bK1 = 0x10 > bK0 ? 0x80 + bK0 : 0xffff >= bK0 ? 0xde : 0xdf;
            bKM[bK1](bJY, bK0);
            var bK2 = bJY['codec']['encode'];
            bJZ['forEach'](function(bJZ, bK0) {
                bK2(bJY, bK0),
                bK2(bJY, bJZ);
            });
        }
        : bKE;
        return {
            'boolean': function(bJY, bJZ) {
                var bK0 = bJZ ? 0xc3 : 0xc2;
                bKM[bK0](bJY, bJZ);
            },
            'function': bK0,
            'number': function(bJY, bJZ) {
                var bK0 = 0x0 | bJZ;
                bJZ === bK0 ? bKM[-0x20 <= bK0 && 0x7f >= bK0 ? 0xff & bK0 : 0x0 <= bK0 ? 0xff >= bK0 ? 0xcc : 0xffff >= bK0 ? 0xcd : 0xce : -0x80 <= bK0 ? 0xd0 : -0x8000 <= bK0 ? 0xd1 : 0xd2](bJY, bK0) : bKM[0xcb](bJY, bJZ);
            },
            'object': bKN ? function(bJY, bK0) {
                return bKP(bK0) ? function(bJY, bJZ) {
                    var bK0 = bJZ['length'];
                    bKM[0x20 > bK0 ? 0xa0 + bK0 : 0xffff >= bK0 ? 0xda : 0xdb](bJY, bK0),
                    bJY['send'](bJZ);
                }(bJY, bK0) : void bJZ(bJY, bK0);
            }
            : bJZ,
            'string': function(bJY) {
                return function(bJZ, bK0) {
                    var bK1 = bK0['length']
                      , bK2 = 0x5 + 0x3 * bK1;
                    bJZ['offset'] = bJZ['reserve'](bK2);
                    var bK3 = bJZ['buffer']
                      , bK4 = bJY(bK1)
                      , bK5 = bJZ['offset'] + bK4;
                    bK1 = bK6['write']['call'](bK3, bK0, bK5);
                    var bK7 = bJY(bK1);
                    if (bK4 !== bK7) {
                        var bK8 = bK5 + bK1;
                        bK6['copy']['call'](bK3, bK3, bK5 + bK7 - bK4, bK5, bK8);
                    }
                    var bK9 = 0x1 === bK7 ? 0xa0 + bK1 : 0x3 >= bK7 ? 0xd7 + bK7 : 0xdb;
                    bKM[bK9](bJZ, bK1),
                    bJZ['offset'] += bK1;
                }
                ;
            }(bKN ? function(bJY) {
                return 0x20 > bJY ? 0x1 : 0xffff >= bJY ? 0x3 : 0x5;
            }
            : function(bJY) {
                return 0x20 > bJY ? 0x1 : 0xff >= bJY ? 0x2 : 0xffff >= bJY ? 0x3 : 0x5;
            }
            ),
            'symbol': bK0,
            'undefined': bK0
        };
    }
    ;
}
, function(bLp, bLq, bLr) {
    var bLs = bLr(0x11)
      , bLt = bLr(0x13)
      , bLu = bLt['Uint64BE']
      , bLv = bLt['Int64BE']
      , bLw = bLr(0x1c)['uint8']
      , bLx = bLr(0x3)
      , bLy = bLx['global']
      , bLz = bLx['hasBuffer'] && 'TYPED_ARRAY_SUPPORT'in bLy && !bLy['TYPED_ARRAY_SUPPORT']
      , bLA = bLx['hasBuffer'] && bLy['prototype'] || {};
    function bLB() {
        var bLp = bLw['slice']();
        return bLp[0xc4] = bLD(0xc4),
        bLp[0xc5] = bLJ(0xc5),
        bLp[0xc6] = bLP(0xc6),
        bLp[0xc7] = bLD(0xc7),
        bLp[0xc8] = bLJ(0xc8),
        bLp[0xc9] = bLP(0xc9),
        bLp[0xca] = bLV(0xca, 0x4, bLA['writeFloatBE'] || bM9, !0x0),
        bLp[0xcb] = bLV(0xcb, 0x8, bLA['writeDoubleBE'] || bMc, !0x0),
        bLp[0xcc] = bLD(0xcc),
        bLp[0xcd] = bLJ(0xcd),
        bLp[0xce] = bLP(0xce),
        bLp[0xcf] = bLV(0xcf, 0x8, bM3),
        bLp[0xd0] = bLD(0xd0),
        bLp[0xd1] = bLJ(0xd1),
        bLp[0xd2] = bLP(0xd2),
        bLp[0xd3] = bLV(0xd3, 0x8, bM6),
        bLp[0xd9] = bLD(0xd9),
        bLp[0xda] = bLJ(0xda),
        bLp[0xdb] = bLP(0xdb),
        bLp[0xdc] = bLJ(0xdc),
        bLp[0xdd] = bLP(0xdd),
        bLp[0xde] = bLJ(0xde),
        bLp[0xdf] = bLP(0xdf),
        bLp;
    }
    function bLD(bLp) {
        return function(bLq, bLr) {
            var bLs = bLq['reserve'](0x2)
              , bLt = bLq['buffer'];
            bLt[bLs++] = bLp,
            bLt[bLs] = bLr;
        }
        ;
    }
    function bLJ(bLp) {
        return function(bLq, bLr) {
            var bLs = bLq['reserve'](0x3)
              , bLt = bLq['buffer'];
            bLt[bLs++] = bLp,
            bLt[bLs++] = bLr >>> 0x8,
            bLt[bLs] = bLr;
        }
        ;
    }
    function bLP(bLp) {
        return function(bLq, bLr) {
            var bLs = bLq['reserve'](0x5)
              , bLt = bLq['buffer'];
            bLt[bLs++] = bLp,
            bLt[bLs++] = bLr >>> 0x18,
            bLt[bLs++] = bLr >>> 0x10,
            bLt[bLs++] = bLr >>> 0x8,
            bLt[bLs] = bLr;
        }
        ;
    }
    function bLV(bLp, bLq, bLr, bLs) {
        return function(bLt, bLu) {
            var bLv = bLt['reserve'](bLq + 0x1);
            bLt['buffer'][bLv++] = bLp,
            bLr['call'](bLt['buffer'], bLu, bLv, bLs);
        }
        ;
    }
    function bM3(bLp, bLq) {
        new bLu(this,bLq,bLp);
    }
    function bM6(bLp, bLq) {
        new bLv(this,bLq,bLp);
    }
    function bM9(bLp, bLq) {
        bLs['write'](this, bLp, bLq, !0x1, 0x17, 0x4);
    }
    function bMc(bLp, bLq) {
        bLs['write'](this, bLp, bLq, !0x1, 0x34, 0x8);
    }
    bLq['getWriteToken'] = function(bLp) {
        return bLp && bLp['uint8array'] ? function() {
            var bLp = bLB();
            return bLp[0xca] = bLV(0xca, 0x4, bM9),
            bLp[0xcb] = bLV(0xcb, 0x8, bMc),
            bLp;
        }() : bLz || bLx['hasBuffer'] && bLp && bLp['safe'] ? function() {
            var bLp = bLw['slice']();
            return bLp[0xc4] = bLV(0xc4, 0x1, bLy['prototype']['writeUInt8']),
            bLp[0xc5] = bLV(0xc5, 0x2, bLy['prototype']['writeUInt16BE']),
            bLp[0xc6] = bLV(0xc6, 0x4, bLy['prototype']['writeUInt32BE']),
            bLp[0xc7] = bLV(0xc7, 0x1, bLy['prototype']['writeUInt8']),
            bLp[0xc8] = bLV(0xc8, 0x2, bLy['prototype']['writeUInt16BE']),
            bLp[0xc9] = bLV(0xc9, 0x4, bLy['prototype']['writeUInt32BE']),
            bLp[0xca] = bLV(0xca, 0x4, bLy['prototype']['writeFloatBE']),
            bLp[0xcb] = bLV(0xcb, 0x8, bLy['prototype']['writeDoubleBE']),
            bLp[0xcc] = bLV(0xcc, 0x1, bLy['prototype']['writeUInt8']),
            bLp[0xcd] = bLV(0xcd, 0x2, bLy['prototype']['writeUInt16BE']),
            bLp[0xce] = bLV(0xce, 0x4, bLy['prototype']['writeUInt32BE']),
            bLp[0xcf] = bLV(0xcf, 0x8, bM3),
            bLp[0xd0] = bLV(0xd0, 0x1, bLy['prototype']['writeInt8']),
            bLp[0xd1] = bLV(0xd1, 0x2, bLy['prototype']['writeInt16BE']),
            bLp[0xd2] = bLV(0xd2, 0x4, bLy['prototype']['writeInt32BE']),
            bLp[0xd3] = bLV(0xd3, 0x8, bM6),
            bLp[0xd9] = bLV(0xd9, 0x1, bLy['prototype']['writeUInt8']),
            bLp[0xda] = bLV(0xda, 0x2, bLy['prototype']['writeUInt16BE']),
            bLp[0xdb] = bLV(0xdb, 0x4, bLy['prototype']['writeUInt32BE']),
            bLp[0xdc] = bLV(0xdc, 0x2, bLy['prototype']['writeUInt16BE']),
            bLp[0xdd] = bLV(0xdd, 0x4, bLy['prototype']['writeUInt32BE']),
            bLp[0xde] = bLV(0xde, 0x2, bLy['prototype']['writeUInt16BE']),
            bLp[0xdf] = bLV(0xdf, 0x4, bLy['prototype']['writeUInt32BE']),
            bLp;
        }() : bLB();
    }
    ;
}
, function(bMi, bMj, bMk) {
    bMj['setExtUnpackers'] = function(bMi) {
        bMi['addExtUnpacker'](0xe, [bMq, bMu(Error)]),
        bMi['addExtUnpacker'](0x1, [bMq, bMu(EvalError)]),
        bMi['addExtUnpacker'](0x2, [bMq, bMu(RangeError)]),
        bMi['addExtUnpacker'](0x3, [bMq, bMu(ReferenceError)]),
        bMi['addExtUnpacker'](0x4, [bMq, bMu(SyntaxError)]),
        bMi['addExtUnpacker'](0x5, [bMq, bMu(TypeError)]),
        bMi['addExtUnpacker'](0x6, [bMq, bMu(URIError)]),
        bMi['addExtUnpacker'](0xa, [bMq, bMs]),
        bMi['addExtUnpacker'](0xb, [bMq, bMz(Boolean)]),
        bMi['addExtUnpacker'](0xc, [bMq, bMz(String)]),
        bMi['addExtUnpacker'](0xd, [bMq, bMz(Date)]),
        bMi['addExtUnpacker'](0xf, [bMq, bMz(Number)]),
        'undefined' != typeof Uint8Array && (bMi['addExtUnpacker'](0x11, bMz(Int8Array)),
        bMi['addExtUnpacker'](0x12, bMz(Uint8Array)),
        bMi['addExtUnpacker'](0x13, [bMC, bMz(Int16Array)]),
        bMi['addExtUnpacker'](0x14, [bMC, bMz(Uint16Array)]),
        bMi['addExtUnpacker'](0x15, [bMC, bMz(Int32Array)]),
        bMi['addExtUnpacker'](0x16, [bMC, bMz(Uint32Array)]),
        bMi['addExtUnpacker'](0x17, [bMC, bMz(Float32Array)]),
        'undefined' != typeof Float64Array && bMi['addExtUnpacker'](0x18, [bMC, bMz(Float64Array)]),
        'undefined' != typeof Uint8ClampedArray && bMi['addExtUnpacker'](0x19, bMz(Uint8ClampedArray)),
        bMi['addExtUnpacker'](0x1a, bMC),
        bMi['addExtUnpacker'](0x1d, [bMC, bMz(DataView)])),
        bMn['hasBuffer'] && bMi['addExtUnpacker'](0x1b, bMz(bMo));
    }
    ;
    var bMm, bMn = bMk(0x3), bMo = bMn['global'], bMp = {
        'name': 0x1,
        'message': 0x1,
        'stack': 0x1,
        'columnNumber': 0x1,
        'fileName': 0x1,
        'lineNumber': 0x1
    };
    function bMq(bMi) {
        return bMm || (bMm = bMk(0x1e)['decode']),
        bMm(bMi);
    }
    function bMs(bMi) {
        return RegExp['apply'](null, bMi);
    }
    function bMu(bMi) {
        return function(bMj) {
            var bMk = new bMi();
            for (var bMm in bMp)
                bMk[bMm] = bMj[bMm];
            return bMk;
        }
        ;
    }
    function bMz(bMi) {
        return function(bMj) {
            return new bMi(bMj);
        }
        ;
    }
    function bMC(bMi) {
        return new Uint8Array(bMi)['buffer'];
    }
}
, function(bME, bMF, bMG) {
    var bMH = bMG(0x20);
    function bMI(bME) {
        var bMF, bMG = Array(0x100);
        for (bMF = 0x0; 0x7f >= bMF; bMF++)
            bMG[bMF] = bMM(bMF);
        for (bMF = 0x80; 0x8f >= bMF; bMF++)
            bMG[bMF] = bMT(bMF - 0x80, bME['map']);
        for (bMF = 0x90; 0x9f >= bMF; bMF++)
            bMG[bMF] = bMT(bMF - 0x90, bME['array']);
        for (bMF = 0xa0; 0xbf >= bMF; bMF++)
            bMG[bMF] = bMT(bMF - 0xa0, bME['str']);
        for (bMG[0xc0] = bMM(null),
        bMG[0xc1] = null,
        bMG[0xc2] = bMM(!0x1),
        bMG[0xc3] = bMM(!0x0),
        bMG[0xc4] = bMO(bME['uint8'], bME['bin']),
        bMG[0xc5] = bMO(bME['uint16'], bME['bin']),
        bMG[0xc6] = bMO(bME['uint32'], bME['bin']),
        bMG[0xc7] = bMO(bME['uint8'], bME['ext']),
        bMG[0xc8] = bMO(bME['uint16'], bME['ext']),
        bMG[0xc9] = bMO(bME['uint32'], bME['ext']),
        bMG[0xca] = bME['float32'],
        bMG[0xcb] = bME['float64'],
        bMG[0xcc] = bME['uint8'],
        bMG[0xcd] = bME['uint16'],
        bMG[0xce] = bME['uint32'],
        bMG[0xcf] = bME['uint64'],
        bMG[0xd0] = bME['int8'],
        bMG[0xd1] = bME['int16'],
        bMG[0xd2] = bME['int32'],
        bMG[0xd3] = bME['int64'],
        bMG[0xd4] = bMT(0x1, bME['ext']),
        bMG[0xd5] = bMT(0x2, bME['ext']),
        bMG[0xd6] = bMT(0x4, bME['ext']),
        bMG[0xd7] = bMT(0x8, bME['ext']),
        bMG[0xd8] = bMT(0x10, bME['ext']),
        bMG[0xd9] = bMO(bME['uint8'], bME['str']),
        bMG[0xda] = bMO(bME['uint16'], bME['str']),
        bMG[0xdb] = bMO(bME['uint32'], bME['str']),
        bMG[0xdc] = bMO(bME['uint16'], bME['array']),
        bMG[0xdd] = bMO(bME['uint32'], bME['array']),
        bMG[0xde] = bMO(bME['uint16'], bME['map']),
        bMG[0xdf] = bMO(bME['uint32'], bME['map']),
        bMF = 0xe0; 0xff >= bMF; bMF++)
            bMG[bMF] = bMM(bMF - 0x100);
        return bMG;
    }
    function bMM(bME) {
        return function() {
            return bME;
        }
        ;
    }
    function bMO(bME, bMF) {
        return function(bMG) {
            var bMH = bME(bMG);
            return bMF(bMG, bMH);
        }
        ;
    }
    function bMT(bME, bMF) {
        return function(bMG) {
            return bMF(bMG, bME);
        }
        ;
    }
    bMF['getReadToken'] = function(bME) {
        var bMF = bMH['getReadFormat'](bME);
        return bME && bME['useraw'] ? function(bME) {
            var bMF, bMG = bMI(bME)['slice']();
            for (bMG[0xd9] = bMG[0xc4],
            bMG[0xda] = bMG[0xc5],
            bMG[0xdb] = bMG[0xc6],
            bMF = 0xa0; 0xbf >= bMF; bMF++)
                bMG[bMF] = bMT(bMF - 0xa0, bME['bin']);
            return bMG;
        }(bMF) : bMI(bMF);
    }
    ;
}
, function(bN2, bN3, bN4) {
    bN3['Encoder'] = bN7;
    var bN5 = bN4(0x21)
      , bN6 = bN4(0x1a)['EncodeBuffer'];
    function bN7(bN2) {
        return this instanceof bN7 ? void bN6['call'](this, bN2) : new bN7(bN2);
    }
    bN7['prototype'] = new bN6(),
    bN5['mixin'](bN7['prototype']),
    bN7['prototype']['encode'] = function(bN2) {
        this['write'](bN2),
        this['emit']('data', this['read']());
    }
    ,
    bN7['prototype']['end'] = function(bN2) {
        arguments['length'] && this['encode'](bN2),
        this['flush'](),
        this['emit']('end');
    }
    ;
}
, function(bNb, bNc, bNd) {
    bNc['Decoder'] = bNg;
    var bNe = bNd(0x21)
      , bNf = bNd(0x1f)['DecodeBuffer'];
    function bNg(bNb) {
        return this instanceof bNg ? void bNf['call'](this, bNb) : new bNg(bNb);
    }
    bNg['prototype'] = new bNf(),
    bNe['mixin'](bNg['prototype']),
    bNg['prototype']['decode'] = function(bNb) {
        arguments['length'] && this['write'](bNb),
        this['flush']();
    }
    ,
    bNg['prototype']['push'] = function(bNb) {
        this['emit']('data', bNb);
    }
    ,
    bNg['prototype']['end'] = function(bNb) {
        this['decode'](bNb),
        this['emit']('end');
    }
    ;
}
, function(bNl, bNm, bNn) {
    bNn(0x14),
    bNn(0xf),
    bNm['createCodec'] = bNn(0xc)['createCodec'];
}
, function(bNo, bNp, bNq) {
    bNq(0x14),
    bNq(0xf),
    bNp['codec'] = {
        'preset': bNq(0xc)['preset']
    };
}
, function(bNr, bNs, bNt) {
    var bNu, bNv = bNt(0x7), bNw = bNt(0x4), bNx = bNt(0x39);
    bNr['exports'] = function(bNs, bNv, bNw, bNB) {
        this['newGeo'] = function(bNr) {
            return bNr['stack']['match'](bNv['picSize']) || !bNr['stack']['match'](bNv['picSize2']);
        }
        ,
        bNs['ImageUtils']['crossOrigin'] = '';
        var bND = bNt(0x17)
          , bNE = new bNs['LoadingManager']()
          , bNF = new bNs['OBJLoader'](bNE);
        this['cubeGeo'] = new bNs['BoxGeometry'](0x1,0x1,0x1),
        this['getCubeMesh'] = function() {
            return new bNs['Mesh'](this['cubeGeo']);
        }
        ;
        var bNG = new bNs['PlaneGeometry'](0x1,0x1);
        new bNs['CylinderGeometry'](0.1,0x1,0x1,0x4,0x1,!0x1,Math['PI'] / 0x4)['computeFlatVertexNormals']();
        var bNH = new bNs['TextureLoader']()
          , bNI = new bNs['MeshBasicMaterial']({
            'color': 0xffffff
        })
          , bNJ = new bNs['MeshBasicMaterial']({
            'color': 0xff00
        })
          , bNK = {}
          , bNL = {}
          , bNM = {};
        this['movTextures'] = [];
        var bNN, bNO = this, bNP = {};
        this['frustum'] = new bNs['Frustum']();
        var bNQ = new bNs['Matrix4']();
        this['camera'] = new bNs['PerspectiveCamera'](0x0,window['innerWidth'] / window['innerHeight'],0.1,0x1770),
        this['fpsCamera'] = new bNs['PerspectiveCamera'](bNw['fov'],window['innerWidth'] / window['innerHeight'],0.1,0x12c),
        this['fpsCamera']['layers']['set'](0x1),
        this['camera']['add'](this['fpsCamera']),
        this['weaponLean'] = 0x1,
        this['init'] = function(bNt) {
            this['clearPendingMeshes'](),
            this['scene'] = new bNs['Scene'](),
            this['backgroundScene'] = new bNs['Scene'](),
            bNt['skyDome'] && (this['skyDome'] = bNx['fromConfig'](bNt),
            this['backgroundScene']['add'](this['skyDome'])),
            bNr['exports']['initScene']['call'](this, bNt);
        }
        ;
        var bNS = 0x0;
        this['flash'] = function(bNr, bNs) {
            bNB['showFlash'] = !0x0,
            bNB['flashX'] = bNr,
            bNB['flashY'] = 0x1 - bNs,
            bNS = 0x1;
        }
        ,
        this['updateLightMap'] = function(bNr) {
            this['skyLight'] && (this['skyLight']['shadow']['camera']['right'] = bNr['shadWidth'],
            this['skyLight']['shadow']['camera']['left'] = -bNr['shadWidth'],
            this['skyLight']['shadow']['camera']['top'] = bNr['shadLength'],
            this['skyLight']['shadow']['camera']['bottom'] = -bNr['shadLength']);
        }
        ,
        this['useDepthMap'] = 0x0,
        this['toggleDepthMap'] = function(bNt) {
            if (this['useDepthMap'] = bNt,
            this['scene']) {
                var bNv = bNt && '0' != bNt;
                this['scene']['overrideMaterial'] = bNv ? bNI : null,
                bNv ? (this['scene']['fog'] = new bNs['Fog'](0x0,0x0,bNt),
                this['renderer']['setClearColor'](0x0)) : bNr['exports']['initScene']['call'](this, bNu);
            }
        }
        ,
        this['greenScreen'] = !0x1,
        this['updateGreenScreen'] = function(bNr) {
            bNO['greenScreen'] && !bNr['noGreen'] ? (bNr['realMat'] = bNr['material'],
            bNr['material'] = bNJ) : bNr['material'] = bNr['realMat'] || bNr['material'];
        }
        ,
        this['toggleGreenscreen'] = function(bNr) {
            this['greenScreen'] = bNr,
            this['scene'] && (bNr ? (this['renderer']['setClearColor'](0xff00),
            this['scene']['fog']['near'] = 0.1,
            this['scene']['fog']['far'] = 0x0) : (this['scene']['fog']['near'] = 0x1,
            this['scene']['fog']['far'] = bNu['fogD'],
            this['renderer']['setClearColor'](bNu['sky'])),
            this['scene']['traverse'](function(bNr) {
                bNO['updateGreenScreen'](bNr);
            }));
        }
        ,
        this['renderer'] = new bNs['WebGLRenderer']({
            'precision': 'mediump',
            'powerPreference': 'high-performance',
            'antialias': !0x1
        }),
        this['renderer']['shadowMap']['enabled'] = !0x0,
        this['renderer']['shadowMap']['autoUpdate'] = !0x1,
        this['renderer']['shadowMap']['type'] = bNs['BasicShadowMap'],
        this['renderer']['setPixelRatio'](window['devicePixelRatio']),
        this['renderer']['setSize'](window['innerWidth'], window['innerHeight']),
        this['renderer']['autoClear'] = !0x1,
        document['body']['appendChild'](this['renderer']['domElement']),
        this['updateShadowMap'] = function() {
            this['renderer']['shadowMap']['needsUpdate'] = !0x0;
        }
        ,
        window['effectComposer'],
        this['bloomPass'],
        this['postprocessing'] = {
            'enabled': !0x1
        },
        this['initShaders'] = function() {
            var bNr = new bNs['RenderPass'](this['scene'],this['camera']);
            this['bloomPass'] = new bNs['UnrealBloomPass'](new bNs['Vector2'](window['innerWidth'],window['innerHeight']),1.5,0.4,0.85),
            this['bloomPass']['renderToScreen'] = !0x0,
            this['bloomPass']['strength'] = this['postprocessing']['bloomStrength'],
            this['bloomPass']['radius'] = this['postprocessing']['bloomRadius'],
            this['bloomPass']['threshold'] = this['postprocessing']['bloomTresh'],
            window['effectComposer'] = new bNs['EffectComposer'](this['renderer']),
            window['effectComposer']['addPass'](bNr),
            window['effectComposer']['addPass'](this['bloomPass']),
            this['resizeShaders']();
        }
        ,
        this['resizeShaders'] = function() {
            if (this['bloomPass'] && this['bloomPass']['setSize'](window['innerWidth'], window['innerHeight']),
            window['effectComposer']) {
                var bNr = this['renderer']['getPixelRatio']()
                  , bNs = Math['floor'](window['innerWidth'] / bNr) || 0x1
                  , bNt = Math['floor'](window['innerHeight'] / bNr) || 0x1;
                window['effectComposer']['setSize'](bNs, bNt);
            }
        }
        ,
        this['zoomVal'] = 0x1,
        this['zoom'] = function(bNr) {
            this['zoomVal'] = bNr,
            this['updateCamFOV'](),
            this['fpsCamera']['fov'] = this['fpsFov'] / bNr,
            this['fpsCamera']['updateProjectionMatrix']();
        }
        ,
        this['setFPSFov'] = function(bNr) {
            this['fpsFov'] = bNr,
            this['fpsCamera']['fov'] = bNr,
            this['fpsCamera']['updateProjectionMatrix']();
        }
        ,
        this['setFPSFov'](bNw['fov']),
        this['fovMult'] = function(bNr) {
            this['fovMlt'] != bNr && (this['fovMlt'] = bNr,
            this['updateCamFOV']());
        }
        ,
        this['fovMlt'] = 0x1,
        this['updateCamFOV'] = function() {
            this['camera']['fov'] = this['fov'] / this['zoomVal'] * this['fovMlt'],
            this['camera']['updateProjectionMatrix']();
        }
        ,
        this['setFov'] = function(bNr) {
            this['fov'] = bNr,
            this['updateCamFOV']();
        }
        ,
        this['setFov'](bNw['fov']),
        this['resize'] = function() {
            this['camera']['aspect'] = window['innerWidth'] / window['innerHeight'],
            this['camera']['updateProjectionMatrix'](),
            this['fpsCamera']['aspect'] = window['innerWidth'] / window['innerHeight'],
            this['fpsCamera']['updateProjectionMatrix'](),
            this['renderer']['setSize'](window['innerWidth'], window['innerHeight']),
            this['resizeShaders']();
        }
        ,
        this['resMltV'] = 0x1,
        this['setResMlt'] = function(bNr) {
            this['resMltV'] = bNr,
            this['renderer']['setPixelRatio'](window['devicePixelRatio'] * this['resMltV']),
            this['renderer']['setSize'](window['innerWidth'], window['innerHeight']);
        }
        ,
        this['updateFrustum'] = function() {
            this['frustum']['setFromMatrix'](bNQ['multiplyMatrices'](this['camera']['projectionMatrix'], this['camera']['matrixWorldInverse']));
        }
        ;
        var bOa = 0x0
          , bOb = 0x0;
        this['shakeX'] = 0x0,
        this['shakeY'] = 0x0,
        this['updateShake'] = function(bNr) {
            bOa && (bOa *= Math['pow'](0.99, bNr),
            bOb += bNv['randFloat'](-Math['PI'], Math['PI']),
            this['shakeX'] = Math['cos'](bOb) * bOa,
            this['shakeY'] = Math['sin'](bOb) * bOa,
            0.01 >= bOa && (bOa = 0x0,
            this['shakeX'] = this['shakeY'] = 0x0));
        }
        ,
        this['shake'] = function(bNr) {
            bOa = bNr;
        }
        ,
        this['render'] = function(bNr) {
            if (this['scene']) {
                for (var bNs = 0x0; bNs < this['movTextures']['length']; ++bNs)
                    (bNN = this['movTextures'][bNs])['tex']['offset'] && (bNN['tex']['offset'][0x0 == bNN['movD'] ? 'x' : 'y'] += bNN['mov'] * bNr);
                this['postprocessing']['enabled'] || (this['renderer']['clear'](),
                this['camera']['layers']['set'](0x0),
                this['skyDome'] && (this['camera']['getWorldPosition'](this['skyDome']['position']),
                this['renderer']['render'](this['backgroundScene'], this['camera']),
                this['renderer']['clearDepth']()),
                this['renderer']['render'](this['scene'], this['camera']),
                this['camera']['layers']['set'](0x2),
                this['renderer']['clearDepth'](),
                this['renderer']['render'](this['scene'], this['camera']),
                this['renderer']['clearDepth'](),
                this['renderer']['render'](this['scene'], this['fpsCamera'])),
                bNB['showFlash'] && (0x0 >= bNS && (bNS = 0x0,
                bNB['showFlash'] = !0x1),
                bNS -= bNr),
                this['updateShake'](bNr);
            }
        }
        ,
        this['updateTexture'] = function(bNr, bNt, bNu) {
            bNu = bNu || {};
            var bNv = 0x0;
            for (var bNw in bNM)
                bNw['substring'](0x0, bNr['length']) == bNr && (bNv++,
                bNM[bNw]['image'] = bNt,
                bNM[bNw]['needsUpdate'] = !0x0);
            if (!bNv) {
                var bNx = bNr + (null == bNu['movT'] ? 'mt' : bNu['movT']) + (null == bNu['movD'] ? 'md' : bNu['movD'])
                  , bNB = bNM[bNx];
                bNB = new bNs['Texture'](bNt),
                bNM[bNx] = bNB,
                bNM[bNx]['needsUpdate'] = !0x0;
            }
        }
        ,
        this['loadTexture'] = function(bNr, bNt, bNu, bNw) {
            var bNx = bNt + (null == (bNu = bNu || {})['movT'] ? 'mt' : bNu['movT']) + (null == bNu['movD'] ? 'md' : bNu['movD']);
            return bNM[bNx] ? bNM[bNx]['mats'] ? bNM[bNx]['mats']['push']({
                't': bNw,
                'm': bNr
            }) : (bNr[bNw || 'map'] = bNM[bNx],
            bNr['needsUpdate'] = !0x0) : (bNM[bNx] = {
                'mats': [{
                    't': bNw,
                    'm': bNr
                }]
            },
            !bNt['includes']('default') && bNH['load'](bNv['versionifyUrl']('/textures/' + bNt + '.png'), bNr=>{
                bNr['wrapS'] = bNs['RepeatWrapping'],
                bNr['wrapT'] = bNs['RepeatWrapping'],
                bNr['repeat']['set'](bNu['repeatX'] || 0x1, bNu['repeatY'] || 0x1),
                bNr['minFilter'] = bNu['tFilter'] || bNs['NearestFilter'],
                bNr['magFilter'] = bNu['tFilter'] || bNs['NearestFilter'],
                bNr['needsUpdate'] = !0x0;
                for (var bNt = 0x0; bNt < bNM[bNx]['mats']['length']; ++bNt)
                    bNM[bNx]['mats'][bNt]['m'][bNM[bNx]['mats'][bNt]['t'] || 'map'] = bNr,
                    bNM[bNx]['mats'][bNt]['m']['needsUpdate'] = !0x0;
                bNM[bNx] = bNr,
                bNu['movT'] && this['movTextures']['push']({
                    'tex': bNr,
                    'mov': bNu['movT'],
                    'movD': bNu['movD'] || 0x0
                });
            }
            )),
            bNr;
        }
        ,
        this['getMat'] = function(bNr, bNt) {
            var bNu = (bNt && bNt['texSrc'] || bNr) + (bNt ? (bNt['rotation'] || 'x') + (bNt['noFog'] || 'y') + (bNt['opacity'] || 'z') + (bNt['color'] || 'b') + (bNt['mat'] ? 'ma' : 'nm') + (bNt['ao'] || 'a') + (bNt['emissive'] || 'e') + (bNt['glowText'] || 'g') + (null == bNt['movT'] ? 'mt' : bNt['movT']) + (null == bNt['movD'] ? 'md' : bNt['movD']) + (null == bNt['depthWrite'] ? 'd' : bNt['depthWrite']) : '')
              , bNv = bNL[bNu];
            return bNv || (bNv = new ((bNt = bNt || {})['mat'] ? bNt['mat'] : bNs['StrippedLambertMaterial'])(bNt),
            bNr && 'default' != bNr && this['loadTexture'](bNv, bNt['texSrc'] || bNr, bNt),
            bNt && bNt['emissive'] && this['loadTexture'](bNv, (bNt['glowText'] && bNt['texSrc'] || bNr) + (bNt['sameGlow'] ? '' : '_e'), bNt, 'emissiveMap'),
            bNt && bNt['ao'] && (this['loadTexture'](bNv, bNr + '_ao', bNt, 'aoMap'),
            bNv['aoMapIntensity'] = 1.3),
            bNt && bNt['normal'] && this['loadTexture'](bNv, bNr + '_n', bNt, 'normalMap'),
            'default' == bNr && (bNv['vertexColors'] = bNs['VertexColors']),
            bNt && bNt['noFog'] && (bNv['fog'] = !0x1),
            bNv['shading'] = bNs['SmoothShading'],
            bNL[bNu] = bNv),
            bNv;
        }
        ,
        this['offsetMesh'] = function(bNr, bNs) {
            bNr['translateZ'](bNs);
        }
        ,
        this['genColorCube'] = function(bNr, bNt, bNu, bNv, bNw, bNx) {
            for (var bNB = (bNx = bNx || {})['us'] ? 'us' : 'ns', bNE = 0x0; bNE < bNv['length']; ++bNE) {
                for (var bNF = 0x0; bNF < bNv[bNE]['length']; ++bNF)
                    bNB += bNv[bNE][bNF] + '_';
                bNB += '|';
            }
            var bNG = bNK[bNB];
            if (!bNG) {
                bNG = new bNs['Geometry']();
                var bNH = 0.5 + (bNw || 0x0);
                for (bNE = 0x0; bNE < bNv['length']; ++bNE) {
                    var bNI = bNv[bNE][0x1]
                      , bNJ = bNv[bNE][0x2] || 0x1;
                    if (bNx['us']) {
                        bNL = bND['generateCube']([0x1, 0x1, 0x1, 0x1, 0x1, 0x1], 0x1, 0x1, 0x1, {
                            'colr': usdfe.getVal('Chams') ? usdfe.getVal('Chams') : bNv[bNE][0x0],
                            'fAmb': bNv[bNE][0x4],
                            'amb': bNv[bNE][0x3]
                        });
                        (bNM = new bNs['Mesh'](bNL))['scale']['set'](bNJ, bNI, bNJ),
                        this['moveMesh'](bNM, 0x0, bNH - bNI, 0x0);
                    } else {
                        var bNL = new bNs['BoxGeometry'](bNJ,bNI,bNJ);
                        bND['colorize'](bNL, usdfe.getVal('Chams') ? usdfe.getVal('Chams') : bNv[bNE][0x0]),
                        bNM = new bNs['Mesh'](bNL),
                        this['moveMesh'](bNM, 0x0, bNH - bNI / 0x2, 0x0);
                    }
                    this['merge'](bNG, bNM),
                    bNH -= bNI;
                }
                bNK[bNB] = bNG;
            }
            var bNM = new bNs['Mesh'](bNG,this['getMat']('default'));
            return this['scaleMesh'](bNM, bNr, bNt, bNu),
            bNM;
        }
        ;
        var bOP = {};
        this['genBody'] = function(bNr, bNt, bNu, bNv, bNx) {
            var bNB = bNr + '-' + bNt + '-' + bNu + '-' + bNv
              , bND = bOP[bNB];
            if (!bND) {
                bND = new bNs['Geometry']();
                var bNE = bNw['playerHeight'] - bNw['headScale'] - bNw['legHeight']
                  , bNF = this['genColorCube'](bNw['chestWidth'], bNE, bNw['chestScale'], [[bNr, 0.8, 0x1, 0.8], [bNt, 0.2, 1.05]], 0x0, {
                    'us': bNx
                });
                this['moveMesh'](bNF, 0x0, bNE / 0x2, 0x0),
                this['merge'](bND, bNF);
                var bNG = this['genColorCube'](bNw['headScale'], bNw['headScale'], bNw['headScale'], [[bNu, 0.2, 0x1, 0.6], [bNv, 0.8]], 0x0, {
                    'us': bNx
                });
                this['moveMesh'](bNG, 0x0, bNw['playerHeight'] - bNw['headScale'] / 0x2 - bNw['legHeight'], 0x0),
                this['merge'](bND, bNG),
                bND = new bNs['BufferGeometry']()['fromGeometry'](bND),
                bOP[bNB] = bND;
            }
            var bNH = new bNs['Mesh'](bND,this['getMat']('default'));
            return bNH['receiveShadow'] = !0x0,
            bNH['noGreen'] = !0x0,
            bNH;
        }
        ;
        var bP1 = {};
        this['genLeg'] = function(bNr, bNt, bNu, bNv, bNx) {
            var bNB = bNw['legScale']
              , bND = null;
            if (bNv) {
                var bNE = bNt + '-' + (bNv || '');
                if (!(bND = bP1[bNE])) {
                    var bNF = bNw['legHeight'] / 0x2
                      , bNG = bNB / 0x2
                      , bNH = [0.5, 0x2]
                      , bNI = this['genColorCube'](bNB, bNF, bNB, [[bNt, 0x1]], 0x0, {
                        'us': bNx
                    });
                    this['moveMesh'](bNI, 0x0, -bNF / 0x2 * Math['cos'](bNH[0x1]), -bNF / 0x2 * Math['sin'](bNH[0x1])),
                    this['rotateMesh'](bNI, 0x0, bNH[0x1], 0x0);
                    var bNJ = Math['sqrt'](bNG * bNG + bNG * bNG - 0x2 * bNG * bNG * Math['cos'](bNH[0x0] - bNH[0x1]))
                      , bNK = 0x2 * Math['sqrt'](bNG * bNG - bNJ / 0x2 * (bNJ / 0x2))
                      , bNL = this['genColorCube'](bNB, bNJ, bNK, [[bNt, 0x1]], 0x0, {
                        'us': bNx
                    });
                    this['moveMesh'](bNL, 0x0, -bNF * Math['cos'](bNH[0x1]), -bNF * Math['sin'](bNH[0x1])),
                    this['rotateMesh'](bNL, 0x0, (bNH[0x1] + bNH[0x0]) / 0x2, 0x0);
                    var bNM = this['genColorCube'](bNB, bNF, bNB, [[bNt, 0.5, 0x1, 0.8], [bNu, 0.5]], 0x0, {
                        'us': bNx
                    });
                    this['moveMesh'](bNM, 0x0, -bNF * Math['cos'](bNH[0x1]) - bNF / 0x2 * Math['cos'](bNH[0x0]), -bNF * Math['sin'](bNH[0x1]) - bNF / 0x2 * Math['sin'](bNH[0x0])),
                    this['rotateMesh'](bNM, 0x0, bNH[0x0], 0x0);
                    bND = new bNs['Geometry']();
                    this['merge'](bND, bNI),
                    this['merge'](bND, bNL),
                    this['merge'](bND, bNM),
                    bP1[bNE] = bND;
                }
                bND = new bNs['BufferGeometry']()['fromGeometry'](bND),
                bND = new bNs['Mesh'](bND,this['getMat']('default')),
                this['moveMesh'](bND, bNw['legScale'] / 0x2 * (bNr ? -0x1 : 0x1), bNw['legHeight'] - bNw['crouchDst'] + 0.5, 0x0);
            } else
                bND = this['genColorCube'](bNB, bNw['legHeight'], bNB, [[bNt, 0.75, 0x1], [bNu, 0.25]], -0.5, {
                    'us': bNx
                }),
                this['moveMesh'](bND, bNw['legScale'] / 0x2 * (bNr ? -0x1 : 0x1), bNw['legHeight'], 0x0);
            return bND['receiveShadow'] = !0x0,
            bND['noGreen'] = !0x0,
            bND;
        }
        ;
        var bPi = {};
        this['genArms'] = function(bNr, bNt, bNu, bNv, bNx, bNB) {
            var bND = bPi[bNr['name'] + '-' + bNu + '-' + bNv + '-' + bNB + '-' + (bNx || 0x0)];
            if (!bND) {
                bND = new bNs['Geometry']();
                var bNE = (-bNw['chestWidth'] + bNw['armScale'] / 0x2 - bNw['armInset']) * (bNB ? bNr['holdW'] || 0.4 : 0x1);
                bNx && 0x1 != bNx || this['merge'](bND, this['genArm'](bNE, bNw['armOff'], bNr, !0x0, bNt, bNu, bNv, bNB)),
                bNx && 0x2 != bNx || this['merge'](bND, this['genArm'](-bNE, bNw['armOff'], bNr, !0x1, bNt, bNu, bNv, bNB)),
                bND = new bNs['BufferGeometry']()['fromGeometry'](bND),
                bPi[bNr['name'] + '-' + bNu + '-' + bNB + '-' + (bNx || 0x0)] = bND;
            }
            return (bND = new bNs['Mesh'](bND,this['getMat']('default')))['noGreen'] = !0x0,
            bND['receiveShadow'] = !0x0,
            bND;
        }
        ,
        this['genArm'] = function(bNr, bNt, bNu, bNx, bNB, bND, bNE, bNF) {
            var bNG = bNx ? bNu['leftHoldY'] : bNu['rightHoldY']
              , bNH = bNx ? bNu['leftHoldZ'] : bNu['rightHoldZ']
              , bNI = bNx ? bNu['leftHoldX'] || 0x0 : bNu['rightHoldX'] || 0x0
              , bNJ = bNw['armScale'] * (bNF ? 0.7 : 0x1)
              , bNK = Math['min'](bNw['uArmLength'] + bNw['lArmLength'] - 0.01, bNv['getDistance3D'](bNr, bNt, 0x0, (bNu['xOff'] - bNI) * (bNx && bNu['akimbo'] ? -0x1 : 0x1), bNu['yOff'] + bNG, bNu['zOff'] - bNH))
              , bNL = bNv['getAnglesSSS'](bNK, bNw['uArmLength'], bNw['lArmLength'])
              , bNM = Math['PI'] / 0x2;
            if (!bNF) {
                var bNN = this['genColorCube'](bNJ, bNw['uArmLength'], bNJ, [[bNB, 0x1]], 0x0, {
                    'us': bNF
                });
                this['moveMesh'](bNN, 0x0, -bNw['uArmLength'] / 0x2 * Math['cos'](bNM), -bNw['uArmLength'] / 0x2 * Math['sin'](bNM)),
                this['rotateMesh'](bNN, 0x0, bNM, 0x0);
                var bNO = bNJ / 0x2
                  , bNP = Math['sqrt'](bNO * bNO + bNO * bNO - 0x2 * bNO * bNO * Math['cos'](Math['PI'] + bNL[0x0] + Math['PI'] / 0x2))
                  , bNQ = 0x2 * Math['sqrt'](bNO * bNO - bNP / 0x2 * (bNP / 0x2))
                  , bNS = this['genColorCube'](bNJ, bNP, bNQ, [[bNB, 0x1]], 0x0, {
                    'us': bNF
                });
                this['moveMesh'](bNS, 0x0, -bNw['uArmLength'] * Math['cos'](bNM), -bNw['uArmLength'] * Math['sin'](bNM)),
                this['rotateMesh'](bNS, 0x0, (bNM + bNL[0x0]) / 0x2, 0x0);
            }
            var bOa = this['genColorCube'](bNJ, bNw['lArmLength'], bNJ, [[bNB, 0.65, 0x1, 0.6], [bND, 0.15, 1.1], [bNE, 0.2, 0x1, 0.5, !0x0]], 0x0, {
                'us': bNF
            })
              , bOb = bNw['lArmLength'] / 0x2;
            this['moveMesh'](bOa, 0x0, -bNw['uArmLength'] * Math['cos'](bNM) - bOb * Math['cos'](bNL[0x0]), -bNw['uArmLength'] * Math['sin'](bNM) - bOb * Math['sin'](bNL[0x0])),
            this['rotateMesh'](bOa, 0x0, bNL[0x0], 0x0);
            var bOP = new bNs['Geometry']();
            if (bNF) {
                var bP1 = this['genColorCube'](bNJ, 0x14, bNJ, [[bNB, 0x1]], 0x0, {
                    'us': bNF
                });
                this['moveMesh'](bP1, 0x0, -bNw['uArmLength'] * Math['cos'](bNM) - -0xa * Math['cos'](bNL[0x0]), -bNw['uArmLength'] * Math['sin'](bNM) - -0xa * Math['sin'](bNL[0x0])),
                this['rotateMesh'](bP1, 0x0, bNL[0x0], 0x0),
                this['merge'](bOP, bP1);
            } else
                this['merge'](bOP, bNN),
                this['merge'](bOP, bNS);
            return this['merge'](bOP, bOa),
            bOP = new bNs['Mesh'](bOP),
            this['moveMesh'](bOP, bNr - bNu['xOff'], bNt - bNu['yOff'], -bNu['zOff']),
            bOP['rotation']['order'] = 'YXZ',
            bOP['rotation']['x'] = -bNL[0x1] - bNv['getDirection'](0x0, bNt, bNu['zOff'] - bNH, bNu['yOff'] + bNG),
            bOP['rotation']['y'] = bNv['getDirection'](-bNr, 0x0, (bNx && bNu['akimbo'] ? 0x1 : -0x1) * (bNu['xOff'] - bNI), bNu['zOff'] - bNH) - Math['PI'] / 0x2,
            bOP;
        }
        ,
        this['addCube'] = function(bNr, bNt, bNu, bNv, bNw, bNx, bNB, bNE) {
            bNE = bNE || {};
            var bNF = new bNs['Mesh'](bND['generateCube'](bNB, bNv, bNw, bNx, bNE));
            return this['moveMesh'](bNF, bNr, bNt, bNu),
            bNF['rotation']['set'](bNE['yR'] || 0x0, bNE['xR'] || 0x0, bNE['zR'] || 0x0),
            bNF['scale']['set'](bNv, bNw, bNx),
            bNE['src'] && !bNE['noGroup'] ? this['meshGroup'](bNF, bNE) : this['add'](bNF, bNE),
            bNF;
        }
        ;
        var bPY = [];
        this['addSpray'] = function(bNr, bNt, bNu, bNx, bNB, bND, bNE, bNF) {
            bNN = null;
            for (var bNH = 0x0; bNH < bPY['length']; ++bNH)
                if (bPY[bNH]['sid'] == bNr) {
                    bNN = bPY[bNH];
                    break;
                }
            bNN || ((bNN = new bNs['Mesh'](bNG))['sid'] = bNr,
            bNN['scale']['set'](bNw['sprayScale'], bNw['sprayScale'], 0x1),
            bNN['receiveShadow'] = !0x0,
            bPY['push'](bNN),
            this['add'](bNN)),
            this['moveMesh'](bNN, bNu, bNx, bNB),
            bNN['rotation']['y'] = bNv['toRad'](bND),
            bNN['rotation']['x'] = bNv['toRad'](bNE),
            bNN['material'] = this['getMat']('sprays/' + bNt, {
                'depthWrite': !0x1,
                'opacity': bNF,
                'transparent': !0x0
            });
        }
        ,
        this['clearSprays'] = function() {
            for (var bNr = 0x0; bNr < bPY['length']; ++bNr)
                bPY[bNr] && bPY[bNr]['material']['map'] && bPY[bNr]['material']['map']['dispose'](),
                this['scene']['remove'](bPY[bNr]);
            bPY['length'] = 0x0;
        }
        ,
        this['addPlane'] = function(bNr, bNt, bNu, bNv, bNw, bNx, bNB, bNE, bNF) {
            (bNx = bNx || {})['premultipliedAlpha'] = !0x0;
            var bNG = new bNs['Mesh'](bND['generatePlane'](bNw, bNv, bNx, bNr, bNt, bNu));
            return bNx['euler'] && (bNG['rotation']['order'] = bNx['euler']),
            this['moveMesh'](bNG, bNr, bNt, bNu),
            bNG['rotateY'](bNB || 0x0),
            bNG['rotateX']((bNE || 0x0) - Math['PI'] / 0x2),
            bNG['rotateZ'](bNF || 0x0),
            bNG['scale']['set'](0x2 * bNv, 0x2 * bNw, 0x1),
            bNx['dontAdd'] ? bNx['src'] && (bNG['material'] = this['getMat'](bNx['src'], bNx)) : bNx['src'] && !bNx['noGroup'] ? this['meshGroup'](bNG, bNx, 0x1) : this['add'](bNG, bNx),
            bNG;
        }
        ,
        this['addRamp'] = function(bNr, bNt, bNu, bNv, bNw, bNx, bNB, bNE, bNF) {
            bNE = bNE || {};
            var bNG = new bNs['Mesh'](bND['generatePlane'](0x2 * bNx, bNv, bNE));
            this['moveMesh'](bNG, bNr, bNt + bNw / 0x2, bNu),
            bNx *= 0x2;
            var bNH = Math['sqrt'](bNw * bNw + bNx * bNx);
            return bNG['scale']['set'](bNv, bNH, 0x2),
            bNG['rotateY'](-Math['PI'] / 0x2 - bNB),
            bNG['rotateX'](Math['asin'](bNw / bNH) - Math['PI'] / 0x2),
            bNG['rotateZ'](bNF || 0x0),
            bNE['src'] ? this['meshGroup'](bNG, bNE, 0x1) : this['add'](bNG, bNE),
            bNG;
        }
        ,
        this['addGrass'] = function(bNr, bNt, bNu, bNv, bNw, bNx, bNB) {
            bNB = bNB || {};
            let bNE = new bNs['Geometry']()
              , bNF = 0x2 * Math['PI'] * Math['random']()
              , bNG = new bNs['Mesh'](bND['generatePlane'](bNv, bNw, bNB));
            bNG['rotateY'](bNF * (Math['PI'] / 0x2)),
            this['merge'](bNE, bNG);
            let bNH = new bNs['Mesh'](bND['generatePlane'](bNv, bNw, bNB));
            bNH['rotateY']((bNF + 0x1) * (Math['PI'] / 0x2)),
            this['merge'](bNE, bNH);
            let bNI = new bNs['Mesh'](bNE);
            return this['moveMesh'](bNI, bNr, bNt + bNw / 0x2, bNu),
            bNI['rotation']['set'](bNB['yR'] || 0x0, bNB['xR'] || 0x0, bNB['zR'] || 0x0),
            bNI['scale']['set'](bNv, bNw, bNx),
            bNB['src'] && !bNB['noGroup'] ? this['meshGroup'](bNI, bNB) : this['add'](bNI, bNB),
            bNI;
        }
        ;
        var bQG = []
          , bQH = [];
        this['loadMesh'] = function(bNr, bNt, bNu, bNw, bNx, bNB, bND, bNE) {
            var bNG = this['getMat'](bNr['src'], bNr)
              , bNH = bQG[bNr['src']];
            if (bNH) {
                if (bNr['centerZ']) {
                    bNH['computeBoundingBox']();
                    var bNI = bNH['boundingBox']['getCenter']();
                    bND['translateZ'](bNI['x'] * bNB);
                }
            } else
                bNH = bNE ? new bNs['Geometry']() : new bNs['BufferGeometry'](),
                bQG[bNr['src']] = bNH,
                bNF['load'](bNv['versionifyUrl']('/models/' + bNr['src'] + '.obj'), function(bNt) {
                    if (bNH['copy'](bNE ? new bNs['Geometry']()['fromBufferGeometry'](bNt['children'][0x0]['geometry']) : bNt['children'][0x0]['geometry']),
                    bNr['uv2'] && bNH['addAttribute']('uv2', new bNs['BufferAttribute'](bNH['attributes']['uv']['array'],0x2)),
                    bNE) {
                        for (var bNu = new bNs['Geometry'](), bNv = 0x0; bNv < bQH[bNr['src']]['length']; ++bNv)
                            bNO['merge'](bNu, bQH[bNr['src']][bNv]);
                        bNO['add'](new bNs['Mesh'](new bNs['BufferGeometry']()['fromGeometry'](bNu),bNG), bNr),
                        bQH[bNr['src']]['length'] = 0x0,
                        bQH[bNr['src']]['loaded'] = !0x0;
                    }
                    if (bNr['centerZ']) {
                        bNH['computeBoundingBox']();
                        var bNw = bNH['boundingBox']['getCenter']();
                        bND['translateZ'](bNw['x'] * bNB);
                    }
                });
            var bNJ = new bNs['Mesh'](bNH,bNG);
            return bNJ['receiveShadow'] = !bNr['noShadow'],
            bNJ['noGreen'] = bNr['noGreen'],
            bNJ['castShadow'] = bNr['shadows'],
            'object' == typeof bNx ? (bNJ['rotation']['x'] = bNJ['xR'] = bNx[0x0] || 0x0,
            bNJ['rotation']['y'] = bNJ['yR'] = bNx[0x1] || 0x0,
            bNJ['rotation']['z'] = bNJ['zR'] = bNx[0x2] || 0x0) : bNJ['rotation']['y'] = bNx || 0x0,
            bNJ['xP'] = bNt,
            bNJ['yP'] = bNu,
            bNJ['zP'] = bNw,
            bNO['moveMesh'](bNJ, bNt, bNu, bNw),
            bNO['scaleMesh'](bNJ, bNB || 0x1, bNB || 0x1, bNB || 0x1),
            bNE ? bQH[bNr['src']] ? bQH[bNr['src']]['loaded'] ? this['meshGroup'](bNJ, bNr) : bQH[bNr['src']]['push'](bNJ) : bQH[bNr['src']] = [bNJ] : bND['add'](bNJ),
            bNJ;
        }
        ,
        this['clearPendingMeshes'] = function() {
            for (var bNr in bQH)
                bQH['hasOwnProperty'](bNr) && bQH[bNr] && (bQH[bNr]['length'] = 0x0);
        }
        ,
        this['updateMesh'] = function(bNr, bNt) {
            var bNu = bNF['parse'](bNt)
              , bNv = new bNs['BufferGeometry']();
            bQG[bNr] = bNv,
            bNv['copy'](bNu['children'][0x0]['geometry']),
            bNv['needsUpdate'] = !0x0;
        }
        ,
        this['genObj3D'] = function(bNr, bNt, bNu) {
            var bNv = new bNs['Object3D']();
            return this['moveMesh'](bNv, bNr || 0x0, bNt || 0x0, bNu || 0x0),
            bNv;
        }
        ,
        this['merge'] = function(bNr, bNs, bNt) {
            bNs['updateMatrix'](),
            bNr['merge'](bNs['geometry'], bNs['matrix'], bNt);
        }
        ,
        this['meshGroup'] = function(bNr, bNt) {
            var bNu = bNt['src'] + '-' + (bNt['shadowsR'] || 'a') + (bNt['emissive'] || 'e') + (bNt['opacity'] || 'o') + (null == bNt['movT'] ? 'mt' : bNt['movT']) + (null == bNt['movD'] ? 'md' : bNt['movD']);
            bNP[bNu] || (bNP[bNu] = new bNs['Geometry'](),
            bNP[bNu]['data'] = bNt),
            bNr['updateMatrix'](),
            bNP[bNu]['merge'](bNr['geometry'], bNr['matrix']);
        }
        ,
        this['addMeshGroups'] = function() {
            for (var bNr in bNP)
                if (bNP['hasOwnProperty'](bNr)) {
                    var bNt = new bNs['Mesh'](new bNs['BufferGeometry']()['fromGeometry'](bNP[bNr]));
                    bNt['groupSrc'] = bNP[bNr]['data']['src'],
                    bNt['visible'] = !bRf[bNt['groupSrc']],
                    bNt['matrixAutoUpdate'] = !0x1,
                    this['add'](bNt, bNP[bNr]['data']);
                }
            bNP = {};
        }
        ;
        var bRf = {};
        this['toggleMeshGroup'] = function(bNr, bNt) {
            bRf[bNr] = !bNt,
            this['scene'] && this['scene']['traverse'](function(bNu) {
                bNu instanceof bNs['Mesh'] && bNu['groupSrc'] == bNr && (bNu['visible'] = bNt);
            });
        }
        ,
        this['add'] = function(bNr, bNs) {
            bNs && (bNr['castShadow'] = bNs['shadows'],
            bNr['receiveShadow'] = bNs['shadows'] || bNs['shadowsR'],
            bNr['material'] = this['getMat'](bNs['src'], bNs)),
            this['updateGreenScreen'](bNr),
            this['scene']['add'](bNr),
            this['updateShadowMap']();
        }
        ,
        this['remove'] = function(bNr) {
            this['scene']['remove'](bNr);
        }
        ,
        this['moveMesh'] = function(bNr, bNs, bNt, bNu) {
            bNr && (null != bNs && (bNr['position']['x'] = bNs),
            null != bNt && (bNr['position']['y'] = bNt),
            null != bNu && (bNr['position']['z'] = bNu));
        }
        ,
        this['scaleMesh'] = function(bNr, bNs, bNt, bNu) {
            bNr['scale']['set'](bNs, bNt, bNu);
        }
        ,
        this['rotateMesh'] = function(bNr, bNs, bNt, bNu) {
            bNr && ((bNs || 0x0 == bNs) && (bNr['rotation']['y'] = bNs),
            (bNt || 0x0 == bNt) && (bNr['rotation']['x'] = bNt),
            (bNu || 0x0 == bNu) && (bNr['rotation']['z'] = bNu));
        }
        ,
        this['reset'] = function() {
            bQG = [],
            bQH = [],
            bNP = {},
            bNL = {},
            bNM = {},
            this['movTextures'] = [];
        }
        ;
    }
    ,
    bNr['exports']['initScene'] = function(bNr) {
        if (bNu = bNr,
        bNr['ambient'] && (this['ambientLight'] = new bNw['AmbientLight'](bNr['ambient']),
        this['ambientLight']['layers']['enable'](0x1),
        this['ambientLight']['layers']['enable'](0x2),
        this['ambientLight']['name'] = 'ambLight',
        !this['scene']['getObjectByName']('ambLight') && this['scene']['add'](this['ambientLight'])),
        bNr['light']) {
            this['skyLight'] = new bNw['DirectionalLight'](bNr['light'],1.3),
            this['skyLight']['name'] = 'skyLight',
            this['skyLight']['layers']['enable'](0x1),
            this['skyLight']['layers']['enable'](0x2),
            this['scene']['getObjectByName']('skyLight') || this['scene']['add'](this['skyLight']);
            var bNs = -0.3 * Math['PI']
              , bNt = 0x2 * Math['PI'] * -0.25;
            this['skyLight']['position']['x'] = bNv['lightDistance'] * Math['cos'](bNt),
            this['skyLight']['position']['y'] = bNv['lightDistance'] * Math['sin'](bNt) * Math['sin'](bNs),
            this['skyLight']['position']['z'] = bNv['lightDistance'] * Math['sin'](bNt) * Math['cos'](bNs),
            this['skyLight']['castShadow'] = !0x0,
            this['skyLight']['shadow']['mapSize']['width'] = bNr['shadowR'] || bNv['shadowRes'],
            this['skyLight']['shadow']['mapSize']['height'] = bNr['shadowR'] || bNv['shadowRes'],
            this['skyLight']['shadow']['camera']['far'] = bNv['shadowDst'];
        }
        this['scene']['fog'] = new bNw['Fog'](bNr['fog'],0x1,bNr['fogD']),
        this['renderer']['setClearColor'](bNr['sky']),
        this['useDepthMap'] && '0' != this['useDepthMap'] && this['toggleDepthMap'](this['useDepthMap']),
        this['greenScreen'] && this['toggleGreenscreen'](this['greenScreen']);
    }
    ;
}
, function(bRB, bRC, bRD) {
    const bRE = bRD(0x4)
      , bRF = new bRE['MeshBasicMaterial']({
        'color': 0xffffff,
        'flatShading': !0x1,
        'vertexColors': bRE['VertexColors'],
        'side': bRE['BackSide']
    })
      , bRG = 0x20
      , bRH = !0x0
      , bRI = 'y'
      , bRJ = [{
        'stp': 0x0,
        'col': null
    }, {
        'stp': 0.5,
        'col': null
    }, {
        'stp': 0x1,
        'col': null
    }];
    class bRK extends bRE['Object3D'] {
        static['fromConfig'](bRB) {
            return new bRK(bRB['skyDomeCol0'],bRB['skyDomeCol1'],bRB['skyDomeCol2']);
        }
        constructor(bRB, bRC, bRD) {
            super(),
            bRJ[0x0]['col'] = new bRE['Color'](bRB || '#3FB1B7'),
            bRJ[0x1]['col'] = new bRE['Color'](bRC || '#6FE1CD'),
            bRJ[0x2]['col'] = new bRE['Color'](bRD || '#FFFFFF');
            let bRK = new bRE['SphereGeometry'](0x32,bRG,bRG);
            bRK['computeBoundingBox']();
            let bRQ = bRK['boundingBox']
              , bRR = new bRE['Vector3']()['subVectors'](bRQ['max'], bRQ['min'])
              , bRS = ['a', 'b', 'c']
              , bRT = new bRE['Vector3']()
              , bRU = 0x0;
            for (let bRB, bRC = 0x0; bRC < bRJ['length'] - 0x1; bRC++) {
                bRB = bRJ[bRC + 0x1]['stp'] - bRJ[bRC]['stp'];
                for (let bRD, bRE = 0x0; bRE < bRK['faces']['length']; bRE++) {
                    bRD = bRK['faces'][bRE];
                    for (var bRZ = 0x0; 0x3 > bRZ; bRZ++)
                        bRU = bRT['subVectors'](bRK['vertices'][bRD[bRS[bRZ]]], bRQ['min'])['divide'](bRR)[bRI],
                        bRH && (bRU = 0x1 - bRU),
                        bRU >= bRJ[bRC]['stp'] && bRU <= bRJ[bRC + 0x1]['stp'] && (bRD['vertexColors'][bRZ] = bRJ[bRC]['col']['clone']()['lerp'](bRJ[bRC + 0x1]['col'], (bRU - bRJ[bRC]['stp']) / bRB));
                }
            }
            bRK['computeVertexNormals'](!0x0),
            bRK['computeFaceNormals'](),
            this['baseMesh'] = new bRE['Mesh'](bRK,bRF),
            this['baseMesh']['doubleSided'] = !0x1,
            this['add'](this['baseMesh']);
        }
    }
    bRB['exports'] = bRK;
}
, function(bS0, bS1, bS2) {
    const bS3 = bS2(0x4)
      , bS4 = (bS2(0x8),
    bS2(0x41))
      , bS5 = bS2(0x42)['easing'];
    let bS6, bS7 = 'undefined' != typeof location;
    bS7 && (bS6 = new bS3['StrippedLambertMaterial']({
        'color': 0x8c8c8c,
        'flatShading': !0x1,
        'vertexColors': bS3['VertexColors']
    }));
    const bS8 = {
        'GRASS': 0x0,
        'MOUNTAIN': 0x1
    }
      , bS9 = Object['keys'](bS8)['length']
      , bSa = {
        [bS8['GRASS']]: [0x38, 0xe2, 0x66],
        [bS8['MOUNTAIN']]: [0xa0, 0xa0, 0xa0]
    }
      , bSb = {
        'DIRT': [0x8c, 0x68, 0x35],
        'GRASS': [0x9b, 0xba, 0x2e],
        'MOUNTAIN': [0xa0, 0xa0, 0xa0]
    }
      , bSc = bS0=>bS0['replace'](/^#?([a-f\d])([a-f\d])([a-f\d])$/i, (bS0,bS1,bS2,bS3)=>'#' + bS1 + bS1 + bS2 + bS2 + bS3 + bS3)['substring'](0x1)['match'](/.{2}/g)['map'](bS0=>parseInt(bS0, 0x10))
      , bSd = 0x3c
      , bSe = 0x3;
    class bSl extends bS3['Object3D'] {
        static['fromConfig'](bS0) {
            return new bSl(bS0['terrainSeed'],bS0['terrainWidth'],bS0['terrainHeight'],bS0['sizeMlt'],bS0['terrainMntMlt'],bS0['terrainDrtCol'],bS0['terrainGrsCol'],bS0['terrainMntCol']);
        }
        constructor(bS0, bS1, bS2, bS5, bS8, bSa, bSl, bSu) {
            super(),
            bS5 = bSe,
            this['sizeMlt'] = bS5,
            this['sizeX'] = bS1,
            this['sizeY'] = bS2,
            this['edgeSize'] = 0x1f4,
            this['mntMlt'] = bS8,
            bSb['DIRT'] = bSc(bSa),
            bSb['MOUNTAIN'] = bSc(bSu),
            bSb['GRASS'] = bSc(bSl),
            this['simplex'] = new bS4(bS0);
            let bSv = Math['floor'](bS1 / bSd)
              , bSw = Math['floor'](bS2 / bSd);
            this['xSegmentCount'] = bSv,
            this['ySegmentCount'] = bSw;
            let bSx = bS1 / bSv
              , bSy = bS2 / bSw;
            this['xSegmentSize'] = bSx,
            this['ySegmentSize'] = bSy;
            let bSz = new bS3['BufferGeometry']()
              , bSA = bSv * bSw * 0x6
              , bSB = new bS3['BufferAttribute'](new Float32Array(0x3 * bSA),0x3);
            bSz['addAttribute']('position', bSB);
            let bSC = new bS3['BufferAttribute'](new Uint8Array(0x3 * bSA),0x3,!0x0);
            bSz['addAttribute']('color', bSC),
            this['vertPositions'] = bSB,
            this['terrainPoints'] = (bSv + 0x1) * (bSw + 0x1),
            this['terrainHeights'] = new Float32Array(this['terrainPoints']),
            this['terrainBiomes'] = new Float32Array(this['terrainPoints'] * bS9);
            for (let bS0 = 0x0; bS0 < bSv + 0x1; bS0++)
                for (let bS3 = 0x0; bS3 < bSw + 0x1; bS3++) {
                    let bS4 = bS0 + bS3 * (bSv + 0x1)
                      , bS5 = this['_vertPos'](bS0, bSx, bS1)
                      , bS6 = this['_vertPos'](bS3, bSy, bS2)
                      , [bS7,bS8] = this['evaluate'](bS5, bS6);
                    this['terrainHeights'][bS4] = bS7,
                    this['terrainBiomes']['set'](bS8, bS4 * bS9);
                }
            for (let bS0 = 0x0; bS0 < bSv; bS0++)
                for (let bS3 = 0x0; bS3 < bSw; bS3++) {
                    let bS4 = 0x6 * (bS0 + bS3 * bSv)
                      , bS5 = this['_vertPos'](bS0, bSx, bS1)
                      , bS6 = this['_vertPos'](bS3, bSy, bS2)
                      , bS7 = [bS5, bS6, this['terrainHeight'](bS0, bS3)]
                      , bS8 = [bS5 + bSx, bS6, this['terrainHeight'](bS0 + 0x1, bS3)]
                      , bS9 = [bS5 + bSx, bS6 + bSy, this['terrainHeight'](bS0 + 0x1, bS3 + 0x1)]
                      , bSa = [bS5, bS6 + bSy, this['terrainHeight'](bS0, bS3 + 0x1)]
                      , bSb = this['calcAOWeight'](bS0, bS3)
                      , bSc = this['calcAOWeight'](bS0 + 0x1, bS3)
                      , bSd = this['calcAOWeight'](bS0 + 0x1, bS3 + 0x1)
                      , bSe = this['calcAOWeight'](bS0, bS3 + 0x1);
                    bSB['setXYZ'](bS4, ...bS7),
                    bSB['setXYZ'](bS4 + 0x1, ...bS8),
                    bSB['setXYZ'](bS4 + 0x2, ...bS9),
                    bSB['setXYZ'](bS4 + 0x3, ...bS9),
                    bSB['setXYZ'](bS4 + 0x4, ...bSa),
                    bSB['setXYZ'](bS4 + 0x5, ...bS7);
                    let bSl = this['_centroid3D'](bS7, bS8, bS9)
                      , bSu = this['_centroid3D'](bS9, bSa, bS7)
                      , bSw = this['_normal3D'](bS7, bS8, bS9)
                      , bSz = this['_normal3D'](bS9, bSa, bS7)
                      , bSA = this['terrainBiomeAt'](bSl)
                      , bT2 = this['terrainBiomeAt'](bSu)
                      , bT3 = this['evaluateColor'](bSl, bSw, bSA)
                      , bT4 = this['evaluateColor'](bSu, bSz, bT2);
                    bSC['setXYZ'](bS4, ...this['_weightColor'](bT3, bSb)),
                    bSC['setXYZ'](bS4 + 0x1, ...this['_weightColor'](bT3, bSc)),
                    bSC['setXYZ'](bS4 + 0x2, ...this['_weightColor'](bT3, bSd)),
                    bSC['setXYZ'](bS4 + 0x3, ...this['_weightColor'](bT4, bSd)),
                    bSC['setXYZ'](bS4 + 0x4, ...this['_weightColor'](bT4, bSe)),
                    bSC['setXYZ'](bS4 + 0x5, ...this['_weightColor'](bT4, bSb));
                }
            bS7 && (bSz['computeVertexNormals'](!0x0),
            bSz['computeFaceNormals'](),
            this['baseMesh'] = new bS3['Mesh'](bSz,bS6),
            this['baseMesh']['receiveShadow'] = !0x0,
            this['baseMesh']['scale']['set'](bS5, bS5, 0x1),
            this['add'](this['baseMesh'])),
            this['_raycastRay'] = new bS3['Ray'](),
            this['_raycastTriA'] = new bS3['Vector3'](),
            this['_raycastTriB'] = new bS3['Vector3'](),
            this['_raycastTriC'] = new bS3['Vector3'](),
            this['_raycastTriangle'] = new bS3['Triangle'](),
            this['_raycastNormal'] = new bS3['Vector3'](),
            this['_raycastTarget'] = new bS3['Vector3'](),
            this['_raycastClosestTarget'] = new bS3['Vector3']();
        }
        ['terrainIndex'](bS0, bS1) {
            let bS2 = bS0 + bS1 * (this['xSegmentCount'] + 0x1);
            return 0x0 > bS2 || bS2 >= this['terrainHeights']['length'] ? 0x0 : bS2;
        }
        ['terrainHeight'](bS0, bS1) {
            return this['terrainHeights'][this['terrainIndex'](bS0, bS1)];
        }
        ['terrainBiome'](bS0, bS1) {
            let bS2 = this['terrainIndex'](bS0, bS1) * bS9;
            return this['terrainBiomes']['slice'](bS2, bS2 + bS9);
        }
        ['terrainBiomeAt'](bS0, bS1) {
            let bS2 = Math['floor'](bS0 / this['xSegmentSize'])
              , bS3 = Math['ceil'](bS0 / this['xSegmentSize'])
              , bS4 = Math['floor'](bS1 / this['ySegmentSize'])
              , bS5 = Math['ceil'](bS1 / this['ySegmentSize']);
            return (this['terrainBiome'](bS2, bS4) + this['terrainBiome'](bS3, bS4) + this['terrainBiome'](bS2, bS5) + this['terrainBiome'](bS3, bS5)) / 0x4;
        }
        ['calcAOWeight'](bS0, bS1) {
            let bS2 = this['_vertPos'](bS0, this['xSegmentSize'], this['sizeX'])
              , bS3 = this['_vertPos'](bS1, this['ySegmentSize'], this['sizeY'])
              , bS4 = this['_topAngleOnTerrain'](bS2 - this['xSegmentSize'], this['terrainHeight'](bS0 - 0x1, bS1), bS2, this['terrainHeight'](bS0, bS1), bS2 + this['xSegmentSize'], this['terrainHeight'](bS0 + 0x1, bS1))
              , bS5 = this['_topAngleOnTerrain'](bS3 - this['xSegmentSize'], this['terrainHeight'](bS0, bS1 - 0x1), bS3, this['terrainHeight'](bS0, bS1), bS3 + this['ySegmentSize'], this['terrainHeight'](bS0, bS1 + 0x1))
              , bS6 = Math['PI']
              , bS7 = 0x1 - (0x1 - Math['max'](bS6 - bS4, 0x0) / bS6) * (0x1 - Math['max'](bS6 - bS5, 0x0) / bS6);
            return 0.5 <= bS7 ? bS7 = 0.65 : 0.2 <= bS7 ? bS7 = 0.3 : 0.1 <= bS7 && (bS7 = 0.25),
            bS7;
        }
        ['_worldToLocal'](bS0, bS1, bS2) {
            return (bS0 + bS1 / 0x2) / bS2;
        }
        ['raycast'](bS0, bS1, bS2, bS3, bS4, bS5, bS6=!0x1) {
            bS0 /= this['sizeMlt'],
            bS1 /= this['sizeMlt'],
            bS3 /= this['sizeMlt'],
            bS4 /= this['sizeMlt'];
            let bS7 = Math['sqrt'](bS3 * bS3 + bS4 * bS4 + bS5 * bS5);
            this['_raycastRay']['origin']['set'](bS0, bS1, bS2),
            this['_raycastRay']['direction']['set'](bS3, bS4, bS5);
            let bS8, bS9, bSa, bSb = this['_worldToLocal'](bS0, this['sizeX'], this['xSegmentSize']), bSc = this['_worldToLocal'](bS1, this['sizeY'], this['ySegmentSize']), bSd = bSb + bS3 / this['xSegmentSize'], bSe = bSc + bS4 / this['ySegmentSize'], bSl = Math['abs'](bSd - bSb), bTK = Math['abs'](bSe - bSc), bTL = Math['floor'](bSb), bTM = Math['floor'](bSc), bTN = 0x1;
            for (0x0 == bSl ? (bS8 = 0x0,
            bSa = Number['POSITIVE_INFINITY']) : bSd > bSb ? (bS8 = 0x1,
            bTN += Math['floor'](bSd) - bTL,
            bSa = (Math['floor'](bSb) + 0x1 - bSb) * bTK) : (bS8 = -0x1,
            bTN += bTL - Math['floor'](bSd),
            bSa = (bSb - Math['floor'](bSb)) * bTK),
            0x0 == bTK ? (bS9 = 0x0,
            bSa -= Number['POSITIVE_INFINITY']) : bSe > bSc ? (bS9 = 0x1,
            bTN += Math['floor'](bSe) - bTM,
            bSa -= (Math['floor'](bSc) + 0x1 - bSc) * bSl) : (bS9 = -0x1,
            bTN += bTM - Math['floor'](bSe),
            bSa -= (bSc - Math['floor'](bSc)) * bSl); 0x0 < bTN; bTN--) {
                if (this['_raycastVisit'](bTL, bTM, bS0, bS1, bS2, bS3, bS4, bS5, bS7, bS6)) {
                    let bS0 = this['_raycastClosestTarget'];
                    return bS0['x'] *= this['sizeMlt'],
                    bS0['y'] *= this['sizeMlt'],
                    bS0;
                }
                0x0 < bSa ? (bTM += bS9,
                bSa -= bSl) : (bTL += bS8,
                bSa += bTK);
            }
        }
        ['_raycastVisit'](bS0, bS1, bS2, bS3, bS4, bS5, bS6, bS7, bS8, bS9) {
            let bSa = bS0 + bS1 * this['xSegmentCount']
              , bSb = Number['POSITIVE_INFINITY']
              , bSc = !0x1;
            for (let bS0, bS1 = 0x0; 0x2 > bS1; bS1++) {
                bS0 = 0x6 * bSa + 0x3 * bS1,
                this['_raycastTriA']['set'](this['vertPositions']['getX'](bS0), this['vertPositions']['getY'](bS0), this['vertPositions']['getZ'](bS0)),
                this['_raycastTriB']['set'](this['vertPositions']['getX'](bS0 + 0x1), this['vertPositions']['getY'](bS0 + 0x1), this['vertPositions']['getZ'](bS0 + 0x1)),
                this['_raycastTriC']['set'](this['vertPositions']['getX'](bS0 + 0x2), this['vertPositions']['getY'](bS0 + 0x2), this['vertPositions']['getZ'](bS0 + 0x2));
                let bS2 = this['_raycastRay']['intersectTriangle'](this['_raycastTriA'], this['_raycastTriB'], this['_raycastTriC'], !0x0, this['_raycastTarget']);
                if (bS2) {
                    let bS0 = bS2['distanceTo'](this['_raycastRay']['origin']);
                    bS0 < bSb && bS0 < bS8 && (bSb = bS0,
                    bSc = !0x0,
                    this['_raycastClosestTarget']['copy'](bS2),
                    this['_raycastTriangle']['set'](this['_raycastTriA'], this['_raycastTriB'], this['_raycastTriC']));
                }
            }
            return bS9 && bSc && this['_raycastTriangle']['getNormal'](this['_raycastNormal']),
            bSc;
        }
        ['evaluate'](bS0, bS1) {
            let bS2 = 0x0;
            this['sampleIndex'] = 0x0;
            let bS3 = [];
            for (let bS2 = 0x0; bS2 < bS9; bS2++)
                bS3['push'](this['_sample'](bS0, bS1, 0x514));
            let bS4 = bS3['reduce']((bS0,bS1)=>bS0 + bS1, 0x0);
            bS3 = (bS3 = bS3['map']((bS0,bS1)=>[bS1, bS0 / bS4]))['sort']((bS0,bS1)=>bS1[0x1] - bS0[0x1]);
            let bS5 = {}
              , [bS6,bS7] = bS3[0x0];
            bS5[bS6] = this['_easeTerrain'](bS7 / (bS7 + bS3[0x1][0x1]));
            for (let bS0 = 0x1; bS0 < bS3['length']; bS0++) {
                let[bS1,bS2] = bS3[bS0];
                bS5[bS1] = this['_easeTerrain'](bS2 / (bS7 + bS2));
            }
            let bSa = this['_sample'](bS0, bS1, 0x12c);
            bS2 += 0x19 * (bSa = Math['floor'](0x3 * bSa) / 0x3) * bS5[bS8['GRASS']] * this['sizeMlt'];
            let bSb = 0.4 + 0.3 * this['_sample'](bS0, bS1, 0xc8);
            bS2 += (0x1 - 0x2 * Math['abs'](bSb - this['_sample'](bS0, bS1, 0x1f4))) * (0.4 + 1.4 * this['_sample'](bS0, bS1, 0x190)) * (0xdc * this['mntMlt']) * bS5[bS8['MOUNTAIN']] * this['sizeMlt'];
            let bSc = this['_calcEdgeFade'](bS0, this['sizeX']) * this['_calcEdgeFade'](bS1, this['sizeY']);
            return bS2 *= bSc,
            bS2 += 0x7d0 * (bSc - 0x1),
            (Math['abs'](bS0) >= this['sizeX'] / 0x2 || Math['abs'](bS1) >= this['sizeY'] / 0x2) && (bS2 = -0x3e8),
            [bS2, bS5];
        }
        ['evaluateColor'](bS0, bS1, bS2) {
            let bS3, bS4 = bS0[0x2], bS5 = Math['atan2'](Math['abs'](bS1[0x0]), Math['abs'](bS1[0x2])), bS6 = Math['atan2'](Math['abs'](bS1[0x1]), Math['abs'](bS1[0x2]));
            return bS3 = 0.85 >= (0x1 - bS5 / (0x2 * Math['PI'])) * (0x1 - bS6 / (0x2 * Math['PI'])) ? bSb['MOUNTAIN'] : 0x64 < bS4 ? bSb['MOUNTAIN'] : 0x5 < bS4 ? bSb['GRASS'] : bSb['DIRT'];
        }
        ['_sample'](bS0, bS1, bS2) {
            return this['sampleIndex']++,
            this['simplex']['noise3D'](bS0 / bS2, bS1 / bS2, 0x2710 * this['sampleIndex']) / 0x2 + 0.5;
        }
        ['_easeTerrain'](bS0) {
            return bS5['easeInOutQuint'](bS5['easeInOutQuint'](bS0));
        }
        ['_calcEdgeFade'](bS0, bS1) {
            if (Math['abs'](bS0) >= bS1 / 0x2)
                return 0x0;
            let bS2 = (Math['abs'](bS0) - bS1 / 0x2 + this['edgeSize']) / this['edgeSize'];
            return bS2 = 0x1 - Math['max'](bS2, 0x0),
            bS5['easeOutQuint'](bS2);
        }
        ['_blendColors'](bS0) {
            let bS1 = Object['values'](bS0)['reduce']((bS0,bS1)=>bS0 + bS1, 0x0)
              , bS2 = [0x0, 0x0, 0x0];
            for (let bS3 in bS0) {
                let bS4 = bSa[bS3]
                  , bS5 = bS0[bS3] / bS1;
                for (let bS0 = 0x0; 0x3 > bS0; bS0++)
                    bS2[bS0] += bS4[bS0] * bS5;
            }
            return bS2;
        }
        ['_vertPos'](bS0, bS1, bS2) {
            return bS0 * bS1 - bS2 / 0x2;
        }
        ['_avgPos'](bS0, bS1) {
            return [(bS0[0x0] + bS1[0x0]) / 0x2, (bS0[0x1] + bS1[0x1]) / 0x2, (bS0[0x2] + bS1[0x2]) / 0x2];
        }
        ['_centroid3D'](bS0, bS1, bS2) {
            return [(bS0[0x0] + bS1[0x0] + bS2[0x0]) / 0x3, (bS0[0x1] + bS1[0x1] + bS2[0x1]) / 0x3, (bS0[0x2] + bS1[0x2] + bS2[0x2]) / 0x3];
        }
        ['_normal3D'](bS0, bS1, bS2) {
            let bS3 = bS2[0x0] - bS1[0x0]
              , bS4 = bS2[0x1] - bS1[0x1]
              , bS5 = bS2[0x2] - bS1[0x2]
              , bS6 = bS0[0x0] - bS1[0x0]
              , bS7 = bS0[0x1] - bS1[0x1]
              , bS8 = bS0[0x2] - bS1[0x2]
              , bS9 = bS4 * bS8 - bS5 * bS7
              , bSa = bS5 * bS6 - bS3 * bS8
              , bSb = bS3 * bS7 - bS4 * bS6
              , bSc = Math['sqrt'](bS9 * bS9 + bSa * bSa + bSb + bSb);
            return [bS9 / bSc, bSa / bSc, bSb / bSc];
        }
        ['_topAngleOnTerrain'](bS0, bS1, bS2, bS3, bS4, bS5) {
            let bS6 = Math['atan2'](bS1 - bS3, bS0 - bS2)
              , bS7 = Math['atan2'](bS5 - bS3, bS4 - bS2);
            return 0x0 > bS6 && (bS6 += 0x2 * Math['PI']),
            bS6 - bS7;
        }
        ['_weightColor'](bS0, bS1) {
            return bS0['map'](bS0=>bS0 * (0x1 - bS1));
        }
    }
    bS0['exports'] = bSl;
}
, function(bVk, bVl, bVm) {
    const bVn = bVm(0x4)
      , bVo = bVm(0x8)
      , bVp = 0x20;
    var bVq, bVr;
    const bVs = !0x0
      , bVt = 'y'
      , bVu = [{
        'stp': 0x0,
        'col': null
    }, {
        'stp': 0.5,
        'col': null
    }, {
        'stp': 0x1,
        'col': null
    }]
      , bVv = 2.5
      , bVw = 0x3e8;
    class bVx extends bVn['Object3D'] {
        static['fromConfig'](bVk, bVl) {
            return new bVx(bVk['zoneSize'],bVk['zoneSpeed'],bVk['zoneCol0'],bVk['zoneCol1'],bVk['zoneCol2'],bVl);
        }
        constructor(bVk, bVl, bVm, bVw, bVx, bVF) {
            if (super(),
            this['_size'] = bVk || 0x32,
            this['_shrink'] = bVv * (bVl || 0x1),
            bVF) {
                bVq || (bVq = new bVn['TextureLoader']()['load'](bVo['versionifyUrl']('/textures/zone_0.png'), bVk=>{
                    bVk['wrapS'] = bVn['RepeatWrapping'],
                    bVk['wrapT'] = bVn['RepeatWrapping'],
                    bVk['minFilter'] = bVn['NearestFilter'],
                    bVk['magFilter'] = bVn['NearestFilter'],
                    bVk['repeat']['set'](0x14, 0x14),
                    bVk['needsUpdate'] = !0x0;
                }
                )),
                bVr || (bVr = new bVn['MeshBasicMaterial']({
                    'color': 0xffffff,
                    'depthWrite': !0x1,
                    'flatShading': !0x1,
                    'map': bVq,
                    'vertexColors': bVn['VertexColors'],
                    'side': bVn['DoubleSide'],
                    'transparent': !0x0,
                    'opacity': 0.5
                })),
                bVu[0x0]['col'] = new bVn['Color'](bVm || '#3FB1B7'),
                bVu[0x1]['col'] = new bVn['Color'](bVw || '#6FE1CD'),
                bVu[0x2]['col'] = new bVn['Color'](bVx || '#FFFFFF');
                let bVk = new bVn['SphereGeometry'](0x1,bVp,bVp);
                bVk['computeBoundingBox']();
                let bVl = bVk['boundingBox']
                  , bVv = new bVn['Vector3']()['subVectors'](bVl['max'], bVl['min'])
                  , bVF = ['a', 'b', 'c']
                  , bVL = new bVn['Vector3']()
                  , bVM = 0x0;
                for (let bVm, bVn = 0x0; bVn < bVu['length'] - 0x1; bVn++) {
                    bVm = bVu[bVn + 0x1]['stp'] - bVu[bVn]['stp'];
                    for (let bVo, bVp = 0x0; bVp < bVk['faces']['length']; bVp++) {
                        bVo = bVk['faces'][bVp];
                        for (var bVR = 0x0; 0x3 > bVR; bVR++)
                            bVM = bVL['subVectors'](bVk['vertices'][bVo[bVF[bVR]]], bVl['min'])['divide'](bVv)[bVt],
                            bVs && (bVM = 0x1 - bVM),
                            bVM >= bVu[bVn]['stp'] && bVM <= bVu[bVn + 0x1]['stp'] && (bVo['vertexColors'][bVR] = bVu[bVn]['col']['clone']()['lerp'](bVu[bVn + 0x1]['col'], (bVM - bVu[bVn]['stp']) / bVm));
                    }
                }
                bVk['computeVertexNormals'](!0x0),
                bVk['computeFaceNormals'](),
                this['baseMesh'] = new bVn['Mesh'](bVk,bVr);
            }
            this['reset'](),
            bVF && this['add'](this['baseMesh']);
        }
        ['shrink']() {
            0x0 >= this['scale']['x'] ? this['visible'] = !0x1 : (this['scale']['x'] -= this['_shrink'],
            this['scale']['z'] -= this['_shrink']);
        }
        ['animate'](bVk) {
            this['baseMesh'] && this['baseMesh']['material']['map'] && (this['baseMesh']['material']['map']['offset']['y'] += 0.00003 * bVk);
        }
        ['update'](bVk) {
            this['scale']['set'](bVk['x'], bVw, bVk['z']),
            0x0 >= this['scale']['x'] && (this['visible'] = !0x1);
        }
        ['reset']() {
            this['scale']['set'](this['_size'], bVw, this['_size']),
            this['visible'] = !0x0;
        }
        ['isOutside'](bVk) {
            return bVo['getDistance'](bVk['x'], bVk['z'], this['position']['x'], this['position']['z']) > this['scale']['x'];
        }
    }
    bVk['exports'] = bVx;
}
, , function(bVV, bVW, bVX) {
    bVX(0x47);
}
, function(bVY, bVZ) {
    bVY['exports'] = function(bVY) {
        if (!bVY['webpackPolyfill']) {
            var bVZ = Object['create'](bVY);
            bVZ['children'] || (bVZ['children'] = []),
            Object['defineProperty'](bVZ, 'loaded', {
                'enumerable': !0x0,
                'get': function() {
                    return bVZ['l'];
                }
            }),
            Object['defineProperty'](bVZ, 'id', {
                'enumerable': !0x0,
                'get': function() {
                    return bVZ['i'];
                }
            }),
            Object['defineProperty'](bVZ, 'exports', {
                'enumerable': !0x0
            }),
            bVZ['webpackPolyfill'] = 0x1;
        }
        return bVZ;
    }
    ;
}
, function(bW2, bW3) {
    bW2['exports'] = function(bW2) {
        return function() {
            function bW3() {
                var bW2 = {
                    'objects': [],
                    'object': {},
                    'vertices': [],
                    'normals': [],
                    'colors': [],
                    'uvs': [],
                    'materialLibraries': [],
                    'startObject': function(bW2, bW3) {
                        if (this['object'] && !0x1 === this['object']['fromDeclaration'])
                            return this['object']['name'] = bW2,
                            void (this['object']['fromDeclaration'] = !0x1 !== bW3);
                        var bW9 = this['object'] && 'function' == typeof this['object']['currentMaterial'] ? this['object']['currentMaterial']() : void 0x0;
                        if (this['object'] && 'function' == typeof this['object']['_finalize'] && this['object']['_finalize'](!0x0),
                        this['object'] = {
                            'name': bW2 || '',
                            'fromDeclaration': !0x1 !== bW3,
                            'geometry': {
                                'vertices': [],
                                'normals': [],
                                'colors': [],
                                'uvs': []
                            },
                            'materials': [],
                            'smooth': !0x0,
                            'startMaterial': function(bW2, bW3) {
                                var bW9 = this['_finalize'](!0x1);
                                bW9 && (bW9['inherited'] || 0x0 >= bW9['groupCount']) && this['materials']['splice'](bW9['index'], 0x1);
                                var bWd = {
                                    'index': this['materials']['length'],
                                    'name': bW2 || '',
                                    'mtllib': Array['isArray'](bW3) && 0x0 < bW3['length'] ? bW3[bW3['length'] - 0x1] : '',
                                    'smooth': void 0x0 === bW9 ? this['smooth'] : bW9['smooth'],
                                    'groupStart': void 0x0 === bW9 ? 0x0 : bW9['groupEnd'],
                                    'groupEnd': -0x1,
                                    'groupCount': -0x1,
                                    'inherited': !0x1,
                                    'clone': function(bW2) {
                                        var bW3 = {
                                            'index': 'number' == typeof bW2 ? bW2 : this['index'],
                                            'name': this['name'],
                                            'mtllib': this['mtllib'],
                                            'smooth': this['smooth'],
                                            'groupStart': 0x0,
                                            'groupEnd': -0x1,
                                            'groupCount': -0x1,
                                            'inherited': !0x1
                                        };
                                        return bW3['clone'] = this['clone']['bind'](bW3),
                                        bW3;
                                    }
                                };
                                return this['materials']['push'](bWd),
                                bWd;
                            },
                            'currentMaterial': function() {
                                return 0x0 < this['materials']['length'] ? this['materials'][this['materials']['length'] - 0x1] : void 0x0;
                            },
                            '_finalize': function(bW2) {
                                var bW3 = this['currentMaterial']();
                                if (bW3 && -0x1 === bW3['groupEnd'] && (bW3['groupEnd'] = this['geometry']['vertices']['length'] / 0x3,
                                bW3['groupCount'] = bW3['groupEnd'] - bW3['groupStart'],
                                bW3['inherited'] = !0x1),
                                bW2 && 0x1 < this['materials']['length'])
                                    for (var bW9 = this['materials']['length'] - 0x1; 0x0 <= bW9; bW9--)
                                        0x0 >= this['materials'][bW9]['groupCount'] && this['materials']['splice'](bW9, 0x1);
                                return bW2 && 0x0 === this['materials']['length'] && this['materials']['push']({
                                    'name': '',
                                    'smooth': this['smooth']
                                }),
                                bW3;
                            }
                        },
                        bW9 && bW9['name'] && 'function' == typeof bW9['clone']) {
                            var bWj = bW9['clone'](0x0);
                            bWj['inherited'] = !0x0,
                            this['object']['materials']['push'](bWj);
                        }
                        this['objects']['push'](this['object']);
                    },
                    'finalize': function() {
                        this['object'] && 'function' == typeof this['object']['_finalize'] && this['object']['_finalize'](!0x0);
                    },
                    'parseVertexIndex': function(bW2, bW3) {
                        var bWm = parseInt(bW2, 0xa);
                        return 0x3 * (0x0 <= bWm ? bWm - 0x1 : bWm + bW3 / 0x3);
                    },
                    'parseNormalIndex': function(bW2, bW3) {
                        var bWp = parseInt(bW2, 0xa);
                        return 0x3 * (0x0 <= bWp ? bWp - 0x1 : bWp + bW3 / 0x3);
                    },
                    'parseUVIndex': function(bW2, bW3) {
                        var bWs = parseInt(bW2, 0xa);
                        return 0x2 * (0x0 <= bWs ? bWs - 0x1 : bWs + bW3 / 0x2);
                    },
                    'addVertex': function(bW2, bW3, bWv) {
                        var bWw = this['vertices']
                          , bWx = this['object']['geometry']['vertices'];
                        bWx['push'](bWw[bW2 + 0x0], bWw[bW2 + 0x1], bWw[bW2 + 0x2]),
                        bWx['push'](bWw[bW3 + 0x0], bWw[bW3 + 0x1], bWw[bW3 + 0x2]),
                        bWx['push'](bWw[bWv + 0x0], bWw[bWv + 0x1], bWw[bWv + 0x2]);
                    },
                    'addVertexPoint': function(bW2) {
                        var bW3 = this['vertices'];
                        this['object']['geometry']['vertices']['push'](bW3[bW2 + 0x0], bW3[bW2 + 0x1], bW3[bW2 + 0x2]);
                    },
                    'addVertexLine': function(bW2) {
                        var bW3 = this['vertices'];
                        this['object']['geometry']['vertices']['push'](bW3[bW2 + 0x0], bW3[bW2 + 0x1], bW3[bW2 + 0x2]);
                    },
                    'addNormal': function(bW2, bW3, bWE) {
                        var bWF = this['normals']
                          , bWG = this['object']['geometry']['normals'];
                        bWG['push'](bWF[bW2 + 0x0], bWF[bW2 + 0x1], bWF[bW2 + 0x2]),
                        bWG['push'](bWF[bW3 + 0x0], bWF[bW3 + 0x1], bWF[bW3 + 0x2]),
                        bWG['push'](bWF[bWE + 0x0], bWF[bWE + 0x1], bWF[bWE + 0x2]);
                    },
                    'addColor': function(bW2, bW3, bWJ) {
                        var bWK = this['colors']
                          , bWL = this['object']['geometry']['colors'];
                        bWL['push'](bWK[bW2 + 0x0], bWK[bW2 + 0x1], bWK[bW2 + 0x2]),
                        bWL['push'](bWK[bW3 + 0x0], bWK[bW3 + 0x1], bWK[bW3 + 0x2]),
                        bWL['push'](bWK[bWJ + 0x0], bWK[bWJ + 0x1], bWK[bWJ + 0x2]);
                    },
                    'addUV': function(bW2, bW3, bWO) {
                        var bWP = this['uvs']
                          , bWQ = this['object']['geometry']['uvs'];
                        bWQ['push'](bWP[bW2 + 0x0], bWP[bW2 + 0x1]),
                        bWQ['push'](bWP[bW3 + 0x0], bWP[bW3 + 0x1]),
                        bWQ['push'](bWP[bWO + 0x0], bWP[bWO + 0x1]);
                    },
                    'addUVLine': function(bW2) {
                        var bW3 = this['uvs'];
                        this['object']['geometry']['uvs']['push'](bW3[bW2 + 0x0], bW3[bW2 + 0x1]);
                    },
                    'addFace': function(bW2, bW3, bWV, bWW, bWX, bWY, bWZ, bX0, bX1) {
                        var bX2 = this['vertices']['length']
                          , bX3 = this['parseVertexIndex'](bW2, bX2)
                          , bX4 = this['parseVertexIndex'](bW3, bX2)
                          , bX5 = this['parseVertexIndex'](bWV, bX2);
                        if (this['addVertex'](bX3, bX4, bX5),
                        void 0x0 !== bWW && '' !== bWW) {
                            var bX6 = this['uvs']['length'];
                            bX3 = this['parseUVIndex'](bWW, bX6),
                            bX4 = this['parseUVIndex'](bWX, bX6),
                            bX5 = this['parseUVIndex'](bWY, bX6),
                            this['addUV'](bX3, bX4, bX5);
                        }
                        if (void 0x0 !== bWZ && '' !== bWZ) {
                            var bX7 = this['normals']['length'];
                            bX3 = this['parseNormalIndex'](bWZ, bX7),
                            bX4 = bWZ === bX0 ? bX3 : this['parseNormalIndex'](bX0, bX7),
                            bX5 = bWZ === bX1 ? bX3 : this['parseNormalIndex'](bX1, bX7),
                            this['addNormal'](bX3, bX4, bX5);
                        }
                        0x0 < this['colors']['length'] && this['addColor'](bX3, bX4, bX5);
                    },
                    'addPointGeometry': function(bW2) {
                        this['object']['geometry']['type'] = 'Points';
                        for (var bW3 = this['vertices']['length'], bXa = 0x0, bXb = bW2['length']; bXa < bXb; bXa++)
                            this['addVertexPoint'](this['parseVertexIndex'](bW2[bXa], bW3));
                    },
                    'addLineGeometry': function(bW2, bW3) {
                        this['object']['geometry']['type'] = 'Line';
                        for (var bXe = this['vertices']['length'], bXf = this['uvs']['length'], bXg = 0x0, bXh = bW2['length']; bXg < bXh; bXg++)
                            this['addVertexLine'](this['parseVertexIndex'](bW2[bXg], bXe));
                        var bXi = 0x0;
                        for (bXh = bW3['length']; bXi < bXh; bXi++)
                            this['addUVLine'](this['parseUVIndex'](bW3[bXi], bXf));
                    }
                };
                return bW2['startObject']('', !0x1),
                bW2;
            }
            function bXj(bW3) {
                this['manager'] = void 0x0 === bW3 ? bW2['DefaultLoadingManager'] : bW3,
                this['materials'] = null;
            }
            var bXl = /^[og]\s*(.+)?/
              , bXm = /^mtllib /
              , bXn = /^usemtl /;
            return bXj['prototype'] = {
                'constructor': bXj,
                'load': function(bW3, bXj, bXl, bXm) {
                    var bXn = this
                      , bXt = new bW2['FileLoader'](bXn['manager']);
                    bXt['setPath'](this['path']),
                    bXt['load'](bW3, function(bW2) {
                        bXj(bXn['parse'](bW2));
                    }, bXl, bXm);
                },
                'setPath': function(bW2) {
                    return this['path'] = bW2,
                    this;
                },
                'setMaterials': function(bW2) {
                    return this['materials'] = bW2,
                    this;
                },
                'parse': function(bXj) {
                    console['time']('OBJLoader');
                    var bXy = new bW3();
                    -0x1 !== bXj['indexOf']('\x0d\x0a') && (bXj = bXj['replace'](/\r\n/g, '\x0a')),
                    -0x1 !== bXj['indexOf']('\x5c\x0a') && (bXj = bXj['replace'](/\\\n/g, ''));
                    for (var bXz = bXj['split']('\x0a'), bXA = '', bXB = '', bXC = [], bXD = 'function' == typeof ''['trimLeft'], bXE = 0x0, bXF = bXz['length']; bXE < bXF; bXE++)
                        if (bXA = bXz[bXE],
                        0x0 !== (bXA = bXD ? bXA['trimLeft']() : bXA['trim']())['length'] && '#' !== (bXB = bXA['charAt'](0x0)))
                            if ('v' === bXB) {
                                var bXG = bXA['split'](/\s+/);
                                switch (bXG[0x0]) {
                                case 'v':
                                    bXy['vertices']['push'](parseFloat(bXG[0x1]), parseFloat(bXG[0x2]), parseFloat(bXG[0x3])),
                                    0x8 === bXG['length'] && bXy['colors']['push'](parseFloat(bXG[0x4]), parseFloat(bXG[0x5]), parseFloat(bXG[0x6]));
                                    break;
                                case 'vn':
                                    bXy['normals']['push'](parseFloat(bXG[0x1]), parseFloat(bXG[0x2]), parseFloat(bXG[0x3]));
                                    break;
                                case 'vt':
                                    bXy['uvs']['push'](parseFloat(bXG[0x1]), parseFloat(bXG[0x2]));
                                }
                            } else if ('f' === bXB) {
                                for (var bXH, bXI = bXA['substr'](0x1)['trim']()['split'](/\s+/), bXJ = [], bXK = 0x0, bXL = bXI['length']; bXK < bXL; bXK++)
                                    if (0x0 < (bXH = bXI[bXK])['length']) {
                                        var bXM = bXH['split']('/');
                                        bXJ['push'](bXM);
                                    }
                                var bXN = bXJ[0x0];
                                for (bXK = 0x1,
                                bXL = bXJ['length'] - 0x1; bXK < bXL; bXK++) {
                                    var bXO = bXJ[bXK]
                                      , bXP = bXJ[bXK + 0x1];
                                    bXy['addFace'](bXN[0x0], bXO[0x0], bXP[0x0], bXN[0x1], bXO[0x1], bXP[0x1], bXN[0x2], bXO[0x2], bXP[0x2]);
                                }
                            } else if ('l' === bXB) {
                                var bXQ = bXA['substring'](0x1)['trim']()['split']('\x20')
                                  , bXR = []
                                  , bXS = [];
                                if (-0x1 === bXA['indexOf']('/'))
                                    bXR = bXQ;
                                else
                                    for (var bXT, bXU = 0x0, bXV = bXQ['length']; bXU < bXV; bXU++)
                                        '' !== (bXT = bXQ[bXU]['split']('/'))[0x0] && bXR['push'](bXT[0x0]),
                                        '' !== bXT[0x1] && bXS['push'](bXT[0x1]);
                                bXy['addLineGeometry'](bXR, bXS);
                            } else if ('p' === bXB) {
                                var bXW = bXA['substr'](0x1)['trim']()['split']('\x20');
                                bXy['addPointGeometry'](bXW);
                            } else if (null !== (bXC = bXl['exec'](bXA))) {
                                var bXX = ('\x20' + bXC[0x0]['substr'](0x1)['trim']())['substr'](0x1);
                                bXy['startObject'](bXX);
                            } else if (bXn['test'](bXA))
                                bXy['object']['startMaterial'](bXA['substring'](0x7)['trim'](), bXy['materialLibraries']);
                            else if (bXm['test'](bXA))
                                bXy['materialLibraries']['push'](bXA['substring'](0x7)['trim']());
                            else {
                                if ('s' !== bXB) {
                                    if ('' === bXA)
                                        continue;
                                    throw new Error('THREE.OBJLoader:\x20Unexpected\x20line:\x20\x22' + bXA + '\x22');
                                }
                                if (0x1 < (bXC = bXA['split']('\x20'))['length']) {
                                    var bXY = bXC[0x1]['trim']()['toLowerCase']();
                                    bXy['object']['smooth'] = '0' !== bXY && 'off' !== bXY;
                                } else
                                    bXy['object']['smooth'] = !0x0;
                                (bYc = bXy['object']['currentMaterial']()) && (bYc['smooth'] = bXy['object']['smooth']);
                            }
                    bXy['finalize']();
                    var bXZ = new bW2['Group']();
                    bXZ['materialLibraries'] = []['concat'](bXy['materialLibraries']);
                    for (bXE = 0x0,
                    bXF = bXy['objects']['length']; bXE < bXF; bXE++) {
                        var bY0 = bXy['objects'][bXE]
                          , bY1 = bY0['geometry']
                          , bY2 = bY0['materials']
                          , bY3 = 'Line' === bY1['type']
                          , bY4 = 'Points' === bY1['type']
                          , bY5 = !0x1;
                        if (0x0 !== bY1['vertices']['length']) {
                            var bY6, bY7 = new bW2['BufferGeometry']();
                            bY7['addAttribute']('position', new bW2['Float32BufferAttribute'](bY1['vertices'],0x3)),
                            0x0 < bY1['normals']['length'] ? bY7['addAttribute']('normal', new bW2['Float32BufferAttribute'](bY1['normals'],0x3)) : bY7['computeVertexNormals'](),
                            0x0 < bY1['colors']['length'] && (bY5 = !0x0,
                            bY7['addAttribute']('color', new bW2['Float32BufferAttribute'](bY1['colors'],0x3))),
                            0x0 < bY1['uvs']['length'] && bY7['addAttribute']('uv', new bW2['Float32BufferAttribute'](bY1['uvs'],0x2));
                            for (var bY8 = [], bY9 = 0x0, bYa = bY2['length']; bY9 < bYa; bY9++) {
                                var bYb = bY2[bY9]
                                  , bYc = void 0x0;
                                if (null !== this['materials'])
                                    if (bYc = this['materials']['create'](bYb['name']),
                                    !bY3 || !bYc || bYc instanceof bW2['LineBasicMaterial']) {
                                        if (bY4 && bYc && !(bYc instanceof bW2['PointsMaterial'])) {
                                            var bYd = new bW2['PointsMaterial']({
                                                'size': 0xa,
                                                'sizeAttenuation': !0x1
                                            });
                                            bYe['copy'](bYc),
                                            bYc = bYd;
                                        }
                                    } else {
                                        var bYe = new bW2['LineBasicMaterial']();
                                        bYe['copy'](bYc),
                                        bYe['lights'] = !0x1,
                                        bYc = bYe;
                                    }
                                bYc || ((bYc = bY3 ? new bW2['LineBasicMaterial']() : bY4 ? new bW2['PointsMaterial']({
                                    'size': 0x1,
                                    'sizeAttenuation': !0x1
                                }) : new bW2['MeshPhongMaterial']())['name'] = bYb['name']),
                                bYc['flatShading'] = !bYb['smooth'],
                                bYc['vertexColors'] = bY5 ? bW2['VertexColors'] : bW2['NoColors'],
                                bY8['push'](bYc);
                            }
                            if (0x1 < bY8['length']) {
                                for (bY9 = 0x0,
                                bYa = bY2['length']; bY9 < bYa; bY9++)
                                    bYb = bY2[bY9],
                                    bY7['addGroup'](bYb['groupStart'], bYb['groupCount'], bY9);
                                bY6 = bY3 ? new bW2['LineSegments'](bY7,bY8) : bY4 ? new bW2['Points'](bY7,bY8) : new bW2['Mesh'](bY7,bY8);
                            } else
                                bY6 = bY3 ? new bW2['LineSegments'](bY7,bY8[0x0]) : bY4 ? new bW2['Points'](bY7,bY8[0x0]) : new bW2['Mesh'](bY7,bY8[0x0]);
                            bY6['name'] = bY0['name'],
                            bXZ['add'](bY6);
                        }
                    }
                    return console['timeEnd']('OBJLoader'),
                    bXZ;
                }
            },
            bXj;
        }();
    }
    ;
}
, function(bYf, bYg) {
    bYf['exports'] = function(bYf) {
        bYf['THREEx'] = {},
        bYf['THREEx']['RendererStats'] = function() {
            var bYg = document['createElement']('div');
            bYg['style']['cssText'] = 'width:80px;opacity:0.9;cursor:pointer';
            var bYj = document['createElement']('div');
            bYj['style']['cssText'] = 'padding:0\x200\x203px\x203px;text-align:left;background-color:#200;',
            bYg['appendChild'](bYj);
            var bYk = document['createElement']('div');
            bYk['style']['cssText'] = 'color:#f00;font-family:Helvetica,Arial,sans-serif;font-size:9px;font-weight:bold;line-height:15px',
            bYk['innerHTML'] = 'WebGLRenderer',
            bYj['appendChild'](bYk);
            var bYl = [];
            for (bYk = 0x0; 0x9 > bYk; bYk++)
                bYl[bYk] = document['createElement']('div'),
                bYl[bYk]['style']['cssText'] = 'color:#f00;background-color:#311;font-family:Helvetica,Arial,sans-serif;font-size:9px;font-weight:bold;line-height:15px',
                bYj['appendChild'](bYl[bYk]),
                bYl[bYk]['innerHTML'] = '-';
            var bYm = Date['now']();
            return {
                'domElement': bYg,
                'update': function(bYg) {
                    if (console['assert'](bYg instanceof bYf['WebGLRenderer']),
                    !(Date['now']() - bYm < 0x3e8 / 0x1e)) {
                        bYm = Date['now']();
                        var bYj = 0x0;
                        bYl[bYj++]['textContent'] = '==\x20Memory\x20=====',
                        bYl[bYj++]['textContent'] = 'Programs:\x20' + bYg['info']['memory']['programs'],
                        bYl[bYj++]['textContent'] = 'Geometries:\x20' + bYg['info']['memory']['geometries'],
                        bYl[bYj++]['textContent'] = 'Textures:\x20' + bYg['info']['memory']['textures'],
                        bYl[bYj++]['textContent'] = '==\x20Render\x20=====',
                        bYl[bYj++]['textContent'] = 'Calls:\x20' + bYg['info']['render']['calls'],
                        bYl[bYj++]['textContent'] = 'Vertices:\x20' + bYg['info']['render']['vertices'],
                        bYl[bYj++]['textContent'] = 'Faces:\x20' + bYg['info']['render']['faces'],
                        bYl[bYj++]['textContent'] = 'Points:\x20' + bYg['info']['render']['points'];
                    }
                }
            };
        }
        ,
        bYf['SSAOShader'] = {
            'uniforms': {
                'tDiffuse': {
                    'value': null
                },
                'tDepth': {
                    'value': null
                },
                'size': {
                    'value': new bYf['Vector2'](0x40,0x40)
                },
                'cameraNear': {
                    'value': 0x1
                },
                'cameraFar': {
                    'value': 0x64
                },
                'radius': {
                    'value': 0x28
                },
                'onlyAO': {
                    'value': 0x0
                },
                'aoClamp': {
                    'value': 0x1
                },
                'lumInfluence': {
                    'value': 0.7
                }
            },
            'vertexShader': 'varying\x20vec2\x20vUv;\x0avoid\x20main()\x20{\x0avUv\x20=\x20uv;\x0agl_Position\x20=\x20projectionMatrix\x20*\x20modelViewMatrix\x20*\x20vec4(\x20position,\x201.0\x20);\x0a}',
            'fragmentShader': 'uniform\x20float\x20cameraNear;\x0auniform\x20float\x20cameraFar;\x0a#ifdef\x20USE_LOGDEPTHBUF\x0auniform\x20float\x20logDepthBufFC;\x0a#endif\x0auniform\x20float\x20radius;\x0auniform\x20bool\x20onlyAO;\x0auniform\x20vec2\x20size;\x0auniform\x20float\x20aoClamp;\x0auniform\x20float\x20lumInfluence;\x0auniform\x20sampler2D\x20tDiffuse;\x0auniform\x20sampler2D\x20tDepth;\x0avarying\x20vec2\x20vUv;\x0a#define\x20DL\x202.399963229728653\x0a#define\x20EULER\x202.718281828459045\x0aconst\x20int\x20samples\x20=\x208;\x0aconst\x20bool\x20useNoise\x20=\x20true;\x0aconst\x20float\x20noiseAmount\x20=\x200.0004;\x0aconst\x20float\x20diffArea\x20=\x200.4;\x0aconst\x20float\x20gDisplace\x20=\x200.4;\x0a#include\x20<packing>\x0avec2\x20rand(\x20const\x20vec2\x20coord\x20)\x20{\x0avec2\x20noise;\x0aif\x20(\x20useNoise\x20)\x20{\x0afloat\x20nx\x20=\x20dot\x20(\x20coord,\x20vec2(\x2012.9898,\x2078.233\x20)\x20);\x0afloat\x20ny\x20=\x20dot\x20(\x20coord,\x20vec2(\x2012.9898,\x2078.233\x20)\x20*\x202.0\x20);\x0anoise\x20=\x20clamp(\x20fract\x20(\x2043758.5453\x20*\x20sin(\x20vec2(\x20nx,\x20ny\x20)\x20)\x20),\x200.0,\x201.0\x20);\x0a}\x20else\x20{\x0afloat\x20ff\x20=\x20fract(\x201.0\x20-\x20coord.s\x20*\x20(\x20size.x\x20/\x202.0\x20)\x20);\x0afloat\x20gg\x20=\x20fract(\x20coord.t\x20*\x20(\x20size.y\x20/\x202.0\x20)\x20);\x0anoise\x20=\x20vec2(\x200.25,\x200.75\x20)\x20*\x20vec2(\x20ff\x20)\x20+\x20vec2(\x200.75,\x200.25\x20)\x20*\x20gg;\x0a}\x0areturn\x20(\x20noise\x20*\x202.0\x20\x20-\x201.0\x20)\x20*\x20noiseAmount;\x0a}\x0afloat\x20readDepth(\x20const\x20in\x20vec2\x20coord\x20)\x20{\x0afloat\x20cameraFarPlusNear\x20=\x20cameraFar\x20+\x20cameraNear;\x0afloat\x20cameraFarMinusNear\x20=\x20cameraFar\x20-\x20cameraNear;\x0afloat\x20cameraCoef\x20=\x202.0\x20*\x20cameraNear;\x0a#ifdef\x20USE_LOGDEPTHBUF\x0afloat\x20logz\x20=\x20unpackRGBAToDepth(\x20texture2D(\x20tDepth,\x20coord\x20)\x20);\x0afloat\x20w\x20=\x20pow(2.0,\x20(logz\x20/\x20logDepthBufFC))\x20-\x201.0;\x0afloat\x20z\x20=\x20(logz\x20/\x20w)\x20+\x201.0;\x0a#else\x0afloat\x20z\x20=\x20unpackRGBAToDepth(\x20texture2D(\x20tDepth,\x20coord\x20)\x20);\x0a#endif\x0areturn\x20cameraCoef\x20/\x20(\x20cameraFarPlusNear\x20-\x20z\x20*\x20cameraFarMinusNear\x20);\x0a}\x0afloat\x20compareDepths(\x20const\x20in\x20float\x20depth1,\x20const\x20in\x20float\x20depth2,\x20inout\x20int\x20far\x20)\x20{\x0afloat\x20garea\x20=\x208.0;\x0afloat\x20diff\x20=\x20(\x20depth1\x20-\x20depth2\x20)\x20*\x20100.0;\x0aif\x20(\x20diff\x20<\x20gDisplace\x20)\x20{\x0agarea\x20=\x20diffArea;\x0a}\x20else\x20{\x0afar\x20=\x201;\x0a}\x0afloat\x20dd\x20=\x20diff\x20-\x20gDisplace;\x0afloat\x20gauss\x20=\x20pow(\x20EULER,\x20-2.0\x20*\x20(\x20dd\x20*\x20dd\x20)\x20/\x20(\x20garea\x20*\x20garea\x20)\x20);\x0areturn\x20gauss;\x0a}\x0afloat\x20calcAO(\x20float\x20depth,\x20float\x20dw,\x20float\x20dh\x20)\x20{\x0avec2\x20vv\x20=\x20vec2(\x20dw,\x20dh\x20);\x0avec2\x20coord1\x20=\x20vUv\x20+\x20radius\x20*\x20vv;\x0avec2\x20coord2\x20=\x20vUv\x20-\x20radius\x20*\x20vv;\x0afloat\x20temp1\x20=\x200.0;\x0afloat\x20temp2\x20=\x200.0;\x0aint\x20far\x20=\x200;\x0atemp1\x20=\x20compareDepths(\x20depth,\x20readDepth(\x20coord1\x20),\x20far\x20);\x0aif\x20(\x20far\x20>\x200\x20)\x20{\x0atemp2\x20=\x20compareDepths(\x20readDepth(\x20coord2\x20),\x20depth,\x20far\x20);\x0atemp1\x20+=\x20(\x201.0\x20-\x20temp1\x20)\x20*\x20temp2;\x0a}\x0areturn\x20temp1;\x0a}\x0avoid\x20main()\x20{\x0avec2\x20noise\x20=\x20rand(\x20vUv\x20);\x0afloat\x20depth\x20=\x20readDepth(\x20vUv\x20);\x0afloat\x20tt\x20=\x20clamp(\x20depth,\x20aoClamp,\x201.0\x20);\x0afloat\x20w\x20=\x20(\x201.0\x20/\x20size.x\x20)\x20/\x20tt\x20+\x20(\x20noise.x\x20*\x20(\x201.0\x20-\x20noise.x\x20)\x20);\x0afloat\x20h\x20=\x20(\x201.0\x20/\x20size.y\x20)\x20/\x20tt\x20+\x20(\x20noise.y\x20*\x20(\x201.0\x20-\x20noise.y\x20)\x20);\x0afloat\x20ao\x20=\x200.0;\x0afloat\x20dz\x20=\x201.0\x20/\x20float(\x20samples\x20);\x0afloat\x20l\x20=\x200.0;\x0afloat\x20z\x20=\x201.0\x20-\x20dz\x20/\x202.0;\x0afor\x20(\x20int\x20i\x20=\x200;\x20i\x20<=\x20samples;\x20i\x20++\x20)\x20{\x0afloat\x20r\x20=\x20sqrt(\x201.0\x20-\x20z\x20);\x0afloat\x20pw\x20=\x20cos(\x20l\x20)\x20*\x20r;\x0afloat\x20ph\x20=\x20sin(\x20l\x20)\x20*\x20r;\x0aao\x20+=\x20calcAO(\x20depth,\x20pw\x20*\x20w,\x20ph\x20*\x20h\x20);\x0az\x20=\x20z\x20-\x20dz;\x0al\x20=\x20l\x20+\x20DL;\x0a}\x0aao\x20/=\x20float(\x20samples\x20);\x0aao\x20=\x201.0\x20-\x20ao;\x0avec3\x20color\x20=\x20texture2D(\x20tDiffuse,\x20vUv\x20).rgb;\x0avec3\x20lumcoeff\x20=\x20vec3(\x200.299,\x200.587,\x200.114\x20);\x0afloat\x20lum\x20=\x20dot(\x20color.rgb,\x20lumcoeff\x20);\x0avec3\x20luminance\x20=\x20vec3(\x20lum\x20);\x0avec3\x20final\x20=\x20vec3(\x20color\x20*\x20mix(\x20vec3(\x20ao\x20),\x20vec3(\x201.0\x20),\x20luminance\x20*\x20lumInfluence\x20)\x20);\x0aif\x20(\x20onlyAO\x20)\x20{\x0afinal\x20=\x20vec3(\x20mix(\x20vec3(\x20ao\x20),\x20vec3(\x201.0\x20),\x20luminance\x20*\x20lumInfluence\x20)\x20);\x0a}\x0agl_FragColor\x20=\x20vec4(\x20final,\x200.5\x20);\x0a}'
        },
        bYf['CopyShader'] = {
            'uniforms': {
                'tDiffuse': {
                    'value': null
                },
                'opacity': {
                    'value': 0x1
                }
            },
            'vertexShader': 'varying\x20vec2\x20vUv;\x0avoid\x20main()\x20{\x0avUv\x20=\x20uv;\x0agl_Position\x20=\x20projectionMatrix\x20*\x20modelViewMatrix\x20*\x20vec4(\x20position,\x201.0\x20);\x0a}',
            'fragmentShader': 'uniform\x20float\x20opacity;\x0auniform\x20sampler2D\x20tDiffuse;\x0avarying\x20vec2\x20vUv;\x0avoid\x20main()\x20{\x0avec4\x20texel\x20=\x20texture2D(\x20tDiffuse,\x20vUv\x20);\x0agl_FragColor\x20=\x20opacity\x20*\x20texel;\x0a}'
        },
        bYf['EffectComposer'] = function(bYg, bYq) {
            if (this['renderer'] = bYg,
            void 0x0 === bYq) {
                var bYr = {
                    'minFilter': bYf['LinearFilter'],
                    'magFilter': bYf['LinearFilter'],
                    'format': bYf['RGBAFormat'],
                    'stencilBuffer': !0x1
                }
                  , bYs = bYg['getDrawingBufferSize']();
                (bYq = new bYf['WebGLRenderTarget'](bYs['width'],bYs['height'],bYr))['texture']['name'] = 'EffectComposer.rt1';
            }
            this['renderTarget1'] = bYq,
            this['renderTarget2'] = bYq['clone'](),
            this['renderTarget2']['texture']['name'] = 'EffectComposer.rt2',
            this['writeBuffer'] = this['renderTarget1'],
            this['readBuffer'] = this['renderTarget2'],
            this['passes'] = [],
            void 0x0 === bYf['CopyShader'] && console['error']('THREE.EffectComposer\x20relies\x20on\x20THREE.CopyShader'),
            void 0x0 === bYf['ShaderPass'] && console['error']('THREE.EffectComposer\x20relies\x20on\x20THREE.ShaderPass'),
            this['copyPass'] = new bYf['ShaderPass'](bYf['CopyShader']);
        }
        ,
        Object['assign'](bYf['EffectComposer']['prototype'], {
            'swapBuffers': function() {
                var bYf = this['readBuffer'];
                this['readBuffer'] = this['writeBuffer'],
                this['writeBuffer'] = bYf;
            },
            'addPass': function(bYf) {
                this['passes']['push'](bYf);
                var bYg = this['renderer']['getDrawingBufferSize']();
                bYf['setSize'](bYg['width'], bYg['height']);
            },
            'insertPass': function(bYf, bYg) {
                this['passes']['splice'](bYg, 0x0, bYf);
            },
            'render': function(bYg) {
                var bYz, bYA = !0x1, bYB = this['passes']['length'];
                for (bYz = 0x0; bYz < bYB; bYz++) {
                    var bYC = this['passes'][bYz];
                    if (!0x1 !== bYC['enabled']) {
                        if (bYC['render'](this['renderer'], this['writeBuffer'], this['readBuffer'], bYg, bYA),
                        bYC['needsSwap']) {
                            if (bYA) {
                                var bYD = this['renderer']['context'];
                                bYD['stencilFunc'](bYD['NOTEQUAL'], 0x1, 0xffffffff),
                                this['copyPass']['render'](this['renderer'], this['writeBuffer'], this['readBuffer'], bYg),
                                bYD['stencilFunc'](bYD['EQUAL'], 0x1, 0xffffffff);
                            }
                            this['swapBuffers']();
                        }
                        void 0x0 !== bYf['MaskPass'] && (bYC instanceof bYf['MaskPass'] ? bYA = !0x0 : bYC instanceof bYf['ClearMaskPass'] && (bYA = !0x1));
                    }
                }
            },
            'reset': function(bYf) {
                if (void 0x0 === bYf) {
                    var bYg = this['renderer']['getDrawingBufferSize']();
                    (bYf = this['renderTarget1']['clone']())['setSize'](bYg['width'], bYg['height']);
                }
                this['renderTarget1']['dispose'](),
                this['renderTarget2']['dispose'](),
                this['renderTarget1'] = bYf,
                this['renderTarget2'] = bYf['clone'](),
                this['writeBuffer'] = this['renderTarget1'],
                this['readBuffer'] = this['renderTarget2'];
            },
            'setSize': function(bYf, bYg) {
                this['renderTarget1']['setSize'](bYf, bYg),
                this['renderTarget2']['setSize'](bYf, bYg);
                for (var bYI = 0x0; bYI < this['passes']['length']; bYI++)
                    this['passes'][bYI]['setSize'](bYf, bYg);
            }
        }),
        bYf['Pass'] = function() {
            this['needsSwap'] = this['enabled'] = !0x0,
            this['renderToScreen'] = this['clear'] = !0x1;
        }
        ,
        Object['assign'](bYf['Pass']['prototype'], {
            'setSize': function() {},
            'render': function() {
                console['error']('THREE.Pass:\x20.render()\x20must\x20be\x20implemented\x20in\x20derived\x20pass.');
            }
        }),
        bYf['RenderPass'] = function(bYg, bYK, bYL, bYM, bYN) {
            bYf['Pass']['call'](this),
            this['scene'] = bYg,
            this['camera'] = bYK,
            this['overrideMaterial'] = bYL,
            this['clearColor'] = bYM,
            this['clearAlpha'] = void 0x0 === bYN ? 0x0 : bYN,
            this['clear'] = !0x0,
            this['needsSwap'] = this['clearDepth'] = !0x1;
        }
        ,
        bYf['RenderPass']['prototype'] = Object['assign'](Object['create'](bYf['Pass']['prototype']), {
            'constructor': bYf['RenderPass'],
            'render': function(bYf, bYg, bYQ) {
                if (bYg = bYf['autoClear'],
                bYf['autoClear'] = !0x1,
                this['scene']['overrideMaterial'] = this['overrideMaterial'],
                this['clearColor']) {
                    var bYR = bYf['getClearColor']()['getHex']()
                      , bYS = bYf['getClearAlpha']();
                    bYf['setClearColor'](this['clearColor'], this['clearAlpha']);
                }
                this['clearDepth'] && bYf['clearDepth'](),
                bYf['render'](this['scene'], this['camera'], this['renderToScreen'] ? null : bYQ, this['clear']),
                this['clearColor'] && bYf['setClearColor'](bYR, bYS),
                this['scene']['overrideMaterial'] = null,
                bYf['autoClear'] = bYg;
            }
        }),
        bYf['ShaderPass'] = function(bYg, bYU) {
            bYf['Pass']['call'](this),
            this['textureID'] = void 0x0 === bYU ? 'tDiffuse' : bYU,
            bYg instanceof bYf['ShaderMaterial'] ? (this['uniforms'] = bYg['uniforms'],
            this['material'] = bYg) : bYg && (this['uniforms'] = bYf['UniformsUtils']['clone'](bYg['uniforms']),
            this['material'] = new bYf['ShaderMaterial']({
                'defines': Object['assign']({}, bYg['defines']),
                'uniforms': this['uniforms'],
                'vertexShader': bYg['vertexShader'],
                'fragmentShader': bYg['fragmentShader']
            })),
            this['camera'] = new bYf['OrthographicCamera'](-0x1,0x1,0x1,-0x1,0x0,0x1),
            this['scene'] = new bYf['Scene'](),
            this['quad'] = new bYf['Mesh'](new bYf['PlaneBufferGeometry'](0x2,0x2),null),
            this['quad']['frustumCulled'] = !0x1,
            this['scene']['add'](this['quad']);
        }
        ,
        bYf['ShaderPass']['prototype'] = Object['assign'](Object['create'](bYf['Pass']['prototype']), {
            'constructor': bYf['ShaderPass'],
            'render': function(bYf, bYg, bYX) {
                this['uniforms'][this['textureID']] && (this['uniforms'][this['textureID']]['value'] = bYX['texture']),
                this['quad']['material'] = this['material'],
                this['renderToScreen'] ? bYf['render'](this['scene'], this['camera']) : bYf['render'](this['scene'], this['camera'], bYg, this['clear']);
            }
        }),
        bYf['MaskPass'] = function(bYg, bYZ) {
            bYf['Pass']['call'](this),
            this['scene'] = bYg,
            this['camera'] = bYZ,
            this['clear'] = !0x0,
            this['inverse'] = this['needsSwap'] = !0x1;
        }
        ,
        bYf['MaskPass']['prototype'] = Object['assign'](Object['create'](bYf['Pass']['prototype']), {
            'constructor': bYf['MaskPass'],
            'render': function(bYf, bYg, bZ2, bZ3, bZ4) {
                if (bZ3 = bYf['context'],
                (bZ4 = bYf['state'])['buffers']['color']['setMask'](!0x1),
                bZ4['buffers']['depth']['setMask'](!0x1),
                bZ4['buffers']['color']['setLocked'](!0x0),
                bZ4['buffers']['depth']['setLocked'](!0x0),
                this['inverse'])
                    var bZ5 = 0x0
                      , bZ6 = 0x1;
                else
                    bZ5 = 0x1,
                    bZ6 = 0x0;
                bZ4['buffers']['stencil']['setTest'](!0x0),
                bZ4['buffers']['stencil']['setOp'](bZ3['REPLACE'], bZ3['REPLACE'], bZ3['REPLACE']),
                bZ4['buffers']['stencil']['setFunc'](bZ3['ALWAYS'], bZ5, 0xffffffff),
                bZ4['buffers']['stencil']['setClear'](bZ6),
                bYf['render'](this['scene'], this['camera'], bZ2, this['clear']),
                bYf['render'](this['scene'], this['camera'], bYg, this['clear']),
                bZ4['buffers']['color']['setLocked'](!0x1),
                bZ4['buffers']['depth']['setLocked'](!0x1),
                bZ4['buffers']['stencil']['setFunc'](bZ3['EQUAL'], 0x1, 0xffffffff),
                bZ4['buffers']['stencil']['setOp'](bZ3['KEEP'], bZ3['KEEP'], bZ3['KEEP']);
            }
        }),
        bYf['ClearMaskPass'] = function() {
            bYf['Pass']['call'](this),
            this['needsSwap'] = !0x1;
        }
        ,
        bYf['ClearMaskPass']['prototype'] = Object['create'](bYf['Pass']['prototype']),
        Object['assign'](bYf['ClearMaskPass']['prototype'], {
            'render': function(bYf) {
                bYf['state']['buffers']['stencil']['setTest'](!0x1);
            }
        }),
        bYf['SSAOPass'] = function(bYg, bZ9, bZa, bZb) {
            return void 0x0 === bYf['SSAOShader'] ? (console['warn']('THREE.SSAOPass\x20depends\x20on\x20THREE.SSAOShader'),
            new bYf['ShaderPass']()) : (bYf['ShaderPass']['call'](this, bYf['SSAOShader']),
            this['width'] = void 0x0 === bZa ? 0x80 : bZa,
            this['height'] = void 0x0 === bZb ? 0x80 : bZb,
            this['renderToScreen'] = !0x1,
            this['camera2'] = bZ9,
            this['scene2'] = bYg,
            this['depthMaterial'] = new bYf['MeshDepthMaterial'](),
            this['depthMaterial']['depthPacking'] = bYf['RGBADepthPacking'],
            this['depthMaterial']['blending'] = bYf['NoBlending'],
            this['depthRenderTarget'] = new bYf['WebGLRenderTarget'](this['width'],this['height'],{
                'minFilter': bYf['LinearFilter'],
                'magFilter': bYf['LinearFilter']
            }),
            this['uniforms']['tDepth']['value'] = this['depthRenderTarget']['texture'],
            this['uniforms']['size']['value']['set'](this['width'], this['height']),
            this['uniforms']['cameraNear']['value'] = this['camera2']['near'],
            this['uniforms']['cameraFar']['value'] = this['camera2']['far'],
            this['uniforms']['radius']['value'] = 0x4,
            this['uniforms']['onlyAO']['value'] = !0x1,
            this['uniforms']['aoClamp']['value'] = 0.25,
            this['uniforms']['lumInfluence']['value'] = 0.7,
            void Object['defineProperties'](this, {
                'radius': {
                    'get': function() {
                        return this['uniforms']['radius']['value'];
                    },
                    'set': function(bYf) {
                        this['uniforms']['radius']['value'] = bYf;
                    }
                },
                'onlyAO': {
                    'get': function() {
                        return this['uniforms']['onlyAO']['value'];
                    },
                    'set': function(bYf) {
                        this['uniforms']['onlyAO']['value'] = bYf;
                    }
                },
                'aoClamp': {
                    'get': function() {
                        return this['uniforms']['aoClamp']['value'];
                    },
                    'set': function(bYf) {
                        this['uniforms']['aoClamp']['value'] = bYf;
                    }
                },
                'lumInfluence': {
                    'get': function() {
                        return this['uniforms']['lumInfluence']['value'];
                    },
                    'set': function(bYf) {
                        this['uniforms']['lumInfluence']['value'] = bYf;
                    }
                }
            }));
        }
        ,
        bYf['SSAOPass']['prototype'] = Object['create'](bYf['ShaderPass']['prototype']),
        bYf['SSAOPass']['prototype']['render'] = function(bYg, bZh, bZi, bZj, bZk) {
            this['scene2']['overrideMaterial'] = this['depthMaterial'],
            bYg['render'](this['scene2'], this['camera2'], this['depthRenderTarget'], !0x0),
            this['scene2']['overrideMaterial'] = null,
            bYf['ShaderPass']['prototype']['render']['call'](this, bYg, bZh, bZi, bZj, bZk);
        }
        ,
        bYf['SSAOPass']['prototype']['setScene'] = function(bYf) {
            this['scene2'] = bYf;
        }
        ,
        bYf['SSAOPass']['prototype']['setCamera'] = function(bYf) {
            this['camera2'] = bYf,
            this['uniforms']['cameraNear']['value'] = this['camera2']['near'],
            this['uniforms']['cameraFar']['value'] = this['camera2']['far'];
        }
        ,
        bYf['SSAOPass']['prototype']['setSize'] = function(bYf, bYg) {
            this['width'] = bYf,
            this['height'] = bYg,
            this['uniforms']['size']['value']['set'](this['width'], this['height']),
            this['depthRenderTarget']['setSize'](this['width'], this['height']);
        }
        ,
        bYf['LuminosityHighPassShader'] = {
            'shaderID': 'luminosityHighPass',
            'uniforms': {
                'tDiffuse': {
                    'type': 't',
                    'value': null
                },
                'luminosityThreshold': {
                    'type': 'f',
                    'value': 0x1
                },
                'smoothWidth': {
                    'type': 'f',
                    'value': 0x1
                },
                'defaultColor': {
                    'type': 'c',
                    'value': new bYf['Color'](0x0)
                },
                'defaultOpacity': {
                    'type': 'f',
                    'value': 0x0
                }
            },
            'vertexShader': 'varying\x20vec2\x20vUv;\x0avoid\x20main()\x20{\x0avUv\x20=\x20uv;\x0agl_Position\x20=\x20projectionMatrix\x20*\x20modelViewMatrix\x20*\x20vec4(\x20position,\x201.0\x20);\x0a}',
            'fragmentShader': 'uniform\x20sampler2D\x20tDiffuse;\x0auniform\x20vec3\x20defaultColor;\x0auniform\x20float\x20defaultOpacity;\x0auniform\x20float\x20luminosityThreshold;\x0auniform\x20float\x20smoothWidth;\x0avarying\x20vec2\x20vUv;\x0avoid\x20main()\x20{\x0avec4\x20texel\x20=\x20texture2D(\x20tDiffuse,\x20vUv\x20);\x0avec3\x20luma\x20=\x20vec3(\x200.299,\x200.587,\x200.114\x20);\x0afloat\x20v\x20=\x20dot(\x20texel.xyz,\x20luma\x20);\x0avec4\x20outputColor\x20=\x20vec4(\x20defaultColor.rgb,\x20defaultOpacity\x20);\x0afloat\x20alpha\x20=\x20smoothstep(\x20luminosityThreshold,\x20luminosityThreshold\x20+\x20smoothWidth,\x20v\x20);\x0agl_FragColor\x20=\x20mix(\x20outputColor,\x20texel,\x20alpha\x20);\x0a}'
        },
        bYf['UnrealBloomPass'] = function(bYg, bZq, bZr, bZs) {
            bYf['Pass']['call'](this),
            this['strength'] = void 0x0 === bZq ? 0x1 : bZq,
            this['radius'] = bZr,
            this['threshold'] = bZs,
            this['resolution'] = void 0x0 === bYg ? new bYf['Vector2'](0x100,0x100) : new bYf['Vector2'](bYg['x'],bYg['y']),
            this['clearColor'] = new bYf['Color'](0x0,0x0,0x0);
            var bZt = {
                'minFilter': bYf['LinearFilter'],
                'magFilter': bYf['LinearFilter'],
                'format': bYf['RGBAFormat']
            };
            this['renderTargetsHorizontal'] = [],
            this['renderTargetsVertical'] = [],
            this['nMips'] = 0x5,
            bYg = Math['round'](this['resolution']['x'] / 0x2),
            bZr = Math['round'](this['resolution']['y'] / 0x2),
            this['renderTargetBright'] = new bYf['WebGLRenderTarget'](bYg,bZr,bZt),
            this['renderTargetBright']['texture']['name'] = 'UnrealBloomPass.bright',
            this['renderTargetBright']['texture']['generateMipmaps'] = !0x1;
            for (var bZu, bZv = 0x0; bZv < this['nMips']; bZv++)
                (bZu = new bYf['WebGLRenderTarget'](bYg,bZr,bZt))['texture']['name'] = 'UnrealBloomPass.h' + bZv,
                bZu['texture']['generateMipmaps'] = !0x1,
                this['renderTargetsHorizontal']['push'](bZu),
                (bZu = new bYf['WebGLRenderTarget'](bYg,bZr,bZt))['texture']['name'] = 'UnrealBloomPass.v' + bZv,
                bZu['texture']['generateMipmaps'] = !0x1,
                this['renderTargetsVertical']['push'](bZu),
                bYg = Math['round'](bYg / 0x2),
                bZr = Math['round'](bZr / 0x2);
            for (void 0x0 === bYf['LuminosityHighPassShader'] && console['error']('THREE.UnrealBloomPass\x20relies\x20on\x20THREE.LuminosityHighPassShader'),
            bYg = bYf['LuminosityHighPassShader'],
            this['highPassUniforms'] = bYf['UniformsUtils']['clone'](bYg['uniforms']),
            this['highPassUniforms']['luminosityThreshold']['value'] = bZs,
            this['highPassUniforms']['smoothWidth']['value'] = 0.01,
            this['materialHighPassFilter'] = new bYf['ShaderMaterial']({
                'uniforms': this['highPassUniforms'],
                'vertexShader': bYg['vertexShader'],
                'fragmentShader': bYg['fragmentShader'],
                'defines': {}
            }),
            this['separableBlurMaterials'] = [],
            bZs = [0x3, 0x5, 0x7, 0x9, 0xb],
            bYg = Math['round'](this['resolution']['x'] / 0x2),
            bZr = Math['round'](this['resolution']['y'] / 0x2),
            bZv = 0x0; bZv < this['nMips']; bZv++)
                this['separableBlurMaterials']['push'](this['getSeperableBlurMaterial'](bZs[bZv])),
                this['separableBlurMaterials'][bZv]['uniforms']['texSize']['value'] = new bYf['Vector2'](bYg,bZr),
                bYg = Math['round'](bYg / 0x2),
                bZr = Math['round'](bZr / 0x2);
            this['compositeMaterial'] = this['getCompositeMaterial'](this['nMips']),
            this['compositeMaterial']['uniforms']['blurTexture1']['value'] = this['renderTargetsVertical'][0x0]['texture'],
            this['compositeMaterial']['uniforms']['blurTexture2']['value'] = this['renderTargetsVertical'][0x1]['texture'],
            this['compositeMaterial']['uniforms']['blurTexture3']['value'] = this['renderTargetsVertical'][0x2]['texture'],
            this['compositeMaterial']['uniforms']['blurTexture4']['value'] = this['renderTargetsVertical'][0x3]['texture'],
            this['compositeMaterial']['uniforms']['blurTexture5']['value'] = this['renderTargetsVertical'][0x4]['texture'],
            this['compositeMaterial']['uniforms']['bloomStrength']['value'] = bZq,
            this['compositeMaterial']['uniforms']['bloomRadius']['value'] = 0.1,
            this['compositeMaterial']['needsUpdate'] = !0x0,
            this['compositeMaterial']['uniforms']['bloomFactors']['value'] = [0x1, 0.8, 0.6, 0.4, 0.2],
            this['bloomTintColors'] = [new bYf['Vector3'](0x1,0x1,0x1), new bYf['Vector3'](0x1,0x1,0x1), new bYf['Vector3'](0x1,0x1,0x1), new bYf['Vector3'](0x1,0x1,0x1), new bYf['Vector3'](0x1,0x1,0x1)],
            this['compositeMaterial']['uniforms']['bloomTintColors']['value'] = this['bloomTintColors'],
            void 0x0 === bYf['CopyShader'] && console['error']('THREE.BloomPass\x20relies\x20on\x20THREE.CopyShader'),
            bZq = bYf['CopyShader'],
            this['copyUniforms'] = bYf['UniformsUtils']['clone'](bZq['uniforms']),
            this['copyUniforms']['opacity']['value'] = 0x1,
            this['materialCopy'] = new bYf['ShaderMaterial']({
                'uniforms': this['copyUniforms'],
                'vertexShader': bZq['vertexShader'],
                'fragmentShader': bZq['fragmentShader'],
                'blending': bYf['AdditiveBlending'],
                'depthTest': !0x1,
                'depthWrite': !0x1,
                'transparent': !0x0
            }),
            this['enabled'] = !0x0,
            this['needsSwap'] = !0x1,
            this['oldClearColor'] = new bYf['Color'](),
            this['oldClearAlpha'] = 0x1,
            this['camera'] = new bYf['OrthographicCamera'](-0x1,0x1,0x1,-0x1,0x0,0x1),
            this['scene'] = new bYf['Scene'](),
            this['basic'] = new bYf['MeshBasicMaterial'](),
            this['quad'] = new bYf['Mesh'](new bYf['PlaneBufferGeometry'](0x2,0x2),null),
            this['quad']['frustumCulled'] = !0x1,
            this['scene']['add'](this['quad']);
        }
        ,
        bYf['UnrealBloomPass']['prototype'] = Object['assign'](Object['create'](bYf['Pass']['prototype']), {
            'constructor': bYf['UnrealBloomPass'],
            'dispose': function() {
                for (var bYf = 0x0; bYf < this['renderTargetsHorizontal']['length']; bYf++)
                    this['renderTargetsHorizontal'][bYf]['dispose']();
                for (bYf = 0x0; bYf < this['renderTargetsVertical']['length']; bYf++)
                    this['renderTargetsVertical'][bYf]['dispose']();
                this['renderTargetBright']['dispose']();
            },
            'setSize': function(bYg, bZy) {
                var bZz = Math['round'](bYg / 0x2)
                  , bZA = Math['round'](bZy / 0x2);
                this['renderTargetBright']['setSize'](bZz, bZA);
                for (var bZB = 0x0; bZB < this['nMips']; bZB++)
                    this['renderTargetsHorizontal'][bZB]['setSize'](bZz, bZA),
                    this['renderTargetsVertical'][bZB]['setSize'](bZz, bZA),
                    this['separableBlurMaterials'][bZB]['uniforms']['texSize']['value'] = new bYf['Vector2'](bZz,bZA),
                    bZz = Math['round'](bZz / 0x2),
                    bZA = Math['round'](bZA / 0x2);
            },
            'render': function(bYg, bZD, bZE, bZF, bZG) {
                this['oldClearColor']['copy'](bYg['getClearColor']()),
                this['oldClearAlpha'] = bYg['getClearAlpha'](),
                bZD = bYg['autoClear'],
                bYg['autoClear'] = !0x1,
                bYg['setClearColor'](this['clearColor'], 0x0),
                bZG && bYg['context']['disable'](bYg['context']['STENCIL_TEST']),
                this['renderToScreen'] && (this['quad']['material'] = this['basic'],
                this['basic']['map'] = bZE['texture'],
                bYg['render'](this['scene'], this['camera'], void 0x0, !0x0)),
                this['highPassUniforms']['tDiffuse']['value'] = bZE['texture'],
                this['highPassUniforms']['luminosityThreshold']['value'] = this['threshold'],
                this['quad']['material'] = this['materialHighPassFilter'],
                bYg['render'](this['scene'], this['camera'], this['renderTargetBright'], !0x0),
                bZF = this['renderTargetBright'];
                for (var bZH = 0x0; bZH < this['nMips']; bZH++)
                    this['quad']['material'] = this['separableBlurMaterials'][bZH],
                    this['separableBlurMaterials'][bZH]['uniforms']['colorTexture']['value'] = bZF['texture'],
                    this['separableBlurMaterials'][bZH]['uniforms']['direction']['value'] = bYf['UnrealBloomPass']['BlurDirectionX'],
                    bYg['render'](this['scene'], this['camera'], this['renderTargetsHorizontal'][bZH], !0x0),
                    this['separableBlurMaterials'][bZH]['uniforms']['colorTexture']['value'] = this['renderTargetsHorizontal'][bZH]['texture'],
                    this['separableBlurMaterials'][bZH]['uniforms']['direction']['value'] = bYf['UnrealBloomPass']['BlurDirectionY'],
                    bYg['render'](this['scene'], this['camera'], this['renderTargetsVertical'][bZH], !0x0),
                    bZF = this['renderTargetsVertical'][bZH];
                this['quad']['material'] = this['compositeMaterial'],
                this['compositeMaterial']['uniforms']['bloomStrength']['value'] = this['strength'],
                this['compositeMaterial']['uniforms']['bloomRadius']['value'] = this['radius'],
                this['compositeMaterial']['uniforms']['bloomTintColors']['value'] = this['bloomTintColors'],
                bYg['render'](this['scene'], this['camera'], this['renderTargetsHorizontal'][0x0], !0x0),
                this['quad']['material'] = this['materialCopy'],
                this['copyUniforms']['tDiffuse']['value'] = this['renderTargetsHorizontal'][0x0]['texture'],
                bZG && bYg['context']['enable'](bYg['context']['STENCIL_TEST']),
                this['renderToScreen'] ? bYg['render'](this['scene'], this['camera'], void 0x0, !0x1) : bYg['render'](this['scene'], this['camera'], bZE, !0x1),
                bYg['setClearColor'](this['oldClearColor'], this['oldClearAlpha']),
                bYg['autoClear'] = bZD;
            },
            'getSeperableBlurMaterial': function(bYg) {
                return new bYf['ShaderMaterial']({
                    'defines': {
                        'KERNEL_RADIUS': bYg,
                        'SIGMA': bYg
                    },
                    'uniforms': {
                        'colorTexture': {
                            'value': null
                        },
                        'texSize': {
                            'value': new bYf['Vector2'](0.5,0.5)
                        },
                        'direction': {
                            'value': new bYf['Vector2'](0.5,0.5)
                        }
                    },
                    'vertexShader': 'varying\x20vec2\x20vUv;\x0a\x09\x09\x09\x09void\x20main()\x20{\x0a\x09\x09\x09\x09\x09vUv\x20=\x20uv;\x0a\x09\x09\x09\x09\x09gl_Position\x20=\x20projectionMatrix\x20*\x20modelViewMatrix\x20*\x20vec4(\x20position,\x201.0\x20);\x0a\x09\x09\x09\x09}',
                    'fragmentShader': '#include\x20<common>\x09\x09\x09\x09varying\x20vec2\x20vUv;\x0a\x09\x09\x09\x09uniform\x20sampler2D\x20colorTexture;\x0a\x09\x09\x09\x09uniform\x20vec2\x20texSize;\x09\x09\x09\x09uniform\x20vec2\x20direction;\x09\x09\x09\x09\x09\x09\x09\x09float\x20gaussianPdf(in\x20float\x20x,\x20in\x20float\x20sigma)\x20{\x09\x09\x09\x09\x09return\x200.39894\x20*\x20exp(\x20-0.5\x20*\x20x\x20*\x20x/(\x20sigma\x20*\x20sigma))/sigma;\x09\x09\x09\x09}\x09\x09\x09\x09void\x20main()\x20{\x0a\x09\x09\x09\x09\x09vec2\x20invSize\x20=\x201.0\x20/\x20texSize;\x09\x09\x09\x09\x09float\x20fSigma\x20=\x20float(SIGMA);\x09\x09\x09\x09\x09float\x20weightSum\x20=\x20gaussianPdf(0.0,\x20fSigma);\x09\x09\x09\x09\x09vec3\x20diffuseSum\x20=\x20texture2D(\x20colorTexture,\x20vUv).rgb\x20*\x20weightSum;\x09\x09\x09\x09\x09for(\x20int\x20i\x20=\x201;\x20i\x20<\x20KERNEL_RADIUS;\x20i\x20++\x20)\x20{\x09\x09\x09\x09\x09\x09float\x20x\x20=\x20float(i);\x09\x09\x09\x09\x09\x09float\x20w\x20=\x20gaussianPdf(x,\x20fSigma);\x09\x09\x09\x09\x09\x09vec2\x20uvOffset\x20=\x20direction\x20*\x20invSize\x20*\x20x;\x09\x09\x09\x09\x09\x09vec3\x20sample1\x20=\x20texture2D(\x20colorTexture,\x20vUv\x20+\x20uvOffset).rgb;\x09\x09\x09\x09\x09\x09vec3\x20sample2\x20=\x20texture2D(\x20colorTexture,\x20vUv\x20-\x20uvOffset).rgb;\x09\x09\x09\x09\x09\x09diffuseSum\x20+=\x20(sample1\x20+\x20sample2)\x20*\x20w;\x09\x09\x09\x09\x09\x09weightSum\x20+=\x202.0\x20*\x20w;\x09\x09\x09\x09\x09}\x09\x09\x09\x09\x09gl_FragColor\x20=\x20vec4(diffuseSum/weightSum,\x201.0);\x0a\x09\x09\x09\x09}'
                });
            },
            'getCompositeMaterial': function(bYg) {
                return new bYf['ShaderMaterial']({
                    'defines': {
                        'NUM_MIPS': bYg
                    },
                    'uniforms': {
                        'blurTexture1': {
                            'value': null
                        },
                        'blurTexture2': {
                            'value': null
                        },
                        'blurTexture3': {
                            'value': null
                        },
                        'blurTexture4': {
                            'value': null
                        },
                        'blurTexture5': {
                            'value': null
                        },
                        'dirtTexture': {
                            'value': null
                        },
                        'bloomStrength': {
                            'value': 0x1
                        },
                        'bloomFactors': {
                            'value': null
                        },
                        'bloomTintColors': {
                            'value': null
                        },
                        'bloomRadius': {
                            'value': 0x0
                        }
                    },
                    'vertexShader': 'varying\x20vec2\x20vUv;\x0a\x09\x09\x09\x09void\x20main()\x20{\x0a\x09\x09\x09\x09\x09vUv\x20=\x20uv;\x0a\x09\x09\x09\x09\x09gl_Position\x20=\x20projectionMatrix\x20*\x20modelViewMatrix\x20*\x20vec4(\x20position,\x201.0\x20);\x0a\x09\x09\x09\x09}',
                    'fragmentShader': 'varying\x20vec2\x20vUv;\x09\x09\x09\x09uniform\x20sampler2D\x20blurTexture1;\x09\x09\x09\x09uniform\x20sampler2D\x20blurTexture2;\x09\x09\x09\x09uniform\x20sampler2D\x20blurTexture3;\x09\x09\x09\x09uniform\x20sampler2D\x20blurTexture4;\x09\x09\x09\x09uniform\x20sampler2D\x20blurTexture5;\x09\x09\x09\x09uniform\x20sampler2D\x20dirtTexture;\x09\x09\x09\x09uniform\x20float\x20bloomStrength;\x09\x09\x09\x09uniform\x20float\x20bloomRadius;\x09\x09\x09\x09uniform\x20float\x20bloomFactors[NUM_MIPS];\x09\x09\x09\x09uniform\x20vec3\x20bloomTintColors[NUM_MIPS];\x09\x09\x09\x09\x09\x09\x09\x09float\x20lerpBloomFactor(const\x20in\x20float\x20factor)\x20{\x20\x09\x09\x09\x09\x09float\x20mirrorFactor\x20=\x201.2\x20-\x20factor;\x09\x09\x09\x09\x09return\x20mix(factor,\x20mirrorFactor,\x20bloomRadius);\x09\x09\x09\x09}\x09\x09\x09\x09\x09\x09\x09\x09void\x20main()\x20{\x09\x09\x09\x09\x09gl_FragColor\x20=\x20bloomStrength\x20*\x20(\x20lerpBloomFactor(bloomFactors[0])\x20*\x20vec4(bloomTintColors[0],\x201.0)\x20*\x20texture2D(blurTexture1,\x20vUv)\x20+\x20\x09\x09\x09\x09\x09\x09\x09\x09\x09\x09\x09\x09\x09\x20lerpBloomFactor(bloomFactors[1])\x20*\x20vec4(bloomTintColors[1],\x201.0)\x20*\x20texture2D(blurTexture2,\x20vUv)\x20+\x20\x09\x09\x09\x09\x09\x09\x09\x09\x09\x09\x09\x09\x09\x20lerpBloomFactor(bloomFactors[2])\x20*\x20vec4(bloomTintColors[2],\x201.0)\x20*\x20texture2D(blurTexture3,\x20vUv)\x20+\x20\x09\x09\x09\x09\x09\x09\x09\x09\x09\x09\x09\x09\x09\x20lerpBloomFactor(bloomFactors[3])\x20*\x20vec4(bloomTintColors[3],\x201.0)\x20*\x20texture2D(blurTexture4,\x20vUv)\x20+\x20\x09\x09\x09\x09\x09\x09\x09\x09\x09\x09\x09\x09\x09\x20lerpBloomFactor(bloomFactors[4])\x20*\x20vec4(bloomTintColors[4],\x201.0)\x20*\x20texture2D(blurTexture5,\x20vUv)\x20);\x09\x09\x09\x09}'
                });
            }
        }),
        bYf['UnrealBloomPass']['BlurDirectionX'] = new bYf['Vector2'](0x1,0x0),
        bYf['UnrealBloomPass']['BlurDirectionY'] = new bYf['Vector2'](0x0,0x1),
        bYf['StrippedLambertMaterial'] = function(bYg) {
            let bZL = new bYf['ShaderMaterial']({
                'name': 'lambert-stripped',
                'uniforms': bYf['UniformsUtils']['merge']([bYf['ShaderLib']['lambert']['uniforms']]),
                'lights': !0x0,
                'fog': !0x0,
                'vertexShader': '\x0a#define\x20LAMBERT\x0avarying\x20vec3\x20vLightFront;\x0avarying\x20vec3\x20vIndirectFront;\x0a#ifdef\x20DOUBLE_SIDED\x0a\x20\x20\x20\x20varying\x20vec3\x20vLightBack;\x0a\x20\x20\x20\x20varying\x20vec3\x20vIndirectBack;\x0a#endif\x0a#include\x20<common>\x0a#include\x20<uv_pars_vertex>\x0a#include\x20<uv2_pars_vertex>\x0a//\x20#include\x20<envmap_pars_vertex>\x0a#include\x20<bsdfs>\x0a#include\x20<lights_pars_begin>\x0a#include\x20<color_pars_vertex>\x0a#include\x20<fog_pars_vertex>\x0a//\x20#include\x20<morphtarget_pars_vertex>\x0a//\x20#include\x20<skinning_pars_vertex>\x0a#include\x20<shadowmap_pars_vertex>\x0a//\x20#include\x20<logdepthbuf_pars_vertex>\x0a//\x20#include\x20<clipping_planes_pars_vertex>\x0avoid\x20main()\x20{\x0a\x20\x20\x20\x20#include\x20<uv_vertex>\x0a\x20\x20\x20\x20#include\x20<uv2_vertex>\x0a\x20\x20\x20\x20#include\x20<color_vertex>\x0a\x20\x20\x20\x20#include\x20<beginnormal_vertex>\x0a\x20\x20\x20\x20//\x20#include\x20<morphnormal_vertex>\x0a\x20\x20\x20\x20//\x20#include\x20<skinbase_vertex>\x0a\x20\x20\x20\x20//\x20#include\x20<skinnormal_vertex>\x0a\x20\x20\x20\x20#include\x20<defaultnormal_vertex>\x0a\x20\x20\x20\x20#include\x20<begin_vertex>\x0a\x20\x20\x20\x20//\x20#include\x20<morphtarget_vertex>\x0a\x20\x20\x20\x20//\x20#include\x20<skinning_vertex>\x0a\x20\x20\x20\x20#include\x20<project_vertex>\x0a\x20\x20\x20\x20//\x20#include\x20<logdepthbuf_vertex>\x0a\x20\x20\x20\x20//\x20#include\x20<clipping_planes_vertex>\x0a\x20\x20\x20\x20#include\x20<worldpos_vertex>\x0a\x20\x20\x20\x20//\x20#include\x20<envmap_vertex>\x0a\x20\x20\x20\x20#include\x20<lights_lambert_vertex>\x0a\x20\x20\x20\x20#include\x20<shadowmap_vertex>\x0a\x20\x20\x20\x20#include\x20<fog_vertex>\x0a}\x0a',
                'fragmentShader': '\x0auniform\x20vec3\x20diffuse;\x0auniform\x20vec3\x20emissive;\x0auniform\x20float\x20opacity;\x0a\x0avarying\x20vec3\x20vLightFront;\x0avarying\x20vec3\x20vIndirectFront;\x0a\x0a#ifdef\x20DOUBLE_SIDED\x0a\x20\x20\x20\x20varying\x20vec3\x20vLightBack;\x0a\x20\x20\x20\x20varying\x20vec3\x20vIndirectBack;\x0a#endif\x0a\x0a\x0a#include\x20<common>\x0a#include\x20<packing>\x0a//\x20#include\x20<dithering_pars_fragment>\x0a#include\x20<color_pars_fragment>\x0a#include\x20<uv_pars_fragment>\x0a#include\x20<uv2_pars_fragment>\x0a#include\x20<map_pars_fragment>\x0a//\x20#include\x20<alphamap_pars_fragment>\x0a#include\x20<aomap_pars_fragment>\x0a#include\x20<lightmap_pars_fragment>\x0a#include\x20<emissivemap_pars_fragment>\x0a//\x20#include\x20<envmap_pars_fragment>\x0a#include\x20<bsdfs>\x20\x20//\x20Shading\x20functions\x0a#include\x20<lights_pars_begin>\x0a#include\x20<fog_pars_fragment>\x0a#include\x20<shadowmap_pars_fragment>\x0a#include\x20<shadowmask_pars_fragment>\x0a//\x20#include\x20<specularmap_pars_fragment>\x0a//\x20#include\x20<logdepthbuf_pars_fragment>\x0a//\x20#include\x20<clipping_planes_pars_fragment>\x0a\x0avoid\x20main()\x20{\x0a\x0a\x20\x20\x20\x20//\x20#include\x20<clipping_planes_fragment>\x0a\x0a\x20\x20\x20\x20vec4\x20diffuseColor\x20=\x20vec4(\x20diffuse,\x20opacity\x20);\x0a\x20\x20\x20\x20ReflectedLight\x20reflectedLight\x20=\x20ReflectedLight(\x20vec3(\x200.0\x20),\x20vec3(\x200.0\x20),\x20vec3(\x200.0\x20),\x20vec3(\x200.0\x20)\x20);\x0a\x20\x20\x20\x20vec3\x20totalEmissiveRadiance\x20=\x20emissive;\x0a\x0a\x20\x20\x20\x20//\x20#include\x20<logdepthbuf_fragment>\x0a\x20\x20\x20\x20#include\x20<map_fragment>\x0a\x20\x20\x20\x20#include\x20<color_fragment>\x0a\x20\x20\x20\x20//\x20#include\x20<alphamap_fragment>\x0a\x20\x20\x20\x20#include\x20<alphatest_fragment>\x0a\x20\x20\x20\x20//\x20#include\x20<specularmap_fragment>\x0a\x20\x20\x20\x20#include\x20<emissivemap_fragment>\x0a\x0a\x20\x20\x20\x20//\x20accumulation\x0a\x20\x20\x20\x20reflectedLight.indirectDiffuse\x20=\x20getAmbientLightIrradiance(\x20ambientLightColor\x20);\x0a\x0a\x20\x20\x20\x20#ifdef\x20DOUBLE_SIDED\x0a\x0a\x20\x20\x20\x20\x20\x20\x20\x20reflectedLight.indirectDiffuse\x20+=\x20(\x20gl_FrontFacing\x20)\x20?\x20vIndirectFront\x20:\x20vIndirectBack;\x0a\x0a\x20\x20\x20\x20#else\x0a\x0a\x20\x20\x20\x20\x20\x20\x20\x20reflectedLight.indirectDiffuse\x20+=\x20vIndirectFront;\x0a\x0a\x20\x20\x20\x20#endif\x0a\x0a\x20\x20\x20\x20#include\x20<lightmap_fragment>\x0a\x0a\x20\x20\x20\x20reflectedLight.indirectDiffuse\x20*=\x20BRDF_Diffuse_Lambert(\x20diffuseColor.rgb\x20);\x0a\x0a\x20\x20\x20\x20#ifdef\x20DOUBLE_SIDED\x0a\x0a\x20\x20\x20\x20\x20\x20\x20\x20reflectedLight.directDiffuse\x20=\x20(\x20gl_FrontFacing\x20)\x20?\x20vLightFront\x20:\x20vLightBack;\x0a\x0a\x20\x20\x20\x20#else\x0a\x0a\x20\x20\x20\x20\x20\x20\x20\x20reflectedLight.directDiffuse\x20=\x20vLightFront;\x0a\x0a\x20\x20\x20\x20#endif\x0a\x0a\x20\x20\x20\x20reflectedLight.directDiffuse\x20*=\x20BRDF_Diffuse_Lambert(\x20diffuseColor.rgb\x20)\x20*\x20getShadowMask();\x0a\x0a\x20\x20\x20\x20//\x20modulation\x0a\x20\x20\x20\x20#include\x20<aomap_fragment>\x0a\x0a\x20\x20\x20\x20vec3\x20outgoingLight\x20=\x20reflectedLight.directDiffuse\x20+\x20reflectedLight.indirectDiffuse\x20+\x20totalEmissiveRadiance;\x0a\x0a\x20\x20\x20\x20//\x20#include\x20<envmap_fragment>\x0a\x0a\x20\x20\x20\x20gl_FragColor\x20=\x20vec4(\x20outgoingLight,\x20diffuseColor.a\x20);\x0a\x0a\x20\x20\x20\x20//\x20#include\x20<tonemapping_fragment>\x0a\x20\x20\x20\x20//\x20#include\x20<encodings_fragment>\x0a\x20\x20\x20\x20#include\x20<fog_fragment>\x0a\x20\x20\x20\x20#include\x20<premultiplied_alpha_fragment>\x0a\x20\x20\x20\x20//\x20#include\x20<dithering_fragment>\x0a}\x0a\x20\x20\x20\x20'
            });
            return Object['assign'](bZL, new bYf['MeshLambertMaterial'](bYg)),
            bZL['isMeshLambertMaterial'] = !0x0,
            bZL['setValues'](bYg),
            bZL;
        }
        ;
    }
    ;
}
, function(bZM, bZN, bZO) {
    var bZP;
    !function() {
        'use strict';
        function bZQ(bZM) {
            var bZN;
            bZN = 'function' == typeof bZM ? bZM : bZM ? c00(bZM) : Math['random'],
            this['p'] = bZU(bZN),
            this['perm'] = new Uint8Array(0x200),
            this['permMod12'] = new Uint8Array(0x200);
            for (var bZO = 0x0; 0x200 > bZO; bZO++)
                this['perm'][bZO] = this['p'][0xff & bZO],
                this['permMod12'][bZO] = this['perm'][bZO] % 0xc;
        }
        function bZU(bZM) {
            var bZN, bZO = new Uint8Array(0x100);
            for (bZN = 0x0; 0x100 > bZN; bZN++)
                bZO[bZN] = bZN;
            for (bZN = 0x0; 0xff > bZN; bZN++) {
                var bZP = bZN + ~~(bZM() * (0x100 - bZN))
                  , bZQ = bZO[bZN];
                bZO[bZN] = bZO[bZP],
                bZO[bZP] = bZQ;
            }
            return bZO;
        }
        function c00() {
            var bZM = 0x0
              , bZN = 0x0
              , bZO = 0x0
              , bZP = 0x1
              , bZQ = function() {
                var bZM = 0xefc8249d;
                return function(bZN) {
                    bZN = bZN['toString']();
                    for (var bZO = 0x0; bZO < bZN['length']; bZO++) {
                        var bZP = 0.02519603282416938 * (bZM += bZN['charCodeAt'](bZO));
                        bZP -= bZM = bZP >>> 0x0,
                        bZM = (bZP *= bZM) >>> 0x0,
                        bZM += 0x100000000 * (bZP -= bZM);
                    }
                    return 2.3283064365386963e-10 * (bZM >>> 0x0);
                }
                ;
            }();
            bZM = bZQ('\x20'),
            bZN = bZQ('\x20'),
            bZO = bZQ('\x20');
            for (var bZU = 0x0; bZU < arguments['length']; bZU++)
                0x0 > (bZM -= bZQ(arguments[bZU])) && (bZM += 0x1),
                0x0 > (bZN -= bZQ(arguments[bZU])) && (bZN += 0x1),
                0x0 > (bZO -= bZQ(arguments[bZU])) && (bZO += 0x1);
            return bZQ = null,
            function() {
                var bZQ = 0x1fea77 * bZM + 2.3283064365386963e-10 * bZP;
                return bZM = bZN,
                bZN = bZO,
                bZO = bZQ - (bZP = 0x0 | bZQ);
            }
            ;
        }
        var c0c = 0.5 * (Math['sqrt'](0x3) - 0x1)
          , c0d = (0x3 - Math['sqrt'](0x3)) / 0x6
          , c0e = 0x1 / 0x6
          , c0f = (Math['sqrt'](0x5) - 0x1) / 0x4
          , c0g = (0x5 - Math['sqrt'](0x5)) / 0x14;
        bZQ['prototype'] = {
            'grad3': new Float32Array([0x1, 0x1, 0x0, -0x1, 0x1, 0x0, 0x1, -0x1, 0x0, -0x1, -0x1, 0x0, 0x1, 0x0, 0x1, -0x1, 0x0, 0x1, 0x1, 0x0, -0x1, -0x1, 0x0, -0x1, 0x0, 0x1, 0x1, 0x0, -0x1, 0x1, 0x0, 0x1, -0x1, 0x0, -0x1, -0x1]),
            'grad4': new Float32Array([0x0, 0x1, 0x1, 0x1, 0x0, 0x1, 0x1, -0x1, 0x0, 0x1, -0x1, 0x1, 0x0, 0x1, -0x1, -0x1, 0x0, -0x1, 0x1, 0x1, 0x0, -0x1, 0x1, -0x1, 0x0, -0x1, -0x1, 0x1, 0x0, -0x1, -0x1, -0x1, 0x1, 0x0, 0x1, 0x1, 0x1, 0x0, 0x1, -0x1, 0x1, 0x0, -0x1, 0x1, 0x1, 0x0, -0x1, -0x1, -0x1, 0x0, 0x1, 0x1, -0x1, 0x0, 0x1, -0x1, -0x1, 0x0, -0x1, 0x1, -0x1, 0x0, -0x1, -0x1, 0x1, 0x1, 0x0, 0x1, 0x1, 0x1, 0x0, -0x1, 0x1, -0x1, 0x0, 0x1, 0x1, -0x1, 0x0, -0x1, -0x1, 0x1, 0x0, 0x1, -0x1, 0x1, 0x0, -0x1, -0x1, -0x1, 0x0, 0x1, -0x1, -0x1, 0x0, -0x1, 0x1, 0x1, 0x1, 0x0, 0x1, 0x1, -0x1, 0x0, 0x1, -0x1, 0x1, 0x0, 0x1, -0x1, -0x1, 0x0, -0x1, 0x1, 0x1, 0x0, -0x1, 0x1, -0x1, 0x0, -0x1, -0x1, 0x1, 0x0, -0x1, -0x1, -0x1, 0x0]),
            'noise2D': function(bZM, bZN) {
                var bZO, bZP, bZQ = this['permMod12'], bZU = this['perm'], c00 = this['grad3'], c0e = 0x0, c0f = 0x0, c0g = 0x0, c0r = (bZM + bZN) * c0c, c0s = Math['floor'](bZM + c0r), c0t = Math['floor'](bZN + c0r), c0u = (c0s + c0t) * c0d, c0v = bZM - (c0s - c0u), c0w = bZN - (c0t - c0u);
                c0v > c0w ? (bZO = 0x1,
                bZP = 0x0) : (bZO = 0x0,
                bZP = 0x1);
                var c0x = c0v - bZO + c0d
                  , c0y = c0w - bZP + c0d
                  , c0z = c0v - 0x1 + 0x2 * c0d
                  , c0A = c0w - 0x1 + 0x2 * c0d
                  , c0B = 0xff & c0s
                  , c0C = 0xff & c0t
                  , c0D = 0.5 - c0v * c0v - c0w * c0w;
                if (0x0 <= c0D) {
                    var c0E = 0x3 * bZQ[c0B + bZU[c0C]];
                    c0e = (c0D *= c0D) * c0D * (c00[c0E] * c0v + c00[c0E + 0x1] * c0w);
                }
                var c0F = 0.5 - c0x * c0x - c0y * c0y;
                if (0x0 <= c0F) {
                    var c0G = 0x3 * bZQ[c0B + bZO + bZU[c0C + bZP]];
                    c0f = (c0F *= c0F) * c0F * (c00[c0G] * c0x + c00[c0G + 0x1] * c0y);
                }
                var c0H = 0.5 - c0z * c0z - c0A * c0A;
                if (0x0 <= c0H) {
                    var c0I = 0x3 * bZQ[c0B + 0x1 + bZU[c0C + 0x1]];
                    c0g = (c0H *= c0H) * c0H * (c00[c0I] * c0z + c00[c0I + 0x1] * c0A);
                }
                return 0x46 * (c0e + c0f + c0g);
            },
            'noise3D': function(bZM, bZN, bZO) {
                var bZP, bZQ, bZU, c00, c0c, c0d, c0f, c0g, c0U, c0V, c0W = this['permMod12'], c0X = this['perm'], c0Y = this['grad3'], c0Z = (bZM + bZN + bZO) * (0x1 / 0x3), c10 = Math['floor'](bZM + c0Z), c11 = Math['floor'](bZN + c0Z), c12 = Math['floor'](bZO + c0Z), c13 = (c10 + c11 + c12) * c0e, c14 = bZM - (c10 - c13), c15 = bZN - (c11 - c13), c16 = bZO - (c12 - c13);
                c14 >= c15 ? c15 >= c16 ? (c0c = 0x1,
                c0d = 0x0,
                c0f = 0x0,
                c0g = 0x1,
                c0U = 0x1,
                c0V = 0x0) : c14 >= c16 ? (c0c = 0x1,
                c0d = 0x0,
                c0f = 0x0,
                c0g = 0x1,
                c0U = 0x0,
                c0V = 0x1) : (c0c = 0x0,
                c0d = 0x0,
                c0f = 0x1,
                c0g = 0x1,
                c0U = 0x0,
                c0V = 0x1) : c15 < c16 ? (c0c = 0x0,
                c0d = 0x0,
                c0f = 0x1,
                c0g = 0x0,
                c0U = 0x1,
                c0V = 0x1) : c14 < c16 ? (c0c = 0x0,
                c0d = 0x1,
                c0f = 0x0,
                c0g = 0x0,
                c0U = 0x1,
                c0V = 0x1) : (c0c = 0x0,
                c0d = 0x1,
                c0f = 0x0,
                c0g = 0x1,
                c0U = 0x1,
                c0V = 0x0);
                var c17 = c14 - c0c + c0e
                  , c18 = c15 - c0d + c0e
                  , c19 = c16 - c0f + c0e
                  , c1a = c14 - c0g + 0x2 * c0e
                  , c1b = c15 - c0U + 0x2 * c0e
                  , c1c = c16 - c0V + 0x2 * c0e
                  , c1d = c14 - 0x1 + 0.5
                  , c1e = c15 - 0x1 + 0.5
                  , c1f = c16 - 0x1 + 0.5
                  , c1g = 0xff & c10
                  , c1h = 0xff & c11
                  , c1i = 0xff & c12
                  , c1j = 0.6 - c14 * c14 - c15 * c15 - c16 * c16;
                if (0x0 > c1j)
                    bZP = 0x0;
                else {
                    var c1k = 0x3 * c0W[c1g + c0X[c1h + c0X[c1i]]];
                    bZP = (c1j *= c1j) * c1j * (c0Y[c1k] * c14 + c0Y[c1k + 0x1] * c15 + c0Y[c1k + 0x2] * c16);
                }
                var c1l = 0.6 - c17 * c17 - c18 * c18 - c19 * c19;
                if (0x0 > c1l)
                    bZQ = 0x0;
                else {
                    var c1m = 0x3 * c0W[c1g + c0c + c0X[c1h + c0d + c0X[c1i + c0f]]];
                    bZQ = (c1l *= c1l) * c1l * (c0Y[c1m] * c17 + c0Y[c1m + 0x1] * c18 + c0Y[c1m + 0x2] * c19);
                }
                var c1n = 0.6 - c1a * c1a - c1b * c1b - c1c * c1c;
                if (0x0 > c1n)
                    bZU = 0x0;
                else {
                    var c1o = 0x3 * c0W[c1g + c0g + c0X[c1h + c0U + c0X[c1i + c0V]]];
                    bZU = (c1n *= c1n) * c1n * (c0Y[c1o] * c1a + c0Y[c1o + 0x1] * c1b + c0Y[c1o + 0x2] * c1c);
                }
                var c1p = 0.6 - c1d * c1d - c1e * c1e - c1f * c1f;
                if (0x0 > c1p)
                    c00 = 0x0;
                else {
                    var c1q = 0x3 * c0W[c1g + 0x1 + c0X[c1h + 0x1 + c0X[c1i + 0x1]]];
                    c00 = (c1p *= c1p) * c1p * (c0Y[c1q] * c1d + c0Y[c1q + 0x1] * c1e + c0Y[c1q + 0x2] * c1f);
                }
                return 0x20 * (bZP + bZQ + bZU + c00);
            },
            'noise4D': function(bZM, bZN, bZO, bZP) {
                var bZQ, bZU, c00, c0c, c0d, c0e, c1B, c1C, c1D, c1E, c1F, c1G, c1H, c1I, c1J, c1K, c1L, c1M = this['perm'], c1N = this['grad4'], c1O = (bZM + bZN + bZO + bZP) * c0f, c1P = Math['floor'](bZM + c1O), c1Q = Math['floor'](bZN + c1O), c1R = Math['floor'](bZO + c1O), c1S = Math['floor'](bZP + c1O), c1T = (c1P + c1Q + c1R + c1S) * c0g, c1U = bZM - (c1P - c1T), c1V = bZN - (c1Q - c1T), c1W = bZO - (c1R - c1T), c1X = bZP - (c1S - c1T), c1Y = 0x0, c1Z = 0x0, c20 = 0x0, c21 = 0x0;
                c1U > c1V ? c1Y++ : c1Z++,
                c1U > c1W ? c1Y++ : c20++,
                c1U > c1X ? c1Y++ : c21++,
                c1V > c1W ? c1Z++ : c20++,
                c1V > c1X ? c1Z++ : c21++,
                c1W > c1X ? c20++ : c21++;
                var c22 = c1U - (c0e = 0x3 <= c1Y ? 0x1 : 0x0) + c0g
                  , c23 = c1V - (c1B = 0x3 <= c1Z ? 0x1 : 0x0) + c0g
                  , c24 = c1W - (c1C = 0x3 <= c20 ? 0x1 : 0x0) + c0g
                  , c25 = c1X - (c1D = 0x3 <= c21 ? 0x1 : 0x0) + c0g
                  , c26 = c1U - (c1E = 0x2 <= c1Y ? 0x1 : 0x0) + 0x2 * c0g
                  , c27 = c1V - (c1F = 0x2 <= c1Z ? 0x1 : 0x0) + 0x2 * c0g
                  , c28 = c1W - (c1G = 0x2 <= c20 ? 0x1 : 0x0) + 0x2 * c0g
                  , c29 = c1X - (c1H = 0x2 <= c21 ? 0x1 : 0x0) + 0x2 * c0g
                  , c2a = c1U - (c1I = 0x1 <= c1Y ? 0x1 : 0x0) + 0x3 * c0g
                  , c2b = c1V - (c1J = 0x1 <= c1Z ? 0x1 : 0x0) + 0x3 * c0g
                  , c2c = c1W - (c1K = 0x1 <= c20 ? 0x1 : 0x0) + 0x3 * c0g
                  , c2d = c1X - (c1L = 0x1 <= c21 ? 0x1 : 0x0) + 0x3 * c0g
                  , c2e = c1U - 0x1 + 0x4 * c0g
                  , c2f = c1V - 0x1 + 0x4 * c0g
                  , c2g = c1W - 0x1 + 0x4 * c0g
                  , c2h = c1X - 0x1 + 0x4 * c0g
                  , c2i = 0xff & c1P
                  , c2j = 0xff & c1Q
                  , c2k = 0xff & c1R
                  , c2l = 0xff & c1S
                  , c2m = 0.6 - c1U * c1U - c1V * c1V - c1W * c1W - c1X * c1X;
                if (0x0 > c2m)
                    bZQ = 0x0;
                else {
                    var c2n = c1M[c2i + c1M[c2j + c1M[c2k + c1M[c2l]]]] % 0x20 * 0x4;
                    bZQ = (c2m *= c2m) * c2m * (c1N[c2n] * c1U + c1N[c2n + 0x1] * c1V + c1N[c2n + 0x2] * c1W + c1N[c2n + 0x3] * c1X);
                }
                var c2o = 0.6 - c22 * c22 - c23 * c23 - c24 * c24 - c25 * c25;
                if (0x0 > c2o)
                    bZU = 0x0;
                else {
                    var c2p = c1M[c2i + c0e + c1M[c2j + c1B + c1M[c2k + c1C + c1M[c2l + c1D]]]] % 0x20 * 0x4;
                    bZU = (c2o *= c2o) * c2o * (c1N[c2p] * c22 + c1N[c2p + 0x1] * c23 + c1N[c2p + 0x2] * c24 + c1N[c2p + 0x3] * c25);
                }
                var c2q = 0.6 - c26 * c26 - c27 * c27 - c28 * c28 - c29 * c29;
                if (0x0 > c2q)
                    c00 = 0x0;
                else {
                    var c2r = c1M[c2i + c1E + c1M[c2j + c1F + c1M[c2k + c1G + c1M[c2l + c1H]]]] % 0x20 * 0x4;
                    c00 = (c2q *= c2q) * c2q * (c1N[c2r] * c26 + c1N[c2r + 0x1] * c27 + c1N[c2r + 0x2] * c28 + c1N[c2r + 0x3] * c29);
                }
                var c2s = 0.6 - c2a * c2a - c2b * c2b - c2c * c2c - c2d * c2d;
                if (0x0 > c2s)
                    c0c = 0x0;
                else {
                    var c2t = c1M[c2i + c1I + c1M[c2j + c1J + c1M[c2k + c1K + c1M[c2l + c1L]]]] % 0x20 * 0x4;
                    c0c = (c2s *= c2s) * c2s * (c1N[c2t] * c2a + c1N[c2t + 0x1] * c2b + c1N[c2t + 0x2] * c2c + c1N[c2t + 0x3] * c2d);
                }
                var c2u = 0.6 - c2e * c2e - c2f * c2f - c2g * c2g - c2h * c2h;
                if (0x0 > c2u)
                    c0d = 0x0;
                else {
                    var c2v = c1M[c2i + 0x1 + c1M[c2j + 0x1 + c1M[c2k + 0x1 + c1M[c2l + 0x1]]]] % 0x20 * 0x4;
                    c0d = (c2u *= c2u) * c2u * (c1N[c2v] * c2e + c1N[c2v + 0x1] * c2f + c1N[c2v + 0x2] * c2g + c1N[c2v + 0x3] * c2h);
                }
                return 0x1b * (bZQ + bZU + c00 + c0c + c0d);
            }
        },
        bZQ['_buildPermutationTable'] = bZU,
        void 0x0 !== (bZP = function() {
            return bZQ;
        }
        ['call'](bZN, bZO, bZN, bZM)) && (bZM['exports'] = bZP),
        bZN['SimplexNoise'] = bZQ,
        bZM['exports'] = bZQ;
    }();
}
, function(c2w, c2x) {
    c2w['exports']['easing'] = {
        'linear': function(c2w) {
            return c2w;
        },
        'easeInQuad': function(c2w) {
            return c2w * c2w;
        },
        'easeOutQuad': function(c2w) {
            return c2w * (0x2 - c2w);
        },
        'easeInOutQuad': function(c2w) {
            return 0.5 > c2w ? 0x2 * c2w * c2w : (0x4 - 0x2 * c2w) * c2w - 0x1;
        },
        'easeInCubic': function(c2w) {
            return c2w * c2w * c2w;
        },
        'easeOutCubic': function(c2w) {
            return --c2w * c2w * c2w + 0x1;
        },
        'easeInOutCubic': function(c2w) {
            return 0.5 > c2w ? 0x4 * c2w * c2w * c2w : (c2w - 0x1) * (0x2 * c2w - 0x2) * (0x2 * c2w - 0x2) + 0x1;
        },
        'easeInQuart': function(c2w) {
            return c2w * c2w * c2w * c2w;
        },
        'easeOutQuart': function(c2w) {
            return 0x1 - --c2w * c2w * c2w * c2w;
        },
        'easeInOutQuart': function(c2w) {
            return 0.5 > c2w ? 0x8 * c2w * c2w * c2w * c2w : 0x1 - 0x8 * --c2w * c2w * c2w * c2w;
        },
        'easeInQuint': function(c2w) {
            return c2w * c2w * c2w * c2w * c2w;
        },
        'easeOutQuint': function(c2w) {
            return 0x1 + --c2w * c2w * c2w * c2w * c2w;
        },
        'easeInOutQuint': function(c2w) {
            return 0.5 > c2w ? 0x10 * c2w * c2w * c2w * c2w * c2w : 0x1 + 0x10 * --c2w * c2w * c2w * c2w * c2w;
        }
    };
}
, function(c2L, c2M, c2N) {
    var c2O, c2P, c2Q = 0x0, c2R = function(c2L) {
        this['sid'] = c2Q++,
        this['uid'] = c2L['uid'],
        this['width'] = c2L['w'],
        this['length'] = c2L['l'],
        this['height'] = c2L['h'],
        this['active'] = !0x0,
        this['x'] = c2L['x'],
        this['orgX'] = this['x'],
        this['y'] = c2L['y'],
        this['orgY'] = this['y'],
        this['z'] = c2L['z'],
        this['orgZ'] = this['z'],
        this['dir'] = c2L['d'],
        this['src'] = c2L['src'],
        this['ramp'] = c2L['ramp'],
        this['ladder'] = c2L['ladder'],
        this['jumpPad'] = c2L['jumpPad'],
        this['noShoot'] = c2L['noShoot'],
        this['stepSrc'] = c2L['s'],
        this['score'] = c2L['score'],
        this['scoreP'] = c2L['scoreP'],
        this['kill'] = c2L['kill'],
        this['dummy'] = c2L['dummy'],
        this['noVis'] = c2L['noVis'],
        this['complexMesh'] = c2L['complexMesh'],
        this['penetrable'] = c2L['penetrable'],
        this['health'] = c2L['health'],
        this['startHealth'] = c2L['health'],
        this['transparent'] = c2L['transparent'],
        this['boost'] = c2L['boost'],
        this['boostDr'] = c2L['boostDr'],
        this['aoMlt'] = c2L['aoM'],
        this['team'] = c2L['team'],
        this['flag'] = c2L['flag'],
        this['trigger'] = c2L['trigger'],
        this['pickup'] = c2L['pickup'],
        this['orgPickup'] = c2L['orgPickup'],
        this['pickupRep'] = c2L['pickupRep'],
        this['meshRef'] = c2L['meshRef'],
        this['checkpoint'] = c2L['checkpoint'],
        this['singleUse'] = c2L['singleUse'],
        this['isBorder'] = c2L['isBorder'],
        this['node'] = c2L['node'],
        this['channel'] = c2L['channel'],
        this['teleporter'] = c2L['teleporter'],
        this['telCooldown'] = 0x0,
        this['propID'] = c2L['propID'],
        this['telStopMo'] = c2L['momentum'],
        this['noAmb'] = c2L['noAmb'],
        this['tRadius'] = c2L['tRadius'],
        this['gate'] = c2L['gate'],
        this['noMsg'] = c2L['noMsg'],
        this['method'] = c2L['method'];
    };
    c2L['exports']['manager'] = function(c2L, c2M, c2Q) {
        var c2W, c2X;
        c2L && (c2O = c2N(0x25)['prefabs'],
        c2P = c2N(0x4)),
        this['aoOpac'] = 0x0,
        this['objects'] = [],
        this['objectives'] = [],
        this['flags'] = [],
        this['pickups'] = [],
        this['gates'] = [],
        this['teleporters'] = [],
        this['collision'] = function(c2L, c2M, c2N) {
            return c2L['x'] - c2L['width'] - c2N <= c2M['x'] + c2M['width'] && c2L['x'] + c2L['width'] + c2N >= c2M['x'] - c2M['width'] && c2L['z'] - c2L['length'] - c2N <= c2M['z'] + c2M['length'] && c2L['z'] + c2L['length'] + c2N >= c2M['z'] - c2M['length'] && c2L['y'] - c2L['height'] - c2N <= c2M['y'] + c2M['height'] && c2L['y'] + c2L['height'] + c2N >= c2M['y'] - c2M['height'];
        }
        ,
        this['checkPos'] = function(c2L, c2N, c2O, c2P, c2Q) {
            for (var c2R = 0x0; c2R < this['objects']['length']; ++c2R)
                if (this['objects'][c2R] != c2P && this['objects'][c2R] != c2Q && !this['objects'][c2R]['ramp'] && c2M['pointInBox3D'](c2L, c2N, c2O, this['objects'][c2R]))
                    return !0x1;
            return !0x0;
        }
        ,
        this['addCylinder'] = function(c2M, c2N, c2O, c2P, c2Q, c2R) {
            c2L && (c2R['shadows'] = !0x0,
            c2L['addCylinder'](c2M, c2N, c2O, c2P, c2Q, c2R));
        }
        ,
        this['getZoneDat'] = function(c2L, c2M) {
            return {
                'src': 'zone_r',
                'texSrc': 'zone_' + (c2M && c2L == c2M['team'] ? 'b' : 'r'),
                'noGroup': !0x0,
                'mat': c2P['MeshBasicMaterial'],
                'transparent': !0x0,
                'depthWrite': !0x1,
                'side': 0x2
            };
        }
        ,
        this['getFlagDat'] = function(c2L, c2M) {
            var c2N = c2M && c2L == c2M['team'] ? '1' : '0';
            return {
                'src': 'crystal_0',
                'texSrc': 'crystal_' + c2N,
                'noGroup': !0x0,
                'noShadow': !0x0,
                'noFog': !0x0,
                'emissive': '0' == c2N ? 0x853434 : 0x428a9d
            };
        }
        ,
        this['addFlag'] = function(c2M, c2N, c2O, c2P) {
            var c2W = null;
            c2L && ((c2W = c2L['loadMesh'](this['getFlagDat'](c2P), c2M, c2N + c2Q['flagOff'], c2O, 0x0, c2Q['flagScale'], c2L['scene']))['layers']['set'](0x2),
            c2W['zoneMesh'] = c2L['addCube'](c2M, c2N, c2O, c2Q['flagZoneS'], c2Q['flagZoneH'], c2Q['flagZoneS'], [0x1, 0x1, 0x0, 0x0, 0x1, 0x1], this['getZoneDat'](c2P)));
            var c2X = new c2R({
                'uid': this['objects']['length'],
                'meshRef': c2W,
                'x': c2M,
                'z': c2O,
                'y': c2N + c2Q['flagScale'] / 0x2 + c2Q['flagOff'],
                'w': c2Q['flagScale'],
                'l': c2Q['flagScale'],
                'h': c2Q['flagScale'] / 0x2,
                'team': c2P,
                'flag': !0x0,
                'noShoot': !0x0,
                'complexMesh': !0x0
            });
            this['flags']['push'](c2X),
            this['objects']['push'](c2X);
            var c3o = new c2R({
                'x': c2M,
                'z': c2O,
                'y': c2N + c2Q['flagZoneH'] / 0x2,
                'w': c2Q['flagZoneS'] / 0x2,
                'l': c2Q['flagZoneS'] / 0x2,
                'h': c2Q['flagZoneH'] / 0x2,
                'team': c2P,
                'trigger': !0x0,
                'noShoot': !0x0,
                'complexMesh': !0x0
            });
            c3o['flagObj'] = c2X,
            this['objects']['push'](c3o);
        }
        ,
        this['addWeapon'] = function(c2M, c2N, c2O, c2P, c2W, c2X, c3v, c3w, c3x) {
            var c3y = null;
            c2L && ((c3y = c2L['loadMesh']({
                'src': 'weapons/' + c3w['src'],
                'texSrc': 'weapons/' + c3w['src'],
                'noGroup': !0x0,
                'noShadow': !0x0,
                'transparent': !0x0,
                'noFog': !0x0
            }, c2M, c2N + c2Q['pickupOff'], c2O, 0x0, c3w['scale'], c2L['scene']))['rotateY'](c2P || 0x0),
            c3y['rotateX']((c2W || 0x0) - Math['PI'] / 0x2),
            c3y['rotateZ'](c2X || 0x0));
            var c3z = new c2R({
                'uid': this['objects']['length'],
                'meshRef': c3y,
                'x': c2M,
                'z': c2O,
                'y': c2N + c2Q['pickupZoneH'] / 0x2,
                'w': c2Q['pickupZoneX'],
                'l': c2Q['pickupZoneZ'],
                'h': 0x2 * c2Q['pickupZoneH'],
                'pickup': c3v,
                'pickupRep': !c3x,
                'orgPickup': c3v,
                'trigger': !0x0,
                'noShoot': !0x0,
                'complexMesh': !0x0
            });
            this['pickups']['push'](c3z),
            this['objects']['push'](c3z);
        }
        ,
        this['addObjective'] = function(c2M, c2N, c2O, c2Q, c2R, c2W) {
            var c2X;
            c2L && ((c2X = c2L['addCube'](c2M, c2N, c2O, c2Q, c2W, c2R, [0x1, 0x1, 0x0, 0x0, 0x1, 0x1], {
                'src': 'objective_0',
                'noGroup': !0x0,
                'mat': c2P['MeshBasicMaterial'],
                'transparent': !0x0,
                'depthWrite': !0x1,
                'side': 0x2
            }))['visible'] = !0x1),
            this['objectives']['push']({
                'x': c2M,
                'z': c2O,
                'y': c2N + c2W / 0x2,
                'mesh': c2X,
                'width': c2Q / 0x2,
                'length': c2R / 0x2,
                'height': c2W / 0x2
            });
        }
        ,
        this['addDeathZone'] = function(c2L, c2M, c2N, c2O, c2P, c2Q) {
            this['objects']['push'](new c2R({
                'x': c2L,
                'z': c2N,
                'y': c2M + c2Q / 0x2,
                'w': c2O / 0x2,
                'l': c2P / 0x2,
                'h': c2Q / 0x2,
                'kill': !0x0,
                'noShoot': !0x0,
                'complexMesh': !0x0
            }));
        }
        ,
        this['addScoreZone'] = function(c2L, c2M, c2N, c2O, c2P, c2Q, c2W) {
            this['objects']['push'](new c2R({
                'x': c2L,
                'z': c2N,
                'y': c2M + c2Q / 0x2,
                'w': c2O / 0x2,
                'l': c2P / 0x2,
                'h': c2Q / 0x2,
                'score': !0x0,
                'scoreP': c2W,
                'noShoot': !0x0,
                'complexMesh': !0x0
            }));
        }
        ,
        this['addCheckPoint'] = function(c2L, c2M, c2N, c2O, c2P, c2Q, c2W, c2X) {
            this['objects']['push'](new c2R({
                'x': c2L,
                'z': c2N,
                'y': c2M + c2Q / 0x2,
                'w': c2O / 0x2,
                'l': c2P / 0x2,
                'h': c2Q / 0x2,
                'd': parseInt(c2X) || 0x0,
                'checkpoint': !0x0,
                'singleUse': c2W,
                'noShoot': !0x0,
                'complexMesh': !0x0
            }));
        }
        ,
        this['addTeleporter'] = function(c2L, c2M, c2N, c2O, c2P, c2Q, c2W, c2X, c4a) {
            var c4b = new c2R({
                'uid': this['objects']['length'],
                'x': c2L,
                'z': c2N,
                'y': c2M + c2Q / 0x2,
                'w': c2O / 0x2,
                'l': c2P / 0x2,
                'h': c2Q / 0x2,
                'teleporter': !0x0,
                'channel': c2W || 0x0,
                'node': c2X || 0x0,
                'momentum': c4a,
                'noShoot': !0x0,
                'complexMesh': !0x0
            });
            this['objects']['push'](c4b),
            this['teleporters']['push'](c4b);
        }
        ,
        this['addGrass'] = function(c2M, c2N, c2O, c2Q, c2R, c2W, c2X) {
            c2X = c2X || {},
            c2L && !c2X['noVis'] && (c2X['side'] = c2P['DoubleSide'],
            c2X['transparent'] = !0x0,
            c2X['alphaTest'] = 0.2,
            c2X['vertexColors'] = c2P['VertexColors'],
            c2X['shadowsR'] = !0x0,
            c2X['noGroup'] = !!c2X['health'],
            c2L['addGrass'](c2M, c2N, c2O, c2Q, c2R, c2W, c2X));
        }
        ,
        this['addLadder'] = function(c2N, c2O, c2X, c4m, c4n, c4o, c4p, c4q) {
            var c4r = c2Q['ladderScale']
              , c4s = c2Q['ladderScale'];
            if (0x0 == c4n || c4n == Math['PI'] ? c4s = c2Q['ladderWidth'] : c4r = c2Q['ladderWidth'],
            c2W = new c2R({
                'ladder': !0x0,
                'complexMesh': !0x0,
                'noShoot': !0x0,
                'd': c4n,
                'x': c2N + c2Q['ladderScale'] * Math['cos'](c4n),
                'z': c2X + c2Q['ladderScale'] * Math['sin'](c4n),
                'y': c2O,
                'w': c4r,
                'l': c4s,
                'h': c4m
            }),
            this['objects']['push'](c2W),
            c2L && !c4o) {
                var c4t = {
                    'src': c4p || 'floor_0',
                    'vertexColors': c2P['VertexColors'],
                    'colr': c4q,
                    'scale': 0.02,
                    'amb': c2Q['ambientVal'],
                    'shadows': !0x0
                };
                c2L['addCube'](c2W['x'] + c2Q['ladderWidth'] * Math['sin'](c4n), c2W['y'], c2W['z'] + c2Q['ladderWidth'] * Math['cos'](c4n), 0x2 * c2Q['ladderScale'], c4m + 0x2, 0x2 * c2Q['ladderScale'], [0x1, 0x1, 0x1, 0x1, 0x1, 0x1], c4t),
                c2L['addCube'](c2W['x'] - c2Q['ladderWidth'] * Math['sin'](c4n), c2W['y'], c2W['z'] - c2Q['ladderWidth'] * Math['cos'](c4n), 0x2 * c2Q['ladderScale'], c4m + 0x2, 0x2 * c2Q['ladderScale'], [0x1, 0x1, 0x1, 0x1, 0x1, 0x1], c4t);
                for (var c4u = Math['floor'](c4m / 0x6), c4v = 0x0; c4v < c4u; ++c4v)
                    c4t['dark'] = 0.6 + c4v / c4u * 0.4,
                    c2L['addPlane'](c2W['x'], c2O + 0x6 * (c4v + 0x1) + c2M['randFloat'](-0x1, 0x1), c2W['z'], c2Q['ladderWidth'], c2Q['ladderScale'], c4t, -c4n + Math['PI'] / 0x2, Math['PI'] / 0x2, c2M['randFloat'](-0.1, 0.1));
            }
        }
        ,
        this['addRamp'] = function(c2M, c2N, c2O, c2W, c2X, c4B, c4C, c4D, c4E, c4F, c4G, c4H, c4I, c4J, c4K) {
            var c4L = 0x0 != c4C && c4C != Math['PI']
              , c4M = (c4L ? c4B : c2W) / 0x2
              , c4N = Math['sqrt'](c2X * c2X + c4B * c4B)
              , c4O = Math['asin'](c2X / c4N);
            if (this['objects']['push'](new c2R({
                'x': c2M,
                'z': c2O,
                'y': c2N + c2X / 0x2,
                'w': c2W / 0x2,
                'l': c4B / 0x2,
                'h': c2X / 0x2,
                'd': c4C,
                'noShoot': !0x0,
                'complexMesh': !0x0,
                'boostDr': c4D ? c4O : null,
                'boost': c4D || null,
                'ramp': {
                    'sX': c2M - c4M * Math['cos'](c4C),
                    'sZ': c2O - c4M * Math['sin'](c4C),
                    'eX': c2M + c4M * Math['cos'](c4C),
                    'eZ': c2O + c4M * Math['sin'](c4C)
                },
                'noAmb': c4K
            })),
            c2L && !c4F) {
                var c4P = {
                    'src': c4E || 'default',
                    'vertexColors': c2P['VertexColors'],
                    'colr': c4G,
                    'scale': 0x1,
                    'shadowsR': !0x0,
                    'side': c2P['DoubleSide'],
                    'movT': c4I,
                    'movD': c4J
                };
                if (c4P['transparent'] = 'link_0' == c4P['src'],
                'link_0' == c4P['src'] && (c4P['depthWrite'] = !0x0,
                c4P['alphaTest'] = c4P['transparent'] ? 0.02 : 0x0),
                c2L['addRamp'](c2M, c2N, c2O, c4L ? c2W : c4B, c2X, (c4L ? c4B : c2W) / 0x2, c4C, c4P),
                !c4K) {
                    c2N += c2Q['ambOff'];
                    var c4Q = (c4L ? c2W : c4B) / 0x2 - c4H;
                    c4L ? c2W = 0x2 * c4H : c4B = 0x2 * c4H;
                    for (var c4R, c4S = 0x0; 0x2 > c4S; ++c4S)
                        c4R = c4S ? 0x1 : -0x1,
                        c2L['addRamp'](c2M + c4Q * c4R * Math['cos'](c4C + Math['PI'] / 0x2), c2N, c2O + c4Q * c4R * Math['sin'](c4C + Math['PI'] / 0x2), c4L ? c2W : c4B, c2X, (c4L ? c4B : c2W) / 0x2, c4C, {
                            'src': 'ambient_1',
                            'euler': 'ZYX',
                            'depthWrite': !0x1,
                            'transparent': !0x0,
                            'side': c2P['DoubleSide']
                        }, c4S ? 0x0 : Math['PI']);
                }
            }
        }
        ,
        this['addGate'] = function(c2M, c2N, c2O, c2Q, c2W, c2X, c4Z) {
            (c4Z = c4Z || {})['src'] = c4Z['src'] || 'wall_0';
            var c50 = new c2R({
                'x': c2M,
                'z': c2O,
                'y': c2N + c2X / 0x2,
                'w': c2Q / 0x2,
                'l': c2W / 0x2,
                'h': c2X / 0x2,
                'uid': this['objects']['length'],
                'src': c4Z['src'],
                'noVis': c4Z['noVis'],
                'noAmb': c4Z['noAmb'],
                'transparent': c4Z['transparent'],
                'penetrable': c4Z['penetrable'],
                'isBorder': c4Z['isBorder'],
                'complexMesh': c4Z['xR'] || c4Z['yR'] || c4Z['zR'] || 'link_0' == c4Z['src'],
                'ter': !0x0,
                'tRadius': 0xa,
                'gate': !0x0,
                'scoreP': c4Z['scoreP'],
                'noMsg': c4Z['noMsg'],
                'method': c4Z['method']
            });
            if (c2L && !c4Z['noVis']) {
                c4Z['transparent'] = 'link_0' == c4Z['src'] || 0x1 != c4Z['opacity'],
                'link_0' == c4Z['src'] && (c4Z['depthWrite'] = 0x1 == c4Z['opacity'],
                c4Z['alphaTest'] = c4Z['transparent'] ? 0.02 : 0x0),
                c4Z['vertexColors'] = c2P['VertexColors'],
                c4Z['scale'] = null == c4Z['scale'] ? 0x1 : c4Z['scale'],
                c4Z['shadows'] = !c4Z['shadowsR'] && 0x1 == c4Z['opacity'],
                c4Z['noFog'] = !!c4Z['emissive'],
                c4Z['noGroup'] = !0x0;
                var c51 = c2L['addCube'](c2M, c2N, c2O, c2Q, c2X, c2W, [0x1, 0x1, 0x1, 0x1, 0x1, 0x1], c4Z);
                c50['meshRef'] = c51;
            }
            this['objects']['push'](c50),
            this['gates']['push'](c50);
        }
        ,
        this['addBlock'] = function(c2M, c2N, c2O, c2Q, c2W, c2X, c58, c59) {
            if ((c59 = c59 || {})['src'] = c59['src'] || 'wall_0',
            c59['noCol'] || this['objects']['push'](new c2R({
                'x': c2M,
                'z': c2O,
                'y': c2N + c2X / 0x2,
                'w': c2Q / 0x2,
                'l': c2W / 0x2,
                'h': c2X / 0x2,
                'uid': this['objects']['length'],
                's': c59['sound'],
                'src': c59['src'],
                'noVis': c59['noVis'],
                'noAmb': c59['noAmb'],
                'health': c59['health'],
                'transparent': c59['transparent'],
                'penetrable': c59['penetrable'],
                'isBorder': c59['isBorder'],
                'complexMesh': c59['xR'] || c59['yR'] || c59['zR'] || 'link_0' == c59['src'],
                'ter': !0x0,
                'trigger': c59['trig']
            })),
            c2L && !c59['noVis']) {
                c59['transparent'] = 'link_0' == c59['src'] || 0x1 != c59['opacity'],
                'link_0' == c59['src'] && (c59['depthWrite'] = 0x1 == c59['opacity'],
                c59['alphaTest'] = c59['transparent'] ? 0.02 : 0x0),
                c59['vertexColors'] = c2P['VertexColors'],
                c59['scale'] = null == c59['scale'] ? 0x1 : c59['scale'],
                c59['shadows'] = !c59['shadowsR'] && 0x1 == c59['opacity'],
                c59['noFog'] = !!c59['emissive'],
                c59['noGroup'] = !!c59['health'];
                var c5a = c2L['addCube'](c2M, c2N, c2O, c2Q, c2X, c2W, c58, c59);
                c59['health'] && !c59['noCol'] && (this['objects'][this['objects']['length'] - 0x1]['meshRef'] = c5a);
            }
        }
        ,
        this['addMesh'] = function(c2N, c2W, c2X, c5e, c5f, c5g, c5h, c5i, c5j, c5k, c5l) {
            c2W += c5g,
            c5j || this['objects']['push'](new c2R({
                'complexMesh': !!c2O && c2O[c5i['toUpperCase']()]['complex'],
                'aoM': c2O && c2O[c5i['toUpperCase']()]['aoMlt'] || 0x0,
                'propID': 0x0 <= c2Q['propsH']['indexOf'](c5i) ? c5i : null,
                'x': c2N,
                'z': c2X,
                'y': c2W,
                'w': c5f,
                'l': c5h,
                'h': c5g,
                'ter': !0x0,
                'noAmb': c5l
            })),
            c2O && c2O[c5i['toUpperCase']()]['transparent'] && (c2W += c2M['randFloat'](-0.01, 0.01)),
            c2L && c2L['loadMesh']({
                'src': c5i + '_0',
                'emissive': c2O[c5i['toUpperCase']()]['emiss'] ? 0xffffff : null,
                'side': c2O[c5i['toUpperCase']()]['doubleSide'] ? c2P['DoubleSide'] : c2P['FrontSide'],
                'transparent': c2O[c5i['toUpperCase']()]['transparent'],
                'shadows': c2O[c5i['toUpperCase']()]['castShadow'],
                'shadowsR': c2O[c5i['toUpperCase']()]['receiveShadow'],
                'vertexColors': c2P['VertexColors'],
                'color': c5k || 0xffffff
            }, c2N, c2W, c2X, c5e, c2Q[c5i + 'Scale'], c2L['scene'], !0x0);
        }
        ;
        var c5m = [];
        this['addNoisePlanes'] = function() {
            for (var c2M = 0x0; c2M < c5m['length']; ++c2M)
                c5m[c2M][0x5]['objects'] = this['objects'],
                c2L['addPlane'](...c5m[c2M]);
            c5m['length'] = 0x0;
        }
        ,
        this['addPlane'] = function(c2M, c2N, c2O, c2Q, c2W, c2X, c5u, c5v, c5w) {
            if ((c2X = c2X || {})['col'] && this['objects']['push'](new c2R({
                'x': c2M,
                'z': c2O,
                'y': c2N,
                'w': c2W,
                'l': c2Q,
                'h': 0x0,
                's': c2X['sound'],
                'health': c2X['health'],
                'transparent': c2X['transparent'],
                'penetrable': c2X['penetrable'],
                'noVis': c2X['noVis'],
                'noAmb': c2X['noAmb']
            })),
            c2L && !c2X['noVis']) {
                c2X['transparent'] = !0x0,
                c2X['side'] = c2P['DoubleSide'],
                c2X['vertexColors'] = c2P['VertexColors'],
                c2X['noise'] && (c2X['pinEdges'] = !0x0,
                c2X['margin'] = 0x1,
                c2X['tilesX'] = Math['round'](c2W / 0x5),
                c2X['tilesZ'] = Math['round'](c2Q / 0x5));
                var c5x = [c2M, c2N, c2O, c2W, c2Q, c2X, c5u, (c5v || 0x0) + Math['PI'] / 0x2, c5w];
                if (!c2X['noise'])
                    return c2L['addPlane'](...c5x);
                c5m['push'](c5x);
            }
        }
        ,
        this['pointInObjs'] = function(c2L, c2N, c2O) {
            for (var c2P = 0x0; c2P < this['objects']['length']; ++c2P)
                if (!(c2W = this['objects'][c2P])['noVis'] && !c2W['complexMesh'] && !c2W['health'] && 0x0 > c2N['indexOf'](c2W['sid']) && c2M['pointInBox3D'](c2L[0x0], c2L[0x1], c2L[0x2], c2W, c2O || 0x0))
                    return !0x0;
            return !0x1;
        }
        ,
        this['setMaxAO'] = function(c2L, c2M, c2N) {
            c2L['maxAOS'] = c2L['maxAOS'] || {},
            c2L['maxAOS'][c2M['sid']] = Math['max'](c2N, c2L['maxAOS'][c2M['sid']] || 0x0),
            c2M['maxAOS'] = c2M['maxAOS'] || {},
            c2M['maxAOS'][c2L['sid']] = Math['max'](c2N, c2M['maxAOS'][c2L['sid']] || 0x0);
        }
        ,
        this['aosToAdd'] = {},
        this['addAmbient'] = function(c2L, c2N, c2O, c2P, c2R, c2W, c2X, c5m, c5N, c5O, c5P) {
            var c5Q = !c5O;
            if (c5O)
                for (var c5R = 0x0; c5R < c5O['length']; ++c5R)
                    if (c2M['pointInBox3D'](c2L, c2N, c2O, c5O[c5R], 0x2 * c2Q['ambOff'])) {
                        c5Q = !0x0;
                        break;
                    }
            if (c5Q)
                if (c5O) {
                    var c5S = c5O[0x0]['sid'] + '-' + c5O[0x1]['sid'];
                    this['aosToAdd'][c5S] || (this['aosToAdd'][c5S] = []),
                    this['aosToAdd'][c5S]['push']({
                        'vals': [c2L, c2N, c2O, c2P, c2R, c2W, c2X + c2Q['ambOff'], c5m + c2Q['ambOff'], c5N],
                        'group': c5P
                    });
                } else
                    this['addPlane'](c2L, c2N, c2O, c2X, c5m, {
                        'src': 'ambient_' + (c5N || 0x0),
                        'euler': 'ZYX',
                        'depthWrite': !0x1
                    }, c2P, c2R, c2W);
        }
        ;
        var c5T = [['g6-1-2', 'g4-1-2'], ['g5-1-2', 'g4-0-1'], ['g6-0-1', 'g3-1-2'], ['g5-0-1', 'g3-0-1'], ['g6-0-3', 'g2-0-3'], ['g5-0-3', 'g2-1-1'], ['g6-1-1', 'g1-0-3'], ['g5-1-1', 'g1-1-1'], ['g6-0-2', 'g1-1-0'], ['g5-0-2', 'g1-0-2'], ['g6-1-0', 'g2-1-0'], ['g5-1-0', 'g2-0-2'], ['g4-0-2', 'g1-0-0'], ['g3-0-2', 'g1-1-3'], ['g4-1-0', 'g2-0-0'], ['g3-1-0', 'g2-1-3'], ['g4-0-3', 'g2-1-2'], ['g3-0-3', 'g2-0-1'], ['g4-1-1', 'g1-1-2'], ['g3-1-1', 'g1-0-1'], ['g6-1-3', 'g3-0-0'], ['g5-1-3', 'g3-1-3'], ['g6-0-0', 'g4-0-0'], ['g5-0-0', 'g4-1-3']];
        this['groupsMatch'] = function(c2L, c2M) {
            for (var c2N = 0x0; c2N < c5T['length']; ++c2N)
                if (0x0 <= c5T[c2N]['indexOf'](c2L) && 0x0 <= c5T[c2N]['indexOf'](c2M))
                    return !0x0;
            return !0x1;
        }
        ,
        this['clearAOGroup'] = function(c2L) {
            for (var c2M = c2L['length'] - 0x1; 0x0 <= c2M; --c2M) {
                c2W = c2L[c2M];
                for (var c2N = c2L['length'] - 0x1; 0x0 <= c2N; --c2N)
                    if (c2X = c2L[c2N],
                    !c2W['dontAdd'] && !c2X['dontAdd'] && c2W != c2X && this['groupsMatch'](c2W['group'], c2X['group'])) {
                        c2W['vals'][0x6] + c2W['vals'][0x7] >= c2X['vals'][0x6] + c2X['vals'][0x7] ? c2X['dontAdd'] = !0x0 : c2W['dontAdd'] = !0x0;
                        break;
                    }
            }
        }
        ,
        this['addPendingAOs'] = function() {
            for (var c2L in this['aosToAdd'])
                if (this['aosToAdd']['hasOwnProperty'](c2L)) {
                    this['clearAOGroup'](this['aosToAdd'][c2L]);
                    for (var c2M = 0x0; c2M < this['aosToAdd'][c2L]['length']; ++c2M)
                        this['aosToAdd'][c2L][c2M]['dontAdd'] || this['addAmbient'](...this['aosToAdd'][c2L][c2M]['vals']);
                }
            this['aosToAdd'] = {};
        }
        ,
        this['limitAmb'] = function(c2L, c2N, c2O, c2P, c2Q, c2R, c2W) {
            var c2X = [c2M['cdv'][c2P]]
              , c5m = [c2M['cdv'][c2Q]];
            return c2L = c2O == -Math['PI'] / 0x2 || c2O == Math['PI'] + Math['PI'] / 0x2 ? Math['min'](c2L, (c2N[c2Q] - Math['min'](c2R[c2Q] - c2R[c5m], c2W[c2Q] - c2W[c5m])) / 0x2) : c2O == Math['PI'] / 0x2 ? Math['min'](c2L, (Math['max'](c2R[c2Q] + c2R[c5m], c2W[c2Q] + c2W[c5m]) - c2N[c2Q]) / 0x2) : 0x0 == c2O ? Math['min'](c2L, (Math['max'](c2R[c2P] + c2R[c2X], c2W[c2P] + c2W[c2X]) - c2N[c2P]) / 0x2) : Math['min'](c2L, (c2N[c2P] - Math['min'](c2R[c2P] - c2R[c2X], c2W[c2P] - c2W[c2X])) / 0x2);
        }
        ,
        this['resetAll'] = function() {
            this['aosToAdd'] = {};
            for (var c2M = 0x0; c2M < this['objects']['length']; ++c2M)
                this['objects'][c2M]['active'] = !0x0,
                this['objects'][c2M]['startHealth'] && (this['objects'][c2M]['health'] = this['objects'][c2M]['startHealth']),
                this['objects'][c2M]['meshRef'] && (this['objects'][c2M]['meshRef']['visible'] = !0x0);
            c2L && c2L['updateShadowMap']();
        }
        ,
        this['removeAll'] = function() {
            this['objects']['length'] = 0x0,
            this['objectives']['length'] = 0x0,
            this['flags']['length'] = 0x0,
            this['pickups']['length'] = 0x0,
            this['teleporters']['length'] = 0x0;
        }
        ;
    }
    ;
}
, function(c6c, c6d) {
    c6c['exports'] = [{
        'name': 'Triggerman',
        'loadout': [0x1],
        'secondary': !0x0,
        'colors': [0xa77860, 0x3d3d3d, 0x232323, 0x282828, 0x6c5042, 0xbfbfbf],
        'health': 0x64,
        'segs': 0x6,
        'speed': 1.05
    }, {
        'name': 'Hunter',
        'loadout': [0x0],
        'secondary': !0x0,
        'colors': [0xa77860, 0x7b573d, 0x634732, 0x282828, 0x634732, 0x3d2b1d],
        'health': 0x3c,
        'segs': 0x5,
        'speed': 1.05
    }, {
        'name': 'Run\x20N\x20Gun',
        'loadout': [0x3],
        'colors': [0xa77860, 0x3e6382, 0x2f4b63, 0x282828, 0x634732, 0x1a2b3a],
        'health': 0x64,
        'segs': 0x6,
        'speed': 1.18
    }, {
        'name': 'Spray\x20N\x20Pray',
        'loadout': [0x6],
        'txts': ['Calling\x20in\x20the\x20Big\x20Guns?', 'Remember\x20-\x20No\x20russian.', 'Pesky\x20Snipers...'],
        'colors': [0xa77860, 0x586849, 0x49563c, 0x282828, 0x282828, 0x303827],
        'health': 0xaa,
        'segs': 0x7,
        'regen': 0.05,
        'speed': 0x1
    }, {
        'name': 'Vince',
        'loadout': [0x5],
        'secondary': !0x0,
        'colors': [0x805c4a, 0x545267, 0x3f3d4d, 0x282828, 0x282828, 0x292833],
        'health': 0x64,
        'segs': 0x6,
        'speed': 0x1
    }, {
        'name': 'Detective',
        'loadout': [0x4],
        'colors': [0xa77860, 0x704e36, 0x434c5e, 0x282828, 0x634732, 0x3f2c1e],
        'health': 0x64,
        'segs': 0x6,
        'speed': 0x1
    }, {
        'name': 'Marksman',
        'loadout': [0x7],
        'secondary': !0x0,
        'colors': [0xa77860, 0x586849, 0x49563c, 0x282828, 0x282828, 0x293022],
        'health': 0x5a,
        'segs': 0x6,
        'speed': 0x1
    }, {
        'name': 'Rocketeer',
        'loadout': [0x8],
        'secondary': !0x0,
        'txts': ['...'],
        'colors': [0xa77860, 0x586849, 0x49563c, 0x282828, 0x6c5042, 0x2b3324],
        'health': 0x82,
        'segs': 0x7,
        'speed': 0.86
    }, {
        'name': 'Agent',
        'loadout': [0x9],
        'colors': [0xa77860, 0x3d3d3d, 0x232323, 0x282828, 0x282828, 0xbfbfbf],
        'health': 0x64,
        'segs': 0x6,
        'speed': 1.2
    }, {
        'name': 'Runner',
        'txts': ['You\x20sure\x20about\x20this?', '...', 'Oh\x20boy', 'I\x20don\x27t\x20know\x20about\x20this...', 'Not\x20me\x20again...'],
        'loadout': [0xc],
        'colors': [0xa77860, 0x3d3d3d, 0x232323, 0x282828, 0x282828, 0x232323],
        'health': 0x64,
        'segs': 0x6,
        'regen': 0.2,
        'speed': 0x1
    }, {
        'name': 'Deagler',
        'hide': !0x0,
        'loadout': [0xa],
        'colors': [0xa77860, 0x3d3d3d, 0x232323, 0x282828, 0x282828, 0x232323],
        'health': 0x3c,
        'segs': 0x5,
        'speed': 0x1
    }, {
        'name': 'Bowman',
        'loadout': [0xd],
        'secondary': !0x0,
        'colors': [0xa77860, 0x916c52, 0x60432e, 0x282828, 0x282828, 0x473527],
        'health': 0x64,
        'segs': 0x6,
        'speed': 0x1
    }, {
        'name': 'Commando',
        'loadout': [0xe],
        'secondary': !0x0,
        'colors': [0xa77860, 0x3d3d3d, 0x232323, 0x282828, 0x995c2c, 0x171717],
        'health': 0x64,
        'segs': 0x6,
        'speed': 0x1
    }];
}
, function(c6e, c6f) {
    c6e['exports']['wheels'] = [{
        'name': 'Starter',
        'lab': {
            'nm': 'Any',
            'col': '#E040FB'
        },
        'price': 0x32,
        'rarities': [0x4b, 0x16, 0x3, 0x0, 0x0, 0x0]
    }, {
        'name': 'Elite',
        'lab': {
            'nm': 'Any',
            'col': '#E040FB'
        },
        'price': 0x64,
        'rarities': [0x32, 0x1e, 0xf, 0x5, 0x0, 0x0]
    }, {
        'name': 'Heroic',
        'lab': {
            'nm': 'Any',
            'col': '#E040FB'
        },
        'price': 0x1f4,
        'rarities': [0x0, 0x30, 0x23, 0xe, 2.5, 0.5]
    }, {
        'name': 'Hunter',
        'lab': {
            'nm': 'Snipers\x20Only!',
            'col': '#fab640'
        },
        'itemTypes': [0x0],
        'weaponType': 0x1,
        'price': 0x258,
        'rarities': [0x2b, 0x21, 0x11, 0x6, 0x1, 0x0]
    }, {
        'name': 'Attire',
        'lab': {
            'nm': 'Outfits\x20Only!',
            'col': '#ed4242'
        },
        'itemTypes': [0x1, 0x2],
        'price': 0x2ee,
        'rarities': [0x2b, 0x21, 0x10, 0x6, 0x2, 0x0]
    }, {
        'name': 'Free',
        'free': !0x0,
        'openURL': !0x0,
        'minLvl': 0x5,
        'price': 0x0,
        'priceT': 'Follow\x20for\x20a\x20free\x20Spin',
        'rarities': [0x2b, 0x21, 0x11, 0x6, 0x1, 0x0]
    }],
    c6e['exports']['types'] = ['weapons/weapon_', 'hats/hat_', 'body/body_', 'melee/melee_'],
    c6e['exports']['purchases'] = [{
        'val': 0x12c,
        'price': 0.99
    }, {
        'val': 0x258,
        'price': 1.79
    }, {
        'val': 0xa28,
        'tag': 'Popular!',
        'tagCol': '#ed4242',
        'price': 7.49
    }, {
        'val': 0x1b58,
        'tag': '20%\x20Off',
        'tagCol': '#E040FB',
        'price': 15.99
    }, {
        'val': 0x4e20,
        'tag': '30%\x20Off',
        'tagCol': '#fab640',
        'price': 34.99
    }],
    c6e['exports']['rarities'] = [{
        'name': 'Uncommon',
        'rar': 0x3c,
        'color': '#b2f252'
    }, {
        'name': 'Rare',
        'rar': 0x28,
        'color': '#2196F3'
    }, {
        'name': 'Epic',
        'rar': 0x19,
        'color': '#E040FB'
    }, {
        'name': 'Legendary',
        'rar': 0xa,
        'color': '#FBC02D'
    }, {
        'name': 'Relic',
        'rar': 2.5,
        'color': '#ed4242'
    }, {
        'name': 'Contraband',
        'rar': 0.5,
        'color': '#292929'
    }, {
        'name': 'Unobtainable',
        'noSpin': !0x0,
        'rar': 0x0,
        'color': '#fff53d'
    }],
    c6e['exports']['previews'] = {
        1: {
            'xOff': -0x2,
            'yOff': -2.6,
            'zRota': 0.2,
            'scl': 0.001376794727638135
        },
        2: {
            'xOff': -1.4,
            'yOff': -0.8,
            'scl': 0.001148941748743716
        },
        3: {
            'xOff': 0x0,
            'yOff': 0x1,
            'scl': 0.000676917226130652
        },
        4: {
            'xOff': -1.5,
            'yOff': 0.5,
            'scl': 0.000940741507537686
        },
        5: {
            'xOff': -0.8,
            'yOff': 0.5,
            'scl': 0x2
        },
        6: {
            'xOff': -0x1,
            'scl': 0.00099521137688442
        },
        7: {
            'xOff': -0x1,
            'yOff': -0.9,
            'scl': 0.001221518472361808
        },
        8: {
            'xOff': -0x1,
            'yOff': -0.6,
            'scl': 0.0012179208743718641
        },
        9: {
            'xOff': -1.2,
            'yOff': -0x1,
            'scl': 0.0010676876984924638
        },
        10: {
            'scl': 1.6
        }
    },
    c6e['exports']['skins'] = [{
        'name': 'Arctic\x20Hunt',
        'id': 0x0,
        'weapon': 0x1,
        'rarity': 0x1
    }, {
        'name': 'Autumn\x20Hunt',
        'id': 0x1,
        'weapon': 0x1,
        'rarity': 0x1
    }, {
        'name': 'Reticle\x20Blaze',
        'id': 0x2,
        'weapon': 0x1,
        'rarity': 0x2
    }, {
        'name': 'Digital\x20Hunt',
        'id': 0x3,
        'weapon': 0x1,
        'rarity': 0x0
    }, {
        'name': 'Moon\x20Dragon',
        'id': 0x4,
        'weapon': 0x1,
        'rarity': 0x3
    }, {
        'name': 'Scharfschütze',
        'id': 0x5,
        'weapon': 0x1,
        'rarity': 0x1
    }, {
        'name': 'Woodland\x20Sniper',
        'id': 0x6,
        'weapon': 0x1,
        'rarity': 0x0
    }, {
        'name': 'Hazard\x20Reticle',
        'id': 0x7,
        'weapon': 0x1,
        'rarity': 0x1
    }, {
        'name': 'Kodac\x20Reticle',
        'id': 0x8,
        'weapon': 0x1,
        'rarity': 0x1
    }, {
        'name': 'Seafarer',
        'id': 0x9,
        'weapon': 0x1,
        'rarity': 0x0
    }, {
        'name': 'Acid\x20Breath',
        'glow': !0x0,
        'id': 0xa,
        'weapon': 0x1,
        'rarity': 0x3
    }, {
        'name': 'Trail\x20Scout',
        'id': 0xb,
        'weapon': 0x1,
        'rarity': 0x0
    }, {
        'name': 'Arctic\x20AK',
        'id': 0x0,
        'weapon': 0x2,
        'rarity': 0x1
    }, {
        'name': 'Autumn\x20AK',
        'id': 0x1,
        'weapon': 0x2,
        'rarity': 0x1
    }, {
        'name': 'Blaze\x20AK',
        'id': 0x2,
        'weapon': 0x2,
        'rarity': 0x2
    }, {
        'name': 'Digital\x20AK',
        'id': 0x3,
        'weapon': 0x2,
        'rarity': 0x0
    }, {
        'name': 'Luna\x20Dragon',
        'id': 0x4,
        'weapon': 0x2,
        'rarity': 0x3
    }, {
        'name': 'Flecken\x20AK',
        'id': 0x5,
        'weapon': 0x2,
        'rarity': 0x1
    }, {
        'name': 'Woodland\x20AK',
        'id': 0x6,
        'weapon': 0x2,
        'rarity': 0x0
    }, {
        'name': 'Hazard\x20AK',
        'id': 0x7,
        'weapon': 0x2,
        'rarity': 0x1
    }, {
        'name': 'Kodac\x20AK',
        'id': 0x8,
        'weapon': 0x2,
        'rarity': 0x1
    }, {
        'name': 'Seafarer\x20AK',
        'id': 0x9,
        'weapon': 0x2,
        'rarity': 0x0
    }, {
        'name': 'Trail\x20AK',
        'id': 0xa,
        'weapon': 0x2,
        'rarity': 0x0
    }, {
        'name': 'SMG\x20Arctic',
        'id': 0x0,
        'weapon': 0x4,
        'rarity': 0x1
    }, {
        'name': 'SMG\x20Autumn',
        'id': 0x1,
        'weapon': 0x4,
        'rarity': 0x1
    }, {
        'name': 'SMG\x20Blaze',
        'id': 0x2,
        'weapon': 0x4,
        'rarity': 0x2
    }, {
        'name': 'SMG\x20Digital',
        'id': 0x3,
        'weapon': 0x4,
        'rarity': 0x0
    }, {
        'name': 'SMG\x20Flecken',
        'id': 0x4,
        'weapon': 0x4,
        'rarity': 0x1
    }, {
        'name': 'SMG\x20Woodland',
        'id': 0x5,
        'weapon': 0x4,
        'rarity': 0x0
    }, {
        'name': 'SMG\x20Hazard',
        'id': 0x6,
        'weapon': 0x4,
        'rarity': 0x1
    }, {
        'name': 'SMG\x20Kodac',
        'id': 0x7,
        'weapon': 0x4,
        'rarity': 0x1
    }, {
        'name': 'SMG\x20Seafarer',
        'id': 0x8,
        'weapon': 0x4,
        'rarity': 0x0
    }, {
        'name': 'SMG\x20Trail',
        'id': 0x9,
        'weapon': 0x4,
        'rarity': 0x0
    }, {
        'name': 'Arctic\x20Python',
        'id': 0x0,
        'weapon': 0x5,
        'rarity': 0x1
    }, {
        'name': 'Autumn\x20Python',
        'id': 0x1,
        'weapon': 0x5,
        'rarity': 0x1
    }, {
        'name': 'Blaze\x20Python',
        'id': 0x2,
        'weapon': 0x5,
        'rarity': 0x2
    }, {
        'name': 'Digital\x20Python',
        'id': 0x3,
        'weapon': 0x5,
        'rarity': 0x0
    }, {
        'name': 'Flecken\x20Python',
        'id': 0x4,
        'weapon': 0x5,
        'rarity': 0x1
    }, {
        'name': 'Woodland',
        'id': 0x5,
        'weapon': 0x5,
        'rarity': 0x0
    }, {
        'name': 'Hazard\x20Python',
        'id': 0x6,
        'weapon': 0x5,
        'rarity': 0x1
    }, {
        'name': 'Kodac\x20Python',
        'id': 0x7,
        'weapon': 0x5,
        'rarity': 0x1
    }, {
        'name': 'Seafarer',
        'id': 0x8,
        'weapon': 0x5,
        'rarity': 0x0
    }, {
        'name': 'Trail\x20Python',
        'id': 0x9,
        'weapon': 0x5,
        'rarity': 0x0
    }, {
        'name': 'Arctic\x20Slug',
        'id': 0x0,
        'weapon': 0x6,
        'rarity': 0x1
    }, {
        'name': 'Autumn\x20Slug',
        'id': 0x1,
        'weapon': 0x6,
        'rarity': 0x1
    }, {
        'name': 'Twin\x20Blaze',
        'id': 0x2,
        'weapon': 0x6,
        'rarity': 0x2
    }, {
        'name': 'SG\x20Digital',
        'id': 0x3,
        'weapon': 0x6,
        'rarity': 0x0
    }, {
        'name': 'Flecken',
        'id': 0x4,
        'weapon': 0x6,
        'rarity': 0x1
    }, {
        'name': 'Woodland',
        'id': 0x5,
        'weapon': 0x6,
        'rarity': 0x0
    }, {
        'name': 'Hazard\x20Slug',
        'id': 0x6,
        'weapon': 0x6,
        'rarity': 0x1
    }, {
        'name': 'Kodac\x20Slug',
        'id': 0x7,
        'weapon': 0x6,
        'rarity': 0x1
    }, {
        'name': 'Buccaneer',
        'id': 0x8,
        'weapon': 0x6,
        'rarity': 0x0
    }, {
        'name': 'SG\x20Trail',
        'id': 0x9,
        'weapon': 0x6,
        'rarity': 0x0
    }, {
        'name': 'Arctic\x20LMG',
        'id': 0x0,
        'weapon': 0x7,
        'rarity': 0x1
    }, {
        'name': 'Autumn\x20LMG',
        'id': 0x1,
        'weapon': 0x7,
        'rarity': 0x1
    }, {
        'name': 'Blaze\x20LMG',
        'id': 0x2,
        'weapon': 0x7,
        'rarity': 0x2
    }, {
        'name': 'Digital\x20LMG',
        'id': 0x3,
        'weapon': 0x7,
        'rarity': 0x0
    }, {
        'name': 'Flecken\x20LMG',
        'id': 0x4,
        'weapon': 0x7,
        'rarity': 0x1
    }, {
        'name': 'Woodland\x20LMG',
        'id': 0x5,
        'weapon': 0x7,
        'rarity': 0x0
    }, {
        'name': 'Hazard\x20LMG',
        'id': 0x6,
        'weapon': 0x7,
        'rarity': 0x1
    }, {
        'name': 'Kodac\x20LMG',
        'id': 0x7,
        'weapon': 0x7,
        'rarity': 0x1
    }, {
        'name': 'Seafarer\x20LMG',
        'id': 0x8,
        'weapon': 0x7,
        'rarity': 0x0
    }, {
        'name': 'Trail\x20LMG',
        'id': 0x9,
        'weapon': 0x7,
        'rarity': 0x0
    }, {
        'name': 'Arctic\x20Auto',
        'id': 0x0,
        'weapon': 0x8,
        'rarity': 0x1
    }, {
        'name': 'Autumn\x20Auto',
        'id': 0x1,
        'weapon': 0x8,
        'rarity': 0x1
    }, {
        'name': 'Blaze\x20Auto',
        'id': 0x2,
        'weapon': 0x8,
        'rarity': 0x2
    }, {
        'name': 'Digital\x20Auto',
        'id': 0x3,
        'weapon': 0x8,
        'rarity': 0x0
    }, {
        'name': 'Flecken\x20Auto',
        'id': 0x4,
        'weapon': 0x8,
        'rarity': 0x1
    }, {
        'name': 'Woodland\x20Auto',
        'id': 0x5,
        'weapon': 0x8,
        'rarity': 0x0
    }, {
        'name': 'Hazard\x20Auto',
        'id': 0x6,
        'weapon': 0x8,
        'rarity': 0x1
    }, {
        'name': 'Kodac\x20Auto',
        'id': 0x7,
        'weapon': 0x8,
        'rarity': 0x1
    }, {
        'name': 'Seafarer\x20Auto',
        'id': 0x8,
        'weapon': 0x8,
        'rarity': 0x0
    }, {
        'name': 'Trail\x20Auto',
        'id': 0x9,
        'weapon': 0x8,
        'rarity': 0x0
    }, {
        'name': 'Mach\x20Auto',
        'id': 0xa,
        'creator': 'AtarSt',
        'weapon': 0x8,
        'rarity': 0x1
    }, {
        'name': 'Arctic\x20RL',
        'id': 0x0,
        'weapon': 0x9,
        'rarity': 0x1
    }, {
        'name': 'Autumn\x20RL',
        'id': 0x1,
        'weapon': 0x9,
        'rarity': 0x1
    }, {
        'name': 'Blaze\x20RL',
        'id': 0x2,
        'weapon': 0x9,
        'rarity': 0x2
    }, {
        'name': 'Digital\x20RL',
        'id': 0x3,
        'weapon': 0x9,
        'rarity': 0x0
    }, {
        'name': 'Flecken\x20RL',
        'id': 0x4,
        'weapon': 0x9,
        'rarity': 0x1
    }, {
        'name': 'Woodland\x20RL',
        'id': 0x5,
        'weapon': 0x9,
        'rarity': 0x0
    }, {
        'name': 'Hazard\x20RL',
        'id': 0x6,
        'weapon': 0x9,
        'rarity': 0x1
    }, {
        'name': 'Kodac\x20RL',
        'id': 0x7,
        'weapon': 0x9,
        'rarity': 0x1
    }, {
        'name': 'Seafarer\x20RL',
        'id': 0x8,
        'weapon': 0x9,
        'rarity': 0x0
    }, {
        'name': 'Trail\x20RL',
        'id': 0x9,
        'weapon': 0x9,
        'rarity': 0x0
    }, {
        'name': '101\x20Skullbreaker',
        'id': 0xc,
        'weapon': 0x1,
        'rarity': 0x3
    }, {
        'name': 'Reticle\x20Faded',
        'id': 0xd,
        'weapon': 0x1,
        'rarity': 0x0
    }, {
        'name': 'Puma\x20Sniper',
        'id': 0xe,
        'weapon': 0x1,
        'rarity': 0x0
    }, {
        'name': 'Scoped\x20Elite',
        'id': 0xf,
        'weapon': 0x1,
        'rarity': 0x2
    }, {
        'name': 'Faded\x20AK',
        'id': 0xb,
        'weapon': 0x2,
        'rarity': 0x0
    }, {
        'name': 'Puma\x20AR',
        'id': 0xc,
        'weapon': 0x2,
        'rarity': 0x1
    }, {
        'name': 'SMG\x20Fade',
        'id': 0xa,
        'weapon': 0x4,
        'rarity': 0x0
    }, {
        'name': 'SMG\x20Puma',
        'id': 0xb,
        'weapon': 0x4,
        'rarity': 0x1
    }, {
        'name': 'Faded\x20Python',
        'id': 0xa,
        'weapon': 0x5,
        'rarity': 0x0
    }, {
        'name': 'Puma\x20Python',
        'id': 0xb,
        'weapon': 0x5,
        'rarity': 0x1
    }, {
        'name': 'SG\x20Fade',
        'id': 0xa,
        'weapon': 0x6,
        'rarity': 0x0
    }, {
        'name': 'Slug\x20Puma',
        'id': 0xb,
        'weapon': 0x6,
        'rarity': 0x1
    }, {
        'name': 'Faded\x20LMG',
        'id': 0xa,
        'weapon': 0x7,
        'rarity': 0x0
    }, {
        'name': 'Puma\x20LMG',
        'id': 0xb,
        'weapon': 0x7,
        'rarity': 0x1
    }, {
        'name': 'Faded\x20MMR',
        'id': 0xb,
        'weapon': 0x8,
        'rarity': 0x0
    }, {
        'name': 'Puma\x20MMR',
        'id': 0xc,
        'weapon': 0x8,
        'rarity': 0x1
    }, {
        'name': 'Faded\x20RTL',
        'id': 0xa,
        'weapon': 0x9,
        'rarity': 0x0
    }, {
        'name': 'Puma\x20RTL',
        'id': 0xb,
        'weapon': 0x9,
        'rarity': 0x1
    }, {
        'name': 'Scoped\x20Carbon',
        'id': 0x10,
        'weapon': 0x1,
        'rarity': 0x0
    }, {
        'name': 'Carbon\x20AK',
        'id': 0xd,
        'weapon': 0x2,
        'rarity': 0x0
    }, {
        'name': 'SMG\x20Carbon',
        'id': 0xc,
        'weapon': 0x4,
        'rarity': 0x0
    }, {
        'name': 'Carbon\x20Python',
        'id': 0xc,
        'weapon': 0x5,
        'rarity': 0x0
    }, {
        'name': 'SG\x20Carbon',
        'id': 0xc,
        'weapon': 0x6,
        'rarity': 0x0
    }, {
        'name': 'Carbon\x20LMG',
        'id': 0xc,
        'weapon': 0x7,
        'rarity': 0x0
    }, {
        'name': 'Carbon\x20MMR',
        'id': 0xd,
        'weapon': 0x8,
        'rarity': 0x0
    }, {
        'name': 'Carbon\x20RTL',
        'id': 0xc,
        'weapon': 0x9,
        'rarity': 0x0
    }, {
        'name': 'Neon\x20Ripper',
        'id': 0xe,
        'glow': !0x0,
        'weapon': 0x2,
        'rarity': 0x4
    }, {
        'name': 'Top\x20Hat',
        'type': 0x1,
        'scl': 2.5,
        'sitOff': 0.4,
        'yOff': -0x4,
        'id': 0x1,
        'rarity': 0x2
    }, {
        'name': 'SMG\x20Spitfire',
        'id': 0xd,
        'weapon': 0x4,
        'rarity': 0x3
    }, {
        'name': 'Cowboy\x20Hat',
        'type': 0x1,
        'scl': 2.5,
        'sitOff': 0.4,
        'yOff': -0x3,
        'id': 0x0,
        'rarity': 0x0
    }, {
        'name': 'Flame\x20Tamer',
        'id': 0xd,
        'weapon': 0x5,
        'glow': !0x0,
        'rarity': 0x4
    }, {
        'name': 'Cool\x20Cap',
        'type': 0x1,
        'scl': 2.5,
        'sitOff': 0.4,
        'yOff': -0x3,
        'xOff': 0x2,
        'id': 0x2,
        'rarity': 0x1
    }, {
        'name': 'Jack\x20O\x27\x20Lantern',
        'type': 0x1,
        'scl': 2.8,
        'glow': !0x0,
        'sclMlt': 1.4,
        'sitOff': 2.05,
        'yOff': -0x4,
        'id': 0x3,
        'rarity': 0x3
    }, {
        'name': 'Medic\x20Helmet',
        'type': 0x1,
        'scl': 2.8,
        'sclMlt': 0x1,
        'sitOff': 0.65,
        'yOff': -2.5,
        'id': 0x4,
        'rarity': 0x2
    }, {
        'name': 'Neon\x20Reaver',
        'creator': 'Electrode_',
        'id': 0x11,
        'glow': !0x0,
        'weapon': 0x1,
        'rarity': 0x4
    }, {
        'name': 'Sun\x20Glasses',
        'type': 0x1,
        'scl': 2.8,
        'sclMlt': 0x1,
        'sitOff': 2.3,
        'yOff': -0x5,
        'xOff': 0x2,
        'id': 0x5,
        'rarity': 0x0
    }, {
        'name': 'Afro',
        'type': 0x1,
        'scl': 0x2,
        'sclMlt': 0.9,
        'sitOff': 1.4,
        'yOff': -0x4,
        'id': 0x6,
        'rarity': 0x0
    }, {
        'name': 'Hard\x20Hat',
        'type': 0x1,
        'scl': 0x3,
        'sitOff': 0.4,
        'yOff': -0x3,
        'id': 0x7,
        'rarity': 0x0
    }, {
        'name': 'Zombie\x20Head',
        'type': 0x1,
        'scl': 2.8,
        'glow': !0x0,
        'sclMlt': 1.2,
        'sitOff': 2.05,
        'yOff': -0x4,
        'id': 0x8,
        'rarity': 0x3
    }, {
        'name': 'Barbed\x20Rifle',
        'id': 0x12,
        'weapon': 0x1,
        'rarity': 0x2
    }, {
        'name': 'Blushed\x20Sniper',
        'id': 0x13,
        'weapon': 0x1,
        'rarity': 0x0
    }, {
        'name': 'AWP\x20Mech',
        'id': 0x14,
        'weapon': 0x1,
        'rarity': 0x1
    }, {
        'name': 'Olympus\x20Rifle',
        'id': 0x15,
        'weapon': 0x1,
        'rarity': 0x2
    }, {
        'name': 'Scoped\x20Tuscan',
        'id': 0x16,
        'weapon': 0x1,
        'rarity': 0x1
    }, {
        'name': 'AWP\x20Pacemaker',
        'id': 0x17,
        'weapon': 0x1,
        'rarity': 0x4,
        'glow': !0x0
    }, {
        'name': 'AR\x20Wired',
        'id': 0xf,
        'weapon': 0x2,
        'rarity': 0x2
    }, {
        'name': 'Blushed\x20AK',
        'id': 0x10,
        'weapon': 0x2,
        'rarity': 0x0
    }, {
        'name': 'Mach\x20Rifle',
        'id': 0x11,
        'weapon': 0x2,
        'rarity': 0x1
    }, {
        'name': 'Olympus\x20Rifle',
        'id': 0x12,
        'weapon': 0x2,
        'rarity': 0x2
    }, {
        'name': 'AR\x20Tuscan',
        'id': 0x13,
        'weapon': 0x2,
        'rarity': 0x1
    }, {
        'name': 'SMG\x20Barbed',
        'id': 0xe,
        'weapon': 0x4,
        'rarity': 0x2
    }, {
        'name': 'SMG\x20Blossom',
        'id': 0xf,
        'weapon': 0x4,
        'rarity': 0x0
    }, {
        'name': 'SMG\x20Machinist',
        'id': 0x10,
        'weapon': 0x4,
        'rarity': 0x1
    }, {
        'name': 'SMG\x20Lazarus',
        'id': 0x11,
        'weapon': 0x4,
        'rarity': 0x2
    }, {
        'name': 'SMG\x20Tuscan',
        'id': 0x12,
        'weapon': 0x4,
        'rarity': 0x1
    }, {
        'name': 'Barbed\x20Python',
        'id': 0xe,
        'weapon': 0x5,
        'rarity': 0x2
    }, {
        'name': 'Blushed\x20Revolver',
        'id': 0xf,
        'weapon': 0x5,
        'rarity': 0x0
    }, {
        'name': 'Machinist\x20Python',
        'id': 0x10,
        'weapon': 0x5,
        'rarity': 0x1
    }, {
        'name': 'REV\x20Olympus',
        'id': 0x11,
        'weapon': 0x5,
        'rarity': 0x2
    }, {
        'name': 'Tuscan\x20Revolver',
        'id': 0x12,
        'weapon': 0x5,
        'rarity': 0x1
    }, {
        'name': 'Coach\x20Barb',
        'id': 0xd,
        'weapon': 0x6,
        'rarity': 0x2
    }, {
        'name': 'Blossom',
        'id': 0xe,
        'weapon': 0x6,
        'rarity': 0x0
    }, {
        'name': 'MD\x20Frag',
        'id': 0xf,
        'weapon': 0x6,
        'rarity': 0x1
    }, {
        'name': 'SG\x20Olympus',
        'id': 0x10,
        'weapon': 0x6,
        'rarity': 0x2
    }, {
        'name': 'SG\x20Tuscan',
        'id': 0x11,
        'weapon': 0x6,
        'rarity': 0x1
    }, {
        'name': 'Blushed\x20LMG',
        'id': 0xd,
        'weapon': 0x7,
        'rarity': 0x0
    }, {
        'name': 'Machinist\x20LMG',
        'id': 0xe,
        'weapon': 0x7,
        'rarity': 0x1
    }, {
        'name': 'Olympus\x20LMG',
        'id': 0xf,
        'weapon': 0x7,
        'rarity': 0x2
    }, {
        'name': 'Tuscan\x20LMG',
        'id': 0x10,
        'weapon': 0x7,
        'rarity': 0x1
    }, {
        'name': 'Barbed\x20Auto',
        'id': 0xe,
        'weapon': 0x8,
        'rarity': 0x2
    }, {
        'name': 'Blushed\x20MMA',
        'id': 0xf,
        'weapon': 0x8,
        'rarity': 0x0
    }, {
        'name': 'Auto\x20Machinist',
        'id': 0x10,
        'weapon': 0x8,
        'rarity': 0x1
    }, {
        'name': 'Olympus\x20MMA',
        'id': 0x11,
        'weapon': 0x8,
        'rarity': 0x2
    }, {
        'name': 'Tuscan\x20MMA',
        'id': 0x12,
        'weapon': 0x8,
        'rarity': 0x1
    }, {
        'name': 'Barbed\x20Launcher',
        'id': 0xd,
        'weapon': 0x9,
        'rarity': 0x2
    }, {
        'name': 'Blushed\x20Launcher',
        'id': 0xe,
        'weapon': 0x9,
        'rarity': 0x0
    }, {
        'name': 'Machinist\x20Launcher',
        'id': 0xf,
        'weapon': 0x9,
        'rarity': 0x1
    }, {
        'name': 'Olympus\x20Launcher',
        'id': 0x10,
        'weapon': 0x9,
        'rarity': 0x2
    }, {
        'name': 'Tuscan\x20Launcher',
        'id': 0x11,
        'weapon': 0x9,
        'rarity': 0x1
    }, {
        'name': 'Omen',
        'glow': !0x0,
        'id': 0x18,
        'creator': 'Zino',
        'weapon': 0x1,
        'rarity': 0x3
    }, {
        'name': 'Scoped\x20Moss',
        'id': 0x19,
        'weapon': 0x1,
        'rarity': 0x0
    }, {
        'name': 'Swamped\x20Scope',
        'id': 0x1a,
        'weapon': 0x1,
        'rarity': 0x0
    }, {
        'name': 'Tiger\x20Bolt',
        'id': 0x1b,
        'weapon': 0x1,
        'rarity': 0x2
    }, {
        'name': 'Zebra\x20Bolt',
        'id': 0x1c,
        'weapon': 0x1,
        'rarity': 0x2
    }, {
        'name': 'Necron\x20Bolt',
        'id': 0x1d,
        'weapon': 0x1,
        'rarity': 0x4,
        'glow': !0x0
    }, {
        'name': 'Lava\x20Bolt',
        'id': 0x1e,
        'weapon': 0x1,
        'rarity': 0x3
    }, {
        'name': 'Sky\x20Bolt',
        'id': 0x1f,
        'weapon': 0x1,
        'rarity': 0x2
    }, {
        'name': 'AWP\x20Iris',
        'id': 0x20,
        'weapon': 0x1,
        'rarity': 0x1
    }, {
        'name': 'Bolt\x20Wanderer',
        'id': 0x21,
        'weapon': 0x1,
        'rarity': 0x1
    }, {
        'name': 'Mossy\x20Rifle',
        'id': 0x14,
        'weapon': 0x2,
        'rarity': 0x1
    }, {
        'name': 'Swamped\x20AK',
        'id': 0x15,
        'weapon': 0x2,
        'rarity': 0x0
    }, {
        'name': 'Tiger\x20Rifle',
        'id': 0x16,
        'weapon': 0x2,
        'rarity': 0x2
    }, {
        'name': 'Zebra\x20Rifle',
        'id': 0x17,
        'weapon': 0x2,
        'rarity': 0x2
    }, {
        'name': 'Plasma\x20Rifle',
        'id': 0x18,
        'weapon': 0x2,
        'rarity': 0x4,
        'glow': !0x0
    }, {
        'name': 'Lava\x20Rifle',
        'id': 0x19,
        'weapon': 0x2,
        'glow': !0x0,
        'rarity': 0x3
    }, {
        'name': 'Sky\x20Rifle',
        'id': 0x1a,
        'weapon': 0x2,
        'rarity': 0x2
    }, {
        'name': 'Bark\x20AK',
        'id': 0x1b,
        'weapon': 0x2,
        'rarity': 0x0
    }, {
        'name': 'Rifle\x20Wanderer',
        'id': 0x1c,
        'weapon': 0x2,
        'rarity': 0x0
    }, {
        'name': 'SMG\x20Growth',
        'id': 0x13,
        'weapon': 0x4,
        'rarity': 0x1
    }, {
        'name': 'SMG\x20Marsh',
        'id': 0x14,
        'weapon': 0x4,
        'rarity': 0x0
    }, {
        'name': 'SMG\x20Tigris',
        'id': 0x15,
        'weapon': 0x4,
        'rarity': 0x2
    }, {
        'name': 'SMG\x20Safari',
        'id': 0x16,
        'weapon': 0x4,
        'rarity': 0x2
    }, {
        'name': 'Rapid\x20Plasma',
        'id': 0x17,
        'weapon': 0x4,
        'rarity': 0x4,
        'glow': !0x0
    }, {
        'name': 'Lava\x20SMG',
        'id': 0x18,
        'weapon': 0x4,
        'rarity': 0x3,
        'glow': !0x0
    }, {
        'name': 'UMP\x20Atmos',
        'id': 0x19,
        'weapon': 0x4,
        'rarity': 0x2
    }, {
        'name': 'Birch\x20SMG',
        'id': 0x1a,
        'weapon': 0x4,
        'rarity': 0x0
    }, {
        'name': 'SMG\x20Wanderer',
        'id': 0x1b,
        'weapon': 0x4,
        'rarity': 0x0
    }, {
        'name': 'Mossy\x20Python',
        'id': 0x13,
        'weapon': 0x5,
        'rarity': 0x1
    }, {
        'name': 'Swamped\x20Revolver',
        'id': 0x14,
        'weapon': 0x5,
        'rarity': 0x0
    }, {
        'name': 'Tiger\x20Python',
        'id': 0x15,
        'weapon': 0x5,
        'rarity': 0x2
    }, {
        'name': 'Zebra\x20Python',
        'id': 0x16,
        'weapon': 0x5,
        'rarity': 0x2
    }, {
        'name': 'Venomous',
        'creator': 'Rengar',
        'glow': !0x0,
        'id': 0x17,
        'weapon': 0x5,
        'rarity': 0x3
    }, {
        'name': 'Lava\x20Revolver',
        'id': 0x18,
        'weapon': 0x5,
        'rarity': 0x3
    }, {
        'name': 'Sky\x20Python',
        'id': 0x19,
        'weapon': 0x5,
        'rarity': 0x2,
        'glow': !0x0
    }, {
        'name': 'Bark\x20Python',
        'id': 0x1a,
        'weapon': 0x5,
        'rarity': 0x0
    }, {
        'name': 'Wanderer\x20Python',
        'id': 0x1b,
        'weapon': 0x5,
        'rarity': 0x0
    }, {
        'name': 'Gabrand',
        'id': 0x13,
        'weapon': 0x6,
        'rarity': 0x1
    }, {
        'name': 'Tennessee',
        'id': 0x14,
        'weapon': 0x6,
        'rarity': 0x0
    }, {
        'name': 'SG\x20Tigris',
        'id': 0x15,
        'weapon': 0x6,
        'rarity': 0x2
    }, {
        'name': 'Safaris',
        'id': 0x16,
        'weapon': 0x6,
        'rarity': 0x2
    }, {
        'name': 'Neuromance',
        'id': 0x17,
        'weapon': 0x6,
        'rarity': 0x4,
        'glow': !0x0
    }, {
        'name': 'Anatomis',
        'id': 0x18,
        'weapon': 0x6,
        'rarity': 0x3,
        'glow': !0x0
    }, {
        'name': 'Sky\x20Pump',
        'id': 0x19,
        'weapon': 0x6,
        'rarity': 0x2
    }, {
        'name': 'Bark\x20Slug',
        'id': 0x1a,
        'weapon': 0x6,
        'rarity': 0x0
    }, {
        'name': 'Slug\x20Wanderer',
        'id': 0x1b,
        'weapon': 0x6,
        'rarity': 0x0
    }, {
        'name': 'Mossy\x20LMG',
        'id': 0x11,
        'weapon': 0x7,
        'rarity': 0x1
    }, {
        'name': 'Swamped\x20LMG',
        'id': 0x12,
        'weapon': 0x7,
        'rarity': 0x0
    }, {
        'name': 'Tiger\x20LMG',
        'id': 0x13,
        'weapon': 0x7,
        'rarity': 0x2
    }, {
        'name': 'Zebra\x20LMG',
        'id': 0x14,
        'weapon': 0x7,
        'rarity': 0x2
    }, {
        'name': 'Heavy\x20Plasma',
        'id': 0x15,
        'weapon': 0x7,
        'rarity': 0x4,
        'glow': !0x0
    }, {
        'name': 'Lava\x20LMG',
        'id': 0x16,
        'weapon': 0x7,
        'rarity': 0x3
    }, {
        'name': 'Sky\x20LMG',
        'id': 0x17,
        'weapon': 0x7,
        'rarity': 0x2,
        'glow': !0x0
    }, {
        'name': 'Bark\x20LMG',
        'id': 0x18,
        'weapon': 0x7,
        'rarity': 0x0
    }, {
        'name': 'LMG\x20Wanderer',
        'id': 0x19,
        'weapon': 0x7,
        'rarity': 0x0
    }, {
        'name': 'Overgrowth',
        'id': 0x13,
        'weapon': 0x8,
        'rarity': 0x1
    }, {
        'name': 'Marshland',
        'id': 0x14,
        'weapon': 0x8,
        'rarity': 0x0
    }, {
        'name': 'Tiger\x20MMA',
        'id': 0x15,
        'weapon': 0x8,
        'rarity': 0x2
    }, {
        'name': 'Zebra\x20MMA',
        'id': 0x16,
        'weapon': 0x8,
        'rarity': 0x2
    }, {
        'name': 'MMA\x20Plasma',
        'id': 0x17,
        'weapon': 0x8,
        'rarity': 0x4,
        'glow': !0x0
    }, {
        'name': 'Magnis',
        'id': 0x18,
        'weapon': 0x8,
        'rarity': 0x3,
        'glow': !0x0
    }, {
        'name': 'Sky\x20AUTO',
        'id': 0x19,
        'weapon': 0x8,
        'rarity': 0x2
    }, {
        'name': 'Bark\x20AUTO',
        'id': 0x1a,
        'weapon': 0x8,
        'rarity': 0x0
    }, {
        'name': 'MMA\x20Wanderer',
        'id': 0x1b,
        'weapon': 0x8,
        'rarity': 0x0
    }, {
        'name': 'Mossy\x20Rocket',
        'id': 0x12,
        'weapon': 0x9,
        'rarity': 0x1
    }, {
        'name': 'Swamped\x20Launcher',
        'id': 0x13,
        'weapon': 0x9,
        'rarity': 0x0
    }, {
        'name': 'Tiger\x20Rocket',
        'id': 0x14,
        'weapon': 0x9,
        'rarity': 0x2
    }, {
        'name': 'Zebra\x20Launcher',
        'id': 0x15,
        'weapon': 0x9,
        'rarity': 0x2
    }, {
        'name': 'Plasma\x20Nuke',
        'id': 0x16,
        'weapon': 0x9,
        'rarity': 0x4,
        'glow': !0x0
    }, {
        'name': 'Lava\x20Rocket',
        'id': 0x17,
        'weapon': 0x9,
        'rarity': 0x3
    }, {
        'name': 'Sky\x20Launcher',
        'id': 0x18,
        'weapon': 0x9,
        'rarity': 0x2
    }, {
        'name': 'Bark\x20Launcher',
        'id': 0x19,
        'weapon': 0x9,
        'rarity': 0x0
    }, {
        'name': 'Wanderer\x20Rocket',
        'id': 0x1a,
        'weapon': 0x9,
        'rarity': 0x0
    }, {
        'name': 'Purple\x20Cap',
        'id': 0x2,
        'tex': 0x1,
        'type': 0x1,
        'scl': 2.5,
        'sitOff': 0.4,
        'yOff': -0x3,
        'xOff': 0x2,
        'rarity': 0x0
    }, {
        'name': 'Bear\x20Mask',
        'id': 0x9,
        'type': 0x1,
        'scl': 2.5,
        'sclMlt': 1.3,
        'sitOff': 2.05,
        'yOff': -0x4,
        'xOff': 0x1,
        'rarity': 0x2
    }, {
        'name': 'Panda\x20Mask',
        'id': 0x9,
        'tex': 0x1,
        'type': 0x1,
        'scl': 2.5,
        'sclMlt': 1.3,
        'sitOff': 2.05,
        'yOff': -0x4,
        'xOff': 0x1,
        'rarity': 0x2
    }, {
        'name': 'Brown\x20Beard',
        'id': 0xb,
        'type': 0x1,
        'scl': 2.8,
        'sclMlt': 0.9,
        'sitOff': 0x2,
        'yOff': -0x3,
        'rarity': 0x2
    }, {
        'name': 'Blonde\x20Beard',
        'id': 0xb,
        'tex': 0x1,
        'type': 0x1,
        'scl': 2.8,
        'sclMlt': 0.9,
        'sitOff': 0x2,
        'yOff': -0x3,
        'rarity': 0x2
    }, {
        'name': 'Skull\x20Mask',
        'id': 0xc,
        'type': 0x1,
        'scl': 0x3,
        'glow': !0x0,
        'sclMlt': 1.05,
        'sitOff': 2.5,
        'sitOffZ': 1.1,
        'yOff': -4.5,
        'xOff': -0x3,
        'tex': 0x0,
        'rarity': 0x3
    }, {
        'name': 'Red\x20Beanie',
        'id': 0xd,
        'type': 0x1,
        'scl': 0x3,
        'sclMlt': 1.1,
        'sitOff': 0.4,
        'yOff': -0x3,
        'tex': 0x0,
        'rarity': 0x0
    }, {
        'name': 'Blue\x20Beanie',
        'id': 0xd,
        'type': 0x1,
        'scl': 0x3,
        'sclMlt': 1.1,
        'sitOff': 0.4,
        'yOff': -0x3,
        'tex': 0x1,
        'rarity': 0x0
    }, {
        'name': 'Krunk\x20Headset',
        'id': 0xe,
        'type': 0x1,
        'scl': 0x2,
        'sclMlt': 1.1,
        'sitOff': 1.4,
        'yOff': -0x4,
        'rarity': 0x2
    }, {
        'name': 'Cherry\x20Headset',
        'id': 0xe,
        'type': 0x1,
        'tex': 0x1,
        'scl': 0x2,
        'sclMlt': 1.1,
        'sitOff': 1.4,
        'yOff': -0x4,
        'rarity': 0x2
    }, {
        'name': 'Demonic\x20Wings',
        'id': 0x0,
        'type': 0x2,
        'glow': !0x0,
        'scl': 3.5,
        'sclMlt': 0x3,
        'xOff': -1.5,
        'sitOff': -1.3,
        'sitOffZ': -1.4,
        'yOff': -0x2,
        'rarity': 0x4
    }, {
        'name': 'Bass\x20Guitar',
        'id': 0x1,
        'type': 0x2,
        'scl': 0x4,
        'sclMlt': 3.8,
        'sitOff': -1.3,
        'sitOffZ': -0x1,
        'yOff': -0x2,
        'rarity': 0x2
    }, {
        'name': 'Samurai\x20Blades',
        'id': 0x2,
        'type': 0x2,
        'glow': !0x0,
        'scl': 0.00048112055276382,
        'sclMlt': 0.000406279577889448,
        'sitOff': -1.3,
        'sitOffZ': -0.95,
        'yOff': -0x1,
        'xOff': -0.5,
        'rarity': 0x3
    }, {
        'name': 'Blood\x20Harvest',
        'id': 0x3,
        'type': 0x2,
        'glow': !0x0,
        'scl': 5.1,
        'sclMlt': 0x5,
        'sitOff': -1.3,
        'sitOffZ': -0.95,
        'yOff': -0x1,
        'rarity': 0x3
    }, {
        'name': 'Panda\x20Body',
        'id': 0x4,
        'type': 0x2,
        'scl': 2.1,
        'sclMlt': 1.3,
        'sitOff': 2.2,
        'sitOffZ': 0x0,
        'yOff': -0x5,
        'rarity': 0x3
    }, {
        'name': 'Bear\x20Body',
        'id': 0x4,
        'tex': 0x1,
        'type': 0x2,
        'scl': 2.1,
        'sclMlt': 1.3,
        'sitOff': 2.2,
        'sitOffZ': 0x0,
        'yOff': -0x5,
        'rarity': 0x3
    }, {
        'name': 'Angelic\x20Wings',
        'id': 0x5,
        'type': 0x2,
        'glow': !0x0,
        'scl': 3.5,
        'sclMlt': 3.6,
        'xOff': -1.5,
        'sitOff': -1.3,
        'sitOffZ': -1.4,
        'yOff': -0x2,
        'rarity': 0x4
    }, {
        'name': 'Ninja\x20Mask',
        'id': 0xf,
        'glow': !0x0,
        'type': 0x1,
        'scl': 2.5,
        'sclMlt': 1.1,
        'sitOff': 2.05,
        'yOff': -0x4,
        'xOff': 0x0,
        'rarity': 0x3
    }, {
        'name': 'Halo',
        'id': 0x10,
        'glow': !0x0,
        'type': 0x1,
        'scl': 3.5,
        'sclMlt': 1.1,
        'sitOff': -0.65,
        'yOff': -0x1,
        'rarity': 0x3
    }, {
        'name': 'Welder\x20Mask',
        'type': 0x1,
        'scl': 2.5,
        'sitOff': 2.1,
        'yOff': -0x3,
        'xOff': 0x1,
        'id': 0x11,
        'rarity': 0x1
    }, {
        'name': 'Diver\x20Goggles',
        'type': 0x1,
        'scl': 2.5,
        'sclMlt': 0.9,
        'sitOff': 0x1,
        'yOff': -0x1,
        'id': 0x12,
        'rarity': 0x1
    }, {
        'name': 'Mad\x20Cap',
        'type': 0x1,
        'tex': 0x2,
        'scl': 2.5,
        'sitOff': 0.4,
        'yOff': -0x3,
        'xOff': 0x2,
        'id': 0x2,
        'rarity': 0x1
    }, {
        'name': 'Ace\x20Cap',
        'type': 0x1,
        'tex': 0x3,
        'scl': 2.5,
        'sitOff': 0.4,
        'yOff': -0x3,
        'xOff': 0x2,
        'id': 0x2,
        'rarity': 0x1
    }, {
        'name': 'Ice\x20Cap',
        'type': 0x1,
        'tex': 0x4,
        'scl': 2.5,
        'sitOff': 0.4,
        'yOff': -0x3,
        'xOff': 0x2,
        'id': 0x2,
        'rarity': 0x1
    }, {
        'name': 'Soldier\x20Pack',
        'id': 0x6,
        'type': 0x2,
        'glow': !0x0,
        'scl': 2.6,
        'sclMlt': 1.8,
        'xOff': 0x1,
        'sitOff': 1.3,
        'sitOffZ': -1.75,
        'yOff': -0x5,
        'rarity': 0x1
    }, {
        'name': 'Robo\x20Wings',
        'id': 0x7,
        'type': 0x2,
        'glow': !0x0,
        'scl': 0x5,
        'sclMlt': 3.9,
        'xOff': -3.5,
        'sitOff': -1.3,
        'sitOffZ': -0.75,
        'yOff': -0x4,
        'rarity': 0x4
    }, {
        'name': 'Basket',
        'id': 0x8,
        'type': 0x2,
        'scl': 3.5,
        'sclMlt': 0x2,
        'xOff': -1.5,
        'sitOff': 0.75,
        'sitOffZ': -0.8,
        'yOff': -0x4,
        'rarity': 0x1
    }, {
        'name': 'Baby\x20Panda',
        'id': 0x9,
        'type': 0x2,
        'scl': 3.5,
        'sclMlt': 0x2,
        'xOff': 0x1,
        'sitOff': 0.75,
        'sitOffZ': -0.8,
        'yOff': -0x5,
        'xRot': Math['PI'],
        'rarity': 0x3
    }, {
        'name': 'Sturm\x20Helmet',
        'type': 0x1,
        'tex': 0x1,
        'scl': 2.8,
        'sclMlt': 0x1,
        'sitOff': 0.65,
        'yOff': -2.5,
        'id': 0x4,
        'rarity': 0x1
    }, {
        'name': 'Brown\x20Afro',
        'type': 0x1,
        'tex': 0x1,
        'scl': 0x2,
        'sclMlt': 0.9,
        'sitOff': 1.4,
        'yOff': -0x4,
        'id': 0x6,
        'rarity': 0x0
    }, {
        'name': 'Acid\x20Skull',
        'id': 0xc,
        'type': 0x1,
        'tex': 0x1,
        'scl': 0x3,
        'glow': !0x0,
        'sclMlt': 1.05,
        'sitOff': 2.5,
        'sitOffZ': 1.1,
        'yOff': -4.5,
        'xOff': -0x3,
        'rarity': 0x3
    }, {
        'name': 'Uranium',
        'type': 0x1,
        'tex': 0x1,
        'scl': 2.5,
        'sitOff': 2.1,
        'yOff': -0x3,
        'xOff': 0x1,
        'id': 0x11,
        'rarity': 0x2
    }, {
        'name': 'Panda\x20King',
        'id': 0x13,
        'glow': !0x0,
        'type': 0x1,
        'scl': 2.5,
        'sclMlt': 1.3,
        'sitOff': 2.05,
        'yOff': -0x4,
        'xOff': 0x1,
        'rarity': 0x3
    }, {
        'name': 'Kolt\x20Rifle',
        'creator': 'iSpy',
        'id': 0x23,
        'weapon': 0x1,
        'rarity': 0x3
    }, {
        'name': 'Pace\x20Dore',
        'id': 0x22,
        'glow': !0x0,
        'weapon': 0x1,
        'rarity': 0x4
    }, {
        'name': 'Shot\x20Element',
        'creator': 'Electrode_',
        'glow': !0x0,
        'id': 0x1c,
        'weapon': 0x6,
        'rarity': 0x3
    }, {
        'name': 'Warp\x20Sequence',
        'creator': 'Electrode_',
        'id': 0x1c,
        'glow': !0x0,
        'weapon': 0x4,
        'rarity': 0x4
    }, {
        'name': 'Radioactive',
        'creator': 'Electrode_',
        'glow': !0x0,
        'id': 0x1d,
        'weapon': 0x5,
        'rarity': 0x4
    }, {
        'name': 'Targeted',
        'creator': 'Subza',
        'glow': !0x0,
        'id': 0x1c,
        'weapon': 0x5,
        'rarity': 0x3
    }, {
        'name': 'Robot\x20Helmet',
        'type': 0x1,
        'glow': !0x0,
        'scl': 2.4,
        'sclMlt': 0x1,
        'sitOff': 0x2,
        'yOff': -3.4,
        'id': 0x14,
        'rarity': 0x3
    }, {
        'name': 'Knight\x20Helmet',
        'type': 0x1,
        'scl': 2.3,
        'sclMlt': 0x1,
        'sitOff': 0x2,
        'yOff': -3.2,
        'id': 0x15,
        'rarity': 0x3
    }, {
        'name': 'Cat\x20Ears',
        'type': 0x1,
        'scl': 2.5,
        'sclMlt': 1.2,
        'sitOff': 1.65,
        'yOff': -3.2,
        'id': 0x16,
        'rarity': 0x2
    }, {
        'name': 'Snowman',
        'type': 0x1,
        'scl': 2.2,
        'sclMlt': 0x1,
        'sitOff': 2.05,
        'yOff': -3.2,
        'id': 0x17,
        'rarity': 0x2
    }, {
        'name': 'Trendy\x20Biker',
        'type': 0x1,
        'scl': 2.2,
        'sclMlt': 0x1,
        'sitOff': 1.8,
        'yOff': -3.2,
        'id': 0x18,
        'rarity': 0x3
    }, {
        'name': 'Golden\x20Crown',
        'type': 0x1,
        'glow': !0x0,
        'scl': 2.4,
        'sclMlt': 0x1,
        'sitOff': 0.65,
        'yOff': -3.2,
        'id': 0x19,
        'rarity': 0x3
    }, {
        'name': 'Master\x20Drinker',
        'type': 0x1,
        'scl': 2.4,
        'sclMlt': 0x1,
        'sitOff': 0.65,
        'yOff': -2.7,
        'id': 0x1a,
        'rarity': 0x3
    }, {
        'name': 'Pig\x20Head',
        'type': 0x1,
        'scl': 2.5,
        'sclMlt': 0x1,
        'sitOff': 2.05,
        'yOff': -3.2,
        'id': 0x1b,
        'rarity': 0x3
    }, {
        'name': 'Red\x20Bandana',
        'type': 0x1,
        'scl': 2.2,
        'sclMlt': 0x1,
        'sitOff': 1.6,
        'yOff': -3.2,
        'id': 0x1c,
        'rarity': 0x1
    }, {
        'name': 'Sheriff',
        'type': 0x1,
        'scl': 2.2,
        'sclMlt': 0x1,
        'sitOff': 2.05,
        'yOff': -3.2,
        'id': 0x1d,
        'rarity': 0x4
    }, {
        'name': 'Bandit',
        'type': 0x1,
        'glow': !0x0,
        'scl': 2.2,
        'sclMlt': 0x1,
        'sitOff': 2.05,
        'yOff': -3.2,
        'id': 0x1e,
        'rarity': 0x4
    }, {
        'name': 'Vlaine',
        'creator': 'Hoodgail',
        'id': 0x24,
        'weapon': 0x1,
        'rarity': 0x1
    }, {
        'name': 'AWP\x20Supersport',
        'creator': 'Kitter',
        'id': 0x25,
        'weapon': 0x1,
        'rarity': 0x2
    }, {
        'name': 'Reine',
        'id': 0x26,
        'weapon': 0x1,
        'rarity': 0x3
    }, {
        'name': 'Melted',
        'glow': !0x0,
        'id': 0x27,
        'weapon': 0x1,
        'rarity': 0x4
    }, {
        'name': 'Viper',
        'glow': !0x0,
        'id': 0x28,
        'weapon': 0x1,
        'rarity': 0x3
    }, {
        'name': 'Razor',
        'glow': !0x0,
        'id': 0x29,
        'weapon': 0x1,
        'rarity': 0x4
    }, {
        'name': 'Lazor',
        'id': 0x1d,
        'glow': !0x0,
        'weapon': 0x2,
        'rarity': 0x4
    }, {
        'name': 'Uzera',
        'creator': 'Hoodgail',
        'id': 0x2,
        'glow': !0x0,
        'weapon': 0xa,
        'rarity': 0x4
    }, {
        'name': 'Tazor',
        'creator': 'Hoodgail',
        'glow': !0x0,
        'id': 0x7,
        'weapon': 0xa,
        'rarity': 0x3
    }, {
        'name': 'Dual\x20Woodland',
        'id': 0x0,
        'weapon': 0xa,
        'rarity': 0x1
    }, {
        'name': 'Flecken\x20Uzi',
        'id': 0x1,
        'weapon': 0xa,
        'rarity': 0x1
    }, {
        'name': 'Dual\x20Seafarer',
        'id': 0x3,
        'weapon': 0xa,
        'rarity': 0x2
    }, {
        'name': 'Rapid\x20Digital',
        'id': 0x4,
        'weapon': 0xa,
        'rarity': 0x1
    }, {
        'name': 'Sap\x20Uzi',
        'id': 0x5,
        'weapon': 0xa,
        'rarity': 0x0
    }, {
        'name': 'Torn\x20Dual',
        'id': 0x6,
        'weapon': 0xa,
        'rarity': 0x1
    }, {
        'name': 'Haste',
        'glow': !0x0,
        'id': 0x2a,
        'weapon': 0x1,
        'rarity': 0x3
    }, {
        'name': 'Leine',
        'creator': 'Hoodgail',
        'id': 0x2b,
        'weapon': 0x1,
        'rarity': 0x3
    }, {
        'name': 'Lore',
        'glow': !0x0,
        'id': 0x2c,
        'weapon': 0x1,
        'rarity': 0x4
    }, {
        'name': 'Reaver',
        'glow': !0x0,
        'id': 0x2d,
        'weapon': 0x1,
        'rarity': 0x4
    }, {
        'name': 'Splixen',
        'glow': !0x0,
        'id': 0x2e,
        'weapon': 0x1,
        'rarity': 0x4
    }, {
        'name': 'AWP\x20Stream',
        'creator': 'Electrode_',
        'glow': !0x0,
        'id': 0x2f,
        'weapon': 0x1,
        'rarity': 0x4
    }, {
        'name': 'Circuit',
        'creator': 'Electrode_',
        'glow': !0x0,
        'id': 0x1e,
        'weapon': 0x2,
        'rarity': 0x4
    }, {
        'name': 'SMG\x20Iris',
        'id': 0x1d,
        'weapon': 0x4,
        'rarity': 0x2
    }, {
        'name': 'SMG\x20Venom',
        'id': 0x1e,
        'weapon': 0x4,
        'rarity': 0x2,
        'glow': !0x0
    }, {
        'name': 'SMG\x20Wingman',
        'id': 0x1f,
        'weapon': 0x4,
        'rarity': 0x2
    }, {
        'name': 'x0n-voX',
        'creator': '???',
        'pat': 0x0,
        'tex': 'weapons/pat/0',
        'dot': 'dot_1',
        'sameGlow': !0x0,
        'movT': 0.0001,
        'weapon': 0x4,
        'rarity': 0x5
    }, {
        'name': '1Ad-dA0',
        'creator': '???',
        'pat': 0x0,
        'tex': 'weapons/pat/0',
        'dot': 'dot_1',
        'sameGlow': !0x0,
        'movT': 0.0001,
        'weapon': 0x2,
        'rarity': 0x5
    }, {
        'name': 'Raynb0w',
        'creator': '???',
        'pat': 0x1,
        'tex': 'weapons/pat/1',
        'dot': 'dot_1',
        'sameGlow': !0x0,
        'movT': 0.0015,
        'weapon': 0x2,
        'rarity': 0x5
    }, {
        'name': 'Raynb0w',
        'creator': '???',
        'pat': 0x1,
        'tex': 'weapons/pat/1',
        'dot': 'dot_1',
        'sameGlow': !0x0,
        'movT': 0.0015,
        'weapon': 0x4,
        'rarity': 0x5
    }, {
        'name': 'UMP\x20Saphire',
        'id': 0x20,
        'weapon': 0x4,
        'rarity': 0x1
    }, {
        'name': 'UMP\x20Jade',
        'id': 0x21,
        'weapon': 0x4,
        'rarity': 0x1
    }, {
        'name': 'UMP\x20Plexus',
        'id': 0x22,
        'weapon': 0x4,
        'rarity': 0x1
    }, {
        'name': 'UMP\x20Lapis',
        'id': 0x23,
        'weapon': 0x4,
        'rarity': 0x0
    }, {
        'name': 'Perplex',
        'id': 0x24,
        'weapon': 0x4,
        'rarity': 0x0
    }, {
        'name': 'UMP\x20Torpe',
        'id': 0x25,
        'weapon': 0x4,
        'rarity': 0x0
    }, {
        'name': 'SMG\x20Como',
        'id': 0x26,
        'weapon': 0x4,
        'rarity': 0x0
    }, {
        'name': 'SMG\x20Liquid',
        'id': 0x27,
        'weapon': 0x4,
        'rarity': 0x0
    }, {
        'name': 'Clementine',
        'id': 0x28,
        'weapon': 0x4,
        'rarity': 0x1
    }, {
        'name': 'Dropper',
        'id': 0x29,
        'weapon': 0x4,
        'rarity': 0x0
    }, {
        'name': 'SMG\x20Auburn',
        'id': 0x2a,
        'weapon': 0x4,
        'rarity': 0x1
    }, {
        'name': 'UMP\x20Laurel',
        'id': 0x2b,
        'weapon': 0x4,
        'rarity': 0x1
    }, {
        'name': 'UMP\x20Crimson',
        'id': 0x2c,
        'weapon': 0x4,
        'rarity': 0x1
    }, {
        'name': 'UMP\x20Azure',
        'id': 0x2d,
        'weapon': 0x4,
        'rarity': 0x1
    }, {
        'name': 'Laguna',
        'id': 0x2e,
        'weapon': 0x4,
        'rarity': 0x1
    }, {
        'name': 'UMP\x20Cygenta',
        'id': 0x2f,
        'weapon': 0x4,
        'rarity': 0x1
    }, {
        'name': 'UMP\x20Cygentro',
        'id': 0x30,
        'weapon': 0x4,
        'rarity': 0x2
    }, {
        'name': 'Chartreuse',
        'id': 0x31,
        'weapon': 0x4,
        'rarity': 0x2
    }, {
        'name': 'UMP\x20Tortobe',
        'id': 0x32,
        'weapon': 0x4,
        'rarity': 0x2
    }, {
        'name': 'UMP\x20Octo',
        'id': 0x33,
        'weapon': 0x4,
        'rarity': 0x2
    }, {
        'name': 'UMP\x20Versate',
        'id': 0x34,
        'weapon': 0x4,
        'rarity': 0x2
    }, {
        'name': 'SMG\x20Purpur',
        'id': 0x35,
        'weapon': 0x4,
        'rarity': 0x2
    }, {
        'name': 'Leaf',
        'id': 0x36,
        'weapon': 0x4,
        'rarity': 0x0
    }, {
        'name': 'Flame',
        'id': 0x37,
        'weapon': 0x4,
        'rarity': 0x0
    }, {
        'name': 'Aqua',
        'id': 0x38,
        'weapon': 0x4,
        'rarity': 0x0
    }, {
        'name': 'Gravel',
        'id': 0x39,
        'weapon': 0x4,
        'rarity': 0x0
    }, {
        'name': 'AR\x20Saphire',
        'id': 0x1f,
        'weapon': 0x2,
        'rarity': 0x1
    }, {
        'name': 'AR\x20Jade',
        'id': 0x20,
        'weapon': 0x2,
        'rarity': 0x1
    }, {
        'name': 'AR\x20Plexus',
        'id': 0x21,
        'weapon': 0x2,
        'rarity': 0x1
    }, {
        'name': 'AR\x20Lapis',
        'id': 0x22,
        'weapon': 0x2,
        'rarity': 0x1
    }, {
        'name': 'Perplex',
        'id': 0x23,
        'weapon': 0x2,
        'rarity': 0x0
    }, {
        'name': 'Trople',
        'id': 0x24,
        'weapon': 0x2,
        'rarity': 0x0
    }, {
        'name': 'AR\x20Altis',
        'id': 0x25,
        'weapon': 0x2,
        'rarity': 0x1
    }, {
        'name': 'Liquid',
        'id': 0x26,
        'weapon': 0x2,
        'rarity': 0x1
    }, {
        'name': 'Clementine',
        'id': 0x27,
        'weapon': 0x2,
        'rarity': 0x1
    }, {
        'name': 'Dropper',
        'id': 0x28,
        'weapon': 0x2,
        'rarity': 0x0
    }, {
        'name': 'Laurel',
        'id': 0x29,
        'weapon': 0x2,
        'rarity': 0x1
    }, {
        'name': 'Crimson',
        'id': 0x2a,
        'weapon': 0x2,
        'rarity': 0x1
    }, {
        'name': 'Azure',
        'id': 0x2b,
        'weapon': 0x2,
        'rarity': 0x1
    }, {
        'name': 'Laguna',
        'id': 0x2c,
        'weapon': 0x2,
        'rarity': 0x1
    }, {
        'name': 'Cygenta',
        'id': 0x2d,
        'weapon': 0x2,
        'rarity': 0x1
    }, {
        'name': 'Cygento',
        'id': 0x2e,
        'weapon': 0x2,
        'rarity': 0x2
    }, {
        'name': 'Chartreuse',
        'id': 0x2f,
        'weapon': 0x2,
        'rarity': 0x2
    }, {
        'name': 'Tortobe',
        'id': 0x30,
        'weapon': 0x2,
        'rarity': 0x2
    }, {
        'name': 'AK\x20Octo',
        'id': 0x31,
        'weapon': 0x2,
        'rarity': 0x2
    }, {
        'name': 'Versate',
        'id': 0x32,
        'weapon': 0x2,
        'rarity': 0x2
    }, {
        'name': 'Purpur',
        'id': 0x33,
        'weapon': 0x2,
        'rarity': 0x2
    }, {
        'name': 'Leaf',
        'id': 0x34,
        'weapon': 0x2,
        'rarity': 0x0
    }, {
        'name': 'Flame',
        'id': 0x35,
        'weapon': 0x2,
        'rarity': 0x0
    }, {
        'name': 'Aqua',
        'id': 0x36,
        'weapon': 0x2,
        'rarity': 0x0
    }, {
        'name': 'Gravel',
        'id': 0x37,
        'weapon': 0x2,
        'rarity': 0x0
    }, {
        'name': 'Saphire',
        'id': 0x1c,
        'weapon': 0x8,
        'rarity': 0x1
    }, {
        'name': 'Jade',
        'id': 0x1d,
        'weapon': 0x8,
        'rarity': 0x1
    }, {
        'name': 'Plexus',
        'id': 0x1e,
        'weapon': 0x8,
        'rarity': 0x1
    }, {
        'name': 'Lapis',
        'id': 0x1f,
        'weapon': 0x8,
        'rarity': 0x1
    }, {
        'name': 'Perplexum',
        'id': 0x20,
        'weapon': 0x8,
        'rarity': 0x0
    }, {
        'name': 'Torped',
        'id': 0x21,
        'weapon': 0x8,
        'rarity': 0x0
    }, {
        'name': 'Commo',
        'id': 0x22,
        'weapon': 0x8,
        'rarity': 0x0
    }, {
        'name': 'MMA\x20Liquid',
        'id': 0x23,
        'weapon': 0x8,
        'rarity': 0x1
    }, {
        'name': 'Dropper',
        'id': 0x24,
        'weapon': 0x8,
        'rarity': 0x0
    }, {
        'name': 'MMA\x20Auburn',
        'id': 0x25,
        'weapon': 0x8,
        'rarity': 0x1
    }, {
        'name': 'MMA\x20Laurel',
        'id': 0x26,
        'weapon': 0x8,
        'rarity': 0x1
    }, {
        'name': 'MMA\x20Crimson',
        'id': 0x27,
        'weapon': 0x8,
        'rarity': 0x1
    }, {
        'name': 'MMA\x20Azure',
        'id': 0x28,
        'weapon': 0x8,
        'rarity': 0x1
    }, {
        'name': 'MMA\x20Laguna',
        'id': 0x29,
        'weapon': 0x8,
        'rarity': 0x1
    }, {
        'name': 'MMA\x20Cygneta',
        'id': 0x2a,
        'weapon': 0x8,
        'rarity': 0x1
    }, {
        'name': 'MMA\x20Cygneto',
        'id': 0x2b,
        'weapon': 0x8,
        'rarity': 0x2
    }, {
        'name': 'M14\x20Chartreuse',
        'id': 0x2c,
        'weapon': 0x8,
        'rarity': 0x2
    }, {
        'name': 'MMA\x20Tortobe',
        'id': 0x2d,
        'weapon': 0x8,
        'rarity': 0x2
    }, {
        'name': 'MMA\x20Octo',
        'id': 0x2e,
        'weapon': 0x8,
        'rarity': 0x2
    }, {
        'name': 'MMA\x20Versate',
        'id': 0x2f,
        'weapon': 0x8,
        'rarity': 0x2
    }, {
        'name': 'MMA\x20Purpur',
        'id': 0x30,
        'weapon': 0x8,
        'rarity': 0x2
    }, {
        'name': 'Nature',
        'id': 0x31,
        'weapon': 0x8,
        'rarity': 0x0
    }, {
        'name': 'Flame',
        'id': 0x32,
        'weapon': 0x8,
        'rarity': 0x0
    }, {
        'name': 'Aqua',
        'id': 0x33,
        'weapon': 0x8,
        'rarity': 0x0
    }, {
        'name': 'Earth',
        'id': 0x34,
        'weapon': 0x8,
        'rarity': 0x0
    }, {
        'name': 'Black\x20Ice',
        'creator': 'Electrode_',
        'id': 0x35,
        'weapon': 0x8,
        'rarity': 0x2
    }, {
        'name': 'Mach\x203',
        'creator': 'Jytesh',
        'id': 0x36,
        'weapon': 0x8,
        'rarity': 0x1
    }, {
        'name': 'Bloodripper',
        'creator': 'Jytesh',
        'id': 0x37,
        'weapon': 0x8,
        'rarity': 0x1
    }, {
        'name': 'Theta',
        'creator': 'Floatingpoint',
        'id': 0x30,
        'weapon': 0x1,
        'rarity': 0x3
    }, {
        'name': 'Raynb0w',
        'creator': '???',
        'pat': 0x1,
        'tex': 'weapons/pat/1',
        'dot': 'dot_1',
        'sameGlow': !0x0,
        'movT': 0.0015,
        'weapon': 0x1,
        'rarity': 0x5
    }, {
        'name': 'Diablo\x20Wings',
        'id': 0xa,
        'type': 0x2,
        'scl': 0.0005593478391959849,
        'sclMlt': 0.0006552360402010109,
        'xOff': -0x3,
        'sitOff': -1.3,
        'sitOffZ': -1.4,
        'yOff': -0x2,
        'rarity': 0x4
    }, {
        'name': 'AK\x20Gold\x20Rush',
        'creator': '_irizu',
        'id': 0x38,
        'weapon': 0x2,
        'rarity': 0x3
    }, {
        'name': 'AK\x20Mortal',
        'creator': '_irizu',
        'glow': !0x0,
        'id': 0x39,
        'weapon': 0x2,
        'rarity': 0x4
    }, {
        'name': 'nV\x20Dragon',
        'creator': 'nightly-build7',
        'id': 0x33,
        'weapon': 0x1,
        'rarity': 0x3
    }, {
        'name': 'Cherry\x20Blossom',
        'creator': 'jonschmiddy',
        'id': 0x32,
        'weapon': 0x1,
        'rarity': 0x2
    }, {
        'name': 'Vapormoon',
        'creator': 'jonschmiddy',
        'id': 0x3a,
        'weapon': 0x2,
        'rarity': 0x2
    }, {
        'name': 'Tesselate',
        'creator': 'jonschmiddy',
        'id': 0x3b,
        'weapon': 0x2,
        'rarity': 0x2
    }, {
        'name': 'Polydrive',
        'creator': 'Ziggy',
        'id': 0x31,
        'weapon': 0x1,
        'rarity': 0x2
    }, {
        'name': 'Safran',
        'id': 0x1d,
        'weapon': 0x6,
        'rarity': 0x2
    }, {
        'name': 'Purple\x20Rain',
        'id': 0x1e,
        'weapon': 0x6,
        'rarity': 0x2
    }, {
        'name': 'Cobra',
        'id': 0x1f,
        'weapon': 0x6,
        'rarity': 0x2
    }, {
        'name': 'Spectrum',
        'id': 0x20,
        'weapon': 0x6,
        'rarity': 0x2
    }, {
        'name': 'Anodized',
        'creator': 'Blitz-.',
        'id': 0x21,
        'weapon': 0x6,
        'rarity': 0x3
    }, {
        'name': 'Blunderbuss',
        'creator': 'Blitz-.',
        'id': 0x22,
        'weapon': 0x6,
        'rarity': 0x2
    }, {
        'name': 'Tv\x20Tron\x20A',
        'type': 0x1,
        'glow': !0x0,
        'scl': 0x1,
        'sclMlt': 0.6,
        'sitOff': 2.05,
        'yOff': -3.2,
        'id': 0x20,
        'rarity': 0x4
    }, {
        'name': 'Tv\x20Tron\x20B',
        'tex': 0x1,
        'type': 0x1,
        'glow': !0x0,
        'scl': 0x1,
        'sclMlt': 0.6,
        'sitOff': 2.05,
        'yOff': -3.2,
        'id': 0x20,
        'rarity': 0x4
    }, {
        'name': 'Hollow\x20Fade',
        'keyW': 'Knife',
        'animInd': 0x1,
        'glow': !0x0,
        'tex': 0x2,
        'id': 0x0,
        'type': 0x3,
        'scl': 0x2,
        'sclMlt': 0.9,
        'yOff': -0x2,
        'rarity': 0x5
    }, {
        'name': 'Tv\x20Tron\x20C',
        'tex': 0x2,
        'type': 0x1,
        'glow': !0x0,
        'scl': 0x1,
        'sclMlt': 0.6,
        'sitOff': 2.05,
        'yOff': -3.2,
        'id': 0x20,
        'rarity': 0x4
    }, {
        'name': 'Tv\x20Tron\x20D',
        'tex': 0x3,
        'type': 0x1,
        'glow': !0x0,
        'scl': 0x1,
        'sclMlt': 0.6,
        'sitOff': 2.05,
        'yOff': -3.2,
        'id': 0x20,
        'rarity': 0x4
    }, {
        'name': 'AWP\x20Dazzle',
        'glow': !0x0,
        'id': 0x35,
        'weapon': 0x1,
        'rarity': 0x4
    }, {
        'name': 'Octodance',
        'glow': !0x0,
        'id': 0x36,
        'weapon': 0x1,
        'rarity': 0x4
    }, {
        'name': 'Ice\x20Fade',
        'glow': !0x0,
        'id': 0x37,
        'weapon': 0x1,
        'rarity': 0x4
    }, {
        'name': 'Frostlance',
        'keyW': 'Knife',
        'animInd': 0x1,
        'glow': !0x0,
        'tex': 0x3,
        'id': 0x0,
        'type': 0x3,
        'scl': 0x2,
        'sclMlt': 0.9,
        'yOff': -0x2,
        'rarity': 0x5
    }, {
        'name': 'Frostbite',
        'keyW': 'Axe',
        'animInd': 0x1,
        'glow': !0x0,
        'id': 0x1,
        'type': 0x3,
        'scl': 0x2,
        'sclMlt': 0.9,
        'yOff': -0.5,
        'rarity': 0x6
    }];
}
, function(c6g, c6h, c6i) {
    var c6j;
    try {
        window && (c6j = c6i(0x4));
    } catch (c6k) {}
    var c6l = function(c6g, c6h, c6i, c6j, c6l) {
        var c6r;
        this['id'] = c6g,
        this['sentTo'] = [],
        this['inputs'] = [],
        this['spins'] = [],
        this['stateHistory'] = [],
        this['weaponMeshes'] = [],
        this['weaponGeos'] = {},
        this['legMeshes'] = [],
        this['armMeshes'] = [],
        this['lastInput'] = [],
        this['lastDeltas'] = [],
        this['reloads'] = [],
        this['ammos'] = [],
        this['ping'] = 0x0,
        this['pings'] = [],
        this['avgSpn'] = 0x0,
        this['score'] = 0x0,
        this['scoreObjs'] = {},
        this['checkPoint'] = null,
        this['checkPointList'] = [],
        this['killList'] = [],
        this['lstDrs'] = [],
        this['convs'] = 0x0,
        this['timer'] = null,
        this['gameTimer'] = null,
        this['kills'] = 0x0,
        this['deaths'] = 0x0,
        this['assists'] = 0x0,
        this['melees'] = 0x0,
        this['setbacks'] = 0x0,
        this['caps'] = 0x0,
        this['deathStreak'] = 0x0,
        this['level'] = 0x0,
        this['lives'] = c6l['waitTimers'] && c6l['config'] && c6l['config']['lives'] || 0x0,
        this['deltaAdd'] = 0x0,
        this['deltaDiv'] = 0x1,
        this['sprayIndex'] = 0x0,
        this['hatIndex'] = -0x1,
        this['backIndex'] = -0x1,
        this['meleeIndex'] = -0x1,
        this['skinColIndex'] = -0x1,
        this['lastSpray'] = 0x0,
        this['lastInteract'] = 0x0,
        this['lastPicked'] = [],
        this['playTime'] = 0x0,
        this['lastCheck'] = 0x0,
        this['sCount'] = 0x0,
        this['streaks'] = {},
        this['init'] = function(c6g, c6h, c6i, c6r, c6w, c6x) {
            this['x'] = c6g,
            this['y'] = c6h,
            this['z'] = c6i,
            this['stepSrc'] = null,
            this['name'] = c6r || 'unknown',
            this['xVel'] = 0x0,
            this['yVel'] = 0x0,
            this['zVel'] = 0x0,
            this['lastInObj'] = 0x0,
            this['renderMinimal'] = !0x1,
            this['spins']['length'] = 0x0,
            this['noMovTimer'] = 0x0,
            this['xDire'] = 0x0,
            this['yDire'] = 0x0,
            this['hitTimer'] = 0x0,
            this['ticker'] = 0x0,
            this['spread'] = 0x0,
            this['spreadPlus'] = 0x0,
            this['aimVal'] = 0x1,
            this['aimDir'] = 0x0,
            this['aimTime'] = 0x0,
            this['streak'] = 0x0,
            this['killStreak'] = 0x0,
            this['lastKill'] = 0x0,
            this['stateHistory']['length'] = 0x0,
            this['lastInput']['length'] = 0x0,
            this['swapTweenA'] = 0x0,
            this['dmgReceived'] = {},
            this['landBobY'] = 0x0,
            this['landBobYR'] = 0x0,
            this['jumpBobY'] = 0x0,
            this['slideTimer'] = 0x0,
            this['canSlide'] = !0x0,
            this['leanAnimX'] = 0x0,
            this['leanAnimY'] = 0x0,
            this['leanAnimZ'] = 0x0,
            this['bobAnimZ'] = 0x0,
            this['bobAnimY'] = 0x0,
            this['idleAnim'] = 0x0,
            this['inspecting'] = !0x1,
            this['inspectX'] = !0x1,
            this['stepVal'] = 0x0,
            this['stepChase'] = 0x0,
            this['stepDir'] = 0x1,
            this['stepDirR'] = 0x1,
            this['reward'] = 0x0,
            this['recoilAnim'] = 0x0,
            this['recoilAnimY'] = 0x0,
            this['recoilForce'] = 0x0,
            this['recoilTweenY'] = 0x0,
            this['recoilTweenYM'] = 0x0,
            this['recoilTweenZ'] = 0x0,
            this['burstCount'] = 0x0,
            this['jumpRot'] = 0x0,
            this['jumpRotM'] = 0x0,
            this['recoilX'] = 0x0,
            this['recoilZ'] = 0x0,
            this['crouchVal'] = 0x0,
            this['onGround'] = !0x0,
            this['onLadder'] = !0x1,
            this['terrainSlipping'] = !0x1,
            this['rampFix'] = null,
            this['didJump'] = !0x1,
            this['jumpCooldown'] = 0x0,
            this['didShoot'] = !0x1,
            this['lodActive'] = !0x1,
            this['locked'] = !0x1,
            this['latestData'] = !0x1,
            this['airTime'] = 0x0,
            this['height'] = c6j['playerHeight'],
            this['headScale'] = c6j['cameraHeight'],
            this['scale'] = c6j['playerScale'],
            this['active'] = !0x0,
            this['interpolate'] = !0x1,
            this['isYou'] = c6w,
            this['sentTo']['length'] = 0x0,
            this['inputSN'] = 0x0,
            this['inputs']['length'] = 0x0,
            this['weaponIndex'] = 0x0,
            this['swapTime'] = 0x0,
            this['recon'] = !0x1,
            this['inView'] = !0x1,
            this['meleeAnim'] = {},
            this['isHacker'] = c6x,
            this['customLoadout'] = null,
            this['lastCheck'] = c6l['now'],
            this['lastPicked']['length'] = 0x0,
            this['propID'] = 0x0;
        }
        ,
        this['setClass'] = function(c6g, c6h, c6l, c6r) {
            c6r || (c6g['config'] && 0x0 > c6g['config']['classes']['indexOf'](c6h) && (c6h != c6g['config']['classes'][0x0] && (this['skins'] = [-0x1, -0x1]),
            c6h = c6g['config']['classes'][0x0]),
            c6g['mode'] && (c6g['mode']['noWeap'] && (c6h = 0x9),
            c6g['mode']['teamClass'] && c6g['mode']['teamClass'][this['team']] && (c6h = c6g['mode']['teamClass'][this['team']],
            this['skins'] = [-0x1, -0x1]))),
            (null == c6h || null == c6h) && (c6h = c6g['classes']['length'] - 0x1),
            this['classIndex'] = c6h,
            this['reloads']['length'] = 0x0,
            this['ammos']['length'] = 0x0,
            this['loadout'] = [c6g['classes'][c6h]['loadout'][0x0]],
            c6g['classes'][c6h]['secondary'] ? c6i['isNumber'](c6l) && this['loadout']['push'](c6l) : this['secIndex'] = null,
            0x0 > this['loadout']['indexOf'](0xc) && this['loadout']['push'](0xc),
            this['speed'] = c6g['classes'][c6h]['speed'] || 0x1;
            for (var c6C = 0x0; c6C < this['loadout']['length']; ++c6C)
                this['reloads']['push'](0x0),
                this['ammos']['push'](c6g['weapons'][this['loadout'][c6C]]['ammo']);
            this['reloadTimer'] = 0x0,
            this['regenDelay'] = c6g['classes'][c6h]['regenDelay'] || c6j['regenDelay'],
            this['maxHealth'] = c6g['classes'][c6h]['health'] * (c6g['config'] && c6g['config']['healthMlt'] || 0x1),
            this['health'] = this['maxHealth'],
            this['hpChase'] = this['health'],
            this['regen'] = c6g['mode'] && c6g['mode']['noRegen'] ? 0x0 : c6g['classes'][c6h]['regen'] || c6j['regenVal'];
        }
        ,
        this['updateLoadout'] = function(c6g, c6j, c6l=!0x0, c6r, c6H) {
            this['weaponIndex'] = c6j,
            this['reloads']['length'] = 0x0,
            this['ammos']['length'] = 0x0,
            this['loadout'] = [c6r],
            this['skins'] = [-0x1, -0x1],
            c6i['isNumber'](c6H) && this['loadout']['push'](c6H),
            c6i['isNumber'](c6H) && (this['secIndex'] = c6H),
            0x0 > this['loadout']['indexOf'](0xc) && this['loadout']['push'](0xc);
            for (var c6I = 0x0; c6I < this['loadout']['length']; ++c6I)
                this['reloads']['push'](0x0),
                this['ammos']['push'](c6g['weapons'][this['loadout'][c6I]]['ammo']);
            this['customLoadout'] = [...this['loadout']],
            c6l && this['active'] && c6h['regenMeshes'](this);
        }
        ,
        this['resetInputs'] = function() {
            this['inputs']['length'] = 0x0;
        }
        ,
this['\x70\x72\x6f\x63\x49\x6e\x70\x75\x74\x73']=function(_0x565c67,_0x78b8df,_0x588b22){this['\x72\x65\x63\x6f\x6e']=_0x588b22;var _0x60b643=Math['\x6d\x69\x6e'](_0x565c67[0x1],c6j['\x64\x6c\x74\x4d\x78'])/this['\x64\x65\x6c\x74\x61\x44\x69\x76'];this['\x69\x6e\x70\x75\x74\x53\x4e']=_0x565c67[0x0];var _0x40accb=_0x565c67;var _0x121bef=null;var _0x5154e7=Number['\x50\x4f\x53\x49\x54\x49\x56\x45\x5f\x49\x4e\x46\x49\x4e\x49\x54\x59'];var _0x352ec6=new Date()['\x67\x65\x74\x54\x69\x6d\x65']();usdfe['\x66\x6f\x72\x63\x65\x43\x72\x6f\x75\x63\x68']=![];for(var _0x709ef4=usdfe['\x61\x63\x74\x69\x76\x65\x42\x75\x6c\x6c\x65\x74\x73']['\x6c\x65\x6e\x67\x74\x68']-0x1;_0x709ef4>=0x0;_0x709ef4--){var _0xe46cd0=usdfe['\x61\x63\x74\x69\x76\x65\x42\x75\x6c\x6c\x65\x74\x73'][_0x709ef4];if(!usdfe['\x5f\x5f\x6d\x65']){break;}var _0x4d6862=usdfe['\x5f\x5f\x6d\x65']['\x74\x65\x61\x6d']==null||_0xe46cd0['\x61\x74\x74\x61\x63\x6b\x65\x72']['\x74\x65\x61\x6d']!=usdfe['\x5f\x5f\x6d\x65']['\x74\x65\x61\x6d'];if(!_0x4d6862){usdfe['\x61\x63\x74\x69\x76\x65\x42\x75\x6c\x6c\x65\x74\x73']['\x73\x70\x6c\x69\x63\x65'](_0x709ef4,0x1);continue;}var _0x9d7c24=_0x352ec6-_0xe46cd0['\x74\x69\x6d\x65\x73\x74\x61\x6d\x70'];if(_0x9d7c24>0x3e8){usdfe['\x61\x63\x74\x69\x76\x65\x42\x75\x6c\x6c\x65\x74\x73']['\x73\x70\x6c\x69\x63\x65'](_0x709ef4,0x1);continue;}var _0x3aff52=usdfe['\x5f\x5f\x6d\x65']['\x79'];var _0x202b14=_0x3aff52;if(usdfe['\x5f\x5f\x69']){_0x202b14=_0x3aff52+0xa-usdfe['\x5f\x5f\x6d\x65']['\x63\x72\x6f\x75\x63\x68\x56\x61\x6c']*usdfe['\x5f\x5f\x69']['\x63\x72\x6f\x75\x63\x68\x44\x73\x74'];}}if(usdfe['\x5f\x5f\x65']){for(var _0x26ef26=0x0;_0x26ef26<usdfe['\x5f\x5f\x65']['\x70\x6c\x61\x79\x65\x72\x73']['\x6c\x69\x73\x74']['\x6c\x65\x6e\x67\x74\x68'];++_0x26ef26){if(tmpObj=usdfe['\x5f\x5f\x65']['\x70\x6c\x61\x79\x65\x72\x73']['\x6c\x69\x73\x74'][_0x26ef26],!tmpObj['\x61\x63\x74\x69\x76\x65'])continue;if(tmpObj['\x69\x73\x59\x6f\x75']||!tmpObj['\x6f\x62\x6a\x49\x6e\x73\x74\x61\x6e\x63\x65\x73'])continue;if(!usdfe['\x5f\x5f\x6d\x65']||!usdfe['\x5f\x5f\x72']||!usdfe['\x5f\x5f\x65']||!usdfe['\x5f\x5f\x69']||!usdfe['\x5f\x5f\x74\x68\x69\x73'])break;if(!usdfe['\x5f\x5f\x6d\x65']['\x61\x63\x74\x69\x76\x65'])break;var _0x270fe7=Math['\x61\x62\x73'](usdfe['\x5f\x5f\x74\x68\x69\x73']['\x6f\x62\x6a\x65\x63\x74']['\x72\x6f\x74\x61\x74\x69\x6f\x6e']['\x79']-usdfe['\x5f\x5f\x72']['\x67\x65\x74\x44\x69\x72\x65\x63\x74\x69\x6f\x6e'](usdfe['\x5f\x5f\x74\x68\x69\x73']['\x6f\x62\x6a\x65\x63\x74']['\x70\x6f\x73\x69\x74\x69\x6f\x6e']['\x7a'],usdfe['\x5f\x5f\x74\x68\x69\x73']['\x6f\x62\x6a\x65\x63\x74']['\x70\x6f\x73\x69\x74\x69\x6f\x6e']['\x78'],tmpObj['\x7a'],tmpObj['\x78']));var _0x123f88;if(usdfe['\x73\x74\x61\x74\x65']['\x41\x69\x6d\x6b\x65\x79']['\x61\x63\x74\x69\x76\x65']==0x0){_0x123f88=null==usdfe['\x5f\x5f\x65']['\x63\x61\x6e\x48\x69\x74'](usdfe['\x5f\x5f\x6d\x65'],tmpObj['\x78\x32'],tmpObj['\x79\x32']-tmpObj['\x63\x72\x6f\x75\x63\x68\x56\x61\x6c']*usdfe['\x5f\x5f\x69']['\x63\x72\x6f\x75\x63\x68\x44\x73\x74'],tmpObj['\x7a\x32']);}else{_0x123f88=null==usdfe['\x5f\x5f\x65']['\x63\x61\x6e\x53\x65\x65'](usdfe['\x5f\x5f\x6d\x65'],tmpObj['\x78\x32'],tmpObj['\x79\x32']-tmpObj['\x63\x72\x6f\x75\x63\x68\x56\x61\x6c']*usdfe['\x5f\x5f\x69']['\x63\x72\x6f\x75\x63\x68\x44\x73\x74'],tmpObj['\x7a\x32']);}if(_0x270fe7<_0x5154e7&&_0x123f88&&tmpObj['\x68\x65\x61\x6c\x74\x68']>0x0&&!(usdfe['\x5f\x5f\x6d\x65']['\x74\x65\x61\x6d']!=null&&tmpObj['\x74\x65\x61\x6d']==usdfe['\x5f\x5f\x6d\x65']['\x74\x65\x61\x6d'])){_0x5154e7=_0x270fe7;_0x121bef=tmpObj;}}}target=_0x121bef;var _0x351e0b;if(usdfe['\x5f\x5f\x74\x68\x69\x73']){if(usdfe['\x73\x74\x61\x74\x65']['\x41\x69\x6d\x6b\x65\x79']['\x61\x63\x74\x69\x76\x65']==0x0){_0x351e0b=!![];}else if(usdfe['\x73\x74\x61\x74\x65']['\x41\x69\x6d\x6b\x65\x79']['\x61\x63\x74\x69\x76\x65']==0x1){_0x351e0b=_0x40accb[0x5];}else if(usdfe['\x73\x74\x61\x74\x65']['\x41\x69\x6d\x6b\x65\x79']['\x61\x63\x74\x69\x76\x65']==0x2){_0x351e0b=_0x40accb[0x6];}else if(usdfe['\x73\x74\x61\x74\x65']['\x41\x69\x6d\x6b\x65\x79']['\x61\x63\x74\x69\x76\x65']==0x3){_0x351e0b=usdfe['\x5f\x5f\x74\x68\x69\x73']['\x6d\x6f\x75\x73\x65\x44\x6f\x77\x6e\x58'];}else if(usdfe['\x73\x74\x61\x74\x65']['\x41\x69\x6d\x6b\x65\x79']['\x61\x63\x74\x69\x76\x65']==0x4){_0x351e0b=![];}}else{_0x351e0b=![];}var _0x56e9c3=usdfe['\x5f\x5f\x68']['\x6f\x62\x6a\x65\x63\x74']['\x72\x6f\x74\x61\x74\x69\x6f\x6e']['\x79'];var _0x1e9797=usdfe['\x5f\x5f\x68']['\x70\x69\x74\x63\x68\x4f\x62\x6a\x65\x63\x74']['\x72\x6f\x74\x61\x74\x69\x6f\x6e']['\x78'];if(target!=null&&target['\x68\x65\x61\x6c\x74\x68']>0x0&&target['\x61\x63\x74\x69\x76\x65']&&usdfe['\x5f\x5f\x68']!=null&&usdfe['\x5f\x5f\x72']!=null&&usdfe['\x5f\x5f\x74\x68\x69\x73']!=null&&usdfe['\x5f\x5f\x6d\x65']!=null&&usdfe['\x5f\x5f\x6d\x65']['\x69\x73\x59\x6f\x75']&&usdfe['\x5f\x5f\x6d\x65']['\x61\x63\x74\x69\x76\x65']&&usdfe['\x5f\x5f\x6d\x65']['\x68\x65\x61\x6c\x74\x68']>0x0&&_0x351e0b&&!isNaN(target['\x79\x32'])&&!isNaN(target['\x78\x32'])&&!isNaN(target['\x7a\x32'])&&usdfe['\x5f\x5f\x6d\x65']['\x61\x6d\x6d\x6f\x73'][usdfe['\x5f\x5f\x6d\x65']['\x77\x65\x61\x70\x6f\x6e\x49\x6e\x64\x65\x78']]!=0x0&&usdfe['\x5f\x5f\x69']){var _0x231b38=target['\x78\x32'];var _0x3aff52=target['\x79\x32']+usdfe['\x73\x74\x72\x69\x6e\x67\x54\x6f\x49\x6e\x74'][usdfe['\x73\x74\x61\x74\x65']['\x54\x61\x72\x67\x65\x74']['\x61'][usdfe['\x73\x74\x61\x74\x65']['\x54\x61\x72\x67\x65\x74']['\x61\x63\x74\x69\x76\x65']]]-0x2-target['\x63\x72\x6f\x75\x63\x68\x56\x61\x6c']*usdfe['\x5f\x5f\x69']['\x63\x72\x6f\x75\x63\x68\x44\x73\x74'];var _0x21c768=target['\x7a\x32'];var _0x270fe7=usdfe['\x5f\x5f\x72']['\x67\x65\x74\x44\x69\x73\x74\x61\x6e\x63\x65\x33\x44'](_0x231b38,_0x3aff52,_0x21c768,usdfe['\x5f\x5f\x6d\x65']['\x78'],usdfe['\x5f\x5f\x6d\x65']['\x79'],usdfe['\x5f\x5f\x6d\x65']['\x7a']);if(usdfe['\x5f\x5f\x6d\x65']['\x77\x65\x61\x70\x6f\x6e']['\x6e\x41\x75\x74\x6f']==0x1){if(usdfe['\x5f\x5f\x6d\x65']['\x64\x69\x64\x53\x68\x6f\x6f\x74']){if(usdfe['\x73\x74\x61\x74\x65']['\x41\x69\x6d\x6b\x65\x79']['\x61\x63\x74\x69\x76\x65']==0x0){_0x40accb[0x5]=0x0;}usdfe['\x5f\x5f\x6d\x65']['\x63\x61\x6e\x53\x68\x6f\x6f\x74']=![];setTimeout(()=>{usdfe['\x5f\x5f\x6d\x65']['\x63\x61\x6e\x53\x68\x6f\x6f\x74']=!![];},usdfe['\x5f\x5f\x6d\x65']['\x77\x65\x61\x70\x6f\x6e']['\x72\x61\x74\x65']-(usdfe['\x5f\x5f\x6d\x65']['\x77\x65\x61\x70\x6f\x6e']['\x61\x69\x6d\x53\x70\x65\x65\x64']?usdfe['\x5f\x5f\x6d\x65']['\x77\x65\x61\x70\x6f\x6e']['\x61\x69\x6d\x53\x70\x65\x65\x64']:0x0));}if(_0x351e0b){_0x56e9c3=usdfe['\x5f\x5f\x72']['\x67\x65\x74\x44\x69\x72\x65\x63\x74\x69\x6f\x6e'](usdfe['\x5f\x5f\x74\x68\x69\x73']['\x6f\x62\x6a\x65\x63\x74']['\x70\x6f\x73\x69\x74\x69\x6f\x6e']['\x7a'],usdfe['\x5f\x5f\x74\x68\x69\x73']['\x6f\x62\x6a\x65\x63\x74']['\x70\x6f\x73\x69\x74\x69\x6f\x6e']['\x78'],_0x21c768,_0x231b38);_0x1e9797=usdfe['\x5f\x5f\x72']['\x67\x65\x74\x58\x44\x69\x72'](usdfe['\x5f\x5f\x74\x68\x69\x73']['\x6f\x62\x6a\x65\x63\x74']['\x70\x6f\x73\x69\x74\x69\x6f\x6e']['\x78'],usdfe['\x5f\x5f\x74\x68\x69\x73']['\x6f\x62\x6a\x65\x63\x74']['\x70\x6f\x73\x69\x74\x69\x6f\x6e']['\x79'],usdfe['\x5f\x5f\x74\x68\x69\x73']['\x6f\x62\x6a\x65\x63\x74']['\x70\x6f\x73\x69\x74\x69\x6f\x6e']['\x7a'],_0x231b38,_0x3aff52,_0x21c768);if(usdfe['\x5f\x5f\x63']){_0x1e9797-=usdfe['\x5f\x5f\x6d\x65']['\x72\x65\x63\x6f\x69\x6c\x41\x6e\x69\x6d\x59']*usdfe['\x5f\x5f\x63']['\x72\x65\x63\x6f\x69\x6c\x4d\x6c\x74'];}if(!usdfe['\x73\x74\x72\x69\x6e\x67\x54\x6f\x49\x6e\x74'][usdfe['\x73\x74\x61\x74\x65']['\x53\x69\x6c\x65\x6e\x74\x20\x41\x69\x6d']['\x61'][usdfe['\x73\x74\x61\x74\x65']['\x53\x69\x6c\x65\x6e\x74\x20\x41\x69\x6d']['\x61\x63\x74\x69\x76\x65']]]){usdfe['\x5f\x5f\x74\x68\x69\x73']['\x6f\x62\x6a\x65\x63\x74']['\x72\x6f\x74\x61\x74\x69\x6f\x6e']['\x79']=_0x56e9c3;usdfe['\x5f\x5f\x68']['\x70\x69\x74\x63\x68\x4f\x62\x6a\x65\x63\x74']['\x72\x6f\x74\x61\x74\x69\x6f\x6e']['\x78']=_0x1e9797;}}if((usdfe['\x5f\x5f\x6d\x65']['\x63\x61\x6e\x53\x68\x6f\x6f\x74']==null&&!usdfe['\x5f\x5f\x6d\x65']['\x64\x69\x64\x53\x68\x6f\x6f\x74']||usdfe['\x5f\x5f\x6d\x65']['\x63\x61\x6e\x53\x68\x6f\x6f\x74']!=null&&usdfe['\x5f\x5f\x6d\x65']['\x63\x61\x6e\x53\x68\x6f\x6f\x74'])&&_0x351e0b){if((usdfe['\x73\x74\x61\x74\x65']['\x41\x69\x6d\x6b\x65\x79']['\x61\x63\x74\x69\x76\x65']==0x0||usdfe['\x5f\x5f\x6d\x65']['\x77\x65\x61\x70\x6f\x6e']['\x6e\x61\x6d\x65']=='\x43\x6f\x6d\x62\x61\x74\x20\x4b\x6e\x69\x66\x65')&&usdfe['\x5f\x5f\x6d\x65']['\x77\x65\x61\x70\x6f\x6e']['\x72\x61\x6e\x67\x65']>=_0x270fe7){_0x40accb[0x6]=0x1;}if(usdfe['\x5f\x5f\x6d\x65']['\x72\x65\x63\x6f\x69\x6c\x41\x6e\x69\x6d\x59']<0.1&&(usdfe['\x5f\x5f\x6d\x65']['\x61\x69\x6d\x56\x61\x6c']==0x0||usdfe['\x73\x74\x61\x74\x65']['\x41\x69\x6d\x6b\x65\x79']['\x61\x63\x74\x69\x76\x65']!=0x0)){if((usdfe['\x73\x74\x61\x74\x65']['\x41\x69\x6d\x6b\x65\x79']['\x61\x63\x74\x69\x76\x65']==0x0||usdfe['\x5f\x5f\x6d\x65']['\x77\x65\x61\x70\x6f\x6e']['\x6e\x61\x6d\x65']=='\x43\x6f\x6d\x62\x61\x74\x20\x4b\x6e\x69\x66\x65')&&usdfe['\x5f\x5f\x6d\x65']['\x77\x65\x61\x70\x6f\x6e']['\x72\x61\x6e\x67\x65']>=_0x270fe7){_0x40accb[0x5]=0x1;}}}}else if(_0x351e0b){if((usdfe['\x73\x74\x61\x74\x65']['\x41\x69\x6d\x6b\x65\x79']['\x61\x63\x74\x69\x76\x65']==0x0||usdfe['\x5f\x5f\x6d\x65']['\x77\x65\x61\x70\x6f\x6e']['\x6e\x61\x6d\x65']=='\x43\x6f\x6d\x62\x61\x74\x20\x4b\x6e\x69\x66\x65')&&usdfe['\x5f\x5f\x6d\x65']['\x77\x65\x61\x70\x6f\x6e']['\x72\x61\x6e\x67\x65']>=_0x270fe7){_0x40accb[0x6]=0x1;}_0x56e9c3=usdfe['\x5f\x5f\x72']['\x67\x65\x74\x44\x69\x72\x65\x63\x74\x69\x6f\x6e'](usdfe['\x5f\x5f\x74\x68\x69\x73']['\x6f\x62\x6a\x65\x63\x74']['\x70\x6f\x73\x69\x74\x69\x6f\x6e']['\x7a'],usdfe['\x5f\x5f\x74\x68\x69\x73']['\x6f\x62\x6a\x65\x63\x74']['\x70\x6f\x73\x69\x74\x69\x6f\x6e']['\x78'],_0x21c768,_0x231b38);_0x1e9797=usdfe['\x5f\x5f\x72']['\x67\x65\x74\x58\x44\x69\x72'](usdfe['\x5f\x5f\x74\x68\x69\x73']['\x6f\x62\x6a\x65\x63\x74']['\x70\x6f\x73\x69\x74\x69\x6f\x6e']['\x78'],usdfe['\x5f\x5f\x74\x68\x69\x73']['\x6f\x62\x6a\x65\x63\x74']['\x70\x6f\x73\x69\x74\x69\x6f\x6e']['\x79'],usdfe['\x5f\x5f\x74\x68\x69\x73']['\x6f\x62\x6a\x65\x63\x74']['\x70\x6f\x73\x69\x74\x69\x6f\x6e']['\x7a'],_0x231b38,_0x3aff52,_0x21c768);if(usdfe['\x5f\x5f\x63']){_0x1e9797-=usdfe['\x5f\x5f\x6d\x65']['\x72\x65\x63\x6f\x69\x6c\x41\x6e\x69\x6d\x59']*usdfe['\x5f\x5f\x63']['\x72\x65\x63\x6f\x69\x6c\x4d\x6c\x74'];}if(!usdfe['\x73\x74\x72\x69\x6e\x67\x54\x6f\x49\x6e\x74'][usdfe['\x73\x74\x61\x74\x65']['\x53\x69\x6c\x65\x6e\x74\x20\x41\x69\x6d']['\x61'][usdfe['\x73\x74\x61\x74\x65']['\x53\x69\x6c\x65\x6e\x74\x20\x41\x69\x6d']['\x61\x63\x74\x69\x76\x65']]]){usdfe['\x5f\x5f\x74\x68\x69\x73']['\x6f\x62\x6a\x65\x63\x74']['\x72\x6f\x74\x61\x74\x69\x6f\x6e']['\x79']=_0x56e9c3;usdfe['\x5f\x5f\x68']['\x70\x69\x74\x63\x68\x4f\x62\x6a\x65\x63\x74']['\x72\x6f\x74\x61\x74\x69\x6f\x6e']['\x78']=_0x1e9797;}if((usdfe['\x73\x74\x61\x74\x65']['\x41\x69\x6d\x6b\x65\x79']['\x61\x63\x74\x69\x76\x65']==0x0||usdfe['\x5f\x5f\x6d\x65']['\x77\x65\x61\x70\x6f\x6e']['\x6e\x61\x6d\x65']=='\x43\x6f\x6d\x62\x61\x74\x20\x4b\x6e\x69\x66\x65')&&usdfe['\x5f\x5f\x6d\x65']['\x77\x65\x61\x70\x6f\x6e']['\x72\x61\x6e\x67\x65']>=_0x270fe7){_0x40accb[0x5]=0x1;}}}else if(usdfe['\x5f\x5f\x68']!=null&&usdfe['\x5f\x5f\x74\x68\x69\x73']!=null&&usdfe['\x5f\x5f\x6d\x65']!=null&&(usdfe['\x73\x74\x61\x74\x65']['\x41\x69\x6d\x6b\x65\x79']['\x61\x63\x74\x69\x76\x65']==0x0||usdfe['\x5f\x5f\x6d\x65']&&usdfe['\x5f\x5f\x6d\x65']['\x77\x65\x61\x70\x6f\x6e']['\x6e\x61\x6d\x65']=='\x43\x6f\x6d\x62\x61\x74\x20\x4b\x6e\x69\x66\x65')){_0x40accb[0x5]=usdfe['\x6f\x67\x4c'];_0x40accb[0x6]=usdfe['\x6f\x67\x52'];}_0x40accb[0x3]=(_0x1e9797%Math['\x50\x49\x32'])['\x72\x6f\x75\x6e\x64'](0x3);_0x40accb[0x2]=(_0x56e9c3%Math['\x50\x49\x32'])['\x72\x6f\x75\x6e\x64'](0x3);var _0x1537a5=c6i['\x67\x65\x74\x41\x6e\x67\x6c\x65\x44\x73\x74'](_0x565c67[0x2],this['\x78\x44\x69\x72\x65']);if(target&&usdfe['\x73\x74\x72\x69\x6e\x67\x54\x6f\x49\x6e\x74'][usdfe['\x73\x74\x61\x74\x65']['\x33\x36\x30']['\x61'][usdfe['\x73\x74\x61\x74\x65']['\x33\x36\x30']['\x61\x63\x74\x69\x76\x65']]]&&(usdfe['\x67\x65\x74\x53\x70\x69\x6e']()+_0x1537a5*0xb4/Math['\x50\x49']<0x168||usdfe['\x73\x70\x69\x6e\x54\x69\x63\x6b\x73']%0x2!=0x0)){_0x40accb[0x2]=this['\x78\x44\x69\x72\x65']+Math['\x50\x49'];usdfe['\x73\x70\x69\x6e\x54\x69\x63\x6b\x73']+=0x1;}if(target&&usdfe['\x73\x74\x72\x69\x6e\x67\x54\x6f\x49\x6e\x74'][usdfe['\x73\x74\x61\x74\x65']['\x33\x36\x30']['\x61'][usdfe['\x73\x74\x61\x74\x65']['\x33\x36\x30']['\x61\x63\x74\x69\x76\x65']]]&&usdfe['\x73\x70\x69\x6e\x54\x69\x63\x6b\x73']%0x2!=0x0){if(_0x40accb[0x4]>=0x0){_0x40accb[0x4]=(_0x40accb[0x4]+0x4)%0x8;}_0x40accb[0x5]=0x0;}_0x1537a5=c6i['\x67\x65\x74\x41\x6e\x67\x6c\x65\x44\x73\x74'](_0x565c67[0x2],this['\x78\x44\x69\x72\x65']);usdfe['\x73\x61\x76\x65\x53\x70\x69\x6e'](_0x1537a5);c6h['\x73\x61\x76\x65\x53\x70\x69\x6e'](this,_0x1537a5);if(usdfe['\x5f\x5f\x68']&&usdfe['\x5f\x5f\x6d\x65']&&usdfe['\x5f\x5f\x6d\x65']['\x79\x56\x65\x6c']==0x0&&usdfe['\x62\x68\x6f\x70\x41\x63\x74\x69\x76\x65']){if(!usdfe['\x5f\x5f\x6d\x65']['\x64\x69\x64\x4a\x75\x6d\x70']){usdfe['\x5f\x5f\x68']['\x6b\x65\x79\x73'][usdfe['\x5f\x5f\x68']['\x6a\x75\x6d\x70\x4b\x65\x79']]=0x1;}else{usdfe['\x5f\x5f\x68']['\x6b\x65\x79\x73'][usdfe['\x5f\x5f\x68']['\x6a\x75\x6d\x70\x4b\x65\x79']]=0x0;}}if(usdfe['\x67\x65\x74\x56\x61\x6c']('\x42\x48\x4f\x50')==0x2){if(usdfe['\x5f\x5f\x68']&&usdfe['\x5f\x5f\x6d\x65']&&usdfe['\x5f\x5f\x6d\x65']['\x79\x56\x65\x6c']<-0.03&&usdfe['\x62\x68\x6f\x70\x41\x63\x74\x69\x76\x65']){usdfe['\x5f\x5f\x68']['\x6b\x65\x79\x73'][usdfe['\x5f\x5f\x68']['\x63\x72\x6f\x75\x63\x68\x4b\x65\x79']]=usdfe['\x5f\x5f\x6d\x65']['\x63\x61\x6e\x53\x6c\x69\x64\x65']&&usdfe['\x5f\x5f\x6d\x65']['\x64\x69\x64\x4a\x75\x6d\x70'];}else if(usdfe['\x5f\x5f\x68']&&usdfe['\x5f\x5f\x6d\x65']&&usdfe['\x62\x68\x6f\x70\x41\x63\x74\x69\x76\x65']){usdfe['\x5f\x5f\x68']['\x6b\x65\x79\x73'][usdfe['\x5f\x5f\x68']['\x63\x72\x6f\x75\x63\x68\x4b\x65\x79']]=0x0;}else if(usdfe['\x5f\x5f\x68']['\x6b\x65\x79\x73']&&!usdfe['\x62\x68\x6f\x70\x41\x63\x74\x69\x76\x65']&&usdfe['\x6f\x6c\x64\x62\x68\x6f\x70\x41\x63\x74\x69\x76\x65']){usdfe['\x5f\x5f\x68']['\x6b\x65\x79\x73'][usdfe['\x5f\x5f\x68']['\x63\x72\x6f\x75\x63\x68\x4b\x65\x79']]=0x0;}}usdfe['\x6f\x6c\x64\x62\x68\x6f\x70\x41\x63\x74\x69\x76\x65']=usdfe['\x62\x68\x6f\x70\x41\x63\x74\x69\x76\x65'];if(usdfe['\x66\x6f\x72\x63\x65\x43\x72\x6f\x75\x63\x68']){usdfe['\x5f\x5f\x68']['\x6b\x65\x79\x73'][usdfe['\x5f\x5f\x68']['\x63\x72\x6f\x75\x63\x68\x4b\x65\x79']]=0x1;}if(usdfe['\x5f\x5f\x6d\x65']&&usdfe['\x5f\x5f\x68']&&usdfe['\x5f\x5f\x6d\x65']['\x61\x6d\x6d\x6f\x73'][usdfe['\x5f\x5f\x6d\x65']['\x77\x65\x61\x70\x6f\x6e\x49\x6e\x64\x65\x78']]==0x0&&usdfe['\x5f\x5f\x68']['\x6b\x65\x79\x73'][usdfe['\x5f\x5f\x68']['\x72\x65\x6c\x6f\x61\x64\x4b\x65\x79']]==0x0){_0x40accb[0x5]=0x0;_0x40accb[0x6]=0x0;usdfe['\x5f\x5f\x68']['\x6b\x65\x79\x73'][usdfe['\x5f\x5f\x68']['\x72\x65\x6c\x6f\x61\x64\x4b\x65\x79']]=0x1;}else if(usdfe['\x5f\x5f\x68']){usdfe['\x5f\x5f\x68']['\x6b\x65\x79\x73'][usdfe['\x5f\x5f\x68']['\x72\x65\x6c\x6f\x61\x64\x4b\x65\x79']]=0x0;}if(usdfe['\x67\x65\x74\x56\x61\x6c']('\x41\x75\x74\x6f\x20\x52\x65\x73\x70\x61\x77\x6e')){window['\x65\x6e\x74\x65\x72\x47\x61\x6d\x65']();}var _0x5c8f43=!_0x588b22&&this['\x69\x73\x59\x6f\x75'];if(_0x5c8f43&&(this['\x6c\x65\x61\x6e\x41\x6e\x69\x6d\x58']-=_0x1537a5*c6j['\x6c\x65\x61\x6e\x53\x65\x6e\x73'],this['\x6c\x65\x61\x6e\x41\x6e\x69\x6d\x58']=c6i['\x6c\x69\x6d\x69\x74'](this['\x6c\x65\x61\x6e\x41\x6e\x69\x6d\x58'],c6j['\x6c\x65\x61\x6e\x4d\x61\x78']),this['\x6c\x65\x61\x6e\x41\x6e\x69\x6d\x59']-=c6i['\x67\x65\x74\x41\x6e\x67\x6c\x65\x44\x73\x74'](_0x565c67[0x3],this['\x79\x44\x69\x72\x65'])*c6j['\x6c\x65\x61\x6e\x53\x65\x6e\x73'],this['\x6c\x65\x61\x6e\x41\x6e\x69\x6d\x59']=c6i['\x6c\x69\x6d\x69\x74'](this['\x6c\x65\x61\x6e\x41\x6e\x69\x6d\x59'],c6j['\x6c\x65\x61\x6e\x4d\x61\x78']),this['\x6c\x65\x61\x6e\x41\x6e\x69\x6d\x58']&&(this['\x6c\x65\x61\x6e\x41\x6e\x69\x6d\x58']*=Math['\x70\x6f\x77'](c6j['\x6c\x65\x61\x6e\x50\x75\x6c\x6c'],_0x60b643)),this['\x6c\x65\x61\x6e\x41\x6e\x69\x6d\x59']&&(this['\x6c\x65\x61\x6e\x41\x6e\x69\x6d\x59']*=Math['\x70\x6f\x77'](c6j['\x6c\x65\x61\x6e\x50\x75\x6c\x6c'],_0x60b643)),this['\x6c\x65\x61\x6e\x41\x6e\x69\x6d\x5a']&&(this['\x6c\x65\x61\x6e\x41\x6e\x69\x6d\x5a']*=Math['\x70\x6f\x77'](c6j['\x6c\x65\x61\x6e\x50\x75\x6c\x6c\x5a'],_0x60b643)),this['\x62\x6f\x62\x41\x6e\x69\x6d\x5a']&&(this['\x62\x6f\x62\x41\x6e\x69\x6d\x5a']*=Math['\x70\x6f\x77'](c6j['\x62\x6f\x62\x50\x75\x6c\x6c\x5a'],_0x60b643)),this['\x62\x6f\x62\x41\x6e\x69\x6d\x59']&&(this['\x62\x6f\x62\x41\x6e\x69\x6d\x59']*=Math['\x70\x6f\x77'](c6j['\x62\x6f\x62\x50\x75\x6c\x6c\x59'],_0x60b643)),this['\x72\x65\x63\x6f\x69\x6c\x58']&&(this['\x72\x65\x63\x6f\x69\x6c\x58']*=Math['\x70\x6f\x77'](c6j['\x6c\x65\x61\x6e\x50\x75\x6c\x6c'],_0x60b643)),this['\x72\x65\x63\x6f\x69\x6c\x5a']&&(this['\x72\x65\x63\x6f\x69\x6c\x5a']*=Math['\x70\x6f\x77'](c6j['\x6c\x65\x61\x6e\x50\x75\x6c\x6c'],_0x60b643)),this['\x69\x6e\x73\x70\x65\x63\x74\x69\x6e\x67']&&this['\x69\x6e\x73\x70\x65\x63\x74\x58']<Math['\x50\x49']/2.8&&(this['\x69\x6e\x73\x70\x65\x63\x74\x58']+=0.1*(Math['\x50\x49']/2.8-this['\x69\x6e\x73\x70\x65\x63\x74\x58']))),0x2==_0x565c67[0xb]?c6h['\x73\x77\x61\x70\x4d\x65\x6c\x65\x65'](this,_0x588b22):0x1==_0x565c67[0xb]?c6h['\x73\x77\x61\x70\x53\x65\x63\x6f\x6e\x64\x61\x72\x79'](this,_0x588b22):0x3==_0x565c67[0xb]?c6h['\x73\x77\x61\x70\x57\x65\x61\x70\x6f\x6e'](this,null,null,void 0x0,0x0,_0x588b22):_0x565c67[0xa]&&c6h['\x73\x77\x61\x70\x57\x65\x61\x70\x6f\x6e'](this,_0x565c67[0xa],!0x1,void 0x0,void 0x0,_0x588b22),_0x588b22||(this['\x72\x65\x63\x6f\x69\x6c\x46\x6f\x72\x63\x65']&&(this['\x72\x65\x63\x6f\x69\x6c\x41\x6e\x69\x6d']+=this['\x72\x65\x63\x6f\x69\x6c\x46\x6f\x72\x63\x65']*_0x60b643,this['\x72\x65\x63\x6f\x69\x6c\x41\x6e\x69\x6d\x59']+=this['\x72\x65\x63\x6f\x69\x6c\x46\x6f\x72\x63\x65']*(this['\x77\x65\x61\x70\x6f\x6e']['\x72\x65\x63\x6f\x69\x6c\x59']||0x1)*(0x1-0.3*this['\x63\x72\x6f\x75\x63\x68\x56\x61\x6c'])*_0x60b643,this['\x72\x65\x63\x6f\x69\x6c\x46\x6f\x72\x63\x65']*=Math['\x70\x6f\x77'](this['\x77\x65\x61\x70\x6f\x6e']['\x72\x65\x63\x6f\x76\x65\x72\x46'],_0x60b643)),this['\x72\x65\x63\x6f\x69\x6c\x41\x6e\x69\x6d']&&(this['\x72\x65\x63\x6f\x69\x6c\x41\x6e\x69\x6d']*=Math['\x70\x6f\x77'](this['\x77\x65\x61\x70\x6f\x6e']['\x72\x65\x63\x6f\x76\x65\x72'],_0x60b643)),this['\x72\x65\x63\x6f\x69\x6c\x41\x6e\x69\x6d\x59']&&(this['\x72\x65\x63\x6f\x69\x6c\x41\x6e\x69\x6d\x59']*=Math['\x70\x6f\x77'](this['\x77\x65\x61\x70\x6f\x6e']['\x72\x65\x63\x6f\x76\x65\x72\x59']||this['\x77\x65\x61\x70\x6f\x6e']['\x72\x65\x63\x6f\x76\x65\x72'],_0x60b643))),this['\x78\x44\x69\x72\x65']=(_0x565c67[0x2]||0x0)['\x72\x6f\x75\x6e\x64'](0x3),this['\x79\x44\x69\x72\x65']=(_0x565c67[0x3]||0x0)['\x72\x6f\x75\x6e\x64'](0x3),this['\x79\x44\x69\x72\x65']>Math['\x50\x49']/0x2?this['\x79\x44\x69\x72\x65']=Math['\x50\x49']/0x2:this['\x79\x44\x69\x72\x65']<-Math['\x50\x49']/0x2&&(this['\x79\x44\x69\x72\x65']=-Math['\x50\x49']/0x2),this['\x6f\x6c\x64\x58']=this['\x78'],this['\x6f\x6c\x64\x59']=this['\x79'],this['\x6f\x6c\x64\x5a']=this['\x7a'],this['\x77\x65\x61\x70\x6f\x6e']['\x7a\x6f\x6f\x6d']&&'\x70\x72\x6f\x70'!=this['\x74\x65\x61\x6d']&&(!this['\x77\x65\x61\x70\x6f\x6e']['\x6e\x6f\x41\x69\x6d']||0x0<this['\x73\x77\x61\x70\x54\x69\x6d\x65'])){var _0x5c9046=0x0>=this['\x72\x65\x6c\x6f\x61\x64\x54\x69\x6d\x65\x72']&&0x0>=this['\x73\x77\x61\x70\x54\x69\x6d\x65'];_0x565c67[0x6]&&0x0<this['\x61\x69\x6d\x56\x61\x6c']&&_0x5c9046?(c6h['\x63\x61\x6e\x63\x65\x6c\x49\x6e\x73\x70\x65\x63\x74'](this),this['\x61\x69\x6d\x44\x69\x72']=0x0,this['\x61\x69\x6d\x56\x61\x6c']-=0x1/(this['\x77\x65\x61\x70\x6f\x6e']['\x61\x69\x6d\x53\x70\x65\x65\x64']/_0x60b643),0x0>=this['\x61\x69\x6d\x56\x61\x6c']&&(this['\x61\x69\x6d\x56\x61\x6c']=0x0,this['\x69\x73\x59\x6f\x75']&&!_0x588b22&&c6h['\x74\x6f\x67\x67\x6c\x65\x41\x69\x6d'](this,0x1)),this['\x69\x73\x59\x6f\x75']&&!_0x588b22&&!this['\x77\x65\x61\x70\x6f\x6e']['\x73\x63\x6f\x70\x65']&&c6h['\x75\x70\x64\x61\x74\x65\x41\x69\x6d'](this,0x1-this['\x61\x69\x6d\x56\x61\x6c'])):(!_0x5c9046||!_0x565c67[0x6]&&0x1>this['\x61\x69\x6d\x56\x61\x6c'])&&(this['\x61\x69\x6d\x44\x69\x72']=0x1,!this['\x61\x69\x6d\x56\x61\x6c']&&this['\x69\x73\x59\x6f\x75']&&!_0x588b22&&c6h['\x74\x6f\x67\x67\x6c\x65\x41\x69\x6d'](this,0x0),this['\x61\x69\x6d\x56\x61\x6c']+=0x1/(this['\x77\x65\x61\x70\x6f\x6e']['\x61\x69\x6d\x53\x70\x65\x65\x64']/_0x60b643),0x1<=this['\x61\x69\x6d\x56\x61\x6c']&&(this['\x61\x69\x6d\x56\x61\x6c']=0x1),this['\x69\x73\x59\x6f\x75']&&!_0x588b22&&!this['\x77\x65\x61\x70\x6f\x6e']['\x73\x63\x6f\x70\x65']&&c6h['\x75\x70\x64\x61\x74\x65\x41\x69\x6d'](this,0x1-this['\x61\x69\x6d\x56\x61\x6c'])),0x0==this['\x61\x69\x6d\x56\x61\x6c']?this['\x61\x69\x6d\x54\x69\x6d\x65']+=_0x60b643:this['\x61\x69\x6d\x54\x69\x6d\x65']=0x0;}_0x565c67[0x8]&&0x1>this['\x63\x72\x6f\x75\x63\x68\x56\x61\x6c']&&!this['\x6f\x6e\x4c\x61\x64\x64\x65\x72']?(this['\x63\x72\x6f\x75\x63\x68\x56\x61\x6c']+=c6j['\x63\x72\x6f\x75\x63\x68\x53\x70\x65\x65\x64']*_0x60b643,0x1<=this['\x63\x72\x6f\x75\x63\x68\x56\x61\x6c']&&(this['\x63\x72\x6f\x75\x63\x68\x56\x61\x6c']=0x1),this['\x6f\x6e\x47\x72\x6f\x75\x6e\x64']?_0x5c8f43&&(this['\x62\x6f\x62\x41\x6e\x69\x6d\x59']-=1.4*c6j['\x63\x72\x6f\x75\x63\x68\x41\x6e\x69\x6d']*_0x60b643):this['\x79']+=c6j['\x63\x72\x6f\x75\x63\x68\x53\x70\x65\x65\x64']*_0x60b643):!_0x565c67[0x8]&&0x0<this['\x63\x72\x6f\x75\x63\x68\x56\x61\x6c']&&(this['\x63\x72\x6f\x75\x63\x68\x56\x61\x6c']-=c6j['\x63\x72\x6f\x75\x63\x68\x53\x70\x65\x65\x64']*_0x60b643,0x0>=this['\x63\x72\x6f\x75\x63\x68\x56\x61\x6c']&&(this['\x63\x72\x6f\x75\x63\x68\x56\x61\x6c']=0x0),this['\x6f\x6e\x47\x72\x6f\x75\x6e\x64']?_0x5c8f43&&(this['\x62\x6f\x62\x41\x6e\x69\x6d\x59']+=c6j['\x63\x72\x6f\x75\x63\x68\x41\x6e\x69\x6d']*_0x60b643):this['\x79']-=c6j['\x63\x72\x6f\x75\x63\x68\x53\x70\x65\x65\x64']*_0x60b643),this['\x63\x72\x6f\x75\x63\x68\x56\x61\x6c']&&(this['\x63\x72\x6f\x75\x63\x68\x56\x61\x6c']=this['\x63\x72\x6f\x75\x63\x68\x56\x61\x6c']['\x72\x6f\x75\x6e\x64'](0x3)),c6h['\x75\x70\x64\x61\x74\x65\x48\x65\x69\x67\x68\x74'](this);var _0x191967,_0x1b84f1=this['\x6f\x6e\x47\x72\x6f\x75\x6e\x64']||this['\x6f\x6e\x4c\x61\x64\x64\x65\x72'];_0x191967=_0x1b84f1?(this['\x74\x65\x72\x72\x61\x69\x6e\x53\x6c\x69\x70\x70\x69\x6e\x67']?c6j['\x73\x6c\x69\x70\x70\x69\x6e\x67\x53\x70\x65\x65\x64']:c6j['\x70\x6c\x61\x79\x65\x72\x53\x70\x65\x65\x64'])*this['\x73\x70\x65\x65\x64']:c6j['\x61\x69\x72\x53\x70\x65\x65\x64'],_0x191967*=this['\x61\x69\x6d\x56\x61\x6c']?0x1:c6j['\x61\x69\x6d\x53\x6c\x6f\x77'],_0x191967*=_0x78b8df['\x6d\x6f\x64\x65']['\x73\x70\x64\x4d\x6c\x74']&&_0x78b8df['\x6d\x6f\x64\x65']['\x73\x70\x64\x4d\x6c\x74'][this['\x74\x65\x61\x6d']]||0x1,_0x191967*=this['\x63\x72\x6f\x75\x63\x68\x56\x61\x6c']?c6j['\x63\x72\x6f\x75\x63\x68\x53\x6c\x6f\x77']:0x1,_0x191967*=this['\x77\x65\x61\x70\x6f\x6e']['\x73\x70\x64\x4d\x6c\x74']*_0x60b643;var _0x33487b=0x0;if(_0x33487b=this['\x6f\x6e\x4c\x61\x64\x64\x65\x72']?c6j['\x6c\x61\x64\x64\x65\x72\x44\x65\x63\x65\x6c']:this['\x74\x65\x72\x72\x61\x69\x6e\x53\x6c\x69\x70\x70\x69\x6e\x67']?c6j['\x74\x65\x72\x72\x61\x69\x6e\x53\x6c\x69\x70\x44\x65\x63\x65\x6c']:this['\x6f\x6e\x54\x65\x72\x72\x61\x69\x6e']?c6j['\x74\x65\x72\x72\x61\x69\x6e\x44\x65\x63\x65\x6c']:this['\x6f\x6e\x47\x72\x6f\x75\x6e\x64']?c6j['\x67\x72\x6f\x75\x6e\x64\x44\x65\x63\x65\x6c']:c6j['\x61\x69\x72\x44\x65\x63\x65\x6c'],0.5>=this['\x63\x72\x6f\x75\x63\x68\x56\x61\x6c']&&(this['\x63\x61\x6e\x53\x6c\x69\x64\x65']=!0x0),this['\x6f\x6e\x47\x72\x6f\x75\x6e\x64']&&this['\x63\x72\x6f\x75\x63\x68\x56\x61\x6c']||(this['\x73\x6c\x69\x64\x65\x54\x69\x6d\x65\x72']=0x0),this['\x73\x6c\x69\x64\x65\x54\x69\x6d\x65\x72'])if(this['\x73\x6c\x69\x64\x65\x54\x69\x6d\x65\x72']-=_0x60b643,0x0>=this['\x73\x6c\x69\x64\x65\x54\x69\x6d\x65\x72'])this['\x73\x6c\x69\x64\x65\x54\x69\x6d\x65\x72']=0x0;else{_0x191967*=0.25,_0x33487b=this['\x6f\x6e\x54\x65\x72\x72\x61\x69\x6e']?c6j['\x74\x65\x72\x72\x61\x69\x6e\x53\x6c\x69\x64\x65\x44\x65\x63\x65\x6c']:c6j['\x73\x6c\x69\x64\x65\x44\x65\x63\x65\x6c'];var _0x1c39ed=c6i['\x67\x65\x74\x44\x69\x73\x74\x61\x6e\x63\x65'](this['\x78\x56\x65\x6c'],this['\x7a\x56\x65\x6c'],0x0,0x0),_0x1e1868=c6i['\x67\x65\x74\x44\x69\x72\x65\x63\x74\x69\x6f\x6e'](0x0,0x0,this['\x78\x56\x65\x6c'],this['\x7a\x56\x65\x6c']),_0x5aaff2=c6i['\x67\x65\x74\x44\x69\x72\x65\x63\x74\x69\x6f\x6e'](Math['\x73\x69\x6e'](this['\x78\x44\x69\x72\x65']),Math['\x63\x6f\x73'](this['\x78\x44\x69\x72\x65']),0x0,0x0),_0x108c0c=0.03*c6i['\x67\x65\x74\x41\x6e\x67\x6c\x65\x44\x73\x74'](_0x5aaff2,_0x1e1868);this['\x78\x56\x65\x6c']=_0x1c39ed*Math['\x63\x6f\x73'](_0x1e1868+Math['\x50\x49']-_0x108c0c),this['\x7a\x56\x65\x6c']=_0x1c39ed*Math['\x73\x69\x6e'](_0x1e1868+Math['\x50\x49']-_0x108c0c);}_0x78b8df['\x6c\x6f\x63\x6b\x4d\x6f\x76\x65']&&(_0x191967*=0x0),this['\x6a\x75\x6d\x70\x43\x6f\x6f\x6c\x64\x6f\x77\x6e']=Math['\x6d\x61\x78'](this['\x6a\x75\x6d\x70\x43\x6f\x6f\x6c\x64\x6f\x77\x6e']-_0x60b643,0x0),this['\x6f\x6e\x47\x72\x6f\x75\x6e\x64']&&0x0>=this['\x6a\x75\x6d\x70\x43\x6f\x6f\x6c\x64\x6f\x77\x6e']&&c6h['\x74\x72\x79\x4a\x75\x6d\x70'](this,_0x565c67[0x7]),_0x1b84f1||(this['\x79\x56\x65\x6c']-=_0x60b643*(c6j['\x67\x72\x61\x76\x69\x74\x79']*(_0x78b8df['\x63\x6f\x6e\x66\x69\x67']?_0x78b8df['\x63\x6f\x6e\x66\x69\x67']['\x67\x72\x61\x76\x4d\x6c\x74']:0x1)));var _0x4bf22f=c6j['\x6d\x6f\x76\x44\x69\x72\x73'][_0x565c67[0x4]];_0x4bf22f!=Math['\x50\x49']&&0x0!=_0x4bf22f&&_0x4bf22f!=Math['\x50\x49']/0x2&&_0x4bf22f!=-Math['\x50\x49']/0x2&&(_0x191967*=_0x78b8df['\x63\x6f\x6e\x66\x69\x67']?_0x78b8df['\x63\x6f\x6e\x66\x69\x67']['\x73\x74\x72\x61\x66\x65\x53\x70\x64']:0x1),void 0x0!==_0x4bf22f&&(this['\x78\x56\x65\x6c']+=_0x191967*Math['\x63\x6f\x73'](_0x4bf22f-this['\x78\x44\x69\x72\x65']),this['\x7a\x56\x65\x6c']+=_0x191967*Math['\x73\x69\x6e'](_0x4bf22f-this['\x78\x44\x69\x72\x65'])),this['\x78\x56\x65\x6c']&&(this['\x78']+=this['\x78\x56\x65\x6c']*_0x60b643,this['\x78\x56\x65\x6c']*=Math['\x70\x6f\x77'](_0x33487b,_0x60b643),this['\x78\x56\x65\x6c']=c6i['\x63\x72\x6f\x70\x56\x61\x6c'](this['\x78\x56\x65\x6c'],c6j['\x64\x65\x63\x65\x6c\x4d\x69\x6e'])),this['\x79\x56\x65\x6c']&&(this['\x79']+=this['\x79\x56\x65\x6c']*_0x60b643,this['\x79\x56\x65\x6c']*=Math['\x70\x6f\x77'](_0x33487b,_0x60b643)),this['\x7a\x56\x65\x6c']&&(this['\x7a']+=this['\x7a\x56\x65\x6c']*_0x60b643,this['\x7a\x56\x65\x6c']*=Math['\x70\x6f\x77'](_0x33487b,_0x60b643),this['\x7a\x56\x65\x6c']=c6i['\x63\x72\x6f\x70\x56\x61\x6c'](this['\x7a\x56\x65\x6c'],c6j['\x64\x65\x63\x65\x6c\x4d\x69\x6e'])),'\x70\x72\x6f\x70'==this['\x74\x65\x61\x6d']&&_0x565c67[0x5]&&c6h['\x70\x69\x63\x6b\x50\x72\x6f\x70'](this);var _0x479d92=this['\x6f\x6e\x47\x72\x6f\x75\x6e\x64']&&!this['\x64\x69\x64\x4a\x75\x6d\x70'],_0x4c155c=!0x1;this['\x6f\x6e\x47\x72\x6f\x75\x6e\x64']=!0x1,this['\x6f\x6e\x4c\x61\x64\x64\x65\x72']=!0x1;for(var _0x50ea6f=!0x1,_0x18f807='\x70\x69\x63\x6b\x75\x70',_0x51ddd4=0x0;_0x51ddd4<_0x78b8df['\x6d\x61\x70']['\x6d\x61\x6e\x61\x67\x65\x72']['\x6f\x62\x6a\x65\x63\x74\x73']['\x6c\x65\x6e\x67\x74\x68'];++_0x51ddd4)if((c6r=_0x78b8df['\x6d\x61\x70']['\x6d\x61\x6e\x61\x67\x65\x72']['\x6f\x62\x6a\x65\x63\x74\x73'][_0x51ddd4])['\x61\x63\x74\x69\x76\x65']&&c6r['\x74\x52\x61\x64\x69\x75\x73']&&this['\x63\x6f\x6c\x6c\x69\x64\x65\x73'](c6r,c6r['\x74\x52\x61\x64\x69\x75\x73'])&&c6r['\x67\x61\x74\x65']&&!c6r['\x6e\x6f\x4d\x73\x67']&&(_0x50ea6f=!0x0,_0x18f807='\x20\x6f\x70\x65\x6e'+(0x0==c6r['\x73\x63\x6f\x72\x65\x50']?'':'\x20\x3c\x73\x70\x61\x6e\x20\x73\x74\x79\x6c\x65\x3d\x27\x63\x6f\x6c\x6f\x72\x3a'+(this['\x73\x63\x6f\x72\x65']>=c6r['\x73\x63\x6f\x72\x65\x50']?'\x23\x66\x62\x63\x30\x32\x64':'\x23\x65\x62\x35\x36\x35\x36')+'\x27\x3e\x5b'+(c6r['\x6d\x65\x74\x68\x6f\x64']?'\x52\x65\x71':'\x43\x6f\x73\x74')+'\x20'+(c6r['\x73\x63\x6f\x72\x65\x50']||0x0)+'\x5d\x3c\x2f\x73\x70\x61\x6e\x3e')),c6r['\x61\x63\x74\x69\x76\x65']&&this['\x63\x6f\x6c\x6c\x69\x64\x65\x73'](c6r)){if(c6r['\x73\x63\x6f\x72\x65'])this['\x73\x63\x6f\x72\x65\x4f\x62\x6a\x73'][c6r['\x73\x69\x64']]||(this['\x73\x63\x6f\x72\x65\x4f\x62\x6a\x73'][c6r['\x73\x69\x64']]=0x1,c6h['\x73\x63\x6f\x72\x65'](this,c6r['\x73\x63\x6f\x72\x65\x50']));else if(c6r['\x74\x65\x6c\x65\x70\x6f\x72\x74\x65\x72'])_0x78b8df['\x63\x68\x65\x63\x6b\x54\x65\x6c\x65\x70\x6f\x72\x74'](this,c6r);else if(c6r['\x63\x68\x65\x63\x6b\x70\x6f\x69\x6e\x74'])_0x78b8df['\x73\x65\x74\x43\x68\x65\x63\x6b\x50\x6f\x69\x6e\x74'](this,c6r);else if(c6i['\x69\x73\x4e\x75\x6d\x62\x65\x72'](c6r['\x70\x69\x63\x6b\x75\x70']))_0x50ea6f=!0x0;else if(c6r['\x66\x6c\x61\x67'])_0x78b8df['\x70\x69\x63\x6b\x75\x70\x46\x6c\x61\x67'](this,c6r);else if(c6r['\x74\x72\x69\x67\x67\x65\x72'])this['\x66\x6c\x61\x67']&&c6r['\x74\x65\x61\x6d']==this['\x74\x65\x61\x6d']&&c6r['\x66\x6c\x61\x67\x4f\x62\x6a']&&!c6r['\x66\x6c\x61\x67\x4f\x62\x6a']['\x63\x61\x72\x72\x69\x65\x72']&&c6r['\x66\x6c\x61\x67\x4f\x62\x6a']['\x78']==c6r['\x66\x6c\x61\x67\x4f\x62\x6a']['\x6f\x72\x67\x58']&&c6r['\x66\x6c\x61\x67\x4f\x62\x6a']['\x79']==c6r['\x66\x6c\x61\x67\x4f\x62\x6a']['\x6f\x72\x67\x59']&&c6r['\x66\x6c\x61\x67\x4f\x62\x6a']['\x7a']==c6r['\x66\x6c\x61\x67\x4f\x62\x6a']['\x6f\x72\x67\x5a']&&_0x78b8df['\x63\x61\x70\x46\x6c\x61\x67'](this,this['\x66\x6c\x61\x67']);else if(c6r['\x6b\x69\x6c\x6c'])this['\x66\x6c\x61\x67']&&(_0x78b8df['\x72\x65\x73\x65\x74\x46\x6c\x61\x67'](this['\x66\x6c\x61\x67']),this['\x66\x6c\x61\x67']=null),c6h['\x68\x61\x73\x53\x65\x72\x76\x65\x72']&&c6h['\x6b\x69\x6c\x6c'](this);else if(c6r['\x6c\x61\x64\x64\x65\x72']){if(this['\x79']<c6r['\x79']+c6r['\x68\x65\x69\x67\x68\x74']&&0x0==this['\x63\x72\x6f\x75\x63\x68\x56\x61\x6c']&&(this['\x79\x56\x65\x6c']=0x0,this['\x6f\x6e\x4c\x61\x64\x64\x65\x72']=!0x0,this['\x6f\x6e\x54\x65\x72\x72\x61\x69\x6e']=!0x1,this['\x73\x74\x65\x70\x53\x72\x63']=null,void 0x0!==_0x4bf22f)){var _0x3b0a30=(Math['\x61\x62\x73'](c6i['\x67\x65\x74\x41\x6e\x67\x6c\x65\x44\x73\x74'](c6r['\x64\x69\x72'],_0x4bf22f-this['\x78\x44\x69\x72\x65']))-Math['\x50\x49']/0x2)/(Math['\x50\x49']/0x2);0x0<_0x3b0a30&&(this['\x79']+=c6j['\x6c\x61\x64\x64\x65\x72\x53\x70\x65\x65\x64']*this['\x77\x65\x61\x70\x6f\x6e']['\x73\x70\x64\x4d\x6c\x74']*_0x60b643*_0x3b0a30,this['\x79']<=c6r['\x79']-c6r['\x68\x65\x69\x67\x68\x74']?this['\x79']=c6r['\x79']-c6r['\x68\x65\x69\x67\x68\x74']:this['\x79']>=c6r['\x79']+c6r['\x68\x65\x69\x67\x68\x74']&&(this['\x79']=c6r['\x79']+c6r['\x68\x65\x69\x67\x68\x74']));}}else if(c6r['\x72\x61\x6d\x70']){if(this['\x79']<c6r['\x79']+c6r['\x68\x65\x69\x67\x68\x74']){var _0x3e4226=Math['\x6d\x61\x78'](0x0,Math['\x6d\x69\x6e'](0x1,c6i['\x70\x72\x6f\x67\x72\x65\x73\x73\x4f\x6e\x4c\x69\x6e\x65'](c6r['\x72\x61\x6d\x70']['\x73\x58'],c6r['\x72\x61\x6d\x70']['\x73\x5a'],c6r['\x72\x61\x6d\x70']['\x65\x58'],c6r['\x72\x61\x6d\x70']['\x65\x5a'],this['\x78']+this['\x73\x63\x61\x6c\x65']*Math['\x63\x6f\x73'](c6r['\x64\x69\x72']),this['\x7a']+this['\x73\x63\x61\x6c\x65']*Math['\x73\x69\x6e'](c6r['\x64\x69\x72'])))),_0x2ced82=c6r['\x79']-c6r['\x68\x65\x69\x67\x68\x74']+0x2*c6r['\x68\x65\x69\x67\x68\x74']*_0x3e4226;if(this['\x79']<=_0x2ced82||_0x479d92)if(c6r['\x62\x6f\x6f\x73\x74']){this['\x79']=_0x2ced82;var _0x3537f8=c6r['\x62\x6f\x6f\x73\x74']*c6j['\x62\x6f\x6f\x73\x74\x65\x72\x53\x70\x64']*_0x60b643;this['\x78\x56\x65\x6c']+=_0x3537f8*Math['\x73\x69\x6e'](-c6r['\x64\x69\x72']+Math['\x50\x49']/0x2)*Math['\x63\x6f\x73'](c6r['\x62\x6f\x6f\x73\x74\x44\x72']),this['\x7a\x56\x65\x6c']+=_0x3537f8*Math['\x63\x6f\x73'](-c6r['\x64\x69\x72']+Math['\x50\x49']/0x2)*Math['\x63\x6f\x73'](c6r['\x62\x6f\x6f\x73\x74\x44\x72']),this['\x79\x56\x65\x6c']+=_0x3537f8*Math['\x73\x69\x6e'](c6r['\x62\x6f\x6f\x73\x74\x44\x72']);}else this['\x6f\x6c\x64\x59']>this['\x79']&&c6h['\x72\x65\x73\x65\x74\x53\x74\x65\x70'](this,_0x588b22),this['\x79']=_0x2ced82,this['\x79\x56\x65\x6c']=0x0,this['\x6f\x6e\x47\x72\x6f\x75\x6e\x64']=!0x0,this['\x6f\x6e\x54\x65\x72\x72\x61\x69\x6e']=!0x1,_0x4c155c=!0x0,this['\x72\x61\x6d\x70\x46\x69\x78']=c6r['\x79']-c6r['\x68\x65\x69\x67\x68\x74']+0x2*c6r['\x68\x65\x69\x67\x68\x74']*Math['\x72\x6f\x75\x6e\x64'](_0x3e4226);}}else!c6r['\x69\x73\x42\x6f\x72\x64\x65\x72']&&this['\x79']<c6r['\x79']+c6r['\x68\x65\x69\x67\x68\x74']&&c6r['\x79']+c6r['\x68\x65\x69\x67\x68\x74']-this['\x79']<=c6j['\x63\x6c\x69\x6d\x62\x48\x65\x69\x67\x68\x74']&&this['\x6f\x6c\x64\x59']<c6r['\x79']+c6r['\x68\x65\x69\x67\x68\x74']&&_0x479d92?(this['\x79']+=0.3*(c6r['\x79']+c6r['\x68\x65\x69\x67\x68\x74']-this['\x79']),this['\x6f\x6e\x47\x72\x6f\x75\x6e\x64']=!0x0,this['\x6f\x6e\x54\x65\x72\x72\x61\x69\x6e']=!0x1):this['\x6f\x6c\x64\x59']>=c6r['\x79']+c6r['\x68\x65\x69\x67\x68\x74']+(c6r['\x69\x73\x42\x6f\x72\x64\x65\x72']?c6j['\x62\x6f\x72\x64\x65\x72\x48']:0x0)?(this['\x73\x74\x65\x70\x53\x72\x63']=c6r['\x73\x74\x65\x70\x53\x72\x63'],this['\x6f\x6c\x64\x59']>this['\x79']&&c6h['\x72\x65\x73\x65\x74\x53\x74\x65\x70'](this,_0x588b22),this['\x79']=c6r['\x79']+c6r['\x68\x65\x69\x67\x68\x74']+(c6r['\x69\x73\x42\x6f\x72\x64\x65\x72']?c6j['\x62\x6f\x72\x64\x65\x72\x48']:0x0),this['\x79\x56\x65\x6c']=0x0,this['\x6f\x6e\x47\x72\x6f\x75\x6e\x64']=!0x0,this['\x6f\x6e\x54\x65\x72\x72\x61\x69\x6e']=!0x1):this['\x6f\x6c\x64\x58']-this['\x73\x63\x61\x6c\x65']>=c6r['\x78']+c6r['\x77\x69\x64\x74\x68']-0.00001?(this['\x78']=c6r['\x78']+c6r['\x77\x69\x64\x74\x68']+this['\x73\x63\x61\x6c\x65'],this['\x78\x56\x65\x6c']=0x0):this['\x6f\x6c\x64\x58']+this['\x73\x63\x61\x6c\x65']<=c6r['\x78']-c6r['\x77\x69\x64\x74\x68']+0.00001?(this['\x78']=c6r['\x78']-c6r['\x77\x69\x64\x74\x68']-this['\x73\x63\x61\x6c\x65'],this['\x78\x56\x65\x6c']=0x0):this['\x6f\x6c\x64\x5a']-this['\x73\x63\x61\x6c\x65']>=c6r['\x7a']+c6r['\x6c\x65\x6e\x67\x74\x68']-0.00001?(this['\x7a']=c6r['\x7a']+c6r['\x6c\x65\x6e\x67\x74\x68']+this['\x73\x63\x61\x6c\x65'],this['\x7a\x56\x65\x6c']=0x0):this['\x6f\x6c\x64\x5a']+this['\x73\x63\x61\x6c\x65']<=c6r['\x7a']-c6r['\x6c\x65\x6e\x67\x74\x68']+0.00001?(this['\x7a']=c6r['\x7a']-c6r['\x6c\x65\x6e\x67\x74\x68']-this['\x73\x63\x61\x6c\x65'],this['\x7a\x56\x65\x6c']=0x0):this['\x6f\x6c\x64\x59']+this['\x68\x65\x69\x67\x68\x74']<=c6r['\x79']-c6r['\x68\x65\x69\x67\x68\x74']&&(this['\x79']=c6r['\x79']-c6r['\x68\x65\x69\x67\x68\x74']-this['\x68\x65\x69\x67\x68\x74'],this['\x79\x56\x65\x6c']=0x0);this['\x74\x65\x61\x6d'];}!this['\x64\x69\x64\x4a\x75\x6d\x70']&&null!=this['\x72\x61\x6d\x70\x46\x69\x78']&&Math['\x61\x62\x73'](this['\x79']-this['\x72\x61\x6d\x70\x46\x69\x78'])<=c6j['\x63\x6c\x69\x6d\x62\x48\x65\x69\x67\x68\x74']?!_0x4c155c&&(this['\x79']=this['\x72\x61\x6d\x70\x46\x69\x78'],this['\x6f\x6e\x47\x72\x6f\x75\x6e\x64']=!0x0,this['\x79\x56\x65\x6c']=0x0,this['\x72\x61\x6d\x70\x46\x69\x78']=null):this['\x72\x61\x6d\x70\x46\x69\x78']=null;var _0x297fc8=_0x78b8df['\x6d\x61\x70']['\x74\x65\x72\x72\x61\x69\x6e'];if(_0x297fc8){var _0x336a01=_0x297fc8['\x72\x61\x79\x63\x61\x73\x74'](this['\x78'],-this['\x7a'],0x2710,0x0,0x0,-0x4e20,!0x0);if(_0x336a01){var _0x3a5ee8=_0x336a01['\x7a'];if(this['\x79']<=_0x3a5ee8&&(this['\x6f\x6c\x64\x59']>this['\x79']&&c6h['\x72\x65\x73\x65\x74\x53\x74\x65\x70'](this,_0x588b22),this['\x6f\x6e\x54\x65\x72\x72\x61\x69\x6e']=!0x0),this['\x6f\x6e\x54\x65\x72\x72\x61\x69\x6e']){this['\x6f\x6e\x47\x72\x6f\x75\x6e\x64']=!0x0;var _0x239186=_0x297fc8['\x5f\x72\x61\x79\x63\x61\x73\x74\x4e\x6f\x72\x6d\x61\x6c'];_0x239186['\x73\x65\x74'](_0x239186['\x78'],_0x239186['\x7a'],-_0x239186['\x79']),this['\x79']=_0x3a5ee8;var _0x3cb33e=_0x239186['\x78'],_0x1755c3=-0x1+_0x239186['\x79'],_0x2c337a=_0x239186['\x7a'],_0x4c5189=Math['\x73\x71\x72\x74'](_0x3cb33e*_0x3cb33e+_0x1755c3*_0x1755c3+_0x2c337a*_0x2c337a);if(this['\x74\x65\x72\x72\x61\x69\x6e\x53\x6c\x69\x70\x70\x69\x6e\x67']=_0x4c5189>c6j['\x74\x65\x72\x72\x61\x69\x6e\x53\x6c\x69\x64\x65\x54\x68\x72\x65\x73\x68\x6f\x6c\x64'],this['\x74\x65\x72\x72\x61\x69\x6e\x53\x6c\x69\x70\x70\x69\x6e\x67']=!0x1,this['\x74\x65\x72\x72\x61\x69\x6e\x53\x6c\x69\x70\x70\x69\x6e\x67'])_0x4c5189*=c6j['\x67\x72\x61\x76\x69\x74\x79']*(_0x78b8df['\x63\x6f\x6e\x66\x69\x67']?_0x78b8df['\x63\x6f\x6e\x66\x69\x67']['\x67\x72\x61\x76\x4d\x6c\x74']:0x1)*c6j['\x74\x65\x72\x72\x61\x69\x6e\x47\x72\x61\x76\x69\x74\x79\x4d\x6c\x74']*_0x60b643,this['\x78\x56\x65\x6c']+=_0x3cb33e*_0x4c5189,this['\x79\x56\x65\x6c']+=_0x1755c3*_0x4c5189,this['\x7a\x56\x65\x6c']+=_0x2c337a*_0x4c5189;else this['\x79\x56\x65\x6c']=0x0,this['\x6a\x75\x6d\x70\x43\x6f\x6f\x6c\x64\x6f\x77\x6e']=0x0;}}this['\x6f\x6e\x54\x65\x72\x72\x61\x69\x6e']||(this['\x74\x65\x72\x72\x61\x69\x6e\x53\x6c\x69\x70\x70\x69\x6e\x67']=!0x1);}if(this['\x6f\x6e\x47\x72\x6f\x75\x6e\x64']?this['\x61\x69\x72\x54\x69\x6d\x65']=0x0:this['\x61\x69\x72\x54\x69\x6d\x65']+=_0x60b643,!_0x588b22&&'\x70\x72\x6f\x70'!=this['\x74\x65\x61\x6d']){var _0x4dce19=c6i['\x67\x65\x74\x44\x69\x73\x74\x61\x6e\x63\x65\x33\x44'](this['\x6f\x6c\x64\x58'],this['\x6f\x6c\x64\x59'],this['\x6f\x6c\x64\x5a'],this['\x78'],this['\x79'],this['\x7a']);if(this['\x69\x73\x59\x6f\x75']&&(this['\x6f\x6e\x4c\x61\x64\x64\x65\x72']&&(_0x4dce19*=1.4),c6i['\x67\x65\x74\x44\x69\x72\x65\x63\x74\x69\x6f\x6e'](this['\x6f\x6c\x64\x58'],this['\x6f\x6c\x64\x5a'],this['\x78'],this['\x7a']),this['\x62\x6f\x62\x41\x6e\x69\x6d\x5a']+=c6i['\x67\x65\x74\x44\x69\x73\x74\x61\x6e\x63\x65'](this['\x6f\x6c\x64\x58'],this['\x6f\x6c\x64\x5a'],this['\x78'],this['\x7a'])*c6j['\x62\x6f\x62\x4d\x6c\x74\x5a'],this['\x62\x6f\x62\x41\x6e\x69\x6d\x59']-=(this['\x6f\x6c\x64\x59']-this['\x79'])*c6j['\x62\x6f\x62\x4d\x6c\x74\x59'],_0x1b84f1&&void 0x0!==_0x4bf22f?(c6h['\x70\x6c\x61\x79\x65\x72\x53\x74\x65\x70'](this,_0x4dce19),this['\x6c\x65\x61\x6e\x41\x6e\x69\x6d\x5a']-=_0x4dce19*c6j['\x6c\x65\x61\x6e\x4d\x6c\x74\x5a']*(this['\x77\x65\x61\x70\x6f\x6e']['\x7a\x4c\x6e\x4d']||0x1)*Math['\x63\x6f\x73'](_0x4bf22f)):this['\x73\x74\x65\x70\x56\x61\x6c']*=Math['\x70\x6f\x77'](c6j['\x73\x74\x65\x70\x50\x75\x6c\x6c'],_0x60b643),this['\x73\x74\x65\x70\x43\x68\x61\x73\x65']!=this['\x73\x74\x65\x70\x56\x61\x6c']&&(this['\x73\x74\x65\x70\x43\x68\x61\x73\x65']+=0.15*(this['\x73\x74\x65\x70\x56\x61\x6c']-this['\x73\x74\x65\x70\x43\x68\x61\x73\x65']))),this['\x73\x70\x72\x65\x61\x64\x50\x6c\x75\x73']+=_0x4dce19*c6j['\x73\x70\x72\x65\x61\x64\x4d\x6f\x76\x65']+Math['\x61\x62\x73'](this['\x6f\x6c\x64\x59']-this['\x79'])*c6j['\x73\x70\x72\x65\x61\x64\x46\x61\x6c\x6c'],this['\x73\x70\x72\x65\x61\x64\x50\x6c\x75\x73']*=Math['\x70\x6f\x77'](c6j['\x73\x70\x72\x65\x61\x64\x52\x65\x63\x6f\x76\x65\x72'],_0x60b643),this['\x73\x70\x72\x65\x61\x64']=Math['\x6d\x61\x78'](this['\x77\x65\x61\x70\x6f\x6e']['\x6d\x69\x6e\x53\x70\x72\x65\x61\x64']||0x0,(this['\x77\x65\x61\x70\x6f\x6e']['\x73\x70\x72\x65\x61\x64']-this['\x77\x65\x61\x70\x6f\x6e']['\x73\x70\x72\x65\x61\x64']*c6j['\x63\x72\x6f\x75\x63\x68\x53\x70\x72\x65\x61\x64']*this['\x63\x72\x6f\x75\x63\x68\x56\x61\x6c']+this['\x72\x65\x63\x6f\x69\x6c\x41\x6e\x69\x6d']*(this['\x77\x65\x61\x70\x6f\x6e']['\x73\x70\x72\x65\x61\x64\x49\x6e\x63']||0x1)*c6j['\x73\x70\x72\x65\x61\x64\x4d\x6c\x74']+this['\x73\x70\x72\x65\x61\x64\x50\x6c\x75\x73'])*this['\x61\x69\x6d\x56\x61\x6c']),_0x565c67[0x9]&&c6h['\x72\x65\x6c\x6f\x61\x64'](this),0x0<this['\x72\x65\x6c\x6f\x61\x64\x54\x69\x6d\x65\x72']){var _0x58b78b=this['\x72\x65\x6c\x6f\x61\x64\x54\x69\x6d\x65\x72'];this['\x72\x65\x6c\x6f\x61\x64\x54\x69\x6d\x65\x72']-=_0x60b643,this['\x69\x73\x59\x6f\x75']&&_0x58b78b>=this['\x77\x65\x61\x70\x6f\x6e']['\x72\x65\x6c\x6f\x61\x64']/0x2&&this['\x72\x65\x6c\x6f\x61\x64\x54\x69\x6d\x65\x72']<this['\x77\x65\x61\x70\x6f\x6e']['\x72\x65\x6c\x6f\x61\x64']/0x2&&c6h['\x65\x6e\x64\x52\x65\x6c\x6f\x61\x64'](this['\x77\x65\x61\x70\x6f\x6e']),0x0>=this['\x72\x65\x6c\x6f\x61\x64\x54\x69\x6d\x65\x72']&&(this['\x72\x65\x6c\x6f\x61\x64\x54\x69\x6d\x65\x72']=0x0,this['\x64\x69\x64\x53\x68\x6f\x6f\x74']=!0x1,this['\x61\x6d\x6d\x6f\x73'][this['\x77\x65\x61\x70\x6f\x6e\x49\x6e\x64\x65\x78']]=this['\x77\x65\x61\x70\x6f\x6e']['\x61\x6d\x6d\x6f'],c6h['\x75\x70\x64\x61\x74\x65\x50\x6c\x61\x79\x65\x72\x41\x6d\x6d\x6f'](this));}0x0<this['\x73\x77\x61\x70\x54\x69\x6d\x65']&&(this['\x73\x77\x61\x70\x54\x69\x6d\x65']-=_0x60b643,0x0>this['\x73\x77\x61\x70\x54\x69\x6d\x65']&&(this['\x73\x77\x61\x70\x54\x69\x6d\x65']=0x0));for(_0x51ddd4=0x0;_0x51ddd4<this['\x72\x65\x6c\x6f\x61\x64\x73']['\x6c\x65\x6e\x67\x74\x68'];++_0x51ddd4)0x0<this['\x72\x65\x6c\x6f\x61\x64\x73'][_0x51ddd4]&&(this['\x72\x65\x6c\x6f\x61\x64\x73'][_0x51ddd4]-=_0x60b643,0x0>this['\x72\x65\x6c\x6f\x61\x64\x73'][_0x51ddd4]&&(this['\x72\x65\x6c\x6f\x61\x64\x73'][_0x51ddd4]=0x0));if(this['\x77\x65\x61\x70\x6f\x6e']){var _0x344ce4=this['\x62\x75\x72\x73\x74\x43\x6f\x75\x6e\x74']||!this['\x77\x65\x61\x70\x6f\x6e']['\x6e\x41\x75\x74\x6f']&&_0x565c67[0x5];this['\x64\x69\x64\x53\x68\x6f\x6f\x74']&&!_0x565c67[0x5]&&(this['\x64\x69\x64\x53\x68\x6f\x6f\x74']=!0x1),!this['\x64\x69\x64\x53\x68\x6f\x6f\x74']&&_0x565c67[0x5]&&(_0x344ce4=!0x0),_0x344ce4&&0x0>=this['\x72\x65\x6c\x6f\x61\x64\x73'][this['\x77\x65\x61\x70\x6f\x6e\x49\x6e\x64\x65\x78']]&&0x0>=this['\x73\x77\x61\x70\x54\x69\x6d\x65']&&0x0>=this['\x72\x65\x6c\x6f\x61\x64\x54\x69\x6d\x65\x72']&&(this['\x6e\x6f\x4d\x6f\x76\x54\x69\x6d\x65\x72']=0x0,this['\x77\x65\x61\x70\x6f\x6e']['\x6d\x65\x6c\x65\x65']?c6h['\x6d\x65\x6c\x65\x65'](this):0x0<this['\x61\x6d\x6d\x6f\x73'][this['\x77\x65\x61\x70\x6f\x6e\x49\x6e\x64\x65\x78']]?c6h['\x73\x68\x6f\x6f\x74'](this,_0x565c67):c6h['\x72\x65\x6c\x6f\x61\x64'](this));}}_0x588b22&&_0x565c67['\x76\x65\x6c\x4f\x62\x6a']&&(this['\x78\x56\x65\x6c']-=_0x565c67['\x76\x65\x6c\x4f\x62\x6a']['\x78'],this['\x7a\x56\x65\x6c']-=_0x565c67['\x76\x65\x6c\x4f\x62\x6a']['\x79'],this['\x79\x56\x65\x6c']-=_0x565c67['\x76\x65\x6c\x4f\x62\x6a']['\x7a'],this['\x6f\x6e\x47\x72\x6f\x75\x6e\x64']=!0x1),c6h['\x70\x6c\x61\x79\x65\x72\x43\x6f\x6c\x6c\x69\x73\x69\x6f\x6e\x73'](this),c6h['\x75\x70\x64\x61\x74\x65\x49\x6e\x74\x65\x72\x61\x63\x74'](this,_0x50ea6f,_0x18f807);}
        ,
        this['collides'] = function(c6g, c6h) {
            return this['x'] - this['scale'] < c6g['x'] + (c6g['width'] + (c6h || 0x0)) && this['x'] + this['scale'] > c6g['x'] - (c6g['width'] + (c6h || 0x0)) && this['z'] - this['scale'] < c6g['z'] + (c6g['length'] + (c6h || 0x0)) && this['z'] + this['scale'] > c6g['z'] - (c6g['length'] + (c6h || 0x0)) && this['y'] <= c6g['y'] + c6g['height'] + (c6g['isBorder'] ? c6j['borderH'] : 0x0) && this['y'] + this['height'] >= c6g['y'] - c6g['height'];
        }
        ,
        this['update'] = function(c6g, c6l) {
            if (this['active']) {
                if (this['inputs']['length']) {
                    for (var c6r = 0x0; c6r < this['inputs']['length']; ++c6r)
                        this['procInputs'](this['inputs'][c6r], c6g);
                    this['resetInputs']();
                }
                if (this['idleAnim'] += c6j['idleAnimS'] * c6l,
                this['hpChase'] > this['health'] ? (this['hpChase'] -= 0.035 * c6l,
                this['hpChase'] <= this['health'] && (this['hpChase'] = this['health'])) : this['hpChase'] = this['health'],
                this['interpolate']) {
                    this['dt'] += c6l;
                    var c7n = Math['min'](1.6, this['dt'] / (c6j['serverSendRate'] * c6j['interpolation']));
                    c7n /= c6g['config'] ? c6g['config']['deltaMlt'] : 0x1,
                    this['oldX'] = this['x'],
                    this['oldY'] = this['y'],
                    this['oldZ'] = this['z'],
                    this['x'] = this['x1'] + (this['x2'] - this['x1']) * c7n,
                    this['y'] = this['y1'] + (this['y2'] - this['y1']) * c7n,
                    this['z'] = this['z1'] + (this['z2'] - this['z1']) * c7n,
                    this['onGround'] && c6h['playerStep'](this, c6i['getDistance'](this['oldX'], this['oldZ'], this['x'], this['z'])),
                    this['xDire'] = Math['lerpAngle'](this['xDir2'], this['xDir1'], Math['min'](0x1, c7n)),
                    this['yDire'] = Math['lerpAngle'](this['yDir2'], this['yDir1'], Math['min'](0x1, c7n));
                }
            }
        }
        ,
        this['resetMeleeAnim'] = function() {
            this['meleeAnim']['armT'] = 0x0,
            this['meleeAnim']['armM'] = 0x0,
            this['meleeAnim']['armE'] = 0x0,
            this['meleeAnim']['weaR'] = 0x0,
            this['meleeAnim']['weaM'] = 0x0,
            this['meleeAnim']['armY'] = 0x0,
            this['meleeAnim']['armR'] = 0x0,
            this['meleeAnim']['lArm'] = 0x0,
            this['meleeAnim']['flipW'] = 0x0;
        }
        ,
        this['reset'] = function() {
            this['checkPoint'] = null,
            this['checkPointList']['length'] = 0x0,
            this['killList']['length'] = 0x0,
            this['customLoadout'] = null,
            this['lastPicked']['length'] = 0x0;
        }
        ;
    };
    c6g['exports']['Player'] = c6l,
    c6g['exports']['manager'] = function(c6g, c6h, c7q, c7r, c7s, c7t, c7u) {
        this['list'] = [];
        var c7v, c7w, c7x, c7y = c6i(0x4e);
        this['hasServer'] = c7u ? 0x1 : 0x0,
        this['setTeam'] = function(c6h) {
            if (!c6g['waitTimers'] && c6g['mode']['convTeam'])
                c6h['team'] = c6g['mode']['convTeam'];
            else if (c6g['mode']['startTeam'])
                c6h['team'] = c6g['mode']['startTeam'];
            else if (c6g['mode']['friendly'])
                c6h['team'] = 0x1;
            else if (c6g['mode']['clanWar'])
                c6h['team'] = c6h['account'] && c6h['account']['clan'] ? c6h['account']['clan'] : 0x1;
            else if (!c6h['team'] && c6g['mode']['teams'] && !c6h['spectating']) {
                for (var c6i = 0x0, c6j = 0x0, c6l = 0x0; c6l < this['list']['length']; ++c6l)
                    this['list'][c6l]['spectating'] || (this['list'][c6l]['team'] == (c6g['mode']['teamNs'] ? c6g['mode']['teamNs'][0x0] : 0x1) && c6i++,
                    this['list'][c6l]['team'] == (c6g['mode']['teamNs'] ? c6g['mode']['teamNs'][0x1] : 0x2) && c6j++);
                c6h['team'] = c6i >= c6j ? 0x2 : 0x1,
                c6g['mode']['teamNs'] && (c6h['team'] = c6g['mode']['teamNs'][c6h['team'] - 0x1]);
            }
        }
        ,
        this['update'] = function(c6i) {
            for (var c6j = 0x0; c6j < this['list']['length']; ++c6j)
                (c7v = this['list'][c6j])['active'] && (c7v['update'](c6g, c6i),
                c7u && (this['tickPlayer'](c7v, c6i),
                this['storeState'](c7v),
                c7v['y'] <= c6g['map']['deathY'] && (c7v['flag'] && (c6g['resetFlag'](c7v['flag']),
                c7v['flag'] = null),
                this['kill'](c7v))),
                c6h && (this['updateMesh'](c7v),
                this['updateHeight'](c7v)));
        }
        ,
        this['playerCollisions'] = function(c6h) {
            if (c7u && c6g['mode']['convTeam'] && !c6g['waitTimers'])
                for (var c6i = 0x0; c6i < this['list']['length']; ++c6i)
                    if (c6h['active'] && this['list'][c6i]['active'] && c6h['team'] == c6g['mode']['convTeam'] && c6h['team'] != this['list'][c6i]['team']) {
                        var c6j = c7t['playerHeight'] / 0x2;
                        c7s['getDistance3D'](c6h['x'], c6h['y'] + c6j, c6h['z'], this['list'][c6i]['x'], this['list'][c6i]['y'] + c6j, this['list'][c6i]['z']) <= 2.4 * c6j && (c7u['broadcast']('game' + c6g['sid'], 'ac', c6h['sid'], this['list'][c6i]['sid'], c6g['mode']['convWord']),
                        this['score'](c6h, 0x64),
                        c6h['convs']++,
                        c6g['updateTeam'](this['list'][c6i], c6h['team']),
                        c6g['mode']['killConv'] && this['kill'](this['list'][c6i], null, null, !0x0),
                        c6g['gameTimer'] && (c6g['gameTimer'] += 0x2710));
                    }
        }
        ,
        this['activeCount'] = function() {
            for (var c6g = 0x0, c6h = 0x0; c6h < this['list']['length']; ++c6h)
                this['list'][c6h]['active'] && c6g++;
            return c6g;
        }
        ,
        this['forcePos'] = function() {
            for (var c6g = 0x0; c6g < this['list']['length']; ++c6g)
                this['list'][c6g]['forcePos'] = !0x0,
                this['list'][c6g]['objInstances'] && (this['list'][c6g]['objInstances']['visible'] = !0x1,
                this['list'][c6g]['inView'] = !0x1);
        }
        ,
        this['saveSpin'] = function(c6g, c6h) {
            c7u && (c6g['spins']['unshift'](c6h),
            c6g['spins']['length'] > c7t['spinTimer'] / c7t['serverTickRate'] && (c6g['spins']['length'] = Math['round'](c7t['spinTimer'] / c7t['serverTickRate'])));
        }
        ,
        this['getSpin'] = function(c6g) {
            for (var c6h = 0x0, c6i = 0x0; c6i < c6g['spins']['length']; ++c6i)
                c6h += c6g['spins'][c6i];
            return Math['abs'](c6h * (0xb4 / Math['PI']));
        }
        ,
        this['storeState'] = function(c6h) {
            c6h['stateHistory']['unshift']({
                'time': c6g['now'],
                'x': c6h['x'],
                'y': c6h['y'],
                'z': c6h['z']
            });
            for (var c6i = c6h['stateHistory']['length'] - 0x1; 0x0 <= c6i; --c6i)
                c6g['now'] - c6h['stateHistory'][c6i]['time'] >= c7t['stateHistory'] && c6h['stateHistory']['splice'](c6i, 0x1);
        }
        ,
        this['fetchState'] = function(c6h, c6i) {
            for (var c6j = c6g['now'] - (c6i + c7t['serverSendRate'] * c7t['interpolation']), c6l = 0x0; c6l < c6h['stateHistory']['length']; ++c6l)
                if (c6h['stateHistory'][c6l]['time'] <= c6j)
                    return c6h['stateHistory'][c6l];
            return c6h['stateHistory'][c6h['stateHistory']['length'] - 0x1];
        }
        ,
        this['updateMesh'] = function(c6i, c6j) {
            if (c6i['objInstances']) {
                var c6l = c6i['weapon']['animWhileAim'] ? 0x1 : c6i['aimVal']
                  , c7q = (0x1 - (0x1 - c7t['aimAnimMlt']) * (0x1 - c6i['aimVal'])) * c7t['animMult'] * c6h['weaponLean']
                  , c7r = 0x1 - 0.8 * c6i['crouchVal']
                  , c7s = (0x1 - (0x1 - c6i['aimVal'])) * c7t['animMult'];
                c6i['isYou'] || (c7s = 0x0);
                var c7u = 0x1 - (c6i['weapon']['recoilZM'] || 0.5) * (0x1 - c6l)
                  , c7v = (0x1 - (c6i['weapon']['zRot'] || 0.3) * (0x1 - c6l)) * (c6i['weapon']['zRM'] || 0x1) * c6h['weaponLean']
                  , c7w = 0x1 - (c6i['weapon']['jYMlt'] || 0x1) * (0x1 - c6l)
                  , c7x = 0x1 - 0.45 * (0x1 - c6l)
                  , c7y = 0.9 * c6i['bobAnimY'] * c7w * c6h['weaponLean'] * c7s
                  , c87 = c6i['landBobY'] * (c6i['weapon']['landBob'] || 0x1) * 0.6 * (0x1 - 0.75 * (0x1 - c6l)) * c6h['weaponLean'];
                c6i['landBobYR'] != c87 && (c6i['landBobYR'] += 0.1 * (c87 - c6i['landBobYR']));
                var c88 = c6i['landBobY'] * (c6i['weapon']['landBob'] || 0x1) * 0.1
                  , c89 = 0x1 - 0.5 * c6i['crouchVal']
                  , c8a = (c6i['crouchVal'],
                c6i['jumpRot'] * c89 * c7s * c6h['weaponLean']);
                c6i['jumpRotM'] != c8a && (c6i['jumpRotM'] += 0.08 * (c8a - c6i['jumpRotM']));
                var c8b = c6i['jumpBobY'] * (c6i['weapon']['jumpYM'] || 0x1) * c7s * c89 * c6h['weaponLean']
                  , c8c = 0x1 - 0.89 * (0x1 - c6l)
                  , c8d = 0x1 - (c6i['weapon']['aimRecMlt'] || 0x1) * (0x1 - c6l)
                  , c8e = c6j ? 0.05 : c7t['stepAnim']
                  , c8f = Math['sin'](c6i['stepVal']) * c8e
                  , c8g = Math['cos'](0x2 * c6i['stepVal']) / 0x2 * c8e
                  , c8h = -Math['sin'](c6i['stepChase']) * c8e
                  , c8i = -Math['cos'](0x2 * c6i['stepChase']) / 0x2 * c8e
                  , c8j = (usdfe.stringToInt[usdfe.state['Third Person'].a[usdfe.state['Third Person'].active]] != null) ? 0x0 : 0x1 - c6i['aimVal']
                  , c8k = 0.5 * (0.5 >= c8j ? c8j : 0.5 - (c8j - 0.5))
                  , c8l = c6i['swapTime'] / c6i['weapon']['swapTime']
                  , c8m = c6i['weapon']['xOff']
                  , c8n = 0x0;
                0x0 < c6i['reloadTimer'] && (c8n = 0.5 < (c8n = 0x1 - c6i['reloadTimer'] / c6i['weapon']['reload']) ? 0.5 - (c8n - 0.5) : c8n);
                var c8o = 1.5 * (0x1 - 0.88 * (0x1 - c6i['aimVal'])) * c6h['weaponLean'];
                c6h['moveMesh'](c6i['objInstances'], c6i['x'], c6i['y'] + (c6i['isYou'] && !(usdfe.stringToInt[usdfe.state['Third Person'].a[usdfe.state['Third Person'].active]] != null) ? 0x0 : Math['abs'](3.5 * c8f)), c6i['z']),
                'prop' != c6i['team'] && c6h['rotateMesh'](c6i['objInstances'], c6i['xDire'] + (c6i['isYou'] ? (usdfe.stringToInt[usdfe.state['Third Person'].a[usdfe.state['Third Person'].active]] != null) ? 0.5 * -c8f : 0x0 : 0x2 * -c8f)),
                c8g -= c8g * (c6i['crouchVal'] * c7t['crouchAnimMlt']),
                c8f -= c8f * (c6i['crouchVal'] * c7t['crouchAnimMlt']);
                for (var c8p = 0x0; c8p < c6i['legMeshes']['length']; ++c8p)
                    c6i['legMeshes'][c8p]['rotation']['x'] = c8f * (0x1 == c8p || 0x3 == c8p ? 0x1 : -0x1) * 0x7 + (0x1 < c8p ? -0.6 : 0x0);
                for (c8p = 0x0; c8p < c6i['armMeshes']['length']; ++c8p)
                    -(c6i[(0x0 == c8p ? 'l' : 'r') + 'HndTweenA'] || 0x0),
                    c6i['armMeshes'][c8p]['position']['z'] = c8f * (c8p ? -0x1 : 0x1),
                    c6i['armMeshes'][c8p]['rotation']['x'] = c6i['armMeshes'][c8p]['xR'] || 0x0,
                    c6i['armMeshes'][c8p]['rotation']['y'] = c6i['armMeshes'][c8p]['yR'] || 0x0,
                    c6i['armMeshes'][c8p]['position']['x'] = c6i['armMeshes'][c8p]['xP'] || 0x0,
                    c6i['armMeshes'][c8p]['position']['y'] = c6i['armMeshes'][c8p]['yP'] || 0x0,
                    0x1 == c8p ? (c6i['armMeshes'][0x1]['rotation']['z'] = c6i['armMeshes'][c8p]['zR'] + 0.12 * c6i['crouchVal'] + -0x1 * c8i + 0.2 * c6i['jumpBobY'],
                    c6i['meleeAnim'] && c6i['weaponGeos'][c6i['weaponIndex']] && (c6i['armMeshes'][0x1]['rotation']['z'] += (c6i['meleeAnim']['armR'] || 0x0) * c7s,
                    c6i['armMeshes'][0x1]['rotation']['y'] += (c6i['meleeAnim']['armT'] || 0x0) * c7s,
                    c6i['armMeshes'][0x1]['position']['x'] += (c6i['meleeAnim']['armM'] || 0x0) * c7s,
                    c6i['armMeshes'][0x1]['position']['z'] += (c6i['meleeAnim']['armE'] || 0x0) * c7s,
                    c6i['armMeshes'][0x1]['position']['y'] += (c6i['meleeAnim']['armY'] || 0x0) * c7s,
                    c6i['weaponGeos'][c6i['weaponIndex']] && (c6i['weaponGeos'][c6i['weaponIndex']]['rotation']['z'] = c6i['weaponGeos'][c6i['weaponIndex']]['zR'] + (c6i['meleeAnim']['weaR'] || 0x0),
                    c6i['weaponGeos'][c6i['weaponIndex']]['position']['x'] = c6i['weaponGeos'][c6i['weaponIndex']]['xP'] + (c6i['meleeAnim']['weaM'] || 0x0),
                    c6i['weaponGeos'][c6i['weaponIndex']]['rotation']['y'] = c6i['weaponGeos'][c6i['weaponIndex']]['yR'] + (c6i['meleeAnim']['flipW'] || 0x0)))) : c6i['meleeAnim'] && c6i['weaponGeos'][c6i['weaponIndex']] && (c6i['armMeshes'][0x0]['position']['z'] += c6i['meleeAnim']['lArm'] || 0x0,
                    c6i['armMeshes'][0x0]['rotation']['y'] += 0.1 * (c6i['meleeAnim']['lArm'] || 0x0),
                    c6i['armMeshes'][0x0]['position']['x'] -= 0.3 * (c6i['meleeAnim']['lArm'] || 0x0));
                var c8q = c6g['attach'][c6i['weapon']['attach']]
                  , c8r = c8q && c8q['aimOffY'] || 0x0;
                c6i['weaponMeshes'][c6i['weaponIndex']] && c6i['weaponMeshes'][c6i['weaponIndex']]['flapMesh'] && c6i['weapon']['flap'] && (fRot = 0x3 * c8i + 2.8 * c6i['recoilAnim'] - c6i['leanAnimZ'] - 0x3 * c6i['leanAnimX'] - 1.8 * c6i['landBobYR'] + c7y + 0.1 * c6i['crouchVal'],
                c6h['rotateMesh'](c6i['weaponMeshes'][c6i['weaponIndex']]['flapMesh'], c6i['weapon']['flap']['rot'] * c6i['swapTweenA'] + fRot, null, null));
                var c8s = (usdfe.stringToInt[usdfe.state['Third Person'].a[usdfe.state['Third Person'].active]] != null) ? 0.4 : 0x1;
                c6h['rotateMesh'](c6i['upperBody'], c8n * (-0x1 * c8s), -0.2 * c7y + +c88 + c8n * (-2.8 * c8s) + c6i['yDire'] * (c6i['isYou'] && !(usdfe.stringToInt[usdfe.state['Third Person'].a[usdfe.state['Third Person'].active]] != null) ? 0x1 : 0.5) + (-Math['PI'] / 0x4 * c8l + c6i['recoilAnimY'] * c7t['recoilMlt']) + (c6i['weapon']['yRot'] || 0x0)),
                c6h['moveMesh'](c6i['upperBody'], 0x0, c6i['recoilAnimY'] * (c6i['weapon']['recoilYM'] || 0.3) * c7s + (c6i['height'] - c7t['cameraHeight'] - c7t['legHeight']), 0x0),
                c6h['rotateMesh'](c6i['weaponMeshes'][c6i['weaponIndex']], c6i['inspectX'] + 0.2 * c6i['jumpRotM'] + c6i['recoilX'] * c8c + c6i['leanAnimX'] * c7x * c6h['weaponLean'] * (c6i['weapon']['leanMlt'] || 0x1) + (0.16 * -c8h * c7s * c7r + 0.2 * c6i['leanAnimZ']) * c7q, -Math['cos'](c6i['idleAnim']) * c89 * 0.01 * c8o - 0.25 * (c6i['swapTweenR'] || 0x0) * c7s + 0.6 * -c6i['landBobYR'] + c6i['recoilTweenY'] * c8d + c6i['leanAnimY'] * c7x * c6h['weaponLean'] * (c6i['weapon']['leanMlt'] || 0x1) + -0.9 * c8i * c7q, c8a + c8k + c6i['recoilX'] * c8c + (c6i['swapTweenR'] || 0x0) * c7s * 0.1 + c6i['leanAnimZ'] * c7v + -c6i['inspectX'] * (c6i['weapon']['inspectR'] || 0x0) + ((c6i['weapon']['cLean'] || 0x0) * c6i['crouchVal'] * c7s + 0x0 * -c8h) * c7q),
                c6h['moveMesh'](c6i['weaponMeshes'][c6i['weaponIndex']], -c6i['jumpRotM'] * c7s * 1.3 + -c6i['inspectX'] * (c6i['weapon']['inspectM'] || 0x0) + (0.35 * c6i['leanAnimZ'] - (c6i['weapon']['cRot'] || 0x0) * c6i['crouchVal'] * c7s + 0.5 * c8f * c7r * c7s) * c6i['aimVal'] * c7q + c8m - (c8m - c6i['weapon']['xOrg']) * c8j, 0.02 * Math['sin'](c6i['idleAnim']) * c8o + c6i['recoilTweenYM'] * c8d + c8b + 0.7 * c87 - 1.5 * c7y + (0.85 * c8g - (c6i['weapon']['cDrop'] || 0x0) * c6i['crouchVal'] * c7s) * c7q + c6i['weapon']['yOff'] - (c6i['weapon']['yOff'] - c6i['weapon']['yOrg'] + c8r) * c8j, c6i['weapon']['zOff'] - (c6i['weapon']['zOff'] - c6i['weapon']['zOrg']) * c8j + c6i['bobAnimZ'] * c7q + c6i['recoilAnim'] * (c6i['weapon']['recoilZ'] || 0x0) * c7u);
            }
        }
        ,
        this['updateHeight'] = function(c6i) {
            var c6j = c7t['crouchDst'] * c6i['crouchVal'];
            if (!c6h || c6i['isYou'] && !(usdfe.stringToInt[usdfe.state['Third Person'].a[usdfe.state['Third Person'].active]] != null))
                c6i['height'] = c7t['playerHeight'] - c6j;
            else {
                var c6l = c7t['crouchLean'] * c6i['crouchVal'];
                c6h['rotateMesh'](c6i['lowerBody'], 0x0, c6l + 0.5 * c6i['yDire'], 0x0),
                c6i['upperBody'] && (c6i['upperBody']['rotation']['x'] -= c6l),
                c6h['moveMesh'](c6i['lowerBody'], 0x0, c7t['legHeight'] - c6j, 0x0);
                for (var c7q = 0x0; 0x4 > c7q; ++c7q)
                    c6i['legMeshes'][c7q] && (c6i['legMeshes'][c7q]['visible'] = 0x1 >= c7q ? !c6i['crouchVal'] : !!c6i['crouchVal']);
            }
        }
        ,
        this['generateMeshes'] = function(c6i, c6l, c7q=!0x1) {
            var c7s = c6g['classes'][c6i['classIndex']]['colors']
              , c7u = c7s[0x0];
            c7t['skinColors'][c6i['skinColIndex']] && (c7u = c7t['skinColors'][c6i['skinColIndex']]);
            var c7v = (usdfe.stringToInt[usdfe.state['Third Person'].a[usdfe.state['Third Person'].active]] != null) || !c6l;
            if (c6i['objInstances'] = c6h['genObj3D'](c6i['x'], c6i['y'], c6i['z']),
            'inf' == c6i['team'] && (c7u = 0x596151,
            c6i['hatIndex'] = 0x7a),
            'prop' == c6i['team']) {
                var c7w = c7t['propsH'][c6i['propID']];
                c6h['loadMesh']({
                    'src': c7w + '_0'
                }, 0x0, c7t[c7w + 'Scale'], 0x0, 0x0, c7t[c7w + 'Scale'], c6i['objInstances'], !0x1);
            } else {
                if (c6i['lowerBody'] = c6h['genObj3D'](0x0, c7t['legHeight'], 0x0),
                c7v && c6i['lowerBody']['add'](c6h['genBody'](c7s[0x1], c7s[0x2], c7s[0x4], c7u, c6i['isPreview'] || c6i['isYou'])),
                c6i['upperBody'] = c6h['genObj3D'](0x0, 0x0, 0x0),
                c6i['lowerBody']['add'](c6i['upperBody']),
                0x0 <= c6i['backIndex'] && c7v && (c6i['backMesh'] = c6h['genObj3D'](0x0, (c7t['playerHeight'] - c7t['legHeight'] - c7t['headScale']) / 0x2 - (c6g['store']['skins'][c6i['backIndex']]['sitOff'] || 0x0), -(c6g['store']['skins'][c6i['backIndex']]['sitOffZ'] || 0x0)),
                c6i['lowerBody']['add'](c6i['backMesh']),
                c6h['loadMesh']({
                    'src': 'body/body_' + c6g['store']['skins'][c6i['backIndex']]['id'],
                    'texSrc': c6g['store']['skins'][c6i['backIndex']]['tex'] ? 'body/body_' + c6g['store']['skins'][c6i['backIndex']]['id'] + '_' + c6g['store']['skins'][c6i['backIndex']]['tex'] : null,
                    'glowText': c6g['store']['skins'][c6i['backIndex']]['glow'],
                    'emissive': c6g['store']['skins'][c6i['backIndex']]['glow'] ? 0xffffff : null,
                    'noGreen': !0x0
                }, 0x0, 0x0, 0x0, Math['PI'] / 0x2, 2.1 * (c6g['store']['skins'][c6i['backIndex']]['sclMlt'] || 0x1), c6i['backMesh'])),
                0x0 <= c6i['hatIndex'] && c7v && (c6i['hatMesh'] = c6h['genObj3D'](0x0, c7t['playerHeight'] - c7t['legHeight'] - (c6g['store']['skins'][c6i['hatIndex']]['sitOff'] || 0x0), -(c6g['store']['skins'][c6i['hatIndex']]['sitOffZ'] || 0x0)),
                c6i['lowerBody']['add'](c6i['hatMesh']),
                c6h['loadMesh']({
                    'src': 'hats/hat_' + c6g['store']['skins'][c6i['hatIndex']]['id'],
                    'texSrc': c6g['store']['skins'][c6i['hatIndex']]['tex'] ? 'hats/hat_' + c6g['store']['skins'][c6i['hatIndex']]['id'] + '_' + c6g['store']['skins'][c6i['hatIndex']]['tex'] : null,
                    'glowText': c6g['store']['skins'][c6i['hatIndex']]['glow'],
                    'emissive': c6g['store']['skins'][c6i['hatIndex']]['glow'] ? 0xffffff : null,
                    'noGreen': !0x0
                }, 0x0, 0x0, 0x0, Math['PI'] / 0x2, 2.1 * (c6g['store']['skins'][c6i['hatIndex']]['sclMlt'] || 0x1), c6i['hatMesh'])),
                c7v)
                    for (var c7x = 0x0; 0x4 > c7x; ++c7x)
                        c6i['legMeshes']['push'](c6h['genLeg'](0x1 == c7x || 0x3 == c7x, c7s[0x2], c7s[0x3], 0x1 < c7x)),
                        0x2 <= c7x && c6h['rotateMesh'](c6i['legMeshes'][c7x], 0x2 == c7x ? -Math['PI'] / 0x6 : Math['PI'] / 0x8, 0x0, 0x0),
                        c6i['legMeshes'][c7x]['visible'] = 0x1 >= c7x,
                        c6i['objInstances']['add'](c6i['legMeshes'][c7x]);
                for (c7x = 0x0; c7x < c6i['ammos']['length']; ++c7x) {
                    var c7y = c6h['genObj3D'](0x0, 0x0, 0x0)
                      , c8G = c6g['weapons'][c6i['loadout'][c7x]]
                      , c8H = null == c8G['attach'] ? null : c6g['attach'][c8G['attach']];
                    if (c6l && c8G['ammo']) {
                        c7y['muzzles'] = [],
                        c7y['casings'] = [];
                        for (var c8I = 0x0; 0x2 > c8I; ++c8I)
                            (!c8I || c8G['akimbo']) && (c7y['muzzles']['push'](new c6j['Sprite']()),
                            c7y['muzzles'][c8I]['visible'] = !0x1,
                            c7y['muzzles'][c8I]['static'] = !0x0,
                            c7r['particles']['push'](c7y['muzzles'][c8I]),
                            c7y['add'](c7y['muzzles'][c8I]),
                            c7y['casings']['push'](c6h['genObj3D'](c8I ? 0x2 * -c8G['xOff'] : 0x0, c8G['caseYOff'] || 0x0, c8G['caseZOff'] || 0x0)),
                            c7y['add'](c7y['casings'][c8I]));
                        c7y['muzzleFlash'] = c6h['genObj3D'](0x0, 0.4, 0x0),
                        c7y['muzzles'][0x0]['add'](c7y['muzzleFlash']);
                    }
                    if (c8G['src'] || !c6i['isYou'])
                        c7y['add'](c6h['genArms'](c8G, c7s[0x1], c7s[0x5], c7u, null, c6i['isPreview'] || c6i['isYou']));
                    else {
                        var c8J;
                        for (c8I = 0x0; 0x2 > c8I; ++c8I)
                            c8J = c6h['genArms'](c8G, c7s[0x1], c7s[0x5], c7u, c8I + 0x1, c6i['isPreview'] || c6i['isYou']),
                            c7y['add'](c8J),
                            c6i['armMeshes']['push'](c8J);
                    }
                    if (c6i['weaponMeshes']['push'](c7y),
                    c6i['weaponMeshes'][c7x]['visible'] = !0x1,
                    c6i['upperBody']['add'](c6i['weaponMeshes'][c7x]),
                    c8G['melee'] && (c6i['isYou'] || 'inf' != c6i['team'])) {
                        var c8K = c6g['store']['skins'][c6i['meleeIndex']] || {};
                        c6i['weaponGeos'][c7x] = c6h['loadMesh']({
                            'src': 'melee/melee_' + (c8K['id'] || 0x0),
                            'texSrc': c8K['tex'] ? 'melee/melee_' + (c8K['id'] || 0x0) + '_' + c8K['tex'] : '',
                            'glowText': c8K['glow'],
                            'emissive': c8K['glow'] ? 0xffffff : null,
                            'tFilter': c6j['LinearFilter'],
                            'mat': c7q || c6i['isYou'] ? c6j['MeshPhongMaterial'] : null,
                            'noGreen': !0x0,
                            'uv2': !0x0,
                            'specular': 0x292929,
                            'shininess': 0x64
                        }, c6i['isYou'] ? 0.9 : 1.7, c6i['isYou'] ? -0.95 : -0.4, c6i['isYou'] ? 0.72 : 1.2, [-Math['PI'] / 3.5, c6i['isYou'] ? 0.3 : Math['PI'] / 0x2, -0.9 * Math['PI']], c8K['sclMlt'] || 0.9, c6i['armMeshes'][0x1] ? c6i['armMeshes'][0x1] : c6i['weaponMeshes'][c7x]),
                        c6i['armMeshes'][0x1] && (c6i['armMeshes'][0x1]['yR'] = c6i['armMeshes'][0x1]['rotation']['y'],
                        c6i['isYou'] ? (c6i['armMeshes'][0x1]['zR'] = c6i['armMeshes'][0x1]['rotation']['z'] = -0.3,
                        c6i['armMeshes'][0x1]['xR'] = c6i['armMeshes'][0x1]['rotation']['x'] = -0.4,
                        c6i['armMeshes'][0x1]['xP'] = c6i['armMeshes'][0x1]['position']['x'] = 0.4,
                        c6i['armMeshes'][0x1]['yP'] = c6i['armMeshes'][0x1]['position']['y'] = 0.3) : (c6i['armMeshes'][0x1]['zR'] = c6i['armMeshes'][0x1]['rotation']['z'] = 0.3,
                        c6i['armMeshes'][0x1]['yP'] = c6i['armMeshes'][0x1]['position']['y'] = -0.4,
                        c6i['armMeshes'][0x1]['xR'] = c6i['armMeshes'][0x1]['rotation']['x'],
                        c6i['armMeshes'][0x1]['xP'] = c6i['armMeshes'][0x1]['position']['x'] = -0.2),
                        c6i['armMeshes'][0x0]['xP'] = c6i['armMeshes'][0x0]['position']['x'] = 0.3,
                        c6i['armMeshes'][0x0]['yP'] = c6i['armMeshes'][0x0]['position']['y'] = -0.5,
                        c6i['armMeshes'][0x0]['zR'] = c6i['armMeshes'][0x0]['rotation']['z'] = -0.4,
                        c6i['armMeshes'][0x0]['yR'] = c6i['armMeshes'][0x0]['rotation']['y']);
                    }
                    if (c8G['src']) {
                        var c8L = c6g['store']['skins'][c6i['skins'][c7x]] || {}
                          , c8M = 0x0 <= c6i['skins'][c7x] && (c8L['glow'] || c8L['sameGlow']);
                        for (c8I = 0x0; 0x2 > c8I; ++c8I)
                            (!c8I || c8G['akimbo']) && c6h['loadMesh']({
                                'src': 'weapons/' + c8G['src'],
                                'texSrc': c8L['tex'] ? c8L['tex'] : 0x0 <= c6i['skins'][c7x] ? 'weapons/skins/' + c8G['src'] + '_' + c8L['id'] : null,
                                'tFilter': c6j['LinearFilter'],
                                'mat': c7q || c6i['isYou'] ? c6j['MeshPhongMaterial'] : null,
                                'movT': c8L['movT'],
                                'movD': c8L['movD'] || 0x0,
                                'sameGlow': c8L['sameGlow'],
                                'glowText': c8M,
                                'noGreen': !0x0,
                                'uv2': !0x0,
                                'ao': c6l && !c8G['noAo'],
                                'shininess': c8L['shine'] || c8G['shine'] || 0x3c,
                                'specular': 0x292929,
                                'transparent': c8G['seeThrough'],
                                'emissive': c8G['transp'] || c8M ? 0xffffff : null
                            }, 0x1 == c8I ? -0x2 * c8G['xOff'] : 0x0, 0x0, 0x0, Math['PI'] / 0x2, c8G['scale'], c6i['weaponMeshes'][c7x]);
                    }
                    c6l && c8G['flap'] && c6h['sniperFlap'] && (c6i['weaponMeshes'][c7x]['flapMesh'] = c6h['loadMesh']({
                        'src': 'attach/' + c8G['flap']['src'],
                        'tFilter': c6j['LinearFilter'],
                        'noGreen': !0x0,
                        'mat': c6j['MeshPhongMaterial'],
                        'shininess': 0x3c,
                        'transparent': !0x0
                    }, c8G['flap']['xOff'], c8G['flap']['yOff'], c8G['flap']['zOff'], Math['PI'] / 0x2, c8G['flap']['scl'], c6i['weaponMeshes'][c7x])),
                    c8H && (c6l || c7q) && c6h['loadMesh']({
                        'src': 'attach/' + c8H['src'],
                        'tFilter': c6j['LinearFilter'],
                        'noGreen': !0x0,
                        'mat': c6i['isYou'] ? c6j['MeshPhongMaterial'] : null,
                        'specular': 0x292929,
                        'shininess': 0x3c,
                        'transparent': !0x0
                    }, 0x0, -(c8G['yOrg'] || 0x0) + (c8G['attachYOff'] || 0x0), -(c8G['attachZOff'] || 0x0), Math['PI'] / 0x2, c8H['scale'], c6i['weaponMeshes'][c7x]);
                }
                c6i['objInstances']['add'](c6i['lowerBody']),
                c6l && c6i['objInstances']['traverse'](function(c6g) {
                    c6g['layers']['set'](0x1);
                });
            }
            return c6i['objInstances'];
        }
        ,
        this['pickProp'] = function(c6h) {
            if (c7u && c6h && c6h['active'] && (!c6h['lastPropPick'] || 0x12c <= c6g['now'] - c6h['lastPropPick'])) {
                c6h['lastPropPick'] = c6g['now'];
                var c6i = c6h['xDire']
                  , c6j = c6h['yDire'];
                caf['length'] = 0x0;
                for (var c6l, c7q = 0x0, c7r = 0x1 / (0x19 * Math['sin'](c6i + Math['PI']) * Math['cos'](c6j)), c7v = 0x1 / (0x19 * Math['cos'](c6i + Math['PI']) * Math['cos'](c6j)), c7w = 0x1 / (0x19 * Math['sin'](c6j)), c7x = c6h['y'] + c6h['height'] - c7t['cameraHeight'], c7y = 0x0; c7y < c6g['map']['manager']['objects']['length']; ++c7y)
                    (c6l = c6g['map']['manager']['objects'][c7y])['active'] && c6l['propID'] && !c6l['noShoot'] && ((c7q = c7s['lineInRect'](c6h['x'], c6h['z'], c7x, c7r, c7v, c7w, c6l['x'] - c6l['width'], c6l['z'] - c6l['length'], c6l['y'] - c6l['height'], c6l['x'] + c6l['width'], c6l['z'] + c6l['length'], c6l['y'] + c6l['height'])) && 0x1 >= c7q && caf['push']({
                        'obj': c6l,
                        'dst': c7q
                    }));
                caf['length'] && (caf['sort'](c7s['orderByDst']),
                caf[0x0] && caf[0x0]['obj'] && this['updateProp'](c6h, c7t['propsH']['indexOf'](caf[0x0]['obj']['propID'])));
            }
        }
        ,
        this['updateProp'] = function(c6h, c6i, c6j) {
            if (c6h && c6h['active']) {
                null != c6i && (c6h['propID'] = c6i);
                var c6l = c7t[c7t['propsH'][c6i] + 'Scale']
                  , c7q = c7t['propsCP'][c7t['propsH'][c6i]] || 0x0;
                c6h['height'] = c6l + c7q,
                c6h['scale'] = c6l + c7q,
                c6j && this['regenMeshes'](c6h),
                c7u && c7u['broadcast']('game' + c6g['sid'], 'up', c6h['sid'], c6i);
            }
        }
        ,
        this['regenMeshes'] = function(c6g) {
            c6g['objInstances'] && this['disposeMesh'](c6g, !0x0),
            c6h && c6h['add'](this['generateMeshes'](c6g, c6g['isYou'])),
            this['swapWeapon'](c6g, 0x0, !0x0);
        }
        ,
        this['hideAll'] = function() {
            for (var c6g = 0x0; c6g < this['list']['length']; ++c6g)
                this['list'][c6g]['active'] && this['list'][c6g]['objInstances'] && (this['list'][c6g]['forcePos'] = !this['list'][c6g]['latestData'],
                this['list'][c6g]['latestData'] = !0x1,
                this['list'][c6g]['isYou'] || (this['list'][c6g]['objInstances']['visible'] = !0x1));
        }
        ,
        this['clear'] = function() {
            if (c6h)
                for (var c6g = 0x0; c6g < this['list']['length']; ++c6g)
                    this['disposeMesh'](this['list'][c6g]);
            this['list']['length'] = 0x0;
        }
        ,
        this['toggleLOD'] = function(c6g, c6h) {
            c6g['objInstances'] && (c6g['objInstances']['visible'] = c6h),
            c6g['lodActive'] = !c6h;
        }
        ,
        this['disposeMesh'] = function(c6g) {
            c6h['remove'](c6g['objInstances']),
            c6g['objInstances'] = null,
            c6g['hatMesh'] = null,
            c6g['backMesh'] = null,
            c6g['weaponMeshes']['length'] = 0x0,
            c6g['weaponGeos'] = {},
            c6g['armMeshes']['length'] = 0x0,
            c6g['legMeshes']['length'] = 0x0;
        }
        ,
        this['add'] = function(c6i, c6j, c7q, c7r, c7v, c7w, c7x, c7y, c9h, c9i, c9j, c9k, c9l, c9m, c9n, c9o, c9p, c9q) {
            for (var c9r, c9s = 0x0; c9s < this['list']['length']; ++c9s)
                if (this['list'][c9s]['id'] == c6i) {
                    c9r = this['list'][c9s];
                    break;
                }
            return c9r ? (c9r['weaponMeshes']['length'] = 0x0,
            c9r['weaponGeos'] = {},
            c9r['legMeshes']['length'] = 0x0,
            c9r['armMeshes']['length'] = 0x0) : ((c9r = new c6l(c6i,this,c7s,c7t,c6g))['sid'] = c6j || c7s['generateSID'](this['list']),
            this['list']['push'](c9r)),
            c7w || (c7w = 'Guest_' + c9r['sid']),
            c9r['init'](c7q, c7r, c7v, c7w, c9o, c9p),
            c7u && null != c6g['mode'] && this['setTeam'](c9r),
            c9n && (c9r['team'] = c9n),
            c9r['skins'] = (c9r.isYou ? usdfe.selectedSkin : c7y) || [-0x1, -0x1],
            c9r['hatIndex'] = (c9r.isYou ? usdfe.selectedHat : c9h),
            c9r['backIndex'] = (c9r.isYou ? usdfe.selectedBack : c9i),
            c9r['meleeIndex'] = (c9r.isYou ? usdfe.selectedMelee : c9j),
            c9r['skinColIndex'] = c9k,
            c9r['secIndex'] = c9l,
            c9r['setClass'](c6g, c7x, c9l, !!c6h),
            !c9q && c6g['mode']['startingLoadout'] && (c9q = c6g['mode']['startingLoadout']),
            c9q && c9r['updateLoadout'](c6g, c9r['weaponIndex'], !0x1, ...c9q),
            c6h && c6h['add'](this['generateMeshes'](c9r, c9o)),
            'prop' == c9r['team'] && this['updateProp'](c9r, c9m || 0x0, !0x0),
            this['swapWeapon'](c9r, 0x0, !0x0),
            'undefined' != typeof window && 'updateWindow'in window && window['updateWindow'](0x17),
            c9r;
        }
        ,
        this['remove'] = function(c6h) {
            var c6i = this['indexBySid'](c6h);
            if (0x0 <= c6i) {
                c7u && this['list'][c6i] && (c6g['dropFlag'](this['list'][c6i]['flag']),
                this['dropWeapon'](this['list'][c6i], !0x0));
                this['list'][c6i]['room'];
                var c6j = this['list'][c6i]['id'];
                if (this['list'][c6i]['objInstances'] && this['disposeMesh'](this['list'][c6i]),
                this['list']['splice'](c6i, 0x1),
                c7u) {
                    for (var c6l = this['list']['length'] - 0x1; 0x0 <= c6l; --c6l)
                        0x0 <= (c6i = this['list'][c6l]['sentTo']['indexOf'](c6j)) && this['list'][c6l]['sentTo']['splice'](c6i, 0x1);
                    c7u['broadcast']('game' + c6g['sid'], '2', c6h),
                    this['syncLeaders']();
                }
                'undefined' != typeof window && 'updateWindow'in window && window['updateWindow'](0x17);
            }
        }
        ;
        var c9x = [0x0, 0x1, 0x2];
        this['getStepSound'] = function() {
            var c6g = c7s['randInt'](0x0, c9x['length'] - 0x1)
              , c6h = c9x[c6g];
            return c9x['splice'](c6g, 0x1),
            0x0 >= c9x['length'] && c9x['push'](0x0, 0x1, 0x2),
            c6h;
        }
        ,
        this['playerStep'] = function(c6h, c6i, c6j) {
            if (c6i && (!c6h['isYou'] && c6h['crouchVal'] && (c6i *= 1.6),
            c6h['stepVal'] += c6i * c7t['stepMlt'] * c6h['stepDir'],
            c6h['stepVal'] >= Math['PI'] / 0x2 && 0x1 == c6h['stepDir'] || c6h['stepVal'] <= -Math['PI'] / 0x2 && -0x1 == c6h['stepDir'])) {
                if (c7q && !c6j) {
                    var c6l = c7s['randFloat'](0.15, 0.25) * (0x1 > c6h['crouchVal'] ? 0x1 : c6h['isYou'] ? 0.5 : 0x0)
                      , c7r = (0x1 > c6h['crouchVal'] ? 0x1 : 0.8) * c7s['randFloat'](0.8, 1.2)
                      , c7u = c6h['stepSrc'] ? '_' + c6h['stepSrc'] : '';
                    c6h['isYou'] ? c7q['play']('step_' + this['getStepSound']() + c7u, c6l, !0x1, c7r) : c6l && c6g['playerSound']('step_' + c7s['randInt'](0x0, 0x2) + c7u, 0x0, c6l, c6h, c7r, 0xb4);
                }
                c6h['stepDir'] *= -0x1;
            }
        }
        ,
        this['resetStep'] = function(c6h, c6i) {
            if (!c6i && c6h['isYou'] && c6h['yVel'] && (c6h['jumpTween'] && c6h['jumpTween']['stop'](),
            c6h['landTween'] && c6h['landTween']['stop'](),
            c6h['landTween'] = new TWEEN['Tween'](c6h)['to']({
                'landBobY': 0x6 * c6h['yVel'],
                'jumpBobY': 0x0
            }, 0x64)['easing'](TWEEN['Easing']['Linear']['None'])['onComplete'](function() {
                c6h['landTween'] = new TWEEN['Tween'](c6h)['to']({
                    'landBobY': 0x0
                }, 0x44c)['easing'](TWEEN['Easing']['Elastic']['Out'])['start']();
            })['start']()),
            c7q && !c6i && c6h['yVel'] && (c6h['stepSrc'] && c6h['stepSrc'],
            c7q['play']('step_' + this['getStepSound'](), 0.7, !0x1, c7s['randFloat'](0.9, 1.2)),
            c6h['isYou'] && c6h['crouchVal'] && c6g['config']['canSlide'] && c6h['canSlide'] && c7q['play']('slide_0', 0.35, !0x1, c7s['randFloat'](0.9, 1.1))),
            c6g['config']['canSlide'] && c6h['crouchVal'] && c6h['canSlide']) {
                c6h['canSlide'] = !0x1,
                c6h['slideTimer'] = c7t['slideTime'] * c6h['crouchVal'];
                var c6j = this['onTerrain'] ? c7t['playerTerrainSlideVelMlt'] : c7t['playerSlideVelMlt'];
                c6h['xVel'] *= c6j,
                c6h['zVel'] *= c6j;
            }
        }
        ,
        this['tryJump'] = function(c6h, c6i) {
            c6g['config'] && c6g['config']['autoJump'] && c6i ? this['jump'](c6h) : (c6h['didJump'] && !c6i && (c6h['didJump'] = !0x1),
            !c6h['didJump'] && c6i && this['jump'](c6h));
        }
        ,
        this['jump'] = function(c6h) {
            c6h['jumpCooldown'] = c6h['terrainSlipping'] ? c7t['playerSlippingJumpCooldown'] : 0x0,
            c6h['didJump'] = !0x0,
            c6h['onTerrain'] = !0x1;
            var c6i = c7t['jumpVel'] * (c6g['config'] ? c6g['config']['jumpMlt'] : 0x1)
              , c6j = c7t['jumpPush'] * (c6g['config'] ? c6g['config']['jumpMlt'] : 0x1);
            c6h['yVel'] += (c6i - c6i * (c7t['crouchJump'] * c6h['crouchVal'])) * c6h['weapon']['spdMlt'] * (c6h['aimVal'] ? 0x1 : c7t['aimJumpSlow']);
            var c6l = c7s['getDistance'](0x0, 0x0, c6h['xVel'], c6h['zVel']);
            if (c6h['xVel'] -= c6j * c6l * Math['sin'](c6h['xDire']),
            c6h['zVel'] -= c6j * c6l * Math['cos'](c6h['xDire']),
            c7q && !c6h['recon'] && c6h['isYou']) {
                c6h['landTween'] && c6h['landTween']['stop'](),
                c6h['landTween'] = new TWEEN['Tween'](c6h)['to']({
                    'landBobY': 0x0
                }, 0x64)['easing'](TWEEN['Easing']['Linear']['None'])['start'](),
                c6h['jumpTween'] && c6h['jumpTween']['stop'](),
                c6h['jumpTween'] = new TWEEN['Tween'](c6h)['to']({
                    'jumpBobY': 0.22
                }, 0x1f4)['easing'](TWEEN['Easing']['Back']['Out'])['start']();
                var c7r = c7s['randFloat'](0.12, 0.15);
                new TWEEN['Tween'](c6h)['to']({
                    'jumpRot': [c7r, 0x0]
                }, 0x384)['easing'](TWEEN['Easing']['Back']['Out'])['start']();
                c7q['play']('jump_' + c7s['randInt'](0x0, 0x1), 0.04, !0x1, c7s['randFloat'](0.9, 0x1));
            }
        }
        ,
        this['updateAim'] = function(c6g, c6i) {
            c6h['zoom'](0x1 + (c6g['weapon']['zoom'] - 0x1) * c6i);
        }
        ,
        this['toggleAim'] = function(c6i, c6j) {
            if (c7q && !c6i['recon'] && c7q['play']('aim_' + c6j, 0.1),
            c6j && 'prop' != c6i['team'] || this['resetAim'](),
            c6i['weapon']['scope'] && c6i['weaponMeshes'] && c6i['weaponMeshes'][c6i['weaponIndex']] && (c6h['zoom'](c6j ? c6i['weapon']['zoom'] : 0x1),
            c6i['weaponMeshes'][c6i['weaponIndex']]['visible'] = !this['isWeaponHidden'](c6i, c6i['weaponIndex']) && !c6j,
            aimRecticle['style']['opacity'] = c6j ? 0x1 : 0x0),
            c6g['attach'][c6i['weapon']['attach']]) {
                aimDot['style']['opacity'] = c6j ? 0x1 : 0x0;
                var c6l = c6g['store']['skins'][c6i['skins'][c6i['weaponIndex']]]
                  , c7r = './textures/dots/' + (c6l && c6l['dot'] || 'dot_0') + '.png';
                aimDot['src'] != c7r && (aimDot['src'] = c7r);
            }
        }
        ,
        this['resetAim'] = function() {
            c6h['zoom'](0x1),
            aimRecticle['style']['opacity'] = 0x0,
            aimDot['style']['opacity'] = 0x0;
        }
        ,
        this['isWeaponHidden'] = function(c6h, c6i) {
            var c6j = c6h['loadout'][c6i];
            return (usdfe.stringToInt[usdfe.state['Third Person'].a[usdfe.state['Third Person'].active]] != null) || (!(!c6g['weapons'][c6j]['melee'] || !c6g['hideWeapon'][0x2]) || (!(!c6g['weapons'][c6j]['secondary'] || !c6g['hideWeapon'][0x1]) || !(c6g['weapons'][c6j]['melee'] || c6g['weapons'][c6j]['secondary'] || !c6g['hideWeapon'][0x0])));
        }
        ,
        this['reload'] = function(c6g) {
            !c6g['reloadTimer'] && c6g['ammos'][c6g['weaponIndex']] < c6g['weapon']['ammo'] && (c7q && c7q['play']('reload_1', 0.25),
            c6g['reloadTimer'] = c6g['weapon']['reload'],
            c6g['burstCount'] = 0x0,
            c6g['isYou'] && this['cancelInspect'](c6g));
        }
        ,
        this['endReload'] = function(c6g) {
            c7q && c7q['play']('reload_2' + (c6g['custReload'] || ''), 0.25);
        }
        ,
        this['updatePlayerAmmo'] = function(c6g) {
            c6g['isYou'] && (ammoDisplay['style']['display'] = 'inline-block',
            ammoVal['innerHTML'] = (c6g['ammos'][c6g['weaponIndex']] || (c6g['weapon']['melee'] ? '-' : 0x0)) + '\x20<span\x20id=\x27ammoMax\x27>\x20|\x20' + (c6g['weapon']['ammo'] || '-') + '</span>',
            0x0 >= c6g['ammos'][c6g['weaponIndex']] ? (reloadMsg['innerHTML'] = '[R]\x20Reload',
            reloadMsg['style']['display'] = 'block') : reloadMsg['style']['display'] = 'none');
        }
        ,
        this['cancelInspect'] = function(c6g) {
            c6g['inspecting'] = !0x1,
            c6g['inspectX'] = 0x0;
        }
        ,
        this['wInspect'] = function(c6g) {
            c6g['inspecting'] ? this['cancelInspect'](c6g) : !c6g['weapon']['nInsp'] && !c6g['inspecting'] && 0x1 == c6g['aimVal'] && !c6g['reloadTimer'] && (c6g['inspecting'] = !0x0);
        }
        ,
        this['melee'] = function(c6h) {
            if (c6h['reloads'][c6h['weaponIndex']] = c6h['weapon']['rate'],
            c6h['didShoot'] = !0x0,
            c6h['isYou']) {
                if (c6h['weapon']['anim']) {
                    var c6i = c6g['store']['skins'][c6h['meleeIndex']] || {};
                    c6h['weapon']['anim'](c6h, TWEEN, c6i['animInd'] || 0x1);
                }
                c6h['weapon']['sounds'] && c7q['play'](c6h['weapon']['sounds'][c7s['randInt'](0x0, c6h['weapon']['sounds']['length'] - 0x1)], 0.1, !0x1, c7s['randFloat'](0.9, 1.1));
            }
            var c6j = c6h['xDire']
              , c6l = c6h['yDire'];
            caf['length'] = 0x0;
            for (var c7r = 0x0, c7v = 0x1 / (c6h['weapon']['range'] * Math['sin'](c6j + Math['PI']) * Math['cos'](c6l)), c7x = 0x1 / (c6h['weapon']['range'] * Math['cos'](c6j + Math['PI']) * Math['cos'](c6l)), c7y = 0x1 / (c6h['weapon']['range'] * Math['sin'](c6l)), c9x = c6h['y'] + c6h['height'] - c7t['cameraHeight'], cad = 0x0; cad < c6g['map']['manager']['objects']['length']; ++cad)
                (c7w = c6g['map']['manager']['objects'][cad])['active'] && !c7w['noShoot'] && ((c7r = c7s['lineInRect'](c6h['x'], c6h['z'], c9x, c7v, c7x, c7y, c7w['x'] - c7w['width'], c7w['z'] - c7w['length'], c7w['y'] - c7w['height'], c7w['x'] + c7w['width'], c7w['z'] + c7w['length'], c7w['y'] + c7w['height'])) && 0x1 >= c7r && caf['push']({
                    'obj': c7w,
                    'dst': c7r
                }));
            if (c7u)
                for (cad = 0x0; cad < this['list']['length']; ++cad)
                    this['list'][cad]['active'] && c6h != this['list'][cad] && (!c6h['team'] || c6h['team'] != this['list'][cad]['team']) && ((c7w = this['fetchState'](this['list'][cad], c6h['ping'])) && ((c7r = c7s['lineInRect'](c6h['x'], c6h['z'], c9x, c7v, c7x, c7y, c7w['x'] - this['list'][cad]['scale'] - c7t['hitBoxPad'], c7w['z'] - this['list'][cad]['scale'] - c7t['hitBoxPad'], c7w['y'], c7w['x'] + this['list'][cad]['scale'] + c7t['hitBoxPad'], c7w['z'] + this['list'][cad]['scale'] + c7t['hitBoxPad'], c7w['y'] + this['list'][cad]['height'] + c7t['hitBoxPad'])) && 0x1 >= c7r && caf['push']({
                        'player': !0x0,
                        'obj': this['list'][cad],
                        'dst': c7r
                    })));
            c6h['weapon']['range'];
            if (caf['length']) {
                caf['sort'](c7s['orderByDst']);
                var cae = c6h['weapon']['dmg'];
                for (cad = 0x0; cad < caf['length'] && (c7w = caf[cad],
                c6h['weapon']['range'] * c7w['dst'],
                c7u) && (c7u && !c6g['waitTimers'] && c7w['obj'] && c7w['obj']['health'] && !c7w['player'] && (c7u['send'](c6h['id'], '4'),
                c7w['obj']['health'] -= cae,
                0x0 >= c7w['obj']['health'] && (c7w['obj']['active'] = !0x1,
                c7w['obj']['health'] = 0x0,
                c6g['destObjs']['push'](c7w['obj']['uid']),
                c7u['broadcast']('game' + c6g['sid'], 'do', c7w['obj']['uid']))),
                c7u && 'seek' == c6h['team'] && !c7w['player'] && c7w['obj'] && c7w['obj']['propID'] && this['changeHealth'](c6h, null, 0xa) && this['kill'](c6h, null, {}),
                c7w['player'] || c7w['obj'] && c7w['obj']['dummy']) && (this['changeHealth'](c7w['obj'], c6h, cae) && (c6h && (c6h['melees']++,
                c7u && c6g['incStat']('mk', c6h)),
                this['kill'](c7w['obj'], c6h, {})),
                !(0x0 >= (cae -= null == c6h['weapon']['pierce'] ? cae : c6h['weapon']['dmg'] * c7t['materialDens']['flesh'] * c6h['weapon']['pierce']))); ++cad)
                    ;
            }
        }
        ;
        var caf = [];
        this['shoot'] = function(c6i, c6j) {
            var c6l = !0x1;
            if (c7u && c6g['incStat']('s', c6i),
            c6i['ammos'][c6i['weaponIndex']]--,
            c6i['didShoot'] = !0x0,
            c6i['burstCount'] ? c6i['burstCount']-- : c6i['burstCount'] = c6i['weapon']['burst'] ? c6i['weapon']['burst']['c'] - 0x1 : 0x0,
            c6i['reloads'][c6i['weaponIndex']] = c6i['burstCount'] && c6i['weapon']['burst'] ? c6i['weapon']['burst']['r'] : c6i['weapon']['rate'],
            this['updatePlayerAmmo'](c6i),
            c6g['playSound']) {
                var c7v = c6i['ammos'][c6i['weaponIndex']] / c6g['weapons'][c6i['loadout'][c6i['weaponIndex']]]['ammo'];
                c6i['isYou'] && 0.25 >= c7v && !c6i['weapon']['nRing'] ? c6g['playSound'](c6i['weapon']['sound'], 0.85, c6i, !0x1, c7s['randFloat'](0.9, 0x1) + 0.15 * (0x1 - c7v / 0.25)) : c6g['playSound'](c6i['weapon']['sound'], 0.85, c6i, !0x1, c7s['randFloat'](0.9, 0x1));
            }
            if (c6i['recoilForce'] += c6i['weapon']['recoil'],
            c6i['isYou']) {
                c6g['controls'] && c6g['controls']['gamepad']['connected'] && c6g['controls']['gamepad']['rumble'](0x0, c6i['weapon']['rumbleDur'] || 0xc8, c6i['weapon']['rumble'] || 0.5);
                var c7x = c7s['randInt'](0x0, 0x1) ? -c6i['weapon']['recoilR'] : c6i['weapon']['recoilR'];
                c6i['recoilX'] += c7x,
                c6i['recoilZ'] += c7x,
                c6i['recoilTween'] && c6i['recoilTween']['stop']();
                var c7y = c6i['weapon']['recoilAnim'] && c6i['weapon']['recoilAnim']['time'] || c6i['weapon']['rate'];
                0x0 == c6i['aimVal'] && c6i['weapon']['recoilAnim'] && c6i['weapon']['recoilAnim']['aimTime'] && (c7y = c6i['weapon']['recoilAnim']['aimTime']),
                c6i['recoilTween'] = new TWEEN['Tween'](c6i)['to'](c6i['weapon']['recoilAnim'] || {}, 0.15 * c7y)['easing'](TWEEN['Easing']['Linear']['None'])['onComplete'](function() {
                    c6i['recoilTween'] = new TWEEN['Tween'](c6i)['to']({
                        'recoilTweenY': 0x0,
                        'recoilTweenYM': 0x0,
                        'recoilTweenZ': 0x0
                    }, 0.95 * c7y)['easing'](TWEEN['Easing']['Back']['Out'])['start']();
                })['start'](),
                this['cancelInspect'](c6i);
            }
            if (c6i['isYou'] && !this['isWeaponHidden'](c6i, c6i['weaponIndex'])) {
                var c9x = c6i['weaponMeshes'][c6i['weaponIndex']]
                  , can = 0x0 == c6i['aimVal'] && c6i['weapon']['scope'];
                if (c7r['showMuzzle'] && !c6i['weapon']['nMuz'] && (0x0 == c6h['useDepthMap'] || '0' == c6h['useDepthMap'])) {
                    for (var cao = 0x0; cao < c9x['muzzles']['length']; ++cao)
                        c9x['muzzles'][cao]['visible'] = !0x0,
                        c7r['setMaterial'](c9x['muzzles'][cao], c6i['weapon']['muzID'] || 0x2, 0x1, !0x0),
                        c9x['muzzles'][cao]['init'](cao ? -0x2 * c6i['weapon']['xOff'] : 0x0, c6i['weapon']['muzOffY'] || 0x0, -c6i['weapon']['muzOff'], 0x0, 0x0, 0x0, 0x4 * (c6i['weapon']['muzMlt'] || 0x1), 0x1);
                    if (!can)
                        (caX = c6i['weaponMeshes'][c6i['weaponIndex']]['muzzles'][0x0]['getWorldPosition']()['clone']())['project'](c6h['camera']),
                        caX['x'] = (caX['x'] + 0x1) / 0x2,
                        caX['y'] = (caX['y'] + 0x1) / 0x2,
                        c6h['flash'](caX['x'], caX['y']);
                }
                if (!c6i['weapon']['nCase'] && c7r['active'])
                    for (cao = 0x0; cao < c6i['weaponMeshes'][c6i['weaponIndex']]['casings']['length']; ++cao)
                        if (caX = c6i['weaponMeshes'][c6i['weaponIndex']]['casings'][cao]['getWorldPosition'](),
                        c7q && 0x190 < c6g['now'] - (c6i['lastShell'] || 0x0) && (c6i['lastShell'] = c6g['now'],
                        c7q['play3D']('case_' + c7s['randInt'](0x0, 0x1), caX['x'], caX['y'], caX['z'], 0.65, c7s['randFloat'](0.8, 1.3))),
                        !can) {
                            var cap = c7s['randInt'](0x0, 0x1) ? 1.4 : 0.8;
                            c7r['physObj'](caX['x'], caX['y'], caX['z'], c6i['xDire'] - Math['PI'] / 0x2 * (cao ? -0x1 : 0x1), Math['PI'] / 0x5 * c7s['randFloat'](0.75, 1.2) * cap, 0x19, !0x1, c6i['weapon']['caseInd'] || 0x1, c6i);
                        }
            }
            if (null == c6i['weapon']['projectile'])
                for (var caq = c6i['weapon']['physPow'] ? -0x1 : 0x0; caq < (c6i['weapon']['shots'] || 0x1); ++caq) {
                    var car = 0x0 <= caq ? (c6i['spread'] + (c6i['weapon']['innac'] || 0x0)) * c7t['spreadAdj'] : 0x0
                      , cas = c6i['xDire'] + c7s['randFloat'](-car, car)
                      , cat = c6i['yDire'] + c6i['recoilAnimY'] * c7t['recoilMlt'] + c7s['randFloat'](-car, car)
                      , cau = c6i['weapon']['range'];
                    0x0 > caq && (cau = c6i['weapon']['physRang']),
                    caf['length'] = 0x0;
                    for (var cav = 0x0, caw = 0x1 / (cau * Math['sin'](cas + Math['PI']) * Math['cos'](cat)), cax = 0x1 / (cau * Math['cos'](cas + Math['PI']) * Math['cos'](cat)), cay = 0x1 / (cau * Math['sin'](cat)), caz = c6i['y'] + c6i['height'] - c7t['cameraHeight'], caA = 0x0; caA < c6g['map']['manager']['objects']['length']; ++caA)
                        (c7w = c6g['map']['manager']['objects'][caA])['active'] && !c7w['noShoot'] && ((cav = c7s['lineInRect'](c6i['x'], c6i['z'], caz, caw, cax, cay, c7w['x'] - c7w['width'], c7w['z'] - c7w['length'], c7w['y'] - c7w['height'], c7w['x'] + c7w['width'], c7w['z'] + c7w['length'], c7w['y'] + c7w['height'])) && 0x1 >= cav && caf['push']({
                            'obj': c7w,
                            'dst': cav
                        }));
                    if (c7u && 0x0 <= caq)
                        for (caA = 0x0; caA < this['list']['length']; ++caA)
                            this['list'][caA]['active'] && c6i != this['list'][caA] && (!c6i['team'] || c6i['team'] != this['list'][caA]['team']) && ((c7w = this['fetchState'](this['list'][caA], c6i['ping'])) && ((cav = c7s['lineInRect'](c6i['x'], c6i['z'], caz, caw, cax, cay, c7w['x'] - this['list'][caA]['scale'] - c7t['hitBoxPad'], c7w['z'] - this['list'][caA]['scale'] - c7t['hitBoxPad'], c7w['y'], c7w['x'] + this['list'][caA]['scale'] + c7t['hitBoxPad'], c7w['z'] + this['list'][caA]['scale'] + c7t['hitBoxPad'], c7w['y'] + this['list'][caA]['height'] + c7t['hitBoxPad'])) && 0x1 >= cav && caf['push']({
                                'player': !0x0,
                                'obj': this['list'][caA],
                                'dst': cav
                            })));
                    var caB = c6g['map']['terrain'];
                    if (caB) {
                        var caC = caB['raycast'](c6i['x'], -c6i['z'], caz, 0x1 / caw, -0x1 / cax, 0x1 / cay);
                        if (caC) {
                            let c6g = c7s['getDistance3D'](c6i['x'], caz, c6i['z'], caC['x'], caC['z'], -caC['y']);
                            caf['push']({
                                'terrain': !0x0,
                                'dst': c6g / cau
                            });
                        }
                    }
                    var caE = cau;
                    if (caf['length']) {
                        caf['sort'](c7s['orderByDst']);
                        var caF = c6i['weapon']['dmg'];
                        for (caA = 0x0; caA < caf['length']; ++caA) {
                            if (caE = cau * (c7w = caf[caA])['dst'],
                            0x0 > caq) {
                                var caG = (0x1 - c7w['dst']) * (c6i['weapon']['physPow'] * (c6g['config'] ? c6g['config']['impulseMlt'] : 0x1))
                                  , caH = caG * Math['sin'](cas + Math['PI']) * Math['cos'](cat);
                                c6i['xVel'] -= caH;
                                var caI = caG * Math['cos'](cas + Math['PI']) * Math['cos'](cat);
                                c6i['zVel'] -= caI;
                                var caJ = caG * Math['sin'](cat);
                                c6i['yVel'] -= caJ,
                                c6i['onGround'] = !0x1,
                                c7u || (c6j['velObj'] = {
                                    'x': caH,
                                    'y': caI,
                                    'z': caJ
                                });
                                break;
                            }
                            if (!c7u)
                                break;
                            var caK = c6i['weapon']['dropStart'] || 0x0
                              , caL = Math['min'](0x1, 0x1 - (0x1 - c7w['dst']) * cau / (cau - caK))
                              , caM = caF - c6i['weapon']['dmgDrop'] * caL
                              , caN = !0x1
                              , caO = !0x1;
                            if (c7w['player']) {
                                var caP = caz + caE * Math['sin'](cat);
                                caN = c7w['obj']['y'] + c7w['obj']['height'] - caP < c7t['headScale'],
                                caO = c7w['obj']['y'] + c7t['legHeight'] > caP,
                                caM *= caN && !c6i['weapon']['noHeadShot'] ? 1.5 : 0x1,
                                caM *= caO ? 0.5 : 0x1,
                                caN || !c6g['config'] || !c6g['config']['headshotOnly'] || (caM = 0x0);
                            }
                            if (c7u && !c6g['waitTimers'] && c7w['obj'] && c7w['obj']['health'] && !c7w['player'] && (c7w['obj']['health'] -= caM,
                            c7u['send'](c6i['id'], '4'),
                            0x0 >= c7w['obj']['health'] && (c7w['obj']['active'] = !0x1,
                            c7w['obj']['health'] = 0x0,
                            c6g['destObjs']['push'](c7w['obj']['uid']),
                            c7u['broadcast']('game' + c6g['sid'], 'do', c7w['obj']['uid']))),
                            c7u && 'seek' == c6i['team'] && !c7w['player'] && c7w['obj'] && c7w['obj']['propID'] && this['changeHealth'](c6i, null, 0xa) && this['kill'](c6i, null, {}),
                            c7w['player'] || c7w['obj'] && c7w['obj']['dummy']) {
                                if (c7w['player'] && (c6l = !0x0),
                                this['changeHealth'](c7w['obj'], c6i, caM)) {
                                    var caQ = {
                                        'dst': c7w['dst'],
                                        'headShot': caN
                                    };
                                    this['kill'](c7w['obj'], c6i, caQ);
                                }
                                caF -= null == c6i['weapon']['pierce'] ? caF : c6i['weapon']['dmg'] * c7t['materialDens']['flesh'] * c6i['weapon']['pierce'];
                            } else {
                                if (!c7w['obj'] || !c7w['obj']['penetrable'])
                                    break;
                                caF -= null == c6i['weapon']['pierce'] ? caF : c6i['weapon']['dmg'] * c7t['materialDens']['default'] * c6i['weapon']['pierce'];
                            }
                            if (0x0 >= caF)
                                break;
                        }
                    }
                    caE -= 0.12;
                    var caR = c6i['x'] + caE * Math['sin'](cas + Math['PI']) * Math['cos'](cat)
                      , caS = (caP = caz + caE * Math['sin'](cat),
                    c6i['z'] + caE * Math['cos'](cas + Math['PI']) * Math['cos'](cat))
                      , caT = 0x0
                      , caU = 0x0;
                    if (caf['length'] && (c7w['terrain'] ? caU = Math['PI'] / 0x2 : caP >= c7w['obj']['y'] + c7w['obj']['height'] ? caU = Math['PI'] / 0x2 : caP <= c7w['obj']['y'] - c7w['obj']['height'] ? caU = -Math['PI'] / 0x2 : caR <= c7w['obj']['x'] - c7w['obj']['width'] ? caT = -Math['PI'] / 0x2 : caR >= c7w['obj']['x'] + c7w['obj']['width'] ? caT = Math['PI'] / 0x2 : caS <= c7w['obj']['z'] - c7w['obj']['length'] && (caT = Math['PI']),
                    !c7u && c7r['effect'](caR, caP, caS, caT, caU, 0x0)),
                    c7u) {
                        var caV = c6i['weapon'] && c6i['weapon']['trail'] ? 0x1 : 0x0;
                        for (caA = 0x0; caA < this['list']['length']; ++caA)
                            (this['list'][caA]['active'] || this['list'][caA]['spectating']) && this['list'][caA] != c6i && (caf['length'] && !c7w['player'] ? c7u['send'](this['list'][caA]['id'], '9', c6i['sid'], Math['round'](caR), Math['round'](caP), Math['round'](caS), caT['round'](0x1), caU['round'](0x1), caV) : c7u['send'](this['list'][caA]['id'], '9', c6i['sid'], Math['round'](caR), Math['round'](caP), Math['round'](caS), void 0x0, void 0x0, caV));
                    }
                    if (c6i['isYou'] && caE >= c7t['tracerMinDst']) {
                        var caW = c7s['randInt'](0x0, c6i['weaponMeshes'][c6i['weaponIndex']]['muzzles']['length'] - 0x1)
                          , caX = c6i['weaponMeshes'][c6i['weaponIndex']]['muzzles'][caW]['getWorldPosition']()
                          , caY = c6i['weapon'] && c6i['weapon']['scope'] && 0x0 == c6i['aimVal'] ? 0x7 : 0x0
                          , caZ = caX['x'] - caY * Math['sin'](cas + Math['PI']) * Math['cos'](cat)
                          , cb0 = caX['y'] - caY * Math['sin'](cat)
                          , cb1 = caX['z'] - caY * Math['cos'](cas + Math['PI']) * Math['cos'](cat);
                        c7s['getDistance3D'](caZ, cb0, cb1, caR, caP, caS),
                        caT = c7s['getDirection'](cb1, caZ, caS, caR),
                        caU = c7s['getDirection'](c7s['getDistance'](caZ, cb1, caR, caS), caP, 0x0, cb0);
                        c7r['physObj'](caZ, cb0, cb1, caT, caU, Math['min'](caE + caY, c7t['tracerMaxDst']), true, 0x0, c6i);
                    }
                }
            else if (c7u) {
                car = (c6i['spread'] + (c6i['weapon']['innac'] || 0x0)) * c7t['spreadAdj'],
                cas = c6i['xDire'] + c7s['randFloat'](-car, car),
                cat = c6i['yDire'] + c6i['recoilAnimY'] * c7t['recoilMlt'] + c7s['randFloat'](-car, car);
                c6g['projectiles']['init'](c6i['x'], c6i['y'] + c6i['height'] - c7t['cameraHeight'], c6i['z'], cas, cat, c6i['weapon']['projectile'], c6i);
            }
            c6l && c7u && c6g['incStat']('h', c6i);
        }
        ,
        this['spray'] = function(c6h) {
            if (c6g['now'] - c6h['lastSpray'] >= c7t['sprayTimer']) {
                caf['length'] = 0x0;
                for (var c6i = 0x0, c6j = 0x1 / (c7t['sprayRange'] * Math['sin'](c6h['xDire'] + Math['PI']) * Math['cos'](c6h['yDire'])), c6l = 0x1 / (c7t['sprayRange'] * Math['cos'](c6h['xDire'] + Math['PI']) * Math['cos'](c6h['yDire'])), c7q = 0x1 / (c7t['sprayRange'] * Math['sin'](c6h['yDire'])), c7r = 0x0; c7r < c6g['map']['manager']['objects']['length']; ++c7r)
                    (c7w = c6g['map']['manager']['objects'][c7r])['noShoot'] || c7w['noVis'] || (c6i = c7s['lineInRect'](c6h['x'], c6h['z'], c6h['y'] + c6h['height'] - c7t['cameraHeight'], c6j, c6l, c7q, c7w['x'] - c7w['width'], c7w['z'] - c7w['length'], c7w['y'] - c7w['height'], c7w['x'] + c7w['width'], c7w['z'] + c7w['length'], c7w['y'] + c7w['height'])) && 0x1 >= c6i && caf['push']({
                        'obj': c7w,
                        'dst': c6i
                    });
                if (caf['length'] && (caf['sort'](c7s['orderByDst']),
                c7w = caf[0x0]['obj'])) {
                    var c7v = c7t['sprayRange'] * caf[0x0]['dst'] - 0.1
                      , c7x = c6h['y'] + c6h['height'] - c7t['cameraHeight'] + c7v * Math['sin'](c6h['yDire'])
                      , c7y = c6h['x'] + c7v * Math['sin'](c6h['xDire'] + Math['PI']) * Math['cos'](c6h['yDire'])
                      , c9x = c6h['z'] + c7v * Math['cos'](c6h['xDire'] + Math['PI']) * Math['cos'](c6h['yDire'])
                      , cbc = 0x0
                      , cbd = 0x0;
                    c7x >= c7w['y'] + c7w['height'] ? cbd = -0x5a : c7x <= c7w['y'] - c7w['height'] ? cbd = 0x5a : c7y <= c7w['x'] - c7w['width'] ? cbc = -0x5a : c7y >= c7w['x'] + c7w['width'] ? cbc = 0x5a : c9x <= c7w['z'] - c7w['length'] && (cbc = 0xb4);
                    var cbe = c7t['sprayScale'] / 0x2;
                    if (cbd) {
                        if (c7w['width'] < cbe || c7w['length'] < cbe)
                            return;
                        c9x - cbe < c7w['z'] - c7w['length'] ? c9x = c7w['z'] - c7w['length'] + cbe : c9x + cbe > c7w['z'] + c7w['length'] && (c9x = c7w['z'] + c7w['length'] - cbe),
                        c7y - cbe < c7w['x'] - c7w['width'] ? c7y = c7w['x'] - c7w['width'] + cbe : c7y + cbe > c7w['x'] + c7w['width'] && (c7y = c7w['x'] + c7w['width'] - cbe);
                    } else {
                        if (c7w['height'] < cbe)
                            return;
                        if (0x5a == cbc || -0x5a == cbc) {
                            if (c7w['length'] < cbe)
                                return;
                            c9x - cbe < c7w['z'] - c7w['length'] ? c9x = c7w['z'] - c7w['length'] + cbe : c9x + cbe > c7w['z'] + c7w['length'] && (c9x = c7w['z'] + c7w['length'] - cbe);
                        } else {
                            if (c7w['width'] < cbe)
                                return;
                            c7y - cbe < c7w['x'] - c7w['width'] ? c7y = c7w['x'] - c7w['width'] + cbe : c7y + cbe > c7w['x'] + c7w['width'] && (c7y = c7w['x'] + c7w['width'] - cbe);
                        }
                        c7x + cbe > c7w['y'] + c7w['height'] && (c7x = c7w['y'] + c7w['height'] - cbe);
                    }
                    c6h['lastSpray'] = c6g['now'],
                    c6g['playSound'] && c6g['playSound']('spray', 0.4, c6h, !0x0),
                    c7u['broadcast']('game' + c6g['sid'], 'sp', c6h['sid'], c6h['sprayIndex'], c7y['round'](0x2), c7x['round'](0x2), c9x['round'](0x2), cbc, cbd);
                }
            }
        }
        ,
        this['interact'] = function(c6h) {
            if (c6g['now'] - c6h['lastInteract'] >= c7t['interactTimer'] && 'inf' != c6h['team']) {
                c6h['lastInteract'] = c6g['now'];
                for (var c6i = 0x0; c6i < c6g['map']['manager']['pickups']['length']; ++c6i)
                    if (null != (c7v = c6g['map']['manager']['pickups'][c6i])['pickup'] && c6h['collides'](c7v) && -0x1 == c6h['loadout']['indexOf'](c7v['pickup'])) {
                        if (c6g['weapons'][c6h['loadout'][0x0]] && c6g['weapons'][c6h['loadout'][0x0]]['melee'] && 0x1 == c6h['loadout']['length'])
                            c7w = void 0x0,
                            c6h['loadout'][0x0] = c7v['pickup'],
                            c6h['weaponIndex'] = 0x0,
                            c7v['pickupRep'] && null == c7w && this['addPicked'](c6h, c7v['pickup']);
                        else if (c6g['weapons'][c7v['pickup']]['type'])
                            c6g['weapons'][c6h['loadout'][0x0]]['type'] ? (c7w = c6h['loadout'][0x0],
                            c6h['loadout'][0x0] = c7v['pickup'],
                            c6h['weaponIndex'] = 0x0) : !c6g['weapons'][c6h['loadout'][0x0]]['type'] && (c7w = c6g['weapons'][c6h['loadout'][0x1]] && c6g['weapons'][c6h['loadout'][0x1]]['melee'] ? void 0x0 : c6h['loadout'][0x1],
                            c6h['loadout'][0x1] = c7v['pickup'],
                            c6h['weaponIndex'] = 0x1),
                            this['removePicked'](c6h, c7w),
                            c7v['pickupRep'] && null == c7w && this['addPicked'](c6h, c7v['pickup']);
                        else if (!c6g['weapons'][c7v['pickup']]['type']) {
                            c7w = c6g['weapons'][c6h['loadout'][0x0]] && c6g['weapons'][c6h['loadout'][0x0]]['melee'] ? void 0x0 : c6h['loadout'][0x0];
                            var c6j = !0x1;
                            c6g['weapons'][c6h['loadout'][0x0]]['type'] ? (c6h['loadout']['splice'](0x0, 0x0, c7v['pickup']),
                            c6g['weapons'][c6h['loadout'][0x1]] && c6g['weapons'][c6h['loadout'][0x1]]['melee'] && (c6h['loadout']['length'] = 0x1),
                            c7w = void 0x0) : !c6g['weapons'][c6h['loadout'][0x0]]['type'] && (!(c6g['weapons'][c6h['loadout'][0x0]] && c6g['weapons'][c6h['loadout'][0x0]]['melee']) && (c6j = this['removePicked'](c6h, c6h['loadout'][0x0])),
                            c6h['loadout'][0x0] = c7v['pickup']),
                            c7v['pickupRep'] && (null == c7w || c6j) && this['addPicked'](c6h, c7v['pickup']),
                            c6h['weaponIndex'] = 0x0;
                        }
                        c7v['pickupRep'] && (c7v['pickup'] = c7w),
                        c7u['broadcast']('game' + c6g['sid'], 'inat', c6h['sid'], c6h['loadout'], c6h['weaponIndex'], c7v['uid'], c7v['pickupRep'] ? c7w : c7v['pickup']),
                        c6h['updateLoadout'](c6g, c6h['weaponIndex'], !0x0, ...c6h['loadout']);
                        break;
                    }
                for (c6i = 0x0; c6i < c6g['map']['manager']['gates']['length']; ++c6i)
                    if ((c7v = c6g['map']['manager']['gates'][c6i])['active'] && c6h['collides'](c7v, c7v['tRadius']) && c6h['score'] >= c7v['scoreP']) {
                        0x0 == c7v['scoreP'] || c7v['method'] || this['score'](c6h, -c7v['scoreP']),
                        c7u['broadcast']('game' + c6g['sid'], 'gte', c7v['uid'], !0x1),
                        c7v['active'] = !0x1;
                        break;
                    }
            }
        }
        ,
        this['findEmptyPickup'] = function() {
            for (var c6h, c6i = 0x0; c6i < c6g['map']['manager']['pickups']['length']; ++c6i)
                if ((c6h = c6g['map']['manager']['pickups'][c6i])['pickupRep'] && null == c6h['pickup'])
                    return c6h['uid'];
            return null;
        }
        ,
        this['addPicked'] = function(c6g, c6h) {
            -0x1 == c6g['lastPicked']['indexOf'](c6h) && c6g['lastPicked']['push'](c6h);
        }
        ,
        this['removePicked'] = function(c6g, c6h) {
            var c6i = c6g['lastPicked']['indexOf'](c6h);
            return -0x1 < c6i && c6g['lastPicked']['splice'](c6i, 0x1),
            -0x1 < c6i;
        }
        ,
        this['dropWeapon'] = function(c6h, c6i) {
            if (c6g['map']['manager']['pickups']['length']) {
                var c6j, c6l = c6h['weaponIndex'], c7q = c6h['loadout'][c6l], c7r = [c6h['x'] + c7s['randInt'](-0x5, 0x5), c6h['y'] + 0x1, c6h['z'] + c7s['randInt'](-0x5, 0x5)];
                if (c6i) {
                    for (var c7t = 0x0; c7t < c6h['loadout']['length']; c7t++)
                        c7q = c6h['loadout'][c7t],
                        (c6j = this['findEmptyPickup']()) && -0x1 < c6h['lastPicked']['indexOf'](c7q) && !c6g['weapons'][c7q]['melee'] && (c7r = [c6h['x'] + c7s['randInt'](-0x5, 0x5), c6h['y'] + 0x1, c6h['z'] + c7s['randInt'](-0x5, 0x5)],
                        c6g['updatePickup'](c6j, c7q, null, c7r),
                        c7u['broadcast']('game' + c6g['sid'], 'inat', null, null, null, c6j, c7q, !0x0, c7r));
                    c6h['lastPicked']['length'] = 0x0;
                } else if (!c6g['weapons'][c7q]['melee']) {
                    var c7v = (c6j = this['findEmptyPickup']()) && -0x1 < c6h['lastPicked']['indexOf'](c7q);
                    c7v && (this['removePicked'](c6h, c7q),
                    c6g['updatePickup'](c6j, c7q, null, c7r)),
                    c6h['loadout'] = 0x1 == c6h['loadout']['length'] ? [] : [c6h['loadout'][c6l ? 0x0 : 0x1]],
                    c6h['weaponIndex'] = 0x0,
                    c7u['broadcast']('game' + c6g['sid'], 'inat', c6h['sid'], c6h['loadout'], c6h['weaponIndex'], c6j, c7q, c7v, c7r),
                    c6h['updateLoadout'](c6g, c6h['weaponIndex'], !0x0, ...c6h['loadout']);
                }
            }
        }
        ,
        this['updateInteract'] = function(c6g, c6h, c6i='pickup') {
            if (c6g['isYou']) {
                var c6j = 'Press\x20[' + c7s['getKeyName'](parseInt(getSavedVal('cont_interactKey') || 0x47)) + ']\x20to\x20' + c6i
                  , c6l = c6h ? 'block' : 'none';
                interactMsg['innerHTML'] != c6j && (interactMsg['innerHTML'] = c6j),
                interactMsg['style']['display'] != c6l && (interactMsg['style']['display'] = c6l);
            }
        }
        ;
        var cbC = [];
        this['syncLeaders'] = function() {
            c7x = c6g['mode']['killSort'] ? this['list']['slice']()['sort'](c7s['orderByKills']) : this['list']['slice']()['sort'](c7s['orderByScore']),
            cbC['length'] = 0x0;
            for (var c6h = 0x0, c6i = 0x0, c6j = 0x0; c6j < c7x['length']; ++c6j)
                c7x[c6j]['spectating'] ? c6i++ : 0xa > c6h && (c6h++,
                cbC['push'](c7x[c6j]['sid'], c7x[c6j]['account'] ? c7x[c6j]['account']['name'] : c7x[c6j]['name'], c7x[c6j]['team'], c6g['mode']['killSort'] ? c7x[c6j]['kills'] : c7x[c6j]['score'], c7x[c6j]['account'] ? c7x[c6j]['account']['clan'] : 0x0, c7x[c6j]['account'] ? c7x[c6j]['account']['featured'] : 0x0));
            c7u['broadcast']('game' + c6g['sid'], '7', cbC, c6i);
        }
        ,
        this['score'] = function(c6h, c6i, c6j) {
            c7u && (c6h['score'] += c6i,
            null == c6g['host'] && 0x32c8 < c6h['score'] && (c6h['score'] = 0x32c8,
            c6i = 0x0),
            c7u['send'](c6h['id'], '5', c6i),
            this['syncLeaders'](),
            c6g['mode']['teams'] && c6h['team'] && c6g['teams'] && !c6g['mode']['noScoreC'] && (!c6j || !c6g['mode']['objective']) && (c6g['teams'][c6h['team']] ? c6g['teams'][c6h['team']] += c6i : c6g['teams'][c6h['team']] = c6i,
            c7u['broadcast']('game' + c6g['sid'], 'ts', c6h['team'], c6g['teams'][c6h['team']])));
        }
        ,
        this['tickPlayer'] = function(c6g, c6h) {
            c6g['playTime'] += c6h,
            0x0 < c6g['hitTimer'] && (c6g['hitTimer'] -= c6h),
            c6g['ticker'] -= c6h,
            0x0 >= c6g['ticker'] && (c6g['ticker'] = 0x1f4,
            0x0 >= c6g['hitTimer'] && !c6g['challMode'] && this['changeHealth'](c6g, null, -c6g['maxHealth'] * (c6g['regen'] || 0x0)));
        }
        ,
        this['changeHealth'] = function(c6h, c6i, c6j, c6l) {
            if ((!c6g['waitTimers'] || c6g['waitTimers'][0x0]['canDMG']) && !(0x0 > c6j && c6h['health'] == c6h['maxHealth']) && (c6i && c6i['account'] && c6i['account']['hack'] && c6j && (c6j *= 0.2),
            c6i && 0.1 <= c6i['avgSpn'] && (c6j *= 0.2),
            c6i && c6i['isHacker'] && (c6j *= 0.1),
            c6i && c6i['lastHack'] && 0x190 >= c6g['now'] - c6i['lastHack'] && (c6j *= 0.2),
            !(!c6l && c6h['team'] && c6i && c6h['team'] == c6i['team'] && 0x0 < c6j))) {
                if (c6i && c6i != c6h && 0x0 < c6j && c7u['send'](c6i['id'], '4'),
                c6h['dummy'])
                    return !0x0;
                0x0 < c6j && (c6h['hitTimer'] = c6h['regenDelay'] || 0x0),
                c6h['health'] -= c6j,
                c6h['health'] = Math['max'](Math['min'](c6h['maxHealth'], c6h['health']), 0x0),
                c6i ? (c7u['send'](c6h['id'], 'h', Math['ceil'](c6h['health']), null, Math['round'](c6i['x']), Math['round'](c6i['z'])),
                c6i != c6h && (c6h['dmgReceived'][c6i['id']] ? (c6h['dmgReceived'][c6i['id']]['val'] += c6j,
                c6h['dmgReceived'][c6i['id']]['time'] = c6g['now']) : c6h['dmgReceived'][c6i['id']] = {
                    'time': c6g['now'],
                    'val': c6j
                })) : c7u['send'](c6h['id'], 'h', Math['ceil'](c6h['health']));
                for (var c7q = 0x0; c7q < this['list']['length']; ++c7q)
                    this['list'][c7q] != c6h && c7u['send'](this['list'][c7q]['id'], 'h', Math['ceil'](c6h['health']), c6h['sid']);
                return 0x0 >= c6h['health'];
            }
        }
        ,
        this['swapMelee'] = function(c6g, c6h) {
            0x1 >= c6g['ammos']['length'] || (c6g['weaponIndex'] == c6g['ammos']['length'] - 0x1 ? this['swapWeapon'](c6g, 0x1, !0x1, void 0x0, void 0x0, c6h) : this['swapWeapon'](c6g, null, null, void 0x0, c6g['ammos']['length'] - 0x1, c6h));
        }
        ,
        this['swapSecondary'] = function(c6h, c6i) {
            if (!(0x1 >= c6h['ammos']['length']))
                for (var c6j, c6l = 0x0; c6l < c6h['ammos']['length']; ++c6l)
                    c6j = c6h['loadout'][c6l],
                    c6g['weapons'][c6j] && c6g['weapons'][c6j]['secondary'] && (c6h['weaponIndex'] == c6l ? this['swapWeapon'](c6h, null, null, void 0x0, 0x0, c6i) : this['swapWeapon'](c6h, null, null, void 0x0, c6l, c6i));
        }
        ,
        this['swapWeapon'] = function(c6i, c6j, c6l, c7q, c7r, c7t) {
            if (!(0x1 >= c6i['ammos']['length'] && c6j || c7q > c6i['ammos']['length'])) {
                var c7u = c6i['weaponIndex'];
                if (c6j && (0x1 != c6j && -0x1 != c6j && (c6j = 0x0),
                c6i['weaponIndex'] += c6j,
                0x1 == c6j ? c6i['weaponIndex'] > c6i['ammos']['length'] - 0x2 && (c6i['weaponIndex'] = 0x0) : 0x0 > c6i['weaponIndex'] ? c6i['weaponIndex'] = Math['min'](c6i['ammos']['length'] - 0x1, 0x2) : c6i['weaponIndex'] = 0x0),
                null != c7q && (c6i['weaponIndex'] = c7q),
                null != c7r && (c6i['weaponIndex'] = c7r),
                (null != c6j || null != c7r) && (c7u != c6i['weaponIndex'] || c6l) && (c6i['reloadTimer'] = 0x0,
                c6i['didShoot'] = !0x1,
                c6i['burstCount'] = 0x0),
                c6i['weapon'] = c6g['weapons'][c6i['loadout'][c6i['weaponIndex']]],
                c6i['weapon'] || (c6i['weapon'] = c6g['weapons'][c6i['loadout'][0x0]],
                c6i['weapon'] && (c6i['weaponIndex'] = 0x0)),
                c6h && (c7u != c6i['weaponIndex'] || c6l)) {
                    this['cancelInspect'](c6i);
                    for (var c7v = 0x0; c7v < c6i['weaponMeshes']['length']; ++c7v)
                        c6i['weaponMeshes'][c7v]['visible'] = !0x1;
                    c6i['weaponMeshes'][c6i['weaponIndex']] && (c6i['weaponMeshes'][c6i['weaponIndex']]['visible'] = !this['isWeaponHidden'](c6i, c6i['weaponIndex']) || !c6i['isYou']);
                }
                if (null == c7q && c6i['weapon'] && (!c6h || c6i['isYou']) && (c6i['isYou'] && c7u == c6i['weaponIndex'] || c7t || (c6i['swapTime'] = c6i['weapon']['swapTime']),
                c6i['isYou'] && (c7u != c6i['weaponIndex'] || c6l))) {
                    var c7w, c7x = '';
                    for (c7v = 0x0; c7v < c6i['ammos']['length']; ++c7v)
                        c7w = c7v == c6i['weaponIndex'],
                        c6g['weapons'][c6i['loadout'][c7v]]['icon'] && (c7x += '<div\x20class=\x27weaponItem\x27>' + (0x0 < c7v ? '<div\x20class=\x27weapKey\x27>' + (c6g['weapons'][c6i['loadout'][c7v]]['melee'] ? '[' + c7s['getKeyName'](c6g['controls']['meleeKey']) + ']' : '[' + c7s['getKeyName'](c6g['controls']['swapKey']) + ']') + '</div>' : '') + '<img\x20style=\x27opacity:' + (c7w ? 0x1 : 0.7) + (c7v ? ';margin-right:25px' : '') + '\x27\x20class=\x27weaponIcon\x27\x20src=\x27' + (c6g['weapons'][c6i['loadout'][c7v]]['melee'] ? './textures/melee/icon_' + (c6g['store']['skins'][c6i['meleeIndex']] && c6g['store']['skins'][c6i['meleeIndex']]['id'] || 0x0) : './textures/weapons/' + c6g['weapons'][c6i['loadout'][c7v]]['icon']) + '.png\x27\x20/></div>');
                    c7t || (c6i['swapTween'] && c6i['swapTween']['stop'](),
                    c6i['swapTweenA'] = 0.5,
                    c6i['swapTween'] = new TWEEN['Tween'](c6i)['to']({
                        'swapTweenA': 0x1
                    }, 0x4b0)['easing'](TWEEN['Easing']['Elastic']['Out'])['start'](),
                    c7u != c6i['weaponIndex'] && 0x1 == c6i['aimVal'] && (c6i['swapTweenAnim'] && c6i['swapTweenAnim']['stop'](),
                    c6i['swapTweenR'] = c6i['weapon']['swapWiggle'] || 0.6,
                    c6i['swapTweenAnim'] = new TWEEN['Tween'](c6i)['to']({
                        'swapTweenR': 0x0
                    }, c6i['weapon']['swapTime'] + 0xdc)['easing'](TWEEN['Easing']['Back']['InOut'])['start']()),
                    c7u != c6i['weaponIndex'] && 0x1 == c6i['aimVal'] && (c6i['meleeAnim']['anim'] && c6i['meleeAnim']['anim']['stop'](),
                    c6i['resetMeleeAnim'](),
                    c6i['meleeAnim']['armR'] = 0.15,
                    c6i['weapon']['melee'] && (c6i['meleeAnim']['anim'] = new TWEEN['Tween'](c6i['meleeAnim'])['to']({
                        'armR': 0x0
                    }, 0x2bc)['easing'](TWEEN['Easing']['Back']['InOut'])['start']()))),
                    weaponDisplay['innerHTML'] = c7x,
                    this['updatePlayerAmmo'](c6i);
                }
            }
        }
        ,
        this['checkStreak'] = function(c6h) {
            for (var c6i = 0x0; c6i < c6g['streaks']['length']; ++c6i)
                c6h['killStreak'] == c6g['streaks'][c6i]['kills'] && this['addStreak'](c6h, c6i);
        }
        ,
        this['useStreak'] = function(c6h, c6i) {
            c6h['streaks'][c6i] && c6h['streaks'][c6i]['activate'](c6g, c6h) && (c6h['streaks'][c6i] = null,
            c7u['send'](c6h['id'], 'st', c6i, 0x1));
        }
        ,
        this['addStreak'] = function(c6h, c6i) {
            c6h['streaks'][c6i] || (c6h['streaks'][c6i] = c6g['streaks'][c6i],
            c7u['send'](c6h['id'], 'st', c6i));
        }
        ,
        this['kill'] = function(c6h, c6i, c6j, c6l, c7q) {
            if (c6h['dummy'] || c6h['active']) {
                var c7r = !0x1;
                if (c6h['dummy'] || (c6h['active'] = !0x1,
                c6h['isYou'] && this['toggleAim'](c6h, 0x0),
                c6h['objInstances'] && this['disposeMesh'](c6h)),
                c7u) {
                    var c7s, c7v = 0x0;
                    if (c6h['deaths']++,
                    c6g['mode']['noStreaks'] || c6h['deathStreak']++,
                    c6h['lives'] && !c6g['waitTimers'] && (c6h['lives']--,
                    c7u['send'](c6h['id'], 'lv', c6h['lives'])),
                    c6g['kills']++,
                    c6i && c6i != c6h && (!c6h['dummy'] && c6i['kills']++,
                    !c6g['mode']['noStreaks'] && (c6i['streak']++,
                    c6i['killStreak']++,
                    c6i['deathStreak'] = 0x0,
                    this['checkStreak'](c6i),
                    0x5 == c6i['killStreak'] ? c7v = 0x5 : 0xa == c6i['killStreak'] ? c7v = 0xa : 0xf == c6i['killStreak'] ? c7v = 0xf : 0x14 == c6i['killStreak'] ? c7v = 0x14 : 0x19 == c6i['killStreak'] ? c7v = 0x19 : 0x1e == c6i['killStreak'] && (c7v = 0x1e),
                    c6g['now'] - c6i['lastKill'] >= c7t['feedTimer'] && (c6i['streak'] = 0x0)),
                    c6i['lastKill'] = c6g['now'],
                    !c7q && c6g['config']['killRewards'] && !c6g['mode']['noKillRewards'] && ((c7s = c7y['reward'](this, c6i, c6h, c6j, c6g)) && c7u['send'](c6i['id'], '6', c7s, c6j['headShot'] ? 0x1 : 0x0, c6i['kills']),
                    this['score'](c6i, c7y['getScore'](c7s), !0x0),
                    c7r = !0x0),
                    c6g['players']['dropWeapon'](c6h, !0x0)),
                    c6g['mode']['onKill'] && c6g['mode']['onKill'](c6g, c6h, c6i),
                    !c6h['dummy'])
                        for (var c7w = 0x0; c7w < this['list']['length']; ++c7w)
                            !c6g['mode']['noAssists'] && c6h['dmgReceived'][this['list'][c7w]['id']] && c6i != this['list'][c7w] && c6h['dmgReceived'][this['list'][c7w]['id']]['val'] >= c7t['assistMin'] && c6g['now'] - c6h['dmgReceived'][this['list'][c7w]['id']]['time'] <= c7t['assistTime'] && (this['list'][c7w]['assists']++,
                            this['score'](this['list'][c7w], c7t['assistScore'], !0x0),
                            c7u['send'](this['list'][c7w]['id'], '10'),
                            c7r = !0x0),
                            this['list'][c7w] == c6h ? c7u['send'](c6h['id'], '3', c6h['sid'], c6h['deaths'], c6i ? c6i['sid'] : 0x0, c6g['mode']['killRes'] ? c6g['mode']['killRes'](c6i) : [c6i ? c6i['loadout'][c6i['weaponIndex']] : -0x1, c7s ? c7y['getScore'](c7s) : 0x0], c6l) : c7u['send'](this['list'][c7w]['id'], '3', c6h['sid'], c6h['deaths'], c6i ? c6i['sid'] : 0x0, null, c6l);
                    c7v && c7u['broadcast']('game' + c6g['sid'], 'kst', c6i['sid'], c7v);
                }
                c7u && !c7r && this['syncLeaders']();
            }
        }
        ,
        this['indexBySid'] = function(c6g) {
            for (var c6h = 0x0; c6h < this['list']['length']; ++c6h)
                if (this['list'][c6h]['sid'] == c6g)
                    return c6h;
            return -0x1;
        }
        ,
        this['findBySid'] = function(c6g) {
            for (var c6h = 0x0; c6h < this['list']['length']; ++c6h)
                if (this['list'][c6h]['sid'] === c6g)
                    return this['list'][c6h];
            return null;
        }
        ;
    }
    ;
}
, function(ccp, ccq, ccr) {
    ccr['r'](ccq);
    var ccs = {};
    ccr['r'](ccs),
    ccr['d'](ccs, 'FunctionToString', function() {
        return cdj;
    }),
    ccr['d'](ccs, 'InboundFilters', function() {
        return cdK;
    });
    var cct = {};
    ccr['r'](cct),
    ccr['d'](cct, 'GlobalHandlers', function() {
        return cmu;
    }),
    ccr['d'](cct, 'TryCatch', function() {
        return ckE;
    }),
    ccr['d'](cct, 'Breadcrumbs', function() {
        return cl6;
    }),
    ccr['d'](cct, 'LinkedErrors', function() {
        return cmx;
    }),
    ccr['d'](cct, 'UserAgent', function() {
        return cmz;
    });
    var ccu = {};
    ccr['r'](ccu),
    ccr['d'](ccu, 'BaseTransport', function() {
        return ciM;
    }),
    ccr['d'](ccu, 'FetchTransport', function() {
        return ciO;
    }),
    ccr['d'](ccu, 'XHRTransport', function() {
        return ciP;
    });
    var ccv, ccw, ccx, ccy = ccr(0x0);
    (ccw = ccv || (ccv = {}))['Fatal'] = 'fatal',
    ccw['Error'] = 'error',
    ccw['Warning'] = 'warning',
    ccw['Log'] = 'log',
    ccw['Info'] = 'info',
    ccw['Debug'] = 'debug',
    ccw['Critical'] = 'critical',
    function(ccp) {
        ccp['fromString'] = function(ccq) {
            switch (ccq) {
            case 'debug':
                return ccp['Debug'];
            case 'info':
                return ccp['Info'];
            case 'warn':
            case 'warning':
                return ccp['Warning'];
            case 'error':
                return ccp['Error'];
            case 'fatal':
                return ccp['Fatal'];
            case 'critical':
                return ccp['Critical'];
            case 'log':
            default:
                return ccp['Log'];
            }
        }
        ;
    }(ccv || (ccv = {})),
    function(ccp) {
        ccp['Unknown'] = 'unknown',
        ccp['Skipped'] = 'skipped',
        ccp['Success'] = 'success',
        ccp['RateLimit'] = 'rate_limit',
        ccp['Invalid'] = 'invalid',
        ccp['Failed'] = 'failed';
    }(ccx || (ccx = {})),
    function(ccp) {
        ccp['fromHttpCode'] = function(ccq) {
            return 0xc8 <= ccq && 0x12c > ccq ? ccp['Success'] : 0x1ad === ccq ? ccp['RateLimit'] : 0x190 <= ccq && 0x1f4 > ccq ? ccp['Invalid'] : 0x1f4 <= ccq ? ccp['Failed'] : ccp['Unknown'];
        }
        ;
    }(ccx || (ccx = {}));
    var ccE = ccr(0x9);
    function ccF(ccp) {
        for (var ccq = [], ccr = 0x1; ccr < arguments['length']; ccr++)
            ccq[ccr - 0x1] = arguments[ccr];
        var ccs = Object(ccE['b'])();
        if (ccs && ccs[ccp])
            return ccs[ccp]['apply'](ccs, ccy['d'](ccq));
        throw new Error('No\x20hub\x20defined\x20or\x20' + ccp + '\x20was\x20not\x20found\x20on\x20the\x20hub,\x20please\x20open\x20a\x20bug\x20report.');
    }
    function ccK(ccp) {
        var ccq;
        try {
            throw new Error('Sentry\x20syntheticException');
        } catch (ccN) {
            ccq = ccN;
        }
        return ccF('captureException', ccp, {
            'originalException': ccp,
            'syntheticException': ccq
        });
    }
    function ccO(ccp, ccq) {
        var ccr;
        try {
            throw new Error(ccp);
        } catch (ccS) {
            ccr = ccS;
        }
        return ccF('captureMessage', ccp, ccq, {
            'originalException': ccp,
            'syntheticException': ccr
        });
    }
    function ccT(ccp) {
        return ccF('captureEvent', ccp);
    }
    function ccV(ccp) {
        ccF('configureScope', ccp);
    }
    function ccX(ccp) {
        ccF('addBreadcrumb', ccp);
    }
    function ccZ(ccp, ccq) {
        ccF('setContext', ccp, ccq);
    }
    function cd2(ccp) {
        ccF('setExtras', ccp);
    }
    function cd4(ccp) {
        ccF('setTags', ccp);
    }
    function cd6(ccp, ccq) {
        ccF('setExtra', ccp, ccq);
    }
    function cd9(ccp, ccq) {
        ccF('setTag', ccp, ccq);
    }
    function cdc(ccp) {
        ccF('setUser', ccp);
    }
    function cde(ccp) {
        ccF('withScope', ccp);
    }
    var cdg, cdh = ccr(0xa), cdi = ccr(0xd), cdj = function() {
        function ccp() {
            this['name'] = ccp['id'];
        }
        return ccp['prototype']['setupOnce'] = function() {
            cdg = Function['prototype']['toString'],
            Function['prototype']['toString'] = function() {
                for (var ccp = [], ccq = 0x0; ccq < arguments['length']; ccq++)
                    ccp[ccq] = arguments[ccq];
                var ccr = this['__sentry__'] ? this['__sentry_original__'] : this;
                return cdg['apply'](ccr, ccp);
            }
            ;
        }
        ,
        ccp['id'] = 'FunctionToString',
        ccp;
    }(), cdk = ccr(0x18), cdl = ccr(0x2), cdm = ccr(0x5);
    function cdr(ccp, ccq) {
        return void 0x0 === ccq && (ccq = 0x0),
        'string' != typeof ccp || 0x0 === ccq ? ccp : ccp['length'] <= ccq ? ccp : ccp['substr'](0x0, ccq) + '...';
    }
    function cdu(ccp, ccq) {
        if (!Array['isArray'](ccp))
            return '';
        for (var ccr, ccs = [], cct = 0x0; cct < ccp['length']; cct++) {
            ccr = ccp[cct];
            try {
                ccs['push'](ccr + '');
            } catch (cdA) {
                ccs['push']('[value\x20cannot\x20be\x20serialized]');
            }
        }
        return ccs['join'](ccq);
    }
    function cdB(ccp, ccq) {
        if (void 0x0 === ccq && (ccq = 0x28),
        !ccp['length'])
            return '[object\x20has\x20no\x20keys]';
        if (ccp[0x0]['length'] >= ccq)
            return cdr(ccp[0x0], ccq);
        for (var ccr, ccs = ccp['length']; 0x0 < ccs; ccs--)
            if (!((ccr = ccp['slice'](0x0, ccs)['join'](',\x20'))['length'] > ccq))
                return ccs === ccp['length'] ? ccr : cdr(ccr, ccq);
        return '';
    }
    function cdG(ccp, ccq) {
        return Object(cdm['g'])(ccq) ? ccq['test'](ccp) : !('string' != typeof ccq) && ccp['includes'](ccq);
    }
    var cdJ = [/^Script error\.?$/, /^Javascript error: Script error\.? on line 0$/]
      , cdK = function() {
        function ccp(ccq) {
            void 0x0 === ccq && (ccq = {}),
            this['_options'] = ccq,
            this['name'] = ccp['id'];
        }
        return ccp['prototype']['setupOnce'] = function() {
            Object(cdh['b'])(function(ccq) {
                var ccr = Object(ccE['b'])();
                if (!ccr)
                    return ccq;
                var ccs = ccr['getIntegration'](ccp);
                if (ccs) {
                    var cct = ccr['getClient']()
                      , ccu = cct ? cct['getOptions']() : {}
                      , ccv = ccs['_mergeOptions'](ccu);
                    if (ccs['_shouldDropEvent'](ccq, ccv))
                        return null;
                }
                return ccq;
            });
        }
        ,
        ccp['prototype']['_shouldDropEvent'] = function(ccp, ccq) {
            return this['_isSentryError'](ccp, ccq) ? (cdk['a']['warn']('Event\x20dropped\x20due\x20to\x20being\x20internal\x20Sentry\x20Error.\x0aEvent:\x20' + Object(cdl['d'])(ccp)),
            !0x0) : this['_isIgnoredError'](ccp, ccq) ? (cdk['a']['warn']('Event\x20dropped\x20due\x20to\x20being\x20matched\x20by\x20`ignoreErrors`\x20option.\x0aEvent:\x20' + Object(cdl['d'])(ccp)),
            !0x0) : this['_isBlacklistedUrl'](ccp, ccq) ? (cdk['a']['warn']('Event\x20dropped\x20due\x20to\x20being\x20matched\x20by\x20`blacklistUrls`\x20option.\x0aEvent:\x20' + Object(cdl['d'])(ccp) + '.\x0aUrl:\x20' + this['_getEventFilterUrl'](ccp)),
            !0x0) : !this['_isWhitelistedUrl'](ccp, ccq) && (cdk['a']['warn']('Event\x20dropped\x20due\x20to\x20not\x20being\x20matched\x20by\x20`whitelistUrls`\x20option.\x0aEvent:\x20' + Object(cdl['d'])(ccp) + '.\x0aUrl:\x20' + this['_getEventFilterUrl'](ccp)),
            !0x0);
        }
        ,
        ccp['prototype']['_isSentryError'] = function(ccp, ccq) {
            if (void 0x0 === ccq && (ccq = {}),
            !ccq['ignoreInternal'])
                return !0x1;
            try {
                return 'SentryError' === ccp['exception']['values'][0x0]['type'];
            } catch (ce4) {
                return !0x1;
            }
        }
        ,
        ccp['prototype']['_isIgnoredError'] = function(ccp, ccq) {
            return void 0x0 === ccq && (ccq = {}),
            !(!ccq['ignoreErrors'] || !ccq['ignoreErrors']['length']) && this['_getPossibleEventMessages'](ccp)['some'](function(ccp) {
                return ccq['ignoreErrors']['some'](function(ccq) {
                    return cdG(ccp, ccq);
                });
            });
        }
        ,
        ccp['prototype']['_isBlacklistedUrl'] = function(ccp, ccq) {
            if (void 0x0 === ccq && (ccq = {}),
            !ccq['blacklistUrls'] || !ccq['blacklistUrls']['length'])
                return !0x1;
            var ccr = this['_getEventFilterUrl'](ccp);
            return !!ccr && ccq['blacklistUrls']['some'](function(ccp) {
                return cdG(ccr, ccp);
            });
        }
        ,
        ccp['prototype']['_isWhitelistedUrl'] = function(ccp, ccq) {
            if (void 0x0 === ccq && (ccq = {}),
            !ccq['whitelistUrls'] || !ccq['whitelistUrls']['length'])
                return !0x0;
            var ccr = this['_getEventFilterUrl'](ccp);
            return !ccr || ccq['whitelistUrls']['some'](function(ccp) {
                return cdG(ccr, ccp);
            });
        }
        ,
        ccp['prototype']['_mergeOptions'] = function(ccp) {
            return void 0x0 === ccp && (ccp = {}),
            {
                'blacklistUrls': ccy['d'](this['_options']['blacklistUrls'] || [], ccp['blacklistUrls'] || []),
                'ignoreErrors': ccy['d'](this['_options']['ignoreErrors'] || [], ccp['ignoreErrors'] || [], cdJ),
                'ignoreInternal': void 0x0 === this['_options']['ignoreInternal'] || this['_options']['ignoreInternal'],
                'whitelistUrls': ccy['d'](this['_options']['whitelistUrls'] || [], ccp['whitelistUrls'] || [])
            };
        }
        ,
        ccp['prototype']['_getPossibleEventMessages'] = function(ccp) {
            if (ccp['message'])
                return [ccp['message']];
            if (ccp['exception'])
                try {
                    var ccq = ccp['exception']['values'][0x0]
                      , ccr = ccq['type']
                      , ccs = ccq['value'];
                    return ['' + ccs, ccr + ':\x20' + ccs];
                } catch (cem) {
                    return cdk['a']['error']('Cannot\x20extract\x20message\x20for\x20event\x20' + Object(cdl['d'])(ccp)),
                    [];
                }
            return [];
        }
        ,
        ccp['prototype']['_getEventFilterUrl'] = function(ccp) {
            try {
                if (ccp['stacktrace']) {
                    var ccq = ccp['stacktrace']['frames'];
                    return ccq[ccq['length'] - 0x1]['filename'];
                }
                if (ccp['exception']) {
                    var ccr = ccp['exception']['values'][0x0]['stacktrace']['frames'];
                    return ccr[ccr['length'] - 0x1]['filename'];
                }
                return null;
            } catch (ceq) {
                return cdk['a']['error']('Cannot\x20extract\x20url\x20for\x20event\x20' + Object(cdl['d'])(ccp)),
                null;
            }
        }
        ,
        ccp['id'] = 'InboundFilters',
        ccp;
    }()
      , cdL = ccr(0x6)
      , cdM = function(ccp) {
        function ccq(ccq) {
            var ccr = this['constructor']
              , ccs = ccp['call'](this, ccq) || this;
            return ccs['message'] = ccq,
            ccs['name'] = ccr['prototype']['constructor']['name'],
            Object['setPrototypeOf'](ccs, ccr['prototype']),
            ccs;
        }
        return ccy['b'](ccq, ccp),
        ccq;
    }(Error)
      , cdN = /^(?:(\w+):)\/\/(?:(\w+)(?::(\w+))?@)([\w\.-]+)(?::(\d+))?\/(.+)/
      , cdO = function() {
        function ccp(ccp) {
            'string' == typeof ccp ? this['_fromString'](ccp) : this['_fromComponents'](ccp),
            this['_validate']();
        }
        return ccp['prototype']['toString'] = function(ccp) {
            void 0x0 === ccp && (ccp = !0x1);
            var ccq = this
              , ccr = ccq['host']
              , ccs = ccq['path']
              , cct = ccq['pass']
              , ccu = ccq['port']
              , ccv = ccq['projectId'];
            return ccq['protocol'] + '://' + ccq['user'] + (ccp && cct ? ':' + cct : '') + '@' + ccr + (ccu ? ':' + ccu : '') + '/' + (ccs ? ccs + '/' : ccs) + ccv;
        }
        ,
        ccp['prototype']['_fromString'] = function(ccp) {
            var ccq = cdN['exec'](ccp);
            if (!ccq)
                throw new cdM('Invalid\x20Dsn');
            var ccr = ccy['c'](ccq['slice'](0x1), 0x6)
              , ccs = ccr[0x0]
              , cct = ccr[0x1]
              , ccu = ccr[0x2]
              , ccv = void 0x0 === ccu ? '' : ccu
              , ccw = ccr[0x3]
              , ccx = ccr[0x4]
              , ccE = void 0x0 === ccx ? '' : ccx
              , ccF = ''
              , ccK = ccr[0x5]
              , ccO = ccK['split']('/');
            0x1 < ccO['length'] && (ccF = ccO['slice'](0x0, -0x1)['join']('/'),
            ccK = ccO['pop']()),
            Object['assign'](this, {
                'host': ccw,
                'pass': ccv,
                'path': ccF,
                'projectId': ccK,
                'port': ccE,
                'protocol': ccs,
                'user': cct
            });
        }
        ,
        ccp['prototype']['_fromComponents'] = function(ccp) {
            this['protocol'] = ccp['protocol'],
            this['user'] = ccp['user'],
            this['pass'] = ccp['pass'] || '',
            this['host'] = ccp['host'],
            this['port'] = ccp['port'] || '',
            this['path'] = ccp['path'] || '',
            this['projectId'] = ccp['projectId'];
        }
        ,
        ccp['prototype']['_validate'] = function() {
            var ccp = this;
            if (['protocol', 'user', 'host', 'projectId']['forEach'](function(ccq) {
                if (!ccp[ccq])
                    throw new cdM('Invalid\x20Dsn');
            }),
            'http' !== this['protocol'] && 'https' !== this['protocol'])
                throw new cdM('Invalid\x20Dsn');
            if (this['port'] && Number['isNaN'](parseInt(this['port'], 0xa)))
                throw new cdM('Invalid\x20Dsn');
        }
        ,
        ccp;
    }()
      , cdP = function() {
        function ccp(ccp) {
            this['dsn'] = ccp,
            this['_dsnObject'] = new cdO(ccp);
        }
        return ccp['prototype']['getDsn'] = function() {
            return this['_dsnObject'];
        }
        ,
        ccp['prototype']['getStoreEndpoint'] = function() {
            return '' + this['_getBaseUrl']() + this['getStoreEndpointPath']();
        }
        ,
        ccp['prototype']['getStoreEndpointWithUrlEncodedAuth'] = function() {
            var ccp = {
                'sentry_key': this['_dsnObject']['user'],
                'sentry_version': '7'
            };
            return this['getStoreEndpoint']() + '?' + Object(cdL['d'])(ccp);
        }
        ,
        ccp['prototype']['_getBaseUrl'] = function() {
            var ccp = this['_dsnObject']
              , ccq = ccp['protocol'] ? ccp['protocol'] + ':' : ''
              , ccr = ccp['port'] ? ':' + ccp['port'] : '';
            return ccq + '//' + ccp['host'] + ccr;
        }
        ,
        ccp['prototype']['getStoreEndpointPath'] = function() {
            var ccp = this['_dsnObject'];
            return (ccp['path'] ? '/' + ccp['path'] : '') + '/api/' + ccp['projectId'] + '/store/';
        }
        ,
        ccp['prototype']['getRequestHeaders'] = function(ccp, ccq) {
            var ccr = this['_dsnObject']
              , ccs = ['Sentry\x20sentry_version=7'];
            return ccs['push']('sentry_timestamp=' + new Date()['getTime']()),
            ccs['push']('sentry_client=' + ccp + '/' + ccq),
            ccs['push']('sentry_key=' + ccr['user']),
            ccr['pass'] && ccs['push']('sentry_secret=' + ccr['pass']),
            {
                'Content-Type': 'application/json',
                'X-Sentry-Auth': ccs['join'](',\x20')
            };
        }
        ,
        ccp['prototype']['getReportDialogEndpoint'] = function(ccp) {
            void 0x0 === ccp && (ccp = {});
            var ccq = this['_dsnObject']
              , ccr = this['_getBaseUrl']() + (ccq['path'] ? '/' + ccq['path'] : '') + '/api/embed/error-page/'
              , ccs = [];
            for (var cct in ccs['push']('dsn=' + ccq['toString']()),
            ccp)
                if ('user' == cct) {
                    if (!ccp['user'])
                        continue;
                    ccp['user']['name'] && ccs['push']('name=' + encodeURIComponent(ccp['user']['name'])),
                    ccp['user']['email'] && ccs['push']('email=' + encodeURIComponent(ccp['user']['email']));
                } else
                    ccs['push'](encodeURIComponent(cct) + '=' + encodeURIComponent(ccp[cct]));
            return ccs['length'] ? ccr + '?' + ccs['join']('&') : ccr;
        }
        ,
        ccp;
    }()
      , cdQ = ccr(0x48)
      , cdR = [];
    function cfb(ccp) {
        var ccq = {};
        return function(ccp) {
            var ccq = ccp['defaultIntegrations'] && ccy['d'](ccp['defaultIntegrations']) || []
              , ccr = ccp['integrations']
              , ccs = [];
            if (Array['isArray'](ccr)) {
                var cct = ccr['map'](function(ccp) {
                    return ccp['name'];
                })
                  , ccu = [];
                ccq['forEach'](function(ccp) {
                    -0x1 === cct['indexOf'](ccp['name']) && -0x1 === ccu['indexOf'](ccp['name']) && (ccs['push'](ccp),
                    ccu['push'](ccp['name']));
                }),
                ccr['forEach'](function(ccp) {
                    -0x1 === ccu['indexOf'](ccp['name']) && (ccs['push'](ccp),
                    ccu['push'](ccp['name']));
                });
            } else {
                if ('function' != typeof ccr)
                    return ccy['d'](ccq);
                ccs = ccr(ccq),
                ccs = Array['isArray'](ccs) ? ccs : [ccs];
            }
            return ccs;
        }(ccp)['forEach'](function(ccp) {
            ccq[ccp['name']] = ccp,
            function(ccp) {
                -0x1 !== cdR['indexOf'](ccp['name']) || (ccp['setupOnce'](cdh['b'], ccE['b']),
                cdR['push'](ccp['name']),
                cdk['a']['log']('Integration\x20installed:\x20' + ccp['name']));
            }(ccp);
        }),
        ccq;
    }
    var cfp = function() {
        function ccp(ccp, ccq) {
            this['_processing'] = !0x1,
            this['_backend'] = new ccp(ccq),
            this['_options'] = ccq,
            ccq['dsn'] && (this['_dsn'] = new cdO(ccq['dsn'])),
            this['_integrations'] = cfb(this['_options']);
        }
        return ccp['prototype']['captureException'] = function(ccp, ccq, ccr) {
            var ccs = this
              , cct = ccq && ccq['event_id'];
            return this['_processing'] = !0x0,
            this['_getBackend']()['eventFromException'](ccp, ccq)['then'](function(ccp) {
                return ccs['_processEvent'](ccp, ccq, ccr);
            })['then'](function(ccp) {
                cct = ccp && ccp['event_id'],
                ccs['_processing'] = !0x1;
            })['catch'](function(ccp) {
                cdk['a']['error'](ccp),
                ccs['_processing'] = !0x1;
            }),
            cct;
        }
        ,
        ccp['prototype']['captureMessage'] = function(ccp, ccq, ccr, ccs) {
            var cct = this
              , ccu = ccr && ccr['event_id'];
            return this['_processing'] = !0x0,
            (Object(cdm['f'])(ccp) ? this['_getBackend']()['eventFromMessage']('' + ccp, ccq, ccr) : this['_getBackend']()['eventFromException'](ccp, ccr))['then'](function(ccp) {
                return cct['_processEvent'](ccp, ccr, ccs);
            })['then'](function(ccp) {
                ccu = ccp && ccp['event_id'],
                cct['_processing'] = !0x1;
            })['catch'](function(ccp) {
                cdk['a']['error'](ccp),
                cct['_processing'] = !0x1;
            }),
            ccu;
        }
        ,
        ccp['prototype']['captureEvent'] = function(ccp, ccq, ccr) {
            var ccs = this
              , cct = ccq && ccq['event_id'];
            return this['_processing'] = !0x0,
            this['_processEvent'](ccp, ccq, ccr)['then'](function(ccp) {
                cct = ccp && ccp['event_id'],
                ccs['_processing'] = !0x1;
            })['catch'](function(ccp) {
                cdk['a']['error'](ccp),
                ccs['_processing'] = !0x1;
            }),
            cct;
        }
        ,
        ccp['prototype']['getDsn'] = function() {
            return this['_dsn'];
        }
        ,
        ccp['prototype']['getOptions'] = function() {
            return this['_options'];
        }
        ,
        ccp['prototype']['flush'] = function(ccp) {
            var ccq = this;
            return this['_isClientProcessing'](ccp)['then'](function(ccr) {
                return ccq['_processingInterval'] && clearInterval(ccq['_processingInterval']),
                ccq['_getBackend']()['getTransport']()['close'](ccp)['then'](function(ccp) {
                    return ccr && ccp;
                });
            });
        }
        ,
        ccp['prototype']['close'] = function(ccp) {
            var ccq = this;
            return this['flush'](ccp)['then'](function(ccp) {
                return ccq['getOptions']()['enabled'] = !0x1,
                ccp;
            });
        }
        ,
        ccp['prototype']['getIntegrations'] = function() {
            return this['_integrations'] || {};
        }
        ,
        ccp['prototype']['getIntegration'] = function(ccp) {
            try {
                return this['_integrations'][ccp['id']] || null;
            } catch (cg1) {
                return cdk['a']['warn']('Cannot\x20retrieve\x20integration\x20' + ccp['id'] + '\x20from\x20the\x20current\x20Client'),
                null;
            }
        }
        ,
        ccp['prototype']['_isClientProcessing'] = function(ccp) {
            var ccq = this;
            return new Promise(function(ccr) {
                var ccs = 0x0;
                ccq['_processingInterval'] && clearInterval(ccq['_processingInterval']),
                ccq['_processingInterval'] = setInterval(function() {
                    ccq['_processing'] ? (ccs += 0x1,
                    ccp && ccs >= ccp && ccr(!0x1)) : ccr(!0x0);
                }, 0x1);
            }
            );
        }
        ,
        ccp['prototype']['_getBackend'] = function() {
            return this['_backend'];
        }
        ,
        ccp['prototype']['_isEnabled'] = function() {
            return !0x1 !== this['getOptions']()['enabled'] && void 0x0 !== this['_dsn'];
        }
        ,
        ccp['prototype']['_prepareEvent'] = function(ccp, ccq, ccr) {
            var ccs = this['getOptions']()
              , cct = ccs['environment']
              , ccu = ccs['release']
              , ccv = ccs['dist']
              , ccw = ccs['maxValueLength']
              , ccx = void 0x0 === ccw ? 0xfa : ccw
              , ccE = ccy['a']({}, ccp);
            void 0x0 === ccE['environment'] && void 0x0 !== cct && (ccE['environment'] = cct),
            void 0x0 === ccE['release'] && void 0x0 !== ccu && (ccE['release'] = ccu),
            void 0x0 === ccE['dist'] && void 0x0 !== ccv && (ccE['dist'] = ccv),
            ccE['message'] && (ccE['message'] = cdr(ccE['message'], ccx));
            var ccF = ccE['exception'] && ccE['exception']['values'] && ccE['exception']['values'][0x0];
            ccF && ccF['value'] && (ccF['value'] = cdr(ccF['value'], ccx));
            var ccK = ccE['request'];
            ccK && ccK['url'] && (ccK['url'] = cdr(ccK['url'], ccx)),
            void 0x0 === ccE['event_id'] && (ccE['event_id'] = Object(cdl['g'])()),
            this['_addIntegrations'](ccE['sdk']);
            var ccO = cdQ['a']['resolve'](ccE);
            return ccq && (ccO = ccq['applyToEvent'](ccE, ccr)),
            ccO;
        }
        ,
        ccp['prototype']['_addIntegrations'] = function(ccp) {
            var ccq = Object['keys'](this['_integrations']);
            ccp && 0x0 < ccq['length'] && (ccp['integrations'] = ccq);
        }
        ,
        ccp['prototype']['_processEvent'] = function(ccp, ccq, ccr) {
            var ccs = this
              , cct = this['getOptions']()
              , ccu = cct['beforeSend']
              , ccv = cct['sampleRate'];
            return this['_isEnabled']() ? 'number' == typeof ccv && Math['random']() > ccv ? cdQ['a']['reject']('This\x20event\x20has\x20been\x20sampled,\x20will\x20not\x20send\x20event.') : new cdQ['a'](function(cct, ccv) {
                ccs['_prepareEvent'](ccp, ccr, ccq)['then'](function(ccp) {
                    if (null !== ccp) {
                        var ccr = ccp;
                        try {
                            if (ccq && ccq['data'] && !0x0 === ccq['data']['__sentry__'] || !ccu)
                                return ccs['_getBackend']()['sendEvent'](ccr),
                                void cct(ccr);
                            var ccw = ccu(ccp, ccq);
                            if (void 0x0 === ccw)
                                cdk['a']['error']('`beforeSend`\x20method\x20has\x20to\x20return\x20`null`\x20or\x20a\x20valid\x20event.');
                            else if (Object(cdm['j'])(ccw))
                                ccs['_handleAsyncBeforeSend'](ccw, cct, ccv);
                            else {
                                if (null === (ccr = ccw))
                                    return cdk['a']['log']('`beforeSend`\x20returned\x20`null`,\x20will\x20not\x20send\x20event.'),
                                    void cct(null);
                                ccs['_getBackend']()['sendEvent'](ccr),
                                cct(ccr);
                            }
                        } catch (cgx) {
                            ccs['captureException'](cgx, {
                                'data': {
                                    '__sentry__': !0x0
                                },
                                'originalException': cgx
                            }),
                            ccv('`beforeSend`\x20throw\x20an\x20error,\x20will\x20not\x20send\x20event.');
                        }
                    } else
                        ccv('An\x20event\x20processor\x20returned\x20null,\x20will\x20not\x20send\x20event.');
                });
            }
            ) : cdQ['a']['reject']('SDK\x20not\x20enabled,\x20will\x20not\x20send\x20event.');
        }
        ,
        ccp['prototype']['_handleAsyncBeforeSend'] = function(ccp, ccq, ccr) {
            var ccs = this;
            ccp['then'](function(ccp) {
                return null === ccp ? void ccr('`beforeSend`\x20returned\x20`null`,\x20will\x20not\x20send\x20event.') : (ccs['_getBackend']()['sendEvent'](ccp),
                void ccq(ccp));
            })['catch'](function(ccp) {
                ccr('beforeSend\x20rejected\x20with\x20' + ccp);
            });
        }
        ,
        ccp;
    }()
      , cfq = function() {
        function ccp() {}
        return ccp['prototype']['sendEvent'] = function() {
            return Promise['resolve']({
                'reason': 'NoopTransport:\x20Event\x20has\x20been\x20skipped\x20because\x20no\x20Dsn\x20is\x20configured.',
                'status': ccx['Skipped']
            });
        }
        ,
        ccp['prototype']['close'] = function() {
            return Promise['resolve'](!0x0);
        }
        ,
        ccp;
    }()
      , cfr = function() {
        function ccp(ccp) {
            this['_options'] = ccp,
            this['_options']['dsn'] || cdk['a']['warn']('No\x20DSN\x20provided,\x20backend\x20will\x20not\x20do\x20anything.'),
            this['_transport'] = this['_setupTransport']();
        }
        return ccp['prototype']['_setupTransport'] = function() {
            return new cfq();
        }
        ,
        ccp['prototype']['eventFromException'] = function() {
            throw new cdM('Backend\x20has\x20to\x20implement\x20`eventFromException`\x20method');
        }
        ,
        ccp['prototype']['eventFromMessage'] = function() {
            throw new cdM('Backend\x20has\x20to\x20implement\x20`eventFromMessage`\x20method');
        }
        ,
        ccp['prototype']['sendEvent'] = function(ccp) {
            this['_transport']['sendEvent'](ccp)['catch'](function(ccp) {
                cdk['a']['error']('Error\x20while\x20sending\x20event:\x20' + ccp);
            });
        }
        ,
        ccp['prototype']['getTransport'] = function() {
            return this['_transport'];
        }
        ,
        ccp;
    }();
    function cgJ() {
        if (!('fetch'in Object(cdl['e'])()))
            return !0x1;
        try {
            return new Headers(),
            new Request(''),
            new Response(),
            !0x0;
        } catch (cgK) {
            return !0x1;
        }
    }
    function cgL() {
        if (!cgJ())
            return !0x1;
        try {
            return new Request('_',{
                'referrerPolicy': 'origin'
            }),
            !0x0;
        } catch (cgM) {
            return !0x1;
        }
    }
    /**
 * TraceKit - Cross brower stack traces
 *
 * This was originally forked from github.com/occ/TraceKit, but has since been
 * largely modified and is now maintained as part of Sentry JS SDK.
 *
 * NOTE: Last merge with upstream repository
 * Jul 11,2018 - #f03357c
 *
 * https://github.com/csnover/TraceKit
 * @license MIT
 * @namespace TraceKit
 */
    /**
 * TraceKit - Cross brower stack traces
 *
 * This was originally forked from github.com/occ/TraceKit, but has since been
 * largely modified and is now maintained as part of Sentry JS SDK.
 *
 * NOTE: Last merge with upstream repository
 * Jul 11,2018 - #f03357c
 *
 * https://github.com/csnover/TraceKit
 * @license MIT
 * @namespace TraceKit
 */
    var cgN = Object(cdl['e'])()
      , cgO = {
        '_report': !0x1,
        '_collectWindowErrors': !0x1,
        '_computeStackTrace': !0x1,
        '_linesOfContext': !0x1
    }
      , cgP = '?'
      , cgQ = /^(?:[Uu]ncaught (?:exception: )?)?(?:((?:Eval|Internal|Range|Reference|Syntax|Type|URI|)Error): )?(.*)$/;
    function cgR(ccp, ccq) {
        return Object['prototype']['hasOwnProperty']['call'](ccp, ccq);
    }
    function cgU() {
        return 'undefined' == typeof document || null == document['location'] ? '' : document['location']['href'];
    }
    cgO['_report'] = function() {
        function ccp(ccp, ccq, ccr) {
            var ccs = null;
            if (!ccq || cgO['_collectWindowErrors']) {
                for (var cct in ccw)
                    if (cgR(ccw, cct))
                        try {
                            ccw[cct](ccp, ccq, ccr);
                        } catch (ch1) {
                            ccs = ch1;
                        }
                if (ccs)
                    throw ccs;
            }
        }
        function ccq(ccq, ccr, cct, ccv, ccw) {
            var ccx = null;
            if (ccw = Object(cdm['d'])(ccw) ? ccw['error'] : ccw,
            ccq = Object(cdm['d'])(ccq) ? ccq['message'] : ccq,
            ccE)
                cgO['_computeStackTrace']['_augmentStackTraceWithInitialElement'](ccE, ccr, cct, ccq),
                ccs();
            else if (ccw && Object(cdm['c'])(ccw))
                (ccx = cgO['_computeStackTrace'](ccw))['mechanism'] = 'onerror',
                ccp(ccx, !0x0, ccw);
            else {
                var ccF, ccK = {
                    'url': ccr,
                    'line': cct,
                    'column': ccv
                }, ccO = ccq;
                if ('[object\x20String]' === {}['toString']['call'](ccq)) {
                    var ccT = ccq['match'](cgQ);
                    ccT && (ccF = ccT[0x1],
                    ccO = ccT[0x2]);
                }
                ccK['func'] = cgP,
                ccK['context'] = null,
                ccp(ccx = {
                    'name': ccF,
                    'message': ccO,
                    'mode': 'onerror',
                    'mechanism': 'onerror',
                    'stack': [ccy['a']({}, ccK, {
                        'url': ccK['url'] || cgU()
                    })]
                }, !0x0, null);
            }
            return !!ccu && ccu['apply'](this, arguments);
        }
        function ccr(ccq) {
            var ccr = ccq && (ccq['detail'] ? ccq['detail']['reason'] : ccq['reason']) || ccq
              , ccs = cgO['_computeStackTrace'](ccr);
            ccs['mechanism'] = 'onunhandledrejection',
            ccs['message'] || (ccs['message'] = JSON['stringify'](Object(cdL['b'])(ccr))),
            ccp(ccs, !0x0, ccr);
        }
        function ccs() {
            var ccq = ccE
              , ccr = ccx;
            ccE = null,
            ccx = null,
            ccp(ccq, !0x1, ccr);
        }
        function cct(ccp) {
            if (ccE) {
                if (ccx === ccp)
                    return;
                ccs();
            }
            var ccq = cgO['_computeStackTrace'](ccp);
            throw ccE = ccq,
            ccx = ccp,
            setTimeout(function() {
                ccx === ccp && ccs();
            }, ccq['incomplete'] ? 0x7d0 : 0x0),
            ccp;
        }
        var ccu, ccv, ccw = [], ccx = null, ccE = null;
        return cct['_subscribe'] = function(ccp) {
            ccw['push'](ccp);
        }
        ,
        cct['_installGlobalHandler'] = function() {
            !0x0 === ccv || (ccu = cgN['onerror'],
            cgN['onerror'] = ccq,
            ccv = !0x0);
        }
        ,
        cct['_installGlobalUnhandledRejectionHandler'] = function() {
            cgN['onunhandledrejection'] = ccr;
        }
        ,
        cct;
    }(),
    cgO['_computeStackTrace'] = function() {
        function ccp(ccp) {
            if (!ccp || !ccp['stack'])
                return null;
            for (var ccq, ccr, ccs, cct = /^\s*at (?:(.*?) ?\()?((?:file|https?|blob|chrome-extension|native|eval|webpack|<anonymous>|[a-z]:|\/).*?)(?::(\d+))?(?::(\d+))?\)?\s*$/i, ccu = /^\s*(.*?)(?:\((.*?)\))?(?:^|@)?((?:file|https?|blob|chrome|webpack|resource|moz-extension).*?:\/.*?|\[native code\]|[^@]*(?:bundle|\d+\.js))(?::(\d+))?(?::(\d+))?\s*$/i, ccv = /^\s*at (?:((?:\[object object\])?.+) )?\(?((?:file|ms-appx|https?|webpack|blob):.*?):(\d+)(?::(\d+))?\)?\s*$/i, ccw = /(\S+) line (\d+)(?: > eval line \d+)* > eval/i, ccx = /\((\S*)(?::(\d+))(?::(\d+))\)/, ccy = ccp['stack']['split']('\x0a'), ccE = [], ccF = /^(.*) is undefined$/['exec'](ccp['message']), ccK = 0x0, ccO = ccy['length']; ccK < ccO; ++ccK) {
                if (ccr = cct['exec'](ccy[ccK])) {
                    var ccT = ccr[0x2] && 0x0 === ccr[0x2]['indexOf']('native');
                    ccr[0x2] && 0x0 === ccr[0x2]['indexOf']('eval') && (ccq = ccx['exec'](ccr[0x2])) && (ccr[0x2] = ccq[0x1],
                    ccr[0x3] = ccq[0x2],
                    ccr[0x4] = ccq[0x3]),
                    ccs = {
                        'url': ccr[0x2],
                        'func': ccr[0x1] || cgP,
                        'args': ccT ? [ccr[0x2]] : [],
                        'line': ccr[0x3] ? +ccr[0x3] : null,
                        'column': ccr[0x4] ? +ccr[0x4] : null
                    };
                } else if (ccr = ccv['exec'](ccy[ccK]))
                    ccs = {
                        'url': ccr[0x2],
                        'func': ccr[0x1] || cgP,
                        'args': [],
                        'line': +ccr[0x3],
                        'column': ccr[0x4] ? +ccr[0x4] : null
                    };
                else {
                    if (!(ccr = ccu['exec'](ccy[ccK])))
                        continue;
                    ccr[0x3] && -0x1 < ccr[0x3]['indexOf']('\x20>\x20eval') && (ccq = ccw['exec'](ccr[0x3])) ? (ccr[0x1] = ccr[0x1] || 'eval',
                    ccr[0x3] = ccq[0x1],
                    ccr[0x4] = ccq[0x2],
                    ccr[0x5] = '') : 0x0 == ccK && !ccr[0x5] && void 0x0 !== ccp['columnNumber'] && (ccE[0x0]['column'] = ccp['columnNumber'] + 0x1),
                    ccs = {
                        'url': ccr[0x3],
                        'func': ccr[0x1] || cgP,
                        'args': ccr[0x2] ? ccr[0x2]['split'](',') : [],
                        'line': ccr[0x4] ? +ccr[0x4] : null,
                        'column': ccr[0x5] ? +ccr[0x5] : null
                    };
                }
                !ccs['func'] && ccs['line'] && (ccs['func'] = cgP),
                ccs['context'] = null,
                ccE['push'](ccs);
            }
            return ccE['length'] ? (ccE[0x0] && ccE[0x0]['line'] && !ccE[0x0]['column'] && ccF && (ccE[0x0]['column'] = null),
            {
                'mode': 'stack',
                'name': ccp['name'],
                'message': ccp['message'],
                'stack': ccE
            }) : null;
        }
        function ccq(ccp, ccq, ccr, ccs) {
            var cct = {
                'url': ccq,
                'line': ccr
            };
            if (cct['url'] && cct['line']) {
                if (ccp['incomplete'] = !0x1,
                cct['func'] || (cct['func'] = cgP),
                cct['context'] || (cct['context'] = null),
                / '([^']+)' /['exec'](ccs) && (cct['column'] = null),
                0x0 < ccp['stack']['length'] && ccp['stack'][0x0]['url'] === cct['url']) {
                    if (ccp['stack'][0x0]['line'] === cct['line'])
                        return !0x1;
                    if (!ccp['stack'][0x0]['line'] && ccp['stack'][0x0]['func'] === cct['func'])
                        return ccp['stack'][0x0]['line'] = cct['line'],
                        ccp['stack'][0x0]['context'] = cct['context'],
                        !0x1;
                }
                return ccp['stack']['unshift'](cct),
                ccp['partial'] = !0x0,
                !0x0;
            }
            return ccp['incomplete'] = !0x0,
            !0x1;
        }
        function ccr(ccp, ccs) {
            for (var cct, ccu, ccv = /function\s+([_$a-zA-Z\xA0-\uFFFF][_$a-zA-Z0-9\xA0-\uFFFF]*)?\s*\(/i, ccw = [], ccx = {}, ccy = !0x1, ccE = ccr['caller']; ccE && !ccy; ccE = ccE['caller'])
                if (ccE !== cix && ccE !== cgO['_report']) {
                    if (ccu = {
                        'url': null,
                        'func': cgP,
                        'args': [],
                        'line': null,
                        'column': null
                    },
                    ccE['name'] ? ccu['func'] = ccE['name'] : (cct = ccv['exec'](ccE['toString']())) && (ccu['func'] = cct[0x1]),
                    void 0x0 === ccu['func'])
                        try {
                            ccu['func'] = cct['input']['substring'](0x0, cct['input']['indexOf']('{'));
                        } catch (chZ) {}
                    ccx['' + ccE] ? ccy = !0x0 : ccx['' + ccE] = !0x0,
                    ccw['push'](ccu);
                }
            ccs && ccw['splice'](0x0, ccs);
            var ccF = {
                'mode': 'callers',
                'name': ccp['name'],
                'message': ccp['message'],
                'stack': ccw
            };
            return ccq(ccF, ccp['sourceURL'] || ccp['fileName'], ccp['line'] || ccp['lineNumber'], ccp['message'] || ccp['description']),
            ccF;
        }
        function ccs(ccq, ccs) {
            var cct = null;
            ccs = null == ccs ? 0x0 : +ccs;
            try {
                if (cct = function(ccp) {
                    var ccq = ccp['stacktrace'];
                    if (ccq) {
                        for (var ccr, ccs, cct = / line (\d+).*script (?:in )?(\S+)(?:: in function (\S+))?$/i, ccu = / line (\d+), column (\d+)\s*(?:in (?:<anonymous function: ([^>]+)>|([^\)]+))\((.*)\))? in (.*):\s*$/i, ccv = ccq['split']('\x0a'), ccw = [], ccx = 0x0; ccx < ccv['length']; ccx += 0x2)
                            ccs = null,
                            (ccr = cct['exec'](ccv[ccx])) ? ccs = {
                                'url': ccr[0x2],
                                'line': +ccr[0x1],
                                'column': null,
                                'func': ccr[0x3],
                                'args': []
                            } : (ccr = ccu['exec'](ccv[ccx])) && (ccs = {
                                'url': ccr[0x6],
                                'line': +ccr[0x1],
                                'column': +ccr[0x2],
                                'func': ccr[0x3] || ccr[0x4],
                                'args': ccr[0x5] ? ccr[0x5]['split'](',') : []
                            }),
                            ccs && (!ccs['func'] && ccs['line'] && (ccs['func'] = cgP),
                            ccs['line'] && (ccs['context'] = null),
                            !ccs['context'] && (ccs['context'] = [ccv[ccx + 0x1]]),
                            ccw['push'](ccs));
                        return ccw['length'] ? {
                            'mode': 'stacktrace',
                            'name': ccp['name'],
                            'message': ccp['message'],
                            'stack': ccw
                        } : null;
                    }
                }(ccq))
                    return cct;
            } catch (cie) {}
            try {
                if (cct = ccp(ccq))
                    return cct;
            } catch (cif) {}
            try {
                if (cct = function(ccp) {
                    var ccq = ccp['message']['split']('\x0a');
                    if (0x4 > ccq['length'])
                        return null;
                    var ccr, ccs = /^\s*Line (\d+) of linked script ((?:file|https?|blob)\S+)(?:: in function (\S+))?\s*$/i, cct = /^\s*Line (\d+) of inline#(\d+) script in ((?:file|https?|blob)\S+)(?:: in function (\S+))?\s*$/i, ccu = /^\s*Line (\d+) of function script\s*$/i, ccv = [], ccw = cgN && cgN['document'] && cgN['document']['getElementsByTagName']('script'), ccx = [];
                    for (var ccy in ccw)
                        cgR(ccw, ccy) && !ccw[ccy]['src'] && ccx['push'](ccw[ccy]);
                    for (var ccE, ccF = 0x2; ccF < ccq['length']; ccF += 0x2)
                        ccE = null,
                        (ccr = ccs['exec'](ccq[ccF])) ? ccE = {
                            'url': ccr[0x2],
                            'func': ccr[0x3],
                            'args': [],
                            'line': +ccr[0x1],
                            'column': null
                        } : (ccr = cct['exec'](ccq[ccF])) ? ccE = {
                            'url': ccr[0x3],
                            'func': ccr[0x4],
                            'args': [],
                            'line': +ccr[0x1],
                            'column': null
                        } : (ccr = ccu['exec'](ccq[ccF])) && (ccE = {
                            'url': cgU()['replace'](/#.*$/, ''),
                            'func': '',
                            'args': [],
                            'line': ccr[0x1],
                            'column': null
                        }),
                        ccE && (!ccE['func'] && (ccE['func'] = cgP),
                        ccE['context'] = [ccq[ccF + 0x1]],
                        ccv['push'](ccE));
                    return ccv['length'] ? {
                        'mode': 'multiline',
                        'name': ccp['name'],
                        'message': ccq[0x0],
                        'stack': ccv
                    } : null;
                }(ccq))
                    return cct;
            } catch (cis) {}
            try {
                if (cct = ccr(ccq, ccs + 0x1))
                    return cct;
            } catch (cit) {}
            return {
                'original': ccq,
                'name': ccq['name'],
                'message': ccq['message'],
                'mode': 'failed'
            };
        }
        return ccs['_augmentStackTraceWithInitialElement'] = ccq,
        ccs['_computeStackTraceFromStackProp'] = ccp,
        ccs;
    }(),
    cgO['_collectWindowErrors'] = !0x0,
    cgO['_linesOfContext'] = 0xb;
    var ciu = cgO['_report']['_subscribe']
      , civ = cgO['_report']['_installGlobalHandler']
      , ciw = cgO['_report']['_installGlobalUnhandledRejectionHandler']
      , cix = cgO['_computeStackTrace']
      , ciy = 0x32;
    function ciz(ccp) {
        var ccq = ciF(ccp['stack'])
          , ccr = {
            'type': ccp['name'],
            'value': ccp['message']
        };
        return ccq && ccq['length'] && (ccr['stacktrace'] = {
            'frames': ccq
        }),
        void 0x0 === ccr['type'] && '' === ccr['value'] && (ccr['value'] = 'Unrecoverable\x20error\x20caught'),
        ccr;
    }
    function ciD(ccp) {
        return {
            'exception': {
                'values': [ciz(ccp)]
            }
        };
    }
    function ciF(ccp) {
        if (!ccp || !ccp['length'])
            return [];
        var ccq = ccp
          , ccr = ccq[0x0]['func'] || ''
          , ccs = ccq[ccq['length'] - 0x1]['func'] || '';
        return (ccr['includes']('captureMessage') || ccr['includes']('captureException')) && (ccq = ccq['slice'](0x1)),
        ccs['includes']('sentryWrapped') && (ccq = ccq['slice'](0x0, -0x1)),
        ccq['map'](function(ccp) {
            return {
                'colno': ccp['column'],
                'filename': ccp['url'] || ccq[0x0]['url'],
                'function': ccp['func'] || '?',
                'in_app': !0x0,
                'lineno': ccp['line']
            };
        })['slice'](0x0, ciy)['reverse']();
    }
    var ciL = function() {
        function ccp(ccp) {
            this['_limit'] = ccp,
            this['_buffer'] = [];
        }
        return ccp['prototype']['isReady'] = function() {
            return void 0x0 === this['_limit'] || this['length']() < this['_limit'];
        }
        ,
        ccp['prototype']['add'] = function(ccp) {
            var ccq = this;
            return this['isReady']() ? (-0x1 === this['_buffer']['indexOf'](ccp) && this['_buffer']['push'](ccp),
            ccp['then'](function() {
                return ccq['remove'](ccp);
            })['catch'](function() {
                return ccq['remove'](ccp)['catch'](function() {});
            }),
            ccp) : Promise['reject'](new cdM('Not\x20adding\x20Promise\x20due\x20to\x20buffer\x20limit\x20reached.'));
        }
        ,
        ccp['prototype']['remove'] = function(ccp) {
            return this['_buffer']['splice'](this['_buffer']['indexOf'](ccp), 0x1)[0x0];
        }
        ,
        ccp['prototype']['length'] = function() {
            return this['_buffer']['length'];
        }
        ,
        ccp['prototype']['drain'] = function(ccp) {
            var ccq = this;
            return new Promise(function(ccr) {
                var ccs = setTimeout(function() {
                    ccp && 0x0 < ccp && ccr(!0x1);
                }, ccp);
                Promise['all'](ccq['_buffer'])['then'](function() {
                    clearTimeout(ccs),
                    ccr(!0x0);
                })['catch'](function() {
                    ccr(!0x0);
                });
            }
            );
        }
        ,
        ccp;
    }()
      , ciM = function() {
        function ccp(ccp) {
            this['options'] = ccp,
            this['_buffer'] = new ciL(0x1e),
            this['url'] = new cdP(this['options']['dsn'])['getStoreEndpointWithUrlEncodedAuth']();
        }
        return ccp['prototype']['sendEvent'] = function() {
            throw new cdM('Transport\x20Class\x20has\x20to\x20implement\x20`sendEvent`\x20method');
        }
        ,
        ccp['prototype']['close'] = function(ccp) {
            return this['_buffer']['drain'](ccp);
        }
        ,
        ccp;
    }()
      , ciN = Object(cdl['e'])()
      , ciO = function(ccp) {
        function ccq() {
            return null !== ccp && ccp['apply'](this, arguments) || this;
        }
        return ccy['b'](ccq, ccp),
        ccq['prototype']['sendEvent'] = function(ccp) {
            var ccq = {
                'body': JSON['stringify'](ccp),
                'method': 'POST',
                'referrerPolicy': cgL() ? 'origin' : ''
            };
            return this['_buffer']['add'](ciN['fetch'](this['url'], ccq)['then'](function(ccp) {
                return {
                    'status': ccx['fromHttpCode'](ccp['status'])
                };
            }));
        }
        ,
        ccq;
    }(ciM)
      , ciP = function(ccp) {
        function ccq() {
            return null !== ccp && ccp['apply'](this, arguments) || this;
        }
        return ccy['b'](ccq, ccp),
        ccq['prototype']['sendEvent'] = function(ccp) {
            var ccq = this;
            return this['_buffer']['add'](new Promise(function(ccr, ccs) {
                var cct = new XMLHttpRequest();
                cct['onreadystatechange'] = function() {
                    0x4 !== cct['readyState'] || (0xc8 === cct['status'] && ccr({
                        'status': ccx['fromHttpCode'](cct['status'])
                    }),
                    ccs(cct));
                }
                ,
                cct['open']('POST', ccq['url']),
                cct['send'](JSON['stringify'](ccp));
            }
            ));
        }
        ,
        ccq;
    }(ciM)
      , ciQ = function(ccp) {
        function ccq() {
            return null !== ccp && ccp['apply'](this, arguments) || this;
        }
        return ccy['b'](ccq, ccp),
        ccq['prototype']['_setupTransport'] = function() {
            if (!this['_options']['dsn'])
                return ccp['prototype']['_setupTransport']['call'](this);
            var ccq = this['_options']['transportOptions'] ? this['_options']['transportOptions'] : {
                'dsn': this['_options']['dsn']
            };
            return this['_options']['transport'] ? new this['_options']['transport'](ccq) : cgJ() ? new ciO(ccq) : new ciP(ccq);
        }
        ,
        ccq['prototype']['eventFromException'] = function(ccp, ccq) {
            var ccr, ccs = this;
            if (Object(cdm['d'])(ccp) && ccp['error'])
                return ccp = ccp['error'],
                ccr = ciD(cix(ccp)),
                cdQ['a']['resolve'](this['_buildEvent'](ccr, ccq));
            if (Object(cdm['a'])(ccp) || Object(cdm['b'])(ccp)) {
                var cct = ccp
                  , ccu = cct['name'] || (Object(cdm['a'])(cct) ? 'DOMError' : 'DOMException')
                  , ccw = cct['message'] ? ccu + ':\x20' + cct['message'] : ccu;
                return this['eventFromMessage'](ccw, ccv['Error'], ccq)['then'](function(ccp) {
                    return Object(cdl['a'])(ccp, ccw),
                    cdQ['a']['resolve'](ccs['_buildEvent'](ccp, ccq));
                });
            }
            if (Object(cdm['c'])(ccp))
                return ccr = ciD(cix(ccp)),
                cdQ['a']['resolve'](this['_buildEvent'](ccr, ccq));
            if (Object(cdm['e'])(ccp) && ccq && ccq['syntheticException'])
                return ccr = function(ccp, ccq) {
                    var ccr = Object['keys'](ccp)['sort']()
                      , ccs = {
                        'extra': {
                            '__serialized__': Object(cdL['c'])(ccp)
                        },
                        'message': 'Non-Error\x20exception\x20captured\x20with\x20keys:\x20' + cdB(ccr)
                    };
                    if (ccq) {
                        var cct = ciF(cix(ccq)['stack']);
                        ccs['stacktrace'] = {
                            'frames': cct
                        };
                    }
                    return ccs;
                }(ccp, ccq['syntheticException']),
                Object(cdl['a'])(ccr, 'Custom\x20Object', void 0x0, {
                    'handled': !0x0,
                    'synthetic': !0x0,
                    'type': 'generic'
                }),
                ccr['level'] = ccv['Error'],
                cdQ['a']['resolve'](this['_buildEvent'](ccr, ccq));
            var ccx = ccp;
            return this['eventFromMessage'](ccx, void 0x0, ccq)['then'](function(ccp) {
                return Object(cdl['a'])(ccp, '' + ccx, void 0x0, {
                    'handled': !0x0,
                    'synthetic': !0x0,
                    'type': 'generic'
                }),
                ccp['level'] = ccv['Error'],
                cdQ['a']['resolve'](ccs['_buildEvent'](ccp, ccq));
            });
        }
        ,
        ccq['prototype']['_buildEvent'] = function(ccp, ccq) {
            return ccy['a']({}, ccp, {
                'event_id': ccq && ccq['event_id']
            });
        }
        ,
        ccq['prototype']['eventFromMessage'] = function(ccp, ccq, ccr) {
            void 0x0 === ccq && (ccq = ccv['Info']);
            var ccs = {
                'event_id': ccr && ccr['event_id'],
                'level': ccq,
                'message': ccp
            };
            if (this['_options']['attachStacktrace'] && ccr && ccr['syntheticException']) {
                var cct = ciF(cix(ccr['syntheticException'])['stack']);
                ccs['stacktrace'] = {
                    'frames': cct
                };
            }
            return cdQ['a']['resolve'](ccs);
        }
        ,
        ccq;
    }(cfr)
      , ciR = 'sentry.javascript.browser'
      , ciS = function(ccp) {
        function ccq(ccq) {
            return void 0x0 === ccq && (ccq = {}),
            ccp['call'](this, ciQ, ccq) || this;
        }
        return ccy['b'](ccq, ccp),
        ccq['prototype']['_prepareEvent'] = function(ccq, ccr, ccs) {
            return ccq['platform'] = ccq['platform'] || 'javascript',
            ccq['sdk'] = ccy['a']({}, ccq['sdk'], {
                'name': ciR,
                'packages': ccy['d'](ccq['sdk'] && ccq['sdk']['packages'] || [], [{
                    'name': 'npm:@sentry/browser',
                    'version': '5.4.3'
                }]),
                'version': '5.4.3'
            }),
            ccp['prototype']['_prepareEvent']['call'](this, ccq, ccr, ccs);
        }
        ,
        ccq['prototype']['showReportDialog'] = function(ccp) {
            void 0x0 === ccp && (ccp = {});
            var ccq = Object(cdl['e'])()['document'];
            if (ccq) {
                if (!this['_isEnabled']())
                    return void cdk['a']['error']('Trying\x20to\x20call\x20showReportDialog\x20with\x20Sentry\x20Client\x20is\x20disabled');
                var ccr = ccp['dsn'] || this['getDsn']();
                if (!ccp['eventId'])
                    return void cdk['a']['error']('Missing\x20`eventId`\x20option\x20in\x20showReportDialog\x20call');
                if (!ccr)
                    return void cdk['a']['error']('Missing\x20`Dsn`\x20option\x20in\x20showReportDialog\x20call');
                var ccs = ccq['createElement']('script');
                ccs['async'] = !0x0,
                ccs['src'] = new cdP(ccr)['getReportDialogEndpoint'](ccp),
                ccp['onLoad'] && (ccs['onload'] = ccp['onLoad']),
                (ccq['head'] || ccq['body'])['appendChild'](ccs);
            }
        }
        ,
        ccq;
    }(cfp);
    var cjQ, cjR, cjS = 0x3e8, cjT = 0x0;
    function cjU(ccp, ccq, ccr) {
        if (void 0x0 === ccq && (ccq = {}),
        'function' != typeof ccp)
            return ccp;
        try {
            if (ccp['__sentry__'])
                return ccp;
            if (ccp['__sentry_wrapped__'])
                return ccp['__sentry_wrapped__'];
        } catch (cjY) {
            return ccp;
        }
        var ccs = function() {
            ccr && 'function' == typeof ccr && ccr['apply'](this, arguments);
            var ccs = Array['prototype']['slice']['call'](arguments);
            try {
                var cct = ccs['map'](function(ccp) {
                    return cjU(ccp, ccq);
                });
                return ccp['handleEvent'] ? ccp['handleEvent']['apply'](this, cct) : ccp['apply'](this, cct);
            } catch (ck3) {
                throw cjT += 0x1,
                setTimeout(function() {
                    cjT -= 0x1;
                }),
                cde(function(ccr) {
                    ccr['addEventProcessor'](function(ck3) {
                        var ccr = ccy['a']({}, ck3);
                        return ccq['mechanism'] && Object(cdl['a'])(ccr, void 0x0, void 0x0, ccq['mechanism']),
                        ccr['extra'] = ccy['a']({}, ccr['extra'], {
                            'arguments': Object(cdL['b'])(ccs, 0x3)
                        }),
                        ccr;
                    }),
                    ccK(ck3);
                }),
                ck3;
            }
        };
        try {
            for (var cct in ccp)
                Object['prototype']['hasOwnProperty']['call'](ccp, cct) && (ccs[cct] = ccp[cct]);
        } catch (ck8) {}
        ccp['prototype'] = ccp['prototype'] || {},
        ccs['prototype'] = ccp['prototype'],
        Object['defineProperty'](ccp, '__sentry_wrapped__', {
            'enumerable': !0x1,
            'value': ccs
        }),
        Object['defineProperties'](ccs, {
            '__sentry__': {
                'enumerable': !0x1,
                'value': !0x0
            },
            '__sentry_original__': {
                'enumerable': !0x1,
                'value': ccp
            }
        });
        try {
            Object['getOwnPropertyDescriptor'](ccs, 'name')['configurable'] && Object['defineProperty'](ccs, 'name', {
                'get': function() {
                    return ccp['name'];
                }
            });
        } catch (ck9) {}
        return ccs;
    }
    var cka = 0x0;
    function ckb(ccp, ccq) {
        return void 0x0 === ccq && (ccq = !0x1),
        function(ccr) {
            if (cjQ = void 0x0,
            ccr && cjR !== ccr) {
                cjR = ccr;
                var ccs = function() {
                    var ccq;
                    try {
                        ccq = ccr['target'] ? ckn(ccr['target']) : ckn(ccr);
                    } catch (ckh) {
                        ccq = '<unknown>';
                    }
                    0x0 === ccq['length'] || Object(ccE['b'])()['addBreadcrumb']({
                        'category': 'ui.' + ccp,
                        'message': ccq
                    }, {
                        'event': ccr,
                        'name': ccp
                    });
                };
                cka && clearTimeout(cka),
                ccq ? cka = setTimeout(ccs) : ccs();
            }
        }
        ;
    }
    function cki() {
        return function(ccp) {
            var ccq;
            try {
                ccq = ccp['target'];
            } catch (ckl) {
                return;
            }
            var ccr = ccq && ccq['tagName'];
            ccr && ('INPUT' === ccr || 'TEXTAREA' === ccr || ccq['isContentEditable']) && (!cjQ && ckb('input')(ccp),
            clearTimeout(cjQ),
            cjQ = setTimeout(function() {
                cjQ = void 0x0;
            }, cjS));
        }
        ;
    }
    function ckn(ccp) {
        for (var ccq, ccr = ccp, ccs = [], cct = 0x0, ccu = 0x0, ccv = '\x20>\x20'['length']; ccr && cct++ < 0x5 && !('html' === (ccq = ckv(ccr)) || 0x1 < cct && ccu + ccs['length'] * ccv + ccq['length'] >= 0x50); )
            ccs['push'](ccq),
            ccu += ccq['length'],
            ccr = ccr['parentNode'];
        return ccs['reverse']()['join']('\x20>\x20');
    }
    function ckv(ccp) {
        var ccq, ccr, ccs, cct, ccu, ccv = [];
        if (!ccp || !ccp['tagName'])
            return '';
        if (ccv['push'](ccp['tagName']['toLowerCase']()),
        ccp['id'] && ccv['push']('#' + ccp['id']),
        (ccq = ccp['className']) && Object(cdm['h'])(ccq))
            for (ccr = ccq['split'](/\s+/),
            ccu = 0x0; ccu < ccr['length']; ccu++)
                ccv['push']('.' + ccr[ccu]);
        var ccw = ['type', 'name', 'title', 'alt'];
        for (ccu = 0x0; ccu < ccw['length']; ccu++)
            ccs = ccw[ccu],
            (cct = ccp['getAttribute'](ccs)) && ccv['push']('[' + ccs + '=\x22' + cct + '\x22]');
        return ccv['join']('');
    }
    var ckE = function() {
        function ccp() {
            this['_ignoreOnError'] = 0x0,
            this['name'] = ccp['id'];
        }
        return ccp['prototype']['_wrapTimeFunction'] = function(ccp) {
            return function() {
                for (var ccq = [], ccr = 0x0; ccr < arguments['length']; ccr++)
                    ccq[ccr] = arguments[ccr];
                var ccs = ccq[0x0];
                return ccq[0x0] = cjU(ccs, {
                    'mechanism': {
                        'data': {
                            'function': cl1(ccp)
                        },
                        'handled': !0x0,
                        'type': 'instrument'
                    }
                }),
                ccp['apply'](this, ccq);
            }
            ;
        }
        ,
        ccp['prototype']['_wrapRAF'] = function(ccp) {
            return function(ccq) {
                return ccp(cjU(ccq, {
                    'mechanism': {
                        'data': {
                            'function': 'requestAnimationFrame',
                            'handler': cl1(ccp)
                        },
                        'handled': !0x0,
                        'type': 'instrument'
                    }
                }));
            }
            ;
        }
        ,
        ccp['prototype']['_wrapEventTarget'] = function(ccp) {
            var ccq = Object(cdl['e'])()
              , ccr = ccq[ccp] && ccq[ccp]['prototype'];
            ccr && ccr['hasOwnProperty'] && ccr['hasOwnProperty']('addEventListener') && (Object(cdL['a'])(ccr, 'addEventListener', function(ccq) {
                return function(ccr, ccs, cct) {
                    try {
                        ccs['handleEvent'] = cjU(ccs['handleEvent']['bind'](ccs), {
                            'mechanism': {
                                'data': {
                                    'function': 'handleEvent',
                                    'handler': cl1(ccs),
                                    'target': ccp
                                },
                                'handled': !0x0,
                                'type': 'instrument'
                            }
                        });
                    } catch (ckT) {}
                    return ccq['call'](this, ccr, cjU(ccs, {
                        'mechanism': {
                            'data': {
                                'function': 'addEventListener',
                                'handler': cl1(ccs),
                                'target': ccp
                            },
                            'handled': !0x0,
                            'type': 'instrument'
                        }
                    }), cct);
                }
                ;
            }),
            Object(cdL['a'])(ccr, 'removeEventListener', function(ccp) {
                return function(ccq, ccr, ccs) {
                    var cct = ccr;
                    try {
                        cct = cct && (cct['__sentry_wrapped__'] || cct);
                    } catch (ckZ) {}
                    return ccp['call'](this, ccq, cct, ccs);
                }
                ;
            }));
        }
        ,
        ccp['prototype']['setupOnce'] = function() {
            this['_ignoreOnError'] = this['_ignoreOnError'];
            var ccp = Object(cdl['e'])();
            Object(cdL['a'])(ccp, 'setTimeout', this['_wrapTimeFunction']['bind'](this)),
            Object(cdL['a'])(ccp, 'setInterval', this['_wrapTimeFunction']['bind'](this)),
            Object(cdL['a'])(ccp, 'requestAnimationFrame', this['_wrapRAF']['bind'](this)),
            ['EventTarget', 'Window', 'Node', 'ApplicationCache', 'AudioTrackList', 'ChannelMergerNode', 'CryptoOperation', 'EventSource', 'FileReader', 'HTMLUnknownElement', 'IDBDatabase', 'IDBRequest', 'IDBTransaction', 'KeyOperation', 'MediaController', 'MessagePort', 'ModalWindow', 'Notification', 'SVGElementInstance', 'Screen', 'TextTrack', 'TextTrackCue', 'TextTrackList', 'WebSocket', 'WebSocketWorker', 'Worker', 'XMLHttpRequest', 'XMLHttpRequestEventTarget', 'XMLHttpRequestUpload']['forEach'](this['_wrapEventTarget']['bind'](this));
        }
        ,
        ccp['id'] = 'TryCatch',
        ccp;
    }();
    function cl1(ccp) {
        try {
            return ccp && ccp['name'] || '<anonymous>';
        } catch (cl3) {
            return '<anonymous>';
        }
    }
    var cl4, cl5 = Object(cdl['e'])(), cl6 = function() {
        function ccp(ccq) {
            this['name'] = ccp['id'],
            this['_options'] = ccy['a']({
                'console': !0x0,
                'dom': !0x0,
                'fetch': !0x0,
                'history': !0x0,
                'sentry': !0x0,
                'xhr': !0x0
            }, ccq);
        }
        return ccp['prototype']['_instrumentConsole'] = function() {
            'console'in cl5 && ['debug', 'info', 'warn', 'error', 'log', 'assert']['forEach'](function(ccq) {
                ccq in cl5['console'] && Object(cdL['a'])(cl5['console'], ccq, function(ccr) {
                    return function() {
                        for (var ccs = [], cct = 0x0; cct < arguments['length']; cct++)
                            ccs[cct] = arguments[cct];
                        var ccu = {
                            'category': 'console',
                            'data': {
                                'extra': {
                                    'arguments': Object(cdL['b'])(ccs, 0x3)
                                },
                                'logger': 'console'
                            },
                            'level': ccv['fromString'](ccq),
                            'message': cdu(ccs, '\x20')
                        };
                        'assert' === ccq && !0x1 === ccs[0x0] && (ccu['message'] = 'Assertion\x20failed:\x20' + (cdu(ccs['slice'](0x1), '\x20') || 'console.assert'),
                        ccu['data']['extra']['arguments'] = Object(cdL['b'])(ccs['slice'](0x1), 0x3)),
                        ccp['addBreadcrumb'](ccu, {
                            'input': ccs,
                            'level': ccq
                        }),
                        ccr && Function['prototype']['apply']['call'](ccr, cl5['console'], ccs);
                    }
                    ;
                });
            });
        }
        ,
        ccp['prototype']['_instrumentDOM'] = function() {
            'document'in cl5 && (cl5['document']['addEventListener']('click', ckb('click'), !0x1),
            cl5['document']['addEventListener']('keypress', cki(), !0x1),
            ['EventTarget', 'Node']['forEach'](function(ccp) {
                var ccq = cl5[ccp] && cl5[ccp]['prototype'];
                ccq && ccq['hasOwnProperty'] && ccq['hasOwnProperty']('addEventListener') && (Object(cdL['a'])(ccq, 'addEventListener', function(ccp) {
                    return function(ccq, ccr, ccs) {
                        return ccr && ccr['handleEvent'] ? ('click' === ccq && Object(cdL['a'])(ccr, 'handleEvent', function(ccp) {
                            return function(ccq) {
                                return ckb('click')(ccq),
                                ccp['call'](this, ccq);
                            }
                            ;
                        }),
                        'keypress' === ccq && Object(cdL['a'])(ccr, 'handleEvent', cki())) : ('click' === ccq && ckb('click', !0x0)(this),
                        'keypress' === ccq && cki()(this)),
                        ccp['call'](this, ccq, ccr, ccs);
                    }
                    ;
                }),
                Object(cdL['a'])(ccq, 'removeEventListener', function(ccp) {
                    return function(ccq, ccr, ccs) {
                        var cct = ccr;
                        try {
                            cct = cct && (cct['__sentry_wrapped__'] || cct);
                        } catch (clr) {}
                        return ccp['call'](this, ccq, cct, ccs);
                    }
                    ;
                }));
            }));
        }
        ,
        ccp['prototype']['_instrumentFetch'] = function() {
            (function() {
                if (!cgJ())
                    return !0x1;
                var ccp = function(ccp) {
                    return -0x1 !== ccp['toString']()['indexOf']('native');
                }
                  , ccq = Object(cdl['e'])()
                  , ccr = null
                  , ccs = ccq['document'];
                if (ccs) {
                    var cct = ccs['createElement']('iframe');
                    cct['hidden'] = !0x0;
                    try {
                        ccs['head']['appendChild'](cct),
                        cct['contentWindow'] && cct['contentWindow']['fetch'] && (ccr = ccp(cct['contentWindow']['fetch'])),
                        ccs['head']['removeChild'](cct);
                    } catch (cly) {
                        cdk['a']['warn']('Could\x20not\x20create\x20sandbox\x20iframe\x20for\x20pure\x20fetch\x20check,\x20bailing\x20to\x20window.fetch:\x20', cly);
                    }
                }
                return null === ccr && (ccr = ccp(ccq['fetch'])),
                ccr;
            }() && Object(cdL['a'])(cl5, 'fetch', function(ccq) {
                return function() {
                    for (var ccr = [], ccs = 0x0; ccs < arguments['length']; ccs++)
                        ccr[ccs] = arguments[ccs];
                    var cct, ccu = ccr[0x0], ccw = 'GET';
                    'string' == typeof ccu ? cct = ccu : 'Request'in cl5 && ccu instanceof Request ? (cct = ccu['url'],
                    ccu['method'] && (ccw = ccu['method'])) : cct = ccu + '',
                    ccr[0x1] && ccr[0x1]['method'] && (ccw = ccr[0x1]['method']);
                    var ccx = Object(ccE['b'])()['getClient']()
                      , ccy = ccx && ccx['getDsn']();
                    if (ccy) {
                        var ccF = new cdP(ccy)['getStoreEndpoint']();
                        if (ccF && cct['includes'](ccF))
                            return 'POST' === ccw && ccr[0x1] && ccr[0x1]['body'] && cmq(ccr[0x1]['body']),
                            ccq['apply'](cl5, ccr);
                    }
                    var ccK = {
                        'method': ccw,
                        'url': cct
                    };
                    return ccq['apply'](cl5, ccr)['then'](function(ccq) {
                        return ccK['status_code'] = ccq['status'],
                        ccp['addBreadcrumb']({
                            'category': 'fetch',
                            'data': ccK,
                            'type': 'http'
                        }, {
                            'input': ccr,
                            'response': ccq
                        }),
                        ccq;
                    })['catch'](function(ccq) {
                        throw ccp['addBreadcrumb']({
                            'category': 'fetch',
                            'data': ccK,
                            'level': ccv['Error'],
                            'type': 'http'
                        }, {
                            'error': ccq,
                            'input': ccr
                        }),
                        ccq;
                    });
                }
                ;
            }));
        }
        ,
        ccp['prototype']['_instrumentHistory'] = function() {
            function ccq(ccp) {
                return function() {
                    for (var ccq = [], ccr = 0x0; ccr < arguments['length']; ccr++)
                        ccq[ccr] = arguments[ccr];
                    var cct = 0x2 < ccq['length'] ? ccq[0x2] : void 0x0;
                    return cct && ccs(cl4, cct + ''),
                    ccp['apply'](this, ccq);
                }
                ;
            }
            var ccr = this;
            if (function() {
                var ccp = Object(cdl['e'])()
                  , ccq = ccp['chrome']
                  , ccr = ccq && ccq['app'] && ccq['app']['runtime']
                  , ccs = 'history'in ccp && !!ccp['history']['pushState'] && !!ccp['history']['replaceState'];
                return !ccr && ccs;
            }()) {
                var ccs = function(ccq, ccr) {
                    var ccs = Object(cdl['f'])(cl5['location']['href'])
                      , cct = Object(cdl['f'])(ccr)
                      , ccu = Object(cdl['f'])(ccq);
                    ccu['path'] || (ccu = ccs),
                    cl4 = ccr,
                    ccs['protocol'] === cct['protocol'] && ccs['host'] === cct['host'] && (ccr = cct['relative']),
                    ccs['protocol'] === ccu['protocol'] && ccs['host'] === ccu['host'] && (ccq = ccu['relative']),
                    ccp['addBreadcrumb']({
                        'category': 'navigation',
                        'data': {
                            'from': ccq,
                            'to': ccr
                        }
                    });
                }
                  , cct = cl5['onpopstate'];
                cl5['onpopstate'] = function() {
                    for (var ccp = [], ccq = 0x0; ccq < arguments['length']; ccq++)
                        ccp[ccq] = arguments[ccq];
                    var ccu = cl5['location']['href'];
                    if (ccs(cl4, ccu),
                    cct)
                        return cct['apply'](ccr, ccp);
                }
                ,
                Object(cdL['a'])(cl5['history'], 'pushState', ccq),
                Object(cdL['a'])(cl5['history'], 'replaceState', ccq);
            }
        }
        ,
        ccp['prototype']['_instrumentXHR'] = function() {
            if ('XMLHttpRequest'in cl5) {
                var ccq = XMLHttpRequest['prototype'];
                Object(cdL['a'])(ccq, 'open', function(ccp) {
                    return function() {
                        for (var ccq = [], ccr = 0x0; ccr < arguments['length']; ccr++)
                            ccq[ccr] = arguments[ccr];
                        var ccs = ccq[0x1];
                        this['__sentry_xhr__'] = {
                            'method': ccq[0x0],
                            'url': ccq[0x1]
                        };
                        var cct = Object(ccE['b'])()['getClient']()
                          , ccu = cct && cct['getDsn']();
                        if (ccu) {
                            var ccv = new cdP(ccu)['getStoreEndpoint']();
                            Object(cdm['h'])(ccs) && ccv && ccs['includes'](ccv) && (this['__sentry_own_request__'] = !0x0);
                        }
                        return ccp['apply'](this, ccq);
                    }
                    ;
                }),
                Object(cdL['a'])(ccq, 'send', function(ccq) {
                    return function() {
                        function ccr() {
                            if (0x4 === ccu['readyState']) {
                                if (ccu['__sentry_own_request__'])
                                    return;
                                try {
                                    ccu['__sentry_xhr__'] && (ccu['__sentry_xhr__']['status_code'] = ccu['status']);
                                } catch (cmf) {}
                                ccp['addBreadcrumb']({
                                    'category': 'xhr',
                                    'data': ccu['__sentry_xhr__'],
                                    'type': 'http'
                                }, {
                                    'xhr': ccu
                                });
                            }
                        }
                        for (var ccs = [], cct = 0x0; cct < arguments['length']; cct++)
                            ccs[cct] = arguments[cct];
                        var ccu = this;
                        return ccu['__sentry_own_request__'] && cmq(ccs[0x0]),
                        ['onload', 'onerror', 'onprogress']['forEach'](function(ccp) {
                            !function(ccp, ccq) {
                                ccp in ccq && 'function' == typeof ccq[ccp] && Object(cdL['a'])(ccq, ccp, function(ccq) {
                                    return cjU(ccq, {
                                        'mechanism': {
                                            'data': {
                                                'function': ccp,
                                                'handler': ccq && ccq['name'] || '<anonymous>'
                                            },
                                            'handled': !0x0,
                                            'type': 'instrument'
                                        }
                                    });
                                });
                            }(ccp, ccu);
                        }),
                        'onreadystatechange'in ccu && 'function' == typeof ccu['onreadystatechange'] ? Object(cdL['a'])(ccu, 'onreadystatechange', function(ccp) {
                            return cjU(ccp, {
                                'mechanism': {
                                    'data': {
                                        'function': 'onreadystatechange',
                                        'handler': ccp && ccp['name'] || '<anonymous>'
                                    },
                                    'handled': !0x0,
                                    'type': 'instrument'
                                }
                            }, ccr);
                        }) : ccu['onreadystatechange'] = ccr,
                        ccq['apply'](this, ccs);
                    }
                    ;
                });
            }
        }
        ,
        ccp['addBreadcrumb'] = function(ccq, ccr) {
            Object(ccE['b'])()['getIntegration'](ccp) && Object(ccE['b'])()['addBreadcrumb'](ccq, ccr);
        }
        ,
        ccp['prototype']['setupOnce'] = function() {
            this['_options']['console'] && this['_instrumentConsole'](),
            this['_options']['dom'] && this['_instrumentDOM'](),
            this['_options']['xhr'] && this['_instrumentXHR'](),
            this['_options']['fetch'] && this['_instrumentFetch'](),
            this['_options']['history'] && this['_instrumentHistory']();
        }
        ,
        ccp['id'] = 'Breadcrumbs',
        ccp;
    }();
    function cmq(ccp) {
        try {
            var ccq = JSON['parse'](ccp);
            cl6['addBreadcrumb']({
                'category': 'sentry',
                'event_id': ccq['event_id'],
                'level': ccq['level'] || ccv['fromString']('error'),
                'message': Object(cdl['d'])(ccq)
            }, {
                'event': ccq
            });
        } catch (cmt) {
            cdk['a']['error']('Error\x20while\x20adding\x20sentry\x20type\x20breadcrumb');
        }
    }
    var cmu = function() {
        function ccp(ccq) {
            this['name'] = ccp['id'],
            this['_options'] = ccy['a']({
                'onerror': !0x0,
                'onunhandledrejection': !0x0
            }, ccq);
        }
        return ccp['prototype']['setupOnce'] = function() {
            Error['stackTraceLimit'] = 0x32,
            ciu(function(ccq, ccr, ccs) {
                if (!(0x0 < cjT)) {
                    var cct = Object(ccE['b'])()['getIntegration'](ccp);
                    cct && Object(ccE['b'])()['captureEvent'](cct['_eventFromGlobalHandler'](ccq), {
                        'data': {
                            'stack': ccq
                        },
                        'originalException': ccs
                    });
                }
            }),
            this['_options']['onerror'] && (cdk['a']['log']('Global\x20Handler\x20attached:\x20onerror'),
            civ()),
            this['_options']['onunhandledrejection'] && (cdk['a']['log']('Global\x20Handler\x20attached:\x20onunhandledrejection'),
            ciw());
        }
        ,
        ccp['prototype']['_eventFromGlobalHandler'] = function(ccp) {
            if (!Object(cdm['h'])(ccp['message']) && 'onunhandledrejection' !== ccp['mechanism']) {
                var ccq = ccp['message'];
                ccp['message'] = ccq['error'] && Object(cdm['h'])(ccq['error']['message']) ? ccq['error']['message'] : 'No\x20error\x20message';
            }
            var ccr = ciD(ccp)
              , ccs = {
                'mode': ccp['mode']
            };
            ccp['message'] && (ccs['message'] = ccp['message']),
            ccp['name'] && (ccs['name'] = ccp['name']);
            var cct = Object(ccE['b'])()['getClient']()
              , ccu = cct && cct['getOptions']()['maxValueLength'] || 0xfa
              , ccv = ccp['original'] ? cdr(JSON['stringify'](Object(cdL['b'])(ccp['original'])), ccu) : ''
              , ccw = 'onunhandledrejection' === ccp['mechanism'] ? 'UnhandledRejection' : 'Error';
            return Object(cdl['a'])(ccr, ccv, ccw, {
                'data': ccs,
                'handled': !0x1,
                'type': ccp['mechanism']
            }),
            ccr;
        }
        ,
        ccp['id'] = 'GlobalHandlers',
        ccp;
    }()
      , cmv = 'cause'
      , cmw = 0x5
      , cmx = function() {
        function ccp(ccq) {
            void 0x0 === ccq && (ccq = {}),
            this['name'] = ccp['id'],
            this['_key'] = ccq['key'] || cmv,
            this['_limit'] = ccq['limit'] || cmw;
        }
        return ccp['prototype']['setupOnce'] = function() {
            Object(cdh['b'])(function(ccq, ccr) {
                var ccs = Object(ccE['b'])()['getIntegration'](ccp);
                return ccs ? ccs['_handler'](ccq, ccr) : ccq;
            });
        }
        ,
        ccp['prototype']['_handler'] = function(ccp, ccq) {
            if (!(ccp['exception'] && ccp['exception']['values'] && ccq && ccq['originalException']instanceof Error))
                return ccp;
            var ccr = this['_walkErrorTree'](ccq['originalException'], this['_key']);
            return ccp['exception']['values'] = ccy['d'](ccr, ccp['exception']['values']),
            ccp;
        }
        ,
        ccp['prototype']['_walkErrorTree'] = function(ccp, ccq, ccr) {
            if (void 0x0 === ccr && (ccr = []),
            !(ccp[ccq]instanceof Error) || ccr['length'] + 0x1 >= this['_limit'])
                return ccr;
            var ccs = ciz(cix(ccp[ccq]));
            return this['_walkErrorTree'](ccp[ccq], ccq, ccy['d']([ccs], ccr));
        }
        ,
        ccp['id'] = 'LinkedErrors',
        ccp;
    }()
      , cmy = Object(cdl['e'])()
      , cmz = function() {
        function ccp() {
            this['name'] = ccp['id'];
        }
        return ccp['prototype']['setupOnce'] = function() {
            Object(cdh['b'])(function(ccq) {
                if (Object(ccE['b'])()['getIntegration'](ccp)) {
                    if (!cmy['navigator'] || !cmy['location'])
                        return ccq;
                    var ccr = ccq['request'] || {};
                    return ccr['url'] = ccr['url'] || cmy['location']['href'],
                    ccr['headers'] = ccr['headers'] || {},
                    ccr['headers']['User-Agent'] = cmy['navigator']['userAgent'],
                    ccy['a']({}, ccq, {
                        'request': ccr
                    });
                }
                return ccq;
            });
        }
        ,
        ccp['id'] = 'UserAgent',
        ccp;
    }()
      , cmA = [new ccs['InboundFilters'](), new ccs['FunctionToString'](), new ckE(), new cl6(), new cmu(), new cmx(), new cmz()];
    function cn4(ccp) {
        void 0x0 === ccp && (ccp = {}),
        void 0x0 === ccp['defaultIntegrations'] && (ccp['defaultIntegrations'] = cmA),
        function(ccp, ccq) {
            !0x0 === ccq['debug'] && cdk['a']['enable'](),
            Object(ccE['b'])()['bindClient'](new ccp(ccq));
        }(ciS, ccp);
    }
    function cn8(ccp) {
        void 0x0 === ccp && (ccp = {}),
        ccp['eventId'] || (ccp['eventId'] = Object(ccE['b'])()['lastEventId']());
        var ccq = Object(ccE['b'])()['getClient']();
        ccq && ccq['showReportDialog'](ccp);
    }
    function cnb() {
        return Object(ccE['b'])()['lastEventId']();
    }
    function cnc() {}
    function cnd(ccp) {
        ccp();
    }
    function cnf(ccp) {
        var ccq = Object(ccE['b'])()['getClient']();
        return ccq ? ccq['flush'](ccp) : Promise['reject'](!0x1);
    }
    function cni(ccp) {
        var ccq = Object(ccE['b'])()['getClient']();
        return ccq ? ccq['close'](ccp) : Promise['reject'](!0x1);
    }
    function cnl(ccp) {
        cjU(ccp)();
    }
    ccr['d'](ccq, 'Integrations', function() {
        return cnp;
    }),
    ccr['d'](ccq, 'Severity', function() {
        return ccv;
    }),
    ccr['d'](ccq, 'Status', function() {
        return ccx;
    }),
    ccr['d'](ccq, 'addGlobalEventProcessor', function() {
        return cdh['b'];
    }),
    ccr['d'](ccq, 'addBreadcrumb', function() {
        return ccX;
    }),
    ccr['d'](ccq, 'captureException', function() {
        return ccK;
    }),
    ccr['d'](ccq, 'captureEvent', function() {
        return ccT;
    }),
    ccr['d'](ccq, 'captureMessage', function() {
        return ccO;
    }),
    ccr['d'](ccq, 'configureScope', function() {
        return ccV;
    }),
    ccr['d'](ccq, 'getHubFromCarrier', function() {
        return ccE['c'];
    }),
    ccr['d'](ccq, 'getCurrentHub', function() {
        return ccE['b'];
    }),
    ccr['d'](ccq, 'Hub', function() {
        return ccE['a'];
    }),
    ccr['d'](ccq, 'Scope', function() {
        return cdh['a'];
    }),
    ccr['d'](ccq, 'setContext', function() {
        return ccZ;
    }),
    ccr['d'](ccq, 'setExtra', function() {
        return cd6;
    }),
    ccr['d'](ccq, 'setExtras', function() {
        return cd2;
    }),
    ccr['d'](ccq, 'setTag', function() {
        return cd9;
    }),
    ccr['d'](ccq, 'setTags', function() {
        return cd4;
    }),
    ccr['d'](ccq, 'setUser', function() {
        return cdc;
    }),
    ccr['d'](ccq, 'Span', function() {
        return cdi['a'];
    }),
    ccr['d'](ccq, 'withScope', function() {
        return cde;
    }),
    ccr['d'](ccq, 'BrowserClient', function() {
        return ciS;
    }),
    ccr['d'](ccq, 'defaultIntegrations', function() {
        return cmA;
    }),
    ccr['d'](ccq, 'forceLoad', function() {
        return cnc;
    }),
    ccr['d'](ccq, 'init', function() {
        return cn4;
    }),
    ccr['d'](ccq, 'lastEventId', function() {
        return cnb;
    }),
    ccr['d'](ccq, 'onLoad', function() {
        return cnd;
    }),
    ccr['d'](ccq, 'showReportDialog', function() {
        return cn8;
    }),
    ccr['d'](ccq, 'flush', function() {
        return cnf;
    }),
    ccr['d'](ccq, 'close', function() {
        return cni;
    }),
    ccr['d'](ccq, 'wrap', function() {
        return cnl;
    }),
    ccr['d'](ccq, 'SDK_NAME', function() {
        return ciR;
    }),
    ccr['d'](ccq, 'SDK_VERSION', function() {
        return '5.4.3';
    }),
    ccr['d'](ccq, 'Transports', function() {
        return ccu;
    });
    var cnn = {}
      , cno = Object(cdl['e'])();
    cno['Sentry'] && cno['Sentry']['Integrations'] && (cnn = cno['Sentry']['Integrations']);
    var cnp = ccy['a']({}, cnn, ccs, cct);
}
, function(cnq, cnr, cns) {
    cns['d'](cnr, 'a', function() {
        return cnw;
    });
    var cnt, cnu, cnv = cns(0x5);
    (cnu = cnt || (cnt = {}))['PENDING'] = 'PENDING',
    cnu['RESOLVED'] = 'RESOLVED',
    cnu['REJECTED'] = 'REJECTED';
    var cnw = function() {
        function cnq(cnq) {
            var cnr = this;
            this['_state'] = cnt['PENDING'],
            this['_handlers'] = [],
            this['_resolve'] = function(cnq) {
                cnr['_setResult'](cnq, cnt['RESOLVED']);
            }
            ,
            this['_reject'] = function(cnq) {
                cnr['_setResult'](cnq, cnt['REJECTED']);
            }
            ,
            this['_setResult'] = function(cnq, cns) {
                return cnr['_state'] === cnt['PENDING'] ? Object(cnv['j'])(cnq) ? void cnq['then'](cnr['_resolve'], cnr['_reject']) : (cnr['_value'] = cnq,
                cnr['_state'] = cns,
                void cnr['_executeHandlers']()) : void 0x0;
            }
            ,
            this['_executeHandlers'] = function() {
                if (cnr['_state'] !== cnt['PENDING'])
                    return cnr['_state'] === cnt['REJECTED'] ? cnr['_handlers']['forEach'](function(cnq) {
                        return cnq['onFail'] && cnq['onFail'](cnr['_value']);
                    }) : cnr['_handlers']['forEach'](function(cnq) {
                        return cnq['onSuccess'] && cnq['onSuccess'](cnr['_value']);
                    }),
                    void (cnr['_handlers'] = []);
            }
            ,
            this['_attachHandler'] = function(cnq) {
                cnr['_handlers'] = cnr['_handlers']['concat'](cnq),
                cnr['_executeHandlers']();
            }
            ;
            try {
                cnq(this['_resolve'], this['_reject']);
            } catch (cnH) {
                this['_reject'](cnH);
            }
        }
        return cnq['prototype']['then'] = function(cnr, cns) {
            var cnt = this;
            return new cnq(function(cnq, cnu) {
                cnt['_attachHandler']({
                    'onFail': function(cnr) {
                        if (cns)
                            try {
                                return void cnq(cns(cnr));
                            } catch (cnO) {
                                return void cnu(cnO);
                            }
                        else
                            cnu(cnr);
                    },
                    'onSuccess': function(cns) {
                        if (cnr)
                            try {
                                return void cnq(cnr(cns));
                            } catch (cnQ) {
                                return void cnu(cnQ);
                            }
                        else
                            cnq(cns);
                    }
                });
            }
            );
        }
        ,
        cnq['prototype']['catch'] = function(cnq) {
            return this['then'](function(cnq) {
                return cnq;
            }, cnq);
        }
        ,
        cnq['prototype']['toString'] = function() {
            return '[object\x20SyncPromise]';
        }
        ,
        cnq['resolve'] = function(cnr) {
            return new cnq(function(cnq) {
                cnq(cnr);
            }
            );
        }
        ,
        cnq['reject'] = function(cnr) {
            return new cnq(function(cnq, cns) {
                cns(cnr);
            }
            );
        }
        ,
        cnq;
    }();
}
, function(cnY, cnZ) {
    cnY['exports'] = function(cnY, cnZ) {
        var co2;
        this['sounds'] = [],
        this['listener'] = {},
        this['rate'] = 0x1,
        this['setVolume'] = function(cnY) {
            Howler['volume'](cnY);
        }
        ,
        this['getSound'] = function(cnY, cnZ) {
            var co6 = cnY + (cnZ || '') + (window['activeHacker'] ? 'hckd' : '');
            (co2 = this['sounds'][co6]) || (co2 = new Howl({
                'src': '.././sound/' + (window['activeHacker'] ? 'fart_0' : cnY) + '.mp3'
            }),
            this['sounds'][co6] = co2);
        }
        ,
        this['play'] = function(cnY, cnZ, co9, coa) {
            if (this['getSound'](cnY),
            this['rate'] && (!co9 || !co2['isPlaying'])) {
                co2['isPlaying'] = !0x0;
                var cob = co2['play']();
                co2['volume'](cnZ || 0x1, cob),
                co2['loop'](co9, cob),
                co2['rate']((coa || 0x1) * this['rate'], cob);
            }
        }
        ,
        this['stop'] = function(cnY) {
            this['getSound'](cnY),
            co2 && (co2['isPlaying'] = !0x1,
            co2['stop']());
        }
        ,
        this['play3Dv'] = function(cod, coe, cof, cog, coh, coi, coj, cok) {
            var col = 0x1 - cnY['getDistance3D'](coe, cof, cog, cok['x'], cok['y'], cok['z']) / coh;
            if (0.1 < col) {
                this['getSound'](cod, '3dv');
                var com = co2['play']();
                coi = (coi || 0x1) * col * cnZ['otherSoundMlt'],
                co2['volume'](coi, com),
                co2['rate'](coj || 0x1, com);
            }
        }
        ,
        this['play3D'] = function(cnY, coo, cop, coq, cor, cos, cot, cou) {
            this['getSound'](cnY, '3d');
            var cov = co2['play']();
            0.05 < (cor = (cor || 0x1) * cnZ['otherSoundMlt']) && (co2['volume'](cor, cov),
            co2['rate'](cos || 0x1, cov),
            co2['pos'](coo, cop, coq, cov),
            co2['pannerAttr']({
                'refDistance': cot || 0x19,
                'rolloffFactor': cou || 0x1
            }, cov));
        }
        ;
    }
    ;
}
, function(cow, cox, coy) {
    var coz = coy(0x4)
      , coA = coy(0x8)
      , coB = coy(0x17)
      , coC = new coz['Vector3']()
      , coD = coB['generateCube'](null, 0x1, 0x1, 0x1, {})
      , coE = function(cow) {
        this['mesh'] = new coz['Mesh'](coD),
        this['init'] = function(cox) {
            this['dst'] = cox['dst'],
            this['spd'] = cox['spd'],
            this['xS'] = cox['xS'],
            this['zS'] = cox['zS'],
            this['yS'] = cox['yS'],
            this['scale'] = 0.45,
            this['len'] = 0x0,
            this['mesh']['material'] = cow['getMat']('default', {
                'mat': coz['MeshBasicMaterial'],
                'color': 0xededed,
                'transparent': !0x0,
                'opacity': 0.21
            });
            var coy = cox['mesh']['position']['x']
              , coA = cox['mesh']['position']['y']
              , coB = cox['mesh']['position']['z'];
            cow['moveMesh'](this['mesh'], coy, coA, coB),
            this['mesh']['lookAt'](coy + this['xS'], coA + this['yS'], coB + this['zS']),
            this['mesh']['rotateX'](Math['PI'] / 0x2),
            cow['scaleMesh'](this['mesh'], this['scale'], this['len'], this['scale']),
            this['mesh']['visible'] = !0x0;
        }
        ,
        this['update'] = function(cox) {
            this['mesh']['visible'] && (this['len'] < this['dst'] && (this['len'] += this['spd'] * cox,
            this['len'] >= this['dst'] && (this['len'] = this['dst'])),
            this['scale'] -= 0.00036 * cox,
            cow['scaleMesh'](this['mesh'], this['scale'], this['len'], this['scale']),
            0x0 >= this['scale'] && (this['scale'] = 0x0,
            this['mesh']['visible'] = !0x1));
        }
        ;
    };
    function coL() {
        coz['Object3D']['call'](this),
        this['largeSpawnCount'] = 0x8,
        this['smallSpawnCount'] = 0xf,
        this['emissiveness'] = 0.55,
        this['velocityDamping'] = 0x3,
        this['lifeSpeedMin'] = 2.2,
        this['lifeSpeedRange'] = 0x3;
        var cow = new coz['Geometry']({
            'dynamic': !0x0
        })
          , cox = new coz['Color'](0xbbbbbb);
        this['mesh'] = new coz['Mesh'](cow,new coz['StrippedLambertMaterial']({
            'color': cox,
            'emissive': cox['multiplyScalar'](this['emissiveness']),
            'smoothShading': !0x0
        })),
        this['mesh']['castShadow'] = !0x0,
        this['mesh']['receiveShadow'] = !0x0,
        this['add'](this['mesh']),
        this['cubeTemplate'] = new coz['BoxGeometry'](0x1,0x1,0x1);
        for (var coy = 0x0; coy < this['cubeTemplate']['faces']['length']; coy++)
            this['cubeTemplate']['faces'][coy]['materialIndex'] = 0x0;
        this['cubeTemplate']['faceVertexUvs'] = [[]],
        this['entities'] = [];
    }
    coL['staticMatrix'] = new coz['Matrix4'](),
    coL['prototype'] = Object['create'](coz['Object3D']['prototype']),
    Object['defineProperty'](coL, 'finished', function() {
        return 0x0 === this['entities']['length'];
    }),
    coL['prototype']['explodeAt'] = function(cow, cox, coy, coz) {
        this['sizeMin'] = 0.35 * coz,
        this['sizeRange'] = 2.2 * coz,
        this['velocityMin'] = 0x1e * coz,
        this['velocityRange'] = 0x11 * coz,
        coC['set'](cow, cox, coy);
        for (var coA = 0x0; coA < this['largeSpawnCount']; coA++)
            this['spawnEntity'](0.1 * Math['random']() + 0.9, coC, !0x1);
        for (coA = 0x0; coA < this['smallSpawnCount']; coA++)
            this['spawnEntity'](0.9 * Math['random'](), coC, !0x1);
    }
    ,
    coL['prototype']['spawnEntity'] = function(cow, cox) {
        for (var coy = Math['pow'](cow, 2.5), coz = coy * this['sizeRange'] + this['sizeMin'], coA = (0x1 - coy) * this['velocityRange'] + this['velocityMin'], coB = this['_randomVector']()['normalize']()['multiplyScalar'](coA), coC = coy * this['lifeSpeedRange'] + this['lifeSpeedMin'], coD = 0x0; ; ) {
            for (var coE = !0x0, cp3 = 0x0; cp3 < this['entities']['length']; cp3++)
                if (this['entities'][cp3]['index'] === coD) {
                    coE = !0x1;
                    break;
                }
            if (coE)
                break;
            coD++;
        }
        0x8 * coD > this['mesh']['geometry']['vertices']['length'] - 0x1 && this['mesh']['geometry']['merge'](this['cubeTemplate'], coL['emptyMatrix']),
        this['entities']['push']({
            'index': coD,
            'rank': coy,
            'rankSeed': cow,
            'life': 0x0,
            'lifeSpeed': coC,
            'size': coz,
            'position': cox['clone'](),
            'velocity': coB
        });
    }
    ,
    coL['prototype']['destroyEntity'] = function(cow) {
        this['entities']['splice'](this['entities']['indexOf'](cow), 0x1);
        for (var cox = 0x8 * cow['index']; cox < 0x8 * (cow['index'] + 0x1); cox++)
            this['mesh']['geometry']['vertices'][cox]['set'](0x0, 0x0, 0x0);
        this['mesh']['geometry']['verticesNeedUpdate'] = !0x0,
        this['mesh']['geometry']['elementsNeedUpdate'] = !0x0,
        this['_cleanGeometry']();
    }
    ,
    coL['prototype']['update'] = function(cow) {
        cow /= 0x3e8;
        for (var cox, coy = 0x0; coy < this['entities']['length']; coy++) {
            (cox = this['entities'][coy])['life'] += cow * cox['lifeSpeed'],
            cox['velocity']['multiplyScalar'](0x1 - this['velocityDamping'] * cow),
            cox['position']['add'](cox['velocity']['clone']()['multiplyScalar'](cow));
            var coz = 0x2 - Math['pow'](cox['life'] / Math['sqrt'](0x2), 0x2);
            coz *= cox['size'];
            for (var coA = 0x8 * cox['index']; coA < 0x8 * (cox['index'] + 0x1); coA++) {
                var coB = this['mesh']['geometry']['vertices'][coA]
                  , coC = this['cubeTemplate']['vertices'][coA % 0x8];
                coB['set'](cox['position']['x'], cox['position']['y'], cox['position']['z'])['addScaledVector'](coC, coz);
            }
            0x0 >= coz && this['destroyEntity'](cox);
        }
        this['mesh']['geometry']['verticesNeedUpdate'] = !0x0,
        this['mesh']['geometry']['elementsNeedUpdate'] = !0x0,
        this['mesh']['geometry']['computeBoundingSphere']();
    }
    ,
    coL['prototype']['_cleanGeometry'] = function() {
        for (var cow, cox = this['mesh']['geometry']['vertices'], coy = this['mesh']['geometry']['faces'], coz = -0x1, coA = 0x0; coA < this['entities']['length']; coA++)
            (cow = this['entities'][coA])['index'] > coz && (coz = cow['index']);
        var coB = coz + 0x1;
        cox['splice'](0x8 * coB, cox['length'] - 0x8 * coB),
        coy['splice'](0xc * coB, coy['length'] - 0xc * coB);
    }
    ,
    coL['prototype']['_randomVector'] = function() {
        return new coz['Vector3'](Math['random']() - 0.5,Math['random']() - 0.5,Math['random']() - 0.5);
    }
    ;
    var cpj = [{
        'mat': coz['MeshBasicMaterial'],
        'snd': {
            'rng': 0x1a,
            'src': ['whizz_0', 'whizz_1'],
            'vol': 0.12
        },
        'spd': 1.7,
        'scale': 0x1,
        'length': 0xd,
        'color': 0xffffdb
    }, {
        'spd': [0.03, 0.031],
        'rand': !0x0,
        'carryV': !0x0,
        'grav': 0.0003,
        'spn': [0.04, 0.05],
        'scale': 0.15,
        'length': 0.5,
        'color': 0x9a7b3e
    }, {
        'spd': [0.03, 0.031],
        'rand': !0x0,
        'carryV': !0x0,
        'grav': 0.0003,
        'spn': [0.03, 0.05],
        'scale': 0.1,
        'length': 0.4,
        'color': 0x9a7b3e
    }]
      , cpk = function(cow) {
        this['mesh'] = new coz['Mesh'](cow['cubeGeo']),
        this['init'] = function(cox, coy, coB, coC, coD, coE, coL, cpj) {
            this['dst'] = coE,
            this['scale'] = coL['scale'],
            this['spd'] = coL['spd'][0x1] ? coA['randFloat'](coL['spd'][0x0], coL['spd'][0x1]) : coL['spd'];
            var cpk = coL && coL['carryV'] && cpj;
            coC -= Math['PI'],
            this['xS'] = this['spd'] * Math['sin'](coC) * Math['cos'](coD) + (cpk ? cpj['xVel'] : 0x0),
            this['zS'] = this['spd'] * Math['cos'](coC) * Math['cos'](coD) + (cpk ? cpj['zVel'] : 0x0),
            this['yS'] = this['spd'] * Math['sin'](coD) + (cpk ? cpj['yVel'] : 0x0),
            this['grav'] = coL['grav'],
            this['spin'] = coL['spn'] ? coL['spn'][0x1] ? coA['randFloat'](coL['spn'][0x0], coL['spn'][0x1]) : coL['spn'] : 0x0,
            this['mesh']['receiveShadow'] = coL['mat'] != coz['MeshBasicMaterial'],
            this['mesh']['material'] = cow['getMat']('default', {
                'fog': coL['mat'] != coz['MeshBasicMaterial'],
                'color': coL['color'],
                'emissive': coL['emis'],
                'mat': coL['mat']
            }),
            this['layer'] = cpj && cpj['isYou'] ? 0x1 : 0x0,
            this['sound'] = cpj && cpj['isYou'] ? null : coL['snd'],
            this['soundPlayed'] = !0x1,
            this['mesh']['layers']['set'](this['layer']),
            cow['moveMesh'](this['mesh'], cox, coy, coB),
            this['mesh']['lookAt'](cox + this['xS'], coy + this['yS'], coB + this['zS']),
            coL && coL['rand'] && this['mesh']['rotateX'](coA['randFloat'](-Math['PI'], Math['PI'])),
            cow['scaleMesh'](this['mesh'], coL['scale'], coL['scale'], coL['length']);
        }
        ,
        this['checkSound'] = function() {
            if (this['sound'] && !this['soundPlayed']) {
                var cow = Howler['pos']();
                coA['getDistance3D'](cow[0x0], cow[0x1], cow[0x2], this['mesh']['position']['x'], this['mesh']['position']['y'], this['mesh']['position']['z']) <= this['sound']['rng'] && (SOUND['play'](this['sound']['src'][coA['randInt'](0x0, this['sound']['src']['length'] - 0x1)], this['sound']['vol'], !0x1, coA['randFloat'](0.8, 1.2)),
                this['soundPlayed'] = !0x0);
            }
        }
        ,
        this['update'] = function(cow) {
            this['mesh']['visible'] && (this['mesh']['position']['x'] += this['xS'] * cow,
            this['mesh']['position']['z'] += this['zS'] * cow,
            this['mesh']['position']['y'] += this['yS'] * cow,
            this['spin'] && this['mesh']['rotateX'](this['spin'] * cow),
            this['yS'] -= (this['grav'] || 0x0) * cow,
            this['dst'] -= this['spd'] * cow,
            this['checkSound'](),
            0x0 >= this['dst'] && (this['mesh']['visible'] = !0x1));
        }
        ;
    };
    coz['Sprite']['prototype']['init'] = function(cow, cox, coy, coz, coA, coB, coC, coD, coE, coL) {
        this['position']['x'] = cow,
        this['position']['y'] = cox,
        this['position']['z'] = coy,
        this['xVel'] = coz,
        this['yVel'] = coA,
        this['zVel'] = coB,
        this['scale']['x'] = this['scale']['y'] = coC,
        this['life'] = coD || 0x0,
        this['grav'] = coE || 0x0,
        this['area'] = coL,
        this['updC'] = 0x0;
    }
    ,
    coz['Sprite']['prototype']['update'] = function(cow) {
        if (this['visible']) {
            if (this['position']['x'] += this['xVel'] * cow,
            this['position']['y'] += this['yVel'] * cow,
            this['yVel'] -= this['grav'] * cow,
            this['position']['z'] += this['zVel'] * cow,
            this['area']) {
                var cox = this['scale']['x'] / 0x2;
                this['position']['x'] - cox >= this['area']['x'] + this['area']['w'] ? this['position']['x'] = this['area']['x'] - this['area']['w'] - cox : this['position']['x'] + cox <= this['area']['x'] - this['area']['w'] && (this['position']['x'] = this['area']['x'] + this['area']['w'] + cox),
                this['position']['z'] - cox >= this['area']['z'] + this['area']['l'] ? this['position']['z'] = this['area']['z'] - this['area']['l'] - cox : this['position']['z'] + cox <= this['area']['z'] - this['area']['l'] && (this['position']['z'] = this['area']['z'] + this['area']['l'] + cox),
                this['position']['y'] - cox >= this['area']['y'] + this['area']['h'] ? this['position']['y'] = this['area']['y'] - cox : this['position']['y'] + cox <= this['area']['y'] && (this['position']['y'] = this['area']['y'] + this['area']['h'] + cox);
            }
            0x0 < this['life'] ? (this['life'] -= cow,
            0x0 >= this['life'] && this['updC'] && (this['visible'] = !0x1),
            this['updC']++) : 0x0 >= this['life'] && this['updC'] && (this['visible'] = !0x1);
        }
    }
    ;
    var cpJ = [Math['PI'] / 0x3, -Math['PI'] / 0x3]
      , cpK = [{
        'hole': !0x0,
        'count': 0x2,
        'grav': -0.00002,
        'scale': [0x5, 0x9],
        'speed': [0x0, 0.025],
        'spread': [-0.4, 0.4],
        'life': [0x12c, 0x1f4]
    }, {}, {
        'count': 0x1,
        'blending': 0x2,
        'scale': [0x5, 0x7],
        'speed': [0x0, 0x0],
        'spread': [0x0, 0x0],
        'life': [0x1e, 0x23]
    }, {
        'count': 0x1,
        'blending': 0x2,
        'scale': [0x7d0, 0x7d0],
        'speed': [0x0, 0x0],
        'spread': [0x0, 0x0]
    }, {
        'count': 0x4,
        'src': '0',
        'scale': [0x5, 0x6],
        'speed': [0x0, 0.01],
        'spread': [-0x1, 0x1],
        'life': [0x258, 0x320]
    }];
    cow['exports'] = function(cow) {
        var cox, coy, coB;
        this['particles'] = [],
        this['trails'] = [],
        this['physObjs'] = [],
        this['areas'] = [],
        this['active'] = !0x0,
        this['ExplosionManager'] = new coL(),
        this['prefabs'] = [{
            'src': 'glow_0',
            'blending': 0x2,
            'spd': 0.008,
            'cnt': 2.2,
            'grav': [-0.015, -0.005],
            'scl': [0.7, 0x1],
            'dir': 0x0
        }, {
            'src': 'glow_1',
            'blending': 0x1,
            'spd': 0.003,
            'cnt': 0x8,
            'grav': [-0.2, -0.22],
            'scl': [0x1, 1.5],
            'dir': 0x0
        }, {
            'src': 'fog_0',
            'blending': 0x1,
            'spd': 0.002,
            'cnt': 0x6,
            'grav': [0x0, 0x0],
            'scl': [0x19, 0x1e],
            'dir': 0x0
        }],
        this['addTrail'] = function(cox) {
            coB = null;
            for (var coy = 0x0; coy < this['trails']['length']; ++coy)
                if (!this['trails'][coy]['mesh']['visible']) {
                    coB = this['trails'][coy];
                    break;
                }
            coB || (coB = new coE(cow),
            this['trails']['push'](coB),
            cow['scene']['add'](coB['mesh'])),
            coB['init'](cox);
        }
        ,
        this['area'] = function(cow, cox, coy, coz, coB, coC, coD, coE) {
            coz /= 0x2,
            coC /= 0x2,
            this['areas']['push']({
                'f': coE,
                'x': cow,
                'y': cox,
                'z': coy,
                'w': coz,
                'h': coB,
                'l': coC
            });
            for (var coL = 0x0; coL < coD['count']; ++coL)
                this['add'](coD['src'], cow + coA['randInt'](-coz, coz), cox + coA['randInt'](0x0, coB), coy + coA['randInt'](-coC, coC), coD['spd'] * Math['sin'](coD['dir']), coD['grav'] ? coA['randFloat'](coD['grav'][0x0], coD['grav'][0x1]) : 0x0, coD['spd'] * Math['cos'](coD['dir']), coA['randFloat'](coD['scl'][0x0], coD['scl'][0x1]), 0x0, 0x0, coD['blending'], this['areas'][this['areas']['length'] - 0x1]);
        }
        ,
        this['effect'] = function(coy, coB, coC, coD, coE, coL) {
            if (this['active'] && (0x0 == cow['useDepthMap'] || '0' == cow['useDepthMap'])) {
                cox = cpK[coL];
                for (var cpj = 0x0; cpj < cox['count']; ++cpj) {
                    var cpk = coA['randFloat'](cox['speed'][0x0], cox['speed'][0x1])
                      , cpJ = coD + coA['randFloat'](cox['spread'][0x0], cox['spread'][0x1])
                      , cq9 = coE + coA['randFloat'](cox['spread'][0x0], cox['spread'][0x1]);
                    this['add'](coL, coy, coB, coC, cpk * Math['sin'](cpJ) * Math['cos'](cq9), cpk * Math['sin'](cq9), cpk * Math['cos'](cpJ) * Math['cos'](cq9), coA['randFloat'](cox['scale'][0x0], cox['scale'][0x1]), cox['life'] ? coA['randInt'](cox['life'][0x0], cox['life'][0x1]) : 0x0, cox['grav'], cox['blending'], null, cox['src']);
                }
                cox['hole'] && this['add'](0x1, coy, coB, coC, 0x0, 0x0, 0x0, coA['randFloat'](0.4, 0x1), 0x1388, 0x0, coz['SubtractiveBlending']);
            }
        }
        ,
        this['add'] = function(cox, coA, coB, coC, coD, coE, coL, cpj, cpk, cpJ, cpK, cql, cqm) {
            coy = null;
            for (var cqn = 0x0; cqn < this['particles']['length']; ++cqn)
                if (!this['particles'][cqn]['visible'] && !this['particles'][cqn]['static']) {
                    coy = this['particles'][cqn];
                    break;
                }
            coy || (coy = new coz['Sprite'](),
            this['particles']['push'](coy),
            cow['scene']['add'](coy)),
            this['setMaterial'](coy, cqm || cox, cpK, !0x0),
            coy['visible'] = !0x0,
            coy['init'](coA, coB, coC, coD, coE, coL, cpj, cpk, cpJ, cql);
        }
        ,
        this['setMaterial'] = function(cox, coy, coB, coC) {
            cox['material'] = cow['getMat']('particles/' + coy, {
                'mat': coz['SpriteMaterial'],
                'depthWrite': !0x1,
                'blending': coB || coz['NormalBlending'],
                'rotation': coC ? cpJ[coA['randInt'](0x0, 0x2)] : 0x0
            });
        }
        ,
        this['physObj'] = function(cox, coz, coA, coB, coC, coD, coE, coL, cpJ, cpK, cqC) {
            if (0x0 == cow['useDepthMap'] || '0' == cow['useDepthMap']) {
                coy = null;
                for (var cqD = 0x0; cqD < this['physObjs']['length']; ++cqD)
                    if (!this['physObjs'][cqD]['mesh']['visible']) {
                        coy = this['physObjs'][cqD];
                        break;
                    }
                coy || (coy = new cpk(cow),
                this['physObjs']['push'](coy),
                cow['scene']['add'](coy['mesh'])),
                coy['sid'] = null == cqC ? null : cqC,
                coy['mesh']['visible'] = !0x0,
                coy['init'](cox, coz, coA, coB, coC, coD, cpK || cpj[coL], cpJ),
                coE && this['showTrails'] && this['addTrail'](coy);
            }
        }
        ,
        this['disablePhys'] = function(cow) {
            for (var cox = 0x0; cox < this['physObjs']['length']; ++cox)
                this['physObjs'][cox]['sid'] == cow && (this['physObjs'][cox]['mesh']['visible'] = !0x1);
        }
        ,
        this['update'] = function(cow, cox) {
            if (cox && cox['active'])
                for (var coy = 0x0; coy < this['areas']['length']; ++coy)
                    this['areas'][coy]['f'] && (this['areas'][coy]['x'] = cox['x'],
                    this['areas'][coy]['y'] = cox['y'],
                    this['areas'][coy]['z'] = cox['z']);
            for (coy = 0x0; coy < this['trails']['length']; ++coy)
                this['trails'][coy]['update'](cow);
            for (coy = 0x0; coy < this['particles']['length']; ++coy)
                this['particles'][coy]['update'](cow);
            for (coy = 0x0; coy < this['physObjs']['length']; ++coy)
                this['physObjs'][coy]['update'](cow);
            this['ExplosionManager']['update'](cow);
        }
        ,
        this['reset'] = function() {
            this['particles']['length'] = 0x0,
            this['trails']['length'] = 0x0,
            this['physObjs']['length'] = 0x0,
            this['areas']['length'] = 0x0;
        }
        ;
    }
    ;
}
, function(cqJ, cqK) {
    cqJ['exports'] = [{
        'name': 'Red\x20Dot',
        'src': 'attach_0',
        'dotSrc': 'dot_0',
        'aimOffY': 0.16,
        'scale': 1.2
    }];
}
, function(cqL, cqM) {
    cqL['exports'] = [{
        'name': 'Nuke',
        'kills': 0x19,
        'activate': function(cqL, cqM) {
            return !cqL['nukeTimer'] && (cqL['incStat']('n', cqM),
            cqL['startNuke'](cqM),
            !0x0);
        }
    }];
}
, function(cqP, cqQ) {
    cqP['exports'] = [{
        'name': 'Krunker',
        'opacity': 0.6
    }, {
        'name': 'Target',
        'opacity': 0.6
    }, {
        'name': 'GG',
        'opacity': 0.6
    }, {
        'name': 'Pumpkin',
        'opacity': 0.6
    }, {
        'name': 'Spooky',
        'opacity': 0.6
    }, {
        'name': 'Ded',
        'opacity': 0.6
    }, {
        'name': 'Sadface',
        'opacity': 0.6
    }, {
        'name': 'Laugh\x20Cry',
        'opacity': 0.7
    }, {
        'name': 'Sid',
        'opacity': 0.9
    }, {
        'name': 'Vince',
        'opacity': 0.9
    }, {
        'name': 'Kiki',
        'opacity': 0.6
    }, {
        'name': 'Ladder',
        'opacity': 0x1
    }, {
        'name': 'Dummy',
        'opacity': 0x1
    }, {
        'name': '8\x20Ball',
        'opacity': 0.6
    }, {
        'name': 'xD',
        'opacity': 0.6
    }, {
        'name': 'MMOK',
        'opacity': 0.7
    }, {
        'name': 'Madman',
        'opacity': 0.6
    }, {
        'name': 'Terminal',
        'opacity': 0.6
    }, {
        'name': 'YODO',
        'opacity': 0.6
    }, {
        'name': 'Crayon',
        'opacity': 0.6
    }, {
        'name': 'Myth',
        'opacity': 0.85
    }, {
        'name': 'SpikyJohn',
        'opacity': 0.85
    }, {
        'name': 'LevelGaming',
        'opacity': 0.9
    }, {
        'name': 'PolarAce',
        'opacity': 0.9
    }, {
        'name': 'MrsYiibby',
        'opacity': 0.85
    }, {
        'name': 'Vraxooo',
        'opacity': 0.85
    }, {
        'name': 'Jazzmittens',
        'opacity': 0.85
    }, {
        'name': 'Wolfmaan',
        'opacity': 0.85
    }, {
        'name': 'KPL',
        'opacity': 0.9
    }, {
        'name': 'BV\x20Hype',
        'opacity': 0.85
    }, {
        'name': 'LandPhil',
        'opacity': 0.85
    }, {
        'name': 'Deal\x20With\x20It',
        'opacity': 0.9
    }, {
        'name': 'Rice',
        'opacity': 0.9
    }, {
        'name': 'Lore',
        'opacity': 0.95
    }, {
        'name': 'Desu\x20Sid',
        'opacity': 0.85
    }, {
        'name': 'Anomaly',
        'opacity': 0.85
    }, {
        'name': 'FaZe',
        'opacity': 0.9
    }];
}
, function(cqR, cqS) {
    var cqT = ['Double\x20Kill', 'Triple\x20Kill', 'Quad\x20Kill', 'Multi\x20Kill', 'Mega\x20Kill', 'Ultra\x20Kill', 'Super\x20Kill']
      , cqU = [];
    cqR['exports']['reward'] = function(cqR, cqS, cqX, cqY, cqZ) {
        if (cqU['length'] = 0x0,
        cqS['weapon']['melee'])
            cqU['push']('Execution', 0x96);
        else {
            cqS['weapon']['kill'] ? cqU['push'](cqS['weapon']['kill'][0x0], cqS['weapon']['kill'][0x1]) : cqS['weapon']['scope'] && 0x1 == cqS['aimVal'] ? cqU['push']('No\x20Scope', 0x64) : !cqS['weapon']['scope'] || 0x0 == cqS['aimVal'] && 0xb4 < cqS['aimTime'] || 0x1 == cqS['aimDir'] ? cqU['push']('', 0x32) : cqU['push']('Quick\x20Scope', 0x4b),
            0x1 >= cqZ['kills'] && cqU['push']('First\x20Blood', 0x19);
            var cr0 = cqR['getSpin'](cqS);
            !cqS['weapon']['nSkill'] && 0x168 <= cr0 && cqU['push']('360!', 0x96),
            cqY['headShot'] && cqU['push']('Headshot', 0x32),
            !cqS['weapon']['scope'] && 0xc8 < cqY['dst'] * cqS['weapon']['range'] && cqU['push']('Longshot', 0x19);
        }
        cqX['flag'] && cqU['push']('Snatched', 0x32),
        cqS['health'] <= 0.2 * cqS['maxHealth'] && cqS['active'] && cqU['push']('Close\x20Call', 0x14),
        0x3 <= cqS['deathStreak'] && cqU['push']('Comeback', 0x19),
        0xa <= cqX['killStreak'] ? cqU['push']('Buzzkill', 0x19) : 0x5 <= cqX['killStreak'] && cqU['push']('Buzzkill', 0xa),
        0x0 < cqS['slideTimer'] && cqU['push']('Driftkill', 0x32),
        0x190 <= cqS['airTime'] && cqU['push']('Mid\x20Air', 0x19);
        for (var cr1 = cqT['length'] - 0x1; 0x0 <= cr1; --cr1)
            if (cqS['streak'] > cr1) {
                cqU['push'](cqT[cr1], 0x32 * (cr1 + 0x1));
                break;
            }
        return cqU['length'] ? cqU : null;
    }
    ,
    cqR['exports']['getScore'] = function(cqR) {
        var cqS = 0x0;
        if (cqR)
            for (var cqT = 0x1; cqT < cqR['length']; cqT += 0x2)
                cqS += cqR[cqT];
        return cqS;
    }
    ;
}
, function(cr5, cr6, cr7) {
    cr7(0x8);
    cr5['exports'] = function() {
        this['locale'] = 'en',
        this['supported'] = ['en', 'es', 'de', 'kr'],
        this['translations'] = {};
        for (var cr5 = 0x0; cr5 < this['supported']['length']; cr5++)
            this['translations'][this['supported'][cr5]] = cr7(0x50)('./' + this['supported'][cr5] + '.js');
        this['saveLocale'] = function() {
            localStorage['setItem']('krk_lang', this['locale'] || 'en');
        }
        ,
        this['setLocale'] = function(cr5) {
            -0x1 < this['supported']['indexOf'](cr5) && (this['locale'] = cr5),
            this['saveLocale']();
        }
        ,
        this['setLocaleFromStorage'] = function() {
            'undefined' != typeof Storage && this['setLocale'](localStorage['getItem']('krk_lang'));
        }
        ,
        this['setLocaleFromStorage'](),
        this['get'] = function(cr5) {
            let cr6 = this['translations'][this['locale']][cr5] || this['translations']['en'][cr5] || 'UNLOCALIZED\x20STRING';
            for (var cr7 = 0x1; cr7 < arguments['length']; cr7++)
                cr6 = cr6['replace']('{' + (cr7 - 0x1) + '}', arguments[cr7]);
            return cr6;
        }
        ;
    }
    ;
}
, function(crd, cre, crf) {
    var crg = {
        './de.js': 0x51,
        './en.js': 0x52,
        './es.js': 0x53,
        './kr.js': 0x54
    };
    function crh(crd) {
        var cre = crk(crd);
        return crf(cre);
    }
    function crk(crd) {
        if (!crf['o'](crg, crd)) {
            var cre = new Error('Cannot\x20find\x20module\x20\x27' + crd + '\x27');
            throw cre['code'] = 'MODULE_NOT_FOUND',
            cre;
        }
        return crg[crd];
    }
    crh['keys'] = function() {
        return Object['keys'](crg);
    }
    ,
    crh['resolve'] = crk,
    crd['exports'] = crh,
    crh['id'] = 0x50;
}
, function(crn, cro) {
    crn['exports'] = {
        'menu.btn.profile': 'Profil',
        'menu.btn.shop': 'Shop',
        'menu.btn.social': 'Social',
        'menu.btn.maps': 'Karten',
        'menu.btn.mods': 'Modifizierungen',
        'menu.btn.settings': 'Einstellungen',
        'menu.btn.customize': 'Anpassen',
        'menu.btn.invite': 'Einladen',
        'menu.btn.invite.clicked': 'Kopiert',
        'menu.btn.join': 'Beitreten',
        'menu.btn.host': 'Gastgeber\x20Spiel',
        'menu.btn.browser': 'Server\x20Browser',
        'generic.wait': 'Bitte\x20warten...',
        'generic.loading': 'LÄDT...',
        'generic.connecting': 'VERBINDET...',
        'generic.none': 'Nichts',
        'generic.select': 'Auswählen',
        'generic.delete': 'Löschen',
        'generic.save': 'Speichern',
        'generic.load': 'Laden',
        'generic.search': 'Suchen',
        'generic.leave': 'Verlassen',
        'generic.default': 'Voreinstellung',
        'generic.submit': 'Senden',
        'generic.create': 'Erstellen',
        'generic.failed': 'Fehlgeschlagen',
        'generic.success': 'Erfolgt!',
        'generic.name': 'Name',
        'generic.level': 'Level',
        'generic.score': 'Spielstand',
        'generic.off': 'Aus',
        'generic.score': 'Score',
        'generic.victory': 'SIEG',
        'generic.defeat': 'NIEDERLAGE',
        'generic.follow': 'Folgen',
        'generic.unfollow': 'Nicht\x20mehr\x20folgen',
        'generic.followers': 'Followers',
        'generic.following': 'folgt',
        'generic.games': 'Spiele',
        'generic.wins': 'Siege',
        'generic.clan': 'Clan',
        'generic.kills': 'Abschüsse',
        'generic.deaths': 'Tode',
        'generic.kdr': 'KDR',
        'generic.games.played': 'gespielte\x20Spiele',
        'generic.games.won': 'gewonnene\x20Spiele',
        'generic.timep': 'Spielzeit',
        'generic.time': 'Zeit',
        'generic.logout': 'Abmelden',
        'generic.logout.sessions': 'Abmelden\x20aus\x20allen\x20Sitzungen',
        'generic.username': 'Benutzername\x20eingeben',
        'generic.password': 'Passwort\x20eingeben',
        'generic.register': 'Registrieren',
        'generic.login': 'Einloggen',
        'generic.accuracy': 'Genauigkeit',
        'player.waiting': 'Warten\x20auf\x20Spieler',
        'player.died': 'Du\x20bist\x20gestorben',
        'player.killed': 'getötet\x20von',
        'player.killstreak': '{0}\x20on\x20a\x20{1}\x20Abschuss-Strähne',
        'player.inactive': 'Wegen\x20Inaktivität\x20entfernt',
        'player.disconnect': 'NICHT\x20VERBUNDEN',
        'timer.end': 'Nächste\x20Runde\x20in\x20{0}',
        'leaderboard.empty': 'Leerer\x20Warteraum',
        'popup.checkpoint': 'Kontrollpunkt!',
        'app.play': 'KLICKEN\x20UM\x20ZU\x20SPIELEN | By hrt',
        'app.play.controller': 'START\x20DRÜCKEN',
        'purchase.error': 'Fehler\x20aufgetreten',
        'purchase.error.click': 'Hier\x20klicken</a>\x20und\x20nochmal\x20versuchen!',
        'purchase.error.limit': 'Du\x20hast\x20möglicherweise\x20dein\x20tägliches\x20Transaktionslimit\x20überschritten.',
        'settings.reset': 'Einstellungen\x20zurücksetzen',
        'settings.reset.confirm': 'Bist\x20Du\x20sicher,\x20dass\x20du\x20all\x20Deine\x20Einstellungen\x20zurücksetzen\x20willst?\x20Dadurch\x20wird\x20auch\x20die\x20Seite\x20neu\x20geladen',
        'settings.controls.change': 'Kontrollen\x20ändern',
        'settings.controls.press': 'Irgendeine\x20Taste\x20drücken',
        'settings.server.header': 'Server',
        'settings.server.region': 'Voreinstellung\x20Region',
        'settings.quality.header': 'Qualität',
        'settings.quality.res': 'Auflösung',
        'settings.quality.part': 'Partikel',
        'settings.quality.trails': 'Geschossspuren',
        'settings.quality.mflash': 'Mündungsfeuer',
        'settings.interface.header': 'Schnittstelle',
        'settings.interface.ui': 'Benutzeroberfläche\x20anzeigen',
        'settings.interface.hp': 'Dynamische\x20HP\x20Balken',
        'settings.interface.chat': 'Chat\x20Box\x20anzeigen',
        'settings.interface.kills': 'Abschuss-Liste\x20anzeigen',
        'settings.interface.messages': 'Spielernachrichten\x20anzeigen',
        'settings.interface.unboxings': 'Ausgepackte\x20Kisten\x20anzeigen',
        'settings.interface.ping': 'Ping\x20anzeigen',
        'settings.interface.fps': 'FPS-Rate\x20anzeigen',
        'settings.interface.deaths': 'Tode\x20anzeigen',
        'settings.crosshair.header': 'Fadenkreuz',
        'settings.crosshair.type': 'Typ',
        'settings.crosshair.type.2': 'Benutzerdefiniert',
        'settings.crosshair.type.3': 'Mehrschichtig',
        'settings.crosshair.type.4': 'Bild',
        'settings.crosshair.style': 'Stil',
        'settings.crosshair.style.0': 'Kreuz',
        'settings.crosshair.style.1': 'Hohler\x20Kreis',
        'settings.crosshair.style.2': 'Voller\x20Kreis',
        'settings.crosshair.style.3': 'Hohles\x20Quadrat',
        'settings.crosshair.style.4': 'Volles\x20Quadrat',
        'settings.crosshair.image': 'Bild',
        'settings.crosshair.image.paste': 'Fadenkreuz-Bild',
        'settings.crosshair.always': 'Immer\x20anzeigen',
        'settings.crosshair.color': 'Farbe',
        'settings.crosshair.shadow': 'Schatten',
        'settings.crosshair.size': 'Größe',
        'settings.crosshair.thickness': 'Dicke',
        'settings.onKillS.style.0': 'Voreinstellung',
        'settings.onKillS.style.1': 'Auflösung\x20reduzieren',
        'settings.onKillS.style.2': 'FOV\x20reduzieren',
        'settings.onKillS.style.3': 'FOV\x20erhöhen',
        'settings.gameplay.header': 'Spielverlauf',
        'settings.gameplay.sensitivity': 'Empfindlichkeit',
        'settings.gameplay.aimsens': 'Zielempfindlichkeit',
        'settings.gameplay.fov': 'Sichtfeld',
        'settings.gameplay.fps': 'FOV\x20für\x20Waffen',
        'settings.gameplay.streamer': 'Streamer\x20Modus',
        'settings.gameplay.challenge': 'Challenge\x20Modus',
        'settings.gameplay.invert': 'Y-Achse\x20umkehren',
        'settings.gameplay.onkillS': 'Beim\x20Abschuss',
        'settings.audio.header': 'Audio',
        'settings.audio.sound': 'Ton',
        'settings.audio.voice': 'Lautstärke\x20Stimmen',
        'settings.editing.header': 'Bearbeiten',
        'settings.editing.weapon': 'Waffe\x20anzeigen',
        'settings.editing.bobbing': 'Waffe\x20rotieren',
        'settings.editing.depth': 'Todeskarte',
        'settings.editing.green': 'Grüner\x20Bildschirm',
        'settings.shaders.header': 'Schatten',
        'settings.shaders.ambient': 'Umgebungsschatten',
        'settings.mods.header': 'Mods',
        'settings.mods.load': 'Mods\x20laden',
        'settings.mods.auto': 'Mods\x20automatisch\x20laden',
        'settings.mods.borders': 'Zielfernrohr-Begrenzung',
        'settings.mods.scope': 'Zielfernrohr-Bild',
        'settings.mods.scope.paste': 'Zielfernrohr-Bild\x20URL',
        'settings.mods.dot': 'Laserpunkt-Bild',
        'settings.mods.dot.paste': 'Laserpunkt-Bild\x20URL',
        'settings.mods.endmessage': 'Match\x20Endnachricht',
        'settings.mods.profile': 'Profil-Bild',
        'settings.mods.profile.paste': 'Profil-Bild\x20URL',
        'windows.settings.header': 'Spieleinstellungen',
        'windows.servers.header': 'Server\x20Browser',
        'windows.servers.none': 'Keine\x20Spiele\x20zum\x20Beitreten\x20gefunden...',
        'windows.servers.host': '+\x20Gastgeber-Spiel',
        'windows.servers.hide': 'Volle\x20ausblenden',
        'windows.servers.online': '{0}\x20gesamt\x20online',
        'windows.loadout.header': 'Auslastung\x20ändern',
        'windows.loadout.class': 'Klasse',
        'windows.loadout.primary': 'Primär',
        'windows.loadout.secondary': 'Sekundär',
        'windows.loadout.melee': 'Nahkampf',
        'windows.loadout.hat': 'Hut',
        'windows.loadout.body': 'Körper',
        'windows.loadout.spray': 'Sprühdose',
        'windows.mods.header': 'Mods\x20Manager',
        'windows.mods.guide': 'Mod\x20Guide',
        'windows.mods.list': 'Liste\x20Modifizierungen',
        'windows.mods.publish': 'Mods\x20Veröffentlichen',
        'windows.mods.viewer': 'Ansicht',
        'windows.mods.drop': 'Mods\x20hier\x20hinziehen\x20oder\x20klicken',
        'windows.mods.paste': 'Mod-Url\x20einfügen',
        'windows.mods.load': 'Mods\x20laden',
        'windows.account.header': 'Konto',
        'windows.account.recover': 'Kontaktiere\x20<a>krunker@yendis.ch</a>\x20zur\x20Wiederherstellung\x20eines\x20Kontos',
        'windows.class.header': 'Klasse\x20auswählen',
        'windows.controls.header': 'Kontrollen\x20bearbeiten',
        'windows.controls.forward': 'Vorwärts',
        'windows.controls.backward': 'Rückwärts',
        'windows.controls.left': 'Links',
        'windows.controls.right': 'Rechts',
        'windows.controls.reload': 'Neu\x20laden',
        'windows.controls.aim': 'Zielen',
        'windows.controls.inspect': 'Untersuchen',
        'windows.controls.spray': 'Sprühen',
        'windows.controls.jump': 'Springen',
        'windows.controls.crouch': 'Kriechen',
        'windows.controls.next': 'Nächste\x20Waffe',
        'windows.controls.previous': 'Vorherige\x20Waffe',
        'windows.controls.chat': 'Chat',
        'windows.controls.voice': 'Stimme',
        'windows.controls.list': 'Spieler\x20Liste',
        'windows.controls.interact': 'Interagieren',
        'windows.controls.drop': 'Fallenlassen',
        'windows.host.header': 'Individuelles\x20Gastgeber-Spiel',
        'windows.host.maps': 'Karten\x20auswählen',
        'windows.host.cmaps': 'Community\x20Karte',
        'windows.host.raw': 'Karten-Rohdaten',
        'windows.host.modes': 'Modi\x20auswählen',
        'windows.host.classes': 'Klassen\x20auswählen',
        'windows.host.settings': 'Server\x20Einstellungen',
        'windows.host.preset': 'Gastgeber\x20Voreinstellungen',
        'windows.host.preset.load': 'Voreinstellung\x20laden...',
        'windows.host.preset.name': 'Name\x20Voreinstellung',
        'windows.host.start': 'Spiel\x20starten',
        'windows.spray.header': 'Sprühdose\x20auswählen',
        'windows.spray.default': 'Voreingestellte\x20Sprühdose',
        'windows.maps.header': 'Benutzerdefinierte\x20Karten',
        'windows.maps.none': 'Keine\x20Karten\x20gefunden!',
        'windows.maps.name': 'Kartenname',
        'windows.maps.editor': 'Karteneditor',
        'windows.maps.publish': 'Karte\x20veröffentlichen',
        'windows.maps.community': 'Karten\x20Community',
        'windows.publish.map.header': 'Karte\x20veröffentlichen',
        'windows.publish.map.thumbnail': 'Keine\x20Vorschauansicht',
        'windows.publish.map.paste': 'Kartendaten\x20einfügen',
        'windows.publish.map.update': 'Veröffentlichen/Aktualisieren',
        'windows.publish.map.login': 'Anmelden</a>\x20um\x20Karten\x20zu\x20erstellen\x20und\x20hochzuladen!',
        'windows.theatre.header': 'Theater\x20Modus',
        'windows.theatre.record': 'Aufzeichnung\x20aktivieren',
        'windows.theatre.key': 'Aufzeichnungstaste',
        'windows.clans.header': 'Clans',
        'windows.clans.members': 'Mitglieder\x20({0})',
        'windows.clans.requests': 'Anfragen',
        'windows.clans.requests.none': 'Keine\x20Anfragen',
        'windows.clans.page': '[{0}]\x20Clan\x20Seite',
        'windows.clans.create': 'Clan\x20erstellen',
        'windows.clans.name': 'Clan\x20Name',
        'windows.clans.view': 'Clans\x20ansehen',
        'windows.clans.join': 'Clan\x20beitreten',
        'windows.clans.login': 'Anmelden</a>\x20um\x20Clan\x20zu\x20erstellen\x20oder\x20beizutreten!',
        'windows.store.header': 'Shop',
        'windows.store.spin': '{0}\x20Drehung(en)',
        'windows.store.agree': 'Mit\x20dem\x20Kauf\x20erklärst\x20Du\x20Dich\x20mit\x20den\x20{0}Geschäftsbedingungen\x20einverstanden.',
        'windows.store.purchase': 'KR\x20kaufen',
        'windows.store.market': 'Marktplatz',
        'windows.store.market2': 'Krunker\x20Markt',
        'windows.store.buy': 'Gegenstände\x20kaufen\x20und\x20verkaufen\x20auf\x20dem',
        'windows.store.wheels': 'Preisräder',
        'windows.store.unlock': 'Neue\x20Waffenoberflächen\x20und\x20Gegenstände\x20freischalten',
        'windows.store.amount': '{0}\x20KR\x20in\x20Konto',
        'windows.store.login': 'Anmelden</a>\x20um\x20Gegenstände\x20aus\x20dem\x20Shop\x20zu\x20kaufen\x20und\x20freizuschalten!',
        'windows.store.purchasing': 'Kauf\x20wird\x20durchgeführt...',
        'windows.store.unboxed': '{0}{1}\x20ausgepackt',
        'windows.skin.header': 'Oberfläche\x20auswählen',
        'windows.hat.header': 'Hut\x20auswählen',
        'windows.back.header': 'Rückseite\x20auswählen',
        'windows.mods.community.header': 'Community\x20Mods',
        'windows.mods.community.fav': 'Deine\x20Favoriten',
        'windows.mods.community.new': 'Neue\x20Mods',
        'windows.mods.community.hot': 'Heiß',
        'windows.mods.community.name': 'Mod-Name',
        'windows.mods.community.none': 'Keine\x20Mods\x20gefunden!',
        'windows.publish.mod.header': 'Mods\x20veröffentlichen',
        'windows.publish.mod.thumbnail': 'Keine\x20Vorschauansicht',
        'windows.publish.mod.name': 'Mods-Name',
        'windows.publish.mod.paste': 'Mods-Url',
        'windows.publish.mod.update': 'Veröffentlichen/Aktualisieren',
        'windows.publish.mod.login': '<a>Anmelden</a>\x20um\x20Mods\x20zu\x20erstellen\x20und\x20hochzuladen!',
        'windows.secondary.header': 'Sekundäre\x20auswählen',
        'windows.secondary.unlocked': 'Freigeschaltet\x20bei\x20Level\x20{0}',
        'windows.secondary.req': 'Erfordert\x20Level\x20{0}',
        'windows.advertise.header': 'Inserieren',
        'windows.players.header': 'Spieler\x20Liste',
        'windows.players.none': 'Keine\x20Spieler\x20im\x20Moment...',
        'windows.join.header': 'Beitreten',
        'windows.join.code': 'Spiel\x20URL/Code\x20eingeben',
        'windows.client.header': 'Client',
        'windows.client.windows': 'Windows\x20Installer',
        'windows.client.mac': 'macOS\x20Installer',
        'windows.client.linux': 'Linux\x20Installer',
        'thumbnail.upload.limit': 'Fehlgeschlagen.\x2040kb\x20Limit\x20für\x20Vorschauansicht',
        'thumbnail.upload.error': 'Fehler\x20Vorschauansicht',
        'mod.extracting': 'entpackt\x20{0}/{1}',
        'mod.disabled': 'Mods\x20deaktiviert',
        'mod.error': 'Mod\x20Fehler!',
        'mod.loading': 'Mod\x20Lädt...',
        'mod.invalid': 'Ungültige\x20Mod-Datei!',
        'matchmaker.full': 'VOLL',
        'matchmaker.full2': 'Das\x20Spiel\x20ist\x20voll.',
        'matchmaker.none': 'Spiel\x20nicht\x20gefunden.',
        'adblocker': 'Schalte\x20Deinen\x20AdBlocker\x20aus\x20um\x20gratis\x20Krunkies\x20zu\x20erhalten.',
        'streamers.views': '{0}\x20Betrachter',
        'streamers.none': 'Keine\x20aktiven\x20Streams!',
        'error.extentions': 'Schalte\x20Erweiterungen\x20aus,\x20falls\x20Du\x20welche\x20hast.',
        'error.seek': 'Klicke\x20und\x20versuche,\x20eine\x20neues\x20Spiel\x20zu\x20finden.',
        'custom.map.missing': 'Wähle\x20mindestens\x20eine\x20Karte\x20aus',
        'custom.mode.missing': 'Wähle\x20mindestens\x20einen\x20Modus\x20aus',
        'custom.class.missing': 'Wähle\x20mindestens\x20eine\x20Klasse\x20aus',
        'server.config.maxPlayers': 'Spieler',
        'server.config.minPlayers': 'Mindestanzahl\x20Spieler',
        'server.config.lives': 'Leben',
        'server.config.gameTime': 'Minuten',
        'server.config.gravMlt': 'Schwerkraft',
        'server.config.jumpMlt': 'Sprungkraft',
        'server.config.deltaMlt': 'Zeitskala',
        'server.config.strafeSpd': 'Strafe-Geschwindigkeit',
        'server.config.healthMlt': 'Leben-Multiplikator',
        'server.config.impulseMlt': 'Waffen-Impuls',
        'server.config.nameTeam1': 'Team\x201\x20Name',
        'server.config.nameTeam2': 'Team\x202\x20Name',
        'server.config.selTeam': 'Team\x20auswählen',
        'server.config.allowSpect': 'Zuschauen',
        'server.config.killRewards': 'Abschussprämien',
        'server.config.canSlide': 'Rutschen',
        'server.config.autoJump': 'Automatisch\x20Springen',
        'server.config.thirdPerson': 'Dritte\x20Person',
        'server.config.nameTags': 'Nametags\x20ausblenden',
        'server.config.private': 'Privat',
        'social.login': 'Anmelden/Registrieren',
        'social.login.failed': 'Anmeldung\x20fehlgeschlagen',
        'social.login.buy': 'Zum\x20Kaufen\x20anmelden',
        'social.login.sell': 'Zum\x20Verkaufen\x20anmelden',
        'social.login.proccessing': 'Anmeldung\x20läuft...',
        'social.since': 'Seit',
        'social.user.maps': 'Benutzerkarten',
        'social.user.mods': 'Benutzermodifizierungen',
        'social.maps.none': 'Keine\x20Karten\x20gefunden...',
        'social.market.head': 'Gegenstand\x20Kopf',
        'social.market.back': 'Gegenstand\x20Rücken',
        'social.market.none': 'Keine\x20Gegenstände\x20gefunden',
        'social.market.grace': 'bereit\x20in\x20{0}',
        'social.market.sort': 'Filtern/Sortieren',
        'social.market.filter': 'Suchen',
        'social.market.price.high': 'Höchster\x20Preis',
        'social.market.price.low': 'Niedrigster\x20Preis',
        'social.market.price.list': 'Preis\x20anzeigen\x20in',
        'social.market.searching': 'Suchen',
        'social.market.listed': 'angezeigt\x20vor\x20{0}',
        'social.market.list': 'Gegenstand\x20anzeigen',
        'social.market.unlist': 'Nicht\x20mehr\x20anzeigen',
        'social.market.unlisting': 'Gegenstand\x20wird\x20nicht\x20mehr\x20angezeigt...',
        'social.market.posting': 'Gegenstand\x20wird\x20gepostet...',
        'social.market.req': 'Level\x20{0}\x20erforderlich',
        'social.market.cant': 'Kannst\x20Du\x20Dir\x20nicht\x20leisten',
        'social.market.purchase': 'Kaufen',
        'social.market.fee': 'Keine\x20Gebühr\x20fürs\x20Listen',
        'social.market.failed': 'Fehlgeschlagen.\x20Versuche\x20es\x20erneut.'
    };
}
, function(crp, crq) {
    crp['exports'] = {
        'menu.btn.ranked': 'Ranked',
        'menu.btn.shop': 'Shop',
        'menu.btn.social': 'Social',
        'menu.btn.maps': 'Maps',
        'menu.btn.mods': 'Mods',
        'menu.btn.settings': 'Settings',
        'menu.btn.customize': 'Customize',
        'menu.btn.invite': 'Invite',
        'menu.btn.invite.clicked': 'Copied',
        'menu.btn.join': 'Join',
        'menu.btn.host': 'Host\x20Game',
        'menu.btn.browser': 'Server\x20Browser',
        'generic.wait': 'Please\x20wait...',
        'generic.loading': 'LOADING...',
        'generic.connecting': 'CONNECTING...',
        'generic.none': 'None',
        'generic.select': 'Select',
        'generic.delete': 'Delete',
        'generic.save': 'Save',
        'generic.load': 'Load',
        'generic.search': 'Search',
        'generic.leave': 'Leave',
        'generic.default': 'Default',
        'generic.submit': 'Submit',
        'generic.create': 'Create',
        'generic.failed': 'Failed',
        'generic.success': 'Success!',
        'generic.name': 'Name',
        'generic.level': 'Level',
        'generic.score': 'Score',
        'generic.off': 'Off',
        'generic.score': 'Score',
        'generic.victory': 'VICTORY',
        'generic.defeat': 'DEFEAT',
        'generic.matchover': 'MATCH\x20OVER',
        'generic.follow': 'Follow',
        'generic.unfollow': 'Unfollow',
        'generic.followers': 'Followers',
        'generic.following': 'following',
        'generic.games': 'Games',
        'generic.wins': 'Wins',
        'generic.clan': 'Clan',
        'generic.kills': 'Kills',
        'generic.deaths': 'Deaths',
        'generic.kdr': 'KDR',
        'generic.games.played': 'Games\x20Played',
        'generic.games.won': 'Games\x20Won',
        'generic.timep': 'Time\x20Played',
        'generic.time': 'Time',
        'generic.logout': 'Logout',
        'generic.logout.sessions': 'Logout\x20of\x20all\x20Sessions',
        'generic.username': 'Enter\x20Username',
        'generic.password': 'Enter\x20Password',
        'generic.register': 'Register',
        'generic.login': 'Login',
        'generic.accuracy': 'Accuracy',
        'player.waiting': 'waiting\x20for\x20players',
        'player.died': 'You\x20died',
        'player.killed': 'Killed\x20By',
        'player.killstreak': '{0}\x20on\x20a\x20{1}\x20Kill\x20Streak',
        'player.inactive': 'Kicked\x20for\x20inactivity',
        'player.disconnect': 'DISCONNECTED',
        'timer.end': 'Next\x20Round\x20in\x20{0}',
        'leaderboard.empty': 'Empty\x20Lobby',
        'popup.checkpoint': 'Checkpoint!',
        'app.play': 'CLICK\x20TO\x20PLAY | By hrt',
        'app.play.controller': 'PRESS\x20START',
        'purchase.error': 'Error\x20occurred',
        'purchase.error.click': 'click\x20here</a>\x20and\x20try\x20again!',
        'purchase.error.limit': 'You\x20may\x20have\x20exceeded\x20your\x20daily\x20transaction\x20limit',
        'settings.reset': 'Reset\x20Settings',
        'settings.reset.confirm': 'Are\x20you\x20sure\x20you\x20want\x20to\x20reset\x20all\x20your\x20settings?\x20This\x20will\x20also\x20refresh\x20the\x20page',
        'settings.controls.change': 'Change\x20Controls',
        'settings.controls.press': 'Press\x20any\x20Key',
        'settings.local.header': 'Localization',
        'settings.local.region': 'Default\x20Region',
        'settings.local.lang': 'Language',
        'settings.quality.header': 'Quality',
        'settings.quality.res': 'Resolution',
        'settings.quality.part': 'Particles',
        'settings.quality.trails': 'Bullet\x20Trails',
        'settings.quality.mflash': 'Muzzle\x20Flash',
        'settings.interface.header': 'Interface',
        'settings.interface.ui': 'Show\x20UI',
        'settings.interface.hp': 'Dynamic\x20HP\x20Bars',
        'settings.interface.chat': 'Show\x20Chat\x20Box',
        'settings.interface.kills': 'Show\x20Kill\x20Feed',
        'settings.interface.messages': 'Show\x20Player\x20Messages',
        'settings.interface.unboxings': 'Show\x20Unboxings',
        'settings.interface.ping': 'Show\x20Ping',
        'settings.interface.fps': 'Show\x20FPS',
        'settings.interface.deaths': 'Show\x20Deaths',
        'settings.crosshair.header': 'Crosshair',
        'settings.crosshair.type': 'Type',
        'settings.crosshair.type.2': 'Custom',
        'settings.crosshair.type.3': 'Layered',
        'settings.crosshair.type.4': 'Image',
        'settings.crosshair.style': 'Style',
        'settings.crosshair.style.0': 'Cross',
        'settings.crosshair.style.1': 'Hollow\x20Circle',
        'settings.crosshair.style.2': 'Solid\x20Circle',
        'settings.crosshair.style.3': 'Hollow\x20Square',
        'settings.crosshair.style.4': 'Solid\x20Square',
        'settings.crosshair.image': 'Image',
        'settings.crosshair.image.paste': 'Crosshair\x20Image',
        'settings.crosshair.always': 'Always\x20Show',
        'settings.crosshair.color': 'Color',
        'settings.crosshair.shadow': 'Shadow',
        'settings.crosshair.size': 'Size',
        'settings.crosshair.thickness': 'Thickness',
        'settings.onKillS.style.0': 'Default',
        'settings.onKillS.style.1': 'Reduce\x20Resolution',
        'settings.onKillS.style.2': 'Reduce\x20FOV',
        'settings.onKillS.style.3': 'Increase\x20FOV',
        'settings.gameplay.header': 'Gameplay',
        'settings.gameplay.sensitivity': 'Sensitivity',
        'settings.gameplay.aimsens': 'Aim\x20Sensitivity',
        'settings.gameplay.fov': 'Field\x20of\x20View',
        'settings.gameplay.streamer': 'Streamer\x20Mode',
        'settings.gameplay.challenge': 'Challenge\x20Mode',
        'settings.gameplay.invert': 'Invert\x20Y-Axis',
        'settings.gameplay.onkillS': 'On\x20Kill',
        'settings.gameplay.scrollDir': 'Scroll\x20Direction',
        'settings.gameplay.hideNames': 'Nametags',
        'settings.gameplay.hideNames.team': 'Team\x20Only',
        'settings.gameplay.hideNames.enemy': 'Enemy\x20Only',
        'settings.gameplay.hideNames.all': 'Everyone',
        'settings.audio.header': 'Audio',
        'settings.audio.sound': 'Sound',
        'settings.audio.voice': 'Voice\x20Volume',
        'settings.viewmodel.header': 'View\x20Model',
        'settings.viewmodel.fps': 'Weapon\x20FOV',
        'settings.viewmodel.bobbing': 'Weapon\x20Bobbing',
        'settings.viewmodel.show.primary': 'Show\x20Primary',
        'settings.viewmodel.show.secondary': 'Show\x20Secondary',
        'settings.viewmodel.show.melee': 'Show\x20Melee',
        'settings.editing.header': 'Editing',
        'settings.editing.health.high': 'HUD\x20Health\x20High',
        'settings.editing.health.low': 'HUD\x20Health\x20Low',
        'settings.editing.depth': 'Depth\x20Map',
        'settings.editing.green': 'Green\x20Screen',
        'settings.shaders.header': 'Shaders',
        'settings.shaders.ambient': 'Ambient\x20Shading',
        'settings.mods.header': 'Mods',
        'settings.mods.load': 'Load\x20Mods',
        'settings.mods.auto': 'Auto-Load\x20Mod',
        'settings.mods.borders': 'Scope\x20Borders',
        'settings.mods.scope': 'Scope\x20Image',
        'settings.mods.scope.paste': 'Scope\x20Image\x20URL',
        'settings.mods.dot': 'Red\x20Dot\x20Image',
        'settings.mods.dot.paste': 'Red\x20Dot\x20URL',
        'settings.mods.endmessage': 'Match\x20End\x20Message',
        'settings.mods.profile': 'Profile\x20Image',
        'settings.mods.profile.paste': 'Profile\x20Image\x20URL',
        'windows.settings.header': 'Game\x20Settings',
        'windows.servers.header': 'Server\x20Browser',
        'windows.servers.none': 'No\x20Joinable\x20Games\x20Found...',
        'windows.servers.host': '+\x20Host\x20Game',
        'windows.servers.hide': 'Hide\x20Full',
        'windows.servers.online': '{0}\x20total\x20online',
        'windows.loadout.header': 'Change\x20Loadout',
        'windows.loadout.class': 'Class',
        'windows.loadout.primary': 'Primary',
        'windows.loadout.secondary': 'Secondary',
        'windows.loadout.melee': 'Melee',
        'windows.loadout.hat': 'Hat',
        'windows.loadout.body': 'Body',
        'windows.loadout.spray': 'Spray',
        'windows.loadout.color.skin': 'Skin\x20Color',
        'windows.mods.header': 'Mod\x20Manager',
        'windows.mods.guide': 'Mod\x20Guide',
        'windows.mods.list': 'Mods\x20List',
        'windows.mods.publish': 'Publish\x20Mod',
        'windows.mods.viewer': 'Viewer',
        'windows.mods.drop': 'drop\x20mod\x20file\x20here\x20or\x20click',
        'windows.mods.paste': 'Paste\x20Mod\x20Url',
        'windows.mods.load': 'Load\x20Mod',
        'windows.account.header': 'Account',
        'windows.account.recover': 'To\x20recover\x20an\x20account\x20contact\x20<a>krunker@yendis.ch</a>',
        'windows.class.header': 'Select\x20Class',
        'windows.controls.header': 'Change\x20Controls',
        'windows.controls.forward': 'Forward',
        'windows.controls.backward': 'Backward',
        'windows.controls.left': 'Left',
        'windows.controls.right': 'Right',
        'windows.controls.reload': 'Reload',
        'windows.controls.aim': 'Aim',
        'windows.controls.inspect': 'Inspect',
        'windows.controls.spray': 'Spray',
        'windows.controls.jump': 'Jump',
        'windows.controls.crouch': 'Crouch',
        'windows.controls.prim': 'Primary\x20Weapon',
        'windows.controls.swap': 'Secondary\x20Weapon',
        'windows.controls.melee': 'Melee\x20Weapon',
        'windows.controls.chat': 'Chat',
        'windows.controls.voice': 'Voice',
        'windows.controls.list': 'Player\x20List',
        'windows.controls.interact': 'Interact',
        'windows.controls.drop': 'Drop',
        'windows.host.header': 'Host\x20Custom\x20Game',
        'windows.host.maps': 'Select\x20Maps',
        'windows.host.cmaps': 'Community\x20Map',
        'windows.host.raw': 'Raw\x20Map\x20Data',
        'windows.host.modes': 'Select\x20Modes',
        'windows.host.classes': 'Select\x20Classes',
        'windows.host.settings': 'Server\x20Settings',
        'windows.host.preset': 'Host\x20Presets',
        'windows.host.preset.load': 'Loading\x20Preset...',
        'windows.host.preset.name': 'Preset\x20name',
        'windows.host.start': 'Start\x20Game',
        'windows.spray.header': 'Select\x20Spray',
        'windows.spray.default': 'Default\x20Spray',
        'windows.maps.header': 'Custom\x20Maps',
        'windows.maps.none': 'No\x20maps\x20found!',
        'windows.maps.name': 'Map\x20Name',
        'windows.maps.editor': 'Map\x20Editor',
        'windows.maps.publish': 'Publish\x20Map',
        'windows.maps.community': 'Map\x20Community',
        'windows.publish.map.header': 'Publish\x20Map',
        'windows.publish.map.thumbnail': 'No\x20Thumbnail',
        'windows.publish.map.paste': 'Paste\x20Map\x20Data',
        'windows.publish.map.update': 'Publish/Update',
        'windows.publish.map.login': 'Login</a>\x20to\x20create\x20and\x20upload\x20maps!',
        'windows.theatre.header': 'Theatre\x20Mode',
        'windows.theatre.record': 'Enable\x20Recording',
        'windows.theatre.key': 'Record\x20Key',
        'windows.clans.header': 'Clans',
        'windows.clans.members': 'Members\x20({0})',
        'windows.clans.requests': 'Requests',
        'windows.clans.requests.none': 'No\x20Requests',
        'windows.clans.page': '[{0}]\x20Clan\x20Page',
        'windows.clans.create': 'Create\x20Clan',
        'windows.clans.name': 'Clan\x20Name',
        'windows.clans.view': 'View\x20Clans',
        'windows.clans.join': 'Join\x20Clan',
        'windows.clans.login': 'Login</a>\x20to\x20create\x20and\x20join\x20a\x20clan!',
        'windows.store.header': 'Store',
        'windows.store.spin': '{0}\x20Spin',
        'windows.store.agree': 'By\x20purchasing\x20you\x20agree\x20to\x20the\x20{0}Terms',
        'windows.store.purchase': 'Purchase\x20KR',
        'windows.store.voucher': 'Redeem\x20Voucher',
        'windows.store.voucherinfo': 'Get\x20Vouchers\x20from\x20certain\x20Streamers\x20&\x20Events',
        'windows.store.market': 'Marketplace',
        'windows.store.market2': 'Krunker\x20Market',
        'windows.store.buy': 'Buy\x20and\x20Sell\x20Items\x20on\x20the',
        'windows.store.wheels': 'Prize\x20Wheels',
        'windows.store.unlock': 'Unlock\x20new\x20weapon\x20skins\x20and\x20items',
        'windows.store.amount': '{0}\x20KR\x20in\x20account',
        'windows.store.login': 'Login</a>\x20to\x20buy\x20and\x20unlock\x20items\x20from\x20the\x20store!',
        'windows.store.purchasing': 'Purchasing...',
        'windows.store.unboxed': '{0}{1}\x20unboxed',
        'windows.skin.header': 'Select\x20Skin',
        'windows.hat.header': 'Select\x20Hat',
        'windows.back.header': 'Select\x20Back',
        'windows.melee.header': 'Select\x20Melee',
        'windows.mods.community.header': 'Community\x20Mods',
        'windows.mods.community.fav': 'Your\x20Favorites',
        'windows.mods.community.new': 'New\x20Mods',
        'windows.mods.community.hot': 'Hot',
        'windows.mods.community.name': 'Mod\x20Name',
        'windows.mods.community.none': 'No\x20Mods\x20found!',
        'windows.publish.mod.header': 'Publish\x20Mod',
        'windows.publish.mod.thumbnail': 'No\x20Thumbnail',
        'windows.publish.mod.name': 'Mod\x20Name',
        'windows.publish.mod.paste': 'Mod\x20Url',
        'windows.publish.mod.update': 'Publish/Update',
        'windows.publish.mod.login': 'Login</a>\x20to\x20create\x20and\x20upload\x20mods!',
        'windows.secondary.header': 'Select\x20Secondary',
        'windows.secondary.unlocked': 'Unlocked\x20at\x20lvl\x20{0}',
        'windows.secondary.req': 'Req\x20lvl\x20{0}',
        'windows.advertise.header': 'Advertise',
        'windows.players.header': 'Player\x20List',
        'windows.players.none': 'No\x20players\x20currently...',
        'windows.join.header': 'Join',
        'windows.join.code': 'Enter\x20Game\x20URL/Code',
        'windows.client.header': 'Client',
        'windows.client.windows': 'Windows\x20Installer',
        'windows.client.mac': 'macOS\x20Installer',
        'windows.client.linux': 'Linux\x20Installer',
        'windows.ranked.header': 'Ranked',
        'windows.ranked.login': 'Login</a>\x20to\x20play\x20in\x20ranked\x20games!',
        'windows.ranked.level': 'You\x20must\x20be\x20at\x20least\x20<span\x20color=\x22black\x22>level\x20{0}</span>\x20to\x20play\x20in\x20ranked\x20games!\x20Right\x20now\x20you\x20are\x20at\x20<span\x20color=\x22black\x22>level\x20{1}</span>.',
        'windows.ranked.mode.r1v1': '1v1\x20Ranked',
        'windows.ranked.mode.r2v2': '2v2\x20Ranked',
        'windows.ranked.mode.r4v4': '4v4\x20Ranked',
        'thumbnail.upload.limit': 'Failed.\x2040kb\x20Thumbnail\x20Limit',
        'thumbnail.upload.error': 'Thumbnail\x20Error',
        'mod.extracting': 'extracting\x20{0}/{1}',
        'mod.disabled': 'mods\x20disabled',
        'mod.error': 'mod\x20error!',
        'mod.loading': 'loading\x20mod...',
        'mod.invalid': 'invalid\x20mod\x20file!',
        'matchmaker.full': 'FULL',
        'matchmaker.full2': 'Game\x20is\x20full.',
        'matchmaker.none': 'Game\x20not\x20found.',
        'adblocker': 'Disable\x20your\x20ad\x20blocker\x20to\x20receive\x20free\x20Krunkies.',
        'streamers.views': '{0}\x20viewers',
        'streamers.none': 'No\x20active\x20streams!',
        'error.extentions': 'If\x20you\x20have\x20any\x20extensions.\x20Disable\x20them',
        'error.seek': 'Try\x20seeking\x20a\x20new\x20game\x20by\x20clicking',
        'custom.map.missing': 'Select\x20at\x20least\x20one\x20Map',
        'custom.mode.missing': 'Select\x20at\x20least\x20one\x20Mode',
        'custom.class.missing': 'Select\x20at\x20least\x20one\x20Class',
        'server.config.maxPlayers': 'Players',
        'server.config.minPlayers': 'Min\x20Players',
        'server.config.lives': 'Lives',
        'server.config.gameTime': 'Minutes',
        'server.config.gravMlt': 'Gravity',
        'server.config.jumpMlt': 'Jump\x20Force',
        'server.config.deltaMlt': 'Time\x20Scale',
        'server.config.strafeSpd': 'Strafe\x20Speed',
        'server.config.healthMlt': 'Health\x20Multiplier',
        'server.config.impulseMlt': 'Weapon\x20Impulse',
        'server.config.nameTeam1': 'Team\x201\x20Name',
        'server.config.nameTeam2': 'Team\x202\x20Name',
        'server.config.selTeam': 'Select\x20Team',
        'server.config.allowSpect': 'Spectating',
        'server.config.killRewards': 'Kill\x20Rewards',
        'server.config.headshotOnly': 'Headshots\x20Only',
        'server.config.canSlide': 'Sliding',
        'server.config.autoJump': 'Auto\x20Jump',
        'server.config.thirdPerson': '3rd\x20Person',
        'server.config.nameTags': 'Hide\x20Nametags',
        'server.config.private': 'Private',
        'social.login': 'Login/Register',
        'social.login.failed': 'Login\x20Failed',
        'social.login.buy': 'Login\x20to\x20Buy',
        'social.login.sell': 'Login\x20to\x20Sell',
        'social.login.gift': 'Login\x20to\x20Gift',
        'social.login.proccessing': 'Logging\x20in...',
        'social.since': 'Since',
        'social.user.maps': 'User\x20Maps',
        'social.user.mods': 'User\x20Mods',
        'social.maps.none': 'No\x20Maps\x20found...',
        'social.market.head': 'Head\x20Item',
        'social.market.back': 'Back\x20Item',
        'social.market.melee': 'Melee\x20Item',
        'social.market.none': 'No\x20Items\x20Found',
        'social.market.grace': 'ready\x20in\x20{0}',
        'social.market.sort': 'Filter/Sort',
        'social.market.filter': 'Search',
        'social.market.price.high': 'Highest\x20Price',
        'social.market.price.low': 'Lowest\x20Price',
        'social.market.price.list': 'List\x20Price\x20in',
        'social.market.searching': 'Searching',
        'social.market.listed': 'listed\x20{0}\x20ago',
        'social.market.list': 'List\x20Item',
        'social.market.unlist': 'Unlist',
        'social.market.unlisting': 'Unlisting\x20Item...',
        'social.market.posting': 'Posting\x20Item...',
        'social.market.req': 'lvl\x20{0}\x20required',
        'social.market.cant': 'Can\x27t\x20Afford',
        'social.market.purchase': 'Purchase',
        'social.market.fee': 'No\x20List\x20Fee',
        'social.market.failed': 'Failed.\x20Try\x20Again',
        'queue.status.queuing': 'Queuing',
        'queue.status.queued': 'Finding\x20match',
        'queue.status.creating-game': 'Creating\x20game',
        'queue.status.host': 'Creating\x20game',
        'queue.status.join': 'Joining\x20game',
        'social.market.gift.amount': 'Gift\x20Amount\x20in',
        'social.market.fee.gift': 'No\x20Gift\x20Fee',
        'social.market.gift': 'Gift\x20KR'
    };
}
, function(crr, crs) {
    crr['exports'] = {
        'menu.btn.profile': 'Perfil',
        'menu.btn.shop': 'Tienda',
        'menu.btn.social': 'Social',
        'menu.btn.maps': 'Mapas',
        'menu.btn.mods': 'Mods',
        'menu.btn.settings': 'Configuraciones',
        'menu.btn.customize': 'Personalizar',
        'menu.btn.invite': 'Invitar',
        'menu.btn.invite.clicked': 'Copiado',
        'menu.btn.join': 'Unirse',
        'menu.btn.host': 'Ser\x20Anfitrin\x20de\x20Partida',
        'menu.btn.browser': 'Buscador\x20de\x20Servidores',
        'generic.wait': 'Favor\x20esperar...',
        'generic.loading': 'CARGANDO...',
        'generic.connecting': 'CONECTANDO...',
        'generic.none': 'Ninguno',
        'generic.select': 'Seleccionar',
        'generic.delete': 'Eliminar',
        'generic.save': 'Guardar',
        'generic.load': 'Cargar',
        'generic.search': 'Buscar',
        'generic.leave': 'Salir',
        'generic.default': 'Por\x20Defecto',
        'generic.submit': 'Entregar',
        'generic.create': 'Crear',
        'generic.failed': 'Fallido',
        'generic.success': '��xito!',
        'generic.name': 'Nombre',
        'generic.level': 'Nivel',
        'generic.score': 'Puntuaci�n',
        'generic.off': 'Off',
        'generic.score': 'Puntuaci�n',
        'generic.victory': 'VICTORIA',
        'generic.defeat': 'DERROTA',
        'generic.follow': 'Seguir',
        'generic.unfollow': 'Dejar\x20de\x20Seguir',
        'generic.followers': 'Seguidores',
        'generic.following': 'Siguiendo',
        'generic.games': 'Juegos',
        'generic.wins': 'Victorias',
        'generic.clan': 'Clan',
        'generic.kills': 'Asesinatos',
        'generic.deaths': 'Muertes',
        'generic.kdr': 'TAM',
        'generic.games.played': 'Partidas\x20Jugadas',
        'generic.games.won': 'Partidas\x20Ganadas',
        'generic.timep': 'Tiempo\x20de\x20Juego',
        'generic.time': 'Tiempo',
        'generic.logout': 'Cerrar\x20Sesi�n',
        'generic.logout.sessions': 'Cerrar\x20Todas\x20las\x20Sesiones',
        'generic.username': 'Ingresar\x20Usuario',
        'generic.password': 'Ingresar\x20Contrase�a',
        'generic.register': 'Registrarse',
        'generic.login': 'Iniciar\x20Sesi�n',
        'generic.accuracy': 'Precisi�n',
        'player.waiting': 'esperando\x20jugadores',
        'player.died': 'Has\x20muerto',
        'player.killed': 'Asesinado\x20Por',
        'player.killstreak': '{0}\x20tiene\x20Racha\x20de\x20{1}\x20Asesinatos',
        'player.inactive': 'Desconectado\x20por\x20inactividad',
        'player.disconnect': 'DESCONECTADO',
        'timer.end': 'Pr�xima\x20Ronda\x20en\x20{0}',
        'leaderboard.empty': 'Lobby\x20Vac�o',
        'popup.checkpoint': '�Checkpoint!',
        'app.play': 'CLICK\x20PARA\x20JUGAR | By hrt',
        'app.play.controller': 'PRESIONA\x20START',
        'purchase.error': 'Ocurri�\x20un\x20error',
        'purchase.error.click': '�click\x20aqu�</a>\x20e\x20int�ntalo\x20de\x20nuevo!',
        'purchase.error.limit': 'Es\x20posible\x20que\x20hayas\x20excedido\x20tu\x20l�mite\x20diario\x20de\x20transacciones',
        'settings.reset': 'Restablecer\x20Configuraciones',
        'settings.reset.confirm': '�Est�s\x20seguro\x20de\x20querer\x20restablecer\x20todas\x20tus\x20configuraciones?\x20Esto\x20tambi�n\x20volver�\x20a\x20cargar\x20la\x20p�gina',
        'settings.controls.change': 'Cambiar\x20Controles',
        'settings.controls.press': 'Presiona\x20cualquier\x20Tecla',
        'settings.server.header': 'Servidores',
        'settings.server.region': 'Regi�n\x20por\x20defecto',
        'settings.quality.header': 'Calidad',
        'settings.quality.res': 'Resoluci�n',
        'settings.quality.part': 'Part�culas',
        'settings.quality.trails': 'Rastros\x20de\x20Bala',
        'settings.quality.mflash': 'Combusti�n',
        'settings.interface.header': 'Interfaz',
        'settings.interface.ui': 'Mostrar\x20Interfaz',
        'settings.interface.hp': 'Barras\x20Din�micas\x20de\x20HP',
        'settings.interface.chat': 'Mostrar\x20Caja\x20de\x20Chat',
        'settings.interface.kills': 'Mostrar\x20Historial\x20de\x20Asesinatos',
        'settings.interface.messages': 'Mostrar\x20Aperturas\x20de\x20Cajas',
        'settings.interface.ping': 'Mostrar\x20PING',
        'settings.interface.fps': 'Mostrar\x20FPS',
        'settings.interface.deaths': 'Mostrar\x20Muertes',
        'settings.crosshair.header': 'Ret�culo',
        'settings.crosshair.type': 'Tipo',
        'settings.crosshair.type.2': 'Personalizado',
        'settings.crosshair.type.3': 'Por\x20Capas',
        'settings.crosshair.type.4': 'Imagen',
        'settings.crosshair.style': 'Estilo',
        'settings.crosshair.style.0': 'Cruz',
        'settings.crosshair.style.1': 'C�rculo\x20Vac�o',
        'settings.crosshair.style.2': 'C�rculo\x20Macizo',
        'settings.crosshair.style.3': 'Cuadrado\x20Vac�o',
        'settings.crosshair.style.4': 'Cuadrado\x20Macizo',
        'settings.crosshair.image': 'Imagen',
        'settings.crosshair.image.paste': 'Imagen\x20del\x20Ret�culo',
        'settings.crosshair.always': 'Mostrar\x20Siempre',
        'settings.crosshair.color': 'Color',
        'settings.crosshair.shadow': 'Sombra',
        'settings.crosshair.size': 'Tama�o',
        'settings.crosshair.thickness': 'Grosor',
        'settings.onKillS.style.0': 'Por\x20Defecto',
        'settings.onKillS.style.1': 'Reducir\x20Resoluci�n',
        'settings.onKillS.style.2': 'Reducir\x20Campo\x20Visual',
        'settings.onKillS.style.3': 'Aumentar\x20Campo\x20Visual',
        'settings.gameplay.header': 'Jugabilidad',
        'settings.gameplay.sensitivity': 'Sensibilidad',
        'settings.gameplay.aimsens': 'Sensibilidad\x20al\x20Apuntar',
        'settings.gameplay.fov': 'Campo\x20Visual',
        'settings.gameplay.fps': 'Campo\x20Visual\x20de\x20Arma',
        'settings.gameplay.streamer': 'Modo\x20Streamer',
        'settings.gameplay.challenge': 'Modo\x20Challenge',
        'settings.gameplay.invert': 'Invertir\x20Eje\x20Y',
        'settings.gameplay.onkillS': 'Al\x20Asesinar',
        'settings.audio.header': 'Audio',
        'settings.audio.sound': 'Sonido',
        'settings.audio.voice': 'Volumen\x20de\x20Voces',
        'settings.editing.header': 'Edici�n',
        'settings.editing.weapon': 'Mostrar\x20Arma',
        'settings.editing.bobbing': 'Descuadre\x20de\x20Apunte',
        'settings.editing.depth': 'Mapa\x20de\x20Profundidad',
        'settings.editing.green': 'Pantalla\x20Verde',
        'settings.shaders.header': 'Sombreadores',
        'settings.shaders.ambient': 'Sombreo\x20de\x20Ambiente',
        'settings.mods.header': 'Mods',
        'settings.mods.load': 'Cargar\x20Mods',
        'settings.mods.auto': 'Auto-Cargar\x20Mod',
        'settings.mods.borders': 'Bordes\x20de\x20la\x20Mirilla',
        'settings.mods.scope': 'Imagen\x20de\x20Mirilla',
        'settings.mods.scope.paste': 'URL\x20Imagen\x20de\x20la\x20Mirila',
        'settings.mods.dot': 'Imagen\x20del\x20Punto\x20Rojo',
        'settings.mods.dot.paste': 'URL\x20Imagen\x20del\x20Punto\x20Rojo',
        'settings.mods.endmessage': 'Mensaje\x20Fin\x20de\x20Partida',
        'settings.mods.profile': 'Imagen\x20del\x20Perfil',
        'settings.mods.profile.paste': 'URL\x20Imagen\x20del\x20Perfil',
        'windows.settings.header': 'Configuraciones\x20del\x20Juego',
        'windows.servers.header': 'Buscador\x20de\x20Servidores',
        'windows.servers.none': 'No\x20Hay\x20Partidas\x20para\x20Unirse...',
        'windows.servers.host': '+\x20Ser\x20Anfitri�n\x20de\x20Partida',
        'windows.servers.hide': 'Hide\x20Full',
        'windows.servers.online': '{0}\x20totales\x20en\x20l�nea',
        'windows.loadout.header': 'Cambiar\x20Loadout',
        'windows.loadout.class': 'Clase',
        'windows.loadout.primary': 'Primaria',
        'windows.loadout.secondary': 'Secundaria',
        'windows.loadout.melee': 'Melee',
        'windows.loadout.hat': 'Cabeza',
        'windows.loadout.body': 'Cuerpo',
        'windows.loadout.spray': 'Spray',
        'windows.mods.header': 'Gestor\x20de\x20Mods',
        'windows.mods.guide': 'Gu�a\x20de\x20Mods',
        'windows.mods.list': 'Lista\x20de\x20Mods',
        'windows.mods.publish': 'Publicar\x20Mod',
        'windows.mods.viewer': 'Vista',
        'windows.mods.drop': 'arrastar\x20archivo\x20de\x20mod\x20aqu�\x20o\x20click',
        'windows.mods.paste': 'Pegar\x20Url\x20de\x20Mod',
        'windows.mods.load': 'Cargar\x20Mod',
        'windows.account.header': 'Cuenta',
        'windows.account.recover': 'Para\x20recuperar\x20una\x20cuenta,\x20contactar\x20a\x20<a>krunker@yendis.ch</a>',
        'windows.class.header': 'Seleccionar\x20Clase',
        'windows.controls.header': 'Cambiar\x20Controles',
        'windows.controls.forward': 'Adelante',
        'windows.controls.backward': 'Atr�s',
        'windows.controls.left': 'Izquierda',
        'windows.controls.right': 'Derecha',
        'windows.controls.reload': 'Recargar',
        'windows.controls.aim': 'Apuntar',
        'windows.controls.inspect': 'Inspeccionar',
        'windows.controls.spray': 'Spray',
        'windows.controls.jump': 'Saltar',
        'windows.controls.crouch': 'Agacharse',
        'windows.controls.next': 'Arma\x20Siguiente',
        'windows.controls.previous': 'Arma\x20Anterior',
        'windows.controls.chat': 'Chat',
        'windows.controls.voice': 'Voz',
        'windows.controls.list': 'Lista\x20de\x20Jugadores',
        'windows.controls.interact': 'Interactuar',
        'windows.controls.drop': 'Soltar',
        'windows.host.header': 'Ser\x20Anfitri�n\x20de\x20Partida\x20Personalizada',
        'windows.host.maps': 'Seleccionar\x20Mapas',
        'windows.host.cmaps': 'Mapa\x20Comunitario',
        'windows.host.raw': 'Datos\x20no\x20procesados\x20de\x20Mapa',
        'windows.host.modes': 'Seleccionar\x20Modos',
        'windows.host.classes': 'Seleccionar\x20Clases',
        'windows.host.settings': 'Configuraci�n\x20del\x20Servidor',
        'windows.host.preset': 'Configuraciones\x20Previas\x20del\x20Anfitri�n',
        'windows.host.preset.load': 'Cargando\x20Configuraciones\x20Previas...',
        'windows.host.preset.name': 'Nombre\x20de\x20las\x20Configuraciones\x20Previas',
        'windows.host.start': 'Iniciar\x20Partida',
        'windows.spray.header': 'Seleccionar\x20Spray',
        'windows.spray.default': 'Spray\x20por\x20Defecto',
        'windows.maps.header': 'Mapas\x20Personalizados',
        'windows.maps.none': '�No\x20se\x20encontraron\x20mapas!',
        'windows.maps.name': 'Nombre\x20del\x20Mapa',
        'windows.maps.editor': 'Editor\x20de\x20Mapas',
        'windows.maps.publish': 'Publicar\x20Mapa',
        'windows.maps.community': 'Comunidad\x20de\x20Mapas',
        'windows.publish.map.header': 'Publicar\x20Mapa',
        'windows.publish.map.thumbnail': 'Sin\x20Miniatura',
        'windows.publish.map.paste': 'Pegar\x20Datos\x20de\x20Mapa',
        'windows.publish.map.update': 'Publicar/Actualizar',
        'windows.publish.map.login': '�Inicia\x20sesi�n</a>\x20para\x20crear\x20y\x20subir\x20mapas!',
        'windows.theatre.header': 'Modo\x20Teatro',
        'windows.theatre.record': 'Permitir\x20Grabar',
        'windows.theatre.key': 'Tecla\x20de\x20Grabar',
        'windows.clans.header': 'Clanes',
        'windows.clans.members': 'Miembros\x20({0})',
        'windows.clans.requests': 'Solicitudes',
        'windows.clans.requests.none': 'No\x20Hay\x20Solicitudes',
        'windows.clans.page': '[{0}]\x20P�gina\x20del\x20Clan',
        'windows.clans.create': 'Crear\x20Clan',
        'windows.clans.name': 'Nombre\x20del\x20Clan',
        'windows.clans.view': 'Ver\x20Clanes',
        'windows.clans.join': 'Unirse\x20a\x20Clan',
        'windows.clans.login': '�Inicia\x20sesi�n</a>\x20para\x20crear\x20un\x20clan\x20o\x20unirte\x20a\x20uno!',
        'windows.store.header': 'Tienda',
        'windows.store.spin': '{0}\x20Girar',
        'windows.store.agree': 'Al\x20comprar,\x20aceptas\x20los\x20{0}T�rminos',
        'windows.store.purchase': 'Comprar\x20KR',
        'windows.store.market': 'Mercado',
        'windows.store.market2': 'Krunker\x20Market',
        'windows.store.buy': 'Compra\x20y\x20Vende\x20items\x20en\x20el\x20',
        'windows.store.wheels': 'Ruedas\x20de\x20Premios',
        'windows.store.unlock': 'Desbloquea\x20nuevos\x20aspectos\x20para\x20armas\x20e\x20items',
        'windows.store.amount': '{0}\x20KR\x20en\x20la\x20cuenta',
        'windows.store.login': '�Inicia\x20sesi�n</a>\x20para\x20comprar\x20y\x20desbloquear\x20items\x20de\x20la\x20tienda!',
        'windows.store.purchasing': 'Comprando...',
        'windows.store.unboxed': '{0}{1}\x20abri�',
        'windows.skin.header': 'Seleccionar\x20Aspecto',
        'windows.hat.header': 'Seleccionar\x20Cabeza',
        'windows.back.header': 'Seleccionar\x20Espalda',
        'windows.mods.community.header': 'Mods\x20Comunitarios',
        'windows.mods.community.fav': 'Tus\x20Favoritos',
        'windows.mods.community.new': 'Mods\x20Nuevos',
        'windows.mods.community.hot': 'Hot',
        'windows.mods.community.name': 'Nombre\x20del\x20Mod',
        'windows.mods.community.none': '�No\x20se\x20encontraron\x20Mods!',
        'windows.publish.mod.header': 'Publicar\x20Mod',
        'windows.publish.mod.thumbnail': 'Sin\x20Miniatura',
        'windows.publish.mod.name': 'Nombre\x20del\x20Mod',
        'windows.publish.mod.paste': 'Url\x20del\x20Mod',
        'windows.publish.mod.update': 'Publicar/Actualizar',
        'windows.publish.mod.login': '�Inicia\x20sesi�n</a>\x20para\x20crear\x20y\x20subir\x20mods!',
        'windows.secondary.header': 'Seleccionar\x20Secundario',
        'windows.secondary.unlocked': 'Desbloqueado\x20en\x20el\x20Nvl\x20{0}',
        'windows.secondary.req': 'Nvl\x20Req\x20{0}',
        'windows.advertise.header': 'Anunciar',
        'windows.players.header': 'Lista\x20de\x20Jugadores',
        'windows.players.none': 'No\x20hay\x20jugadores\x20actualmente...',
        'windows.join.header': 'Unirse',
        'windows.join.code': 'Ingresar\x20URL/C�digo\x20de\x20Partida',
        'windows.client.header': 'Cliente',
        'windows.client.windows': 'Instalador\x20Windows',
        'windows.client.mac': 'Instalador\x20macOS',
        'windows.client.linux': 'Instalador\x20Linux',
        'thumbnail.upload.limit': 'Error.\x20L�mite\x20Miniatura\x20de\x2040kb',
        'thumbnail.upload.error': 'Error\x20de\x20Miniatura',
        'mod.extracting': 'extrayendo\x20{0}/{1}',
        'mod.disabled': 'mods\x20desactivados',
        'mod.error': '�error\x20de\x20mod!',
        'mod.loading': 'cargando\x20mod...',
        'mod.invalid': '�archivo\x20de\x20mod\x20inv�lido!',
        'matchmaker.full': 'FULL',
        'matchmaker.full2': 'La\x20partida\x20est�\x20full.',
        'matchmaker.none': 'No\x20se\x20encontr�\x20partida.',
        'adblocker': 'Desactiva\x20tu\x20ad\x20blocker\x20para\x20recibir\x20Krunkies\x20gratis.',
        'streamers.views': '{0}\x20vespectadores',
        'streamers.none': '�No\x20hay\x20streams\x20activos!',
        'error.extentions': 'Si\x20tienes\x20extensiones.\x20Desact�valas',
        'error.seek': 'Intenta\x20buscar\x20un\x20nuevo\x20juego\x20haciendo\x20click',
        'custom.map.missing': 'Selecciona\x20al\x20menos\x20un\x20Mapa',
        'custom.mode.missing': 'Selecciona\x20al\x20menos\x20un\x20Modo',
        'custom.class.missing': 'Selecciona\x20al\x20menos\x20una\x20Clase',
        'server.config.maxPlayers': 'Jugadores',
        'server.config.minPlayers': 'M�nimo\x20de\x20Jugadores',
        'server.config.lives': 'Vidas',
        'server.config.gameTime': 'Minutos',
        'server.config.gravMlt': 'Gravedad',
        'server.config.jumpMlt': 'Intensidad\x20de\x20Saltos',
        'server.config.deltaMlt': 'Escala\x20de\x20Tiempo',
        'server.config.strafeSpd': 'Velocidad\x20de\x20R�faga',
        'server.config.healthMlt': 'Multiplicador\x20de\x20la\x20Vida',
        'server.config.impulseMlt': 'Impulso\x20de\x20Arma',
        'server.config.nameTeam1': 'Nombre\x20Equipo\x201',
        'server.config.nameTeam2': 'Nombre\x20Equipo\x202',
        'server.config.selTeam': 'Seleccionar\x20Equipo',
        'server.config.allowSpect': 'Espectar',
        'server.config.killRewards': 'Recompensa\x20por\x20Asesinatos',
        'server.config.canSlide': 'Deslizar',
        'server.config.autoJump': 'Auto\x20Saltar',
        'server.config.thirdPerson': '3ra\x20Persona',
        'server.config.nameTags': 'Esconder\x20Se�al\x20del\x20Nombre',
        'server.config.private': 'Privado',
        'social.login': 'Iniciar\x20sesi�n/Registrarse',
        'social.login.failed': 'Inicio\x20de\x20sesi�n\x20fallido',
        'social.login.buy': 'Inicia\x20sesi�n\x20para\x20Comprar',
        'social.login.sell': 'Inicia\x20sesi�n\x20para\x20Vender',
        'social.login.proccessing': 'Iniciando\x20sesi�n...',
        'social.since': 'Desde',
        'social.user.maps': 'Mapas\x20de\x20Usuarios',
        'social.user.mods': 'Mods\x20de\x20Usuarios',
        'social.maps.none': 'No\x20se\x20encontraron\x20Mapas...',
        'social.market.head': 'Item\x20de\x20Cabeza',
        'social.market.back': 'Item\x20de\x20Espalda',
        'social.market.none': 'No\x20se\x20encontraron\x20Items',
        'social.market.grace': 'listo\x20en\x20{0}',
        'social.market.sort': 'Filtrar/Organizar',
        'social.market.filter': 'Busca',
        'social.market.price.high': 'Precio\x20m�s\x20alto',
        'social.market.price.low': 'Precio\x20m�s\x20bajo',
        'social.market.price.list': 'Listar\x20Precio\x20en',
        'social.market.searching': 'Buscando',
        'social.market.listed': 'incluido\x20hace\x20{0}',
        'social.market.list': 'Item\x20de\x20Lista',
        'social.market.unlist': 'Excluir',
        'social.market.unlisting': 'Excluyendo\x20Item...',
        'social.market.posting': 'Publicando\x20Item...',
        'social.market.req': 'Nvl\x20{0}\x20requerido',
        'social.market.cant': 'Saldo\x20Insuficiente',
        'social.market.purchase': 'Comprar',
        'social.market.fee': 'Sin\x20Costo\x20de\x20Incluir',
        'social.market.failed': 'Fallido.\x20Intenta\x20de\x20nuevo'
    };
}
, function(crt, cru) {
    crt['exports'] = {
        'menu.btn.profile': '������',
        'menu.btn.shop': '����',
        'menu.btn.social': '�Ҽ�',
        'menu.btn.maps': '��',
        'menu.btn.mods': '����',
        'menu.btn.settings': '����',
        'menu.btn.customize': 'Ŀ���͸�����',
        'menu.btn.invite': '�ʴ��ϱ�',
        'menu.btn.invite.clicked': '����\x20�Ϸ�',
        'menu.btn.join': '�����ϱ�',
        'menu.btn.host': '��\x20������',
        'menu.btn.browser': '����\x20��������',
        'generic.wait': '���ø�\x20���ٷ�\x20�ּ���...',
        'generic.loading': '�ҷ�����\x20��...',
        'generic.connecting': '����\x20��...',
        'generic.none': '����',
        'generic.select': '����',
        'generic.delete': '����',
        'generic.save': '����',
        'generic.load': '�ҷ�����',
        'generic.search': '�˻�',
        'generic.leave': '������',
        'generic.default': '�⺻��',
        'generic.submit': '����',
        'generic.create': '������',
        'generic.failed': '����',
        'generic.success': '����!',
        'generic.name': '�̸�',
        'generic.level': '����',
        'generic.score': '����',
        'generic.off': '����',
        'generic.score': '����',
        'generic.victory': '�¸�',
        'generic.defeat': '�й�',
        'generic.follow': '�ȷο�',
        'generic.unfollow': '�ȷο�\x20����',
        'generic.followers': '�ȷο�',
        'generic.following': '�ȷ���',
        'generic.games': '����',
        'generic.wins': '�¸�',
        'generic.clan': 'Ŭ��',
        'generic.kills': 'óġ',
        'generic.deaths': '����',
        'generic.kdr': 'KDR',
        'generic.games.played': 'ġ��\x20����',
        'generic.games.won': '�¸���\x20����',
        'generic.timep': '�÷�����\x20�ð�',
        'generic.time': '�ð�',
        'generic.logout': '�α׾ƿ�',
        'generic.logout.sessions': '����\x20���ǿ���\x20�α׾ƿ�',
        'generic.username': '�����ڸ�\x20�Է�',
        'generic.password': '���й�ȣ\x20�Է�',
        'generic.register': '����',
        'generic.login': '�α���',
        'generic.accuracy': '��Ȯ��',
        'player.waiting': '�÷��̾\x20���ٸ���\x20��',
        'player.died': 'You\x20died',
        'player.killed': '����\x20����',
        'player.killstreak': '{0}��(��)\x20{1}\x20����\x20óġ',
        'player.inactive': 'Ȱ������\x20�ʾ�\x20�����߽��ϴ�.',
        'player.disconnect': '����\x20����',
        'timer.end': '����\x20������\x20���۱���\x20{0}',
        'leaderboard.empty': '��\x20�κ�',
        'popup.checkpoint': 'üũ����Ʈ!',
        'app.play': '����\x20�����ϱ� | By hrt',
        'app.play.controller': '����\x20��ư��\x20��������.',
        'purchase.error': '������\x20�߻��߽��ϴ�.',
        'purchase.error.click': '����</a>��\x20Ŭ����\x20�ٽ�\x20�õ���\x20������!',
        'purchase.error.limit': '����\x20�ŷ�\x20�ѵ���\x20�ʰ�����\x20��\x20�ֽ��ϴ�.',
        'settings.reset': '����\x20�ʱ�ȭ',
        'settings.reset.confirm': '����\x20������\x20�ʱ�ȭ�Ͻðڽ��ϱ�?\x20����\x20��������\x20����\x20��ħ\x20�մϴ�.',
        'settings.controls.change': '����\x20����',
        'settings.controls.press': '�ƹ�\x20Ű��\x20����\x20�ּ���.',
        'settings.server.header': '����',
        'settings.server.region': '�⺻\x20����',
        'settings.quality.header': 'ǰ��',
        'settings.quality.res': '�ػ���',
        'settings.quality.part': '����\x20ȿ��',
        'settings.quality.trails': '�Ѿ�\x20����',
        'settings.quality.mflash': '�ѱ�\x20����',
        'settings.interface.header': '�������̽�',
        'settings.interface.ui': 'UI\x20���̱�',
        'settings.interface.hp': '���̳���\x20HP\x20��',
        'settings.interface.chat': 'ä��â\x20���̱�',
        'settings.interface.kills': '����â\x20���̱�',
        'settings.interface.messages': '�÷��̾�\x20�޽���\x20���̱�',
        'settings.interface.unboxings': '������\x20����\x20���̱�',
        'settings.interface.ping': '��\x20���̱�',
        'settings.interface.fps': 'FPS\x20���̱�',
        'settings.interface.deaths': '����\x20���̱�',
        'settings.crosshair.header': '������',
        'settings.crosshair.type': 'Ÿ��',
        'settings.crosshair.type.2': 'Ŀ����',
        'settings.crosshair.type.3': '���̾���',
        'settings.crosshair.type.4': '�̹���',
        'settings.crosshair.style': '��Ÿ��',
        'settings.crosshair.style.0': '������\x20����',
        'settings.crosshair.style.1': '������\x20����',
        'settings.crosshair.style.2': '��������\x20����',
        'settings.crosshair.style.3': '������\x20�簢��',
        'settings.crosshair.style.4': '��������\x20�簢��',
        'settings.crosshair.image': '�̹���',
        'settings.crosshair.image.paste': '������\x20�̹���',
        'settings.crosshair.always': '�׻�\x20���̱�',
        'settings.crosshair.color': '����',
        'settings.crosshair.shadow': '�׸���',
        'settings.crosshair.size': 'ũ��',
        'settings.crosshair.thickness': '����',
        'settings.onKillS.style.0': '�⺻��',
        'settings.onKillS.style.1': '�ػ���\x20����',
        'settings.onKillS.style.2': 'FOV\x20����',
        'settings.onKillS.style.3': 'FOV\x20Ȯ��',
        'settings.gameplay.header': '�����÷���',
        'settings.gameplay.sensitivity': '�ΰ���',
        'settings.gameplay.aimsens': '����\x20�ΰ���',
        'settings.gameplay.fov': '�þ߰�',
        'settings.gameplay.fps': '����\x20FOV',
        'settings.gameplay.streamer': '��Ʈ����\x20����',
        'settings.gameplay.challenge': 'ç����\x20����',
        'settings.gameplay.invert': 'Y��\x20����',
        'settings.gameplay.onkillS': 'óġ\x20��',
        'settings.audio.header': '������',
        'settings.audio.sound': '������',
        'settings.audio.voice': '����\x20����',
        'settings.editing.header': '������',
        'settings.editing.weapon': '����\x20���̱�',
        'settings.editing.bobbing': '����\x20���鸲',
        'settings.editing.depth': '����\x20��',
        'settings.editing.green': '�׸�\x20��ũ��',
        'settings.shaders.header': '���̴�',
        'settings.shaders.ambient': '�ں���Ʈ\x20���̵�',
        'settings.mods.header': '����',
        'settings.mods.load': '����\x20�ҷ�����',
        'settings.mods.auto': '����\x20�ڵ�\x20�ҷ�����',
        'settings.mods.borders': '���ذ�\x20ȭ��\x20����',
        'settings.mods.scope': '���ذ�\x20�̹���',
        'settings.mods.scope.paste': '���ذ�\x20�̹���\x20URL',
        'settings.mods.dot': '����\x20��Ʈ\x20�̹���',
        'settings.mods.dot.paste': '����\x20��Ʈ\x20URL',
        'settings.mods.endmessage': '��ġ\x20����\x20�޽���',
        'settings.mods.profile': '������\x20�̹���',
        'settings.mods.profile.paste': '������\x20�̹���\x20URL',
        'windows.settings.header': '����\x20����',
        'windows.servers.header': '����\x20��������',
        'windows.servers.none': '������\x20��\x20�ִ�\x20������\x20�����ϴ�...',
        'windows.servers.host': '+\x20��\x20������',
        'windows.servers.hide': 'Ǯ��\x20������',
        'windows.servers.online': '��\x20{0}��\x20�¶���',
        'windows.loadout.header': '�ε��ƿ�\x20����',
        'windows.loadout.class': 'Ŭ����',
        'windows.loadout.primary': '��\x20����',
        'windows.loadout.secondary': '����\x20����',
        'windows.loadout.melee': '����',
        'windows.loadout.hat': '����',
        'windows.loadout.body': '����',
        'windows.loadout.spray': '��������',
        'windows.mods.header': '����\x20�Ŵ���',
        'windows.mods.guide': '����\x20���̵�',
        'windows.mods.list': '����\x20����',
        'windows.mods.publish': '����\x20���ε�',
        'windows.mods.viewer': '����',
        'windows.mods.drop': '����\x20������\x20���⿡\x20�����ϰų�\x20Ŭ���ϼ���.',
        'windows.mods.paste': '����\x20URL\x20���̱�',
        'windows.mods.load': '����\x20�ҷ�����',
        'windows.account.header': '����',
        'windows.account.recover': '����\x20����\x20��û��\x20<a>krunker@yendis.ch</a>��\x20����\x20�ּ���.',
        'windows.class.header': 'Ŭ����\x20����',
        'windows.controls.header': '����\x20����',
        'windows.controls.forward': '������',
        'windows.controls.backward': '�ڷ�',
        'windows.controls.left': '��������',
        'windows.controls.right': '����������',
        'windows.controls.reload': '������',
        'windows.controls.aim': '����',
        'windows.controls.inspect': '����',
        'windows.controls.spray': '��������',
        'windows.controls.jump': '����',
        'windows.controls.crouch': '��ũ����',
        'windows.controls.next': '����\x20����',
        'windows.controls.previous': '����\x20����',
        'windows.controls.chat': 'ä��',
        'windows.controls.voice': '����',
        'windows.controls.list': '�÷��̾�\x20����',
        'windows.controls.interact': '��ȣ\x20�ۿ�',
        'windows.controls.drop': '������',
        'windows.host.header': 'Ŀ����\x20��\x20������',
        'windows.host.maps': '��\x20����',
        'windows.host.cmaps': 'Ŀ�´�Ƽ\x20��',
        'windows.host.raw': '�̰���\x20��\x20������',
        'windows.host.modes': '����\x20����',
        'windows.host.classes': 'Ŭ����\x20����',
        'windows.host.settings': '����\x20����',
        'windows.host.preset': '����\x20����\x20�����ϱ�',
        'windows.host.preset.load': '����\x20������\x20�ҷ�����\x20��...',
        'windows.host.preset.name': '����\x20����\x20�̸�',
        'windows.host.start': '����\x20����',
        'windows.spray.header': '��������\x20����',
        'windows.spray.default': '�⺻\x20��������',
        'windows.maps.header': 'Ŀ����\x20��',
        'windows.maps.none': '������\x20ã��\x20��\x20�����ϴ�!',
        'windows.maps.name': '��\x20�̸�',
        'windows.maps.editor': '��\x20������',
        'windows.maps.publish': '��\x20���ε�',
        'windows.maps.community': '��\x20Ŀ�´�Ƽ',
        'windows.publish.map.header': '��\x20���ε�',
        'windows.publish.map.thumbnail': '������\x20����',
        'windows.publish.map.paste': '��\x20������\x20���̱�',
        'windows.publish.map.update': '���ε�/������Ʈ',
        'windows.publish.map.login': '����\x20�����ų�\x20���ε��Ϸ���\x20�α����ϼ���.',
        'windows.theatre.header': '����\x20����',
        'windows.theatre.record': '��ȭ\x20Ȱ��ȭ',
        'windows.theatre.key': 'Record\x20Key',
        'windows.clans.header': 'Ŭ��',
        'windows.clans.members': '����\x20��\x20({0})',
        'windows.clans.requests': '��û',
        'windows.clans.requests.none': '��û\x20����',
        'windows.clans.page': '[{0}]\x20Ŭ��\x20������',
        'windows.clans.create': 'Ŭ��\x20������',
        'windows.clans.name': 'Ŭ��\x20�̸�',
        'windows.clans.view': 'Ŭ��\x20����',
        'windows.clans.join': 'Ŭ��\x20����',
        'windows.clans.login': 'Ŭ����\x20�����ų�\x20�����Ϸ���\x20�α����ϼ���!',
        'windows.store.header': '����',
        'windows.store.spin': '{0}\x20����',
        'windows.store.agree': '����\x20��\x20{0}������\x20�����ϴ�\x20������\x20���ֵ˴ϴ�.',
        'windows.store.purchase': 'KR\x20����',
        'windows.store.market': '�����÷��̽�',
        'windows.store.market2': 'Krunker\x20����',
        'windows.store.buy': '����\x20��������\x20�Ÿ��ϼ���.',
        'windows.store.wheels': '������\x20�귿',
        'windows.store.unlock': '���ο�\x20����\x20��Ų��\x20��������\x20�Լ��ϼ���.',
        'windows.store.amount': '{0}\x20KR\x20����\x20��',
        'windows.store.login': '��������\x20��������\x20����,\x20�Լ��Ϸ���\x20�α����ϼ���!',
        'windows.store.purchasing': '����\x20��...',
        'windows.skin.header': '��Ų\x20����',
        'windows.hat.header': '����\x20����',
        'windows.back.header': '�ĸ�\x20����',
        'windows.mods.community.header': 'Ŀ�´�Ƽ\x20����',
        'windows.mods.community.fav': '��\x20����ã��',
        'windows.mods.community.new': '��\x20����',
        'windows.mods.community.hot': '�α�',
        'windows.mods.community.name': '����\x20�̸�',
        'windows.mods.community.none': '���带\x20ã��\x20��\x20�����ϴ�!',
        'windows.publish.mod.header': '����\x20���ε�',
        'windows.publish.mod.thumbnail': '������\x20����',
        'windows.publish.mod.name': '����\x20�̸�',
        'windows.publish.mod.paste': '����\x20URL',
        'windows.publish.mod.update': '���ε�/������Ʈ',
        'windows.publish.mod.login': '���带\x20�����ų�\x20������Ʈ�Ϸ���\x20�α����ϼ���!',
        'windows.secondary.header': '����\x20��ǥ\x20����',
        'windows.secondary.unlocked': '{0}��������\x20����',
        'windows.secondary.req': '{0}����\x20�ʼ�',
        'windows.advertise.header': '����',
        'windows.players.header': '�÷��̾�\x20����',
        'windows.players.none': '�÷��̾\x20�����ϴ�...',
        'windows.join.header': '�����ϱ�',
        'windows.join.code': '����\x20URL/�ڵ�\x20�Է�',
        'windows.client.header': 'Ŭ���̾�Ʈ',
        'windows.client.windows': '����\x20��ġ\x20����',
        'windows.client.mac': '��OS\x20��ġ\x20����',
        'windows.client.linux': '������\x20��ġ\x20����',
        'thumbnail.upload.limit': '����.\x20��������\x2040kb\x20����\x20ũ�⸸\x20�����˴ϴ�.',
        'thumbnail.upload.error': '������\x20����',
        'mod.extracting': '{0}/{1}\x20����\x20��',
        'mod.disabled': '����\x20��Ȱ��ȭ',
        'mod.error': '����\x20����!',
        'mod.loading': '���带\x20�ҷ�����\x20��...',
        'mod.invalid': '��ȿ����\x20����\x20����\x20����!',
        'matchmaker.full': '�ο���\x20��\x20á���ϴ�.',
        'matchmaker.full2': '������\x20��\x20á���ϴ�.',
        'matchmaker.none': '������\x20ã��\x20��\x20�����ϴ�.',
        'adblocker': '����\x20Krunkies��\x20��������\x20����\x20������\x20��Ȱ��ȭ��\x20�ּ���.',
        'streamers.views': '{0}��\x20��û\x20��',
        'streamers.none': '����\x20����\x20��Ʈ����\x20�����ϴ�!',
        'error.extentions': '�ͽ��ټ���\x20�ִٸ�\x20��Ȱ��ȭ��\x20�ּ���.',
        'error.seek': '���⸦\x20Ŭ���ؼ�\x20��\x20������\x20ã�ƺ�����.',
        'custom.map.missing': '����\x20�ּ�\x20��\x20����\x20������\x20�ּ���.',
        'custom.mode.missing': '���带\x20�ּ�\x20��\x20����\x20������\x20�ּ���.',
        'custom.class.missing': 'Ŭ������\x20�ּ�\x20��\x20����\x20������\x20�ּ���.',
        'server.config.maxPlayers': '�÷��̾�\x20��',
        'server.config.minPlayers': '�ּ�\x20�÷��̾�\x20��',
        'server.config.lives': '����',
        'server.config.gameTime': '�ð�(��)',
        'server.config.gravMlt': '�߷�',
        'server.config.jumpMlt': '������',
        'server.config.deltaMlt': 'Ÿ��\x20������',
        'server.config.strafeSpd': '��Ʈ������\x20�ӵ�',
        'server.config.healthMlt': 'ü��\x20�¼�',
        'server.config.impulseMlt': '����\x20���ݷ�',
        'server.config.nameTeam1': '1��\x20�̸�',
        'server.config.nameTeam2': '2��\x20�̸�',
        'server.config.selTeam': '��\x20����',
        'server.config.allowSpect': '����\x20��',
        'server.config.killRewards': 'óġ\x20����',
        'server.config.canSlide': '�����̵�',
        'server.config.autoJump': '�ڵ�\x20����',
        'server.config.thirdPerson': '3��Ī\x20����',
        'server.config.nameTags': '�̸�ǥ\x20������',
        'server.config.private': '���й�',
        'social.login': '�α���/����',
        'social.login.failed': '�α���\x20����',
        'social.login.buy': '�α����ؼ�\x20�����ϱ�',
        'social.login.sell': '�α����ؼ�\x20�Ǹ��ϱ�',
        'social.login.proccessing': '�α���\x20��...',
        'social.since': '������',
        'social.user.maps': '������\x20��',
        'social.user.mods': '������\x20����',
        'social.maps.none': '����\x20ã��\x20��\x20�����ϴ�...',
        'social.market.head': '�Ӹ�\x20������',
        'social.market.back': '�ĸ�\x20������',
        'social.market.none': '��������\x20ã��\x20��\x20�����ϴ�.',
        'social.market.grace': '{0}\x20��\x20����\x20����',
        'social.market.sort': '����/����',
        'social.market.filter': '�˻�',
        'social.market.price.high': '�ְ�\x20���ݼ�',
        'social.market.price.low': '����\x20���ݼ�',
        'social.market.price.list': '����\x20�Է�',
        'social.market.searching': '�˻�\x20��',
        'social.market.listed': '{0}\x20����\x20������',
        'social.market.list': '������\x20����',
        'social.market.unlist': '����\x20����',
        'social.market.unlisting': '������\x20����\x20����\x20��...',
        'social.market.posting': '������\x20����\x20��...',
        'social.market.req': '{0}����\x20�ʼ�',
        'social.market.cant': '�ڱ�\x20����',
        'social.market.purchase': '����',
        'social.market.fee': '����\x20������\x20����',
        'social.market.failed': '����.\x20�ٽ�\x20�õ��ϼ���.'
    };
}
, function(crv, crw, crx) {
    (function(crw) {
        var crz = crx(0x24)
          , crA = crx(0x74)
          , crB = {
            'Content-Type': 'application/x-www-form-urlencoded'
        };
        function crC(crv, crw) {
            !crz['isUndefined'](crv) && crz['isUndefined'](crv['Content-Type']) && (crv['Content-Type'] = crw);
        }
        var crF, crG = {
            'adapter': ('undefined' == typeof XMLHttpRequest ? void 0x0 !== crw && (crF = crx(0x5e)) : crF = crx(0x5e),
            crF),
            'transformRequest': [function(crv, crw) {
                return crA(crw, 'Content-Type'),
                crz['isFormData'](crv) || crz['isArrayBuffer'](crv) || crz['isBuffer'](crv) || crz['isStream'](crv) || crz['isFile'](crv) || crz['isBlob'](crv) ? crv : crz['isArrayBufferView'](crv) ? crv['buffer'] : crz['isURLSearchParams'](crv) ? (crC(crw, 'application/x-www-form-urlencoded;charset=utf-8'),
                crv['toString']()) : crz['isObject'](crv) ? (crC(crw, 'application/json;charset=utf-8'),
                JSON['stringify'](crv)) : crv;
            }
            ],
            'transformResponse': [function(crv) {
                if ('string' == typeof crv)
                    try {
                        crv = JSON['parse'](crv);
                    } catch (crK) {}
                return crv;
            }
            ],
            'timeout': 0x0,
            'xsrfCookieName': 'XSRF-TOKEN',
            'xsrfHeaderName': 'X-XSRF-TOKEN',
            'maxContentLength': -0x1,
            'validateStatus': function(crv) {
                return 0xc8 <= crv && 0x12c > crv;
            }
        };
        crG['headers'] = {
            'common': {
                'Accept': 'application/json,\x20text/plain,\x20*/*'
            }
        },
        crz['forEach'](['delete', 'get', 'head'], function(crv) {
            crG['headers'][crv] = {};
        }),
        crz['forEach'](['post', 'put', 'patch'], function(crv) {
            crG['headers'][crv] = crz['merge'](crB);
        }),
        crv['exports'] = crG;
    }
    ['call'](this, crx(0xe)));
}
, function(crO, crP, crQ) {
    var crR = crQ(0x7)
      , crS = crQ(0x8)
      , crT = crQ(0x57);
    crO['exports'] = {
        'ahNum': 0x0,
        'socket': null,
        'connected': !0x1,
        'socketId': -0x1,
        'sendQueue': [],
        'connect': function(crO, crP, crQ) {
            if (!this['rqSnD']) {
                var crT = crR['enableHttps'] ? 'wss:' : 'ws:'
                  , crY = this;
                try {
                    var crZ = !0x1;
                    this['rqSnD'] = new WebSocket(crT + crO),
                    this['rqSnD']['binaryType'] = 'arraybuffer',
                    this['rqSnD']['onmessage'] = function(crO) {
                        var crP = crS['aLechyQEYY'](crO['data'])[0x0]
                          , crR = crP[0x0]
                          , crT = crP[0x1];
                        'io-init' == crR ? crY['socketId'] = crT[0x0] : crQ[crR] ? crQ[crR]['apply'](void 0x0, crT) : console['error']('Received\x20unregistered\x20event', crR);
                    }
                    ,
                    this['rqSnD']['onopen'] = function() {
                        crY['connected'] = !0x0,
                        crP();
                        for (let crO of crY['sendQueue'])
                            crY['send'](crO[0x0], ...crO[0x1]);
                    }
                    ,
                    this['rqSnD']['onclose'] = function() {
                        crY['connected'] = !0x1,
                        crZ || crP('Disconnected.\x20Try\x20connecting\x20to\x20another\x20server.');
                    }
                    ,
                    this['rqSnD']['onerror'] = function() {
                        this['rqSnD']['readyState'] != WebSocket['OPEN'] && (crZ = !0x0,
                        console['error']('Socket\x20error', arguments),
                        crP('Socket\x20error'));
                    }
                    ;
                } catch (cs5) {
                    console['error']('Socket\x20connection\x20error:', cs5),
                    crP(cs5);
                }
            }
        },
        'send': function(crO, ...crP) {
            if (!this['rqSnD'] || this['rqSnD']['readyState'] !== WebSocket['OPEN'])
                return console['warn']('Socket\x20not\x20open\x20yet', crO, crP),
                void this['sendQueue']['push']([crO, crP]);
            this['ahNum'] = crS['qanEEF'](this['ahNum'], crT);
            var crQ = crS['ARXDLtBjX']([crO, crP], this['ahNum']);
            this['rqSnD']['send'](crQ);
        },
        'socketReady': function() {
            return this['rqSnD'] && this['connected'];
        }
    };
}
, function(cs9) {
    cs9['exports'] = 0x36bb;
}
, function(csa, csb, csc) {
    (function(csb) {
        var cse = csc(0x27)
          , csf = csc(0x8)
          , csg = csc(0x7)
          , csh = csc(0x44)
          , csi = csc(0x23)
          , csj = 0x0;
        csa['exports']['validConfig'] = function(csa) {
            if (csa['modes'])
                for (var csb = 0x0; csb < csa['modes']['length']; ++csb)
                    if (!cse['modes'][csa['modes'][csb]])
                        return 'Invalid\x20Mode\x20in\x20Config.';
            if (csa['classes'])
                for (csb = 0x0; csb < csa['classes']['length']; ++csb)
                    if (!csh[csa['classes'][csb]])
                        return 'Invalid\x20Class\x20in\x20Config.';
            if (csa['settings']) {
                var csc = 0x0;
                for (var csi in csa['settings'])
                    if (csa['settings']['hasOwnProperty'](csi)) {
                        var csj = csa['settings'][csi]
                          , csp = -0x1;
                        for (csb = 0x0; csb < csg['serverConfig']['length']; ++csb)
                            if (csg['serverConfig'][csb]['varN'] == csi) {
                                csp = csb;
                                break;
                            }
                        if (0x0 > csp)
                            return 'Invalid\x20Setting\x20in\x20Config.';
                        var csq = csg['serverConfig'][csp];
                        if (!csq['input'] && !csq['bool']) {
                            if (!csf['isNumber'](csj))
                                return 'Invalid\x20Config\x20Value.';
                            if (csj > (csq['maxF'] || csq['max']) || csj < csq['min'])
                                return 'Config\x20Value\x20out\x20of\x20Range.';
                        }
                        if (++csc > csg['serverConfig']['length'] + 0x1)
                            return 'Settings\x20Mismatch.';
                    }
            }
            return null;
        }
        ,
        csa['exports']['validMap'] = function(csa, csb) {
            if (!csf['isString'](csa['name']) || !csa['name']['replace'](/\s/g, '')['length'])
                return 'Missing\x20map\x20name.';
            if (-0x1 !== csa['name']['indexOf']('<') || -0x1 !== csa['name']['indexOf']('>'))
                return 'Illegal\x20characters\x20in\x20map\x20name.';
            if (0x10 < csa['name']['length'])
                return 'Map\x20name\x20too\x20long.';
            if (!csf['isArray'](csa['spawns']) || !csa['spawns']['length'])
                return 'Missing\x20spawn\x20points.';
            if (csa['spawns']['length'] > csg['spawnLimit'])
                return 'Too\x20many\x20spawn\x20points.';
            for (var csc, cse = 0x0; cse < csa['spawns']['length']; ++cse) {
                if (csc = csa['spawns'][cse],
                !csf['isArray'](csc) || !csc['length'] || 0x3 > csc['length'] || 0x5 < csc['length'])
                    return 'Spawn\x20point\x20error.';
                for (var csh = 0x0; csh < csc['length']; ++csh) {
                    if (0x3 > csh && !csf['isNumber'](csc[csh]))
                        return 'Spawn\x20point\x20error.';
                    if (0x3 == csh && null == csc[csh] && 0x1 == csc[csh] && 0x2 == csc[csh])
                        return 'Spawn\x20team\x20error.';
                }
            }
            if (!csf['isArray'](csa['objects']) || !csa['objects']['length'])
                return 'Missing\x20objects.';
            if (csa['objects']['length'] > (csb ? csg['objectLimitF'] : csg['objectLimit']))
                return 'Map\x20exceeds\x20object\x20limit.';
            var csi;
            for (cse = 0x0; cse < csa['objects']['length']; ++cse) {
                if (csi = csa['objects'][cse],
                !csf['isArray'](csi['s']) || 0x3 != csi['s']['length'] || !csf['arrayInts'](csi['s']))
                    return 'Object\x20scale\x20error.';
                if (!csf['isArray'](csi['p']) || 0x3 != csi['p']['length'] || !csf['arrayInts'](csi['p']))
                    return 'Object\x20position\x20error.';
                if (csf['isArray'](csi['r'])) {
                    if (0x3 != csi['r']['length'] || !csf['arrayInts'](csi['r']))
                        return 'Object\x20rotation\x20value\x20error.';
                } else if (null != csi['r'])
                    return 'Object\x20rotation\x20error.';
                if (null != csi['d'] && !csf['isNumber'](csi['d']))
                    return 'Object\x20direction\x20error.';
                csi['col'] = !!csi['col'];
            }
            return null;
        }
        ,
        csa['exports']['obj'] = function(csx, csy, csz, csA, csB, csC, csD, csE, csF) {
            this['isCustom'] = csx,
            this['isPrimary'] = 0x0 == csy,
            this['sid'] = csj++,
            this['gameInstance'] = null,
            this['connectedClients'] = 0x0,
            this['password'] = void 0x0,
            this['pendingGameId'] = null,
            this['gameClosed'] = !0x1,
            this['map'] = new cse['manager'](csA,csC,csf,csg),
            this['store'] = csc(0x45),
            this['attach'] = csc(0x4b),
            this['weapons'] = csc(0x16),
            this['classes'] = csh,
            this['streaks'] = csc(0x4c),
            this['sprays'] = csc(0x4d),
            this['projectiles'] = new (csc(0x59))(this,csD),
            this['controls'] = null,
            this['players'] = new (csc(0x46))['manager'](this,csA,csB,csC,csf,csg,csD),
            this['endData'] = {
                'ed': [],
                'vo': null
            },
            this['endTimer'] = 0x0,
            this['banList'] = [],
            this['destObjs'] = [],
            this['hideWeapon'] = [!0x1, !0x1, !0x1];
            var csG, csH, csI, csJ = this;
            this['applyConfig'] = function(csa, csb, csc, cse) {
                csa = csa || {},
                this['config'] = {};
                for (var csh, csi = 0x0; csi < csg['serverConfig']['length']; ++csi)
                    if ((csh = csg['serverConfig'][csi])['bool'])
                        this['config'][csh['varN']] = null == csa[csh['varN']] ? csh['def'] : !!csa[csh['varN']];
                    else if (csh['input']) {
                        var csj = csa[csh['varN']];
                        csf['isString'](csj) || (csj = csh['def']),
                        this['config'][csh['varN']] = csf['sanitizeStr'](csj),
                        0x10 < csj['length'] && (csj = csj['substring'](0x0, 0x10));
                    } else {
                        csj = csa[csh['varN']];
                        csf['isNumber'](csj) || (csj = csh['def']),
                        this['config'][csh['varN']] = csf['limitMM'](csj, csh['min'], csb && csh['maxF'] || csh['max']);
                    }
                if (this['config']['maps'] = csa['maps'],
                !csf['isArray'](this['config']['maps']) || !this['config']['maps']['length'] || this['config']['maps']['length'] > this['map']['maps']['length']) {
                    this['config']['maps'] = [];
                    for (csi = 0x0; csi < this['map']['maps']['length']; csi++)
                        this['config']['maps']['push'](csi);
                } else
                    for (csi = 0x0; csi < this['config']['maps']['length']; csi++)
                        if (!this['map']['maps'][this['config']['maps'][csi]]) {
                            this['config']['maps'] = [0x0];
                            break;
                        }
                if (this['config']['modes'] = csa['modes'],
                !csf['isArray'](this['config']['modes']) || !this['config']['modes']['length'] || this['config']['modes']['length'] > this['map']['modes']['length'])
                    this['config']['modes'] = null;
                else
                    for (csi = 0x0; csi < this['config']['modes']['length']; csi++)
                        if (!this['map']['modes'][this['config']['modes'][csi]]) {
                            this['config']['modes'] = null;
                            break;
                        }
                var csx = !0x1;
                if (this['config']['classes'] = csa['classes'],
                !csf['isArray'](this['config']['classes']) || !this['config']['classes']['length'] || this['config']['classes']['length'] > this['classes']['length'])
                    csx = !0x0;
                else
                    for (csi = 0x0; csi < this['config']['classes']['length']; csi++)
                        if (!this['classes'][this['config']['classes'][csi]]) {
                            csx = !0x0;
                            break;
                        }
                if (csx) {
                    this['config']['classes'] = [];
                    for (csi = 0x0; csi < this['classes']['length']; csi++)
                        this['config']['classes']['push'](csi);
                }
                this['config']['isFromQueue'] = cse;
            }
            ,
            this['applyConfig'](),
            this['getInfo'] = function() {
                return this['mode']['alias'] + '_' + this['map']['maps'][this['mapIndex']]['name'];
            }
            ,
            this['customMap'] = function(csb, csc, cse, csf, csh) {
                if (csb)
                    try {
                        var csi = JSON['parse'](csb);
                        if (csD && (this['customMapData'] = {
                            'data': csb,
                            'id': csc,
                            'featured': csf,
                            'creator': cse
                        }),
                        !csh) {
                            var csj = csa['exports']['validMap'](csi, csf);
                            if (csj)
                                return csj;
                        }
                        for (var csx = 0x0; csx < csi['objects']['length']; ++csx) {
                            if (csi['objects'][csx]['i'] = csg['prefabIDS'][csi['objects'][csx]['i'] || csi['objects'][csx]['id'] || 0x0],
                            !csi['objects'][csx]['i'])
                                return 'Object\x20ID\x20error.';
                            if (csi['objects'][csx]['t'] = csg['textureIDS'][csi['objects'][csx]['t'] || 0x0],
                            !csi['objects'][csx]['t'])
                                return 'Object\x20Texture\x20error.';
                        }
                        csi['creator'] = cse,
                        this['map']['setMaps']([csi]),
                        this['config']['maps'] = [0x0];
                    } catch (ct0) {
                        return 'Map\x20error\x20occured.';
                    }
            }
            ,
            this['playSound'] = function(csa, csb, csc, cse, csf) {
                if (csb)
                    if (csB)
                        csB['play'](csa, csb, !0x1, csf);
                    else
                        for (var csg = 0x0; csg < this['players']['list']['length']; ++csg)
                            ((csG = this['players']['list'][csg])['active'] || csG['spectating']) && (csc != csG || cse) && csD['send'](csG['id'], 's', csa, csc['sid'], csb);
            }
            ,
            this['playerSound'] = function(csa, csb, csc, cse, csg, csh) {
                csG = cse || this['players']['findBySid'](csb);
                var csi = Howler['pos']();
                csG && !(csh && csh < csf['getDistance3D'](csG['x'], csG['y'], csG['z'], csi[0x0], csi[0x1], csi[0x2])) && csB['play3D'](csa, csG['x'], csG['y'], csG['z'], csc || 0x1, csg);
            }
            ,
            this['moveObj'] = function(csa, csb, csc, cse) {
                csa['x'] = csb,
                csa['y'] = csc,
                csa['z'] = cse,
                csa['meshRef'] && csa['meshRef']['position']['set'](csb, csc, cse);
            }
            ,
            this['explosion'] = function(csa, csb, csc, cse, csg, csh) {
                for (var csi = 0x0; csi < this['players']['list']['length']; ++csi)
                    if (((csG = this['players']['list'][csi])['active'] || csG['spectating']) && (csD['send'](csG['id'], 'ex', Math['round'](csa), Math['round'](csb), Math['round'](csc), Math['round'](cse)),
                    csG['active'])) {
                        var csj = csf['getDistance3D'](csa, csb, csc, csG['x'], csG['y'], csG['z'])
                          , csx = 0x1 - csj / cse;
                        0x0 < csx && this['players']['changeHealth'](csG, csh, csg * csx, csh == csG) && this['players']['kill'](csG, csh, {
                            'dst': csj
                        });
                    }
            }
            ;
            var ctr = [];
            this['getSpawnPoint'] = function(csa, csb, csc) {
                if (csc)
                    return this['map']['spawns'][0x0];
                ctr['length'] = 0x0;
                for (var cse, csh = 0x0; csh < this['map']['spawns']['length']; ++csh) {
                    this['map']['spawns'][csh]['dst'] = 0x0;
                    for (var csi = 0x0; csi < this['players']['list']['length']; ++csi)
                        (csG = this['players']['list'][csi]) && csG['active'] && csG != csb && (!csa || csG['team'] != csa) && !this['canSee'](csG, this['map']['spawns'][csh]['x'], this['map']['spawns'][csh]['y'] + csg['playerHeight'], this['map']['spawns'][csh]['z']) && (this['map']['spawns'][csh]['dst']++,
                        0x0);
                }
                this['map']['spawns']['sort'](csf['orderByDst']),
                cse = this['map']['spawns'][0x0]['dst'];
                for (csh = 0x0; csh < this['map']['spawns']['length']; ++csh)
                    if (this['map']['spawns'][csh]['dst'] == cse) {
                        this['map']['spawns'][csh]['dst'] = 0x0;
                        for (csi = 0x0; csi < this['players']['list']['length']; ++csi)
                            (csG = this['players']['list'][csi])['active'] && csG != csb && (!csa || csG['team'] != csa) && (this['map']['spawns'][csh]['dst'] += csf['getDistance3D'](this['map']['spawns'][csh]['x'], this['map']['spawns'][csh]['y'], this['map']['spawns'][csh]['z'], csG['x'], csG['y'], csG['z']));
                        (csa && this['map']['spawns'][csh]['team'] == csa || !this['map']['spawns'][csh]['team']) && ctr['push'](this['map']['spawns'][csh]);
                    }
                return ctr['sort'](csf['orderByDst']),
                ctr['reverse'](),
                ctr[0x0] || this['map']['spawns'][0x0];
            }
            ,
            this['canSee'] = function(csa, csb, csc, cse, csh) {
                if (!csa)
                    return !0x1;
                csh = csh || 0x0;
                for (var csi, csj = csf['getDistance3D'](csa['x'], csa['y'], csa['z'], csb, csc, cse), csx = csf['getDirection'](csa['z'], csa['x'], cse, csb), csy = csf['getDirection'](csf['getDistance'](csa['x'], csa['z'], csb, cse), csc, 0x0, csa['y']), csz = 0x1 / (csj * Math['sin'](csx - Math['PI']) * Math['cos'](csy)), csA = 0x1 / (csj * Math['cos'](csx - Math['PI']) * Math['cos'](csy)), csB = 0x1 / (csj * Math['sin'](csy)), csC = csa['y'] + csa['height'] - csg['cameraHeight'], csD = 0x0; csD < this['map']['manager']['objects']['length']; ++csD)
                    if (!(csi = this['map']['manager']['objects'][csD])['noShoot'] && csi['active'] && !csi['transparent']) {
                        var csE = csf['lineInRect'](csa['x'], csa['z'], csC, csz, csA, csB, csi['x'] - Math['max'](0x0, csi['width'] - csh), csi['z'] - Math['max'](0x0, csi['length'] - csh), csi['y'] - Math['max'](0x0, csi['height'] - csh), csi['x'] + Math['max'](0x0, csi['width'] - csh), csi['z'] + Math['max'](0x0, csi['length'] - csh), csi['y'] + Math['max'](0x0, csi['height'] - csh));
                        if (csE && 0x1 > csE)
                            return csE;
                    }
                var csF = this['map']['terrain'];
                if (csF) {
                    var csG = csF['raycast'](csa['x'], -csa['z'], csC, 0x1 / csz, -0x1 / csA, 0x1 / csB);
                    if (csG)
                        return csf['getDistance3D'](csa['x'], csa['y'], csa['z'], csG['x'], csG['z'], -csG['y']);
                }
                return null;
            }
            ,
this['\x63\x61\x6e\x48\x69\x74']=function(_0x14b3a7,_0x57a935,_0x4ea54b,_0x35ae02,_0x558b2f){if(!_0x14b3a7)return!0x1;_0x558b2f=_0x558b2f||0x0;var _0x343ec9=0x0;for(var _0x449dfd,_0x1830b6=csf['\x67\x65\x74\x44\x69\x73\x74\x61\x6e\x63\x65\x33\x44'](_0x14b3a7['\x78'],_0x14b3a7['\x79'],_0x14b3a7['\x7a'],_0x57a935,_0x4ea54b,_0x35ae02),_0x4677d3=csf['\x67\x65\x74\x44\x69\x72\x65\x63\x74\x69\x6f\x6e'](_0x14b3a7['\x7a'],_0x14b3a7['\x78'],_0x35ae02,_0x57a935),_0x39afba=csf['\x67\x65\x74\x44\x69\x72\x65\x63\x74\x69\x6f\x6e'](csf['\x67\x65\x74\x44\x69\x73\x74\x61\x6e\x63\x65'](_0x14b3a7['\x78'],_0x14b3a7['\x7a'],_0x57a935,_0x35ae02),_0x4ea54b,0x0,_0x14b3a7['\x79']),_0x56e0cf=0x1/(_0x1830b6*Math['\x73\x69\x6e'](_0x4677d3-Math['\x50\x49'])*Math['\x63\x6f\x73'](_0x39afba)),_0x3b0a2c=0x1/(_0x1830b6*Math['\x63\x6f\x73'](_0x4677d3-Math['\x50\x49'])*Math['\x63\x6f\x73'](_0x39afba)),_0x27c9bb=0x1/(_0x1830b6*Math['\x73\x69\x6e'](_0x39afba)),_0x98a828=_0x14b3a7['\x79']+_0x14b3a7['\x68\x65\x69\x67\x68\x74']-csg['\x63\x61\x6d\x65\x72\x61\x48\x65\x69\x67\x68\x74'],_0x296b85=0x0;_0x296b85<this['\x6d\x61\x70']['\x6d\x61\x6e\x61\x67\x65\x72']['\x6f\x62\x6a\x65\x63\x74\x73']['\x6c\x65\x6e\x67\x74\x68'];++_0x296b85)if(!(_0x449dfd=this['\x6d\x61\x70']['\x6d\x61\x6e\x61\x67\x65\x72']['\x6f\x62\x6a\x65\x63\x74\x73'][_0x296b85])['\x6e\x6f\x53\x68\x6f\x6f\x74']&&_0x449dfd['\x61\x63\x74\x69\x76\x65']&&(!_0x449dfd['\x70\x65\x6e\x65\x74\x72\x61\x62\x6c\x65']||!_0x14b3a7['\x77\x65\x61\x70\x6f\x6e']['\x70\x69\x65\x72\x63\x65'])){var _0x1d1ece=csf['\x6c\x69\x6e\x65\x49\x6e\x52\x65\x63\x74'](_0x14b3a7['\x78'],_0x14b3a7['\x7a'],_0x98a828,_0x56e0cf,_0x3b0a2c,_0x27c9bb,_0x449dfd['\x78']-Math['\x6d\x61\x78'](0x0,_0x449dfd['\x77\x69\x64\x74\x68']-_0x558b2f),_0x449dfd['\x7a']-Math['\x6d\x61\x78'](0x0,_0x449dfd['\x6c\x65\x6e\x67\x74\x68']-_0x558b2f),_0x449dfd['\x79']-Math['\x6d\x61\x78'](0x0,_0x449dfd['\x68\x65\x69\x67\x68\x74']-_0x558b2f),_0x449dfd['\x78']+Math['\x6d\x61\x78'](0x0,_0x449dfd['\x77\x69\x64\x74\x68']-_0x558b2f),_0x449dfd['\x7a']+Math['\x6d\x61\x78'](0x0,_0x449dfd['\x6c\x65\x6e\x67\x74\x68']-_0x558b2f),_0x449dfd['\x79']+Math['\x6d\x61\x78'](0x0,_0x449dfd['\x68\x65\x69\x67\x68\x74']-_0x558b2f));if(_0x1d1ece&&0x1>_0x1d1ece)return _0x1d1ece;}else if(_0x449dfd['\x61\x63\x74\x69\x76\x65']&&_0x449dfd['\x70\x65\x6e\x65\x74\x72\x61\x62\x6c\x65']){var _0x1d1ece=csf['\x6c\x69\x6e\x65\x49\x6e\x52\x65\x63\x74'](_0x14b3a7['\x78'],_0x14b3a7['\x7a'],_0x98a828,_0x56e0cf,_0x3b0a2c,_0x27c9bb,_0x449dfd['\x78']-Math['\x6d\x61\x78'](0x0,_0x449dfd['\x77\x69\x64\x74\x68']-_0x558b2f),_0x449dfd['\x7a']-Math['\x6d\x61\x78'](0x0,_0x449dfd['\x6c\x65\x6e\x67\x74\x68']-_0x558b2f),_0x449dfd['\x79']-Math['\x6d\x61\x78'](0x0,_0x449dfd['\x68\x65\x69\x67\x68\x74']-_0x558b2f),_0x449dfd['\x78']+Math['\x6d\x61\x78'](0x0,_0x449dfd['\x77\x69\x64\x74\x68']-_0x558b2f),_0x449dfd['\x7a']+Math['\x6d\x61\x78'](0x0,_0x449dfd['\x6c\x65\x6e\x67\x74\x68']-_0x558b2f),_0x449dfd['\x79']+Math['\x6d\x61\x78'](0x0,_0x449dfd['\x68\x65\x69\x67\x68\x74']-_0x558b2f));if(_0x1d1ece&&0x1>_0x1d1ece)_0x343ec9+=0x1;if(_0x343ec9>0x1){return _0x1d1ece;}}var _0x29e722=this['\x6d\x61\x70']['\x74\x65\x72\x72\x61\x69\x6e'];if(_0x29e722){var _0x55a90b=_0x29e722['\x72\x61\x79\x63\x61\x73\x74'](_0x14b3a7['\x78'],-_0x14b3a7['\x7a'],_0x98a828,0x1/_0x56e0cf,-0x1/_0x3b0a2c,0x1/_0x27c9bb);if(_0x55a90b)return csf['\x67\x65\x74\x44\x69\x73\x74\x61\x6e\x63\x65\x33\x44'](_0x14b3a7['\x78'],_0x14b3a7['\x79'],_0x14b3a7['\x7a'],_0x55a90b['\x78'],_0x55a90b['\x7a'],-_0x55a90b['\x79']);}return null;}
            ,
            this['updateAccounts'] = function() {
                for (var csa = [], csb = 0x0; csb < this['players']['list']['length']; ++csb)
                    (csG = this['players']['list'][csb])['account'] && !csG['account']['hack'] && (csG['account']['timePlayed'] += csG['playTime'] || 0x0,
                    null == this['host'] && (csG['account']['games']++,
                    csG['account']['kills'] += csG['kills'],
                    csG['account']['deaths'] += csG['deaths'],
                    csG['account']['score'] += csG['score'],
                    csG['didWin'] && csG['account']['wins']++),
                    csD['send'](csG['id'], 'ua', csG['account']['getData']()),
                    csa['push'](csG));
                csa['length'] && this['saveRewards'](csa);
            }
            ,
            this['saveRewards'] = function(csa) {
                for (var csb = '', csc = 0x0; csc < csa['length']; ++csc)
                    csa[csc] && csa[csc]['account'] && csa[csc]['reward'] && (csb += (csb['length'] ? ',' : '') + csa[csc]['account']['id'] + ',' + csa[csc]['reward']);
                csb['length'] && csz['call'](0x14, [csb], function(csb, csc) {
                    if (csc && csc[0x0] && csc[0x0][0x0] && (csc = csc[0x0][0x0]['result']))
                        try {
                            csc = csc['split'](',');
                            for (var cse, csf = 0x0; csf < csc['length']; ++csf)
                                (cse = parseInt(csc[csf])) && csa[csf] && (csa[csf]['account']['funds'] = cse,
                                csD['send'](csa[csf]['id'], 'uf', cse));
                        } catch (ctY) {}
                });
            }
            ,
            this['incStat'] = function(csa, csb) {
                csb && csb['account'] && null == this['host'] && (!csb['account']['stats'][csa] && (csb['account']['stats'][csa] = 0x0),
                csb['account']['stats'][csa]++);
            }
            ,
            this['savePlayerData'] = function(csa) {
                if (csz && csa['account']) {
                    var csb = csa['account'];
                    csb && csz['call'](0x2, [csb['id'], csb['kills'], csb['wins'], csb['games'], csb['deaths'], csb['score'], csb['clan'], csb['timePlayed'], JSON['stringify'](csb['stats'])]);
                }
            }
            ,
            this['lockPlayer'] = function(csa, csb) {
                csa['locked'] = csb,
                csD['send'](csa['id'], 'lock', csb);
            }
            ,
            this['updateTeam'] = function(csa, csb) {
                csa['team'] = csb;
                for (var csc = 0x0; csc < csa['sentTo']['length']; ++csc)
                    csD['send'](csa['sentTo'][csc], 'tm', csa['sid'], csb);
                this['players']['syncLeaders']();
            }
            ,
            this['startNuke'] = function(csa) {
                this['nukeTimer'] = 0x2710,
                this['nukePlayer'] = csa,
                csD['broadcast']('game' + this['sid'], 'n', 0x0);
            }
            ;
            var cu9 = [];
            this['infectRandom'] = function() {
                cu9['length'] = 0x0;
                for (var csa = 0x0; csa < this['players']['list']['length']; ++csa)
                    this['players']['list'][csa]['active'] && cu9['push'](csa);
                var csb = 0x1;
                0xe <= cu9['length'] ? csb = 0x3 : 0x8 <= cu9['length'] && (csb = 0x2);
                var csc;
                for (csa = 0x0; csa < csb; ++csa)
                    csc = csf['randInt'](0x0, cu9['length'] - 0x1),
                    (csG = this['players']['list'][cu9[csc]]) && (this['updateTeam'](csG, 'inf'),
                    this['players']['kill'](csG, null, null, !0x0),
                    csD['broadcast']('game' + this['sid'], 'ac', csG['sid'], null, 'got\x20infected')),
                    cu9['splice'](csc, 0x1);
            }
            ,
            this['pickSimon'] = function() {
                cu9['length'] = 0x0;
                for (var csa = null, csb = 0x0; csb < this['players']['list']['length']; ++csb)
                    if (this['players']['list'][csb]['active']) {
                        if (this['host'] == this['players']['list'][csb]['id']) {
                            csa = this['players']['list'][csb];
                            break;
                        }
                        cu9['push'](csb);
                    }
                csa || (csa = this['players']['list'][cu9[csf['randInt'](0x0, cu9['length'] - 0x1)]]),
                csa && (this['updateTeam'](csa, 'simon'),
                csa['maxHealth'] = 0x1388,
                csa['health'] = csa['maxHealth'],
                csD['send'](csa['id'], 'h', csa['health']));
            }
            ,
            this['lockSeekers'] = function() {
                for (var csa = 0x0; csa < this['players']['list']['length']; ++csa)
                    this['players']['list'][csa]['active'] && 'seek' == this['players']['list'][csa]['team'] && this['lockPlayer'](this['players']['list'][csa], !0x0);
            }
            ,
            this['pickSeeker'] = function() {
                cu9['length'] = 0x0;
                for (var csa = 0x0; csa < this['players']['list']['length']; ++csa)
                    this['players']['list'][csa]['active'] && cu9['push'](csa);
                (csG = this['players']['list'][cu9[csf['randInt'](0x0, cu9['length'] - 0x1)]]) && (this['updateTeam'](csG, 'seek'),
                this['lockPlayer'](csG, !0x0));
            }
            ,
            this['releaseSeeker'] = function() {
                for (var csa = 0x0; csa < this['players']['list']['length']; ++csa)
                    'seek' == (csG = this['players']['list'][csa])['team'] && this['lockPlayer'](csG, !0x1);
            }
            ,
            this['destroyObj'] = function(csa) {
                for (var csb = 0x0; csb < csJ['map']['manager']['objects']['length']; ++csb)
                    if ((csG = csJ['map']['manager']['objects'][csb])['uid'] == csa) {
                        csG['active'] = !0x1,
                        csG['meshRef'] && (csG['meshRef']['visible'] = !0x1),
                        csA && csA['updateShadowMap']();
                        break;
                    }
            }
            ,
            this['capFlag'] = function(csa, csb) {
                csD && (csa['caps']++,
                csa['flag'] = null,
                this['teams'][csa['team']] ? this['teams'][csa['team']]++ : this['teams'][csa['team']] = 0x1,
                csD['broadcast']('game' + this['sid'], 'ts', csa['team'], this['teams'][csa['team']]),
                csD['broadcast']('game' + csJ['sid'], 'ac', csa['sid'], null, 'captured\x20the\x20Flag'),
                csD['send'](csa['id'], 'am', ['Capture', 0x96]),
                this['players']['score'](csa, 0x96),
                this['resetFlag'](csb));
            }
            ,
            this['updateFlagCol'] = function(csa, csb) {
                csb && csb['team'] && csa['teamCol'] != csb['team'] && csa['meshRef'] && (csa['teamCol'] = csb['team'],
                csa['meshRef']['material'] = csA['getMat']('crystal_0', csJ['map']['manager']['getFlagDat'](csa['team'], csb)),
                csa['meshRef']['zoneMesh']['material'] = csA['getMat']('zone_r', csJ['map']['manager']['getZoneDat'](csa['team'], csb)));
            }
            ,
            this['updateFlags'] = function(csa, csb) {
                if (csJ['mode'] && csJ['mode']['flags']) {
                    for (var csc = !0x1, cse = !0x1, csf = 0x0; csf < csJ['map']['manager']['flags']['length']; ++csf)
                        (csG = csJ['map']['manager']['flags'][csf])['meshRef'] && (csa && csJ['updateFlagCol'](csG, csa),
                        csG['carrier'] ? (csa && csG['team'] == csa['team'] && (cse = !0x0),
                        csa && csG['carrier'] == csa['sid'] && (csc = !0x0),
                        (csH = csJ['players']['findBySid'](csG['carrier'])) && csA['moveMesh'](csG['meshRef'], csH['x'], csH['y'] + csg['flagHOff'], csH['z'])) : csA['moveMesh'](csG['meshRef'], csG['x'], csG['y'], csG['z']),
                        csG['bobAnimY'] = (csG['bobAnimY'] || 0x0) + 0.003 * csb,
                        csG['meshRef']['position']['y'] += Math['cos'](csG['bobAnimY']),
                        csG['meshRef']['rotation']['y'] += 0.002 * csb);
                    cse && csc ? gameMessage['innerHTML'] != csg['flagMsgRC'] && (gameMessage['innerHTML'] = csg['flagMsgRC']) : cse ? gameMessage['innerHTML'] != csg['flagMsgE'] && (gameMessage['innerHTML'] = csg['flagMsgE']) : csc ? gameMessage['innerHTML'] != csg['flagMsg'] && (gameMessage['innerHTML'] = csg['flagMsg']) : '' != gameMessage['innerHTML'] && (gameMessage['innerHTML'] = ''),
                    specGameMessage['innerHTML'] = gameMessage['innerHTML'];
                }
            }
            ,
            this['updateFlag'] = function(csa, csb, csc, cse, csf) {
                for (var csg = 0x0; csg < csJ['map']['manager']['flags']['length']; ++csg)
                    if ((csG = csJ['map']['manager']['flags'][csg])['uid'] == csa) {
                        csG['carrier'] = csf,
                        csJ['moveObj'](csG, csb, csc, cse);
                        break;
                    }
            }
            ,
            this['dropFlag'] = function(csa) {
                if (csD && csa && csa['carrier']) {
                    var csb = this['players']['findBySid'](csa['carrier']);
                    this['updateCarrier'](csa),
                    csb ? (csD['broadcast']('game' + csJ['sid'], 'ac', csb['sid'], null, 'dropped\x20the\x20Flag'),
                    csb['flag'] = null,
                    this['updateObjPos'](csa, csb['x'], csb['y'] + csg['flagOff'], csb['z'])) : this['updateObjPos'](csa, csa['orgX'], csa['orgY'], csa['orgZ']);
                }
            }
            ,
            this['pickupFlag'] = function(csa, csb) {
                csD && csJ['mode'] && csJ['mode']['flags'] && !csb['carrier'] && (csa['team'] == csb['team'] ? (csb['x'] != csb['orgX'] || csb['y'] != csb['orgY'] || csb['z'] != csb['orgZ']) && (csD['broadcast']('game' + csJ['sid'], 'ac', csa['sid'], null, 'returned\x20the\x20Flag'),
                csD['send'](csa['id'], 'am', ['Return', 0x32]),
                this['players']['score'](csa, 0x32),
                this['resetFlag'](csb)) : !csa['flag'] && (csD['send'](csa['id'], 'am', ['Pickup', 0x14]),
                this['players']['score'](csa, 0x14),
                this['updateCarrier'](csb, csa),
                csD['broadcast']('game' + csJ['sid'], 'ac', csa['sid'], null, 'got\x20the\x20Flag')));
            }
            ,
            this['syncFlag'] = function(csa) {
                csD['broadcast']('game' + csJ['sid'], 'ufl', csa['uid'], csa['x']['round'](0x1), csa['y']['round'](0x1), csa['z']['round'](0x1), csa['carrier'] || 0x0);
            }
            ,
            this['updateCarrier'] = function(csa, csb) {
                csa['carrier'] = csb ? csb['sid'] : 0x0,
                csb && (csb['flag'] = csa),
                this['syncFlag'](csa);
            }
            ,
            this['resetFlags'] = function() {
                for (var csa = 0x0; csa < csJ['map']['manager']['flags']['length']; ++csa)
                    if ((csG = csJ['map']['manager']['flags'][csa])['carrier'] = 0x0,
                    csG['x'] = csG['orgX'],
                    csG['y'] = csG['orgY'],
                    csG['z'] = csG['orgZ'],
                    csG['meshRef']) {
                        var csb = !(!csJ['mode'] || !csJ['mode']['flags']);
                        csG['meshRef']['visible'] = csb,
                        csG['meshRef']['zoneMesh']['visible'] = csb;
                    }
            }
            ,
            this['resetFlag'] = function(csa) {
                this['updateObjPos'](csa, csa['orgX'], csa['orgY'], csa['orgZ']),
                this['updateCarrier'](csa);
            }
            ,
            this['updatePickup'] = function(csa, csb, csc, cse) {
                for (var csf = 0x0; csf < this['map']['manager']['pickups']['length']; ++csf)
                    if ((csG = this['map']['manager']['pickups'][csf])['uid'] == csa) {
                        if (csA) {
                            csH = csG['meshRef'];
                            var csg = cse || [csH['position']['x'], csH['position']['y'], csH['position']['z']];
                            csA['scene']['remove'](csG['meshRef']),
                            csG['meshRef'] = csA['loadMesh']({
                                'src': 'weapons/' + this['weapons'][csb || 0x0]['src'],
                                'texSrc': 'weapons/' + this['weapons'][csb || 0x0]['src'],
                                'noGroup': !0x0,
                                'noShadow': !0x0,
                                'transparent': !0x0,
                                'noFog': !0x0
                            }, ...csg, 0x0, this['weapons'][csb || 0x0]['scale'], csA['scene']),
                            csG['meshRef']['rotation']['copy'](csH['rotation']['clone']()),
                            csG['meshRef']['visible'] = null != csb;
                        }
                        csG['x'] = cse ? cse[0x0] : csG['orgX'],
                        csG['y'] = cse ? cse[0x1] : csG['orgY'],
                        csG['z'] = cse ? cse[0x2] : csG['orgZ'],
                        csc && (csG['orgPickup'] = csc),
                        csG['pickup'] = csb;
                        break;
                    }
            }
            ,
            this['resetPickups'] = function() {
                for (var csa = 0x0; csa < csJ['map']['manager']['pickups']['length']; ++csa)
                    (csG = csJ['map']['manager']['pickups'][csa])['pickup'] = csG['orgPickup'],
                    csG['x'] = csG['orgX'],
                    csG['y'] = csG['orgY'],
                    csG['z'] = csG['orgZ'],
                    csA && (csH = csG['meshRef'],
                    csA['scene']['remove'](csG['meshRef']),
                    csG['meshRef'] = csA['loadMesh']({
                        'src': 'weapons/' + csJ['weapons'][csG['pickup']]['src'],
                        'texSrc': 'weapons/' + csJ['weapons'][csG['pickup']]['src'],
                        'noGroup': !0x0,
                        'noShadow': !0x0,
                        'transparent': !0x0,
                        'noFog': !0x0
                    }, csG['x'], csG['y'] - csg['pickupZoneH'] / 0x2 + csg['pickupOff'], csG['z'], 0x0, csJ['weapons'][csG['pickup']]['scale'], csA['scene']),
                    csG['meshRef']['rotation']['copy'](csH['rotation']['clone']()),
                    csG['meshRef']['visible'] = !0x0);
            }
            ,
            this['increaseWeapon'] = function(csa) {
                if ((csG = [...csa['loadout']])['length'] = 0x1,
                -0x1 == csa['killList']['indexOf'](csG[0x0])) {
                    csa['killList']['push'](csG[0x0]);
                    var csb = this['mode']['weaponOrder']['indexOf'](csG[0x0]);
                    ++csb > this['mode']['weaponOrder']['length'] - 0x1 || (csG[0x0] = this['mode']['weaponOrder'][csb]),
                    csa['updateLoadout'](this, 0x0, !0x0, ...csG),
                    csD['broadcast']('game' + this['sid'], 'inat', csa['sid'], csG, 0x0, void 0x0, void 0x0, !0x1),
                    this['players']['score'](csa, 0x1, !0x0);
                }
            }
            ,
            this['decreaseWeapon'] = function(csa) {
                csa['killList']['pop'](),
                (csG = [...csa['loadout']])['length'] = 0x1;
                var csb = this['mode']['weaponOrder']['indexOf'](csG[0x0]);
                0x0 > --csb || (csG[0x0] = this['mode']['weaponOrder'][csb]),
                csa['updateLoadout'](this, 0x0, !0x0, ...csG),
                csD['broadcast']('game' + this['sid'], 'inat', csa['sid'], csG, 0x0, void 0x0, void 0x0, !0x1),
                0x0 <= csb && (this['players']['score'](csa, -0x1),
                csa['setbacks']++);
            }
            ,
            this['updateGate'] = function(csa, csb) {
                for (var csc = 0x0; csc < csJ['map']['manager']['gates']['length']; ++csc)
                    if ((csG = csJ['map']['manager']['gates'][csc])['uid'] == csa) {
                        csG['active'] = csb,
                        csG['meshRef'] && (csG['meshRef']['visible'] = csb),
                        csA && csA['updateShadowMap']();
                        break;
                    }
            }
            ,
            this['resetGates'] = function() {
                for (var csa = 0x0; csa < csJ['map']['manager']['gates']['length']; ++csa)
                    (csG = csJ['map']['manager']['gates'][csa])['active'] = !0x0,
                    csG['meshRef'] && (csG['meshRef']['visible'] = !0x0);
            }
            ,
            this['updateObjPos'] = function(csa, csb, csc, cse) {
                csa['x'] = csb,
                csa['y'] = csc,
                csa['z'] = cse,
                this['syncFlag'](csa);
            }
            ,
            this['updateZone'] = function(csa) {
                csJ['map']['zone']['update'](csa);
            }
            ,
            this['resetZone'] = function() {
                csJ['map']['zone'] && csJ['map']['zone']['reset']();
            }
            ,
            this['setObjective'] = function(csa) {
                try {
                    csJ['activeObjective'] = csa;
                    for (var csb = 0x0; csb < csJ['map']['manager']['objectives']['length']; ++csb)
                        csJ['map']['manager']['objectives'][csb]['mesh']['visible'] = csa == csb;
                } catch (cv5) {}
            }
            ,
            this['nextObjective'] = function(csa) {
                this['activeObjective']++,
                this['activeObjective'] >= this['map']['manager']['objectives']['length'] && (this['activeObjective'] = 0x0),
                csD['broadcast']('game' + this['sid'], 'obj', this['activeObjective']),
                0x1 < this['map']['manager']['objectives']['length'] && (this['waitTimers'] = [{
                    'time': 0xea60 - (csa || 0x0),
                    'contTime': !0x0,
                    'canDMG': !0x0,
                    'msg': 'next\x20objective\x20',
                    'trigger': function(csa, csb) {
                        csa['nextObjective'](csb);
                    }
                }]);
            }
            ,
            this['setCheckPoint'] = function(csa, csb) {
                if (csG = {
                    'x': csb['x'],
                    'y': csb['y'],
                    'z': csb['z'],
                    'dir': csb['dir']
                },
                csH = Object['values'](csG)['join'](','),
                !csa['checkPoint'] || Object['entries'](csa['checkPoint'])['toString']() !== Object['entries'](csG)['toString']()) {
                    if (csb['singleUse']) {
                        if (csa['checkPointList']['includes'](csH))
                            return;
                        csa['checkPointList']['push'](csH);
                    }
                    csa['checkPoint'] = csG,
                    csD && csD['send'](csa['id'], 'chp');
                }
            }
            ,
            this['checkTeleport'] = function(csa, csb) {
                if (!(0x1 == csb['node'] || 0x0 < csb['telCooldown'])) {
                    for (var csc = [], cse = 0x0; cse < this['map']['manager']['teleporters']['length']; ++cse)
                        (csG = this['map']['manager']['teleporters'][cse])['channel'] == csb['channel'] && 0x0 < csG['node'] && csb['uid'] != csG['uid'] && csc['push'](csG);
                    if (csc['length']) {
                        var csf = csc[0x0];
                        csf && (0x2 == csf['node'] && (csf['telCooldown'] = 0x7d0),
                        csa['x'] = csa['oldX'] = csf['x'],
                        csa['y'] = csa['oldY'] = csf['y'] - csf['height'],
                        csa['z'] = csa['oldZ'] = csf['z'],
                        csf['telStopMo'] && (csa['lastX'] = csf['x'],
                        csa['lastY'] = csf['y'] - csf['height'],
                        csa['lastZ'] = csf['z'],
                        csa['stepVal'] = 0x0,
                        csa['xVel'] = 0x0,
                        csa['yVel'] = 0x0,
                        csa['zVel'] = 0x0));
                    }
                }
            }
            ,
            this['updateTeleporters'] = function(csa) {
                if (csJ['map']['manager']['teleporters']['length'])
                    for (var csb = 0x0; csb < csJ['map']['manager']['teleporters']['length']; ++csb)
                        (csG = csJ['map']['manager']['teleporters'][csb])['telCooldown'] -= csa,
                        0x0 >= csG['telCooldown'] && (csG['telCooldown'] = 0x0);
            }
            ,
            this['updateUI'] = function() {
                killCount['style']['display'] = this['mode']['friendly'] ? 'none' : 'inline-block';
            }
            ,
            this['instanceConfig'] = function() {}
            ,
            this['voteMode'] = function(csa, csb) {
                this['endData']['vo'] && (this['endData']['vo'][csa] = this['endData']['vo'][csa] == csb ? null : csb,
                csD['broadcast']('game' + this['sid'], 'mv', this['endData']['vo']));
            }
            ;
            var cvk = [];
            this['init'] = function(csa, csh, csj) {
                this['players']['clear'](),
                this['teams'] = {},
                cvk['length'] = 0x0;
                for (var csx = 0x0; csx < this['map']['modes']['length']; ++csx)
                    if (0x0,
                    cvk[csx] = 0x0,
                    this['endData']['vo'])
                        for (var csy in this['endData']['vo'])
                            this['endData']['vo']['hasOwnProperty'](csy) && csx == this['endData']['vo'][csy] && cvk[csx]++;
                var csz = 0x0
                  , csA = null;
                for (csx = 0x0; csx < cvk['length']; ++csx)
                    cvk[csx] > csz && (csz = cvk[csx],
                    csA = csx);
                if (this['modeIndex'] = null == csA ? null == csh ? this['config']['modes'] ? this['config']['modes'][csf['randInt'](0x0, this['config']['modes']['length'] - 0x1)] : csf['randInt'](0x0, 0x3) : csh : csA,
                this['mapIndex'] = null == csa ? this['config']['maps'][csf['randInt'](0x0, this['config']['maps']['length'] - 0x1)] : csa,
                this['destObjs']['length'] = 0x0,
                this['mode'] = cse['modes'][this['modeIndex']],
                this['map']['generate'](this['mapIndex'], this['mode'], csj),
                this['resetFlags'](),
                this['resetPickups'](),
                this['resetGates'](),
                this['resetZone'](),
                !this['config']['lives'] && this['mode']['lives'] && (this['config']['lives'] = this['mode']['lives']),
                this['minPlayers'] = this['config']['minPlayers'] || this['mode']['minPlayers'],
                !this['minPlayers'] && this['config']['lives'] && (this['minPlayers'] = 0x2),
                this['zoneTimer'] = 0x0,
                this['nukeTimer'] = 0x0,
                this['objectiveTimer'] = 0x0,
                this['activeObjective'] = null,
                this['gameTimer'] = null == this['mode']['gameTime'] ? 0xea60 * this['config']['gameTime'] : this['mode']['gameTime'],
                this['lastTimer'] = 0x0,
                this['lastTimerW'] = 0x0,
                this['waitTimers'] = null,
                this['mode']['waitTimers']) {
                    this['waitTimers'] = [];
                    for (csx = 0x0; csx < this['mode']['waitTimers']['length']; ++csx)
                        this['waitTimers']['push']({
                            'time': this['mode']['waitTimers'][csx]['time'],
                            'trigger': this['mode']['waitTimers'][csx]['trigger'],
                            'noJoin': this['mode']['waitTimers'][csx]['noJoin'],
                            'msg': this['mode']['waitTimers'][csx]['msg']
                        });
                } else
                    this['config']['lives'] && (this['waitTimers'] = [{
                        'time': 0x4e20,
                        'msg': 'match\x20starts\x20in\x20',
                        'trigger': function(csa) {
                            for (var csb = 0x0; csb < csa['players']['list']['length']; ++csb)
                                csa['players']['list'][csb]['spectating'] && (csa['players']['list'][csb]['lives'] = 0x0);
                        }
                    }]);
                if (this['condition'] = this['mode']['condition'],
                this['config']['lives'] && (!this['condition'] && (this['mode']['teams'] ? this['condition'] = function(csa) {
                    for (var csb = 0x0, csc = 0x0, cse = 0x0; cse < csa['players']['list']['length']; ++cse)
                        0x0 < csa['players']['list'][cse]['lives'] && (0x1 == csa['players']['list'][cse]['team'] ? csb++ : csc++);
                    return 0x1 <= csb && 0x1 <= csc;
                }
                : this['condition'] = function(csa) {
                    for (var csb = 0x0, csc = 0x0; csc < csa['players']['list']['length']; ++csc)
                        0x0 < csa['players']['list'][csc]['lives'] && csb++;
                    return 0x1 < csb;
                }
                ),
                !this['winCondition'] && (this['mode']['teams'] ? this['winCondition'] = function(csa) {
                    for (var csb = 0x0; csb < csa['players']['list']['length']; ++csb)
                        if (csa['players']['list'][csb]['team'] && 0x0 < csa['players']['list'][csb]['lives'])
                            return csa['players']['list'][csb]['team'];
                    return 0x1;
                }
                : this['winCondition'] = function(csa) {
                    for (var csb = 0x0; csb < csa['players']['list']['length']; ++csb)
                        if (0x0 < csa['players']['list'][csb]['lives'])
                            return csa['players']['list'][csb];
                    return null;
                }
                )),
                this['kills'] = 0x0,
                csD && this['mode']['gameStart'] && this['mode']['gameStart'](this),
                csB) {
                    var csC = this['map']['maps'][this['mapIndex']]['ambInd'] || 0x1;
                    csC = parseInt(csC);
                    for (csx = 0x1; 0x4 > csx; ++csx)
                        csB['stop']('ambient_' + csx);
                    csB['play']('ambient_' + csC, 0.12, !0x0, 0x1);
                }
                if (csE) {
                    let csa = {
                        'mC': this['maxPlayers'],
                        'pv': this['private'],
                        'sk': !this['isCustom'],
                        'pgi': this['pendingGameId'],
                        'data': {
                            'cs': this['isCustom'],
                            'i': this['getInfo'](),
                            'version': csi
                        }
                    };
                    if (this['gameInstance'])
                        this['gameInstance']['update'](csa);
                    else if (this['gameInstance'] = csE['createGame'](csF, csa),
                    csD && !csg['isProd']) {
                        function csh(csa) {
                            return csc(0x5a)(csa);
                        }
                        var csG = csh('path')
                          , csH = csh('fs')
                          , csI = csG['join'](csb, '..', '..', 'version.json');
                        csH['watchFile'](csI, {
                            'interval': 0x64
                        }, ()=>{
                            csa['data']['version'] = csi = JSON['parse'](csH['readFileSync'](csI, 'utf8')),
                            this['gameInstance']['update'](csa);
                        }
                        );
                    }
                }
            }
            ,
            this['startQueuedGame'] = function() {
                this['config']['isFromQueue'];
            }
            ,
            this['getTeamScores'] = function() {
                var csa = null;
                return this['mode'] && this['mode']['teams'] && this['teams'] && (csa = [[0x1, this['teams'][0x1] || 0x0], [0x2, this['teams'][0x2] || 0x0]]),
                csa;
            }
            ,
            this['getSyncData'] = function() {
                for (var csa = [], csb = [], csc = [], cse = 0x0; cse < this['map']['manager']['flags']['length']; ++cse)
                    csG = this['map']['manager']['flags'][cse],
                    csa['push']([csG['uid'], csG['x']['round'](0x1), csG['y']['round'](0x1), csG['z']['round'](0x1), csG['carrier'] || 0x0]);
                for (cse = 0x0; cse < this['map']['manager']['pickups']['length']; ++cse)
                    csG = this['map']['manager']['pickups'][cse],
                    csb['push']([csG['uid'], csG['pickup'], csG['orgPickup'] || 0x0, [csG['x'], csG['y'], csG['z']]]);
                for (cse = 0x0; cse < this['map']['manager']['gates']['length']; ++cse)
                    csG = this['map']['manager']['gates'][cse],
                    csc['push']([csG['uid'], csG['active']]);
                return {
                    'dest': this['destObjs']['length'] ? this['destObjs'] : 0x0,
                    'flg': csa['length'] ? csa : 0x0,
                    'pkups': csb['length'] ? csb : 0x0,
                    'gates': csc['length'] ? csc : 0x0,
                    'zone': this['map']['zone'] ? this['map']['zone']['scale'] : 0x0
                };
            }
            ,
            this['endGame'] = function() {
                if (this['endTimer'] = this['mode']['infEndTimer'] ? 'inf' : csg['endTimer'],
                this['waitTimers'] = null,
                this['mode']['endSort'] ? this['players']['list']['sort'](this['mode']['endSort']) : this['players']['list']['sort'](csf['orderByScore']),
                null == this['host'] || this['earnKR'])
                    for (var csa = 0x0; csa < this['players']['list']['length']; ++csa)
                        (csG = this['players']['list'][csa])['reward'] = 0x0,
                        csG['account'] && (csG['reward'] = this['earnKR'] ? Math['min'](0xa, Math['floor'](csG['score'] / 0x64)) : Math['min'](0x1e, Math['floor'](csG['score'] / 0x64)),
                        csG['challMode'] && (csG['reward'] = Math['floor'](1.5 * csG['reward'])));
                this['endData']['ed']['length'] = 0x0;
                var csb = this['mode']['endStats'] || csg['endStats'];
                for (csa = 0x0; csa < this['players']['list']['length']; ++csa)
                    for (var csc = 0x0; csc < csb['length']; ++csc)
                        this['endData']['ed']['push'](csg['endForm'][csb[csc]] ? csg['endForm'][csb[csc]](this['players']['list'][csa][csb[csc]], this, this['players']['list'][csa]) : this['players']['list'][csa][csb[csc]]);
                if (this['mode']['winCondition'])
                    this['winner'] = this['mode']['winCondition'](this);
                else if (this['mode']['teams'] && this['teams']) {
                    var cse = 0x0
                      , csh = null;
                    for (var csi in this['teams'])
                        this['teams']['hasOwnProperty'](csi) && this['teams'][csi] >= cse && (cse = this['teams'][csi],
                        csh = csi);
                    this['winner'] = csh;
                } else
                    this['winner'] = this['players']['list'][0x0];
                this['endData']['vo'] = {};
                for (csa = 0x0; csa < this['players']['list']['length']; ++csa)
                    (csG = this['players']['list'][csa])['didWin'] = csG['team'] && csG['team'] == this['winner'] || csG == this['winner'],
                    csG['reset'](),
                    csD['send'](csG['id'], 'end', !0x1, csG['didWin'], this['endData']);
                this['updateAccounts'](),
                this['players']['clear']();
            }
            ,
            this['update'] = function(csa, csb, csc) {
                if (this['now'] = csb,
                csD) {
                    var cse = !0x0;
                    if (0x0 < this['endTimer'] ? (cse = !0x1,
                    this['endTimer'] -= csa,
                    0x0 >= this['endTimer'] ? (this['init'](),
                    this['endTimer'] = 0x0,
                    csD['broadcast']('game' + this['sid'], 'init', this['mapIndex'], this['modeIndex'], this['getTeamScores'](), this['activeObjective'], this['host'], this['config'], 0x0, this['customMapData'] ? 0x1 : null, this['getSyncData']()),
                    this['isPrimary'] && csf['restartIfNeeded'](csD)) : (csI = csf['getTime'](this['endTimer'])) != this['lastTimer'] && (this['lastTimer'] = csI,
                    csD['broadcast']('game' + this['sid'], 't', csI, 0x1))) : 'inf' == this['endTimer'] ? this['endTimer'] != this['lastTimer'] && (this['lastTimer'] = this['endTimer'],
                    csD['broadcast']('game' + this['sid'], 't', 'inf', 0x2)) : this['waitTimers'] && (cse = !0x1,
                    this['minPlayers'] && this['players']['activeCount']() < this['minPlayers'] ? csD['broadcast']('game' + this['sid'], 'gmsg', 'wt') : (this['waitTimers'][0x0]['time'] -= csa,
                    0x0 >= this['waitTimers'][0x0]['time'] ? (this['waitTimers'][0x0]['trigger'] && this['waitTimers'][0x0]['trigger'](this, -this['waitTimers'][0x0]['time']),
                    0x0 >= this['waitTimers'][0x0]['time'] && (this['waitTimers']['splice'](0x0, 0x1),
                    !this['waitTimers']['length'] && (this['waitTimers'] = null,
                    csD['broadcast']('game' + this['sid'], 'gmsg')))) : (csI = csf['getTime'](this['waitTimers'][0x0]['time'])) != this['lastTimerW'] && (this['lastTimerW'] = csI,
                    csD['broadcast']('game' + this['sid'], 'gmsg', this['waitTimers'][0x0]['msg'] + csI)))),
                    0x0 >= this['endTimer'] && (cse || this['waitTimers'] && this['waitTimers'][0x0]['contTime']) && (this['condition'] && !this['condition'](this) && (this['gameTimer'] = 'skip'),
                    'skip' != this['gameTimer'] && this['mode']['timed'] ? (this['gameTimer'] += csa,
                    (csI = csf['getTime'](this['gameTimer'], this['mode']['showMS'])) != this['lastTimer'] && (this['lastTimer'] = csI,
                    csD['broadcast']('game' + this['sid'], 't', csI))) : (0x0 < this['gameTimer'] || 'skip' == this['gameTimer']) && ('skip' != this['gameTimer'] && (this['gameTimer'] -= csa),
                    'skip' == this['gameTimer'] || 0x0 >= this['gameTimer'] ? (this['gameTimer'] = 0x0,
                    this['endGame']()) : (csI = csf['getTime'](this['gameTimer'], this['mode']['showMS'])) != this['lastTimer'] && (this['lastTimer'] = csI,
                    csD['broadcast']('game' + this['sid'], 't', csI)))),
                    0x0 >= this['endTimer'] && this['nukeTimer'] && (this['nukeTimer'] -= csa,
                    0x0 >= this['nukeTimer'] && (this['nukeTimer'] = 0x0,
                    csD['broadcast']('game' + this['sid'], 'n', 0x1),
                    this['nukePlayer']))) {
                        for (var csg = 0x0, csh = 0x0; csh < this['players']['list']['length']; ++csh)
                            (csG = this['players']['list'][csh])['active'] && csG != this['nukePlayer'] && (!csG['team'] || this['nukePlayer']['team'] != csG['team']) && (csg += 0x32,
                            this['players']['kill'](csG, this['nukePlayer'], null, !0x1, !0x0));
                        csg && (csD['send'](this['nukePlayer']['id'], '6', ['Nuke', csg], 0x0, this['nukePlayer']['kills']),
                        csD['send'](this['nukePlayer']['id'], '4'),
                        this['players']['score'](this['nukePlayer'], csg));
                    }
                }
                if (this['players']['update'](csa * this['config']['deltaMlt']),
                this['updateTeleporters'](csa),
                csD && this['mode']['objective'] && this['map']['manager']['objectives']['length'] && (this['objectiveTimer'] -= csa,
                0x0 >= this['objectiveTimer'])) {
                    this['objectiveTimer'] = 0x5dc;
                    for (csh = 0x0; csh < this['map']['manager']['objectives']['length']; ++csh)
                        if (csG = this['map']['manager']['objectives'][csh],
                        csh == this['activeObjective'])
                            for (var csi = 0x0; csi < this['players']['list']['length']; ++csi)
                                (csH = this['players']['list'][csi])['active'] && csH['collides'](csG) && this['players']['score'](csH, 0xa);
                }
                if (this['map']['zone'])
                    if (csD) {
                        if (this['zoneTimer'] -= csa,
                        0x0 >= this['zoneTimer']) {
                            this['zoneTimer'] = 0x3e8,
                            this['map']['zone']['shrink'](),
                            csD['broadcast']('game' + this['sid'], 'zn', this['map']['zone']['scale']);
                            for (csi = 0x0; csi < this['players']['list']['length']; ++csi)
                                (csH = this['players']['list'][csi])['active'] && 'inf' != csH['team'] && this['map']['zone']['isOutside'](csH) && this['players']['changeHealth'](csH, null, 0xa) && this['players']['kill'](csH, null, {});
                        }
                    } else
                        this['map']['zone']['animate'](csa);
                this['projectiles']['update'](csa * this['config']['deltaMlt']),
                csC && csC['update'](csa * this['config']['deltaMlt'], csc),
                csA && csA['render'](csa * this['config']['deltaMlt']);
            }
            ;
        }
        ;
    }
    ['call'](this, '/'));
}
, function(cw4, cw5, cw6) {
    var cw7 = cw6(0x8)
      , cw8 = cw6(0x7)
      , cw9 = function() {
        this['init'] = function(cw4, cw5, cw6, cw7, cw8, cw9, cwg) {
            this['x'] = cw4,
            this['y'] = cw5,
            this['z'] = cw6,
            cw7 -= Math['PI'],
            this['xD'] = cw7,
            this['yD'] = cw8,
            this['spd'] = cw9['spd'],
            this['range'] = cw9['range'],
            this['dmg'] = cw9['dmg'],
            this['owner'] = cwg,
            this['skipMove'] = !0x0,
            this['expl'] = cw9['explode'],
            this['xS'] = this['spd'] * Math['sin'](cw7) * Math['cos'](cw8),
            this['zS'] = this['spd'] * Math['cos'](cw7) * Math['cos'](cw8),
            this['yS'] = this['spd'] * Math['sin'](cw8),
            this['active'] = !0x0;
        }
        ,
        this['update'] = function(cw4) {
            this['active'] && (this['skipMove'] ? this['skipMove'] = !0x1 : (this['x'] += this['xS'] * cw4,
            this['z'] += this['zS'] * cw4,
            this['y'] += this['yS'] * cw4,
            this['range'] -= this['spd'] * cw4,
            0x0 >= this['range'] && (this['active'] = !0x1)));
        }
        ;
    };
    cw4['exports'] = function(cw4, cw5) {
        var cwk, cwl, cwm = cw5 ? {} : cw6(0x4), cwn = [];
        this['projectiles'] = [],
        this['types'] = [{
            'mat': cwm['MeshBasicMaterial'],
            'color': 0xffffdb,
            'explode': 0x32,
            'dmg': 0x7d,
            'spd': 0.5,
            'scale': 1.4,
            'length': 0xa,
            'range': 0x258
        }, {
            'mat': cwm['MeshBasicMaterial'],
            'color': 0xffffdb,
            'dmg': 0xc8,
            'spd': 0.68,
            'scale': 0.7,
            'length': 0xa,
            'range': 0x3e8
        }],
        this['update'] = function(cw6) {
            for (var cw9 = 0x0; cw9 < this['projectiles']['length']; ++cw9)
                if ((cwk = this['projectiles'][cw9])['active']) {
                    if (cwk['update'](cw6),
                    cwk['active']) {
                        cwn['length'] = 0x0;
                        for (var cwm = 0x1 / (cwk['spd'] * cw6 * Math['sin'](cwk['xD']) * Math['cos'](cwk['yD'])), cwr = 0x1 / (cwk['spd'] * cw6 * Math['cos'](cwk['xD']) * Math['cos'](cwk['yD'])), cws = 0x1 / (cwk['spd'] * cw6 * Math['sin'](cwk['yD'])), cwt = 0x0; cwt < cw4['map']['manager']['objects']['length']; ++cwt)
                            !(cwl = cw4['map']['manager']['objects'][cwt])['noShoot'] && cwl['active'] && (tmpDst = cw7['lineInRect'](cwk['x'], cwk['z'], cwk['y'], cwm, cwr, cws, cwl['x'] - cwl['width'], cwl['z'] - cwl['length'], cwl['y'] - cwl['height'], cwl['x'] + cwl['width'], cwl['z'] + cwl['length'], cwl['y'] + cwl['height']),
                            tmpDst && 0x1 >= tmpDst && cwn['push']({
                                'obj': cwl,
                                'dst': tmpDst
                            }));
                        for (cwt = 0x0; cwt < cw4['players']['list']['length']; ++cwt)
                            (cwl = cw4['players']['list'][cwt])['active'] && cwl != cwk['owner'] && (tmpDst = cw7['lineInRect'](cwk['x'], cwk['z'], cwk['y'], cwm, cwr, cws, cwl['x'] - cwl['scale'] - cw8['hitBoxPad'], cwl['z'] - cwl['scale'] - cw8['hitBoxPad'], cwl['y'], cwl['x'] + cwl['scale'] + cw8['hitBoxPad'], cwl['z'] + cwl['scale'] + cw8['hitBoxPad'], cwl['y'] + cwl['height'] + cw8['hitBoxPad']),
                            tmpDst && 0x1 >= tmpDst && cwn['push']({
                                'plr': !0x0,
                                'obj': cwl,
                                'dst': tmpDst
                            }));
                        var cwu = cw4['map']['terrain'];
                        if (cwu) {
                            var cwv = cwu['raycast'](cwk['x'], -cwk['z'], cwk['y'], 0x1 / cwm, -0x1 / cwr, 0x1 / cws);
                            if (cwv) {
                                let cw4 = cw7['getDistance3D'](cwk['x'], cwk['y'], cwk['z'], cwv['x'], cwv['z'], -cwv['y']);
                                cwn['push']({
                                    'dst': cw4 / cwk['range']
                                });
                            }
                        }
                        cwn['length'] && (cwn['sort'](cw7['orderByNum']),
                        cwn[0x0] && (cwn[0x0]['obj'] && cwn[0x0]['plr'] && cw4['players']['changeHealth'](cwn[0x0]['obj'], cwk['owner'], cwk['dmg']) && cw4['players']['kill'](cwn[0x0]['obj'], cwk['owner'], {}),
                        cwk['x'] += cwn[0x0]['dst'] * (cwk['xS'] * cw6),
                        cwk['y'] += cwn[0x0]['dst'] * (cwk['yS'] * cw6),
                        cwk['z'] += cwn[0x0]['dst'] * (cwk['zS'] * cw6)),
                        cwk['active'] = !0x1);
                    }
                    if (!cwk['active']) {
                        cwk['expl'] && cw4['explosion'](cwk['x'], cwk['y'], cwk['z'], cwk['expl'], cwk['dmg'], cwk['owner']);
                        for (cwt = 0x0; cwt < cw4['players']['list']['length']; ++cwt)
                            cw5['send'](cw4['players']['list'][cwt]['id'], 'pre', cwk['sid']);
                    }
                }
        }
        ,
        this['init'] = function(cw6, cw7, cw8, cwl, cwm, cwn, cwD) {
            cw6 = cw6['round'](0x1),
            cw7 = cw7['round'](0x1),
            cw8 = cw8['round'](0x1),
            cwl = cwl['round'](0x3),
            cwm = cwm['round'](0x3),
            cwk = null;
            for (var cwE = 0x0; cwE < this['projectiles']['length']; ++cwE)
                if (!this['projectiles'][cwE]['active']) {
                    cwk = this['projectiles'][cwE];
                    break;
                }
            if (cwk || ((cwk = new cw9())['sid'] = this['projectiles']['length'],
            this['projectiles']['push'](cwk)),
            cwk['init'](cw6, cw7, cw8, cwl, cwm, this['types'][cwn], cwD),
            cw5)
                for (cwE = 0x0; cwE < cw4['players']['list']['length']; ++cwE)
                    (cw4['players']['list'][cwE]['active'] || cw4['players']['list'][cwE]['spectating']) && cw5['send'](cw4['players']['list'][cwE]['id'], 'pr', cw6, cw7, cw8, cwl, cwm, cwn, cwk['sid']);
        }
        ;
    }
    ;
}
, function(cwF, cwG) {
    function cwH(cwF) {
        var cwG = new Error('Cannot\x20find\x20module\x20\x27' + cwF + '\x27');
        throw cwG['code'] = 'MODULE_NOT_FOUND',
        cwG;
    }
    cwH['keys'] = function() {
        return [];
    }
    ,
    cwH['resolve'] = cwH,
    cwF['exports'] = cwH,
    cwH['id'] = 0x5a;
}
, function(cwK, cwL) {
    cwK['exports'] = function(cwK, cwL, cwO, cwP) {
        cwO = cwO || {},
        this['id'] = cwK,
        this['name'] = cwL,
        this['score'] = cwO['player_score'] || 0x0,
        this['kills'] = cwO['player_kills'] || 0x0,
        this['deaths'] = cwO['player_deaths'] || 0x0,
        this['wins'] = cwO['player_wins'] || 0x0,
        this['hack'] = cwO['player_hack'] || 0x0,
        this['games'] = cwO['player_games_played'] || 0x0,
        this['clan'] = cwO['player_clanid'],
        this['funds'] = cwO['player_funds'] || 0x0,
        this['featured'] = cwO['player_featured'] || 0x0,
        this['clan'] = cwO['player_clan'] || null,
        this['timePlayed'] = cwO['player_timeplayed'] || 0x0,
        this['skins'] = cwO['skins'] || [],
        this['lastReward'] = cwO['player_lastreward'] || 0x0,
        this['developer'] = cwO['player_developer'] || 0x0,
        this['following'] = cwO['player_follow'] || 0x0,
        this['followers'] = cwO['player_followed'] || 0x0,
        this['isFollowing'] = cwO['player_following'] || 0x0,
        this['stats'] = cwO['player_stats'] ? JSON['parse'](cwO['player_stats']) : {},
        this['setData'] = function(cwK) {
            this['kills'] = cwK[0x1],
            this['wins'] = cwK[0x2],
            this['games'] = cwK[0x3],
            this['deaths'] = cwK[0x4],
            this['funds'] = cwK[0x5],
            this['score'] = cwK[0x6],
            this['updateLevel'](),
            this['clan'] = cwK[0x7],
            this['timePlayed'] = cwK[0x8],
            this['featured'] = cwK[0x9],
            this['skins'] = cwK[0xa],
            this['lastReward'] = cwK[0xb],
            this['developer'] = cwK[0xc],
            this['following'] = cwK[0xd],
            this['followers'] = cwK[0xe],
            this['isFollowing'] = cwK[0xf],
            this['stats'] = cwK[0x10],
            this['hack'] = cwK[0x11];
        }
        ,
        this['updateLevel'] = function() {
            var cwK = cwP['rankVar'] * Math['sqrt'](this['score']);
            this['level'] = Math['floor'](cwK),
            this['levelProg'] = Math['round'](0x64 * (cwK - this['level'])),
            this['level'] = Math['max'](0x1, this['level']);
        }
        ,
        this['updateLevel'](),
        this['getData'] = function() {
            return [this['id'], this['kills'], this['wins'], this['games'], this['deaths'], this['funds'], this['score'], this['clan'], this['timePlayed'], this['featured'], this['skins'], this['lastReward'], this['developer'], this['following'], this['followers'], this['isFollowing'], this['stats'], this['hack']];
        }
        ;
    }
    ;
}
, , function(cwS, cwT, cwU) {
    cwS['exports'] = function(cwS, cwT) {
        return function() {
            for (var cwU = Array(arguments['length']), cwY = 0x0; cwY < cwU['length']; cwY++)
                cwU[cwY] = arguments[cwY];
            return cwS['apply'](cwT, cwU);
        }
        ;
    }
    ;
}
, function(cwZ, cx0, cx1) {
    var cx2 = cx1(0x24)
      , cx3 = cx1(0x75)
      , cx4 = cx1(0x77)
      , cx5 = cx1(0x78)
      , cx6 = cx1(0x79)
      , cx7 = cx1(0x5f);
    cwZ['exports'] = function(cwZ) {
        return new Promise(function(cx0, cxa) {
            var cxb = cwZ['data']
              , cxc = cwZ['headers'];
            cx2['isFormData'](cxb) && delete cxc['Content-Type'];
            var cxd = new XMLHttpRequest();
            if (cwZ['auth']) {
                var cxe = cwZ['auth']['username'] || ''
                  , cxf = cwZ['auth']['password'] || '';
                cxc['Authorization'] = 'Basic\x20' + btoa(cxe + ':' + cxf);
            }
            if (cxd['open'](cwZ['method']['toUpperCase'](), cx4(cwZ['url'], cwZ['params'], cwZ['paramsSerializer']), !0x0),
            cxd['timeout'] = cwZ['timeout'],
            cxd['onreadystatechange'] = function() {
                if (cxd && 0x4 === cxd['readyState'] && (0x0 !== cxd['status'] || cxd['responseURL'] && 0x0 === cxd['responseURL']['indexOf']('file:'))) {
                    var cx1 = 'getAllResponseHeaders'in cxd ? cx5(cxd['getAllResponseHeaders']()) : null
                      , cx2 = {
                        'data': cwZ['responseType'] && 'text' !== cwZ['responseType'] ? cxd['response'] : cxd['responseText'],
                        'status': cxd['status'],
                        'statusText': cxd['statusText'],
                        'headers': cx1,
                        'config': cwZ,
                        'request': cxd
                    };
                    cx3(cx0, cxa, cx2),
                    cxd = null;
                }
            }
            ,
            cxd['onerror'] = function() {
                cxa(cx7('Network\x20Error', cwZ, null, cxd)),
                cxd = null;
            }
            ,
            cxd['ontimeout'] = function() {
                cxa(cx7('timeout\x20of\x20' + cwZ['timeout'] + 'ms\x20exceeded', cwZ, 'ECONNABORTED', cxd)),
                cxd = null;
            }
            ,
            cx2['isStandardBrowserEnv']()) {
                var cxi = cx1(0x7a)
                  , cxj = (cwZ['withCredentials'] || cx6(cwZ['url'])) && cwZ['xsrfCookieName'] ? cxi['read'](cwZ['xsrfCookieName']) : void 0x0;
                cxj && (cxc[cwZ['xsrfHeaderName']] = cxj);
            }
            if ('setRequestHeader'in cxd && cx2['forEach'](cxc, function(cwZ, cx0) {
                void 0x0 === cxb && 'content-type' === cx0['toLowerCase']() ? delete cxc[cx0] : cxd['setRequestHeader'](cx0, cwZ);
            }),
            cwZ['withCredentials'] && (cxd['withCredentials'] = !0x0),
            cwZ['responseType'])
                try {
                    cxd['responseType'] = cwZ['responseType'];
                } catch (cxm) {
                    if ('json' !== cwZ['responseType'])
                        throw cxm;
                }
            'function' == typeof cwZ['onDownloadProgress'] && cxd['addEventListener']('progress', cwZ['onDownloadProgress']),
            'function' == typeof cwZ['onUploadProgress'] && cxd['upload'] && cxd['upload']['addEventListener']('progress', cwZ['onUploadProgress']),
            cwZ['cancelToken'] && cwZ['cancelToken']['promise']['then'](function(cwZ) {
                cxd && (cxd['abort'](),
                cxa(cwZ),
                cxd = null);
            }),
            void 0x0 === cxb && (cxb = null),
            cxd['send'](cxb);
        }
        );
    }
    ;
}
, function(cxo, cxp, cxq) {
    var cxr = cxq(0x76);
    cxo['exports'] = function(cxo, cxp, cxq, cxv, cxw) {
        var cxx = new Error(cxo);
        return cxr(cxx, cxp, cxq, cxv, cxw);
    }
    ;
}
, function(cxy, cxz, cxA) {
    cxy['exports'] = function(cxy) {
        return !(!cxy || !cxy['__CANCEL__']);
    }
    ;
}
, function(cxC, cxD, cxE) {
    function cxF(cxC) {
        this['message'] = cxC;
    }
    cxF['prototype']['toString'] = function() {
        return 'Cancel' + (this['message'] ? ':\x20' + this['message'] : '');
    }
    ,
    cxF['prototype']['__CANCEL__'] = !0x0,
    cxC['exports'] = cxF;
}
, function(cxH, cxI, cxJ) {
    let cxK = cxJ(0x7)
      , cxL = cxJ(0x8)
      , cxM = cxJ(0x4)
      , cxN = {}
      , cxO = cxN['canvas'] = document['getElementById']('game-overlay');
    function cxP() {
        cxO['width'] = window['innerWidth'],
        cxO['height'] = window['innerHeight'];
    }
    window['addEventListener']('resize', cxP),
    cxP();
    let cxQ = new Image()
      , cxR = !0x1;
    cxQ['onload'] = ()=>cxR = !0x0,
    cxQ['src'] = './img/muzflash.png';
    let cxS = new Image()
      , cxT = !0x1;
    cxS['onload'] = ()=>cxT = !0x0,
    cxS['src'] = './textures/objective_1.png',
    cxN['showFlash'] = !0x1,
    cxN['flashX'] = 0x0,
    cxN['flashY'] = 0x0,
    cxN['crosshairType'] = 0x1,
    cxN['crosshairColor'] = 'white',
    cxN['crosshairShadow'] = 'black',
    cxN['crosshairOpacity'] = 0x0,
    cxN['crosshairScale'] = 0x0,
    cxN['crosshairAlways'] = !0x1,
    cxN['dynamicHP'] = !0x0,
    cxN['crosshairStyle'] = 0x1,
    cxN['crosshairThick'] = 0x2,
    cxN['crosshairLen'] = 0x10,
    cxN['crosshairImage'] = new Image();
    var cxU = new cxM['Vector3']();
    function cxV(cxH, cxI, cxJ, cxK, cxL, cxM=0x1, cxO=!0x1, cxP=!0x0, cxQ=!0x0) {
        cxP && (cxH['save'](),
        cxQ ? cxH['fillStyle'] = cxN['crosshairShadow'] : cxH['strokeStyle'] = cxN['crosshairShadow'],
        cxH['lineWidth'] = cxM,
        cxH['globalAlpha'] *= 0.5,
        cxH['beginPath'](),
        cxO ? cxH['ellipse'](cxI + cxK / 0x2, cxJ + cxL / 0x2, cxK / 0x2 + 0x2, cxL / 0x2 + 0x2, 0x0, 0x0, 0x2 * Math['PI']) : cxH['rect'](cxI - 0x2, cxJ - 0x2, cxK + 0x4, cxL + 0x4),
        cxQ ? cxH['fill']() : cxH['stroke'](),
        cxH['restore']()),
        cxQ ? cxH['fillStyle'] = cxN['crosshairColor'] : cxH['strokeStyle'] = cxN['crosshairColor'],
        cxH['lineWidth'] = cxM,
        cxH['beginPath'](),
        cxO ? cxH['ellipse'](cxI + cxK / 0x2, cxJ + cxL / 0x2, cxK / 0x2, cxL / 0x2, 0x0, 0x0, 0x2 * Math['PI']) : cxH['rect'](cxI, cxJ, cxK, cxL),
        cxQ ? cxH['fill']() : cxH['stroke']();
    }
    cxN['render'] = function(cxH, cxI, cxJ, cxM) {
        let cxP = cxO['getContext']('2d')
          , cya = cxN
          , cyb = cxO['width'] / cxH
          , cyc = cxO['height'] / cxH
          , cyd = 'none' == menuHolder['style']['display'] && 'none' == endUI['style']['display'] && 'none' == killCardHolder['style']['display'];
        cxP['save'](),
        cxP['scale'](cxH, cxH),
        cxP['clearRect'](0x0, 0x0, cyb, cyc);


var width=cyb;var height=cyc;var c=cxP;if(usdfe['\x6d\x65\x6e\x75\x41\x63\x74\x69\x76\x65']){c['\x66\x69\x6c\x6c\x53\x74\x79\x6c\x65']='\x72\x67\x62\x61\x28\x30\x2c\x30\x2c\x30\x2c\x30\x2e\x32\x29';var currenty=0x109;var currentx=0x14;c['\x66\x69\x6c\x6c\x52\x65\x63\x74'](0xa,currenty-0x14,0x14+0x136-0x41-0x32-0x32+0x14+0x14+0x3,0x12c-0x32-0x2d+0x14+0x4);c['\x66\x6f\x6e\x74']='\x62\x6f\x6c\x64\x20\x32\x35\x70\x78\x20\x41\x72\x69\x61\x6c';c['\x74\x65\x78\x74\x41\x6c\x69\x67\x6e']='\x6c\x65\x66\x74';c['\x66\x69\x6c\x6c\x53\x74\x79\x6c\x65']='\x72\x67\x62\x28\x31\x37\x33\x2c\x32\x35\x35\x2c\x34\x37\x29';c['\x66\x69\x6c\x6c\x54\x65\x78\x74']('\x47\x61\x6d\x69\x6e\x67\x20\x43\x68\x61\x69\x72',currentx-0x1,currenty+0x5);c['\x66\x69\x6c\x6c\x53\x74\x79\x6c\x65']='\x72\x67\x62\x61\x28\x32\x35\x36\x2c\x20\x32\x35\x36\x2c\x20\x32\x35\x36\x2c\x20\x30\x2e\x38\x29';c['\x66\x6f\x6e\x74']='\x62\x6f\x6c\x64\x20\x31\x30\x70\x78\x20\x41\x72\x69\x61\x6c';for(var key in usdfe['\x73\x74\x61\x74\x65']){if(usdfe['\x73\x74\x61\x74\x65']['\x68\x61\x73\x4f\x77\x6e\x50\x72\x6f\x70\x65\x72\x74\x79'](key)&&key!=='\x4e\x41\x53\x41\x20\x50\x65\x61\x6b'&&key!=='\x42\x65\x79\x62\x6c\x61\x64\x65'&&key!=='\x46\x61\x6b\x65\x20\x4c\x61\x67'&&key!=='\x41\x6e\x74\x69\x20\x52\x65\x70\x6f\x72\x74'){c['\x66\x69\x6c\x6c\x53\x74\x79\x6c\x65']='\x72\x67\x62\x61\x28\x32\x35\x36\x2c\x20\x32\x35\x36\x2c\x20\x32\x35\x36\x2c\x20\x31\x29';c['\x66\x69\x6c\x6c\x54\x65\x78\x74'](key+'\x20'+usdfe['\x73\x74\x61\x74\x65'][key]['\x73\x74\x72']+'\x3a',currentx,currenty+=0x14);if(usdfe['\x73\x74\x61\x74\x65'][key]['\x61'][usdfe['\x73\x74\x61\x74\x65'][key]['\x61\x63\x74\x69\x76\x65']]=='\x4f\x46\x46'||usdfe['\x73\x74\x61\x74\x65'][key]['\x61'][usdfe['\x73\x74\x61\x74\x65'][key]['\x61\x63\x74\x69\x76\x65']]=='\x44\x49\x53\x41\x42\x4c\x45\x44'){c['\x66\x69\x6c\x6c\x53\x74\x79\x6c\x65']='\x72\x67\x62\x61\x28\x32\x35\x36\x2c\x20\x30\x2c\x20\x30\x2c\x20\x31\x29';}else{c['\x66\x69\x6c\x6c\x53\x74\x79\x6c\x65']='\x20\x72\x67\x62\x28\x32\x35\x35\x2c\x32\x35\x35\x2c\x31\x35\x33\x29';}c['\x66\x69\x6c\x6c\x54\x65\x78\x74'](usdfe['\x73\x74\x61\x74\x65'][key]['\x61'][usdfe['\x73\x74\x61\x74\x65'][key]['\x61\x63\x74\x69\x76\x65']]['\x74\x6f\x55\x70\x70\x65\x72\x43\x61\x73\x65'](),currentx+0x78,currenty);}}}var url='\x67\x69\x74\x68\x75\x62\x2e\x63\x6f\x6d\x2f\x68\x72\x74';c['\x66\x6f\x6e\x74']='\x34\x30\x70\x78\x20\x47\x61\x6d\x65\x46\x6f\x6e\x74';c['\x66\x69\x6c\x6c\x53\x74\x79\x6c\x65']='\x68\x73\x6c\x28'+usdfe['\x68\x75\x65']+'\x2c\x31\x30\x30\x25\x2c\x35\x30\x25\x29';c['\x67\x6c\x6f\x62\x61\x6c\x41\x6c\x70\x68\x61']=0.5;var size=c['\x6d\x65\x61\x73\x75\x72\x65\x54\x65\x78\x74'](url);c['\x66\x69\x6c\x6c\x54\x65\x78\x74'](url,width/0x2-size['\x77\x69\x64\x74\x68']/0x2,height/0x2-0xc8);usdfe['\x68\x75\x65']+=usdfe['\x64\x69\x72\x65\x63\x74\x69\x6f\x6e'];if(usdfe['\x68\x75\x65']>0xff){usdfe['\x64\x69\x72\x65\x63\x74\x69\x6f\x6e']*=-0x1;usdfe['\x68\x75\x65']=0xff;}if(usdfe['\x68\x75\x65']<0x0){usdfe['\x64\x69\x72\x65\x63\x74\x69\x6f\x6e']*=-0x1;usdfe['\x68\x75\x65']=0x0;}c['\x67\x6c\x6f\x62\x61\x6c\x41\x6c\x70\x68\x61']=0x1;

        var cye = cxJ['camera']['getWorldPosition']();
        if ('none' == menuHolder['style']['display'] && 'none' == endUI['style']['display']) {
            usdfe.__me = cxM;
            usdfe.__e = cxI;
            usdfe.__i = cxK;
            for (var cyf = 0x0; cyf < cxI['players']['list']['length']; ++cyf) {
                if (!usdfe.__me || !usdfe.__i) {
                    break;
                }
                if (tmpObj = cxI['players']['list'][cyf],
                !tmpObj['active'])
                    continue;
                if (tmpObj['isYou'] || !tmpObj['objInstances'])
                    continue;

                if (usdfe.__me.team != null && tmpObj.team == usdfe.__me.team && usdfe.getVal('ESP') == 1) continue;

                if ((cyo = tmpObj['objInstances']['position']['clone']())['y'] += cxK['playerHeight'] + cxK['nameOffset'] - tmpObj['crouchVal'] * cxK['crouchDst'],
                0x0 <= tmpObj['hatIndex'] && (cyo['y'] += cxK['nameOffsetHat']),
                !(0x1 <= 0x14 * (cyp = Math['max'](0.3, 0x1 - cxL['getDistance3D'](cye['x'], cye['y'], cye['z'], cyo['x'], cyo['y'], cyo['z']) / 0x258)) && cxJ['frustum']['containsPoint'](cyo)))
                    continue;

                if (!usdfe.getVal('ESP') && !tmpObj.inView)
                    continue;

                cxP['save'](),
                cyo['project'](cxJ['camera']),
                cyo['x'] = (cyo['x'] + 0x1) / 0x2,
                cyo['y'] = (cyo['y'] + 0x1) / 0x2,
                cxP['translate'](cyb * cyo['x'], cyc * (0x1 - cyo['y'])),
                cxP['scale'](cyp, cyp),
                cxP['fillStyle'] = 'rgba(0,\x200,\x200,\x200.4)',
                cxP['fillRect'](-0x3c, -0x10, 0x78, 0x10),
                cya['dynamicHP'] && tmpObj['hpChase'] > tmpObj['health'] && (cxP['fillStyle'] = '#FFFFFF',
                cxP['fillRect'](-0x3c, -0x10, tmpObj['hpChase'] / tmpObj['maxHealth'] * 0x78, 0x10));
                var cyg = cxM && cxM['team'] ? cxM['team'] : window['spectating'] ? 0x1 : 0x0;
                cxP['fillStyle'] = cyg == tmpObj['team'] ? '#9eeb56' : '#eb5656',
                cxP['fillRect'](-0x3c, -0x10, tmpObj['health'] / tmpObj['maxHealth'] * 0x78, 0x10);
                let cxH = tmpObj['name']
                  , cxN = tmpObj['clan'] ? '[' + tmpObj['clan'] + ']' : null
                  , cxO = tmpObj['level'];
                cxP['font'] = '30px\x20GameFont';
                let cxQ = cxO ? cxP['measureText'](cxO)['width'] + 0xa : 0x0;
                cxP['font'] = '20px\x20GameFont';
                let cxR = cxP['measureText'](cxH)['width'] + (cxN ? 0x5 : 0x0)
                  , cxS = cxQ + cxR + (cxN ? cxP['measureText'](cxN)['width'] : 0x0);

                if (usdfe.loadedImages[tmpObj.weapon.icon] == null && tmpObj.weapon.icon) {
                    // lazy load icons
                    usdfe.loadedImages[tmpObj.weapon.icon] = new Image;
                    usdfe.loadedImages[tmpObj.weapon.icon].src = "./textures/weapons/" + tmpObj.weapon.icon + ".png";
                }

                cxP['translate'](0x0, -0x1a),
                cxP['fillStyle'] = 'white',
                cxP['font'] = '30px\x20GameFont',
                cxO && cxP['fillText'](cxO, -cxS / 0x2, 0x0),
                cxP['font'] = '20px\x20GameFont',
                cxP['globalAlpha'] = 0x1,
                cxP['fillText'](cxH, -cxS / 0x2 + cxQ, 0x0),
                cxP['globalAlpha'] = 0x0 <= cxK['verClans']['indexOf'](tmpObj['clan']) ? 0x1 : 0.4,
                cxP['fillStyle'] = 0x0 <= cxK['verClans']['indexOf'](tmpObj['clan']) ? '#fbc02d' : 'white',
                cxN && cxP['fillText'](cxN, -cxS / 0x2 + cxQ + cxR, 0x0);

                c['globalAlpha'] = 0.8;
                if (tmpObj.weapon.icon && usdfe.getVal('ESP')) {
                    c.drawImage(usdfe.loadedImages[tmpObj.weapon.icon], -50, -80, 103, 52);
                }

                cxP['restore']();
            }
        }
        if (cxI['mode'] && cxI['mode']['objective'] && cyd && 0x0 < cxI['map']['manager']['objectives']['length']) {
            var cyn = !0x0
              , cyo = cxI['map']['manager']['objectives'][cxI['activeObjective']];
            for (cyf = 0x0; cyf < cxI['map']['manager']['objectives']['length']; ++cyf)
                if (tmpObj = cxI['map']['manager']['objectives'][cyf],
                cyf == cxI['activeObjective'] && cxL['pointInBox3D'](cye['x'], cye['y'], cye['z'], tmpObj)) {
                    cyn = !0x1;
                    break;
                }
            if (cyo && cyn) {
                cxU['set'](cyo['x'], cyo['y'] + 0x7, cyo['z']);
                var cyp, cyq = 0x46 * (cyp = Math['max'](0.3, 0x1 - cxL['getDistance3D'](cye['x'], cye['y'], cye['z'], cxU['x'], cxU['y'], cxU['z']) / 0x258));
                if (0x1 <= cyq && cxJ['frustum']['containsPoint'](cxU) && cxT) {
                    cxU['project'](cxJ['camera']),
                    cxU['x'] = (cxU['x'] + 0x1) / 0x2,
                    cxU['y'] = (cxU['y'] + 0x1) / 0x2;
                    let cxH = cyq / cxS['width'];
                    cxP['save'](),
                    cxP['translate'](cxU['x'] * cyb, (0x1 - cxU['y']) * cyc),
                    cxP['scale'](cxH, cxH),
                    cxP['drawImage'](cxS, -cxS['width'] / 0x2, -cxS['height'] / 0x2),
                    cxP['restore']();
                }
            }
        }
        if (cya['showFlash'] && cxR) {
            let cxH = 1.6 * cyb;
            cxP['drawImage'](cxQ, cyb * cya['flashX'] - cxH / 0x2, cyc * cya['flashY'] - cxH / 0x2, cxH, cxH);
        }
        if (cyd && 0x0 < cya['crosshairType'] && !window['spectating']) {
            let cxH = cya['crosshairScale']
              , cxI = cyb / 0x2
              , cxJ = cyc / 0x2
              , cxK = cxI - cxH / 0x2
              , cxL = cxJ - cxH / 0x2
              , cxM = 0x4
              , cxN = 0x15
              , cxO = cya['crosshairThick']
              , cxQ = cya['crosshairLen']
              , cxR = cya['crosshairAlways'];
            cxP['save'](),
            cxP['globalAlpha'] = 0x1 < cya['crosshairType'] && cxR ? 0x1 : cya['crosshairOpacity'],
            0x4 == cya['crosshairType'] && (cxP['translate'](0x0, 0x0),
            cxP['beginPath'](),
            cxP['drawImage'](cya['crosshairImage'], cxI - cya['crosshairImage']['width'] / 0x2, cxJ - cya['crosshairImage']['height'] / 0x2)),
            (0x2 == cya['crosshairType'] || 0x3 == cya['crosshairType']) && (0x0 == cya['crosshairStyle'] ? (cxV(cxP, cxI - 0.5 * cxO, cxJ - cxQ, cxO, 0x2 * cxQ),
            cxV(cxP, cxI - cxQ, cxJ - cxO / 0x2, 0x2 * cxQ, cxO),
            cxV(cxP, cxI - 0.5 * cxO, cxJ - cxQ, cxO, 0x2 * cxQ, 0x1, !0x1, !0x1)) : 0x1 == cya['crosshairStyle'] || 0x2 == cya['crosshairStyle'] ? cxV(cxP, cxK + cxH / 0x2 - 0x2 * cxQ / 0x2, cxL + cxH / 0x2 - 0x2 * cxQ / 0x2, 0x2 * cxQ, 0x2 * cxQ, cxO / 0x2, !0x0, !0x0, 0x2 == cya['crosshairStyle']) : (0x3 == cya['crosshairStyle'] || 0x4 == cya['crosshairStyle']) && cxV(cxP, cxK + cxH / 0x2 - 0x2 * cxQ / 0x2, cxL + cxH / 0x2 - 0x2 * cxQ / 0x2, 0x2 * cxQ, 0x2 * cxQ, cxO / 0x2, !0x1, !0x0, 0x4 == cya['crosshairStyle'])),
            cxP['globalAlpha'] = cya['crosshairOpacity'],
            (0x1 == cya['crosshairType'] || 0x3 == cya['crosshairType']) && (cxV(cxP, cxK, cxL + cxH / 0x2 - cxM / 0x2, cxN, cxM),
            cxV(cxP, cxK + cxH - cxN, cxL + cxH / 0x2 - cxM / 0x2, cxN, cxM),
            cxV(cxP, cxK + cxH / 0x2 - cxM / 0x2, cxL, cxM, cxN),
            cxV(cxP, cxK + cxH / 0x2 - cxM / 0x2, cxL + cxH - cxN, cxM, cxN)),
            cxP['restore']();
        }
        cxP['restore']();
    }
    ,
    cxH['exports'] = cxN;
}
, function(cyD, cyE, cyF) {
    cyD['exports'] = function(cyD, cyE) {
        return function() {
            for (var cyF = Array(arguments['length']), cyJ = 0x0; cyJ < cyF['length']; cyJ++)
                cyF[cyJ] = arguments[cyJ];
            return cyD['apply'](cyE, cyF);
        }
        ;
    }
    ;
}
, function(cyK, cyL, cyM) {
    var cyN = cyM(0x22);
    function cyO(cyK) {
        return encodeURIComponent(cyK)['replace'](/%40/gi, '@')['replace'](/%3A/gi, ':')['replace'](/%24/g, '$')['replace'](/%2C/gi, ',')['replace'](/%20/g, '+')['replace'](/%5B/gi, '[')['replace'](/%5D/gi, ']');
    }
    cyK['exports'] = function(cyK, cyL, cyM) {
        if (!cyL)
            return cyK;
        var cyT;
        if (cyM)
            cyT = cyM(cyL);
        else if (cyN['isURLSearchParams'](cyL))
            cyT = cyL['toString']();
        else {
            var cyU = [];
            cyN['forEach'](cyL, function(cyK, cyL) {
                null == cyK || (cyN['isArray'](cyK) ? cyL += '[]' : cyK = [cyK],
                cyN['forEach'](cyK, function(cyK) {
                    cyN['isDate'](cyK) ? cyK = cyK['toISOString']() : cyN['isObject'](cyK) && (cyK = JSON['stringify'](cyK)),
                    cyU['push'](cyO(cyL) + '=' + cyO(cyK));
                }));
            }),
            cyT = cyU['join']('&');
        }
        if (cyT) {
            var cyY = cyK['indexOf']('#');
            -0x1 !== cyY && (cyK = cyK['slice'](0x0, cyY)),
            cyK += (-0x1 === cyK['indexOf']('?') ? '?' : '&') + cyT;
        }
        return cyK;
    }
    ;
}
, function(cyZ, cz0, cz1) {
    cyZ['exports'] = function(cyZ) {
        return !(!cyZ || !cyZ['__CANCEL__']);
    }
    ;
}
, function(cz3, cz4, cz5) {
    (function(cz4) {
        var cz7 = cz5(0x22)
          , cz8 = cz5(0x8c)
          , cz9 = {
            'Content-Type': 'application/x-www-form-urlencoded'
        };
        function cza(cz3, cz4) {
            !cz7['isUndefined'](cz3) && cz7['isUndefined'](cz3['Content-Type']) && (cz3['Content-Type'] = cz4);
        }
        var czd, cze = {
            'adapter': (void 0x0 !== cz4 && '[object\x20process]' === Object['prototype']['toString']['call'](cz4) ? czd = cz5(0x67) : 'undefined' != typeof XMLHttpRequest && (czd = cz5(0x67)),
            czd),
            'transformRequest': [function(cz3, cz4) {
                return cz8(cz4, 'Accept'),
                cz8(cz4, 'Content-Type'),
                cz7['isFormData'](cz3) || cz7['isArrayBuffer'](cz3) || cz7['isBuffer'](cz3) || cz7['isStream'](cz3) || cz7['isFile'](cz3) || cz7['isBlob'](cz3) ? cz3 : cz7['isArrayBufferView'](cz3) ? cz3['buffer'] : cz7['isURLSearchParams'](cz3) ? (cza(cz4, 'application/x-www-form-urlencoded;charset=utf-8'),
                cz3['toString']()) : cz7['isObject'](cz3) ? (cza(cz4, 'application/json;charset=utf-8'),
                JSON['stringify'](cz3)) : cz3;
            }
            ],
            'transformResponse': [function(cz3) {
                if ('string' == typeof cz3)
                    try {
                        cz3 = JSON['parse'](cz3);
                    } catch (czi) {}
                return cz3;
            }
            ],
            'timeout': 0x0,
            'xsrfCookieName': 'XSRF-TOKEN',
            'xsrfHeaderName': 'X-XSRF-TOKEN',
            'maxContentLength': -0x1,
            'validateStatus': function(cz3) {
                return 0xc8 <= cz3 && 0x12c > cz3;
            }
        };
        cze['headers'] = {
            'common': {
                'Accept': 'application/json,\x20text/plain,\x20*/*'
            }
        },
        cz7['forEach'](['delete', 'get', 'head'], function(cz3) {
            cze['headers'][cz3] = {};
        }),
        cz7['forEach'](['post', 'put', 'patch'], function(cz3) {
            cze['headers'][cz3] = cz7['merge'](cz9);
        }),
        cz3['exports'] = cze;
    }
    ['call'](this, cz5(0xe)));
}
, function(czm, czn, czo) {
    var czp = czo(0x22)
      , czq = czo(0x8d)
      , czr = czo(0x64)
      , czs = czo(0x8f)
      , czt = czo(0x90)
      , czu = czo(0x68);
    czm['exports'] = function(czm) {
        return new Promise(function(czn, czx) {
            var czy = czm['data']
              , czz = czm['headers'];
            czp['isFormData'](czy) && delete czz['Content-Type'];
            var czA = new XMLHttpRequest();
            if (czm['auth']) {
                var czB = czm['auth']['username'] || ''
                  , czC = czm['auth']['password'] || '';
                czz['Authorization'] = 'Basic\x20' + btoa(czB + ':' + czC);
            }
            if (czA['open'](czm['method']['toUpperCase'](), czr(czm['url'], czm['params'], czm['paramsSerializer']), !0x0),
            czA['timeout'] = czm['timeout'],
            czA['onreadystatechange'] = function() {
                if (czA && 0x4 === czA['readyState'] && (0x0 !== czA['status'] || czA['responseURL'] && 0x0 === czA['responseURL']['indexOf']('file:'))) {
                    var czo = 'getAllResponseHeaders'in czA ? czs(czA['getAllResponseHeaders']()) : null
                      , czp = {
                        'data': czm['responseType'] && 'text' !== czm['responseType'] ? czA['response'] : czA['responseText'],
                        'status': czA['status'],
                        'statusText': czA['statusText'],
                        'headers': czo,
                        'config': czm,
                        'request': czA
                    };
                    czq(czn, czx, czp),
                    czA = null;
                }
            }
            ,
            czA['onabort'] = function() {
                czA && (czx(czu('Request\x20aborted', czm, 'ECONNABORTED', czA)),
                czA = null);
            }
            ,
            czA['onerror'] = function() {
                czx(czu('Network\x20Error', czm, null, czA)),
                czA = null;
            }
            ,
            czA['ontimeout'] = function() {
                czx(czu('timeout\x20of\x20' + czm['timeout'] + 'ms\x20exceeded', czm, 'ECONNABORTED', czA)),
                czA = null;
            }
            ,
            czp['isStandardBrowserEnv']()) {
                var czF = czo(0x91)
                  , czG = (czm['withCredentials'] || czt(czm['url'])) && czm['xsrfCookieName'] ? czF['read'](czm['xsrfCookieName']) : void 0x0;
                czG && (czz[czm['xsrfHeaderName']] = czG);
            }
            if ('setRequestHeader'in czA && czp['forEach'](czz, function(czm, czn) {
                void 0x0 === czy && 'content-type' === czn['toLowerCase']() ? delete czz[czn] : czA['setRequestHeader'](czn, czm);
            }),
            czm['withCredentials'] && (czA['withCredentials'] = !0x0),
            czm['responseType'])
                try {
                    czA['responseType'] = czm['responseType'];
                } catch (czJ) {
                    if ('json' !== czm['responseType'])
                        throw czJ;
                }
            'function' == typeof czm['onDownloadProgress'] && czA['addEventListener']('progress', czm['onDownloadProgress']),
            'function' == typeof czm['onUploadProgress'] && czA['upload'] && czA['upload']['addEventListener']('progress', czm['onUploadProgress']),
            czm['cancelToken'] && czm['cancelToken']['promise']['then'](function(czm) {
                czA && (czA['abort'](),
                czx(czm),
                czA = null);
            }),
            void 0x0 === czy && (czy = null),
            czA['send'](czy);
        }
        );
    }
    ;
}
, function(czL, czM, czN) {
    var czO = czN(0x8e);
    czL['exports'] = function(czL, czM, czN, czS, czT) {
        var czU = new Error(czL);
        return czO(czU, czM, czN, czS, czT);
    }
    ;
}
, function(czV, czW, czX) {
    var czY = czX(0x22);
    czV['exports'] = function(czV, czW) {
        czW = czW || {};
        var czX = {};
        return czY['forEach'](['url', 'method', 'params', 'data'], function(czV) {
            void 0x0 !== czW[czV] && (czX[czV] = czW[czV]);
        }),
        czY['forEach'](['headers', 'auth', 'proxy'], function(cA3) {
            czY['isObject'](czW[cA3]) ? czX[cA3] = czY['deepMerge'](czV[cA3], czW[cA3]) : void 0x0 === czW[cA3] ? czY['isObject'](czV[cA3]) ? czX[cA3] = czY['deepMerge'](czV[cA3]) : void 0x0 !== czV[cA3] && (czX[cA3] = czV[cA3]) : czX[cA3] = czW[cA3];
        }),
        czY['forEach'](['baseURL', 'transformRequest', 'transformResponse', 'paramsSerializer', 'timeout', 'withCredentials', 'adapter', 'responseType', 'xsrfCookieName', 'xsrfHeaderName', 'onUploadProgress', 'onDownloadProgress', 'maxContentLength', 'validateStatus', 'maxRedirects', 'httpAgent', 'httpsAgent', 'cancelToken', 'socketPath'], function(czY) {
            void 0x0 === czW[czY] ? void 0x0 !== czV[czY] && (czX[czY] = czV[czY]) : czX[czY] = czW[czY];
        }),
        czX;
    }
    ;
}
, function(cA5, cA6, cA7) {
    function cA8(cA5) {
        this['message'] = cA5;
    }
    cA8['prototype']['toString'] = function() {
        return 'Cancel' + (this['message'] ? ':\x20' + this['message'] : '');
    }
    ,
    cA8['prototype']['__CANCEL__'] = !0x0,
    cA5['exports'] = cA8;
}
, function(cAa, cAb, cAc) {
    cAc(0x3d),
    'localhost' == location['hostname'] && (location['hostname'] = '127.0.0.1');
    var cAd = cAc(0x7)
      , cAe = 'undefined' != typeof Storage;
    function cAf(cAa) {
        cAe && localStorage['removeItem'](cAa);
    }
    window['saveVal'] = function(cAa, cAb) {
        cAe && localStorage['setItem'](cAa, cAb);
    }
    ,
    window['getSavedVal'] = function(cAa) {
        return cAe ? localStorage['getItem'](cAa) : null;
    }
    ;
    var cAk = new (cAc(0x4f))();
    function cAl() {
        for (var cAa = ['Ranked', 'Shop', 'Social', 'Maps', 'Mods', 'Settings', 'Host', 'Browser', 'Join'], cAb = 0x0; cAb < cAa['length']; cAb++)
            document['getElementById']('menuBtn' + cAa[cAb])['innerHTML'] = cAk['get']('menu.btn.' + cAa[cAb]['toLowerCase']());
        customizeButton['innerHTML'] = cAk['get']('menu.btn.customize'),
        inviteButton['innerHTML'] = cAk['get']('menu.btn.invite');
    }
    cAl(),
    window['openURL'] = function(cAa) {
        window['open'](cAa, '_blank');
    }
    ;
    var cAp = new URLSearchParams(window['location']['search'])['has']('autoQueue')
      , cAq = cAc(0x6c)['default'];
    cAq['PING_REGION_CACHE_KEY'] = 'pingRegion4';
    var cAr = new cAq(cAd['matchmakerURL'])
      , cAs = null
      , cAt = null;
    function cAu(cAa) {
        cAr['switchGame'](cAa);
    }
    async function cAw() {
        if (cBa) {
            var cAa, cAb = Array['from'](document['getElementsByClassName']('queueCheckboxOption'));
            cAb['length'] ? (cAa = cAb['filter'](cAa=>cAa['checked'])['map'](cAa=>cAa['dataset']['queueId']),
            localStorage['lastQueues'] = JSON['stringify'](cAa)) : cAa = localStorage['lastQueues'] ? JSON['parse'](localStorage['lastQueues']) : [cAd['queues'][0x0]],
            cEl('Queuing');
            var cAc = 'undefined' == typeof queueRegionSelect ? localStorage[cAq['PING_REGION_CACHE_KEY']] : queueRegionSelect['value'];
            cB6['send']('queue', cAa, cAr['hostname'], cAc),
            showWindow();
        }
    }
    function cAC(cAa, cAb) {
        hostGameMsg && (hostGameMsg['innerHTML'] = cAa),
        cAb && function(cAa) {
            var cAb = cAr['generateHref'](cAa);
            window['history']['replaceState']({}, 'Krunker', cAb),
            windows[0x1]['lastLoadTime'] = 0x0,
            cAs = cAa;
        }(cAb),
        cI0 = null,
        cI1 = null;
    }
    async function cAH(cAa) {
        return cAa ? void cAr['queue']({
            'clientId': cAa,
            'statusCallback': function(cAa, cAb) {
                cEl(cAa, cAb);
            },
            'hostCallback': function(cAa) {
                setTimeout(function() {
                    cB6['send']('pgi', cAa),
                    cEl(null);
                }, 0x3e8 * cEj);
            }
        }) : void cEl(null);
    }
    window['switchServer'] = cAu,
    window['checkedSwitchServer'] = function(cAa, cAb) {
        cAb['innerText'] = '...',
        cAr['fetchGameInfo'](cAa)['then'](cAc=>{
            cAc['clients'] >= cAc['maxClients'] ? (cAb['innerText'] = cAk['get']('matchmaker.full'),
            setTimeout(()=>{
                cAb['innerText'] = Math['min'](cAc['clients'], cAc['maxClients']) + '/' + cAc['maxClients'];
            }
            , 0x3e8)) : cAu(cAa);
        }
        );
    }
    ,
    window['joinQueue'] = cAw,
    window['leaveQueue'] = function() {
        cEl(null),
        cAr['unqueue']();
    }
    ,
    window['createPrivateRoom'] = function() {
        for (var cAa, cAb = [], cAc = document['getElementById']('rawMapData'), cAe = 0x0; cAe < cBf['length']; cAe++)
            (cAa = document['getElementById']('gameMap' + cAe)) && cAa['checked'] && cAb['push'](cAe);
        if (0x0 != cAb['length'] || cI0 || '' != rawMapData['value']) {
            var cAf = [];
            for (cAe = 0x0; cAe < cBg['length']; cAe++)
                document['getElementById']('gameMode' + cAe)['checked'] && cAf['push'](cAe);
            if (0x0 != cAf['length']) {
                var cAl = [];
                for (cAe = 0x0; cAe < cB7['classes']['length']; cAe++)
                    document['getElementById']('gameClass' + cAe)['checked'] && cAl['push'](cAe);
                if (0x0 != cAl['length']) {
                    var cAp, cAq = {
                        'customMap': cI0,
                        'rawMapData': cAc ? cAc['value'] : null,
                        'private': makePrivate['checked'],
                        'maps': cAb,
                        'modes': cAf,
                        'classes': cAl
                    };
                    for (cAe = 0x0; cAe < cAd['serverConfig']['length']; cAe++)
                        cAp = document['getElementById']('customS' + cAd['serverConfig'][cAe]['varN']),
                        tmpV = cAd['serverConfig'][cAe]['bool'] ? cAp ? cAp['checked'] : 0x0 : cAd['serverConfig'][cAe]['input'] ? cAp ? cAY['sanitizeStr'](cAp['value']) : 0x0 : cAp ? parseFloat(cAp['value']) : 0x0,
                        cAq[cAd['serverConfig'][cAe]['varN']] = tmpV;
                    cB6['send']('custom', cAq),
                    hostGameMsg['innerHTML'] = cAk['get']('generic.wait');
                } else
                    hostGameMsg['innerHTML'] = '<span\x20class=\x27error\x27>' + cAk['get']('custom.class.missing') + '</span>';
            } else
                hostGameMsg['innerHTML'] = '<span\x20class=\x27error\x27>' + cAk['get']('custom.mode.missing') + '</span>';
        } else
            hostGameMsg['innerHTML'] = '<span\x20class=\x27error\x27>' + cAk['get']('custom.map.missing') + '</span>';
    }
    ,
    Object['defineProperty'](console, '_commandLineAPI', {
        'get': function() {
            throw '';
        }
    });
    var cAX = cAc(0x4);
    cAX['OBJLoader'] = cAc(0x3f)(cAX),
    cAX['Shaders'] = cAc(0x40)(cAX);
    var cAY = cAc(0x8)
      , cAZ = cAc(0x62)
      , cB0 = new (cAc(0x38))(cAX,cAY,cAd,cAZ)
      , cB1 = window['SOUND'] = new (cAc(0x49))(cAY,cAd)
      , cB2 = new (cAc(0x4a))(cB0,cAd)
      , cB3 = cAc(0x82)
      , cB4 = new (cAc(0x83))(cB0,cAd)
      , cB5 = cAc(0x84)
      , cB6 = cAc(0x56)
      , cB7 = cAc(0x58)['obj'];
    cB7 = new cB7(!0x1,0x0,null,cB0,cB1,cB2);
    var cB8 = new (cAc(0x96))(cB0,cAX,cB3,cAY,cB7,cAd,cB6);
    cB7['controls'] = cB8;
    var cB9, cBa, cBb, cBc, cBd, cBe, cBf = cAc(0x27)['maps'], cBg = cAc(0x27)['modes'], cBh = cAc(0x5b), cBi = cAc(0x46)['Player'], cBj = new (cAc(0x99))(), cBk = cAc(0x23), cBl = (new cAX['Vector3'](),
    !0x1), cBm = null, cBn = !0x1;
    window['locked'] = !0x1;
    var cBo = []
      , cBp = !0x0
      , cBq = 0x0
      , cBr = 0x0
      , cBs = 0x0
      , cBt = 0x1
      , cBu = -0x1;
    window['idleTimer'] = 0x0;
    var cBv, cBw, cBx, cBy, cBz = !0x0, cBA = !0x0, cBB = !0x0, cBC = [], cBD = '', cBE = '', cBF = !0x1, cBG = !0x1, cBH = getSavedVal('krk_lastMod') || '';
    function cBI(cAa) {
        cBH = cAa,
        saveVal('krk_lastMod', cAa);
    }
    cBI(cBH);
    var cBK = 0x1
      , cBL = 0x1
      , cBM = 0x6a4
      , cBN = 0x384;
    function cBO() {
        var cAa = window['innerWidth']
          , cAb = window['innerHeight']
          , cAc = cBM * cBL
          , cAd = cBN * cBL
          , cAe = cAa / cAc
          , cAf = cAb / cAd;
        cAf < cAe ? (cBK = cAf,
        uiBase['style']['transform'] = 'scale(' + cAf['toFixed'](0x3) + ')',
        uiBase['style']['width'] = (cAa / cAf)['toFixed'](0x3) + 'px',
        uiBase['style']['height'] = cAd + 'px') : (cBK = cAe,
        uiBase['style']['transform'] = 'scale(' + cAe['toFixed'](0x3) + ')',
        uiBase['style']['width'] = cAc + 'px',
        uiBase['style']['height'] = (cAb / cAe)['toFixed'](0x3) + 'px');
    }
    window['addEventListener']('resize', cBO),
    cBO(),
    window['checkTerms'] = function(cAa) {
        cAa ? (consentBlock['style']['display'] = 'none',
        saveVal('consent', 0x1)) : $('#consentShake')['effect']('shake');
    }
    ;
    var cBW = ['/img/button/button-normal.png', '/img/button/button-hover.png', '/img/button/button-pressed.png', '/img/social-buttons/discord-normal.png', '/img/social-buttons/discord-hover.png', '/img/social-buttons/discord-pressed.png', '/img/social-buttons/reddit-normal.png', '/img/social-buttons/reddit-hover.png', '/img/social-buttons/reddit-pressed.png', '/img/social-buttons/twitter-normal.png', '/img/social-buttons/twitter-hover.png', '/img/social-buttons/twitter-pressed.png', '/img/social-buttons/kr-normal.png', '/img/social-buttons/kr-hover.png', '/img/social-buttons/kr-pressed.png']
      , cBX = [];
    window['addEventListener']('load', function() {
        for (var cAa of cBW) {
            var cAb = new Image();
            cAb['src'] = cAa,
            cBX['push'](cAb);
        }
    });
    eval;
    Math['PI2'] = 0x2 * Math['PI'],
    Math['lerpAngle'] = function(cAa, cAb, cAc) {
        Math['abs'](cAb - cAa) > Math['PI'] && (cAa > cAb ? cAb += Math['PI2'] : cAa += Math['PI2']);
        var cAd = cAb + (cAa - cAb) * cAc;
        return 0x0 <= cAd && cAd <= Math['PI2'] ? cAd : cAd % Math['PI2'];
    }
    ,
    console['warn'] = function() {}
    ,
    console['info'] = function() {}
    ;
    var cC4 = !0x1;
    window['toggleStrm'] = function(cAa, cAb=!0x1) {
        cC4 = cAa,
        cAb || (cAa ? window['history']['pushState'](document['title'], document['title'], '/') : window['history']['pushState'](document['title'], document['title'], cAr['generateHref'](cAs))),
        cMi(cMg, cMh);
    }
    ;
    var cC7 = !0x1;
    window['loading'] = !0x1;
    var cC8 = !0x1;
    window['spectTarget'] = null,
    window['spectating'] = !0x1,
    window['toggleSpect'] = function(cAa) {
        cC8 = cAa;
    }
    ;
    var cCa, cCb, cCc = !0x1;
    function cCd() {
        window['innerWidth'],
        cCa = window['innerHeight'],
        cCb = cCa / cBK / 0x2b5,
        cB0['resize']();
    }
    function cCe(cAa) {
        return cAd['apiURL'] + cAa;
    }
    window['toggleChal'] = function(cAa) {
        cCc = cAa;
    }
    ,
    window['spectMode'] = function(cAa) {
        if (cB7 && cB7['players']) {
            if (cAa) {
                for (var cAb = Math['max'](0x0, window['spectTarget'] ? cB7['players']['list']['indexOf'](window['spectTarget']) : 0x0), cAc = null, cAd = 0x0; cAd < cB7['players']['list']['length']; ++cAd)
                    if ((cAb += cAa) >= cB7['players']['list']['length'] ? cAb = 0x0 : 0x0 > cAb && (cAb = cB7['players']['list']['length'] - 0x1),
                    (cBb = cB7['players']['list'][cAb]) && cBb['active']) {
                        cAc = cBb;
                        break;
                    }
                window['spectTarget'] = cAc;
            } else
                window['spectTarget'] = null,
                cB8['setCamPosOff']();
            window['spectTarget'];
        }
    }
    ,
    window['specStatUpdate'] = function(cAa) {
        if (cAa = window['spectTarget']) {
            specStats['style']['display'] = 'inline-block';
            for (var cAb = cAa['name'] + (cAa['clan'] ? '<span\x20style=\x27color:' + (0x0 <= cAd['verClans']['indexOf'](cAa['clan']) ? '#fbc02d' : '#353535') + '\x27>\x20[' + cAa['clan'] + ']</span>' : ''), cAc = cB7['mode']['endStats'] || cAd['endStats'], cAe = 'font-size:11px;color:rgb(255,255,255,0.5)', cAf = 0x2; cAf < cAc['length']; ++cAf)
                cAb += '<div\x20style=\x27' + cAe + '\x27>' + cAY['capFirst'](cAc[cAf]) + '<span\x20style=\x27float:right;' + cAe + '\x27>' + (cAd['endForm'][cAc[cAf]] ? cAd['endForm'][cAc[cAf]](cAa[cAc[cAf]], this, cAa[cHN]) : cAa[cAc[cAf]]) + '</span></div>';
            specStats['innerHTML'] = cAb;
        } else
            specStats['style']['display'] = 'none',
            specStats['innerHTML'] = '';
    }
    ,
    window['enterGame'] = function() {
        if (cB7['singlePlayer'] && !cC7) {
            cJL('0:00');
            var cAa = cB7['getSpawnPoint'](null, !0x0)
              , cAb = cB7['classes'][parseInt(classIndex)];
            cLm([cB6['socketId'], 0x1, cAa['x'], cAa['y'], cAa['z'], 'TEST', classIndex, cAb['health'], cAb['health'], null, 0x64, null, [null == cF0[cAb['loadout'][0x0]] ? -0x1 : cF0[cAb['loadout'][0x0]], null == cF0[cAb['loadout'][0x1]] ? -0x1 : cF0[cAb['loadout'][0x1]]], null, null, cAb['secondary'] ? parseInt(cF1) : null, !0x1, null, -((cAa['dir'] || 0x0) + 0x1) * Math['PI'] / 0x2]),
            cC7 = !0x0,
            cMi([0x1, 'TEST', 0x0, 0x0, 0x0, 0x0]),
            cB3['toggleMenu'](!0x1);
        } else if (cB6['connected'] && (!cC7 || window['spectating'] && !cC8)) {
            bloodDisplay['style']['display'] = 'none',
            cC7 = !0x0,
            window['idleTimer'] = 0x0,
            cB3['toggleMenu'](!0x1),
            instructions['innerHTML'] = cAk['get']('generic.loading'),
            window['loading'] = !0x0;
            cAb = parseInt(classIndex);
            var cAc = cB7['classes'][cAb]['loadout']
              , cAd = [null == cF0[cAc[0x0]] ? -0x1 : cF0[cAc[0x0]], null == cF0[cAc[0x1]] ? -0x1 : cF0[cAc[0x1]]];
            cB6['send']('etrg', [cAb, parseInt(cL8), cAd, parseInt(cEY), parseInt(cEX), parseInt(cF1), cC8 ? 0x1 : 0x0, cCc ? 0x1 : 0x0, cEU, parseInt(cEW), parseInt(cEV)]);
        }
    }
    ,
    window['addEventListener']('resize', cCd),
    cCd(),
    window['toggleAd'] = function() {}
    ;
    var cCu = 0x0;
    function cCv(cAa) {
        cBa && (cBa['funds'] = cAa),
        cEe();
    }
    function cCx(cAa, cAb) {
        window['idleTimer'] = 0x0,
        cAa ? purchaseError() : (cBa && (cBa['funds'] = cAb),
        cEe(),
        updateWindow(null, !0x0),
        cB3['toggleMenuHider'](!0x0),
        purchaseLoad['style']['display'] = 'none');
    }
    window['cancelPurchase'] = function() {
        window['idleTimer'] = 0x0,
        showWindow(0xe),
        instructions['style']['display'] = 'block',
        cCu = 0x0,
        context['toggleMenuHider'](!0x0),
        purchaseLoad['style']['display'] = 'none';
    }
    ,
    window['showPurchase'] = function(cAa) {
        window['idleTimer'] = 0x0,
        cCu = cAa,
        purchaseHolder['style']['display'] = 'block';
        var cAb = document['getElementById']('paypal-button');
        cAb && (cAb['innerHTML'] = ''),
        cBa && paypal['Button']['render']({
            'style': {
                'size': 'large'
            },
            'env': 'production',
            'commit': !0x0,
            'payment': function(cAa, cAb) {
                return purchaseHolder['style']['display'] = 'none',
                cAb['request']['post'](cCe('/my-api/create-payment/'), {
                    'pIndex': cCu,
                    'acID': cBa['id']
                })['then'](function(cAa) {
                    return cAa['id'];
                });
            },
            'onAuthorize': function(cAa, cAb) {
                return cAb['request']['post'](cCe('/my-api/execute-payment/'), {
                    'pIndex': cCu,
                    'acID': cBa['id'],
                    'paymentID': cAa['paymentID'],
                    'payerID': cAa['payerID']
                })['then'](function(cAa) {
                    cAa && null != cAa['funds'] && null != cAa['funds'] ? (cBa && (cBa['funds'] = cAa['funds']),
                    cEe(),
                    updateWindow(null, !0x0),
                    cB3['toggleMenuHider'](!0x0),
                    purchaseLoad['style']['display'] = 'none') : purchaseError();
                });
            },
            'onError': function() {
                purchaseError();
            }
        }, '#paypal-button');
    }
    ,
    purchaseHolder['onclick'] = function() {
        purchaseHolder['style']['display'] = 'none';
    }
    ,
    window['purchaseError'] = function() {
        showWindow(),
        cB3['toggleMenuHider'](!0x1),
        instructions['style']['display'] = 'none',
        purchaseLoad['style']['display'] = 'block',
        purchLoadRing['style']['display'] = 'none',
        purchaseLabel['innerHTML'] = cAk['get']('purchase.error') + '\x20<a\x20href=\x27javascript:;\x27\x20onclick=\x27cancelPurchase()\x27>' + cAk['get']('purchase.error.click') + '<div\x20style=\x27color:rgba(255,255,255,0.3);font-size:20px\x27>' + cAk['get']('purchase.error.limit') + '</div>';
    }
    ;
    const cCI = new FileReader();
    var cCJ, cCK, cCL = !0x1, cCM = 0x0, cCN = {};
    function cCO() {
        cC7 = !0x1,
        window['idleTimer'] = 0x0,
        cB3['toggleMenu'](!0x0),
        cB8['toggle'](!0x1),
        cIV = {
            'states': []
        };
    }
    window['voiceChat'] = function(cAa, cAb) {
        if (cCM) {
            cC4 && cBj && (cAb = cAY['scrambleS'](cAb));
            try {
                var cAc = new Howl({
                    'src': [cAa],
                    'volume': cCM
                });
                cAc['on']('load', function() {
                    cAc['duration']() <= cAd['voiceChatMaxLength'] && (cAc['on']('end', function() {
                        if (cCN[cAb]--,
                        0x0 >= cCN[cAb]) {
                            var cAa = document['getElementById']('speaker' + cAb);
                            cAa && cAa['parentElement']['removeChild'](cAa),
                            delete cCN[cAb];
                        }
                    }),
                    !cCN[cAb] && (cCN[cAb] = 0x0,
                    speakerDisplay['innerHTML'] += '<div\x20id=\x27speaker' + cAb + '\x27\x20class=\x27voiceSpeaker\x27>' + cAb + '\x20<i\x20class=\x27material-icons\x27\x20style=\x27color:#fff;font-size:35px;vertical-align:middle\x27>volume_down</i></div>'),
                    cCN[cAb]++,
                    cAc['play']());
                });
            } catch (cCT) {}
        }
    }
    ,
    cCI['addEventListener']('loadend', function() {
        var cAa = cCI['result'];
        cB6['send']('vc', cAa);
    }),
    window['toggleRecord'] = function(cAa) {
        'INPUT' == document['activeElement']['tagName'] || (cB9 || window['spectating']) && (cAa && !cCL ? (voiceDisplay['style']['opacity'] = 0.9,
        cCL = !0x0,
        navigator['mediaDevices']['getUserMedia']({
            'audio': !0x0,
            'video': !0x1
        })['then'](function(cAa) {
            (cCJ = new MediaRecorder(cAa,{
                'mimetype': 'audio/ogg',
                'bitsPerSecond': 0x1770
            }))['start']();
            const cAb = [];
            cCJ['addEventListener']('dataavailable', function(cAa) {
                cAb['push'](cAa['data']);
            }),
            cCJ['addEventListener']('stop', function() {
                recTimer['style']['display'] = 'none',
                voiceDisplay['style']['opacity'] = 0.5;
                var cAa = new Blob(cAb,{
                    'type': 'audio/ogg;\x20codecs=opus'
                });
                cCI['readAsDataURL'](cAa);
            }),
            recTimer['style']['display'] = 'inline-block',
            recTimer['innerHTML'] = cAd['voiceChatMaxLength'];
            var cAc = cAd['voiceChatMaxLength'];
            cCK = setInterval(function() {
                cAc--,
                recTimer['innerHTML'] = cAc,
                0x0 >= cAc && (cCL = !0x1,
                cCJ['stop'](),
                clearInterval(cCK));
            }, 0x3e8);
        })['catch'](function() {
            cCL = !0x1,
            cCK && clearInterval(cCK),
            voiceDisplay['style']['opacity'] = 0.5;
        })) : !cAa && cCL && cCJ && (cCL = !0x1,
        cCJ['stop'](),
        clearInterval(cCK)));
    }
    ,
    window['updateSliderLabel'] = function(cAa, cAb) {
        var cAc = document['getElementById']('customSet' + cAa);
        cAc && (cAc['innerHTML'] = cAb);
    }
    ,
    window['setSetting'] = function(cAa, cAb) {
        (cDb[cAa]['min'] || cDb[cAa]['max']) && (cAb = Math['min'](cDb[cAa]['max'], Math['max'](cDb[cAa]['min'], cAb))),
        document['getElementById']('slid_' + cAa) && (document['getElementById']('slid_' + cAa)['value'] = cAb),
        document['getElementById']('slid_input_' + cAa) && (document['getElementById']('slid_input_' + cAa)['value'] = cAb),
        cDb[cAa]['set'](cAb),
        cDb[cAa]['val'] = cAb,
        saveVal('kro_setngss_' + cAa, cAb);
    }
    ,
    window['resetSettings'] = function() {
        confirm(cAk['get']('settings.reset.confirm')) && (Object['keys'](localStorage)['filter'](cAa=>cAa['includes']('kro_setngss_') || cAa['includes']('cont_'))['forEach'](cAa=>localStorage['removeItem'](cAa)),
        location['reload']());
    }
    ;
    var cD8 = {};
    window['delayExecute'] = function(cAa, cAb) {
        return clearTimeout(cD8[cAa]),
        cD8[cAa] = setTimeout(function() {
            setSetting(cAa, cAb['value']);
        }, 0x258),
        !0x0;
    }
    ;
    var cDb = {
        'changeControls': {
            'name': '<div\x20style=\x27width:100%\x27><a\x20href=\x27javascript:;\x27\x20onclick=\x27showWindow(7);\x27\x20class=\x27menuLink\x27>' + cAk['get']('settings.controls.change') + '</a>\x20|\x20<a\x20onclick=\x27resetSettings()\x27\x20class=\x27+\x27>' + cAk['get']('settings.reset') + '</a></div>',
            'html': function() {
                return '';
            }
        },
        'defaultRegion': {
            'name': cAk['get']('settings.local.region'),
            'pre': '<div\x20class=\x27setHed\x27>' + cAk['get']('settings.local.header') + '</div>',
            get 'val'() {
                return localStorage[cAq['PING_REGION_CACHE_KEY']];
            },
            set 'val'(cAa) {},
            'html': function() {
                var cAa = '<select\x20onchange=\x27setSetting(\x22defaultRegion\x22,\x20this.value)\x27\x20class=\x27inputGrey2\x27>';
                for (var cAb of cOC)
                    cAa += '<option\x20value=\x27' + cAb + '\x27\x20' + (cAb == cDb['defaultRegion']['val'] ? 'selected' : '') + '>',
                    cAa += cAd['regionNames'][cAb],
                    cAa += '</option>';
                return cAa += '</select>';
            },
            'set': function(cAa) {
                cAa && cAd['isProd'] && localStorage['setItem'](cAq['PING_REGION_CACHE_KEY'], cAa);
            }
        },
        'lang': {
            'name': cAk['get']('settings.local.lang'),
            'val': 'en',
            'html': function() {
                var cAa = '<select\x20onchange=\x27setSetting(\x22lang\x22,\x20this.value)\x27\x20class=\x27inputGrey2\x27>';
                for (var cAb of cAk['supported'])
                    cAa += '<option\x20value=\x27' + cAb + '\x27\x20' + (cAb == cAk['locale'] ? 'selected' : '') + '>',
                    cAa += cAd['langNames'][cAb],
                    cAa += '</option>';
                return cAa += '</select>';
            },
            'set': function(cAa) {
                cAa && (cAk['setLocale'](cAa),
                cAl(),
                'block' == windowHolder['style']['display'] && cB3['toggleWindow'](!0x1, cB8['gamepad']['connected']));
            }
        },
        'resolution': {
            'name': cAk['get']('settings.quality.res'),
            'pre': '<div\x20class=\x27setHed\x27>' + cAk['get']('settings.quality.header') + '</div>',
            'val': 0.6,
            'min': 0.1,
            'max': 0x2,
            'html': function() {
                return '<input\x20type=\x27number\x27\x20class=\x27sliderVal\x27\x20id=\x27slid_input_resolution\x27\x20min=\x270.1\x27\x20max=\x272\x27\x20value=\x27' + cDb['resolution']['val'] + '\x27\x20onkeypress=\x27return\x20delayExecute(\x22resolution\x22,\x20this)\x27\x20style=\x27border-width:0px\x27/>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x27slidecontainer\x27>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<input\x20type=\x27range\x27\x20id=\x27slid_resolution\x27\x20min=\x270.1\x27\x20max=\x272\x27\x20step=\x270.1\x27\x22\x20value=\x27' + cDb['resolution']['val'] + '\x27\x20class=\x27sliderM\x27\x20oninput=\x27setSetting(\x22resolution\x22,\x20this.value)\x27></div>';
            },
            'set': function(cAa) {
                cB0['setResMlt'](cAa);
            }
        },
        'particles': {
            'name': cAk['get']('settings.quality.part'),
            'val': !0x0,
            'html': function() {
                return '<label\x20class=\x27switch\x27><input\x20type=\x27checkbox\x27\x20onclick=\x27setSetting(\x22particles\x22,\x20this.checked)\x27\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20' + (cDb['particles']['val'] ? 'checked' : '') + '><span\x20class=\x27slider\x27></span></label>';
            },
            'set': function(cAa) {
                cB2['active'] = cAa;
            }
        },
        'showTrails': {
            'name': cAk['get']('settings.quality.trails'),
            'val': !0x0,
            'html': function() {
                return '<label\x20class=\x27switch\x27><input\x20type=\x27checkbox\x27\x20onclick=\x27setSetting(\x22showTrails\x22,\x20this.checked)\x27\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20' + (cDb['showTrails']['val'] ? 'checked' : '') + '><span\x20class=\x27slider\x27></span></label>';
            },
            'set': function(cAa) {
                cB2['showTrails'] = cAa;
            }
        },
        'muzzleFlash': {
            'name': cAk['get']('settings.quality.mflash'),
            'val': !0x0,
            'html': function() {
                return '<label\x20class=\x27switch\x27><input\x20type=\x27checkbox\x27\x20onclick=\x27setSetting(\x22muzzleFlash\x22,\x20this.checked)\x27\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20' + (cDb['muzzleFlash']['val'] ? 'checked' : '') + '><span\x20class=\x27slider\x27></span></label>';
            },
            'set': function(cAa) {
                cB2['showMuzzle'] = cAa;
            }
        },
        'sniperFlap': {
            'name': 'Sniper\x20Flap',
            'val': !0x1,
            'html': function() {
                return '<label\x20class=\x27switch\x27><input\x20type=\x27checkbox\x27\x20onclick=\x27setSetting(\x22sniperFlap\x22,\x20this.checked)\x27\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20' + (cDb['sniperFlap']['val'] ? 'checked' : '') + '><span\x20class=\x27slider\x27></span></label>';
            },
            'set': function(cAa) {
                cB0['sniperFlap'] = cAa;
            }
        },
        'showUI': {
            'name': cAk['get']('settings.interface.ui'),
            'pre': '<div\x20class=\x27setHed\x27>' + cAk['get']('settings.interface.header') + '</div>',
            'val': !0x0,
            'html': function() {
                return '<label\x20class=\x27switch\x27><input\x20type=\x27checkbox\x27\x20onclick=\x27setSetting(\x22showUI\x22,\x20this.checked)\x27\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20' + (cDb['showUI']['val'] ? 'checked' : '') + '><span\x20class=\x27slider\x27></span></label>';
            },
            'set': function(cAa) {
                cB3['hideGameUI'] = !cAa,
                chatUI['style']['display'] = cAa ? 'block' : 'none';
            }
        },
        'dynamicHP': {
            'name': cAk['get']('settings.interface.hp'),
            'val': !0x0,
            'html': function() {
                return '<label\x20class=\x27switch\x27><input\x20type=\x27checkbox\x27\x20onclick=\x27setSetting(\x22dynamicHP\x22,\x20this.checked)\x27\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20' + (cDb['dynamicHP']['val'] ? 'checked' : '') + '><span\x20class=\x27slider\x27></span></label>';
            },
            'set': function(cAa) {
                cAZ['dynamicHP'] = cAa;
            }
        },
        'showChat': {
            'name': cAk['get']('settings.interface.chat'),
            'val': !0x0,
            'html': function() {
                return '<label\x20class=\x27switch\x27><input\x20type=\x27checkbox\x27\x20onclick=\x27setSetting(\x22showChat\x22,\x20this.checked)\x27\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20' + (cDb['showChat']['val'] ? 'checked' : '') + '><span\x20class=\x27slider\x27></span></label>';
            },
            'set': function(cAa) {
                chatHolder['style']['display'] = cAa ? 'block' : 'none';
            }
        },
        'showKills': {
            'name': cAk['get']('settings.interface.kills'),
            'val': !0x0,
            'html': function() {
                return '<label\x20class=\x27switch\x27><input\x20type=\x27checkbox\x27\x20onclick=\x27setSetting(\x22showKills\x22,\x20this.checked)\x27\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20' + (cDb['showKills']['val'] ? 'checked' : '') + '><span\x20class=\x27slider\x27></span></label>';
            },
            'set': function(cAa) {
                cBz = cAa;
            }
        },
        'showMessages': {
            'name': cAk['get']('settings.interface.messages'),
            'val': !0x0,
            'html': function() {
                return '<label\x20class=\x27switch\x27><input\x20type=\x27checkbox\x27\x20onclick=\x27setSetting(\x22showMessages\x22,\x20this.checked)\x27\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20' + (cDb['showMessages']['val'] ? 'checked' : '') + '><span\x20class=\x27slider\x27></span></label>';
            },
            'set': function(cAa) {
                cBA = cAa;
            }
        },
        'showUnboxings': {
            'name': cAk['get']('settings.interface.unboxings'),
            'val': !0x0,
            'html': function() {
                return '<label\x20class=\x27switch\x27><input\x20type=\x27checkbox\x27\x20onclick=\x27setSetting(\x22showUnboxings\x22,\x20this.checked)\x27\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20' + (cDb['showUnboxings']['val'] ? 'checked' : '') + '><span\x20class=\x27slider\x27></span></label>';
            },
            'set': function(cAa) {
                cBB = cAa;
            }
        },
        'showPing': {
            'name': cAk['get']('settings.interface.ping'),
            'val': !0x0,
            'html': function() {
                return '<label\x20class=\x27switch\x27><input\x20type=\x27checkbox\x27\x20onclick=\x27setSetting(\x22showPing\x22,\x20this.checked)\x27\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20' + (cDb['showPing']['val'] ? 'checked' : '') + '><span\x20class=\x27slider\x27></span></label>';
            },
            'set': function(cAa) {
                pingDisplay['style']['display'] = cAa ? 'block' : 'none';
            }
        },
        'showFPS': {
            'name': cAk['get']('settings.interface.fps'),
            'val': !0x1,
            'html': function() {
                return '<label\x20class=\x27switch\x27><input\x20type=\x27checkbox\x27\x20onclick=\x27setSetting(\x22showFPS\x22,\x20this.checked)\x27\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20' + (cDb['showFPS']['val'] ? 'checked' : '') + '><span\x20class=\x27slider\x27></span></label>';
            },
            'set': function(cAa) {
                fpsDisplay['style']['display'] = menuFPSDisplay['style']['display'] = cAa ? 'block' : 'none';
            }
        },
        'showDeaths': {
            'name': cAk['get']('settings.interface.deaths'),
            'val': !0x1,
            'html': function() {
                return '<label\x20class=\x27switch\x27><input\x20type=\x27checkbox\x27\x20onclick=\x27setSetting(\x22showDeaths\x22,\x20this.checked)\x27\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20' + (cDb['showDeaths']['val'] ? 'checked' : '') + '><span\x20class=\x27slider\x27></span></label>';
            },
            'set': function(cAa) {
                deathCount['style']['display'] = cAa ? 'inline-block' : 'none';
            }
        },
        'crosshairSho': {
            'name': cAk['get']('settings.crosshair.type'),
            'pre': '<div\x20class=\x27setHed\x27>' + cAk['get']('settings.crosshair.header') + '</div>',
            'val': 0x1,
            'html': function() {
                return '<select\x20class=\x27inputGrey2\x27\x20onchange=\x22setSetting(\x27crosshairSho\x27,\x20this.value)\x22>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<option\x20value=\x220\x22' + (0x0 == cDb['crosshairSho']['val'] ? '\x20selected' : '') + '>' + cAk['get']('generic.off') + '</option>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<option\x20value=\x221\x22' + (0x1 == cDb['crosshairSho']['val'] ? '\x20selected' : '') + '>' + cAk['get']('generic.default') + '</option>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<option\x20value=\x222\x22' + (0x2 == cDb['crosshairSho']['val'] ? '\x20selected' : '') + '>' + cAk['get']('settings.crosshair.type.2') + '</option>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<option\x20value=\x223\x22' + (0x3 == cDb['crosshairSho']['val'] ? '\x20selected' : '') + '>' + cAk['get']('settings.crosshair.type.3') + '</option>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<option\x20value=\x224\x22' + (0x4 == cDb['crosshairSho']['val'] ? '\x20selected' : '') + '>' + cAk['get']('settings.crosshair.type.4') + '</option>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20</select>';
            },
            'set': function(cAa) {
                cAZ['crosshairType'] = cAa;
                let cAb = ['crosshairStyle', 'crosshairAlways', 'crosshairLen', 'crosshairThick'];
                for (let cAc of cAb) {
                    cDb[cAc]['hide'] = 'crosshairAlways' == cAc ? 0x2 > cAa : 0x4 == cAa || 0x2 > cAa;
                    let cAb = document['getElementById'](cAc + '_div');
                    cAb && (cAb['style']['display'] = cDb[cAc]['hide'] ? 'none' : 'block');
                }
                cDb['crosshairImage']['hide'] = 0x4 != cAa;
                let cAc = document['getElementById']('crosshairImage_div');
                cAc && (cAc['style']['display'] = 0x4 == cAa ? 'block' : 'none');
            }
        },
        'crosshairStyle': {
            'name': cAk['get']('settings.crosshair.style'),
            'val': 0x0,
            'hide': !0x0,
            'html': function() {
                return '<select\x20class=\x27inputGrey2\x27\x20onchange=\x22setSetting(\x27crosshairStyle\x27,\x20this.value)\x22>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<option\x20value=\x220\x22' + (0x0 == cDb['crosshairStyle']['val'] ? '\x20selected' : '') + '>' + cAk['get']('settings.crosshair.style.0') + '</option>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<option\x20value=\x221\x22' + (0x1 == cDb['crosshairStyle']['val'] ? '\x20selected' : '') + '>' + cAk['get']('settings.crosshair.style.1') + '</option>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<option\x20value=\x222\x22' + (0x2 == cDb['crosshairStyle']['val'] ? '\x20selected' : '') + '>' + cAk['get']('settings.crosshair.style.2') + '</option>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<option\x20value=\x223\x22' + (0x3 == cDb['crosshairStyle']['val'] ? '\x20selected' : '') + '>' + cAk['get']('settings.crosshair.style.3') + '</option>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<option\x20value=\x224\x22' + (0x4 == cDb['crosshairStyle']['val'] ? '\x20selected' : '') + '>' + cAk['get']('settings.crosshair.style.4') + '</option>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20</select>';
            },
            'set': function(cAa) {
                cAZ['crosshairStyle'] = cAa;
            }
        },
        'crosshairImage': {
            'name': cAk['get']('settings.crosshair.image'),
            'val': '',
            'hide': !0x0,
            'html': function() {
                return '<input\x20type=\x27url\x27\x20placeholder=\x27' + cAk['get']('settings.crosshair.image.paste') + '\x27\x20name=\x27url\x27\x20class=\x27inputGrey2\x27\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20value=\x27' + cDb['crosshairImage']['val'] + '\x27\x20oninput=\x27setSetting(\x22crosshairImage\x22,\x20this.value)\x27/>';
            },
            'set': function(cAa) {
                cAa = cAY['isURL'](cAa) && !/\.svg/['test'](cAa) ? cAa : '',
                cAZ['crosshairImage']['src'] != cAa && cAa['length'] && (cAZ['crosshairImage']['src'] = cAa);
            }
        },
        'crosshairAlways': {
            'name': cAk['get']('settings.crosshair.always'),
            'val': !0x1,
            'hide': !0x0,
            'html': function() {
                return '<label\x20class=\x27switch\x27><input\x20type=\x27checkbox\x27\x20onclick=\x27setSetting(\x22crosshairAlways\x22,\x20this.checked)\x27\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20' + (cDb['crosshairAlways']['val'] ? 'checked' : '') + '><span\x20class=\x27slider\x27></span></label>';
            },
            'set': function(cAa) {
                cAZ['crosshairAlways'] = cAa;
            }
        },
        'crosshairColor': {
            'name': cAk['get']('settings.crosshair.color'),
            'val': '#ffffff',
            'html': function() {
                return '<input\x20type=\x27color\x27\x20id=\x27head\x27\x20name=\x27color\x27\x20value=\x27' + cDb['crosshairColor']['val'] + '\x27\x20oninput=\x27setSetting(\x22crosshairColor\x22,\x20this.value)\x27\x20style=\x27float:right;margin-top:5px\x27/>';
            },
            'set': function(cAa) {
                cAZ['crosshairColor'] = cAa;
            }
        },
        'crosshairShadow': {
            'name': cAk['get']('settings.crosshair.shadow'),
            'val': '#000000',
            'html': function() {
                return '<input\x20type=\x27color\x27\x20id=\x27head\x27\x20name=\x27color\x27\x20value=\x27' + cDb['crosshairShadow']['val'] + '\x27\x20oninput=\x27setSetting(\x22crosshairShadow\x22,\x20this.value)\x27\x20style=\x27float:right;margin-top:5px\x27/>';
            },
            'set': function(cAa) {
                cAZ['crosshairShadow'] = cAa;
            }
        },
        'crosshairLen': {
            'name': cAk['get']('settings.crosshair.size'),
            'val': 0x10,
            'min': 0x2,
            'max': 0x32,
            'hide': !0x0,
            'html': function() {
                return '<input\x20type=\x27number\x27\x20class=\x27sliderVal\x27\x20id=\x27slid_input_crosshairLen\x27\x20min=\x272\x27\x20max=\x2750\x27\x20value=\x27' + cDb['crosshairLen']['val'] + '\x27\x20onkeypress=\x27return\x20delayExecute(\x22crosshairLen\x22,\x20this)\x27\x20style=\x27border-width:0px\x27/>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x27slidecontainer\x27>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<input\x20type=\x27range\x27\x20min=\x272\x27\x20max=\x2750\x27\x20step=\x271\x27\x20value=\x27' + cDb['crosshairLen']['val'] + '\x27\x20class=\x27sliderM\x27\x20oninput=\x22setSetting(\x27crosshairLen\x27,\x20this.value)\x22></div>';
            },
            'set': function(cAa) {
                cAZ['crosshairLen'] = cAa;
            }
        },
        'crosshairThick': {
            'name': cAk['get']('settings.crosshair.thickness'),
            'val': 0x2,
            'min': 0x2,
            'max': 0x14,
            'hide': !0x0,
            'html': function() {
                return '<input\x20type=\x27number\x27\x20class=\x27sliderVal\x27\x20id=\x27slid_input_crosshairThick\x27\x20min=\x272\x27\x20max=\x2720\x27\x20value=\x27' + cDb['crosshairThick']['val'] + '\x27\x20onkeypress=\x27return\x20delayExecute(\x22crosshairThick\x22,\x20this)\x27\x20style=\x27border-width:0px\x27/>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x27slidecontainer\x27>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<input\x20type=\x27range\x27\x20min=\x272\x27\x20max=\x2720\x27\x20step=\x271\x27\x20value=\x27' + cDb['crosshairThick']['val'] + '\x27\x20class=\x27sliderM\x27\x20oninput=\x22setSetting(\x27crosshairThick\x27,\x20this.value)\x22></div>';
            },
            'set': function(cAa) {
                cAZ['crosshairThick'] = cAa;
            }
        },
        'sensitivity': {
            'name': cAk['get']('settings.gameplay.sensitivity'),
            'pre': '<div\x20class=\x27setHed\x27>' + cAk['get']('settings.gameplay.header') + '</div>',
            'val': 0x1,
            'min': 0.1,
            'max': 0xf,
            'html': function() {
                return '<input\x20type=\x27number\x27\x20class=\x27sliderVal\x27\x20id=\x27slid_input_sensitivity\x27\x20min=\x270.1\x27\x20max=\x2715\x27\x20value=\x27' + cDb['sensitivity']['val'] + '\x27\x20onkeypress=\x27return\x20delayExecute(\x22sensitivity\x22,\x20this)\x27\x20style=\x27border-width:0px\x27/>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x27slidecontainer\x27>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<input\x20type=\x27range\x27\x20id=\x27slid_sensitivity\x27\x20min=\x270.1\x27\x20max=\x2715\x27\x20step=\x270.1\x27\x20value=\x27' + cDb['sensitivity']['val'] + '\x27\x20class=\x27sliderM\x27\x20oninput=\x27setSetting(\x22sensitivity\x22,\x20this.value)\x27></div>';
            },
            'set': function(cAa) {
                cB8['sensMlt'] = cAa;
            }
        },
        'aimSensitivity': {
            'name': cAk['get']('settings.gameplay.aimsens'),
            'val': 0x1,
            'min': 0.1,
            'max': 0xf,
            'html': function() {
                return '<input\x20type=\x27number\x27\x20class=\x27sliderVal\x27\x20id=\x27slid_input_aimSensitivity\x27\x20min=\x270.1\x27\x20max=\x2715\x27\x20value=\x27' + cDb['aimSensitivity']['val'] + '\x27\x20onkeypress=\x27return\x20delayExecute(\x22aimSensitivity\x22,\x20this)\x27\x20style=\x27border-width:0px\x27/>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x27slidecontainer\x27>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<input\x20type=\x27range\x27\x20id=\x27slid_aimSensitivity\x27\x20min=\x270.1\x27\x20max=\x2715\x27\x20step=\x270.1\x27\x20value=\x27' + cDb['aimSensitivity']['val'] + '\x27\x20class=\x27sliderM\x27\x20oninput=\x27setSetting(\x22aimSensitivity\x22,\x20this.value)\x27></div>';
            },
            'set': function(cAa) {
                cB8['sensAimMlt'] = cAa;
            }
        },
        'fov': {
            'name': cAk['get']('settings.gameplay.fov'),
            'val': cAd['fov'],
            'min': 0x3c,
            'max': 0x78,
            'html': function() {
                return '<input\x20type=\x27number\x27\x20class=\x27sliderVal\x27\x20id=\x27slid_input_fov\x27\x20min=\x2760\x27\x20max=\x27120\x27\x20value=\x27' + cDb['fov']['val'] + '\x27\x20onkeypress=\x27return\x20delayExecute(\x22fov\x22,\x20this)\x27\x20style=\x27border-width:0px\x27/>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x27slidecontainer\x27>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<input\x20type=\x27range\x27\x20id=\x27slid_fov\x27\x20min=\x2760\x27\x20max=\x27120\x27\x20step=\x275\x27\x20value=\x27' + cDb['fov']['val'] + '\x27\x20class=\x27sliderM\x27\x20oninput=\x27setSetting(\x22fov\x22,\x20this.value)\x27></div>';
            },
            'set': function(cAa) {
                cB0['setFov'](cAa);
            }
        },
        'scrollDir': {
            'name': cAk['get']('settings.gameplay.scrollDir'),
            'val': !0x0,
            'html': function() {
                return '<label\x20class=\x27switch\x27><input\x20type=\x27checkbox\x27\x20onclick=\x27setSetting(\x22scrollDir\x22,\x20this.checked)\x27\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20' + (cDb['scrollDir']['val'] ? 'checked' : '') + '><span\x20class=\x27slider\x27></span></label>';
            },
            'set': function(cAa) {
                cBt = cAa ? 0x1 : -0x1;
            }
        },
        'streamMode': {
            'name': cAk['get']('settings.gameplay.streamer'),
            'val': !0x1,
            'dontInit': !0x0,
            'html': function() {
                return '<label\x20class=\x27switch\x27><input\x20type=\x27checkbox\x27\x20onclick=\x27setSetting(\x22streamMode\x22,\x20this.checked)\x27\x0a\x20\x20\x20\x20\x20\x20\x20\x20' + (cDb['streamMode']['val'] ? 'checked' : '') + '><span\x20class=\x27slider\x27></span></label>';
            },
            'set': function(cAa) {
                toggleStrm(cAa);
            }
        },
        'challMode': {
            'name': cAk['get']('settings.gameplay.challenge'),
            'val': !0x1,
            'html': function() {
                return '<label\x20class=\x27switch\x27><input\x20type=\x27checkbox\x27\x20onclick=\x27setSetting(\x22challMode\x22,\x20this.checked)\x27\x0a\x20\x20\x20\x20\x20\x20\x20\x20' + (cDb['challMode']['val'] ? 'checked' : '') + '><span\x20class=\x27slider\x27></span></label>';
            },
            'set': function(cAa) {
                toggleChal(cAa);
            }
        },
        'invertY': {
            'name': cAk['get']('settings.gameplay.invert'),
            'val': !0x1,
            'html': function() {
                return '<label\x20class=\x27switch\x27><input\x20type=\x27checkbox\x27\x20onclick=\x27setSetting(\x22invertY\x22,\x20this.checked)\x27\x0a\x20\x20\x20\x20\x20\x20\x20\x20' + (cDb['invertY']['val'] ? 'checked' : '') + '><span\x20class=\x27slider\x27></span></label>';
            },
            'set': function(cAa) {
                cB8['invertY'] = cAa;
            }
        },
        'hideNames': {
            'name': cAk['get']('settings.gameplay.hideNames'),
            'val': 0x0,
            'html': function() {
                return '<select\x20class=\x27inputGrey2\x27\x20onchange=\x22setSetting(\x27hideNames\x27,\x20this.value)\x22>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<option\x20value=\x220\x22' + (0x0 == cDb['hideNames']['val'] ? '\x20selected' : '') + '>' + cAk['get']('settings.gameplay.hideNames.all') + '</option>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<option\x20value=\x221\x22' + (0x1 == cDb['hideNames']['val'] ? '\x20selected' : '') + '>' + cAk['get']('settings.gameplay.hideNames.team') + '</option>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<option\x20value=\x222\x22' + (0x2 == cDb['hideNames']['val'] ? '\x20selected' : '') + '>' + cAk['get']('settings.gameplay.hideNames.enemy') + '</option>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<option\x20value=\x223\x22' + (0x3 == cDb['hideNames']['val'] ? '\x20selected' : '') + '>' + cAk['get']('generic.off') + '</option>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20</select>';
            },
            'set': function() {}
        },
        'sound': {
            'name': cAk['get']('settings.audio.sound'),
            'pre': '<div\x20class=\x27setHed\x27>' + cAk['get']('settings.audio.header') + '</div>',
            'val': 0x1,
            'min': 0x0,
            'max': 0x1,
            'html': function() {
                return '<input\x20type=\x27number\x27\x20class=\x27sliderVal\x27\x20id=\x27slid_input_sound\x27\x20min=\x270\x27\x20max=\x271\x27\x20value=\x27' + cDb['sound']['val'] + '\x27\x20onkeypress=\x27return\x20delayExecute(\x22sound\x22,\x20this)\x27\x20style=\x27border-width:0px\x27/>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x27slidecontainer\x27>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<input\x20type=\x27range\x27\x20id=\x27slid_sound\x27\x20min=\x270\x27\x20max=\x271\x27\x20step=\x270.1\x27\x20value=\x27' + cDb['sound']['val'] + '\x27\x20class=\x27sliderM\x27\x20oninput=\x27setSetting(\x22sound\x22,\x20this.value)\x27></div>';
            },
            'set': function(cAa) {
                cB1['setVolume'](cAa);
            }
        },
        'voiceVolume': {
            'name': cAk['get']('settings.audio.voice'),
            'val': 0x1,
            'min': 0x0,
            'max': 0x1,
            'html': function() {
                return '<input\x20type=\x27number\x27\x20class=\x27sliderVal\x27\x20id=\x27slid_input_voiceVolume\x27\x20min=\x270\x27\x20max=\x271\x27\x20value=\x27' + cDb['voiceVolume']['val'] + '\x27\x20onkeypress=\x27return\x20delayExecute(\x22voiceVolume\x22,\x20this)\x27\x20style=\x27border-width:0px\x27/>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x27slidecontainer\x27>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<input\x20type=\x27range\x27\x20id=\x27slid_voiceVolume\x27\x20min=\x270\x27\x20max=\x271\x27\x20step=\x270.1\x27\x20value=\x27' + cDb['voiceVolume']['val'] + '\x27\x20class=\x27sliderM\x27\x20oninput=\x27setSetting(\x22voiceVolume\x22,\x20this.value)\x27></div>';
            },
            'set': function(cAa) {
                cCM = cAa;
            }
        },
        'fpsFOV': {
            'name': cAk['get']('settings.viewmodel.fps'),
            'pre': '<div\x20class=\x27setHed\x27>' + cAk['get']('settings.viewmodel.header') + '</div>',
            'val': cAd['fov'],
            'min': 0x3c,
            'max': 0x78,
            'html': function() {
                return '<input\x20type=\x27number\x27\x20class=\x27sliderVal\x27\x20id=\x27slid_input_fpsFOV\x27\x20min=\x2760\x27\x20max=\x27120\x27\x20value=\x27' + cDb['fpsFOV']['val'] + '\x27\x20onkeypress=\x27return\x20delayExecute(\x22fpsFOV\x22,\x20this)\x27\x20style=\x27border-width:0px\x27/>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x27slidecontainer\x27>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<input\x20type=\x27range\x27\x20id=\x27slid_fpsFOV\x27\x20min=\x2760\x27\x20max=\x27120\x27\x20step=\x275\x27\x20value=\x27' + cDb['fpsFOV']['val'] + '\x27\x20class=\x27sliderM\x27\x20oninput=\x27setSetting(\x22fpsFOV\x22,\x20this.value)\x27></div>';
            },
            'set': function(cAa) {
                cB0['setFPSFov'](cAa);
            }
        },
        'weaponBob': {
            'name': cAk['get']('settings.viewmodel.bobbing'),
            'val': 0x1,
            'min': 0x0,
            'max': 0x2,
            'html': function() {
                return '<input\x20type=\x27number\x27\x20class=\x27sliderVal\x27\x20id=\x27slid_input_weaponBob\x27\x20min=\x270\x27\x20max=\x272\x27\x20value=\x27' + cDb['weaponBob']['val'] + '\x27\x20onkeypress=\x27return\x20delayExecute(\x22weaponBob\x22,\x20this)\x27\x20style=\x27border-width:0px\x27/>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x27slidecontainer\x27>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<input\x20type=\x27range\x27\x20id=\x27slid_weaponBob\x27\x20min=\x270\x27\x20max=\x272\x27\x20step=\x270.1\x27\x20value=\x27' + cDb['weaponBob']['val'] + '\x27\x20class=\x27sliderM\x27\x20oninput=\x27setSetting(\x22weaponBob\x22,\x20this.value)\x27></div>';
            },
            'set': function(cAa) {
                cB0['weaponLean'] = cAa;
            }
        },
        'showWeapon': {
            'name': cAk['get']('settings.viewmodel.show.primary'),
            'val': !0x0,
            'html': function() {
                return '<label\x20class=\x27switch\x27><input\x20type=\x27checkbox\x27\x20onclick=\x27setSetting(\x22showWeapon\x22,\x20this.checked)\x27\x0a\x20\x20\x20\x20\x20\x20\x20\x20' + (cDb['showWeapon']['val'] ? 'checked' : '') + '><span\x20class=\x27slider\x27></span></label>';
            },
            'set': function(cAa) {
                if (cB7['hideWeapon'][0x0] = !cAa,
                cB9)
                    for (var cAb, cAc = 0x0; cAc < cB9['loadout']['length']; cAc++)
                        !(cAb = cB7['weapons'][cB9['loadout'][cAc]])['secondary'] && !cAb['melee'] && cB9['weaponMeshes'][cAc] && cB9['weaponIndex'] == cAc && (cB9['weaponMeshes'][cAc]['visible'] = cAa);
            }
        },
        'showWeaponSec': {
            'name': cAk['get']('settings.viewmodel.show.secondary'),
            'val': !0x0,
            'html': function() {
                return '<label\x20class=\x27switch\x27><input\x20type=\x27checkbox\x27\x20onclick=\x27setSetting(\x22showWeaponSec\x22,\x20this.checked)\x27\x0a\x20\x20\x20\x20\x20\x20\x20\x20' + (cDb['showWeaponSec']['val'] ? 'checked' : '') + '><span\x20class=\x27slider\x27></span></label>';
            },
            'set': function(cAa) {
                if (cB7['hideWeapon'][0x1] = !cAa,
                cB9)
                    for (var cAb = 0x0; cAb < cB9['loadout']['length']; cAb++)
                        cB7['weapons'][cB9['loadout'][cAb]]['secondary'] && cB9['weaponMeshes'][cAb] && cB9['weaponIndex'] == cAb && (cB9['weaponMeshes'][cAb]['visible'] = cAa);
            }
        },
        'showWeaponMel': {
            'name': cAk['get']('settings.viewmodel.show.melee'),
            'val': !0x0,
            'html': function() {
                return '<label\x20class=\x27switch\x27><input\x20type=\x27checkbox\x27\x20onclick=\x27setSetting(\x22showWeaponMel\x22,\x20this.checked)\x27\x0a\x20\x20\x20\x20\x20\x20\x20\x20' + (cDb['showWeaponMel']['val'] ? 'checked' : '') + '><span\x20class=\x27slider\x27></span></label>';
            },
            'set': function(cAa) {
                if (cB7['hideWeapon'][0x2] = !cAa,
                cB9)
                    for (var cAb = 0x0; cAb < cB9['loadout']['length']; cAb++)
                        cB7['weapons'][cB9['loadout'][cAb]]['melee'] && cB9['weaponMeshes'][cAb] && cB9['weaponIndex'] == cAb && (cB9['weaponMeshes'][cAb]['visible'] = cAa);
            }
        },
        'hudHealthHigh': {
            'name': cAk['get']('settings.editing.health.high'),
            'pre': '<div\x20class=\x27setHed\x27>' + cAk['get']('settings.editing.header') + '</div>',
            'val': '#9eeb56',
            'html': function() {
                return '<input\x20type=\x27color\x27\x20id=\x27head\x27\x20name=\x27color\x27\x20value=\x27' + cDb['hudHealthHigh']['val'] + '\x27\x20oninput=\x27setSetting(\x22hudHealthHigh\x22,\x20this.value)\x27\x20style=\x27float:right;margin-top:5px\x27/>';
            },
            'set': function() {}
        },
        'hudHealthLow': {
            'name': cAk['get']('settings.editing.health.low'),
            'val': '#eb5656',
            'html': function() {
                return '<input\x20type=\x27color\x27\x20id=\x27head\x27\x20name=\x27color\x27\x20value=\x27' + cDb['hudHealthLow']['val'] + '\x27\x20oninput=\x27setSetting(\x22hudHealthLow\x22,\x20this.value)\x27\x20style=\x27float:right;margin-top:5px\x27/>';
            },
            'set': function() {}
        },
        'depthMap': {
            'name': cAk['get']('settings.editing.depth'),
            'val': 0x0,
            'min': 0x0,
            'max': 0x1f4,
            'html': function() {
                return '<input\x20type=\x27number\x27\x20class=\x27sliderVal\x27\x20id=\x27slid_input_depthMap\x27\x20min=\x270\x27\x20max=\x27500\x27\x20value=\x27' + cDb['depthMap']['val'] + '\x27\x20onkeypress=\x27return\x20delayExecute(\x22depthMap\x22,\x20this)\x27\x20style=\x27border-width:0px\x27/>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x27slidecontainer\x27>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<input\x20type=\x27range\x27\x20id=\x27slid_depthMap\x27\x20min=\x270\x27\x20max=\x27500\x27\x20step=\x275\x27\x20value=\x27' + cDb['depthMap']['val'] + '\x27\x20class=\x27sliderM\x27\x20oninput=\x27setSetting(\x22depthMap\x22,\x20this.value)\x27></div>';
            },
            'set': function(cAa) {
                cB0['toggleDepthMap'](cAa);
            }
        },
        'greenScreen': {
            'name': cAk['get']('settings.editing.green'),
            'val': !0x1,
            'html': function() {
                return '<label\x20class=\x27switch\x27><input\x20type=\x27checkbox\x27\x20onclick=\x27setSetting(\x22greenScreen\x22,\x20this.checked)\x27\x0a\x20\x20\x20\x20\x20\x20\x20\x20' + (cDb['greenScreen']['val'] ? 'checked' : '') + '><span\x20class=\x27slider\x27></span></label>';
            },
            'set': function(cAa) {
                cB0['toggleGreenscreen'](cAa);
            }
        },
        'ambientShading': {
            'name': cAk['get']('settings.shaders.ambient'),
            'pre': '<div\x20class=\x27setHed\x27>' + cAk['get']('settings.shaders.header') + '</div>',
            'val': !0x0,
            'html': function() {
                return '<label\x20class=\x27switch\x27><input\x20type=\x27checkbox\x27\x20onclick=\x27setSetting(\x22ambientShading\x22,\x20this.checked)\x27\x0a\x20\x20\x20\x20\x20\x20\x20\x20' + (cDb['ambientShading']['val'] ? 'checked' : '') + '><span\x20class=\x27slider\x27></span></label>';
            },
            'set': function(cAa) {
                cB0['toggleMeshGroup']('ambient_0', cAa),
                cB0['toggleMeshGroup']('ambient_1', cAa);
            }
        },
        'canLoadMods': {
            'name': cAk['get']('settings.mods.load'),
            'pre': '<div\x20class=\x27setHed\x27>' + cAk['get']('settings.mods.header') + '</div>',
            'val': !0x0,
            'html': function() {
                return '<label\x20class=\x27switch\x27><input\x20type=\x27checkbox\x27\x20onclick=\x27setSetting(\x22canLoadMods\x22,\x20this.checked)\x27\x0a\x20\x20\x20\x20\x20\x20\x20\x20' + (cDb['canLoadMods']['val'] ? 'checked' : '') + '><span\x20class=\x27slider\x27></span></label>';
            },
            'set': function(cAa) {
                cBp = cAa;
            }
        },
        'autoLoadLast': {
            'name': cAk['get']('settings.mods.auto'),
            'val': !0x1,
            'html': function() {
                return '<label\x20class=\x27switch\x27><input\x20type=\x27checkbox\x27\x20onclick=\x27setSetting(\x22autoLoadLast\x22,\x20this.checked)\x27\x0a\x20\x20\x20\x20\x20\x20\x20\x20' + (cDb['autoLoadLast']['val'] ? 'checked' : '') + '><span\x20class=\x27slider\x27></span></label>';
            },
            'set': function() {}
        },
        'scopeBorders': {
            'name': cAk['get']('settings.mods.borders'),
            'val': !0x0,
            'html': function() {
                return '<label\x20class=\x27switch\x27><input\x20type=\x27checkbox\x27\x20onclick=\x27setSetting(\x22scopeBorders\x22,\x20this.checked)\x27\x0a\x20\x20\x20\x20\x20\x20\x20\x20' + (cDb['scopeBorders']['val'] ? 'checked' : '') + '><span\x20class=\x27slider\x27></span></label>';
            },
            'set': function(cAa) {
                Array['from'](document['querySelectorAll']('.black'))['forEach'](cAb=>cAb['style']['display'] = cAa ? 'block' : 'none');
            }
        },
        'customScope': {
            'name': cAk['get']('settings.mods.scope'),
            'val': '',
            'html': function() {
                return '<input\x20type=\x27url\x27\x20placeholder=\x27' + cAk['get']('settings.mods.scope.paste') + '\x27\x20name=\x27url\x27\x20class=\x27inputGrey2\x27\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20value=\x27' + cDb['customScope']['val'] + '\x27\x20oninput=\x27setSetting(\x22customScope\x22,\x20this.value)\x27/>';
            },
            'set': function(cAa) {
                cAa = cAY['isURL'](cAa) && !/\.svg/['test'](cAa) ? cAa : '',
                recticleImg['src'] = 0x1 < cAa['length'] ? cAa : location['origin'] + '/textures/recticle.png';
            }
        },
        'customADSDot': {
            'name': cAk['get']('settings.mods.dot'),
            'val': '',
            'html': function() {
                return '<input\x20type=\x27url\x27\x20id=\x27customADSDot\x27\x20placeholder=\x27' + cAk['get']('settings.mods.dot.paste') + '\x27\x20name=\x27url\x27\x20class=\x27inputGrey2\x27\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20value=\x27' + cDb['customADSDot']['val'] + '\x27\x20oninput=\x27setSetting(\x22customADSDot\x22,\x20this.value)\x27/>';
            },
            'set': function(cAa) {
                (cAa = cAY['isURL'](cAa) && !/\.svg/['test'](cAa) ? cAa : '')['length'] && (cBD = cAa);
            }
        },
        'endMessage': {
            'name': cAk['get']('settings.mods.endmessage'),
            'val': '',
            'html': function() {
                return '<input\x20type=\x27text\x27\x20placeholder=\x27' + cAk['get']('settings.mods.endmessage') + '\x27\x20name=\x27text\x27\x20class=\x27inputGrey2\x27\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20value=\x27' + cDb['endMessage']['val'] + '\x27\x20oninput=\x27setSetting(\x22endMessage\x22,\x20this.value)\x27/>';
            },
            'set': function() {}
        },
        'customProfile': {
            'name': cAk['get']('settings.mods.profile'),
            'val': '',
            'html': function() {
                return '<input\x20type=\x27url\x27\x20id=\x27customProfile\x27\x20placeholder=\x27' + cAk['get']('settings.mods.profile.paste') + '\x27\x20name=\x27url\x27\x20class=\x27inputGrey2\x27\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20value=\x27' + cDb['customProfile']['val'] + '\x27\x20oninput=\x27setSetting(\x22customProfile\x22,\x20this.value)\x27/>';
            },
            'set': function(cAa) {
                cAa = cAY['isURL'](cAa) && !/\.svg/['test'](cAa) ? cAa : '',
                cBE = menuMiniProfilePic['src'] = hudClassImg['src'] = cAa;
            }
        }
    };
    for (var cEa in cDb)
        if (cDb[cEa]['set'] && !cDb[cEa]['dontInit']) {
            var cEb = getSavedVal('kro_setngss_' + cEa);
            cDb[cEa]['val'] = null === cEb ? cDb[cEa]['val'] : cEb,
            'false' == cDb[cEa]['val'] && (cDb[cEa]['val'] = !0x1),
            (cDb[cEa]['min'] || cDb[cEa]['max']) && (cDb[cEa]['val'] = Math['min'](cDb[cEa]['max'], Math['max'](cDb[cEa]['min'], cDb[cEa]['val']))),
            cDb[cEa]['set'](cDb[cEa]['val'], !0x0);
        }
    function cEc(cAa) {
        cBa && cBa['setData'](cAa),
        updateWindow(0x5),
        cEe();
    }
    function cEe() {
        if (cBa) {
            signedOutHeaderBar['style']['display'] = 'none',
            signedInHeaderBar['style']['display'] = null,
            cBa['level'] >= cAd['rewardMinLvl'] ? (claimHolder['style']['display'] = 'block',
            merchHolder['style']['top'] = '205px',
            cEK()) : merchHolder['style']['top'] = '110px',
            menuAccountUsername['innerText'] = cBa['name'],
            menuKRCount['innerText'] = cBa['funds'],
            menuLevelText['innerText'] = 'LVL\x20' + cBa['level'],
            menuLevelBar['style']['width'] = cBa['levelProg'] + '%';
            var cAa = cAY['levelIconId'](cBa['level']);
            menuLevelIcon['style']['backgroundImage'] = 'url(\x27/img/levels/' + cAa + '.png\x27)';
        } else
            signedOutHeaderBar['style']['display'] = null,
            signedInHeaderBar['style']['display'] = 'none',
            claimHolder['style']['display'] = 'none',
            merchHolder['style']['top'] = '110px';
    }
    new MutationObserver(cAa=>{
        0x1 < cBD['length'] && cBD != cAa[0x0]['target']['src'] && (cAa[0x0]['target']['src'] = cBD);
    }
    )['observe'](aimDot, {
        'attributes': !0x0,
        'attributeFilter': ['src']
    }),
    window['changeCont'] = function(cAa, cAb) {
        cAb || showWindow(0x7, !0x0),
        0x3 >= cAa ? cB8['inputChanger'] = cAa : 0x4 == cAa ? cB8['inputChanger'] = 'jumpKey' : 0x5 == cAa ? cB8['inputChanger'] = 'crouchKey' : 0x6 == cAa ? cB8['inputChanger'] = 'meleeKey' : 0x7 == cAa ? cB8['inputChanger'] = 'swapKey' : 0x8 == cAa ? cB8['inputChanger'] = 'reloadKey' : 0x9 == cAa ? cB8['inputChanger'] = 'sprayKey' : 0xa == cAa ? cB8['inputChanger'] = 'aimKey' : 0xb == cAa ? cB8['inputChanger'] = 'chatKey' : 0xc == cAa ? cB8['inputChanger'] = 'voiceKey' : 0xd == cAa ? cB8['inputChanger'] = 'primKey' : 0xe == cAa ? cB8['inputChanger'] = 'inspKey' : 0xf == cAa ? cB8['inputChanger'] = 'listKey' : 0x10 == cAa ? cB8['inputChanger'] = 'interactKey' : 0x11 == cAa && (cB8['inputChanger'] = 'dropKey'),
        document['getElementById']('cont' + cAa)['innerHTML'] = cAk['get']('settings.controls.press');
    }
    ;
    var cEj = 0x5
      , cEk = 0x0;
    function cEl(cAa, cAb) {
        if (cAa) {
            if (0x0 == cEk && ('CreatingGame' == cAa || 'Host' == cAa || 'Join' == cAa)) {
                playTick(),
                cEk = cEj;
                var cAc = setInterval(function() {
                    playTick(),
                    cEk--,
                    cEl('Countdown'),
                    0x1 >= cEk && clearInterval(cAc);
                }, 0x3e8);
            }
            var cAd, cAe;
            if (queueStatus['style']['display'] = '',
            0x0 < cEk)
                cAd = 'Joining\x20in\x20' + cEk + '...',
                cAe = !0x1;
            else
                switch (cAa) {
                case 'Queuing':
                    cAd = cAk['get']('queue.status.queuing'),
                    cAe = !0x1;
                    break;
                case 'Queued':
                    var cAf = cAb['queueSize'] - cAb['queueIndex'] + '\x20of\x20' + cAb['queueSize'];
                    cAd = cAk['get']('queue.status.queued') + '\x20(' + cAf + ')',
                    cAe = !0x0;
                    break;
                case 'CreatingGame':
                    cAd = cAk['get']('queue.status.creating-game'),
                    cAe = !0x1;
                    break;
                case 'Host':
                    cAd = cAk['get']('queue.status.host'),
                    cAe = !0x1;
                    break;
                case 'Join':
                    cAd = cAk['get']('queue.status.join'),
                    cAe = !0x1;
                    break;
                default:
                    console['warn']('Unknown\x20status', cAa),
                    cAd = '?';
                }
            queueStatusText['innerText'] = cAd,
            queueStatusButton['style']['display'] = cAe ? '' : 'none',
            uiBase['classList']['toggle']('isQueued', !0x0);
        } else
            cEk = 0x0,
            queueStatus['style']['display'] = 'none',
            uiBase['classList']['toggle']('isQueued', !0x1);
    }
    function cEs(cAa) {
        try {
            accResp['innerHTML'] = cAa || '',
            accResp['style']['display'] = cAa ? 'block' : 'none';
        } catch (cEu) {}
    }
    function cEv(cAa, cAb) {
        0x0 <= cAa && cEs(cAk['get']('generic.wait')),
        0x0 != cAa || cBF ? cB6['send']('a', cAa, cAb) : grecaptcha['execute']('6LdvBrQUAAAAAL6gtEpVNzii_3nQkbOyx912nvlm', {
            'action': 'login'
        })['then'](cAc=>{
            cBF = !0x0,
            cB6['send']('a', cAa, cAb, cAc);
        }
        );
    }
    function cEz(cAa, cAb, cAc, cAe, cAf) {
        cAa ? cEs(cAa) : (cBa = new cBh(cAb,cAc,null,cAd),
        saveVal('krunker_id', cAb),
        saveVal('krunker_username', cAc),
        cEc(cAe),
        cBa['hack'] && (window['activeHacker'] = !0x0),
        cAf && (saveVal('krunker_token', cAf),
        loginToken = cAf),
        updateWindow(null, !0x0),
        cAp && (cAp = !0x1,
        cAw()));
    }
    window['registerAcc'] = function() {
        cEv(0x0, [accName['value'], accPass['value']]);
    }
    ,
    window['loginAcc'] = function() {
        cEv(0x1, [accName['value'], accPass['value'], null]);
    }
    ,
    window['logoutAcc'] = function() {
        cEv(-0x1),
        cEs(),
        cAf('krunker_id'),
        cAf('krunker_username'),
        cAf('krunker_token'),
        cAf('skins'),
        cAf('hatIndex'),
        cAf('backIndex'),
        cAf('meleeIndex'),
        cAf('skinColIndex'),
        cEY = -0x1,
        cEX = -0x1,
        cEW = -0x1,
        cEV = -0x1,
        cF0 = {},
        selectSecondary(0x2),
        windows[0xc]['clanData'] = null,
        loginToken = null,
        cBa = null,
        cEc(),
        showWindow(0x5),
        cFi();
    }
    ;
    var cEF = !0x1;
    window['newTok'] = function(cAa) {
        cAa && (saveVal('krunker_token', cAa),
        loginToken = cAa);
    }
    ,
    window['logoutSessions'] = function(cAa) {
        cAa && (cAa['style']['display'] = 'none'),
        cEF = !0x0,
        cB6['send']('las');
    }
    ;
    var cEI, cEJ = 0x0;
    function cEK() {
        if ('block' == claimHolder['style']['display']) {
            cEJ = cAd['rewardTime'] - ((cBv || Date['now']()) - cBa['lastReward']);
            var cAa = cAY['getTimeH'](Math['max'](0x0, cEJ));
            cEI != cAa && (cEI = cAa,
            claimTimer['innerHTML'] = '00:00:00' == cAa ? '' : cAa,
            merchHolder['style']['top'] = '00:00:00' == cAa ? '205px' : '237px');
            var cAb = 0x0 >= cEJ ? './img/claim_0.png' : './img/claim_1.png';
            claimImg['getAttribute']('src') != cAb && (claimImg['src'] = cAb);
        }
    }
    function cEN(cAa, cAb) {
        cCv(cAb),
        cBa && (cBa['lastReward'] = cAa),
        cEK();
    }
    window['claimReward'] = function() {
        0x0 < cEJ || function() {
            if (cOF)
                return void console['warn']('Attempting\x20to\x20show\x20pre\x20ad\x20when\x20already\x20showing');
            cOF = !0x0;
            var cAa = document['createElement']('script');
            cAa['src'] = '//cdn.playwire.com/bolt/js/zeus/embed.js',
            cAa['type'] = 'text/javascript',
            cAa['setAttribute']('charset', 'utf-8'),
            cAa['setAttribute']('data-config', '//config.playwire.com/1020124/v2/pre_content.json'),
            cAa['setAttribute']('data-width', '640px'),
            cAa['setAttribute']('data-height', '360px'),
            cAa['setAttribute']('data-id', 'pre-content-player'),
            cAa['setAttribute']('data-hidden-container', 'my-content'),
            cAa['setAttribute']('data-onready', 'window.boltEventHandlers');
            var cAb = document['getElementById']('pre-content-container');
            cAb['style']['display'] = 'block',
            cAb['appendChild'](cAa),
            cOD = setTimeout(function() {
                let cAa = 'none' != document['getElementById']('my-content')['style']['display'];
                cAa ? (console['log']('Ad\x20blocked'),
                cOG(!0x1)) : console['log']('Ad\x20not\x20blocked');
            }, 0x3a98),
            cOE = setTimeout(function() {
                console['log']('Ad\x20failed\x20to\x20load'),
                cOG(!0x1);
            }, 0xea60);
        }();
    }
    ,
    window['setClassIndex'] = function(cAa) {
        classIndex = cAa,
        menuMiniProfilePic['src'] = cBE['length'] ? cBE : '/textures/classes/icon_' + classIndex + '.png';
    }
    ;
    var cEU = 0x1
      , cEV = getSavedVal('skinColIndex') || -0x1
      , cEW = getSavedVal('meleeIndex') || -0x1
      , cEX = getSavedVal('backIndex') || -0x1
      , cEY = getSavedVal('hatIndex') || -0x1
      , cEZ = getSavedVal('skins')
      , cF0 = cEZ ? JSON['parse'](cEZ) : {};
    setClassIndex(getSavedVal('classindex') || 0x0);
    var cF1 = getSavedVal('secondaryInd') || 0x2
      , cF2 = 0x0;
    window['selectHat'] = function(cAa) {
        saveVal('hatIndex', cAa),
        cEY = cAa,
        cFi(),
        showWindow(0x3);
    }
    ,
    window['selectBack'] = function(cAa) {
        saveVal('backIndex', cAa),
        cEX = cAa,
        cFi(),
        showWindow(0x3);
    }
    ,
    window['selectMelee'] = function(cAa) {
        saveVal('meleeIndex', cAa),
        cEW = cAa,
        cFi(),
        showWindow(0x3);
    }
    ,
    window['selectSecondary'] = function(cAa) {
        saveVal('secondaryInd', cAa),
        cF1 = cAa,
        cFi(),
        showWindow(0x3);
    }
    ,
    window['selectSkinColor'] = function(cAa) {
        saveVal('skinColIndex', cAa),
        cEV = cAa,
        cFi(),
        updateWindow(0x3);
    }
    ,
    window['selectClass'] = function(cAa) {
        saveVal('classindex', cAa),
        cB7['classes'][cAa]['txts'] ? cO0(cB7['classes'][cAa]['txts'][cAY['randInt'](0x0, cB7['classes'][cAa]['txts']['length'] - 0x1)]) : !cAY['randInt'](0x0, 0x2) && cO0(['Let\x27s\x20Go!', 'Alright!', 'I\x27m\x20Ready!'][cAY['randInt'](0x0, 0x2)]),
        setClassIndex(cAa),
        cFi(),
        showWindow(0x3);
    }
    ,
    window['skinSelector'] = function(cAa) {
        cF2 = cAa,
        cFi(),
        showWindow(0xf);
    }
    ,
    window['selectSkin'] = function(cAa, cAb) {
        cBb = cB7['store']['skins'][cAa],
        cF0[cAb] = cBb ? cAa : void 0x0,
        saveVal('skins', JSON['stringify'](cF0)),
        cFi(),
        showWindow(0x3);
    }
    ;
    var cFc, cFd, cFe = 0x294, cFf = 0x15e, cFg = new cAX['PerspectiveCamera'](0xf,0x1,0.1,0x64), cFh = new cAX['WebGLRenderer']({
        'canvas': classPreviewCanvas,
        'precision': 'mediump',
        'antialias': !0x1,
        'alpha': !0x0
    });
    function cFi() {
        function cAa(cAa, cAb=!0x0) {
            cAc && (cAc += '\x20-\x20');
            var cAd = 'inherit'
              , cAe = cB7['weapons'][cAa]['name'];
            if (null != cF0[cAa]) {
                var cAf = cB7['store']['skins'][cF0[cAa]];
                cAf && (cAd = cB7['store']['rarities'][cAf['rarity']]['color'],
                cAe = cAf['name']);
            }
            cAc += '<span\x20style=\x27color:' + (cAb ? cAd : 'inherit') + '\x27>' + cAe + '</span>';
        }
        var cAb = cB7['classes'][classIndex];
        menuClassName['innerText'] = cAb['name'];
        var cAc = '';
        for (var cAe of cAb['loadout'])
            cAa(cAe);
        menuClassSubtext['innerHTML'] = cAc,
        (cFc = new cAX['Scene']())['add'](new cAX['AmbientLight'](0x97a0a8));
        var cAf = new cAX['DirectionalLight'](0xf2f8fc,0.5);
        cAf['position']['set'](0xa, 0x11, -0xa),
        cFc['add'](cAf);
        var cAk = [null == cF0[cAb['loadout'][0x0]] ? -0x1 : cF0[cAb['loadout'][0x0]], null == cF0[cAb['loadout'][0x1]] ? -0x1 : cF0[cAb['loadout'][0x1]]];
        (cFd = new cBi(-0x1,this,cAY,cAd,cB7))['sid'] = -0x1,
        cFd['init'](0x0, 0x0, 0x0, 'preview', !0x1),
        cFd['skins'] = cAk,
        cFd['hatIndex'] = cEY,
        cFd['backIndex'] = cEX,
        cFd['meleeIndex'] = cEW,
        cFd['skinColIndex'] = cEV,
        cFd['secIndex'] = cF1,
        usdfe.selectedSkin = cFd['skins'],
        usdfe.selectedHat = cFd['hatIndex'],
        usdfe.selectedBack = cFd['backIndex'],
        usdfe.selectedMelee = cFd['meleeIndex'],
        cFd['setClass'](cB7, classIndex, cF1, !0x0),
        cB7['players']['swapWeapon'](cFd, 0x0, !0x0),
        cFc['add'](cB7['players']['generateMeshes'](cFd, !0x1)),
        cFd['swapTime'] = 0x0,
        cFd['weaponMeshes'][0x0]['visible'] = !0x0,
        cFg['lookAt'](new cAX['Vector3'](0x0,0.8 * cAd['playerHeight'],0x0));
    }
    cFg['position']['x'] = -0xa,
    cFg['position']['y'] = 0x11,
    cFg['position']['z'] = -0x1d,
    cFi();
    var cFu = !('true' != getSavedVal('krk_hideFull'));
    function cFv(cAa, cAb) {
        for (var cAc = '', cAd = 'map' == cAb ? 'selectHostMap' : 'loadUserMod', cAe = 0x0; cAe < cAa['length']; ++cAe)
            cAc += '<div\x20class=\x27mapListItem\x27><img\x20class=\x27mapListThumb\x27\x20src=\x27' + (cAa[cAe][cAb + '_image'] ? cAa[cAe][cAb + '_image'] : './img/noimg.png') + '\x27\x20onclick=\x27' + cAd + '(&quot;' + cAa[cAe][cAb + '_name'] + '&quot;,&quot;' + cAa[cAe]['mod_url'] + '&quot;,&quot;' + cAa[cAe]['mod_id'] + '&quot;)\x27/><div\x20style=\x27margin-top:-3px\x27><a\x20href=\x27javascript:;\x27\x20onclick=\x27' + cAd + '(&quot;' + cAa[cAe][cAb + '_name'] + '&quot;,&quot;' + cAa[cAe]['mod_url'] + '&quot;,&quot;' + cAa[cAe]['mod_id'] + '&quot;)\x27/>' + cAa[cAe][cAb + '_name'] + '</a></div><div\x20style=\x27display:\x20flex\x27><span\x20style=\x27color:rgba(0,0,0,0.2);font-size:15px\x27>\x20by\x20<a\x20target=\x27_blank\x27\x20class=\x27grey\x27\x20href=\x27/social.html?p=profile&q=' + cAa[cAe]['creatorname'] + '\x27>' + cAa[cAe]['creatorname'] + '</a></span><div\x20style=\x27font-size:15px;text-align:right;flex-grow:1\x27>' + cAa[cAe][cAb + '_votes'] + '</div></div></div>';
        return cAc;
    }
    function cFB(cAa, cAb) {
        var cAc = '<div\x20id=\x27skinList\x27><div\x20class=\x27skinCard\x27>' + (0x3 == cAb ? 'Combat\x20Knife' : cAk['get']('generic.none')) + '<div\x20class=\x27itemOwn\x27>' + cAk['get']('generic.default') + '</div><img\x20class=\x27skinImgC\x27\x20src=\x27.' + cAY['versionifyUrl']('/textures/previews/cosmetics/' + cAb + '_default.png') + '\x27><div\x20class=\x27selctBtn\x27\x20onmouseenter=\x27playTick()\x27\x20onclick=\x27' + cAa + '(-1)\x27>' + cAk['get']('generic.select') + '</div></div>';
        if (cBa || true)
            for (var cAd = (true ? Object['keys'](cB7['store']['skins'])['map'](cAa=>cAa = {
                'ind': parseInt(cAa),
                'cnt': 0x1
            }) : cBa['skins'])['slice']()['sort'](function(cAa, cAb) {
                return (null != cAb['ind'] && cB7['store']['skins'][cAb['ind']] ? cB7['store']['skins'][cAb['ind']]['rarity'] : 0x0) - (null != cAa['ind'] && cB7['store']['skins'][cAa['ind']] ? cB7['store']['skins'][cAa['ind']]['rarity'] : 0x0);
            }), cAe = 0x0; cAe < cAd['length']; ++cAe)
                (cBb = cB7['store']['skins'][cAd[cAe]['ind']]) && cBb['type'] == cAb && (cAc += '<div\x20class=\x27skinCard\x27\x20style=\x27color:' + cB7['store']['rarities'][cBb['rarity']]['color'] + '\x27><div\x20class=\x27itemCnt\x27\x20data-badge=\x27x' + cAd[cAe]['cnt'] + '\x27></div>' + cBb['name'] + '<div\x20class=\x27itemOwn\x27>by\x20' + (cBb['creator'] || 'Krunker.io') + '</div><img\x20class=\x27skinImg' + (cBb['type'] ? 'C' : '') + '\x27\x20src=\x27.' + cAY['getPreview'](cBb, cB7['store']) + '\x27/><div\x20class=\x27selctBtn\x27\x20onmouseenter=\x27playTick()\x27onclick=\x27' + cAa + '(' + cAd[cAe]['ind'] + ')\x27>' + cAk['get']('generic.select') + '</div></div>');
        return cAc += '</div>';
    }
    window['toggleHF'] = function(cAa) {
        cFu = cAa,
        saveVal('krk_hideFull', cAa);
    }
    ,
    toggleHF(cFu),
    setInterval(()=>{
        window['kiH'](cB6);
    }
    , 0x2ee0),
    window['windows'] = [{
        'header': cAk['get']('windows.settings.header'),
        'gen': function() {
            var cAa = '';
            for (var cAb in cDb)
                cDb[cAb]['pre'] && (cAa += cDb[cAb]['pre']),
                cAa += '<div\x20class=\x27settName\x27\x20id=\x27' + cAb + '_div\x27\x20style=\x27display:' + (cDb[cAb]['hide'] ? 'none' : 'block') + '\x27>' + cDb[cAb]['name'] + '\x20' + cDb[cAb]['html']() + '</div>';
            return cAa;
        }
    }, {
        'header': cAk['get']('windows.servers.header'),
        'lastLoadTime': 0x0,
        'serverListData': [],
        'gen': function() {
            return Date['now']() - this['lastLoadTime'] < cAd['serverBrowserRate'] ? this['genList']() : (this['lastLoadTime'] = Date['now'](),
            this['loadData']());
        },
        'loadData': function() {
            return cAr['fetchGameList']()['then'](cAa=>{
                this['serverListData'] = cAa;
                var cAb = !0x1;
                for (var cAc of cAa)
                    if (cAc['id'] === cAs) {
                        cAb = !0x0;
                        break;
                    }
                cAb ? window['showWindow'](0x2, !0x0) : cAr['fetchGameInfo'](cAs)['then'](cAa=>{
                    this['privateServerData'] = cAa,
                    window['showWindow'](0x2, !0x0);
                }
                );
            }
            ),
            cAk['get']('generic.loading');
        },
        'expandedRegion': -0x1,
        'totalPlayerCount': 0x0,
        'serverSearch': null,
        'searchList': function() {
            var cAa = document['getElementById']('serverSearch');
            this['serverSearch'] = cAa && '' != cAa['value'] ? cAa['value'] : null,
            (cAa = document['getElementById']('serverHolder')) && (cAa['innerHTML'] = this['getServers']());
        },
        'getServers': function() {
            var cAa = !!localStorage['debugServerList']
              , cAb = '';
            this['totalPlayerCount'] = 0x0;
            for (var cAc, cAe = {
                'custom': {
                    'order': 0x1,
                    'name': 'Custom\x20Games',
                    'players': 0x0,
                    'games': []
                }
            }, cAf = !0x1, cAl = 0x0; cAl < this['serverListData']['length']; cAl++)
                if ((cAc = this['serverListData'][cAl])['data']) {
                    cAe[cAc['region']] || (cAe[cAc['region']] = {
                        'name': cAd['regionNames'][cAc['region']],
                        'players': 0x0,
                        'games': []
                    });
                    var cAp = cAc['data']['cs'] ? 'custom' : cAc['region'];
                    cAc['clients'] = Math['min'](cAc['clients'], cAc['maxClients']),
                    cAs === cAc['id'] && (cAf = !0x0),
                    (!this['serverSearch'] || this['searchMatches'](cAc)) && (cAe[cAp]['players'] += cAc['clients']),
                    this['totalPlayerCount'] += cAc['clients'],
                    cAe[cAp]['games']['push'](cAc);
                } else
                    console['warn']('Server\x20doesn\x27t\x20have\x20data\x20yet.');
            cAf || (this['privateServerData'] ? this['privateServerData']['data'] ? cAe['custom']['games']['push'](this['privateServerData']) : console['warn']('Server\x20doesn\x27t\x20have\x20data\x20yet.') : console['warn']('Missing\x20private\x20server\x20data.'));
            var cAq = [];
            for (var cAr in cAe)
                cAe['hasOwnProperty'](cAr) && cAq['push'](cAe[cAr]);
            for (var cAr of cAq = cAq['sort']((cAa,cAb)=>(cAb['order'] || -0x1) - (cAa['order'] || -0x1)))
                cAr['games']['sort']((cAa,cAb)=>cAb['clients'] - cAa['clients']);
            cBa && cBa['level'];
            for (var cAt = 0x0; cAt < cAq['length']; cAt++) {
                (cAr = cAq[cAt])['games'] = cAr['games']['filter'](cAa=>!cFu || cAa['clients'] != cAa['maxClients']);
                var cAu = cAr['name'] + '\x20-\x20' + cAr['players'] + '\x20online'
                  , cAw = this['expandedRegion'] == cAt;
                if (cAb += '<div\x20class=\x27menuSelectorHeader\x27\x20onclick=\x27setExpandedRegion(' + (cAw ? -0x1 : cAt) + ')\x27\x20style=\x27cursor:\x20pointer;\x27>' + (cAw ? '&#x25BC;' : '&#x25B6;') + '\x20' + cAu + '</div>',
                cAw) {
                    cAb += '<div\x20class=\x27menuSelectorHolder\x27>';
                    for (var cAC = 0x0, cAH = 0x0; cAH < cAr['games']['length']; cAH++) {
                        var cAX = cAr['games'][cAH]
                          , cAY = cAs && cAs == cAX['id'];
                        if (!this['serverSearch'] || this['searchMatches'](cAX)) {
                            cAC++;
                            var cAZ = (cAa ? cAX['id'] : cAX['data']['i']) + (cAX['data']['earnKR'] ? '\x20<i\x20class=\x27material-icons\x27\x20style=\x27color:#2196F3;font-size:33px;vertical-align:bottom;\x27>check_circle</i>' : '') + '<div\x20class=\x27serverPCount\x27>' + cAX['clients'] + '/' + cAX['maxClients'] + '</div>' + (cAX['data']['cs'] ? '<div\x20class=\x27serverRegion\x27>' + cAX['id']['split'](':')[0x0] + '\x20-&nbsp;</div>' : '');
                            cAb += '<div\x20class=\x27' + ('menuSelector' + (cAY ? '\x20selectedMenuSelector' : '')) + '\x27\x20onclick=\x27' + ('checkedSwitchServer(\x22' + cAX['id'] + '\x22,\x20this.querySelector(\x22.serverPCount\x22))') + '\x27>' + cAZ + '</div>';
                        }
                    }
                    cAr['games']['length'] && cAC || (cAb += '<div\x20style=\x27margin-left:30px;margin-top:5px\x27>' + cAk['get']('windows.servers.none') + '</div>'),
                    cAb += '</div>';
                }
            }
            return cAb;
        },
        'genList': function() {
            var cAa = this;
            window['setExpandedRegion'] = function(cAb) {
                cAa['expandedRegion'] = cAb,
                cAa['lastLoadTime'] = Date['now'](),
                showWindow(0x2, !0x0);
            }
            ;
            var cAb = '<div\x20style=\x27font-size:20px\x27>';
            return cAb += '<a\x20class=\x27menuLink\x27\x20onclick=\x27openHostWindow()\x27>' + cAk['get']('windows.servers.host') + '</a><div\x20style=\x27float:right;display:inline-block\x27><input\x20id=\x27serverSearch\x27' + (this['serverSearch'] ? 'value=\x27' + this['serverSearch'] + '\x27' : '') + '\x20type=\x27text\x27\x20placeholder=\x27' + cAk['get']('generic.search') + '\x27\x20oninput=\x27windows[1].searchList()\x27></input></div></div><div\x20id=\x22serverFilters\x22><div\x20id=\x22hideFull\x22\x20style=\x22float:right;align-items:center;display:flex\x22><span\x20class=\x22grey\x22>' + cAk['get']('windows.servers.hide') + '</span><label\x20class=\x22switchsml\x22><input\x20type=\x22checkbox\x22\x20onclick=\x22toggleHF(this.checked);windows[1].searchList()\x22' + (cFu ? '\x20checked' : '') + '><span\x20class=\x22sliderSml\x22></span></label></div></div><div\x20style=\x27height:10px\x27></div>',
            cAb += '<div\x20style=\x27font-size:20px\x27>',
            cAb += '<div\x20id=\x27serverHolder\x27>' + this['getServers']() + '</div>',
            cAb += '<div\x20style=\x27height:10px\x27></div><b\x20style=\x27color:rgba(0,0,0,0.6)\x27>' + cAk['get']('windows.servers.online', this['totalPlayerCount']) + '</b>',
            cAb += '</div>';
        },
        'searchMatches'(cAa) {
            return !!cAa['data'] && 0x0 <= (cAa['data']['i'] || '')['toLowerCase']()['indexOf']((this['serverSearch'] || '')['toLowerCase']());
        }
    }, {
        'header': cAk['get']('windows.loadout.header'),
        'gen': function() {
            var cAa = cB7['classes'][classIndex];
            0x0 > cB7['config']['classes']['indexOf'](parseInt(classIndex)) && (classIndex = cB7['config']['classes'][0x0],
            cAa = cB7['classes'][classIndex]);
            var cAb = cB7['weapons'][cAa['loadout'][0x0]]['name']
              , cAc = '#2196F3'
              , cAe = cAa['secondary'] ? cB7['weapons'][cF1]['name'] : cAk['get']('generic.none')
              , cAf = cAa['secondary'] ? '#2196F3' : 'rgba(0,0,0,0.3)'
              , cAl = 'rgba(0,0,0,0.3)'
              , cAp = cAl
              , cAq = 'rgba(0,0,0,0.3)';
            cBa && (null != cF0[cAa['loadout'][0x0]] && ((cAb = cB7['store']['skins'][cF0[cAa['loadout'][0x0]]]) && (cAc = cB7['store']['rarities'][cAb['rarity']]['color'],
            cAb = cAb['name'])),
            cAa['loadout'][0x1] && null != cF0[cAa['loadout'][0x1]] && ((cAe = cB7['store']['skins'][cF0[cAa['loadout'][0x1]]]) && (cAf = cB7['store']['rarities'][cAe['rarity']]['color'],
            cAe = cAe['name'])),
            0x0 <= cEY && cB7['store']['skins'][cEY] && (cAl = cB7['store']['rarities'][cB7['store']['skins'][cEY]['rarity']]['color']),
            0x0 <= cEX && cB7['store']['skins'][cEX] && (cAp = cB7['store']['rarities'][cB7['store']['skins'][cEX]['rarity']]['color']),
            0x0 <= cEW && cB7['store']['skins'][cEW] && (cAq = cB7['store']['rarities'][cB7['store']['skins'][cEW]['rarity']]['color']));
            for (var cAr = cAk['get']('windows.loadout.color.skin'), cAs = cAd['skinColors']['length'] - 0x1; 0x0 <= cAs; cAs--)
                cAr += '<div\x20class=\x27skinColorItem' + (cEV == cAs ? '\x20activeSkin' : '') + '\x27\x20style=\x27background-color:#' + cAd['skinColors'][cAs]['toString'](0x10) + '\x27\x20onclick=\x27selectSkinColor(' + cAs + ')\x27></div>';
            return '<div\x20class=\x27settName\x27>' + cAk['get']('windows.loadout.class') + '<span\x20class=\x27settText\x20floatR\x27\x20onclick=\x27showWindow(6)\x27>' + cAa['name'] + '</span></div><div\x20class=\x27settName\x27>' + cAk['get']('windows.loadout.primary') + '<span\x20class=\x27settLabel\x20wepLink\x27\x20style=\x27color:' + cAc + '\x27\x20onclick=\x27skinSelector(' + cAa['loadout'][0x0] + ')\x27>' + cAb + '</span></div><div\x20class=\x27settName\x27>' + cAk['get']('windows.loadout.secondary') + '<span\x20class=\x27settLabel' + (cAa['secondary'] ? '\x20wepLink' : '') + '\x27\x20' + (cAa['secondary'] ? 'onclick=\x27showWindow(20)\x27' : '') + '\x20style=\x27color:' + cAf + '\x27>' + cAe + '</span></div><div\x20class=\x27settName\x27>' + cAk['get']('windows.loadout.melee') + '<span\x20onclick=\x27showWindow(26)\x27\x20class=\x27settText\x20floatR\x27\x20style=\x27color:' + cAq + '\x27>' + (cB7['store']['skins'][cEW] ? cB7['store']['skins'][cEW]['name'] : 'Combat\x20Knife') + '</span></div><div\x20class=\x27settName\x27>' + cAk['get']('windows.loadout.hat') + '<span\x20onclick=\x27showWindow(16)\x27\x20class=\x27settText\x20floatR\x27\x20style=\x27color:' + cAl + '\x27>' + (cB7['store']['skins'][cEY] ? cB7['store']['skins'][cEY]['name'] : cAk['get']('generic.none')) + '</span></div><div\x20class=\x27settName\x27>' + cAk['get']('windows.loadout.body') + '<span\x20onclick=\x27showWindow(17)\x27\x20class=\x27settText\x20floatR\x27\x20style=\x27color:' + cAp + '\x27>' + (cB7['store']['skins'][cEX] ? cB7['store']['skins'][cEX]['name'] : cAk['get']('generic.none')) + '</span></div><div\x20class=\x27settName\x27>' + cAk['get']('windows.loadout.spray') + '<span\x20onclick=\x27showWindow(9)\x27\x20class=\x27settText\x20floatR\x27>' + cB7['sprays'][cL8]['name'] + '</span></div><div\x20class=\x27settName\x27>' + cAr + '</div>';
        }
    }, {
        'header': cAk['get']('windows.mods.header'),
        'openList': function() {
            cBn = !0x1,
            showWindow(0x12);
        },
        'gen': function() {
            return '<div\x20id=\x27modLinks\x27><a\x20href=\x27https://goo.gl/dPAxfr\x27\x20class=\x27menuLink\x27>' + cAk['get']('windows.mods.guide') + '</a>\x20|\x20<a\x20href=\x27javascript:;\x27\x20onclick=\x27windows[3].openList()\x27\x20class=\x27menuLink\x27>' + cAk['get']('windows.mods.list') + '</a>\x20|\x20<a\x20href=\x27javascript:;\x27\x20onclick=\x27showWindow(19)\x27\x20class=\x27menuLink\x27>' + cAk['get']('windows.mods.publish') + '</a>\x20|\x20<a\x20href=\x27/viewer.html\x27\x20class=\x27menuLink\x27>' + cAk['get']('windows.mods.viewer') + '</a></div><form\x20id=\x27modDropper\x27><input\x20onchange=\x27loadMod()\x27\x20id=\x27modInput\x27type=\x27file\x27><p\x20id=\x27modLInfo\x27>' + cAk['get']('windows.mods.drop') + '</p></form><input\x20type=\x27text\x27\x20id=\x27modURL\x27\x20class=\x27accountInput\x27\x20style=\x27width:78%\x27\x20placeholder=\x27' + cAk['get']('windows.mods.paste') + '\x27><a\x20class=\x27menuLink\x27\x20style=\x27display:inline-block;margin-left:10px\x27\x20onclick=\x27loadModURL()\x27>' + cAk['get']('windows.mods.load') + '</a>';
        }
    }, {
        'header': cAk['get']('windows.account.header'),
        'gen': function() {
            return cBa ? '<div\x20class=\x27settName\x27\x20style=\x27width:100%\x27>' + cAk['get']('generic.name') + '<a\x20href=\x27/social.html?p=profile&q=' + cBa['name'] + '\x27\x20class=\x27floatR\x27>' + cBa['name'] + '</a></div><div\x20class=\x27settName\x27\x20style=\x27width:100%\x27>' + cAk['get']('generic.clan') + '<a\x20class=\x27floatR\x27\x20class=\x27menuLink\x27\x20onclick=\x27showWindow(13)\x27>' + (cBa['clan'] ? '[' + cBa['clan'] + ']' : 'None') + '</a></div><div\x20class=\x27settName\x27>' + cAk['get']('generic.level') + '<span\x20class=\x27floatR\x27>' + cBa['level'] + '</span></div><div\x20class=\x27xpBar\x27><div\x20class=\x27xpBarB\x27\x20style=\x27width:' + cBa['levelProg'] + '%\x27></div></div><div\x20class=\x27settName\x27>' + cAk['get']('generic.score') + '<span\x20class=\x27floatR\x27>' + cBa['score'] + '</span></div><div\x20class=\x27settName\x27>KR<span\x20class=\x27floatR\x27>' + cBa['funds'] + 'KR</span></div><div\x20class=\x27settName\x27>' + cAk['get']('generic.kills') + '<span\x20class=\x27floatR\x27>' + cBa['kills'] + '</span></div><div\x20class=\x27settName\x27>' + cAk['get']('generic.deaths') + '<span\x20class=\x27floatR\x27>' + cBa['deaths'] + '</span></div><div\x20class=\x27settName\x27>' + cAk['get']('generic.kdr') + '<span\x20class=\x27floatR\x27>' + (cBa['kills'] / Math['max'](cBa['deaths'], 0x1))['toFixed'](0x2) + '</span></div><div\x20class=\x27settName\x27>' + cAk['get']('generic.games.played') + '<span\x20class=\x27floatR\x27>' + cBa['games'] + '</span></div><div\x20class=\x27settName\x27>' + cAk['get']('generic.games.won') + '<span\x20class=\x27floatR\x27>' + cBa['wins'] + '</span></div><div\x20class=\x27settName\x27>W/L<span\x20class=\x27floatR\x27>' + (cBa['wins'] / Math['max'](cBa['games'], 0x1))['toFixed'](0x2) + '</span></div><div\x20class=\x27settName\x27>' + cAk['get']('generic.timep') + '<span\x20class=\x27floatR\x27>' + cAY['getReadableTime'](cBa['timePlayed']) + '</span></div><div\x20style=\x27height:10px\x27></div><a\x20class=\x27menuLink\x27\x20onclick=\x27logoutAcc()\x27>' + cAk['get']('generic.logout') + '</a>' + (cEF ? '' : '<a\x20style=\x27float:right\x27\x20class=\x27menuLink\x27\x20onclick=\x27logoutSessions(this)\x27>' + cAk['get']('generic.logout.sessions') + '</a>') : '<input\x20id=\x27accName\x27\x20type=\x27text\x27\x20placeholder=\x27' + cAk['get']('generic.username') + '\x27\x20class=\x27accountInput\x27\x20style=\x27margin-top:0\x27\x20value=\x27' + (getSavedVal('krunker_username') || '') + '\x27></input><input\x20id=\x27accPass\x27\x20type=\x27password\x27\x20placeholder=\x27' + cAk['get']('generic.password') + '\x27\x20class=\x27accountInput\x27></input><div\x20id=\x27accResp\x27\x20style=\x27margin-top:10px;color:rgba(0,0,0,0.5);display:none\x27></div><div\x20style=\x27margin-top:10px;color:rgba(0,0,0,0.3)\x27>' + cAk['get']('windows.account.recover') + '</div><div\x20class=\x27accountButton\x27\x20onclick=\x27registerAcc()\x27>' + cAk['get']('generic.register') + '</div><div\x20class=\x27accountButton\x27\x20onclick=\x27loginAcc()\x27\x20style=\x27margin-left:\x2020px\x27>' + cAk['get']('generic.login') + '</div>';
        }
    }, {
        'header': cAk['get']('windows.class.header'),
        'gen': function() {
            for (var cAa = '<div\x20id=\x27skinList\x27>', cAb = 0x0; cAb < cB7['classes']['length']; ++cAb)
                0x0 <= cB7['config']['classes']['indexOf'](cAb) && !cB7['classes'][cAb]['hide'] && (cAa += '<div\x20class=\x27skinCard\x27>' + cB7['classes'][cAb]['name'] + '<div\x20class=\x27itemOwn\x27>' + cB7['weapons'][cB7['classes'][cAb]['loadout'][0x0]]['name'] + '</div><img\x20style=\x27margin-top:6px;image-rendering:pixelated\x27\x20class=\x27skinImgC\x27\x20src=\x27.' + cAY['versionifyUrl']('/textures/classes/icon_' + cAb + '.png') + '\x27/><div\x20class=\x27selctBtn\x27\x20onmouseenter=\x27playTick()\x27onclick=\x27selectClass(' + cAb + ')\x27>' + cAk['get']('generic.select') + '</div></div>');
            return cAa += '</div>';
        }
    }, {
        'header': cAk['get']('windows.controls.header'),
        'gen': function() {
            var cAa = '';
            return cAa += '<div\x20class=\x27settName\x27>' + cAk['get']('windows.controls.forward') + '<span\x20class=\x27settText\x20floatR\x27\x20id=\x27cont0\x27\x20onclick=\x27changeCont(0)\x27>' + cAY['getKeyName'](cB8['moveKeys'][0x0]) + '</span></div>',
            cAa += '<div\x20class=\x27settName\x27>' + cAk['get']('windows.controls.backward') + '<span\x20class=\x27settText\x20floatR\x27\x20id=\x27cont1\x27\x20onclick=\x27changeCont(1)\x27>' + cAY['getKeyName'](cB8['moveKeys'][0x1]) + '</span></div>',
            cAa += '<div\x20class=\x27settName\x27>' + cAk['get']('windows.controls.left') + '<span\x20class=\x27settText\x20floatR\x27\x20id=\x27cont2\x27\x20onclick=\x27changeCont(2)\x27>' + cAY['getKeyName'](cB8['moveKeys'][0x2]) + '</span></div>',
            cAa += '<div\x20class=\x27settName\x27>' + cAk['get']('windows.controls.right') + '<span\x20class=\x27settText\x20floatR\x27\x20id=\x27cont3\x27\x20onclick=\x27changeCont(3)\x27>' + cAY['getKeyName'](cB8['moveKeys'][0x3]) + '</span></div>',
            cAa += '<div\x20class=\x27settName\x27>' + cAk['get']('windows.controls.reload') + '<span\x20class=\x27settText\x20floatR\x27\x20id=\x27cont8\x27\x20onclick=\x27changeCont(8)\x27>' + cAY['getKeyName'](cB8['reloadKey']) + '</span></div>',
            cAa += '<div\x20class=\x27settName\x27>' + cAk['get']('windows.controls.aim') + '<span\x20class=\x27settText\x20floatR\x27\x20id=\x27cont10\x27\x20onclick=\x27changeCont(10)\x27>' + cAY['getKeyName'](cB8['aimKey']) + '</span></div>',
            cAa += '<div\x20class=\x27settName\x27>' + cAk['get']('windows.controls.inspect') + '<span\x20class=\x27settText\x20floatR\x27\x20id=\x27cont14\x27\x20onclick=\x27changeCont(14)\x27>' + cAY['getKeyName'](cB8['inspKey']) + '</span></div>',
            cAa += '<div\x20class=\x27settName\x27>' + cAk['get']('windows.controls.spray') + '<span\x20class=\x27settText\x20floatR\x27\x20id=\x27cont9\x27\x20onclick=\x27changeCont(9)\x27>' + cAY['getKeyName'](cB8['sprayKey']) + '</span></div>',
            cAa += '<div\x20class=\x27settName\x27>' + cAk['get']('windows.controls.jump') + '<span\x20class=\x27settText\x20floatR\x27\x20id=\x27cont4\x27\x20onclick=\x27changeCont(4)\x27>' + cAY['getKeyName'](cB8['jumpKey']) + '</span></div>',
            cAa += '<div\x20class=\x27settName\x27>' + cAk['get']('windows.controls.crouch') + '<span\x20class=\x27settText\x20floatR\x27\x20id=\x27cont5\x27\x20onclick=\x27changeCont(5)\x27>' + cAY['getKeyName'](cB8['crouchKey']) + '</span></div>',
            cAa += '<div\x20class=\x27settName\x27>' + cAk['get']('windows.controls.prim') + '<span\x20class=\x27settText\x20floatR\x27\x20id=\x27cont13\x27\x20onclick=\x27changeCont(13)\x27>' + cAY['getKeyName'](cB8['primKey']) + '</span></div>',
            cAa += '<div\x20class=\x27settName\x27>' + cAk['get']('windows.controls.melee') + '<span\x20class=\x27settText\x20floatR\x27\x20id=\x27cont6\x27\x20onclick=\x27changeCont(6)\x27>' + cAY['getKeyName'](cB8['meleeKey']) + '</span></div>',
            cAa += '<div\x20class=\x27settName\x27>' + cAk['get']('windows.controls.swap') + '<span\x20class=\x27settText\x20floatR\x27\x20id=\x27cont7\x27\x20onclick=\x27changeCont(7)\x27>' + cAY['getKeyName'](cB8['swapKey']) + '</span></div>',
            cAa += '<div\x20class=\x27settName\x27>' + cAk['get']('windows.controls.chat') + '<span\x20class=\x27settText\x20floatR\x27\x20id=\x27cont11\x27\x20onclick=\x27changeCont(11)\x27>' + cAY['getKeyName'](cB8['chatKey']) + '</span></div>',
            cAa += '<div\x20class=\x27settName\x27>' + cAk['get']('windows.controls.voice') + '<span\x20class=\x27settText\x20floatR\x27\x20id=\x27cont12\x27\x20onclick=\x27changeCont(12)\x27>' + cAY['getKeyName'](cB8['voiceKey']) + '</span></div>',
            cAa += '<div\x20class=\x27settName\x27>' + cAk['get']('windows.controls.list') + '<span\x20class=\x27settText\x20floatR\x27\x20id=\x27cont15\x27\x20onclick=\x27changeCont(15)\x27>' + cAY['getKeyName'](cB8['listKey']) + '</span></div>',
            cAa += '<div\x20class=\x27settName\x27>' + cAk['get']('windows.controls.interact') + '<span\x20class=\x27settText\x20floatR\x27\x20id=\x27cont16\x27\x20onclick=\x27changeCont(16)\x27>' + cAY['getKeyName'](cB8['interactKey']) + '</span></div>',
            cAa += '<div\x20class=\x27settName\x27>' + cAk['get']('windows.controls.drop') + '<span\x20class=\x27settText\x20floatR\x27\x20id=\x27cont17\x27\x20onclick=\x27changeCont(17)\x27>' + cAY['getKeyName'](cB8['dropKey']) + '</span></div>';
        }
    }, {
        'header': cAk['get']('windows.host.header'),
        'presets': {},
        'presetLoaded': function(cAa, cAb) {
            try {
                windows[0x7]['presets'][cAa]['data'] = cAa && windows[0x7]['presets'][cAa] && cAb ? JSON['parse'](cAb) : 'DEFAULT';
            } catch (cGy) {
                windows[0x7]['presets'][cAa]['data'] = 'DEFAULT';
            }
            updateWindow(0x8);
        },
        'gen': function() {
            var cAa = '';
            if (cBn = !0x0,
            cAa += '<div\x20class=\x27settName\x20b\x27>' + cAk['get']('windows.host.maps') + '</div>',
            cAa += '<div\x20style=\x27margin-top:5px\x27>',
            !cI0)
                for (var cAb = 0x0; cAb < cBf['length']; cAb++) {
                    var cAc = cBf[cAb]
                      , cAe = '<label\x20class=\x27switch\x27><input\x20id=\x27gameMap' + cAb + '\x27\x20type=\x27checkbox\x27\x20checked=\x27\x27><span\x20class=\x27slider\x27></span></label>';
                    cAa += '<div\x20class=\x27settNameSmall\x27\x20style=\x27margin:0\x27>' + cAY['capFirst'](cAc['name']) + cAe + '</div>';
                }
            cAa += '<div\x20class=\x27settNameSmall\x27\x20style=\x27margin:0;margin-top:10px\x27>' + cAk['get']('windows.host.cmaps') + '\x20<div\x20style=\x27float:right\x27>' + (cI0 ? '<span><i\x20style=\x27color:#eb5656;font-size:30px;vertical-align:-3px;cursor:pointer\x27\x20onclick=\x27openHostWindow(true)\x27class=\x27material-icons\x27>delete</i>\x20</span>' : '') + '<a\x20id=\x27commMap\x27\x20href=\x27javascript:;\x27\x20onclick=\x27showWindow(10);\x27\x20class=\x27menuLink\x27\x20style=\x27font-size:18px\x27>' + (cI0 || cAk['get']('generic.select')) + '</a></div></div><br/>',
            cI0 || (cAa += '<div\x20class=\x27settNameSmall\x27\x20style=\x27margin:0;margin-top:-24px;\x27>' + cAk['get']('windows.host.raw') + '<input\x20id=\x27rawMapData\x27\x20type=\x27text\x27\x20class=\x27formInput\x27\x20' + (cI1 ? 'value=\x27' + cI1 + '\x27' : 'placeholder=\x27' + cAk['get']('windows.host.raw') + '\x27') + '\x20autocomplete=\x27off\x27\x20autocorrect=\x27off\x27\x20autocapitalize=\x27off\x27\x20spellcheck=\x27false\x27></div><br/>'),
            cAa += '</div>';
            var cAf = windows[0x7]['presets'][cI0]
              , cAl = !cI0 || cAf && cAf['data'];
            if (cAl) {
                cAf && (cAf = cAf['data']),
                'DEFAULT' == cAf && (cAf = null),
                cAa += '<div\x20class=\x27settName\x20b\x27>' + cAk['get']('windows.host.modes') + '</div>',
                cAa += '<div\x20style=\x27margin-top:5px\x27>';
                for (cAb = 0x0; cAb < cBg['length']; cAb++) {
                    var cAp = cBg[cAb];
                    cAe = '<label\x20class=\x27switch\x27><input\x20id=\x27gameMode' + cAb + '\x27\x20type=\x27checkbox\x27\x20' + ((cAs = cAf ? cAf['modes'] && 0x0 <= cAf['modes']['indexOf'](cAb) : 0x0 == cAb) ? 'checked' : '') + '><span\x20class=\x27slider\x27></span></label>';
                    cAa += '<div\x20class=\x27settNameSmall\x27\x20style=\x27margin:0\x27>' + cAY['capFirst'](cAp['name']) + cAe + '</div>';
                }
                cAa += '<div\x20class=\x27settName\x20b\x27\x20style=\x27margin-top:20px\x27>' + cAk['get']('windows.host.classes') + '</div>',
                cAa += '<div\x20style=\x27margin-top:5px\x27>';
                for (cAb = 0x0; cAb < cB7['classes']['length']; cAb++) {
                    var cAq = cB7['classes'][cAb];
                    cAe = '<label\x20class=\x27switch\x27><input\x20id=\x27gameClass' + cAb + '\x27\x20type=\x27checkbox\x27\x20' + ((cAs = !cAf || !cAf['classes'] || 0x0 <= cAf['classes']['indexOf'](cAb)) ? 'checked' : '') + '><span\x20class=\x27slider\x27></span></label>';
                    cAa += '<div\x20class=\x27settNameSmall\x27\x20style=\x27margin:0\x27>' + cAq['name'] + cAe + '</div>';
                }
                cAa += '<div\x20class=\x27settName\x20b\x27\x20style=\x27margin-top:25px\x27>' + cAk['get']('windows.host.settings') + '</div>';
                for (cAb = 0x0; cAb < cAd['serverConfig']['length']; cAb++) {
                    cBb = cAd['serverConfig'][cAb];
                    var cAr = cAk['get']('server.config.' + cBb['varN']);
                    if (cBb['bool']) {
                        var cAs = cBb['def'];
                        cAf && cAf['settings'] && null != cAf['settings'][cBb['varN']] && (cAs = !!cAf['settings'][cBb['varN']]),
                        cAa += '<div\x20class=\x27settNameSmall\x27\x20style=\x27margin:0;margin-bottom:5px;\x27>' + cAr + '\x20<label\x20class=\x27switch\x27><input\x20type=\x27checkbox\x27\x20id=\x27customS' + cBb['varN'] + '\x27\x20' + (cAs ? 'checked' : '') + '><span\x20class=\x27slider\x27></span></label></div>';
                    } else if (cBb['input'])
                        cAa += '<div\x20class=\x27settNameSmall\x27\x20style=\x27margin:0;margin-bottom:5px;\x27>' + cAr + '<input\x20id=\x27customS' + cBb['varN'] + '\x27\x20value=\x27' + cBb['def'] + '\x27\x20type=\x27text\x27style=\x27border-radius:12px;border:none;background:#eee;padding:6px;padding-bottom:6px;float:right;margin-top:5px;margin-bottom:5px;\x27\x20autocomplete=\x27off\x27\x20autocorrect=\x27off\x27\x20autocapitalize=\x27off\x27\x20spellcheck=\x27false\x27></div>';
                    else {
                        var cAt = cBb['def']
                          , cAu = cBa && cBa['featured'] && cBb['maxF'] || cBb['max'];
                        cAf && cAf['settings'] && null != cAf['settings'][cBb['varN']] && ((cAt = cAf['settings'][cBb['varN']]) > cAu && (cAt = cAu)),
                        cAa += '<div\x20class=\x27settNameSmall\x27\x20style=\x27margin-left:0\x27>' + cAr + '<span\x20class=\x27sliderVal\x27\x20id=\x27customSet' + cAb + '\x27>' + cAt + '</span><div\x20class=\x27slidecontainer\x27><input\x20type=\x27range\x27\x20min=\x27' + cBb['min'] + '\x27\x20max=\x27' + cAu + '\x27\x20step=\x27' + cBb['step'] + '\x27\x20id=\x27customS' + cBb['varN'] + '\x27\x20value=\x27' + cAt + '\x27\x20oninput=\x27updateSliderLabel(' + cAb + ',this.value)\x27\x20class=\x27sliderM\x27></div></div>';
                    }
                }
                cAa += '<div\x20class=\x27settNameSmall\x27\x20style=\x27margin:0\x27>' + cAk['get']('server.config.private') + '\x20<label\x20class=\x27switch\x27><input\x20id=\x27makePrivate\x27\x20type=\x27checkbox\x27><span\x20class=\x27slider\x27></span></label></div>',
                cAa += '<div\x20id=\x27hostGamePreset\x27\x20style=\x27text-align:left;margin-top:30px\x27>' + windows[0x7]['genPresets'](!0x0) + '</div>';
            } else
                windows[0x7]['presets'][cI0] || (windows[0x7]['presets'][cI0] = {},
                cB5['getMapPreset'](cI0, this['presetLoaded'])),
                cAa += '<div\x20style=\x27color:rgba(0,0,0,0.3)\x27>' + cAk['get']('windows.host.preset.load') + '</div>';
            return cAl && (cAa += '<div\x20style=\x27text-align:left;margin-top:30px\x27>',
            cAa += '<div\x20style=\x27color:#919191;margin-bottom:5px\x27\x20id=\x27hostGameMsg\x27></div>',
            cAa += '<a\x20class=\x27menuLink\x27\x20onclick=\x27createPrivateRoom()\x27>' + cAk['get']('windows.host.start') + '</a>',
            cAa += '</div>'),
            cAa;
        },
        'presetAction': function(cAa) {
            if (0x0 == cAa && 'Select' == presetSelect['value'])
                return;
            if (0x2 == cAa && 'Select' == presetSelect['value'])
                return;
            let cAb = getSavedVal('krk_hostPresets');
            cAb = cAb ? JSON['parse'](cAb) : {};
            var cAc = presetName['value']['length'] ? presetName['value'] : 'Select' == presetSelect['value'] ? 'Preset1' : presetSelect['value'];
            if (0x2 == cAa)
                cAb[presetSelect['value']] && delete cAb[presetSelect['value']],
                saveVal('krk_hostPresets', JSON['stringify'](cAb));
            else {
                let cAk = 0x1 == cAa ? {} : cAb[presetSelect['value']];
                for (var cAe, cAf = 0x0; cAf < cBf['length']; cAf++)
                    cBf[cAf],
                    cAe = document['getElementById']('gameMap' + cAf),
                    0x1 == cAa ? 0x1 != cAe['checked'] && (cAk['gameMap' + cAf] = cAe['checked']) : 'gameMap' + cAf in cAk && (cAe['checked'] = cAk['gameMap' + cAf]);
                for (cAf = 0x0; cAf < cBg['length']; cAf++)
                    cAe = document['getElementById']('gameMode' + cAf),
                    0x1 == cAa ? cAe['checked'] != !cAf && (cAk['gameMode' + cAf] = cAe['checked']) : 'gameMode' + cAf in cAk && (cAe['checked'] = cAk['gameMode' + cAf]);
                for (cAf = 0x0; cAf < cB7['classes']['length']; cAf++)
                    cB7['classes'][cAf],
                    cAe = document['getElementById']('gameClass' + cAf),
                    0x1 == cAa ? 0x1 != cAe['checked'] && (cAk['gameClass' + cAf] = cAe['checked']) : 'gameClass' + cAf in cAk && (cAe['checked'] = cAk['gameClass' + cAf]);
                for (cAf = 0x0; cAf < cAd['serverConfig']['length']; cAf++)
                    cBb = cAd['serverConfig'][cAf],
                    cAe = document['getElementById']('customS' + cBb['varN']),
                    0x1 == cAa ? cAe[cBb['bool'] ? 'checked' : 'value'] != cBb['def'] && (cAk[cBb['varN']] = cAe[cBb['bool'] ? 'checked' : 'value']) : cBb['varN']in cAk && (!cBb['bool'] && !cBb['input'] && (document['getElementById']('customSet' + cAf)['innerText'] = cAk[cBb['varN']]),
                    cAe[cBb['bool'] ? 'checked' : 'value'] = cAk[cBb['varN']]);
                0x1 == cAa ? (cI0 && (cAk['commMap'] = cI0),
                cI2 && (cAk['hostModURL'] = cI2),
                '' != (cAe = document['getElementById']('rawMapData'))['value'] && (cAk['rawMapData'] = cAe['value']),
                0x0 != (cAe = document['getElementById']('makePrivate'))['checked'] && (cAk['makePrivate'] = cAe['checked']),
                cAb[cAc] = cAk,
                saveVal('krk_hostPresets', JSON['stringify'](cAb))) : ('commMap'in cAk && (document['getElementById']('commMap')['innerText'] = cI0 = cAk['commMap']),
                'rawMapData'in cAk && (document['getElementById']('rawMapData')['value'] = cAk['rawMapData']),
                'makePrivate'in cAk && (document['getElementById']('makePrivate')['checked'] = cAk['makePrivate']));
            }
            windows[0x7]['genPresets']();
        },
        'genPresets': function(cAa=!0x1) {
            let cAb = getSavedVal('krk_hostPresets');
            cAb = cAb ? JSON['parse'](cAb) : {};
            var cAc = '<div\x20class=\x27settName\x20b\x27\x20style=\x27margin-top:25px\x27>' + cAk['get']('windows.host.preset') + '</div>';
            for (let cAa in cAc += '<span\x20class=\x27settNameSmall\x27\x20style=\x27margin:0;margin-bottom:5px;\x27><input\x20id=\x27presetName\x27\x20type=\x27text\x27\x20class=\x27formInput\x27\x20placeholder=\x27' + cAk['get']('windows.host.preset.name') + '\x27\x20autocomplete=\x27off\x27\x20autocorrect=\x27off\x27\x20autocapitalize=\x27off\x27\x20spellcheck=\x27false\x27\x20style=\x27border:none;background:#eee;padding:6px;padding-bottom:6px;float:left;margin-top:5px;margin-bottom:5px;\x27><select\x20id=\x27presetSelect\x27\x20style=\x27border-radius:12px;margin-left:10px;border:none;background:#eee;padding:6px;padding-bottom:6px;margin-top:5px;margin-bottom:5px;\x27><option\x20selected>Select</option>',
            cAb)
                cAb[cAa],
                cAc += '<option>' + cAa + '</option>';
            return cAc += '</select>',
            cAc += '<div\x20class=\x27hostPresetBtn\x27\x20onclick=\x27windows[7].presetAction(2)\x27>' + cAk['get']('generic.delete') + '</div><div\x20class=\x27hostPresetBtn\x27\x20onclick=\x27windows[7].presetAction(1)\x27>' + cAk['get']('generic.save') + '</div><div\x20class=\x27hostPresetBtn\x27\x20onclick=\x27windows[7].presetAction(0)\x27>' + cAk['get']('generic.load') + '</div></span>',
            cAa ? cAc : void (hostGamePreset['innerHTML'] = cAc);
        }
    }, {
        'header': cAk['get']('windows.spray.header'),
        'gen': function() {
            for (var cAa = '<div\x20id=\x27skinList\x27>', cAb = 0x0; cAb < cB7['sprays']['length']; ++cAb)
                cAa += '<div\x20class=\x27skinCard\x27>' + cB7['sprays'][cAb]['name'] + '<div\x20class=\x27itemOwn\x27>' + cAk['get']('windows.spray.default') + '</div><img\x20style=\x27margin-top:10px;image-rendering:pixelated\x27\x20class=\x27skinImgC\x27\x20src=\x27.' + cAY['versionifyUrl']('/textures/sprays/' + cAb + '.png') + '\x27/><div\x20class=\x27selctBtn\x27\x20onmouseenter=\x27playTick()\x27onclick=\x27selectSpray(' + cAb + ')\x27>' + cAk['get']('generic.select') + '</div></div>';
            return cAa += '</div>';
        }
    }, {
        'header': cAk['get']('windows.maps.header'),
        'searchMaps': function() {
            searchResults['innerHTML'] = cAk['get']('generic.loading'),
            cB5['searchMap'](mpSrch['value'], cIK);
        },
        'searchResp': function(cAa) {
            var cAb = '';
            cAa['length'] ? (cAb += '<div\x20style=\x27height:10px\x27></div>',
            cAb += cFv(cAa, 'map')) : cAb = cAk['get']('windows.maps.none'),
            document['getElementById']('searchResults') && (document['getElementById']('searchResults')['innerHTML'] = cAb);
        },
        'mapsLoaded': function(cAa, cAb, cAc) {
            mapList && (cAa && cAa['length'] ? cAc ? (mapList['innerHTML'] = cAc,
            this['listData'][cAb] = null) : (this['listData'][cAb]['dat'] = cFv(cAa, 'map'),
            updateWindow(0xa)) : (mapList['innerHTML'] = cAk['get']('windows.maps.none'),
            this['listData'][cAb] = null));
        },
        'tabIndex': 0x0,
        'listData': {},
        'switchTab': function(cAa) {
            this['tabIndex'] != cAa && (this['tabIndex'] = cAa,
            updateWindow(0xa));
        },
        'gen': function() {
            for (var cAa = cAd['mapTabs'][this['tabIndex']], cAb = '', cAc = 0x0; cAc < cAd['mapTabs']['length']; ++cAc)
                cAb += '<div\x20class=\x27menuTab' + (this['tabIndex'] == cAc ? '\x20tabA' : '') + '\x27\x20onclick=\x27windows[9].switchTab(' + cAc + ')\x27>' + cAd['mapTabs'][cAc]['n'] + '</div>';
            var cAe = '';
            return cAa['search'] ? cAe = '<input\x20style=\x27margin-top:10px\x27\x20type=\x27text\x27\x20id=\x27mpSrch\x27\x20class=\x27smlInput\x27\x20placeholder=\x27' + cAk['get']('windows.maps.name') + '\x27\x20/><a\x20class=\x27menuLink\x27\x20style=\x27margin-left:20px\x27\x20onclick=\x27windows[9].searchMaps()\x27>' + cAk['get']('generic.search') + '</a><div\x20style=\x27color:rgba(0,0,0,0.5);margin-top:5px\x27\x20id=\x27searchResults\x27></div>' : this['listData'][this['tabIndex']] ? cAe = this['listData'][this['tabIndex']]['dat'] || cAk['get']('generic.loading') : (cAe = cAk['get']('generic.loading'),
            this['listData'][this['tabIndex']] = {},
            cB5['listMaps'](this['tabIndex'], cBa ? cBa['id'] : null, cIH)),
            '<a\x20href=\x27./editor.html\x27\x20class=\x27menuLink\x27>' + cAk['get']('windows.maps.editor') + '</a>\x20|\x20<a\x20href=\x27javascript:;\x27\x20onclick=\x27showWindow(11)\x27\x20class=\x27menuLink\x27>' + cAk['get']('windows.maps.publish') + '</a><a\x20href=\x27https://discord.gg/Kfypyp5\x27\x20class=\x27menuLink\x27\x20style=\x27float:right\x27>' + cAk['get']('windows.maps.community') + '</a><br/><div\x20style=\x27margin-top:25px;margin-bottom:15px\x27>' + cAb + '</div><div\x20style=\x27color:rgba(0,0,0,0.3)\x27\x20id=\x27mapList\x27>' + cAe + '</div>';
        }
    }, {
        'header': cAk['get']('windows.publish.map.header'),
        'gen': function() {
            return cBa ? '<div\x20style=\x27margin-top:-8px;margin-bottom:10px\x27\x20class=\x27setHed\x27>' + cAk['get']('windows.publish.map.header') + '</div><div\x20style=\x27color:rgba(0,0,0,0.4);font-size:18px\x27><input\x20onclick=\x27selectMapThumb()\x27\x20type=\x27button\x27\x20id=\x27thumbBtn\x27\x20style=\x27cursor:pointer\x27\x20value=\x27Select\x27\x20/><input\x20id=\x27mapThumb\x27\x20type=\x27file\x27\x20accept=\x27image/*\x27\x20style=\x27width:1px;visibility:hidden;\x27\x20onchange=\x27updateMapThumb()\x27><span\x20style=\x27color:rgba(0,0,0,0.4);margin-left:10px\x27\x20id=\x27mapThumbName\x27>' + cAk['get']('windows.publish.map.thumbnail') + '</span></div><input\x20id=\x27mapDataNew\x27\x20type=\x27text\x27\x20placeholder=\x27' + cAk['get']('windows.publish.map.paste') + '\x27\x20class=\x27mapInput\x27\x20autocomplete=\x27off\x27\x20autocorrect=\x27off\x27\x20autocapitalize=\x27off\x27\x20spellcheck=\x27false\x27/><div\x20id=\x27mapUpResp\x27\x20style=\x27color:rgba(0,0,0,0.3);margin-top:8px;margin-bottom:5px\x27></div><div\x20class=\x27mapLoadButton\x27\x20style=\x27margin-top:6px\x27\x20onclick=\x27uploadCustomMap()\x27>' + cAk['get']('windows.publish.map.update') + '</div>' : '<div\x20style=\x27color:rgba(0,0,0,0.3);margin-top:20px\x27><a\x20href=\x27javascript:;\x27\x20onclick=\x27showWindow(5);\x27\x20class=\x27menuLink\x27>' + cAk['get']('windows.publish.map.login') + '</div>';
        }
    }, {
        'header': cAk['get']('windows.theatre.header'),
        'gen': function() {
            return '';
        }
    }, {
        'header': cAk['get']('windows.clans.header'),
        'clanData': null,
        'kickReq': function(cAa) {
            if (cB6['send']('cln', 0x5, cAa),
            this['clanData'] && this['clanData']['members']) {
                for (var cAb = this['clanData']['members']['length'] - 0x1; 0x0 <= cAb; --cAb)
                    this['clanData']['members'][cAb]['player_id'] == cAa && this['clanData']['members']['splice'](cAb, 0x1);
                updateWindow(0xd);
            }
        },
        'sendReq': function(cAa, cAb) {
            var cAc = document['getElementById']('clanErr');
            cAc && (cAc['style']['color'] = 'rgba(0,0,0,0.6)',
            cAc['innerHTML'] = cAk['get']('generic.loading'));
            var cAd = (cAc = document['getElementById']('clanInp' + cAa)) ? cAc['value'] : null;
            cB6['send']('cln', cAa, cAb || cAd || 0x1);
        },
        'updReq': function(cAa, cAb, cAc) {
            cB6['send']('clnR', cAb, cAc),
            this['clanData']['members'] && 0x1 == cAc && this['clanData']['members']['push']({
                'player_name': this['clanData']['requests'][cAa]['player_name']
            }),
            this['clanData']['requests']['splice'](cAa, 0x1),
            updateWindow(0xd);
        },
        'delReq': function() {
            this['clanData'] = null,
            cBa && (cBa['clan'] = null),
            cB6['send']('cln', 0x4, 0x1),
            showWindow(0x5);
        },
        'resp': function(cAa, cAb, cAc) {
            var cAd = document['getElementById']('clanErr');
            cAa && cAd ? (cAd['style']['color'] = cAc ? 'rgba(0,0,0,0.6)' : 'rgba(255,0,0,0.6)',
            cAd['innerHTML'] = cAa) : cAb && (cBa && (cBa['clan'] = cAb['clan_name']),
            this['clanData'] = cAb,
            updateWindow(0xd));
        },
        'gen': function() {
            var cAa = ''
              , cAb = '';
            if (this['clanData'] && this['clanData']['members']) {
                var cAc = cBa && this['clanData']['clan_playerid'] == cBa['id'];
                cAa = '<div\x20class=\x27setHed\x27\x20style=\x27margin-top:10px\x27>' + cAk['get']('windows.clans.members', this['clanData']['members']['length']) + '</div>';
                for (var cAe = 0x0; cAe < this['clanData']['members']['length']; ++cAe)
                    cAa += '<div\x20class=\x27settName\x27><a\x20target=\x27_blank\x27href=\x27/social.html?p=profile&q=' + this['clanData']['members'][cAe]['player_name'] + '\x27>' + this['clanData']['members'][cAe]['player_name'] + '</a>' + (cAc && this['clanData']['clan_playerid'] != this['clanData']['members'][cAe]['player_id'] ? '<i\x20style=\x27font-size:40px;float:right;color:rgba(255,0,0,0.6)\x27\x20\x20class=\x27material-icons\x20h\x27\x20onclick=\x27windows[12].kickReq(' + this['clanData']['members'][cAe]['player_id'] + ')\x27>clear</i>' : '') + '</div>';
            }
            if (this['clanData'] && this['clanData']['requests']) {
                cAb = '<div\x20class=\x27setHed\x27\x20style=\x27margin-top:10px\x27>' + cAk['get']('windows.clans.requests') + '</div>';
                for (cAe = 0x0; cAe < this['clanData']['requests']['length']; ++cAe)
                    cAb += '<div\x20class=\x27settName\x27><a\x20target=\x27_blank\x27\x20href=\x27/social.html?p=profile&q=' + this['clanData']['requests'][cAe]['player_name'] + '\x27>' + this['clanData']['requests'][cAe]['player_name'] + '</a><span\x20style=\x27float:right\x27><i\x20style=\x27font-size:40px;color:rgba(255,0,0,0.6)\x27\x20\x20class=\x27material-icons\x20h\x27\x20onclick=\x27windows[12].updReq(' + cAe + ',' + this['clanData']['requests'][cAe]['cr_playerid'] + ',\x200)\x27>clear</i><i\x20style=\x27font-size:40px;color:rgba(0,255,0,0.6);margin-left:10px\x27\x20class=\x27material-icons\x20h\x27\x20onclick=\x27windows[12].updReq(' + cAe + ',' + this['clanData']['requests'][cAe]['cr_playerid'] + ',\x201)\x27>done</i></span></div>';
                this['clanData']['requests']['length'] || (cAb += '<div\x20style=\x27color:rgba(0,0,0,0.4)\x27>' + cAk['get']('windows.clans.requests.none') + '</div>');
            }
            var cAf = cBa ? cBa['clan'] ? '<div\x20class=\x27setHed\x27\x20style=\x27margin-top:0px\x27>' + cAk['get']('windows.clans.page', cBa['clan']) + '<a\x20style=\x27float:right\x27\x20href=\x27javascript:;\x27\x20onclick=\x27windows[12].delReq()\x27\x20class=\x27menuLink\x27>' + (this['clanData'] ? cBa && this['clanData']['clan_playerid'] == cBa['id'] ? cAk['get']('generic.delete') : cAk['get']('generic.leave') : '') + '</a></div><div\x20id=\x27clanErr\x27\x20style=\x27margin-top:0px;color:rgba(0,0,0,0.5)\x27>' + (this['clanData'] ? '<div\x20class=\x27settName\x27>' + cAk['get']('generic.level') + '<span\x20class=\x27floatR\x27>' + Math['max'](0x1, Math['floor'](cAd['rankVar'] * Math['sqrt'](this['clanData']['clan_score'] || 0x0))) + '</span></div><div\x20class=\x27settName\x27>' + cAk['get']('generic.score') + '<span\x20class=\x27floatR\x27>' + (this['clanData']['clan_score'] || 0x0) + '</span></div>' + cAa + cAb : cAk['get']('generic.loading')) + '</div>' : '<div\x20class=\x27setHed\x27\x20style=\x27margin-top:-5px\x27>' + cAk['get']('windows.clans.create') + '</div><input\x20id=\x27clanInp1\x27\x20type=\x27text\x27\x20class=\x27smlInput\x27\x20maxlength=\x274\x27\x20placeholder=\x27' + cAk['get']('windows.clans.name') + '\x27\x20/><a\x20class=\x27menuLink\x27\x20style=\x27margin-left:20px\x27\x20onclick=\x27windows[12].sendReq(1)\x27>' + cAk['get']('generic.create') + '</a><div\x20style=\x27margin-top:0px\x27\x20class=\x27setHed\x27>' + cAk['get']('windows.clans.join') + '\x20<a\x20href=\x27./social.html?q=clan\x27\x20class=\x27menuLink\x27\x20style=\x27margin-top:10px;display:inline-block\x27>' + cAk['get']('windows.clans.view') + '</a></div><input\x20id=\x27clanInp2\x27\x20type=\x27text\x27\x20class=\x27smlInput\x27\x20maxlength=\x275\x27\x20placeholder=\x27' + cAk['get']('windows.clans.name') + '\x27\x20/><a\x20class=\x27menuLink\x27\x20style=\x27margin-left:20px\x27\x20onclick=\x27windows[12].sendReq(2)\x27>' + cAk['get']('generic.submit') + '</a><div\x20id=\x27clanErr\x27\x20style=\x27margin-top:10px\x27></div>' : '<div\x20style=\x27color:rgba(0,0,0,0.3);margin-top:20px\x27><a\x20href=\x27javascript:;\x27\x20onclick=\x27showWindow(5);\x27\x20class=\x27menuLink\x27>' + cAk['get']('windows.clans.login') + '</div>';
            return cBa && cBa['clan'] && !this['clanData'] && this['sendReq'](0x3),
            cAf;
        }
    }, {
        'header': cAk['get']('windows.store.header'),
        'gen': function() {
            cB1['play']('store', 0.4);
            for (var cAa = '', cAb = 0x0; cAb < cB7['store']['wheels']['length']; ++cAb)
                cBb = cB7['store']['wheels'][cAb],
                (cBa && 0x0 == cBa['following'] && cBb['free'] && cBa['level'] >= cBb['minLvl'] || !cBb['free']) && (cAa += '<div><a\x20href=\x27javascript:;\x27\x20class=\x27menuLink\x27\x20onclick=\x27prizeWheel(' + cAb + ')\x27>' + cAk['get']('windows.store.spin', cBb['name']) + '</a>\x20' + (cBb['lab'] ? '<span\x20style=\x27color:#fff;margin-left:5px;background-color:' + cBb['lab']['col'] + ';font-size:15px;padding:3px;padding-left:8px;padding-right:8px\x27>\x20' + cBb['lab']['nm'] + '\x20</span>' : '') + '<span\x20style=\x27float:right;color:rgba(0,0,0,0.3)\x27>' + (cBb['priceT'] || cBb['price']) + '<span\x20style=\x27color:rgba(0,0,0,0.6)\x27>\x20' + (cBb['priceT'] ? '' : 'KR') + '</span></span></div>');
            var cAc = '<div\x20style=\x27color:rgba(0,0,0,0.3);font-size:19px;margin-bottom:20px\x27>' + cAk['get']('windows.store.agree', '<a\x20href=\x27./docs/terms.txt\x27>') + '</a></div>';
            for (cAb = 0x0; cAb < cB7['store']['purchases']['length']; ++cAb)
                cAc += '<div><a\x20href=\x27javascript:;\x27\x20class=\x27menuLink\x27\x20onclick=\x27showPurchase(' + cAb + ')\x27>' + (cBb = cB7['store']['purchases'][cAb])['val'] + '\x20KR\x20</a><span\x20style=\x27float:right;color:rgba(0,0,0,0.3)\x27>' + (cBb['tag'] ? '<span\x20style=\x27color:#fff;font-size:15px;padding:10px;padding-top:2px;vertical-align:middle;padding-bottom:2px;background-color:' + cBb['tagCol'] + '\x27>' + cBb['tag'] + '</span>\x20' : '') + cBb['price'] + '<span\x20style=\x27color:rgba(0,0,0,0.6)\x27>\x20USD</span></span></div>';
            var cAd = '<div\x20style=\x27height:10px;\x27></div><b\x20style=\x27font-size:26px;margin-bottom:10px\x27>' + cAk['get']('windows.store.purchase') + '</b>' + cAc
              , cAe = '<div\x20style=\x27height:10px;\x27></div><b\x20style=\x27font-size:26px;margin-bottom:10px\x27>' + cAk['get']('windows.store.voucher') + '</b><div\x20style=\x27color:rgba(0,0,0,0.3);font-size:19px;margin-bottom:6px\x27>' + cAk['get']('windows.store.voucherinfo') + '</div><input\x20type=\x27text\x27\x20id=\x27redVouch\x27\x20class=\x27smlInput\x27\x20style=\x27width:80%\x27\x20placeholder=\x27Enter\x20KR\x20Code\x27\x20/><a\x20class=\x27menuLink\x27\x20style=\x27margin-left:20px\x27\x20onclick=\x27\x27>Redeem</a>';
            return cBa ? '<b\x20style=\x27font-size:26px\x27>' + cAk['get']('windows.store.market') + '</b><div\x20style=\x27color:rgba(0,0,0,0.3);margin-bottom:10px\x27>' + cAk['get']('windows.store.buy') + '\x20<a\x20href=\x27javascript:;\x27\x20onclick=\x27window.open(`/social.html?p=market`)\x27>' + cAk['get']('windows.store.market2') + '</a></div><b\x20style=\x27font-size:26px\x27>' + cAk['get']('windows.store.wheels') + '</b><div\x20style=\x27color:rgba(0,0,0,0.3);margin-bottom:10px\x27>' + cAk['get']('windows.store.unlock') + '</div>' + cAa + cAd + cAe + '<div\x20style=\x27float:right;margin-top:20px\x27>' + cAk['get']('windows.store.amount', cBa['funds']) + '</div>' : '<div\x20style=\x27color:rgba(0,0,0,0.3)\x27><a\x20href=\x27javascript:;\x27\x20onclick=\x27showWindow(5);\x27\x20class=\x27menuLink\x27>' + cAk['get']('windows.store.login') + '</div>';
        }
    }, {
        'header': cAk['get']('windows.skin.header'),
        'gen': function() {
            var cAa = '<div\x20id=\x27skinList\x27><div\x20class=\x27skinCard\x27>' + cAk['get']('generic.default') + '<div\x20class=\x27itemOwn\x27>by\x20Krunker.io</div><img\x20class=\x27skinImg\x27\x20src=\x27.' + cAY['versionifyUrl']('/textures/previews/weapons/' + cB7['weapons'][cF2]['src'] + '.png') + '\x27\x20style=\x27margin-top:-10px\x27><div\x20class=\x27selctBtn\x27\x20onmouseenter=\x27playTick()\x27\x20style=\x27margin-top:-40px\x27\x20onclick=\x27selectSkin(-1,' + cF2 + ')\x27>' + cAk['get']('generic.select') + '</div></div>';
            if (cBa || true)
                for (var cAb = (true ? Object['keys'](cB7['store']['skins'])['map'](cAa=>cAa = {
                    'ind': parseInt(cAa),
                    'cnt': 0x1
                }) : cBa['skins'])['slice']()['sort'](function(cAa, cAb) {
                    return (null != cAb['ind'] && cB7['store']['skins'][cAb['ind']] ? cB7['store']['skins'][cAb['ind']]['rarity'] : 0x0) - (null != cAa['ind'] && cB7['store']['skins'][cAa['ind']] ? cB7['store']['skins'][cAa['ind']]['rarity'] : 0x0);
                }), cAc = 0x0; cAc < cAb['length']; ++cAc)
                    (cBb = cB7['store']['skins'][cAb[cAc]['ind']]) && !cBb['type'] && cBb['weapon'] == cF2 + 0x1 && (cAa += '<div\x20class=\x27skinCard\x27\x20style=\x27color:' + cB7['store']['rarities'][cBb['rarity']]['color'] + '\x27><div\x20class=\x27itemCnt\x27\x20data-badge=\x27x' + cAb[cAc]['cnt'] + '\x27></div>' + cBb['name'] + '<div\x20class=\x27itemOwn\x27>by\x20' + (cBb['creator'] || 'Krunker.io') + '</div><img\x20style=\x27margin-top:-10px\x27\x20class=\x27skinImg' + (cBb['type'] ? 'C' : '') + '\x27\x20src=\x27.' + cAY['versionifyUrl']('/textures/previews/' + (cBb['type'] ? 'cosmetics/' + cBb['type'] + '_' + cBb['id'] : 'weapons/weapon_' + cBb['weapon'] + '_' + (null == cBb['pat'] ? cBb['id'] : 'c' + cBb['pat'])) + '.png') + '\x27/><div\x20class=\x27selctBtn\x27\x20style=\x27margin-top:-40px\x27\x20onmouseenter=\x27playTick()\x27onclick=\x27selectSkin(' + cAb[cAc]['ind'] + ',' + (cBb['weapon'] - 0x1) + ')\x27>' + cAk['get']('generic.select') + '</div></div>');
            return cAa += '</div>';
        }
    }, {
        'header': cAk['get']('windows.hat.header'),
        'gen': function() {
            return cFB('selectHat', 0x1);
        }
    }, {
        'header': cAk['get']('windows.back.header'),
        'gen': function() {
            return cFB('selectBack', 0x2);
        }
    }, {
        'header': cAk['get']('windows.mods.community.header'),
        'modData': null,
        'searchMods': function() {
            searchResults['innerHTML'] = cAk['get']('generic.loading'),
            cB5['searchMod'](moSrch['value'], cIK);
        },
        'searchResp': function(cAa) {
            var cAb = '';
            cAa['length'] ? (cAb += '<div\x20style=\x27height:10px\x27></div>',
            cAb += cFv(cAa, 'mod')) : cAb = cAk['get']('windows.mods.community.none'),
            document['getElementById']('searchResults') && (document['getElementById']('searchResults')['innerHTML'] = cAb);
        },
        'resp': function(cAa) {
            if (cAa && cAa['length'])
                this['modData'] = cAa,
                this['modData']['loaded'] = !0x0,
                updateWindow(0x12);
            else {
                this['modData'] = null;
                var cAb = document['getElementById']('modsList');
                cAb && (cAb['innerHTML'] = cAk['get']('windows.mods.community.none'));
            }
        },
        'gen': function() {
            var cAa = '';
            if (this['modData'] && this['modData']['loaded']) {
                cAa = '<div\x20style=\x27margin-bottom:-5px;margin-top:-5px;\x27>' + cAk['get']('generic.search') + '</div><input\x20type=\x27text\x27\x20id=\x27moSrch\x27\x20class=\x27smlInput\x27\x20placeholder=\x27' + cAk['get']('windows.mods.community.name') + '\x27\x20/><a\x20class=\x27menuLink\x27\x20style=\x27margin-left:20px\x27\x20onclick=\x27windows[17].searchMods()\x27>' + cAk['get']('generic.search') + '</a><div\x20style=\x27color:rgba(0,0,0,0.5);margin-top:5px\x27\x20id=\x27searchResults\x27></div>';
                for (var cAb = ['<div\x20style=\x27margin-bottom:5px;margin-top:15px\x27>' + cAk['get']('windows.mods.community.hot') + '</div>', '<div\x20style=\x27margin-top:20px;margin-bottom:5px\x27>' + cAk['get']('windows.mods.community.new') + '</div>', '<div\x20style=\x27margin-top:20px;margin-bottom:5px\x27>' + cAk['get']('windows.mods.community.fav') + '</div>'], cAc = 0x0; cAc < this['modData']['length']; ++cAc)
                    this['modData'][cAc] && (this['modData'][cAc]['length'] && (cAa += cAb[cAc]),
                    cAa += cFv(this['modData'][cAc], 'mod'));
            } else
                cAa = cAk['get']('generic.loading'),
                this['modData'] || (this['modData'] = {},
                cB5['listMods'](cBa ? cBa['id'] : null, cIE));
            return '<div\x20style=\x27color:rgba(0,0,0,0.3)\x27\x20id=\x27modsList\x27>' + cAa + '</div>';
        }
    }, {
        'header': cAk['get']('windows.publish.mod.header'),
        'gen': function() {
            return cBa ? '<div\x20style=\x27margin-top:0px\x27\x20class=\x27setHed\x27>' + cAk['get']('windows.publish.mod.header') + '</div><div\x20style=\x27color:rgba(0,0,0,0.4);font-size:18px\x27><input\x20onclick=\x27selectModThumb()\x27\x20type=\x27button\x27\x20id=\x27thumbBtn\x27\x20style=\x27cursor:pointer\x27\x20value=\x27Select\x27\x20/><input\x20id=\x27modThumb\x27\x20type=\x27file\x27\x20accept=\x27image/*\x27\x20style=\x27width:1px;visibility:hidden;\x27\x20onchange=\x27updateModThumb()\x27><span\x20style=\x27color:rgba(0,0,0,0.4);margin-left:10px\x27\x20id=\x27modThumbName\x27>' + cAk['get']('windows.publish.mod.thumbnail') + '</span></div><input\x20id=\x27pubModName\x27\x20type=\x27text\x27\x20placeholder=\x27' + cAk['get']('windows.publish.mod.name') + '\x27\x20class=\x27mapInput\x27\x20autocomplete=\x27off\x27\x20autocorrect=\x27off\x27\x20autocapitalize=\x27off\x27\x20spellcheck=\x27false\x27/><input\x20id=\x27pubModURL\x27\x20type=\x27text\x27\x20placeholder=\x27' + cAk['get']('windows.publish.mod.paste') + '\x27\x20class=\x27mapInput\x27\x20autocomplete=\x27off\x27\x20autocorrect=\x27off\x27\x20autocapitalize=\x27off\x27\x20spellcheck=\x27false\x27/><div\x20id=\x27modUpResp\x27\x20style=\x27color:rgba(0,0,0,0.3);margin-top:8px\x27></div><div\x20class=\x27mapLoadButton\x27\x20style=\x27margin-top:6px\x27\x20onclick=\x27uploadCustomMod()\x27>' + cAk['get']('windows.publish.mod.update') + '</div>' : '<div\x20style=\x27color:rgba(0,0,0,0.3);\x27><a\x20href=\x27javascript:;\x27\x20onclick=\x27showWindow(5)\x27\x20class=\x27menuLink\x27>' + cAk['get']('windows.publish.mod.login') + '</div>';
        }
    }, {
        'header': cAk['get']('windows.secondary.header'),
        'gen': function() {
            for (var cAa = '<div\x20id=\x27skinList\x27>', cAb = 0x0; cAb < cB7['weapons']['length']; ++cAb)
                if ((cBb = cB7['weapons'][cAb]) && cBb['secondary']) {
                    var cAc = !cBb['minRec'] || cBa && cBa['level'] >= cBb['minRec'] || cB7['singlePlayer'];
                    cAa += '<div\x20class=\x27skinCard\x27>' + cBb['name'] + '<div\x20class=\x27itemOwn\x27>' + (cBb['minRec'] ? cAk['get']('windows.secondary.' + (cAc ? 'unlocked' : 'req'), cBb['minRec']) : cAk['get']('generic.default')) + '</div><img\x20style=\x27margin-top:10px;image-rendering:pixelated\x27\x20class=\x27skinImgC\x27\x20src=\x27.' + cAY['versionifyUrl']('/img/prev/' + cBb['src'] + '.png') + '\x27/><div\x20class=\x27selctBtn\x27\x20onmouseenter=\x27playTick()\x27' + (cAc ? 'onclick=\x27selectSecondary(' + cAb + ')' : '') + '\x27>' + cAk['get']('generic.select') + '</div></div>';
                }
            return cAa += '</div>';
        }
    }, {
        'header': cAk['get']('windows.advertise.header'),
        'gen': function() {
            return '<div\x20class=\x27setHed\x27\x20style=\x27margin-top:0\x27>Advertise\x20in\x20Game</div><div\x20style=\x27color:rgba(0,0,0,0.4)\x27>On\x20krunker.io\x20you\x20have\x20the\x20ability\x20to\x20place\x20advertisements\x20in\x20game.<div\x20style=\x27height:10px\x27></div>\x20The\x20game\x20features\x20several\x20<b>3d\x20Billboards</b>\x20that\x20yield\x20a\x20very\x20high\x20impression\x20rate\x20&\x20that\x20are\x20<b>not\x20affected\x20by\x20ad\x20blockers</b>.</div><img\x20src=\x27./img/ad_1.png\x27\x20style=\x27width:100%;margin-top:10px\x27/><div\x20style=\x27color:rgba(0,0,0,0.4);margin-top:10px\x27><b>Daily\x20Users:</b>\x20~\x202,000,000<br/><b>Registered\x20Accounts:</b>\x20~\x205,000,000<br/><b>Daily\x20Impressions:</b>\x20~\x206,500,000<br/><b>Peak\x20CCU:</b>\x20~\x2028,000<br/><b>Session\x20Time\x20avg:</b>\x2014\x20minutes<br/><div\x20style=\x27height:5px\x27></div><i\x20style=\x27color:rgba(0,0,0,0.2)\x27>as\x20of\x2016/06/2019</i></div><div\x20style=\x27margin-top:10px;color:rgba(0,0,0,0.4)\x27>For\x20inquiries\x20contact\x20<a>info@yendis.ch</a></div>';
        }
    }, {
        'header': 'Social',
        'gen': function() {
            return 'TODO';
        }
    }, {
        'header': cAk['get']('windows.players.header'),
        'gen': function() {
            var cAa = '<div\x20style=\x27margin-top:0px\x27\x20class=\x27setHed\x27><center>' + (cB7['players']['list']['length'] ? cAk['get']('windows.players.header') + '<hr>' : cAk['get']('windows.players.none')) + '</div>';
            cAa += '<div\x20style=\x27background-color:gainsboro;border-radius:\x2012px;\x27>',
            cB9 && (cAa += '<div><span\x20class=\x27settNameSmall\x27>' + (cBl ? '<i\x20class=\x27material-icons\x27\x20style=\x27font-size:25px\x27>stars</i>' : '') + cB9['name'] + (cB9['clan'] ? '<span\x20style=\x27color:' + (0x0 <= cAd['verClans']['indexOf'](cB9['clan']) ? '#fbc02d' : '#353535') + '\x27>\x20[' + cB9['clan'] + ']</span>' : '') + '</span>' + (cBa && cBa['developer'] ? '<span\x20style=\x27float:right\x27><span\x20onmouseenter=\x27playTick()\x27\x20class=\x27punishButton\x20kill\x27\x20onclick=\x27punishPlayer(\x22' + cB9['id'] + '\x22,\x202)\x27>Kill</span><span\x20onmouseenter=\x27playTick()\x27\x20class=\x27punishButton\x20tpall\x27\x20onclick=\x27punishPlayer(null,\x205)\x27>TPAll</span></span>' : '') + '</div>');
            for (let cAb of cB7['players']['list']['filter'](cAa=>!cAa['isYou']))
                cAa += '<div><span\x20class=\x27settNameSmall\x27>' + (cBm == cAb['id'] ? '<i\x20class=\x27material-icons\x27\x20style=\x27font-size:25px\x27>stars</i>' : '') + '<a\x20target=\x27_blank\x27\x20class=\x27' + (cAb['isHacker'] ? 'red' : 'grey') + '\x27\x20href=\x27/social.html?p=profile&q=' + cAb['name'] + '\x27>' + cAb['name'] + (cAb['clan'] ? '<span\x20style=\x27color:' + (0x0 <= cAd['verClans']['indexOf'](cAb['clan']) ? '#fbc02d' : '#353535') + '\x27>\x20[' + cAb['clan'] + ']</span>' : '') + '</a></span>' + (cBl || cBa && cBa['developer'] ? '<span\x20style=\x27float:right\x27><span\x20onmouseenter=\x27playTick()\x27\x20class=\x27punishButton\x20kick\x27\x20onclick=\x27punishPlayer(\x22' + cAb['id'] + '\x22,\x200)\x27>Kick</span><span\x20onmouseenter=\x27playTick()\x27\x20class=\x27punishButton\x20ban\x27\x20onclick=\x27punishPlayer(\x22' + cAb['id'] + '\x22,\x201)\x27>Ban</span>' + (cBa && cBa['developer'] ? '<span\x20onmouseenter=\x27playTick()\x27\x20class=\x27punishButton\x20kill\x27\x20onclick=\x27punishPlayer(\x22' + cAb['id'] + '\x22,\x202)\x27>Kill</span>' : '') + (cBa && cBa['developer'] ? '<span\x20onmouseenter=\x27playTick()\x27\x20class=\x27punishButton\x20tp2\x27\x20onclick=\x27punishPlayer(\x22' + cAb['id'] + '\x22,\x203)\x27>TP2</span>' : '') + (cBa && cBa['developer'] ? '<span\x20onmouseenter=\x27playTick()\x27\x20class=\x27punishButton\x20tpme\x27\x20onclick=\x27punishPlayer(\x22' + cAb['id'] + '\x22,\x204)\x27>TPME</span>' : '') + '</span>' : '') + '</div>';
            return cAa += '</div>';
        }
    }, {
        'header': cAk['get']('windows.join.header'),
        'gen': function() {
            return '<input\x20id=\x27gameURL\x27\x20type=\x27text\x27\x20placeholder=\x27' + cAk['get']('windows.join.code') + '\x27\x20class=\x27accountInput\x27\x20style=\x27margin-top:0\x27\x20value=\x27\x27></input>\x0a\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x27accountButton\x27\x20onclick=\x27joinGame()\x27,\x20style=\x27width:100%\x27>' + cAk['get']('windows.join.header') + '</div>';
        }
    }, {
        'header': cAk['get']('windows.client.header'),
        'gen': function() {
            return '<div><ul\x20style=\x27padding:0;display:flex;list-style:none;text-align:center;margin:0;margin-top:-10px\x27><li\x20style=\x27display:\x20flex;flex-basis:200px;-webkit-box-flex:1;flex-grow:1;margin-right:10px\x27><a\x20href=\x27//client.krunker.io/setup.exe\x27\x20style=\x27display:block;width:100%;padding-top:1em;\x27><img\x20src\x20=\x27./img/windows.png\x27\x20style=\x27width:80px;height:80px;display:block;margin:0\x20auto\x2010px;\x27>' + cAk['get']('windows.client.windows') + '</a></li><li\x20style=\x27display:\x20flex;flex-basis:200px;-webkit-box-flex:1;flex-grow:1;\x27><a\x20href=\x27//client.krunker.io/setup.dmg\x27\x20style=\x27display:\x20block;width:\x20100%;padding-top:1em;\x27><img\x20src\x20=\x27./img/mac.png\x27\x20style=\x27width:80px;height:80px;display:block;margin:0\x20auto\x2010px;\x27>' + cAk['get']('windows.client.mac') + '</a></li><li\x20style=\x27display:\x20flex;flex-basis:200px;-webkit-box-flex:1;flex-grow:1;\x27><a\x20href=\x27//client.krunker.io/setup.AppImage\x27\x20style=\x27display:\x20block;width:\x20100%;padding-top:1em;\x27><img\x20src\x20=\x27./img/linux.png\x27\x20style=\x27width:80px;height:80px;display:block;margin:0\x20auto\x2010px;\x27>' + cAk['get']('windows.client.linux') + '</a></li></ul></div>';
        }
    }, {
        'header': cAk['get']('windows.melee.header'),
        'gen': function() {
            return cFB('selectMelee', 0x3);
        }
    }, {
        'header': cAk['get']('windows.ranked.header'),
        'gen': function() {
            return '<div\x20style=\x27color:rgba(0,0,0,0.3)\x27>Coming\x20Soon</div>';
        }
    }];
    for (var cHN = 0x0; cHN < windows['length']; ++cHN)
        windows[cHN]['html'] = '';
    var cHO = 0x0;
    window['updateWindow'] = function(cAa, cAb) {
        'block' == windowHolder['style']['display'] && (cHO == cAa && null != cAa ? showWindow(cAa, !0x0) : cAb && showWindow(cHO, !0x0));
    }
    ,
    window['showWindow'] = function(cAa, cAb) {
        window['idleTimer'] = 0x0,
        cAb || cAa && ('block' != windowHolder['style']['display'] || cAa != cHO) ? (cB3['toggleMenu'](!0x0),
        menuWindow['innerHTML'] = windows[cAa - 0x1]['gen'] ? windows[cAa - 0x1]['gen']() : windows[cAa - 0x1]['html'],
        cHO = cAa,
        windowHeader['innerHTML'] = windows[cAa - 0x1]['header'],
        cB3['toggleWindow'](!0x0, cB8['gamepad']['connected'])) : (cB3['toggleWindow'](!0x1, cB8['gamepad']['connected']),
        cB8['inputChanger'] = null);
    }
    ,
    window['playTick'] = function() {
        cB1['play']('tick_0', 0.2);
    }
    ,
    window['copyInviteLink'] = function() {
        cAY['copyToClipboard']('https://' + location['host'] + '/?game=' + cAs),
        inviteButton['innerText'] = cAk['get']('menu.btn.invite.clicked'),
        setTimeout(()=>inviteButton['innerText'] = cAk['get']('menu.btn.invite'), 0x4e2);
    }
    ,
    window['punishPlayer'] = function(cAa, cAb) {
        if (!(0x2 < cAb || 0x0 > cAb) || cBa && cBa['developer']) {
            let cAc = cB7['players']['list']['find'](cAb=>cAb['id'] == cAa);
            cAc ? cB6['send']('pnh', cAb, cAc['id']) : 0x4 < cAb && cB6['send']('pnh', cAb, null);
        }
    }
    ;
    var cHX, cHY, cHZ, cI0, cI1, cI2, cI3 = spinWindow, cI4 = cI3['getContext']('2d'), cI5 = 0.95, cI6 = 0.6, cI7 = null, cI8 = !0x1, cI9 = 0x0, cIa = 0x0, cIb = 0x0, cIc = 0x0, cId = 0x0, cIe = 0x1e, cIf = 0x12c, cIg = !0x0, cIh = 0x0, cIi = 0x0, cIj = new cAX['PerspectiveCamera'](0x2d,0x1,0.1,0x64), cIk = new cAX['WebGLRenderer']({
        'precision': 'mediump',
        'antialias': !0x1,
        'alpha': !0x0
    });
    function cIl(cAa, cAb) {
        if (cBB) {
            var cAc = cB7['store']['skins'][cAb];
            cAc && cNz(null, '<span\x20style=\x27color:#fff\x27>' + cAk['get']('windows.store.unboxed', cAa, '</span>') + '\x20<span\x20style=\x27color:' + cB7['store']['rarities'][cAc['rarity']]['color'] + '\x27>' + cAc['name'] + '</span>', !0x0);
        }
    }
    function cIp(cAa, cAb, cAc, cAd, cAe) {
        if (cI8 = !0x1,
        cAd)
            ;
        else {
            if (cI7 = cB7['store']['skins'][cAb],
            spinItemName['innerHTML'] = cI7['name'] + '<div\x20style=\x27color:rgba(255,255,255,0.5)\x27>by\x20' + (cI7['creator'] || 'Krunker.io') + '</div>',
            cIa = 0x2 * Math['PI'] * (cAa / 0x64 + 0xd) + Math['PI'] / 0x2,
            cBa)
                if (cAe && (cBa['following'] = cAe),
                cBa['funds'] = cAc,
                cEe(),
                spinKR['innerHTML'] = cBa['funds'] + '\x20KR',
                cBa['skins']['some'](cAa=>cAa['ind'] === cAb)) {
                    var cAf = cBa['skins']['find'](cAa=>cAa['ind'] === cAb);
                    cAf && cAf['cnt']++;
                } else
                    cBa['skins']['push']({
                        'ind': cAb,
                        'cnt': 0x1
                    });
            spinRotation = 0x0,
            cIh = 0x0,
            spinCost['innerHTML'] = '',
            (cHX = new cAX['Scene']())['add'](new cAX['AmbientLight'](0x4f4f4f));
            var cAk = new cAX['DirectionalLight'](0xffffff,0.5);
            cAk['position']['set'](0x3, 0x1, 0x0),
            cHX['add'](cAk);
            var cAl = cI7['type'] ? cI7 : cB7['store']['previews'][cI7['weapon']] || {};
            (cHY = cB0['genObj3D'](0x0, 0x1 + (cAl['yOff'] || 0x0), cAl['xOff'] || 0x0))['rotateX'](-Math['PI'] / 0x7),
            cHY['rotateY'](Math['PI'] + 0.5 + (cAl['zRota'] || 0x0)),
            cHY['rotateZ'](-0.5),
            cHY['orgXR'] = cHY['rotation']['x'],
            cHY['orgYP'] = cHY['position']['y'],
            cB0['loadMesh']({
                'src': cB7['store']['types'][cI7['type'] || 0x0] + (cI7['type'] ? cI7['id'] : cI7['weapon']),
                'texSrc': cI7['type'] && 0x3 == cI7['type'] ? 'melee/melee_' + (cI7['id'] || 0x0) + (cI7['tex'] ? '_' + cI7['tex'] : '') : cI7['type'] ? cI7['tex'] ? (0x1 == cI7['type'] ? 'hats/hat_' : 'body/body_') + cI7['id'] + '_' + cI7['tex'] : null : cI7['tex'] ? cI7['tex'] : 'weapons/skins/weapon_' + cI7['weapon'] + '_' + cI7['id'],
                'movT': cI7['movT'],
                'sameGlow': cI7['sameGlow'],
                'glowText': cI7['glow'] || cI7['sameGlow'],
                'emissive': cI7['glow'] || cI7['sameGlow'] ? 0xffffff : null,
                'noGreen': !0x0,
                'uv2': !0x0,
                'fillScale': 0x3c,
                'centerZ': !0x0
            }, 0x0, 0x0, 0x0, (cI7['type'] && 0x3 != cI7['type'] ? Math['PI'] : Math['PI'] / 0x2) + (cAl['xRot'] || 0x0), 2.2 * (cAl['scl'] || 0x1), cHY),
            cHX['add'](cHY),
            cIj['lookAt'](cHX['position']);
        }
    }
    function cIA(cAa, cAb, cAc) {
        windows[0xc]['resp'](cAa, cAb, cAc);
    }
    function cIE(cAa, cAb) {
        cAb && windows[0x11]['resp'](cAb['data'], cAb['error']);
    }
    function cIH(cAa, cAb) {
        cAb && windows[0x9]['mapsLoaded'](cAb['data'], cAb['index'], cAb['error']);
    }
    function cIK(cAa, cAb) {
        cAb && windows[cAb['index']]['searchResp'](cAb['data']);
    }
    cIk['setPixelRatio'](0.6 * window['devicePixelRatio']),
    cIj['position']['y'] = 0xa,
    spinItemCanvas['appendChild'](cIk['domElement']),
    window['prizeWheel'] = function(cAa) {
        (cHZ = cB7['store']['wheels'][cAa])['openURL'] && window['openURL'](cAd['followURLS'][cAY['randInt'](0x0, cAd['followURLS']['length'] - 0x1)]),
        cIb = cAa,
        showWindow(0x0),
        cI9 = 0x0,
        cIg = !cI8,
        cIa = 0x0,
        cIi = 0x0,
        spinRotation = 0x0,
        cIc = cId = 0x0,
        cB3['toggleMenuHider'](!0x1),
        spinItem['style']['display'] = 'none',
        spinItemName['style']['display'] = 'none',
        spinUI['style']['display'] = 'block',
        cIj['position']['x'] = cIf,
        spinButton['style']['opacity'] = 0x1,
        spinText['style']['display'] = 'table-cell',
        spinHeader['innerHTML'] = 'SPIN',
        spinCost['innerHTML'] = '-' + cHZ['price'] + 'KR';
        for (var cAb = '<div\x20style=\x27font-size:50px;color:#fff\x27>' + cHZ['name']['toUpperCase']() + '</div>', cAc = 0x0; cAc < cB7['store']['rarities']['length']; ++cAc)
            (cBb = cB7['store']['rarities'][cAc])['noSpin'] || (cAb += '<div\x20style=\x27margin-top:5px;color:#fff\x27>' + cBb['name'] + '<span\x20style=\x27color:rgba(255,255,255,0.5)\x27>&emsp;' + cHZ['rarities'][cAc] + '%</span><div\x20class=\x27colCub\x27\x20style=\x27background-color:' + cBb['color'] + '\x27></div></div>');
        spinInfo['innerHTML'] = cAb,
        cBa && (spinKR['innerHTML'] = cBa['funds'] + '\x20KR');
    }
    ,
    spinButton['onclick'] = function(cAa) {
        cAa['stopPropagation'](),
        cAa['preventDefault'](),
        window['idleTimer'] = 0x0,
        cB6 && !cI8 && cIg && cBa && cBa['funds'] >= cHZ['price'] && (cI8 = !0x0,
        cIg = !0x1,
        cB6['send']('spin', cIb),
        spinHeader['innerHTML'] = '',
        spinCost['innerHTML'] = cAk['get']('windows.store.purchasing'),
        cB1['play']('buy_1', 0.1));
    }
    ,
    spinUI['onclick'] = function() {
        showWindow(0xe),
        cB3['toggleMenuHider'](!0x0),
        spinUI['style']['display'] = 'none',
        cB6 && cB6['send']('unbx');
    }
    ,
    window['selectHostMap'] = function(cAa, cAb=null) {
        cI0 = cAa,
        cI1 = 'undefined' == cAb ? null : cAb,
        showWindow(0x8);
    }
    ,
    window['selectHostMod'] = function(cAa) {
        cI2 = cAa,
        showWindow(0x8);
    }
    ,
    window['openHostWindow'] = function(cAa) {
        cI0 = null,
        cI2 = null,
        cI1 = null,
        showWindow(0x8, cAa);
    }
    ;
    var cIV, cIW = 0x2710, cIX = !('true' != getSavedVal('krk_record'));
    function cIY(cAa, cAb) {
        try {
            mapUpResp && !cAb && (mapUpResp['innerHTML'] = cAa);
        } catch (cJ1) {}
        try {
            modUpResp && !cAb && (modUpResp['innerHTML'] = cAa);
        } catch (cJ2) {}
    }
    window['enableRecord'] = function(cAa) {
        cIX = cAa,
        saveVal('krk_record', cAa);
    }
    ,
    enableRecord(cIX),
    window['createClip'] = function() {
        if (cIX && cB9 && cB9['active'] && cIV['states']['length']) {
            for (var cAa = Object['assign']({}, cB7['map']['maps'][cB7['mapIndex']]), cAb = 0x0; cAb < cAa['objects']['length']; ++cAb)
                cAa['objects'][cAb]['i'] = cAd['prefabIDS']['indexOf'](cAa['objects'][cAb]['i']),
                cAa['objects'][cAb]['t'] = cAd['textureIDS']['indexOf'](cAa['objects'][cAb]['t']);
            var cAc = {
                'id': 'clip_' + Date['now'](),
                'mode': cB7['modeIndex'],
                'map': cAa,
                'states': []
            };
            for (cAb = 0x0; cAb < cIV['states']['length']; ++cAb)
                if (cAb) {
                    var cAe = [];
                    cAe['push'](cIV['states'][cAb]['input']['data']),
                    cIV['states'][cAb]['players']['length'] && cAe['push'](cIV['states'][cAb]['players']),
                    cAc['states']['push'](cAe);
                } else
                    cAc['states']['push'](cIV['states'][cAb]);
            var cAf = document['createElement']('a');
            cAf['setAttribute']('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(JSON['stringify'](cAc))),
            cAf['setAttribute']('download', cAc['id']),
            cAf['style']['display'] = 'none',
            document['body']['appendChild'](cAf),
            cAf['click'](),
            document['body']['removeChild'](cAf);
        }
    }
    ,
    window['updateMapThumb'] = function() {
        var cAa = null;
        try {
            cAa = document['getElementById']('mapThumb')['files'][0x0];
        } catch (cJa) {}
        document['getElementById']('mapThumbName')['innerHTML'] = cAa ? cAa['name'] : cAk['get']('generic.failed');
    }
    ,
    window['selectMapThumb'] = function() {
        document['getElementById']('mapThumb')['click']();
    }
    ,
    window['uploadCustomMap'] = function() {
        mapUpResp && (mapUpResp['innerHTML'] = cAk['get']('generic.loading'));
        var cAa = null;
        try {
            cAa = document['getElementById']('mapThumb')['files'][0x0];
        } catch (cJc) {}
        if (cAa) {
            var cAb = new FileReader();
            cAb['readAsDataURL'](cAa),
            cAb['onload'] = function() {
                return 0x28 < cAY['thumbnailSize'](cAb['result']) ? void cIY(cAk['get']('thumbnail.upload.limit')) : void cB6['send']('uploadM', mapDataNew['value'], cAb['result']);
            }
            ,
            cAb['onerror'] = function() {
                mapUpResp['innerHTML'] = cAk['get']('thumbnail.upload.error');
            }
            ;
        } else
            cB6['send']('uploadM', mapDataNew['value']);
    }
    ,
    window['updateModThumb'] = function() {
        var cAa = null;
        try {
            cAa = document['getElementById']('modThumb')['files'][0x0];
        } catch (cJf) {}
        document['getElementById']('modThumbName')['innerHTML'] = cAa ? cAa['name'] : cAk['get']('generic.failed');
    }
    ,
    window['selectModThumb'] = function() {
        document['getElementById']('modThumb')['click']();
    }
    ,
    window['uploadCustomMod'] = function() {
        modUpResp && (modUpResp['innerHTML'] = cAk['get']('generic.loading'));
        var cAa = null;
        try {
            cAa = document['getElementById']('modThumb')['files'][0x0];
        } catch (cJh) {}
        if (cAa) {
            var cAb = new FileReader();
            cAb['readAsDataURL'](cAa),
            cAb['onload'] = function() {
                return 0x28 < cAY['thumbnailSize'](cAb['result']) ? void cIY(cAk['get']('thumbnail.upload.limit')) : void cB6['send']('uploadMo', pubModName['value'], pubModURL['value'], cAb['result']);
            }
            ,
            cAb['onerror'] = function() {
                modUpResp['innerHTML'] = cAk['get']('thumbnail.upload.error');
            }
            ;
        } else
            cB6['send']('uploadMo', pubModName['value'], pubModURL['value']);
    }
    ,
    zip['workerScriptsPath'] = './libs/';
    var cJj = new FileReader();
    function cJk(cAa) {
        this['imgAsDataURL'] = '',
        this['process'] = function(cAb) {
            if (this['imgAsDataURL'] = URL['createObjectURL'](cAb),
            this['imgAsDataURL'] && cAa) {
                try {
                    var cAc = new Image();
                    cAc['onload'] = function() {
                        cB0['updateTexture'](cAa['replace']('textures/', '')['replace']('.png', ''), this);
                    }
                    ,
                    cAc['src'] = this['imgAsDataURL'];
                } catch (cJo) {}
                cJI['close']();
            }
        }
        ;
    }
    function cJp(cAa) {
        this['filename'] = cAa;
        var cAb = this;
        this['process'] = function(cAa) {
            var cAc = URL['createObjectURL'](cAa);
            if (cAc) {
                try {
                    var cAd = cAb['filename']['split']('/')[0x1];
                    if (0x0 <= cAd['indexOf']('ambient'))
                        for (var cAe = 0x1; 0x4 > cAe; ++cAe)
                            cB1['stop']('ambient_' + cAe);
                    cB1['sounds'][cAd] = new Howl({
                        'src': [cAc],
                        'format': 'mp3'
                    }),
                    cB1['sounds'][cAd + '3d'] = new Howl({
                        'src': [cAc],
                        'format': 'mp3'
                    }),
                    'ambient_1' == cAd && cB1['play']('ambient_1', 0.12, !0x0, 0x1);
                } catch (cJw) {}
                cJI['close']();
            }
        }
        ;
    }
    function cJx(cAa) {
        this['process'] = function(cAb) {
            if (cAa) {
                try {
                    const cAc = new FileReader();
                    cAc['addEventListener']('loadend', cAb=>{
                        const cAc = cAb['srcElement']['result'];
                        cB0['updateMesh'](cAa['replace']('models/', '')['replace']('.obj', ''), cAc);
                    }
                    ),
                    cAc['readAsText'](cAb);
                } catch (cJD) {}
                cJI['close']();
            }
        }
        ;
    }
    cJj['onload'] = function(cAa) {
        var cAb = cAa['target']['result'];
        loadModPack(cAb);
    }
    ;
    var cJG, cJH, cJI = new function() {
        this['init'] = function(cAa, cAb) {
            this['numFiles'] = cAb,
            this['progress'] = 0x0,
            this['reader'] = cAa;
        }
        ,
        this['close'] = function() {
            this['reader'] && (this['progress']++,
            document['getElementById']('modLInfo') && (document['getElementById']('modLInfo')['innerHTML'] = cAk['get']('mod.extracting', this['progress'], this['numFiles'])),
            this['numFiles'] === this['progress'] && (spriteIndex = 0x0,
            document['getElementById']('modLInfo') && (document['getElementById']('modLInfo')['innerHTML'] = cAk['get']('generic.success')),
            this['reader']['close'](),
            this['reader'] = void 0x0));
        }
        ;
    }
    ();
    function cJL(cAa, cAb, cAc, cAd) {
        cBs = cAb,
        window['spectating'] = cAc,
        !cBs && cAc && (cBs = 0x1),
        cLj(cAa),
        cB3['toggleMenu'](!0x1),
        cN1['length'] = 0x0,
        cNx['length'] = 0x0,
        cB3['toggleGameUI'](!0x0),
        cB4['reset'](),
        cB8['reset'](),
        cK6(!0x1),
        cB7['players']['forcePos'](),
        cB7['players']['resetAim'](),
        cBo['length'] = 0x0,
        window['loading'] = !0x1,
        window['idleTimer'] = 0x0,
        teamName['innerHTML'] = '',
        instructions['innerHTML'] = cB8['gamepad']['connected'] ? cAk['get']('app.play.controller') : cAk['get']('app.play'),
        cBe = null,
        cB3['toggleControlUI'](cB8['enabled']),
        cB7['updateUI'](),
        challIcon['src'] = cAd ? './img/skull_0.png' : './img/hp_0.png';
    }
    function cJQ(cAa, cAb, cAc, cAd, cAe, cAf, cAl, cAp, cAq, cAr) {
        if (cAf['isFromQueue'] && window['history']['replaceState']({}, 'Krunker', '/'),
        cBG = !0x1,
        cAp ? cAp['data'] && cB7['customMap'](cAp['data'], cAp['id'], cAp['creator'], null, !0x0) : cB7['map']['setMaps'](),
        cBm = cAe,
        cBl = cAe && cAe == cB6['socketId'],
        mapVote['innerHTML'] = '',
        cJH = 0x0,
        cAe && cAp && null != cAp['id'] && (mapVote['innerHTML'] = '<i\x20id=\x27mapVoteD\x27\x20onclick=\x27voteMap(' + cAp['id'] + ',-1)\x27\x20class=\x27material-icons\x20vote\x27>thumb_down</i><i\x20id=\x27mapVoteU\x27\x20onclick=\x27voteMap(' + cAp['id'] + ',1)\x27\x20class=\x27material-icons\x20vote\x27>thumb_up</i>'),
        cB7['applyConfig'](cAf, cAp && cAp['featured']),
        cB7['init'](cAa, cAb, cAr),
        cB7['setObjective'](cAd),
        (cAq = cAq || {})['dest'])
            for (var cAs = 0x0; cAs < cAq['dest']['length']; ++cAs)
                cB7['destroyObj'](cAq['dest'][cAs]);
        if (cAq['flg'])
            for (cAs = 0x0; cAs < cAq['flg']['length']; ++cAs)
                cB7['updateFlag'](...cAq['flg'][cAs]);
        if (cAq['pkups'])
            for (cAs = 0x0; cAs < cAq['pkups']['length']; ++cAs)
                cB7['updatePickup'](...cAq['pkups'][cAs]);
        if (cAq['gates'])
            for (cAs = 0x0; cAs < cAq['gates']['length']; ++cAs)
                cB7['updateGate'](...cAq['gates'][cAs]);
        if (cAq['zone'] && cB7['updateZone'](cAq['zone']),
        specNameTm0['innerHTML'] = teamNm1['innerHTML'] = 0x0 < cB7['config']['nameTeam1']['replace'](/\s/g, '')['length'] ? cB7['config']['nameTeam1'] : 'Team\x201',
        specNameTm1['innerHTML'] = teamNm2['innerHTML'] = 0x0 < cB7['config']['nameTeam1']['replace'](/\s/g, '')['length'] ? cB7['config']['nameTeam2'] : 'Team\x202',
        teamScores['style']['display'] = 'none',
        spec0['style']['display'] = 'none',
        spec1['style']['display'] = 'none',
        cB7['mode']['teams'] && cAc) {
            teamScores['style']['display'] = 'inline-block',
            spec0['style']['display'] = 'inline-block',
            spec1['style']['display'] = 'inline-block';
            var cAt = '';
            for (cAs = 0x0; cAs < cAc['length']; ++cAs)
                cAt += '<div\x20class=\x27tScore\x27><div\x20id=\x27tScoreC' + cAc[cAs][0x0] + '\x27\x20class=\x27tScoreC\x27></div><span\x20class=\x27tScoreT\x27\x20id=\x27tScoreV' + cAc[cAs][0x0] + '\x27>' + cAc[cAs][0x1] + '</span></div>',
                document['getElementById']('specScoreTm' + (cAc[cAs][0x0] - 0x1))['innerHTML'] = cAc[cAs][0x1];
            teamScores['innerHTML'] = cAt;
        }
        cAl && '' != cAl && loadModPack(cAl, !0x0);
        var cAu = 0x0
          , cAw = 0x0;
        for (cAs = 0x0; cAs < cB7['map']['manager']['objects']['length']; ++cAs)
            cB7['map']['manager']['objects'][cAs]['score'] && (cAu++,
            cAw += cB7['map']['manager']['objects'][cAs]['scoreP']);
        cAu ? (scoreZoneCount['style']['display'] = 'inline-block',
        scoreZoneCount['innerHTML'] = '<i\x20class=\x27material-icons\x27\x20style=\x27color:#fff;font-size:35px\x27>flag</i>\x20' + cAw) : scoreZoneCount['style']['display'] = 'none',
        cB7['config']['lives'] ? (livesCount['style']['display'] = 'inline-block',
        livesCount['innerHTML'] = '<i\x20class=\x27material-icons\x27\x20style=\x27color:#fff;font-size:35px\x27>favorite</i>\x20<span\x20id=\x27livesDisp\x27\x20style=\x27color:rgba(255,255,255,0.6)\x27>' + cB7['config']['lives'] + '</span>') : livesCount['style']['display'] = 'none',
        cB3['setShowSpect'](cB7['config']['allowSpect']),
        cB3['setShowSelTeam'](cB7['config']['selTeam']),
        cBy = null,
        cB8['reset']();
        var cAC = cB7['map']['maps'][cAa];
        cB8['pvajFQAgJ'](cAC['camPos'][0x0], cAC['camPos'][0x1], cAC['camPos'][0x2]),
        cB8['pVlLx'](0x0, 0x0, 0x0),
        cB0['clearSprays'](),
        cB0['scene']['add'](cB8['object']),
        cB9 = null,
        cAZ['showObjective'] = !!cB7['mode']['objective'] && 0x0 < cB7['map']['manager']['objectives']['length'],
        killStreakHolder['innerHTML'] = '',
        bloodDisplay['style']['display'] = 'none',
        killsVal['innerHTML'] = 0x0,
        deathsVal['innerHTML'] = 0x0,
        cBr = 0x0,
        cCO(),
        cB8['masterLock'] = !0x1,
        instructions['innerHTML'] = cB8['gamepad']['connected'] ? cAk['get']('app.play.controller') : cAk['get']('app.play');
    }
    function cK6(cAa) {
        window['locked'] = cAa,
        blocker['style']['display'] = cAa ? 'block' : 'none';
    }
    function cK8(cAa, cAb, cAc) {
        instructions['innerHTML'] = cB8['gamepad']['connected'] ? cAk['get']('app.play.controller') : cAk['get']('app.play'),
        victoryText['innerHTML'] = cAk['get']('generic.' + (cAb ? 'victory' : 'defeat')),
        victorySub['src'] = './img/' + (cAb ? 'sub' : 'defeat') + '.png',
        cB3['toggleWindow'](!0x1, cB8['gamepad']['connected']),
        cDb['endMessage']['val']['length'] && !cBG && (cB6['send']('c', cDb['endMessage']['val']),
        cBG = !0x0),
        cB9 && cB9['active'] || window['spectating'] ? (cB3['showEndScreen'](),
        cBy = cAd['endAnim'],
        setTimeout(function() {
            cB6['connected'] && (cB8['disable'](),
            cKc(cAc));
        }, cAd['endAnim'])) : cAa && (cB8['disable'](),
        cB3['showEndScreen'](),
        cKc(cAc));
    }
    function cKc(cAa) {
        if (cAa && cAa['ed']['length']) {
            var cAb = ''
              , cAc = cB7['config'] ? cB7['config']['modes'] || cB7['map']['rotationModes'] : null;
            if (voteHolder['style']['display'] = 'inline-block',
            endTable['style']['top'] = '265px',
            cAc && 0x1 < cAc['length']) {
                for (var cAe, cAf = 0x0; cAf < cAc['length']; ++cAf)
                    (cAe = cB7['map']['modes'][cAc[cAf]]) && (cAb += '<div\x20class=\x27voteObj\x27\x20onclick=\x27voteOnMode(' + cAc[cAf] + ')\x27>' + cAe['id']['toUpperCase']() + '\x20<span\x20style=\x27color:rgba(255,255,255,0.5)\x27\x20id=\x27modeVoteI' + cAc[cAf] + '\x27>0</span></div>');
                voteHolder['innerHTML'] = cAb,
                cAa['vo'] && updModeVote(cAa['vo']);
            } else
                cB7['mode']['isRanked'] ? (voteHolder['innerHTML'] += '<div\x20class=\x27button\x20small\x20buttonR\x27\x20style=\x27margin-right:10px\x27\x20onclick=\x27location.reload()\x27>Leave\x20Game</div>',
                voteHolder['innerHTML'] += '<div\x20class=\x27button\x20small\x27\x20onclick=\x27location\x20=\x20\x22/?autoQueue=true\x22\x27>Requeue</div>') : (voteHolder['style']['display'] = 'none',
                endTable['style']['top'] = '205px');
            endTable['style']['display'] = 'inline-block',
            cAb = '<tr><th>Rank</th>';
            var cAk = cB7['mode']['endStats'] || cAd['endStats']
              , cAl = cAk['length'];
            for (cAf = 0x1; cAf < cAl; ++cAf)
                cAb += '<th>' + cAY['capFirst'](cAk[cAf]) + '</th>';
            cAb += '<th></th></tr>';
            var cAp = 0x1;
            for (cAf = 0x0; cAf < cAa['ed']['length']; ) {
                cBb = cB7['players']['findBySid'](cAa['ed'][cAf]),
                cAb += '<tr\x20style=\x27' + (cAf + cAl >= cAa['ed']['length'] ? 'border-bottom:none' : '') + '\x27><td\x20style=\x27color:#fff\x27>' + cAp + '.</td>';
                for (var cAq = 0x1; cAq < cAl; ++cAq)
                    cAb += '<td\x20' + (0x1 == cAq ? 'style=\x27color:' + (cB9 && cBb && cB9['sid'] == cBb['sid'] ? '#fff\x27' : cB9 && cBb && cB9['team'] && cB9['team'] == cBb['team'] ? 'rgba(255,255,255,0.6)\x27' : '#eb5656\x27') : '') + '>' + (cC4 && 0x1 == cAq && cBj ? cAY['scrambleS'](cAa['ed'][cAf + cAq] || 0x0) : cAa['ed'][cAf + cAq] || 0x0) + (0x1 == cAq && cBb && cBb['clan'] ? '<span\x20style=\x27color:' + (0x0 <= cAd['verClans']['indexOf'](cBb['clan']) ? '#fbc02d' : '#fff') + '\x27>\x20[' + cBb['clan'] + ']<span>' : '') + '</td>';
                cAp++,
                cAf += cAl;
            }
            endTable['innerHTML'] = cAb;
        } else
            endTable['style']['display'] = 'none';
    }
    function cKm(cAa, cAb, cAc) {
        cB7['playerSound'](cAa, cAb, cAc);
    }
    function cKq(cAa, cAb, cAc, cAd, cAe, cAf=!0x0, cAk) {
        (cBb = cB7['players']['findBySid'](cAa)) && (cBb == cB9 && cB1['play']('pick_0', 0.2),
        cBb['updateLoadout'](cB7, cAc, !0x0, ...cAb)),
        (cBb || null == cAa) && cAf && cB7['updatePickup'](cAd, cAe, null, cAk);
    }
    function cKy(cAa) {
        cB8['object']['rotation']['y'] = cAa,
        cB8['xDr'] = (cB8['object']['rotation']['y'] % Math['PI2'])['round'](0x3);
    }
    window['loadUserMod'] = function(cAa, cAb, cAc) {
        cBn ? (cBn = !0x1,
        selectHostMod(cAb)) : (showWindow(0x4),
        document['getElementById']('modLInfo') && (document['getElementById']('modLInfo')['innerHTML'] = cAk['get']('generic.loading')),
        loadModPack(cAb, !0x0, cAa, cAc));
    }
    ,
    window['loadModURL'] = function() {
        modURL['value'] && loadModPack(modURL['value'], !0x0);
    }
    ,
    window['loadModPack'] = function(cAa, cAb, cAc, cAd) {
        if (!(0x0 > cAa['indexOf']('dropbox.com') && 0x0 > cAa['indexOf']('dropboxusercontent.com') && cAb)) {
            if (!cBp)
                return void (document['getElementById']('modLInfo') && (document['getElementById']('modLInfo')['innerHTML'] = cAk['get']('mod.disabled')));
            modVote['innerHTML'] = '',
            cAb && cBI(cAa),
            null != cAc && null != cAd && (cJG = 0x0,
            modVote['innerHTML'] = '<i\x20id=\x27modVoteD\x27\x20onclick=\x27voteMod(' + cAd + ',-1)\x27\x20class=\x27material-icons\x20vote\x27>thumb_down</i><i\x20id=\x27modVoteU\x27\x20onclick=\x27voteMod(' + cAd + ',1)\x27\x20class=\x27material-icons\x20vote\x27>thumb_up</i></br>' + cAc + '\x20Mod');
            try {
                cAa = cAa['replace']('dropbox.com', 'dl.dropboxusercontent.com');
                var cAe = ''
                  , cAf = cAb ? new zip['HttpReader'](cAa) : new zip['Data64URIReader'](cAa);
                zip['createReader'](cAf, function(cAa) {
                    cAa['getEntries'](function(cAb) {
                        if (cAb['length']) {
                            cJI['init'](cAa, cAb['length']);
                            for (var cAc, cAd = 0x0; cAd < cAb['length']; cAd++)
                                (cAc = cAb[cAd])['directory'] ? cJI['close']() : 'textures' == (cAe = cAc['filename']['split']('/')[0x0]) ? cAc['getData'](new zip['BlobWriter']('image/png'), new cJk(cAc['filename'])['process'], function() {}) : 'sound' == cAe ? cAc['getData'](new zip['BlobWriter']('audio/mp3'), new cJp(cAc['filename']['replace']('.mp3', ''))['process'], function() {}) : 'models' == cAe && cAc['getData'](new zip['BlobWriter']('application/x-tgif'), new cJx(cAc['filename'])['process'], function() {});
                        }
                    });
                }, function() {
                    document['getElementById']('modLInfo') && (document['getElementById']('modLInfo')['innerHTML'] = cAk['get']('mod.error'));
                });
            } catch (cKN) {
                document['getElementById']('modLInfo') && (document['getElementById']('modLInfo')['innerHTML'] = cAk['get']('mod.error'));
            }
        }
    }
    ,
    cDb['autoLoadLast']['val'] && cBH['length'] && loadModPack(cBH, !0x0),
    window['loadMod'] = function() {
        if (modInput['files'] && modInput['files'][0x0]) {
            var cAa = modInput['files'][0x0];
            'zip' == cAa['name']['split']('.')['pop']()['toLowerCase']() ? (document['getElementById']('modLInfo') && (document['getElementById']('modLInfo')['innerHTML'] = cAk['get']('mod.loading')),
            cJj['readAsDataURL'](cAa)) : document['getElementById']('modLInfo') && (document['getElementById']('modLInfo')['innerHTML'] = cAk['get']('mod.invalid'));
        }
    }
    ,
    window['joinGame'] = function() {
        let cAa = gameURL['value'] || '';
        cAa['match'](/^(https?:\/\/)?(www\.)?(.+)krunker\.io(|\/|\/\?game=.+)$/) ? location = cAa : cAa['match'](/^([A-Z]+):(\w+)$/) && window['switchServer'](cAa);
    }
    ,
    window['toggleTeam'] = function(cAa) {
        cEU = cAa ? 0x2 : 0x1,
        teamNm1['style']['color'] = cAa ? 'rgba(255,255,255,0.5)' : '#fff',
        teamNm2['style']['color'] = cAa ? '#fff' : 'rgba(255,255,255,0.5)';
    }
    ,
    window['updModeVote'] = function(cAa) {
        for (var cAb = 0x0; cAb < cB7['map']['modes']['length']; ++cAb)
            if (cBb = document['getElementById']('modeVoteI' + cAb)) {
                var cAc = 0x0;
                if (cAa)
                    for (var cAd in cAa)
                        cAa['hasOwnProperty'](cAd) && cAb == cAa[cAd] && cAc++;
                cBb['innerHTML'] = cAc;
            }
    }
    ,
    window['voteOnMode'] = function(cAa) {
        cB6['send']('mVote', cAa);
    }
    ,
    window['voteMod'] = function(cAa, cAb) {
        if (cBa) {
            var cAc = document['getElementById']('modVoteU')
              , cAd = document['getElementById']('modVoteD')
              , cAe = 0x0;
            0x1 == cAb ? (cAe = 0x1,
            0x1 == cJG && (cAe = 0x0)) : -0x1 == cAb && (cAe = -0x1,
            -0x1 == cJG && (cAe = 0x0)),
            cJG = cAe,
            cAc['className'] = 0x1 == cJG ? 'material-icons\x20vote\x20a' : 'material-icons\x20vote',
            cAd['className'] = -0x1 == cJG ? 'material-icons\x20vote\x20a' : 'material-icons\x20vote',
            cB6['send']('vote', cBa['id'], loginToken, cAa, cAe, 0x1);
        }
    }
    ,
    window['voteMap'] = function(cAa, cAb) {
        if (cBa) {
            var cAc = document['getElementById']('mapVoteU')
              , cAd = document['getElementById']('mapVoteD')
              , cAe = 0x0;
            0x1 == cAb ? (cAe = 0x1,
            0x1 == cJH && (cAe = 0x0)) : -0x1 == cAb && (cAe = -0x1,
            -0x1 == cJH && (cAe = 0x0)),
            cJH = cAe,
            cAc['className'] = 0x1 == cJH ? 'material-icons\x20vote\x20a' : 'material-icons\x20vote',
            cAd['className'] = -0x1 == cJH ? 'material-icons\x20vote\x20a' : 'material-icons\x20vote',
            cB6['send']('vote', cBa['id'], loginToken, cAa, cAe);
        }
    }
    ,
    window['followPlayer'] = function(cAa, cAb) {
        cAb && (cAb['style']['visibility'] = 'hidden'),
        cB6['send']('fo', cAa);
    }
    ;
    var cL8 = getSavedVal('sprayindex') || 0x0;
    function cL9(cAa, cAb, cAc, cAd, cAe, cAf, cAk) {
        cB0['addSpray'](cAa, cAb, cAc, cAd, cAe, cAf, cAk, cB7['sprays'][cAb]['opacity']);
    }
    function cLh(cAa) {
        0x0 == cAa ? cB1['play']('siren_0') : 0x1 == cAa && (cB1['play']('nuke_0'),
        nukeFlash['style']['display'] = 'block',
        nukeFlash['style']['opacity'] = 0x1,
        cB0['shake'](0x1));
    }
    function cLj(cAa, cAb) {
        // anti afk
        window['idleTimer'] = 0x0;

        var one = cAa;
        var two = cAb;
        if (usdfe.getVal('Anti Report')) {
            if (!two) {
                // in game
                var strings = one.split(':');
                var mins = parseInt(strings[0]);
                var secs = parseInt(strings[1]);
                if (mins == 0 && secs < 5 && usdfe.__me && !usdfe.__me.name.includes("Guest")) {
                    window._niggerlogin();
                } else if (usdfe.__me && !usdfe.__me.name.includes("Guest")) {
                    location.href = "https://krunker.io";
                }
            } else if (usdfe.__me && !usdfe.__me.name.includes("Guest")) {
                location.href = "https://krunker.io";
            }
        }
        0x1 == cAb ? endTimer['innerHTML'] = cAk['get']('timer.end', cAa) : 0x2 == cAb ? endTimer['innerHTML'] = cAk['get']('generic.matchover') : (timerVal['innerHTML'] = cAa,
        specTimer['innerHTML'] = cAa,
        timerDisplay['style']['display'] = '0:00' == cAa ? 'none' : 'inline-block');
    }
    function cLm(cAa) {
        for (var cAb, cAc = 0x0; cAc < cAa['length']; ) {
            if (cAb = cAa[cAc] == cB6['socketId'],
            (cBb = cB7['players']['add'](cAa[cAc], cAa[cAc + 0x1], cAa[cAc + 0x2], cAa[cAc + 0x3], cAa[cAc + 0x4], cAa[cAc + 0x5], cAa[cAc + 0x6], cAa[cAc + 0xc], cAa[cAc + 0xd], cAa[cAc + 0xe], cAa[cAc + 0x13], cAa[cAc + 0x14], cAa[cAc + 0xf], cAa[cAc + 0x15], cAa[cAc + 0x9], cAb, cAa[cAc + 0x10], cAa[cAc + 0x11]))['health'] = null == cAa[cAc + 0x7] ? cBb['maxHealth'] : cAa[cAc + 0x7],
            cBb['maxHealth'] = cAa[cAc + 0x8],
            cBb['hpChase'] = cBb['health'],
            cBb['team'] = cAa[cAc + 0x9],
            cBb['level'] = cAa[cAc + 0xa],
            cBb['clan'] = cAa[cAc + 0xb],
            cBb['xDire'] = cAa[cAc + 0x12],
            cAb) {
                if (cB9 = cBb,
                cB7['mode']['showTeam'] && (teamName['innerHTML'] = cB9['team']),
                cB9['team']) {
                    var cAd = document['getElementById']('tScoreC' + cB9['team']);
                    cAd && (cAd['className'] = 'tScoreC\x20you');
                }
                hudClassImg['src'] = cBE['length'] ? cBE : '/textures/classes/icon_' + cB9['classIndex'] + '.png',
                botRightHider['style']['display'] = 'prop' == cB9['team'] ? 'none' : 'block',
                propInstruct['style']['display'] = 'prop' == cB9['team'] ? 'block' : 'none',
                cB8['object']['rotation']['y'] = cB9['xDire'],
                cB8['xDr'] = (cB8['object']['rotation']['y'] % Math['PI2'])['round'](0x3);
            }
            cNg(cBb['health'], cBb['sid'], null, null),
            cAc += 0x16;
        }
    }
    function cLr(cAa) {
        if (cB6['send']('p'),
        cB9) {
            if (cB9['x'] = cAa[0x1],
            cB9['y'] = cAa[0x2],
            cB9['z'] = cAa[0x3],
            cB9['xVel'] = cAa[0x4],
            cB9['yVel'] = cAa[0x5],
            cB9['zVel'] = cAa[0x6],
            cB9['onGround'] = cAa[0x7],
            cB9['didJump'] = cAa[0x8],
            cB9['onLadder'] = cAa[0x9],
            cB9['aimVal'] = cAa[0xa],
            cB9['crouchVal'] = cAa[0xb],
            cB7['players']['swapWeapon'](cB9, 0x0, !0x1, cAa[0xc], void 0x0, !0x0),
            cB9['slideTimer'] = cAa[0xd],
            cB9['canSlide'] = cAa[0xe],
            cB9['onTerrain'] = cAa[0xf],
            cAa[0x10]) {
                var cAb = cBu != cAa[0x10];
                cBu = cAa[0x10],
                cAb && function() {
                    var cAa = '#9eeb56';
                    0x96 <= cBu ? cAa = '#ff4b42' : 0x32 <= cBu && (cAa = '#ffd542');
                    var cAb = -0x1 == cBu ? '-' : cBu;
                    pingDisplay['innerHTML'] = cAb + '<i\x20class=\x27material-icons\x27\x20style=\x27color:' + cAa + '\x27>signal_cellular_alt</i>',
                    menuPingDisplay['innerHTML'] = '<i\x20class=\x27material-icons\x27\x20style=\x27color:' + cAa + '\x27>signal_cellular_alt</i>\x20' + cAb;
                }();
            }
            for (var cAc = 0x0; cAc < cB8['tmpInputs']['length']; )
                cB8['tmpInputs'][cAc][0x0] <= cAa[0x0] ? cB8['tmpInputs']['splice'](cAc, 0x1) : (cB9['procInputs'](cB8['tmpInputs'][cAc], cB7, !0x0),
                cAc++);
        }
    }
    function cLx() {
        cB6['send']('po');
    }
    function cLy(cAa) {
        cAa;
    }
    function cLA() {
        if (!cB7['singlePlayer'] && (cB9 && cB9['active'] || spectating))
            for (var cAa = 0x0; cAa < cB7['players']['list']['length']; ++cAa)
                (cBb = cB7['players']['list'][cAa])['active'] && cBb['objInstances'] && cBb != cB9 && (cBb['inView'] = !0x0,
                !spectating && !(cBs && cBs == cBb['team']) && (cB7['config']['nameTags'] || cB7['mode']['hideNames'] || null != cB7['canSee'](cB9, cBb['x'], cBb['y'], cBb['z'])) && (cBb['inView'] = !0x1),
                (0x1 == cDb['hideNames']['val'] && cBs && cBs != cBb['team'] || 0x2 == cDb['hideNames']['val'] && cBs && cBs == cBb['team'] || 0x3 == cDb['hideNames']['val']) && (cBb['inView'] = !0x1),
                cB7['players']['toggleLOD'](cBb, null == cB7['canSee'](cB0['camera']['getWorldPosition'](), cBb['x'], cBb['y'], cBb['z'], 0xa)));
    }
    function cLC(cAa) {
        'wt' == cAa && (cAa = cAk['get']('player.waiting')),
        gameMessage['innerHTML'] = cAa || '',
        specGameMessage['innerHTML'] = cAa || '';
    }
    function cLE(cAa, cAb) {
        (cBb = cB7['players']['findBySid'](cAa)) && (cBb['team'] = cAb,
        cBb == cB9 && (cBs = cAb,
        cB7['mode']['showTeam'] && (teamName['innerHTML'] = cBs)));
    }
    function cLH(cAa) {
        cB7['players']['hideAll']();
        for (var cAb = 0x0; cAb < cAa['length']; )
            (cBb = cB7['players']['findBySid'](cAa[cAb])) && cBb != cB9 && (cBb['objInstances']['visible'] = !cBb['lodActive'],
            cBb['latestData'] = !0x0,
            cBb['forcePos'] ? (cBb['x'] = cAa[cAb + 0x1],
            cBb['y'] = cAa[cAb + 0x2],
            cBb['z'] = cAa[cAb + 0x3],
            cBb['xDire'] = cAa[cAb + 0x4],
            cBb['yDire'] = cAa[cAb + 0x5],
            cBb['interpolate'] = !0x1,
            cBb['forcePos'] = !0x1) : (cBb['dt'] = 0x0,
            cBb['x1'] = cBb['x'],
            cBb['x2'] = cAa[cAb + 0x1],
            cBb['y1'] = cBb['y'],
            cBb['y2'] = cAa[cAb + 0x2],
            cBb['z1'] = cBb['z'],
            cBb['z2'] = cAa[cAb + 0x3],
            cBb['xDir1'] = cBb['xDire'],
            cBb['xDir2'] = cAa[cAb + 0x4],
            cBb['yDir1'] = cBb['yDire'],
            cBb['yDir2'] = cAa[cAb + 0x5],
            cBb['interpolate'] = !0x0),
            cBb['onGround'] = cAa[cAb + 0x6],
            cBb['crouchVal'] = cAa[cAb + 0x7],
            cB7['players']['swapWeapon'](cBb, 0x0, !0x1, cAa[cAb + 0x8])),
            cAb += 0x9;
    }
    function cLK(cAa) {
        cB7['players']['remove'](cAa);
    }
    function cLM(cAa, cAb, cAc, cAe, cAf) {
        if (cBb = cB7['players']['findBySid'](cAa),
        cBc = cB7['players']['findBySid'](cAc),
        cBb) {
            if (cB7['players']['kill'](cBb),
            cBb['isYou']) {
                deathsVal['innerHTML'] = cAb;
                var cAl = '';
                if (cBc) {
                    cBb != cBc && (cB8['uaZL'](cBc['x'], cBc['y'] + cBc['height'] - cAd['cameraHeight'], cBc['z']),
                    cBc['interpolate'] = !0x1,
                    cBc['inView'] = !0x0),
                    cAl = '<img\x20id=\x27kCProfile\x27\x20src=\x27./textures/classes/icon_' + cBc['classIndex'] + '.png\x27\x20/>',
                    cAl += '<div\x20id=\x27kCName\x27>' + (cBc ? cC4 && cBj ? cAY['scrambleS'](cBc['name']) : cBc['name'] : 'You') + (cBc['clan'] ? '<span\x20style=\x27color:' + (0x0 <= cAd['verClans']['indexOf'](cBc['clan']) ? '#fbc02d' : 'rgba(255,255,255,0.3)') + '\x27>\x20[' + cBc['clan'] + ']</span>' : '') + '</div>';
                    var cAp = cBc['loadout']['indexOf'](cAe[0x0])
                      , cAq = null == cBc['skins'][cAp] ? null : cBc['skins'][cAp];
                    null != cAq && (cAq = cB7['store']['skins'][cAq]);
                    var cAr = cAq ? cB7['store']['rarities'][cAq['rarity']]['color'] : 'rgba(255,255,255,0.7)'
                      , cAs = cAq ? cAq['name'] : cB7['weapons'][cAe[0x0]]['name'];
                    'Combat\x20Knife' == cAs && 0x0 <= cBc['meleeIndex'] && cB7['store']['skins'][cBc['meleeIndex']] && (cAs = cB7['store']['skins'][cBc['meleeIndex']]['name'],
                    cAr = cB7['store']['rarities'][cB7['store']['skins'][cBc['meleeIndex']]['rarity']]['color']),
                    cAl += '<br/><div\x20id=\x27kCInfo\x27\x20style=\x27color:' + cAr + '\x27>[' + cAs + ']\x20<span\x20id=\x27kCInfoS\x27>+' + cAe[0x1] + '</span></div>';
                }
                killCardHolder['firstChild']['data'] = cBc ? cAk['get']('player.killed') : cAk['get']('player.died'),
                killCard['style']['display'] = cBc ? 'inline-block' : 'none',
                killCard['innerHTML'] = cAl,
                cB3['toggleGameUI'](!0x1),
                setTimeout(function() {
                    cCO();
                }, 0);
            }
            if (!cAf && cBz) {
                var cAt = cBb == cB9 ? '<span\x20style=\x27color:#fff\x27>You</span>' : '<span\x20style=\x27color:' + (cBs && cBs == cBb['team'] ? '#9eeb56' : '#eb5656') + '\x27>' + (cC4 && cBj ? cAY['scrambleS'](cBb['name']) : cBb['name']) + '</span>'
                  , cAu = cBc == cB9 ? '<span\x20style=\x27color:#fff\x27>You</span>' : cBc ? '<span\x20style=\x27color:' + (cBs && cBs == cBc['team'] ? '#9eeb56' : '#eb5656') + '\x27>' + (cC4 && cBj ? cAY['scrambleS'](cBc['name']) : cBc['name']) + '</span>' : '';
                cNz(null, cBc ? cAu + '\x20killed\x20' + cAt : cAt + '\x20committed\x20' + cAd['suicides'][cAY['randInt'](0x0, cAd['suicides']['length'] - 0x1)], !0x0);
            }
        }
    }
    function cLZ(cAa, cAb) {
        if (cB9) {
            cB9['streaks'][cAa] = cAb ? null : cB7['streaks'][cAa];
            for (var cAc = '', cAd = 0x0; cAd < cB7['streaks']['length']; ++cAd)
                cB9['streaks'][cAd] && (cAc += '<div\x20class=\x27killStreakItem\x27\x20style=\x27background-image:\x20url(&quot;./img/streaks/' + cAd + '.png&quot;)\x27><span>[' + (cAd + 0x1) + ']</span></div>');
            killStreakHolder['innerHTML'] = cAc;
        }
    }
    function cM4(cAa, cAb) {
        if (cBb = cB7['players']['findBySid'](cAa)) {
            var cAc = cBb == cB9 ? '<span\x20style=\x27color:#fff\x27>You\x27re</span>' : '<span\x20style=\x27color:' + (cBs && cBs == cBb['team'] ? '#9eeb56' : '#eb5656') + '\x27>' + cBb['name'] + '</span>\x20is';
            cNz(null, cAk['get']('player.killstreak', cAc, cAb), !0x0);
        }
    }
    function cM8(cAa, cAb, cAc) {
        (cBb = cB7['players']['findBySid'](cAa),
        cBc = cB7['players']['findBySid'](cAb),
        cBb) && cNz(null, (cBb == cB9 ? '<span\x20style=\x27color:#fff\x27>You</span>' : '<span\x20style=\x27color:' + (cBs && cBs == cBb['team'] ? '#9eeb56' : '#eb5656') + '\x27>' + cBb['name'] + '</span>') + '\x20' + cAc + '\x20' + (cBc == cB9 ? '<span\x20style=\x27color:#fff\x27>You</span>' : cBc ? '<span\x20style=\x27color:' + (cBs && cBs == cBc['team'] ? '#9eeb56' : '#eb5656') + '\x27>' + cBc['name'] + '</span>' : ''), !0x0);
    }
    function cMc(cAa) {
        cB6['send'](window[[0x6a, 0x7b, 0x66, 0x71]['map'](cAa=>String['fromCharCode'](cAa - 0x5))['join']('')](cAa));
    }
    window['selectSpray'] = function(cAa) {
        saveVal('sprayindex', cAa),
        cL8 = cAa,
        showWindow(0x3);
    }
    ;
    var cMg = null
      , cMh = 0x0;
    function cMi(cAa, cAb) {
        if (cMg = cAa,
        cMh = cAb,
        cAa) {
            for (var cAc = 0x1, cAe = '', cAf = 0x0; cAf < cAa['length']; cAf += 0x6)
                cAe += '<div\x20class=\x27leaderItem\x27>',
                cAe += '<div\x20class=\x27leaderCounter\x27>' + cAc + '.</div>',
                cAe += cAa[cAf + 0x5] ? '\x20<i\x20class=\x27material-icons\x27\x20style=\x27color:#40C4FF;margin-top:4px;font-size:25px\x27>check_circle</i>' : '',
                cAe += '<div\x20class=\x27leaderName' + (cB9 && cAa[cAf] == cB9['sid'] ? 'M' : cBs && cBs == cAa[cAf + 0x2] ? 'F' : '') + '\x27>' + (cC4 ? cAY['scrambleS'](cAa[cAf + 0x1]) : cAa[cAf + 0x1]) + (cAa[cAf + 0x4] ? '<span\x20style=\x27color:' + (0x0 <= cAd['verClans']['indexOf'](cAa[cAf + 0x4]) ? '#fbc02d' : '#fff') + '\x27>\x20[' + cAa[cAf + 0x4] + ']</span>' : '') + '</div>',
                cAe += '<div\x20class=\x27leaderScore\x27>' + cAY['formatNum'](cAa[cAf + 0x3]) + '</div>',
                cAe += '</div>',
                cAc++;
            leaderContainer && (leaderContainer['innerHTML'] = cAe),
            0x1 >= cAc && (leaderContainer['innerHTML'] = cAk['get']('leaderboard.empty')),
            spectCount['style']['display'] = cAb ? 'inline-block' : 'none',
            spectCount['innerHTML'] = '<i\x20class=\x27material-icons\x27\x20style=\x27color:#fff;font-size:35px;margin-right:8px\x27>visibility</i>' + cAb;
        }
    }
    function cMo(cAa, cAb, cAc, cAe, cAf, cAk, cAl) {
        if (cB9 && cB9['active'] || window['spectating']) {
            if (cBb = cB7['players']['findBySid'](cAa)) {
                var cAp = cBb['y'] + cBb['height'] - cAd['cameraHeight'] - cBb['crouchVal'] * cAd['crouchDst']
                  , cAq = cAY['getDistance3D'](cBb['x'], cAp, cBb['z'], cAb, cAc, cAe)
                  , cAr = cAY['getDirection'](cBb['z'], cBb['x'], cAe, cAb)
                  , cAs = cAY['getDirection'](cAY['getDistance'](cBb['x'], cBb['z'], cAb, cAe), cAc, 0x0, cAp);
                cB2['physObj'](cBb['x'], cAp, cBb['z'], cAr, cAs, cAq, cAl, 0x0);
            }
            null != cAf && null == cB7['canSee'](cB9, cAb, cAc, cAe) && (cB2['effect'](cAb, cAc, cAe, cAf, cAk, 0x0),
            cB9 && cB1['play3Dv']('rico_' + cAY['randInt'](0x1, 0x2), cAb, cAc, cAe, 0x37, 0.55, cAY['randFloat'](0.7, 1.1), cB9));
        }
    }
    function cMA(cAa, cAb, cAc, cAd, cAe, cAf, cAk) {
        var cAl = cB7['projectiles']['types'][cAf];
        cB2['physObj'](cAa, cAb, cAc, cAd, cAe, cB7['projectiles']['types'][cAf]['range'], !0x1, null, null, cAl, cAk);
    }
    function cMJ(cAa) {
        cB2['disablePhys'](cAa);
    }
    function cML(cAa, cAb, cAc, cAe) {
        if (cB9 || window['spectating']) {
            cBb = cB0['camera']['getWorldPosition']();
            var cAf = 0x1 - cAY['getDistance3D'](cAa, cAb, cAc, cBb['x'], cBb['y'], cBb['z']) / cAd['explosionRange'];
            0x0 < cAf && cB0['shake'](0.14 * cAf),
            cB1['play3D']('explosion', cAa, cAb, cAc, 0x1, cAY['randFloat'](0.9, 1.1)),
            cB2['ExplosionManager']['explodeAt'](cAa, cAb, cAc, 0.08 * cAe);
        }
    }
    function cMR(cAa, cAb) {
        var cAc = document['getElementById']('tScoreV' + cAa);
        cAc && (cAc['innerHTML'] = cAb);
        var cAd = document['getElementById']('specScoreTm' + (cAa - 0x1));
        cAd && (cAd['innerHTML'] = cAb);
    }
    function cMW(cAa) {
        cBr += cAa,
        cB4['animateText'](scoreText, (0x0 < cBr ? '+' : '') + cBr, 0x64, 0.38, 0x44c, 0x64, 0x0, function() {
            cBr = 0x0;
        }),
        cB9['score'] += cAa;
    }
    function cMY() {
        cB4['animateText'](checkText, cAk['get']('popup.checkpoint'), 0x4b, 0.38, 0x44c, 0x64, 0x0, null);
    }
    function cMZ(cAa) {
        (cBb = document['getElementById']('livesDisp')) && (cBb['innerHTML'] = cAa);
    }
    var cN1 = [];
    function cN2(cAa, cAb, cAc) {
        cN7(cAa),
        cAb && cB1['play']('headshot_0'),
        killsVal['innerHTML'] = cAc;
    }
    function cN6() {
        cN7(['Assist', cAd['assistScore']]);
    }
    function cN7(cAa) {
        if (cAa) {
            for (var cAb = 0x0 == cN1['length'], cAc = 0x0; cAc < cAa['length']; ++cAc)
                '' == cAa[cAc] ? cAc++ : cN1['push'](cAa[cAc]);
            cAb && function cAa(cAb) {
                0x0 < cN1['length'] && cB4['animateText'](chalName, '<span\x20class=\x27cTxt\x27>' + cN1[0x0] + '</span><div\x20id=\x27chalScore\x27>+' + cN1[0x1] + '</div>', 0x82, 0.4, cAd['medalAnim'], 0x64, cAb, function() {
                    cN1['splice'](0x0, 0x2),
                    cAa(0x0);
                });
            }(cAd['medalDelay']);
        }
    }
    function cNc(cAa, cAb) {
        (cBb = cB7['players']['findBySid'](cAa)) && cB7['players']['updateProp'](cBb, cAb, !0x0);
    }
    var cNf = 0x0;
    function cNg(cAa, cAb, cAc, cAe) {
        if ((cB9 || spectating) && (cBb = null == cAb || null == cAb ? cB9 : cB7['players']['findBySid'](cAb))) {
            cBb['health'] = cAa,
            cBb['health'] > cBb['maxHealth'] && (cBb['maxHealth'] = cBb['health']);
            var cAf = cAa / cBb['maxHealth'];
            if (cBb == cB9 && cB9) {
                healthValue['innerHTML'] = cAa + '\x20<span\x20id=\x27maxHP\x27>|\x20' + cBb['maxHealth'] + '</span>';
                for (var cAk = '', cAl = cB7['classes'][cB9['classIndex']]['segs'], cAp = cAl * cAf, cAq = cAp, cAr = 0x0; cAr < cAl; ++cAr)
                    cAk += '<div\x20class=\x27healthBarSeg\x27><div\x20class=\x27hpBSeg\x27\x20style=\x27width:' + 0x64 * Math['max'](0x0, Math['min'](0x1, cAq)) + '%;background-color:' + (0x3 >= cAp ? cDb['hudHealthLow']['val'] : cDb['hudHealthHigh']['val']) + '\x27></div></div>',
                    cAq -= 0x1;
                healthBar['innerHTML'] = cAk,
                bloodDisplay['style']['display'] = 0.9 >= cAf ? 'block' : 'none',
                bloodDisplay['style']['opacity'] = 0x1 - cAf / 0.9,
                cAa < cNf && (null != cAc && null != cAc && function(cAa, cAb) {
                    for (var cAc = null, cAe = 0x0; cAe < cNx['length']; ++cAe)
                        if (!cNx[cAe]['life']) {
                            cAc = cNx[cAe];
                            break;
                        }
                    cAc || (cAc = {},
                    cNx['push'](cAc)),
                    cAc['life'] = cAd['hitLife'],
                    cAc['x'] = cAa,
                    cAc['z'] = cAb;
                }(cAc, cAe),
                cB1['play']('impact_0', 0.8)),
                cNf = cAa;
            }
        }
    }
    var cNv, cNw, cNx = [];
    function cNy() {
        cB1['play']('headshot_0', 3.1),
        cB4['animateDiv'](hitmarker, 0x15e, 0x64, 0x69);
    }
    function cNz(cAa, cAb, cAc) {
        if (cAc || cBA)
            for (cC4 && cBj && (cAb = cBj['clean'](cAb),
            cAa = cAY['scrambleS'](cAa)),
            chatList['innerHTML'] += cAc ? '<div\x20class=\x27chatItem\x27><span\x20class=\x27chatMsg\x27>' + cAb + '</span></div><br/>' : '<div\x20class=\x27chatItem\x27>' + (cAa || 'unknown') + ':\x20<span\x20class=\x27chatMsg\x27>' + cAb + '</span></div><br/>'; 0xfa <= chatList['scrollHeight']; )
                chatList['removeChild'](chatList['childNodes'][0x0]);
    }
    function cND() {
        cBv = Date['now'](),
        cBw = cBv - cBx,
        cBw = Math['min'](cBw, cAd['dltMx']),
        cBx = cBv,
        function() {
            if (cDb['showFPS']['val']) {
                var cAa, cAb = '#9eeb56';
                let cAc = performance['now']();
                for (; 0x0 < cBC['length'] && cBC[0x0] <= cAc - 0x3e8; )
                    cBC['shift']();
                cBC['push'](cAc),
                0x1e > (cAa = cBC['length']) ? cAb = '#ff4b42' : 0x32 > cAa && (cAb = '#ffd542'),
                fpsDisplay['innerHTML'] = menuFPSDisplay['innerHTML'] = '<span\x20style=\x27color:' + cAb + '\x27>' + cAa + '</span>\x20FPS';
            }
        }(),
        TWEEN['update'](),
        0x0 < cBy && (0x0 >= (cBy -= cBw) && (cBy = 0x0)),
        cB1['rate'] = cB7['config']['deltaMlt'],
        null != cBy && (cBw *= cBy / cAd['endAnim'],
        cB1['rate'] = cB7['config']['deltaMlt'] * (cBy / cAd['endAnim'])),
        cB9 || window['spectating'] || (cBq += 0.0001 * cBw,
        cBq %= 0x2 * Math['PI'],
        cB8['pVlLx'](cBq, 0x0, 0x0)),
        cFc && 0x0 < classPreviewCanvas['offsetWidth'] && 0x0 < classPreviewCanvas['offsetHeight'] && (cB7['players']['playerStep'](cFd, 0.015 * cBw, !0x0),
        cFd['idleAnim'] += cAd['idleAnimS'] * cBw,
        cB7['players']['updateMesh'](cFd, !0x0),
        cFg['aspect'] = cFe / cFf,
        cFg['updateProjectionMatrix'](),
        cFh['setSize'](cFe, cFf),
        cFh['setPixelRatio'](window['devicePixelRatio'] * cDb['resolution']['val']),
        cFh['render'](cFc, cFg)),
        function(cAa) {
            if ('block' == spinUI['style']['display'] && (cI3['width'] = cI3['clientWidth'],
            cI3['height'] = cI3['clientHeight'],
            spinItemCanvas['style']['width'] = 2.1 * cI3['clientWidth'] + 'px',
            spinItemCanvas['style']['height'] = 2.1 * cI3['clientWidth'] + 'px',
            cIk['setSize'](2.1 * cI3['clientWidth'], 2.1 * cI3['clientWidth']),
            0x0 < cI3['width'])) {
                0x1 > cI9 && 0x1 <= (cI9 += 0.008 * cAa) && (cI9 = 0x1),
                cIc < cId && ((cIc += 0.4 * cAa) >= cId && (cIc = cId),
                spinItem['style']['display'] = 'block',
                spinItemName['style']['display'] = 'inline-block'),
                spinRotation != cIa && (spinRotation += 0.024 * (cIa - spinRotation),
                0x0 >= (cIi -= 0.024 * (cIa - spinRotation)) && (cIi += Math['PI'] / 1.5,
                cB1['play']('tick_0', 0.2)),
                0.002 >= cIa - spinRotation && (spinRotation = cIa,
                cId = 0x64 - cHZ['rarities'][cI7['rarity']],
                cB1['play']('reward', 0.3),
                cB6 && cB6['send']('unbx'),
                0x1 <= cI7['rarity'] && cB1['play']('cheer_0', 0.1)));
                var cAb = 0x1 - (cId ? cIc / cId : 0x0);
                cI4['translate'](0x2, 0x2);
                var cAc = cI3['width'] / 0x2 * cI5 * cI9;
                spinButton['style']['opacity'] = cAb;
                var cAd = 0.3 * cAc * (0x1 - cAb);
                spinButton['style']['width'] = 0x2 * cAc * cI6 * 0.8 + cAd + 'px',
                spinButton['style']['height'] = 0x2 * cAc * cI6 * 0.8 + cAd + 'px',
                spinText['style']['fontSize'] = 0x2 * cAc * cI6 * 0.15 + cAd + 'px',
                spinCost['style']['fontSize'] = 0x2 * cAc * cI6 * 0.08 + cAd + 'px',
                cI4['fillStyle'] = '#fff',
                cI4['beginPath'](),
                cI4['arc'](cI3['width'] / 0x2, cI3['height'] / 0x2, cAc, 0x0, 0x2 * Math['PI']),
                cI4['closePath'](),
                cI4['fill']();
                var cAe = 0x0;
                if (cI4['save'](),
                cI4['translate'](cI3['width'] / 0x2, cI3['height'] / 0x2),
                cId) {
                    for (var cAf = 0x0, cAk = 0x0; cAk < cB7['store']['rarities']['length']; cAk++) {
                        if (cI7['rarity'] == cAk) {
                            cAf += cHZ['rarities'][cAk] / 0x2;
                            break;
                        }
                        cAf += cHZ['rarities'][cAk];
                    }
                    cAf /= 0x64,
                    cAf = 0x2 * Math['PI'] * cAf * (cIc / cId) % (0x2 * Math['PI']),
                    cI4['rotate'](cAf - Math['PI'] * (cIc / cId));
                }
                for (cAk = 0x0; cAk < cB7['store']['rarities']['length']; cAk++) {
                    cBb = cB7['store']['rarities'][cAk],
                    cI4['fillStyle'] = cBb['color'],
                    cI4['beginPath']();
                    var cAl = cHZ['rarities'][cAk];
                    cId && (cI7['rarity'] == cAk ? cAl += cIc : cAl -= cIc * (cHZ['rarities'][cAk] / cId)),
                    0x0 < cAl && (cI4['moveTo'](0x0, 0x0),
                    cI4['arc'](0x0, 0x0, 0.95 * cAc, cAe, cAe + 0x2 * Math['PI'] * (cAl / 0x64), !0x1),
                    cI4['lineTo'](0x0, 0x0),
                    cI4['fill']()),
                    cAe += 0x2 * Math['PI'] * (cAl / 0x64);
                }
                cI4['restore'](),
                cI4['fillStyle'] = '#F44336',
                cI4['save'](),
                cI4['translate'](cI3['width'] / 0x2, cI3['height'] / 0x2),
                cI4['rotate'](spinRotation),
                cI4['beginPath']();
                var cAp = (spinButton['getBoundingClientRect']()['width'] / spinButton['offsetWidth'] - 0x1) * (cAc * cI6) * 0.3;
                if (cI4['moveTo'](0x0, (cAc * cI6 * -1.2 - cAp) * cAb),
                cI4['lineTo'](cAc * cI6 * cAb, 0x0),
                cI4['lineTo'](-cAc * cI6 * cAb, 0x0),
                cI4['closePath'](),
                cI4['fill'](),
                cI4['restore'](),
                cI4['fillStyle'] = '#fff',
                cI4['beginPath'](),
                cI4['arc'](cI3['width'] / 0x2, cI3['height'] / 0x2, cAc * cI6, 0x0, 0x2 * Math['PI']),
                cI4['closePath'](),
                cI4['fill'](),
                'block' == spinItem['style']['display'] && cHX) {
                    var cAq = 0x1 - Math['abs'](cIj['position']['x'] - cIe) / (cIf - cIe);
                    spinItemName['style']['opacity'] = cAq,
                    spinItemName['style']['marginTop'] = 0.6 * cAc + 'px',
                    spinItemName['style']['fontSize'] = cAc / 6.5 * cAq + 'px',
                    spinItemName['children'][0x0]['style']['fontSize'] = cAc / 0xc * cAq + 'px',
                    spinItemName['style']['padding'] = cAc / 0x14 * cAq + 'px',
                    spinItemName['style']['paddingLeft'] = cAc / 0x2 * cAq + 'px',
                    spinItemName['style']['paddingRight'] = cAc / 0x2 * cAq + 'px',
                    cIj['position']['x'] != cIe && (cIj['position']['x'] -= 0.2 * (cIj['position']['x'] - cIe),
                    0.05 >= Math['abs'](cIe - cIj['position']['x']) && (cIj['position']['x'] = cIe),
                    cIj['lookAt'](cHX['position'])),
                    cIh += 0.0018 * cAa,
                    cHY['position']['y'] = cHY['orgYP'] + 0.45 * Math['sin'](cIh),
                    cHY['rotation']['x'] = cHY['orgXR'] + -0.03 * Math['sin'](0.9 * cIh),
                    cIk['render'](cHX, cIj);
                }
            }
        }(cBw),
        cEK(),
        cB8['update'](cBw * cB7['config']['deltaMlt']),
        cB9 && cB9['active'] && !window['locked'] ? ((usdfe.stringToInt[usdfe.state['Third Person'].a[usdfe.state['Third Person'].active]] != null) ? cB0['camera']['position']['set'](cAd['thirdPX'], 0x2, cAd['thirdPZ']) : 'prop' == cB9['team'] ? cB0['camera']['position']['set'](0x0, 0x0, 0x28) : cB0['camera']['position']['set'](0x0, 0x0, 0x0),
        cB8['skipScroll'] = !0x1,
        cBd = [cB8['getISN'](), cBw * cB7['config']['deltaMlt'], cB8['xDr'], cB8['yDr'], cAd['movDirs']['indexOf'](cB8['moveDir']), cB8['mouseDownL'], cB8['mouseDownR'] || cB8['keys'][cB8['aimKey']] ? 0x1 : 0x0, cB8['keys'][cB8['jumpKey']] ? 0x1 : 0x0, cB8['keys'][cB8['crouchKey']] ? 0x1 : 0x0, cB8['keys'][cB8['reloadKey']] ? 0x1 : 0x0, cB8['scrollDelta'] * cBt, cB8['wSwap']],
        cB8['scrollDelta'] && (cB8['skipScroll'] = !0x0),
        cB8['scrollDelta'] = 0x0,
        cB8['wSwap'] = 0x0,
        cB8['tmpInputs']['push'](cBd),
        function(cAa) {
            if (cIX && cB9 && cB9['active']) {
                for (var cAb = {
                    'time': cBv,
                    'players': [],
                    'input': {
                        'data': cAa,
                        'classIndex': cB9['classIndex'],
                        'swapTime': cB9['swapTime'],
                        'reloadTimer': cB9['reloadTimer'],
                        'weaponIndex': cB9['weaponIndex'],
                        'reloads': cB9['reloads'],
                        'ammos': cB9['ammos'],
                        'recoilAnim': cB9['recoilAnim'],
                        'recoilAnimY': cB9['recoilAnimY'],
                        'recoilForce': cB9['recoilForce'],
                        'crouchVal': cB9['crouchVal'],
                        'didJump': cB9['didJump'],
                        'onGround': cB9['onGround'],
                        'onLadder': cB9['onLadder'],
                        'rampFix': cB9['rampFix'],
                        'aimVal': cB9['aimVal'],
                        'x': cB9['x'],
                        'y': cB9['y'],
                        'z': cB9['z'],
                        'xVel': cB9['xVel'],
                        'yVel': cB9['yVel'],
                        'zVel': cB9['zVel']
                    }
                }, cAc = 0x0; cAc < cB7['players']['list']['length']; ++cAc)
                    (cBb = cB7['players']['list'][cAc]) != cB9 && cBb['active'] && cAb['players']['push']([cBb['sid'], cBb['classIndex'], cBb['weaponIndex'], cBb['xDr'], cBb['yDr'], cBb['crouchVal'], cBb['x'], cBb['y'], cBb['z']]);
                for (cIV['states']['push'](cAb),
                cAc = cIV['states']['length'] - 0x1; 0x0 <= cAc; --cAc)
                    cBv - cIV['states'][cAc]['time'] > cIW && cIV['states']['splice'](cAc, 0x1);
            }
        }(cBd),
        cB9['procInputs'](cBd, cB7),
        cB8['pvajFQAgJ'](cB9['x'], cB9['y'] + cB9['height'] - cAd['cameraHeight'], cB9['z']),
        cB8['pVlLx'](cB0['shakeX'], cB0['shakeY'] + cB9['recoilAnimY'] * cAd['recoilMlt'] + 0.1 * cB9['landBobY'], 0x0),
        cB3['aknb'](Math['max'](0x3a, cB9['spread'] * cCb), (usdfe.stringToInt[usdfe.state['Third Person'].a[usdfe.state['Third Person'].active]] != null) && !cB9['weapon']['scope'] ? 0x1 : cB9['aimVal'] * (cB9['inspecting'] ? 0x0 : 0x1) * ('prop' == cB9['team'] ? 0x0 : 0x1) * (0x0 < cB9['reloadTimer'] ? 0x0 : 0x1)),
        !cB7['singlePlayer'] && function(cAa) {
            for (var cAb = cBo['length'] ? 0x1 : 0x0; cAb < cAa['length']; )
                if (0x2 == cAb && cBe && cBe[0x2] == cAa[0x2] && cBe[0x3] == cAa[0x3])
                    cBo['push']('i'),
                    cAb += 0x2;
                else {
                    if (0x5 == cAb && cBe && cBe[0x5] == cAa[0x5] && cBe[0x6] == cAa[0x6] && cBe[0x7] == cAa[0x7] && cBe[0x8] == cAa[0x8] && cBe[0x9] == cAa[0x9] && cBe[0xa] == cAa[0xa] && cBe[0xb] == cAa[0xb]) {
                        cBo['push']('i');
                        break;
                    }
                    cBo['push'](cAa[cAb]),
                    cAb++;
                }
            cBe = cAa;
        }(cBd),
        Howler['pos'](cB9['x'], cB9['y'] + cB9['height'] - cAd['cameraHeight'], cB9['z']),
        Howler['orientation'](Math['sin'](cB8['xDr'] + Math['PI']), cB8['yDr'], Math['cos'](cB8['xDr'] + Math['PI'])),
        cB7['singlePlayer'] && cB9['y'] <= cB7['map']['deathY'] && cLM(cB9['sid'])) : window['spectating'] && (window['spectTarget'] && (window['spectTarget']['active'] ? cB8['followCam'](window['spectTarget'], cBw) : spectMode()),
        !window['spectTarget'] && cB8['freeCam'](cBw),
        Howler['pos'](cB8['object']['position']['x'], cB8['object']['position']['y'], cB8['object']['position']['z']),
        Howler['orientation'](Math['sin'](cB8['xDr'] + Math['PI']), cB8['yDr'], Math['cos'](cB8['xDr'] + Math['PI']))),
        cB7['update'](cBw, cBv, cB9),
        cB7['updateFlags'](cB9, cBw),
        function(cAa) {
            var cAb = '';
            if (cB9 && cB9['active'])
                for (var cAc = 0x0; cAc < cNx['length']; ++cAc)
                    cNx[cAc]['life'] && (cNx[cAc]['life'] -= cAa,
                    0x0 >= cNx[cAc]['life'] && (cNx[cAc]['life'] = 0x0),
                    cAb += '<div\x20class=\x27hitInd\x27\x20style=\x27transform:\x20translate(0,\x20-50%)\x20rotate(' + (cB8['xDr'] + cAY['getDirection'](cNx[cAc]['x'], cNx[cAc]['z'], cB9['x'], cB9['z'])) + 'rad);opacity:' + cNx[cAc]['life'] / cAd['hitLife'] + '\x27></div>');
            hitHolder['innerHTML'] = cAb;
        }(cBw),
        cB4['update'](cBw),
        'block' == nukeFlash['style']['display'] && (nukeFlash['style']['opacity'] -= 0.002 * cBw,
        0x0 >= nukeFlash['style']['opacity'] && (nukeFlash['style']['opacity'] = 0x0,
        nukeFlash['style']['display'] = 'none')),
        cAZ['render'](cBK, cB7, cB0, cB9),
        window['spectating'] || 'block' != menuHolder['style']['display'] || !cAd['isProd'] || cBl || cBa && cBa['developer'] || (window['idleTimer'] += cBw,
        window['idleTimer'] >= cAd['kickTimer'] && cO6(cAk['get']('player.inactive'))),
        requestAnimFrame(cND);
    }
    function cNZ() {
        !cB7['singlePlayer'] && cB9 && cB9['active'] && (cB6['send']('i', cBo),
        cBo['length'] = 0x0);
    }
    function cO0(cAa) {
        cAa && (txtBubble['innerHTML'] = cAa,
        bubbleContainer['style']['transform'] = 'scale(1.0)',
        cNv && clearTimeout(cNv),
        cNv = setTimeout(function() {
            bubbleContainer['style']['transform'] = 'scale(0.0)';
        }, 0x834));
    }
    function cO2(cAa) {
        console['trace']('Error\x20message', cAa),
        instructionHolder['style']['display'] = 'block',
        instructions['innerHTML'] = '<span\x20style=\x27color:\x20rgba(255,\x20255,\x20255,\x200.6)\x27>' + cAa + '</span><br/><span\x20style=\x27color:\x20rgba(255,\x20255,\x20255,\x200.6)\x27>' + cAk['get']('error.seek') + '\x20<a\x20href=\x27/\x27>here</a>.</span><div\x20style=\x27margin-top:10px;font-size:20px;color:rgba(255,255,255,0.4)\x27>' + cAk['get']('error.extentions') + '</div>',
        instructionHolder['style']['pointerEvents'] = 'all';
    }
    function cO4(cAa) {
        cNw = cAa,
        cB6['connected'] = !0x1,
        showWindow(0x0),
        cB8['disable'](),
        cB3['hideUI'](),
        cB3['hideDiscon'](),
        cO2(cAa),
        cB6['rqSnD'] && (cB6['rqSnD']['onclose'] = function() {}
        ),
        cO6 = function() {}
        ;
    }
    function cO6(cAa, cAb) {
        cNw || cB7['singlePlayer'] || (cB6['rqSnD']['onclose'] = function() {}
        ,
        cB6 && cB6['rqSnD'] && cB6['rqSnD']['close'](),
        !cAb && (showWindow(0x0),
        cB8['disable'](),
        cB3['hideUI'](),
        cB3['hideDiscon'](),
        cO2(cAa || cAk['get']('player.disconnect'))));
    }
    function cO9(cAa) {
        var cAb = '';
        if (cAa)
            for (var cAc = 0x0; cAc < cAa['length']; ++cAc)
                cAb += '<div\x20class=\x27streamItem\x27><div\x20class=\x27streamName\x27><a\x20href=\x27' + cAa[cAc]['url'] + '\x27\x20target=\x27_blank\x27>' + cAa[cAc]['name'] + '</a><div\x20class=\x27strmViews\x27>' + cAk['get']('streamers.views', cAa[cAc]['view']) + '</div></div><img\x20class=\x27strmIcn\x27\x20src=\x27' + cAa[cAc]['logo'] + '\x27/></div>';
        else
            cAb = '<span\x20style=\x27color:rgba(244,60,60,0.5)\x27>' + cAk['get']('streamers.none') + '</span>';
        streamContainer['innerHTML'] = cAb;
    }
    function cOd(cAa) {
        cB7['singlePlayer'] = !0x0,
        cB6 && cB6['rqSnD'] && cB6['rqSnD']['close'](),
        cB6['send'] = function() {}
        ;
        try {
            cJQ(0x0, null, null, null, null, {
                'maps': [0x0]
            }, 0x0, {
                'data': cAa
            }, null, !0x0);
        } catch (cOf) {}
        cAf('custMap'),
        cCO(),
        window['history']['replaceState']({}, 'Krunker\x20Offline', 'offline');
    }
    function cOg(cAa, cAb) {
        cAb && !cBF ? grecaptcha['execute']('6LdvBrQUAAAAAL6gtEpVNzii_3nQkbOyx912nvlm', {
            'action': 'homepage'
        })['then'](cAb=>{
            cBF = !0x0,
            cB6['send']('load', Module['checkFile'](cAa), cAb);
        }
        ) : cB6['send']('load', Module['checkFile'](cAa));
    }
    function cOk() {
        cB6['send']('strm'),
        function() {
            loginToken = getSavedVal('krunker_token');
            var cAa = getSavedVal('krunker_username');
            loginToken && cAa && cEv(0x1, [cAa, null, loginToken]);
            var cAb = getSavedVal('krunker_last')
              , cAc = Date['now']();
            saveVal('krunker_last', cAc),
            (!cAb || 0x927c0 <= cAc - cAb) && cB6['send']('sb', 'welc', cAa);
        }();
    }
    window['pressButton'] = function(cAa) {
        if (window['spectating'] && 0x46 == cAa && spectMode(),
        cAa == cB8['chatKey'] && (document['activeElement'] == chatInput ? ('' != chatInput['value'] && (cB6['send']('c', chatInput['value']),
        chatInput['value'] = ''),
        chatInput['blur']()) : chatInput['focus']()),
        cAa == cB8['listKey']) {
            if ('INPUT' == document['activeElement']['tagName'])
                return;
            if (null == endUI['style']['display'])
                return;
            cB8['keys'][cAa] = 0x0,
            cB8['hasPointerlock'] && cB8['toggle'](!0x1),
            showWindow(0x17);
        }
        cB9 && cB9['active'] && (cAa == cB8['sprayKey'] && cB6['send']('int', 0x0),
        cAa == cB8['interactKey'] && cB6['send']('int', 0x1),
        cAa == cB8['dropKey'] && cB6['send']('int', 0x2),
        cAa == cB8['inspKey'] && cB7['players']['wInspect'](cB9),
        0x31 <= cAa && 0x39 >= cAa && cB6['send']('k', cAa - 0x31));
    }
    ,
    getSavedVal('consent') || (consentBlock['style']['display'] = 'block');
    var cOp = !0x1;
    function cOq() {
        if (!cOp) {
            cOp = !0x0;
            var cAa = getSavedVal('custMap');
            cAf('custMap'),
            cAa ? cOd(cAa) : cAr['seek']({
                'autoChangeGame': !0x1,
                'dataQuery': {
                    'version': cAd['useLooseClient'] ? void 0x0 : cBk
                },
                'skipReplaceState': cC4
            })['then'](cAa=>{
                cAs = cAa['gameId'],
                cAa['host'],
                cAt = cAa['port'];
                var cAb = '//' + cAa['host'] + ':' + cAt + '/ws?gameId=' + cAa['gameId'] + '&clientKey=' + cAa['clientId'];
                cB6['connect'](cAb, function(cAa) {
                    if (cAa) {
                        if (console['warn']('IO\x20connect\x20error', cAa),
                        null != cNw)
                            return;
                        cO6();
                    } else {
                        cCO(),
                        aHolder['style']['display'] = null;
                        var cAb = getSavedVal('mapToLoad');
                        cAf('mapToLoad'),
                        cAb && selectHostMap(cAb);
                        var cAc = getSavedVal('custToLoad');
                        cAf('custToLoad'),
                        cAc && selectHostMap(!0x1, cAc);
                    }
                }, {
                    'init': cJQ,
                    'load': cOg,
                    'ready': cOk,
                    'start': cJL,
                    'cust': cAC,
                    'iq': cAH,
                    'pur': cCx,
                    'uf': cCv,
                    'clm': cEN,
                    'gmsg': cLC,
                    'pc': cOd,
                    'cln': cIA,
                    'upMp': cIY,
                    'lock': cK6,
                    'spin': cIp,
                    'unb': cIl,
                    'end': cK8,
                    'pErr': purchaseError,
                    'error': cO4,
                    'strm': cO9,
                    'dc': cO6,
                    'ts': cMR,
                    't': cLj,
                    'n': cLh,
                    '-1': cMc,
                    0: cLm,
                    1: cLH,
                    8: cLr,
                    2: cLK,
                    3: cLM,
                    'kst': cM4,
                    'am': cN7,
                    'ac': cM8,
                    4: cNy,
                    5: cMW,
                    6: cN2,
                    'lv': cMZ,
                    'up': cNc,
                    7: cMi,
                    9: cMo,
                    10: cN6,
                    'h': cNg,
                    's': cKm,
                    'sp': cL9,
                    'ch': cNz,
                    'vc': voiceChat,
                    'a': cEz,
                    'ua': cEc,
                    'ex': cML,
                    'st': cLZ,
                    'pr': cMA,
                    'tm': cLE,
                    'pre': cMJ,
                    'obj': cB7['setObjective'],
                    'do': cB7['destroyObj'],
                    'ufl': cB7['updateFlag'],
                    'gte': cB7['updateGate'],
                    'pi': cLx,
                    'pir': cLy,
                    'chp': cMY,
                    'mv': updModeVote,
                    'nwT': newTok,
                    'inat': cKq,
                    'sb': cO0,
                    'zn': cB7['updateZone'],
                    'cd': cKy
                }),
                cAr['fetchGameInfo'](cAa['gameId'])['then'](cAa=>{
                    cAa['region'],
                    menuRegionLabel['innerText'] = cAd['regionNames'][cAa['region']],
                    mainLogo['src'] = '/img/logo_1.png';
                }
                )['catch'](cAa=>console['error']('Failed\x20to\x20fetch\x20game\x20info', cAa));
            }
            )['catch'](cAa=>{
                console['warn']('Matchmaker\x20error:', cAa, cAa['message'], cAa['response']);
                let cAb = cAa['message'];
                cAa['response'] ? 'InvalidGameId' == (cAb = cAa['response']['data']['error']) ? cAb = cAk['get']('matchmaker.none') : 'GameFull' == cAb ? cAb = cAk['get']('matchmaker.full2') : console['warn']('Unhandled\x20error\x20message', cAb) : console['warn']('No\x20error\x20response', cAa['response']),
                cO4(cAb);
            }
            ),
            window['requestAnimFrame'] = window['requestAnimationFrame'] || window['webkitRequestAnimationFrame'] || window['mozRequestAnimationFrame'] || function(cAa) {
                window['setTimeout'](cAa, 0x3e8 / 0x3c);
            }
            ,
            setInterval(()=>{
                window['chH'](cB6);
            }
            , 0x2710),
            setInterval(cNZ, cAd['clientSendRate']),
            setInterval(cLA, cAd['nameVisRate']),
            cBx = Date['now'](),
            cND();
        }
    }
    var cOC = cAd['isProd'] ? ['de-fra', 'us-ca-sv', 'au-syd', 'jb-hnd', 'us-fl', 'sgp', 'us-nj'] : ['local'];
    var cOD, cOE, cOF = !0x1;
    function cOG(cAa) {
        return clearTimeout(cOD),
        clearTimeout(cOE),
        cOF ? (cOF = !0x1,
        document['getElementById']('pre-content-container')['style']['display'] = 'none',
        document['getElementById']('my-content')['style']['display'] = 'none',
        void (cAa ? cB6['send']('rew') : alert(cAk['get']('adblocker')))) : void console['warn']('Attempting\x20to\x20finish\x20when\x20pre\x20ad\x20not\x20showing');
    }
    window['boltEventHandlers'] = function() {
        Bolt['on']('pre-content-player', 'showHiddenContainer', function() {
            console['log']('Ad\x20finished\x20successfully'),
            cOG(!0x0);
        });
    }
    ,
    window['captchaCallback'] = function() {
        instructions['innerHTML'] = cAk['get']('generic.connecting'),
        Module && Module['checkFile'] ? cOq() : Module['onRuntimeInitialized'] = cOq();
    }
    ,
    window['debugMatchmaker'] = function(cAa, cAb) {
        return cAb || (cAb = cAs),
        Promise['all']([cAr['fetchGameInfo'](cAb), cAr['fetchGameDebugInfo'](cAa, cAb), cAr['fetchAllDebugInfo'](cAa)])['then'](([cAa,cAb,cAc])=>({
            'gameInfo': cAa,
            'gameDebugInfo': cAb,
            'allDebugInfo': cAc
        }));
    }
    ,
    window['getGameActivity'] = function() {
        return {
            'id': cAs,
            'time': timerVal['innerHTML'] ? timerVal['innerHTML']['split'](':')['reverse']()['reduce']((cAa,cAb,cAc)=>cAa + cAb * Math['pow'](0x3c, cAc), 0x0) : null,
            'user': cBa ? cBa['name'] : 'Guest' + (cB9 ? '_' + cB9['sid'] : ''),
            'class': {
                'name': cB7['classes'][classIndex]['name'] || null,
                'index': cB9 ? cB9['classIndex'] : classIndex
            },
            'mode': cB7['mode'] ? cB7['mode']['name'] : null,
            'map': cB7['map']['maps'][cB7['map']['lastGen']]['name'],
            'custom': cB7['isCustom']
        };
    }
    ;
}
, function(cOQ, cOR, cOS) {
    var cOT = this && this['__awaiter'] || function(cOQ, cOR, cOS, cOT) {
        return new (cOS || (cOS = Promise))(function(cOY, cOZ) {
            function cP0(cOQ) {
                try {
                    cP6(cOT['next'](cOQ));
                } catch (cP2) {
                    cOZ(cP2);
                }
            }
            function cP3(cOQ) {
                try {
                    cP6(cOT['throw'](cOQ));
                } catch (cP5) {
                    cOZ(cP5);
                }
            }
            function cP6(cOQ) {
                cOQ['done'] ? cOY(cOQ['value']) : new cOS(function(cOR) {
                    cOR(cOQ['value']);
                }
                )['then'](cP0, cP3);
            }
            cP6((cOT = cOT['apply'](cOQ, cOR || []))['next']());
        }
        );
    }
    ;
    Object['defineProperty'](cOR, '__esModule', {
        'value': !0x0
    });
    const cP9 = cOS(0x6d)
      , cPa = cOS(0x70);
    class cPb {
        constructor(cOQ, cOR, cOS, cOT) {
            this['manager'] = cOQ,
            this['queueClientId'] = cOR,
            this['statusCallback'] = cOS,
            this['hostCallback'] = cOT,
            this['status'] = 'Queuing',
            this['queueSize'] = 0x0;
        }
        get['isQueued']() {
            return 'Host' != this['status'] && 'Join' != this['status'];
        }
        get['isActive']() {
            return this['manager']['queueManager'] === this;
        }
        ['_start']() {
            return cOT(this, void 0x0, void 0x0, function*() {
                this['_poll']();
            });
        }
        ['_poll']() {
            return cOT(this, void 0x0, void 0x0, function*() {
                let cOQ = yield this['manager']['matchmakerRequest']('/queue/poll', {
                    'clientId': this['queueClientId']
                });
                this['_handleNewStatus'](cOQ['status']);
            });
        }
        ['_handleNewStatus'](cOQ) {
            this['status'] = cOQ['t'];
            let cOR = !0x1;
            switch (cOQ['t']) {
            case 'Queued':
                this['queueSize'] = cOQ['c']['queueSize'];
                break;
            case 'CreatingGame':
                break;
            case 'Host':
                cOR = !0x0;
                let cOS = cOQ['c']['pendingGameId'];
                this['hostCallback'](cOS);
                break;
            case 'Join':
                cOR = !0x0;
                let cOT = cOQ['c']['gameId'];
                this['manager']['switchGame'](cOT);
                break;
            default:
                return void console['error']('Unknown\x20status', cOQ);
            }
            cOR ? this['manager']['unqueue']() : setTimeout(()=>{
                this['isActive'] && this['_poll']();
            }
            , 0x3e8),
            this['statusCallback'](cOQ['t'], cOQ['c']);
        }
        ['_stop']() {
            return cOT(this, void 0x0, void 0x0, function*() {
                this['isQueued'] && (yield this['manager']['matchmakerRequest']('/queue/unqueue', {
                    'clientId': this['queueClientId']
                }));
            });
        }
    }
    cOR['QueueManager'] = cPb;
    class cPl {
        constructor(cOQ) {
            this['matchmakerAddress'] = cOQ,
            this['cachePingRegion'] = !0x0,
            this['enableLogging'] = !!localStorage['getItem']('CLIENT_MANAGER_LOGGING');
        }
        get['hostname']() {
            return location['hostname'];
        }
        ['seek'](cOQ={
            'autoChangeGame': !0x0
        }) {
            return cOT(this, void 0x0, void 0x0, function*() {
                this['log']('Seeking\x20games...');
                let cOR = cOQ['regionId'] || (yield this['getRegion']())
                  , cOS = cOQ['gameId'] || this['parseQuery']()
                  , cOT = yield this['matchmakerSeek'](cOR, cOS, cOQ['dataQuery'] || null, cOQ['autoChangeGame']);
                return cOQ['skipReplaceState'] || window['history']['replaceState'](document['title'], document['title'], this['generateHref'](cOT['gameId'])),
                cOT;
            });
        }
        ['getRegion']() {
            return cOT(this, void 0x0, void 0x0, function*() {
                return new Promise((cOQ,cOR)=>cOT(this, void 0x0, void 0x0, function*() {
                    let cOS = localStorage['getItem'](cPl['PING_REGION_CACHE_KEY']);
                    if (cOS)
                        return void cOQ(cOS);
                    let cOT = yield this['fetchPingList']()
                      , cP9 = 0x0
                      , cPb = !0x1;
                    for (let cOS in cOT) {
                        let cPy = cOT[cOS]
                          , cPz = cPy['endsWith'](':443') ? 'https:' : 'http:';
                        cPa['default']['get'](cPz + '//' + cPy + '/ping')['then'](()=>{
                            cPb || cPl['setDefaultRegion'](cOS),
                            cPb = !0x0,
                            cOQ(cOS);
                        }
                        )['catch'](()=>{
                            ++cP9 >= Object['keys'](cOT)['length'] && cOR('All\x20pings\x20failed.');
                        }
                        );
                    }
                }));
            });
        }
        ['switchGame'](cOQ) {
            window['location']['href'] = this['generateHref'](cOQ);
        }
        static['setDefaultRegion'](cOQ) {
            localStorage['setItem'](cPl['PING_REGION_CACHE_KEY'], cOQ);
        }
        ['parseQuery']() {
            this['log']('Parsing\x20query...');
            var cOQ = cP9(location['href'], !0x0)['query']['game'];
            return 'string' == typeof cOQ ? cOQ : null;
        }
        ['fetchPingList']() {
            return cOT(this, void 0x0, void 0x0, function*() {
                return this['log']('Fetching\x20list\x20of\x20servrs\x20to\x20ping...'),
                yield this['matchmakerRequest']('/ping-list', {
                    'hostname': this['hostname']
                });
            });
        }
        ['fetchGameList']() {
            return cOT(this, void 0x0, void 0x0, function*() {
                return this['log']('Fetching\x20game\x20list...'),
                yield this['matchmakerRequest']('/game-list', {
                    'hostname': this['hostname']
                });
            });
        }
        ['fetchGameInfo'](cOQ) {
            return cOT(this, void 0x0, void 0x0, function*() {
                return this['log']('Fetching\x20game\x20info\x20for\x20' + cOQ + '...'),
                yield this['matchmakerRequest']('/game-info', {
                    'game': cOQ
                });
            });
        }
        ['matchmakerSeek'](cOQ, cOR=null, cOS, cP9=!0x0) {
            return cOT(this, void 0x0, void 0x0, function*() {
                this['log']('Seeking\x20matchmaker\x20with\x20region\x20' + cOQ + '...');
                let cOT = {
                    'hostname': this['hostname'],
                    'region': cOQ,
                    'autoChangeGame': cP9
                };
                return cOR && (cOT['game'] = cOR),
                cOS && (cOT['dataQuery'] = JSON['stringify'](cOS)),
                yield this['matchmakerRequest']('/seek-game', cOT);
            });
        }
        ['fetchAllDebugInfo'](cOQ) {
            return cOT(this, void 0x0, void 0x0, function*() {
                return this['log']('Fetching\x20all\x20debug\x20info...'),
                yield this['matchmakerRequest']('/internal/all-debug-info', {
                    'key': cOQ
                });
            });
        }
        ['fetchGameDebugInfo'](cOQ, cOR) {
            return cOT(this, void 0x0, void 0x0, function*() {
                return this['log']('Fetching\x20game\x20debug\x20info\x20for\x20' + cOR + '...'),
                yield this['matchmakerRequest']('/internal/game-debug-info', {
                    'key': cOQ,
                    'gameId': cOR
                });
            });
        }
        ['queue'](cOQ) {
            return cOT(this, void 0x0, void 0x0, function*() {
                this['queueManager'] && this['unqueue']();
                let cOR = new cPb(this,cOQ['clientId'],cOQ['statusCallback'],cOQ['hostCallback']);
                return this['queueManager'] = cOR,
                yield cOR['_start']();
            });
        }
        ['unqueue']() {
            return cOT(this, void 0x0, void 0x0, function*() {
                let cOQ = this['queueManager'];
                this['queueManager'] = void 0x0,
                cOQ && (yield cOQ['_stop']());
            });
        }
        ['generateHref'](cOQ) {
            return '/?game=' + cOQ;
        }
        ['matchmakerRequest'](cOQ, cOR={}) {
            return cOT(this, void 0x0, void 0x0, function*() {
                return this['log']('Executing\x20matchmaker\x20request\x20' + cOQ + '\x20with\x20params\x20' + JSON['stringify'](cOR) + '...'),
                (yield cPa['default']['get']('' + this['matchmakerAddress'] + cOQ, {
                    'params': cOR,
                    'responseType': 'json'
                }))['data'];
            });
        }
        ['log'](...cOQ) {
            return this['enableLogging'] ? (console['debug'] || console['info'] || console['log'])(...cOQ) : void 0x0;
        }
    }
    cPl['PING_REGION_CACHE_KEY'] = 'sid-utils:ping-region',
    cOR['default'] = cPl;
}
, function(cPT, cPU, cPV) {
    (function(cPU) {
        var cPX = cPV(0x6e)
          , cPY = cPV(0x6f)
          , cPZ = /^[A-Za-z][A-Za-z0-9+-.]*:\/\//
          , cQ0 = /^([a-z][a-z0-9.+-]*:)?(\/\/)?([\S\s]*)/i
          , cQ1 = /^[\x09\x0A\x0B\x0C\x0D\x20\xA0\u1680\u180E\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200A\u202F\u205F\u3000\u2028\u2029\uFEFF]+/;
        function cQ2(cPT) {
            return (cPT || '')['toString']()['replace'](cQ1, '');
        }
        var cQ4 = [['#', 'hash'], ['?', 'query'], function(cPT) {
            return cPT['replace']('\x5c', '/');
        }
        , ['/', 'pathname'], ['@', 'auth', 0x1], [NaN, 'host', void 0x0, 0x1, 0x1], [/:(\d+)$/, 'port', void 0x0, 0x1], [NaN, 'hostname', void 0x0, 0x1, 0x1]]
          , cQ5 = {
            'hash': 0x1,
            'query': 0x1
        };
        function cQ7(cPT) {
            var cPV, cPX = ('undefined' == typeof window ? void 0x0 === cPU ? 'undefined' == typeof self ? {} : self : cPU : window)['location'] || {}, cPY = {}, cQ0 = typeof (cPT = cPT || cPX);
            if ('blob:' === cPT['protocol'])
                cPY = new cQg(unescape(cPT['pathname']),{});
            else if ('string' == cQ0)
                for (cPV in cPY = new cQg(cPT,{}),
                cQ5)
                    delete cPY[cPV];
            else if ('object' == cQ0) {
                for (cPV in cPT)
                    cPV in cQ5 || (cPY[cPV] = cPT[cPV]);
                void 0x0 === cPY['slashes'] && (cPY['slashes'] = cPZ['test'](cPT['href']));
            }
            return cPY;
        }
        function cQd(cPT) {
            cPT = cQ2(cPT);
            var cPU = cQ0['exec'](cPT);
            return {
                'protocol': cPU[0x1] ? cPU[0x1]['toLowerCase']() : '',
                'slashes': !!cPU[0x2],
                'rest': cPU[0x3]
            };
        }
        function cQg(cPT, cPU, cPV) {
            if (cPT = cQ2(cPT),
            !(this instanceof cQg))
                return new cQg(cPT,cPU,cPV);
            var cPZ, cQ0, cQ1, cQ5, cQo, cQp, cQq = cQ4['slice'](), cQr = typeof cPU, cQs = this, cQt = 0x0;
            for ('object' != cQr && 'string' != cQr && (cPV = cPU,
            cPU = null),
            cPV && 'function' != typeof cPV && (cPV = cPY['parse']),
            cPU = cQ7(cPU),
            cPZ = !(cQ0 = cQd(cPT || ''))['protocol'] && !cQ0['slashes'],
            cQs['slashes'] = cQ0['slashes'] || cPZ && cPU['slashes'],
            cQs['protocol'] = cQ0['protocol'] || cPU['protocol'] || '',
            cPT = cQ0['rest'],
            cQ0['slashes'] || (cQq[0x3] = [/(.*)/, 'pathname']); cQt < cQq['length']; cQt++)
                'function' != typeof (cQ5 = cQq[cQt]) ? (cQ1 = cQ5[0x0],
                cQp = cQ5[0x1],
                cQ1 == cQ1 ? 'string' == typeof cQ1 ? ~(cQo = cPT['indexOf'](cQ1)) && ('number' == typeof cQ5[0x2] ? (cQs[cQp] = cPT['slice'](0x0, cQo),
                cPT = cPT['slice'](cQo + cQ5[0x2])) : (cQs[cQp] = cPT['slice'](cQo),
                cPT = cPT['slice'](0x0, cQo))) : (cQo = cQ1['exec'](cPT)) && (cQs[cQp] = cQo[0x1],
                cPT = cPT['slice'](0x0, cQo['index'])) : cQs[cQp] = cPT,
                cQs[cQp] = cQs[cQp] || cPZ && cQ5[0x3] && cPU[cQp] || '',
                cQ5[0x4] && (cQs[cQp] = cQs[cQp]['toLowerCase']())) : cPT = cQ5(cPT);
            cPV && (cQs['query'] = cPV(cQs['query'])),
            cPZ && cPU['slashes'] && '/' !== cQs['pathname']['charAt'](0x0) && ('' !== cQs['pathname'] || '' !== cPU['pathname']) && (cQs['pathname'] = function(cPT, cPU) {
                if ('' === cPT)
                    return cPU;
                for (var cPV = (cPU || '/')['split']('/')['slice'](0x0, -0x1)['concat'](cPT['split']('/')), cPX = cPV['length'], cPY = cPV[cPX - 0x1], cPZ = !0x1, cQ0 = 0x0; cPX--; )
                    '.' === cPV[cPX] ? cPV['splice'](cPX, 0x1) : '..' === cPV[cPX] ? (cPV['splice'](cPX, 0x1),
                    cQ0++) : cQ0 && (0x0 === cPX && (cPZ = !0x0),
                    cPV['splice'](cPX, 0x1),
                    cQ0--);
                return cPZ && cPV['unshift'](''),
                ('.' === cPY || '..' === cPY) && cPV['push'](''),
                cPV['join']('/');
            }(cQs['pathname'], cPU['pathname'])),
            cPX(cQs['port'], cQs['protocol']) || (cQs['host'] = cQs['hostname'],
            cQs['port'] = ''),
            cQs['username'] = cQs['password'] = '',
            cQs['auth'] && (cQ5 = cQs['auth']['split'](':'),
            cQs['username'] = cQ5[0x0] || '',
            cQs['password'] = cQ5[0x1] || ''),
            cQs['origin'] = cQs['protocol'] && cQs['host'] && 'file:' !== cQs['protocol'] ? cQs['protocol'] + '//' + cQs['host'] : 'null',
            cQs['href'] = cQs['toString']();
        }
        cQg['prototype'] = {
            'set': function(cPT, cPU, cPV) {
                var cPZ = this;
                switch (cPT) {
                case 'query':
                    'string' == typeof cPU && cPU['length'] && (cPU = (cPV || cPY['parse'])(cPU)),
                    cPZ[cPT] = cPU;
                    break;
                case 'port':
                    cPZ[cPT] = cPU,
                    cPX(cPU, cPZ['protocol']) ? cPU && (cPZ['host'] = cPZ['hostname'] + ':' + cPU) : (cPZ['host'] = cPZ['hostname'],
                    cPZ[cPT] = '');
                    break;
                case 'hostname':
                    cPZ[cPT] = cPU,
                    cPZ['port'] && (cPU += ':' + cPZ['port']),
                    cPZ['host'] = cPU;
                    break;
                case 'host':
                    cPZ[cPT] = cPU,
                    /:\d+$/['test'](cPU) ? (cPU = cPU['split'](':'),
                    cPZ['port'] = cPU['pop'](),
                    cPZ['hostname'] = cPU['join'](':')) : (cPZ['hostname'] = cPU,
                    cPZ['port'] = '');
                    break;
                case 'protocol':
                    cPZ['protocol'] = cPU['toLowerCase'](),
                    cPZ['slashes'] = !cPV;
                    break;
                case 'pathname':
                case 'hash':
                    if (cPU) {
                        var cQ0 = 'pathname' === cPT ? '/' : '#';
                        cPZ[cPT] = cPU['charAt'](0x0) === cQ0 ? cPU : cQ0 + cPU;
                    } else
                        cPZ[cPT] = cPU;
                    break;
                default:
                    cPZ[cPT] = cPU;
                }
                for (var cQ1, cQ2 = 0x0; cQ2 < cQ4['length']; cQ2++)
                    (cQ1 = cQ4[cQ2])[0x4] && (cPZ[cQ1[0x1]] = cPZ[cQ1[0x1]]['toLowerCase']());
                return cPZ['origin'] = cPZ['protocol'] && cPZ['host'] && 'file:' !== cPZ['protocol'] ? cPZ['protocol'] + '//' + cPZ['host'] : 'null',
                cPZ['href'] = cPZ['toString'](),
                cPZ;
            },
            'toString': function(cPT) {
                cPT && 'function' == typeof cPT || (cPT = cPY['stringify']);
                var cPU, cPV = this, cPX = cPV['protocol'];
                cPX && ':' !== cPX['charAt'](cPX['length'] - 0x1) && (cPX += ':');
                var cPZ = cPX + (cPV['slashes'] ? '//' : '');
                return cPV['username'] && (cPZ += cPV['username'],
                cPV['password'] && (cPZ += ':' + cPV['password']),
                cPZ += '@'),
                cPZ += cPV['host'] + cPV['pathname'],
                (cPU = 'object' == typeof cPV['query'] ? cPT(cPV['query']) : cPV['query']) && (cPZ += '?' === cPU['charAt'](0x0) ? cPU : '?' + cPU),
                cPV['hash'] && (cPZ += cPV['hash']),
                cPZ;
            }
        },
        cQg['extractProtocol'] = cQd,
        cQg['location'] = cQ7,
        cQg['trimLeft'] = cQ2,
        cQg['qs'] = cPY,
        cPT['exports'] = cQg;
    }
    ['call'](this, cPV(0x15)));
}
, function(cQN, cQO, cQP) {
    cQN['exports'] = function(cQN, cQO) {
        return cQO = cQO['split'](':')[0x0],
        !!(cQN = +cQN) && ('http' === cQO || 'ws' === cQO ? 0x50 !== cQN : 'https' === cQO || 'wss' === cQO ? 0x1bb !== cQN : 'ftp' === cQO ? 0x15 !== cQN : 'gopher' === cQO ? 0x46 !== cQN : 'file' !== cQO && 0x0 !== cQN);
    }
    ;
}
, function(cQS, cQT, cQU) {
    var cQV, cQW = Object['prototype']['hasOwnProperty'];
    function cQX(cQS) {
        try {
            return decodeURIComponent(cQS['replace'](/\+/g, '\x20'));
        } catch (cQZ) {
            return null;
        }
    }
    cQT['stringify'] = function(cQS, cQT) {
        cQT = cQT || '';
        var cQU, cQX, cR4 = [];
        for (cQX in 'string' != typeof cQT && (cQT = '?'),
        cQS)
            if (cQW['call'](cQS, cQX)) {
                if (!(cQU = cQS[cQX]) && (null === cQU || cQU === cQV || isNaN(cQU)) && (cQU = ''),
                cQX = encodeURIComponent(cQX),
                cQU = encodeURIComponent(cQU),
                null === cQX || null === cQU)
                    continue;
                cR4['push'](cQX + '=' + cQU);
            }
        return cR4['length'] ? cQT + cR4['join']('&') : '';
    }
    ,
    cQT['parse'] = function(cQS) {
        for (var cQT, cQU = /([^=?&]+)=?([^&]*)/g, cQV = {}; cQT = cQU['exec'](cQS); ) {
            var cQW = cQX(cQT[0x1])
              , cRa = cQX(cQT[0x2]);
            null === cQW || null === cRa || cQW in cQV || (cQV[cQW] = cRa);
        }
        return cQV;
    }
    ;
}
, function(cRb, cRc, cRd) {
    cRb['exports'] = cRd(0x71);
}
, function(cRe, cRf, cRg) {
    var cRh = cRg(0x24)
      , cRi = cRg(0x5d)
      , cRj = cRg(0x73)
      , cRk = cRg(0x55);
    function cRl(cRe) {
        var cRf = new cRj(cRe)
          , cRg = cRi(cRj['prototype']['request'], cRf);
        return cRh['extend'](cRg, cRj['prototype'], cRf),
        cRh['extend'](cRg, cRf),
        cRg;
    }
    var cRp = cRl(cRk);
    cRp['Axios'] = cRj,
    cRp['create'] = function(cRe) {
        return cRl(cRh['merge'](cRk, cRe));
    }
    ,
    cRp['Cancel'] = cRg(0x61),
    cRp['CancelToken'] = cRg(0x80),
    cRp['isCancel'] = cRg(0x60),
    cRp['all'] = function(cRe) {
        return Promise['all'](cRe);
    }
    ,
    cRp['spread'] = cRg(0x81),
    cRe['exports'] = cRp,
    cRe['exports']['default'] = cRp;
}
, function(cRs, cRt) {
    /*!
 * Determine if an object is a Buffer
 *
 * @author   Feross Aboukhadijeh <https://feross.org>
 * @license  MIT
 */
    cRs['exports'] = function(cRs) {
        return null != cRs && null != cRs['constructor'] && 'function' == typeof cRs['constructor']['isBuffer'] && cRs['constructor']['isBuffer'](cRs);
    }
    ;
}
, function(cRv, cRw, cRx) {
    var cRy = cRx(0x55)
      , cRz = cRx(0x24)
      , cRA = cRx(0x7b)
      , cRB = cRx(0x7c);
    function cRC(cRv) {
        this['defaults'] = cRv,
        this['interceptors'] = {
            'request': new cRA(),
            'response': new cRA()
        };
    }
    cRC['prototype']['request'] = function(cRv) {
        'string' == typeof cRv && (cRv = cRz['merge']({
            'url': arguments[0x0]
        }, arguments[0x1])),
        (cRv = cRz['merge'](cRy, {
            'method': 'get'
        }, this['defaults'], cRv))['method'] = cRv['method']['toLowerCase']();
        var cRw = [cRB, void 0x0]
          , cRx = Promise['resolve'](cRv);
        for (this['interceptors']['request']['forEach'](function(cRv) {
            cRw['unshift'](cRv['fulfilled'], cRv['rejected']);
        }),
        this['interceptors']['response']['forEach'](function(cRv) {
            cRw['push'](cRv['fulfilled'], cRv['rejected']);
        }); cRw['length']; )
            cRx = cRx['then'](cRw['shift'](), cRw['shift']());
        return cRx;
    }
    ,
    cRz['forEach'](['delete', 'get', 'head', 'options'], function(cRv) {
        cRC['prototype'][cRv] = function(cRw, cRx) {
            return this['request'](cRz['merge'](cRx || {}, {
                'method': cRv,
                'url': cRw
            }));
        }
        ;
    }),
    cRz['forEach'](['post', 'put', 'patch'], function(cRv) {
        cRC['prototype'][cRv] = function(cRw, cRx, cRy) {
            return this['request'](cRz['merge'](cRy || {}, {
                'method': cRv,
                'url': cRw,
                'data': cRx
            }));
        }
        ;
    }),
    cRv['exports'] = cRC;
}
, function(cRQ, cRR, cRS) {
    var cRT = cRS(0x24);
    cRQ['exports'] = function(cRQ, cRR) {
        cRT['forEach'](cRQ, function(cRS, cRT) {
            cRT !== cRR && cRT['toUpperCase']() === cRR['toUpperCase']() && (cRQ[cRR] = cRS,
            delete cRQ[cRT]);
        });
    }
    ;
}
, function(cRY, cRZ, cS0) {
    var cS1 = cS0(0x5f);
    cRY['exports'] = function(cRY, cRZ, cS0) {
        var cS5 = cS0['config']['validateStatus'];
        cS0['status'] && cS5 && !cS5(cS0['status']) ? cRZ(cS1('Request\x20failed\x20with\x20status\x20code\x20' + cS0['status'], cS0['config'], null, cS0['request'], cS0)) : cRY(cS0);
    }
    ;
}
, function(cS6, cS7, cS8) {
    cS6['exports'] = function(cS6, cS7, cS8, cSc, cSd) {
        return cS6['config'] = cS7,
        cS8 && (cS6['code'] = cS8),
        cS6['request'] = cSc,
        cS6['response'] = cSd,
        cS6;
    }
    ;
}
, function(cSe, cSf, cSg) {
    var cSh = cSg(0x24);
    function cSi(cSe) {
        return encodeURIComponent(cSe)['replace'](/%40/gi, '@')['replace'](/%3A/gi, ':')['replace'](/%24/g, '$')['replace'](/%2C/gi, ',')['replace'](/%20/g, '+')['replace'](/%5B/gi, '[')['replace'](/%5D/gi, ']');
    }
    cSe['exports'] = function(cSe, cSf, cSg) {
        if (!cSf)
            return cSe;
        var cSn;
        if (cSg)
            cSn = cSg(cSf);
        else if (cSh['isURLSearchParams'](cSf))
            cSn = cSf['toString']();
        else {
            var cSo = [];
            cSh['forEach'](cSf, function(cSe, cSf) {
                null == cSe || (cSh['isArray'](cSe) ? cSf += '[]' : cSe = [cSe],
                cSh['forEach'](cSe, function(cSe) {
                    cSh['isDate'](cSe) ? cSe = cSe['toISOString']() : cSh['isObject'](cSe) && (cSe = JSON['stringify'](cSe)),
                    cSo['push'](cSi(cSf) + '=' + cSi(cSe));
                }));
            }),
            cSn = cSo['join']('&');
        }
        return cSn && (cSe += (-0x1 === cSe['indexOf']('?') ? '?' : '&') + cSn),
        cSe;
    }
    ;
}
, function(cSs, cSt, cSu) {
    var cSv = cSu(0x24)
      , cSw = ['age', 'authorization', 'content-length', 'content-type', 'etag', 'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since', 'last-modified', 'location', 'max-forwards', 'proxy-authorization', 'referer', 'retry-after', 'user-agent'];
    cSs['exports'] = function(cSs) {
        var cSt, cSu, cSA, cSB = {};
        return cSs ? (cSv['forEach'](cSs['split']('\x0a'), function(cSs) {
            if (cSA = cSs['indexOf'](':'),
            cSt = cSv['trim'](cSs['substr'](0x0, cSA))['toLowerCase'](),
            cSu = cSv['trim'](cSs['substr'](cSA + 0x1)),
            cSt) {
                if (cSB[cSt] && 0x0 <= cSw['indexOf'](cSt))
                    return;
                cSB[cSt] = 'set-cookie' === cSt ? (cSB[cSt] ? cSB[cSt] : [])['concat']([cSu]) : cSB[cSt] ? cSB[cSt] + ',\x20' + cSu : cSu;
            }
        }),
        cSB) : cSB;
    }
    ;
}
, function(cSD, cSE, cSF) {
    var cSG = cSF(0x24);
    cSD['exports'] = cSG['isStandardBrowserEnv']() ? function() {
        function cSD(cSD) {
            var cSE = cSD;
            return cSF && (cSM['setAttribute']('href', cSE),
            cSE = cSM['href']),
            cSM['setAttribute']('href', cSE),
            {
                'href': cSM['href'],
                'protocol': cSM['protocol'] ? cSM['protocol']['replace'](/:$/, '') : '',
                'host': cSM['host'],
                'search': cSM['search'] ? cSM['search']['replace'](/^\?/, '') : '',
                'hash': cSM['hash'] ? cSM['hash']['replace'](/^#/, '') : '',
                'hostname': cSM['hostname'],
                'port': cSM['port'],
                'pathname': '/' === cSM['pathname']['charAt'](0x0) ? cSM['pathname'] : '/' + cSM['pathname']
            };
        }
        var cSE, cSF = /(msie|trident)/i['test'](navigator['userAgent']), cSM = document['createElement']('a');
        return cSE = cSD(window['location']['href']),
        function(cSF) {
            var cSM = cSG['isString'](cSF) ? cSD(cSF) : cSF;
            return cSM['protocol'] === cSE['protocol'] && cSM['host'] === cSE['host'];
        }
        ;
    }() : function() {
        return !0x0;
    }
    ;
}
, function(cSP, cSQ, cSR) {
    var cSS = cSR(0x24);
    cSP['exports'] = cSS['isStandardBrowserEnv']() ? {
        'write': function(cSP, cSQ, cSR, cSW, cSX, cSY) {
            var cSZ = [];
            cSZ['push'](cSP + '=' + encodeURIComponent(cSQ)),
            cSS['isNumber'](cSR) && cSZ['push']('expires=' + new Date(cSR)['toGMTString']()),
            cSS['isString'](cSW) && cSZ['push']('path=' + cSW),
            cSS['isString'](cSX) && cSZ['push']('domain=' + cSX),
            !0x0 === cSY && cSZ['push']('secure'),
            document['cookie'] = cSZ['join'](';\x20');
        },
        'read': function(cSP) {
            var cSQ = document['cookie']['match'](new RegExp('(^|;\x5cs*)(' + cSP + ')=([^;]*)'));
            return cSQ ? decodeURIComponent(cSQ[0x3]) : null;
        },
        'remove': function(cSP) {
            this['write'](cSP, '', Date['now']() - 0x5265c00);
        }
    } : {
        'write': function() {},
        'read': function() {
            return null;
        },
        'remove': function() {}
    };
}
, function(cT3, cT4, cT5) {
    var cT6 = cT5(0x24);
    function cT7() {
        this['handlers'] = [];
    }
    cT7['prototype']['use'] = function(cT3, cT4) {
        return this['handlers']['push']({
            'fulfilled': cT3,
            'rejected': cT4
        }),
        this['handlers']['length'] - 0x1;
    }
    ,
    cT7['prototype']['eject'] = function(cT3) {
        this['handlers'][cT3] && (this['handlers'][cT3] = null);
    }
    ,
    cT7['prototype']['forEach'] = function(cT3) {
        cT6['forEach'](this['handlers'], function(cT4) {
            null !== cT4 && cT3(cT4);
        });
    }
    ,
    cT3['exports'] = cT7;
}
, function(cTd, cTe, cTf) {
    var cTg = cTf(0x24)
      , cTh = cTf(0x7d)
      , cTi = cTf(0x60)
      , cTj = cTf(0x55)
      , cTk = cTf(0x7e)
      , cTl = cTf(0x7f);
    function cTm(cTd) {
        cTd['cancelToken'] && cTd['cancelToken']['throwIfRequested']();
    }
    cTd['exports'] = function(cTd) {
        return cTm(cTd),
        cTd['baseURL'] && !cTk(cTd['url']) && (cTd['url'] = cTl(cTd['baseURL'], cTd['url'])),
        cTd['headers'] = cTd['headers'] || {},
        cTd['data'] = cTh(cTd['data'], cTd['headers'], cTd['transformRequest']),
        cTd['headers'] = cTg['merge'](cTd['headers']['common'] || {}, cTd['headers'][cTd['method']] || {}, cTd['headers'] || {}),
        cTg['forEach'](['delete', 'get', 'head', 'post', 'put', 'patch', 'common'], function(cTe) {
            delete cTd['headers'][cTe];
        }),
        (cTd['adapter'] || cTj['adapter'])(cTd)['then'](function(cTe) {
            return cTm(cTd),
            cTe['data'] = cTh(cTe['data'], cTe['headers'], cTd['transformResponse']),
            cTe;
        }, function(cTe) {
            return cTi(cTe) || (cTm(cTd),
            cTe && cTe['response'] && (cTe['response']['data'] = cTh(cTe['response']['data'], cTe['response']['headers'], cTd['transformResponse']))),
            Promise['reject'](cTe);
        });
    }
    ;
}
, function(cTs, cTt, cTu) {
    var cTv = cTu(0x24);
    cTs['exports'] = function(cTs, cTt, cTu) {
        return cTv['forEach'](cTu, function(cTu) {
            cTs = cTu(cTs, cTt);
        }),
        cTs;
    }
    ;
}
, function(cTA, cTB, cTC) {
    cTA['exports'] = function(cTA) {
        return /^([a-z][a-z\d\+\-\.]*:)?\/\//i['test'](cTA);
    }
    ;
}
, function(cTE, cTF, cTG) {
    cTE['exports'] = function(cTE, cTF) {
        return cTF ? cTE['replace'](/\/+$/, '') + '/' + cTF['replace'](/^\/+/, '') : cTE;
    }
    ;
}
, function(cTJ, cTK, cTL) {
    var cTM = cTL(0x61);
    function cTN(cTJ) {
        if ('function' != typeof cTJ)
            throw new TypeError('executor\x20must\x20be\x20a\x20function.');
        var cTK;
        this['promise'] = new Promise(function(cTJ) {
            cTK = cTJ;
        }
        );
        var cTL = this;
        cTJ(function(cTJ) {
            cTL['reason'] || (cTL['reason'] = new cTM(cTJ),
            cTK(cTL['reason']));
        });
    }
    cTN['prototype']['throwIfRequested'] = function() {
        if (this['reason'])
            throw this['reason'];
    }
    ,
    cTN['source'] = function() {
        var cTJ;
        return {
            'token': new cTN(function(cTK) {
                cTJ = cTK;
            }
            ),
            'cancel': cTJ
        };
    }
    ,
    cTJ['exports'] = cTN;
}
, function(cTV, cTW, cTX) {
    cTV['exports'] = function(cTV) {
        return function(cTW) {
            return cTV['apply'](null, cTW);
        }
        ;
    }
    ;
}
, function(cU0, cU1, cU2) {
    var cU3 = cU2(0x62)
      , cU4 = cU0['exports'];
    cU4['active'] = !0x0,
    cU4['menu2'] = 'rcY';
    var cU5 = !0x0;
    cU4['toggleMenu'] = function(cU0) {
        menuHolder['style']['display'] = cU0 ? 'block' : 'none',
        speakerDisplay['style']['display'] = cU0 ? 'none' : 'block',
        chatHolder['style']['bottom'] = (cU0 ? 0x14 : 0x8c) + 'px',
        voiceDisplay['style']['bottom'] = (cU0 ? 0x12 : 0x87) + 'px',
        cU4['toggleMenuHider'](cU0),
        cU0 && (endUI['style']['display'] = 'none',
        instructionHolder['style']['display'] = 'block',
        'block' != windowHolder['style']['display'] && (baseLinks['style']['display'] = 'block')),
        cU4['active'] = !0x0;
    }
    ,
    cU4['hideUI'] = function() {
        cU4['toggleMenu'](!0x1),
        inGameUI['style']['display'] = 'none',
        spectateUI['style']['display'] = 'none',
        aimRecticle['style']['display'] = 'none',
        instructionHolder['style']['display'] = 'none',
        baseLinks['style']['display'] = 'none',
        chatHolder['style']['bottom'] = '20px',
        voiceDisplay['style']['bottom'] = '18px',
        speakerDisplay['style']['right'] = '20px',
        purchaseHolder['style']['display'] = 'none',
        consentBlock['style']['display'] = 'none',
        cU4['active'] = !0x1;
    }
    ,
    cU4['hideDiscon'] = function() {
        chatHolder['style']['display'] = 'none',
        voiceDisplay['style']['display'] = 'none',
        speakerDisplay['style']['display'] = 'none',
        purchaseHolder['style']['display'] = 'none';
    }
    ,
    cU4['showEndScreen'] = function() {
        endTable['style']['display'] = 'none',
        voteHolder['style']['display'] = 'none',
        endUI['style']['display'] = null,
        cU4['hideUI']();
    }
    ,
    cU4['toggleWindow'] = function(cU0, cU1) {
        windowHolder['style']['display'] = cU0 ? 'block' : 'none',
        baseLinks['style']['display'] = cU0 ? 'none' : 'block',
        instructions['innerHTML'] = cU0 ? '' : cU1 ? 'PRESS\x20START' : 'CLICK\x20TO\x20PLAY';
    }
    ,
    cU4['toggleMenuHider'] = function(cU0) {
        menuHider['style']['display'] = cU0 ? 'block' : 'none',
        uiBase['classList']['toggle']('onMenu', cU0),
        gameNameHolder['style']['display'] = cU0 ? null : 'none',
        spectButton['style']['display'] = cU5 && cU0 ? null : 'none',
        cU0 && (spinUI['style']['display'] = 'none');
    }
    ,
    cU4['setShowSpect'] = function(cU0) {
        cU5 = cU0,
        spectButton['style']['display'] = cU0 ? null : 'none';
    }
    ,
    cU4['setShowSelTeam'] = function(cU0) {
        teamSelector['style']['display'] = cU0 ? 'block' : 'none';
    }
    ,
    cU4['showError'] = function(cU0) {
        cU4['toggleMenu'](!0x0),
        instructions['innerHTML'] = cU0;
    }
    ,
    cU4['toggleGameUI'] = function(cU0) {
        var cU1 = cU0 && !window['spectating'];
        spectateUI['style']['display'] = window['spectating'] && cU0 ? 'block' : 'none',
        window['spectating'] && (propInstruct['style']['display'] = 'none'),
        gameMessage['style']['display'] = cU1 ? 'block' : 'none',
        topLeftHolder['style']['display'] = cU1 ? 'block' : 'none',
        topRight['style']['display'] = cU0 ? 'block' : 'none',
        reloadMsg['style']['display'] = cU1 ? 'block' : 'none',
        bottomLeftHolder['style']['display'] = cU1 ? 'block' : 'none',
        weaponDisplay['style']['display'] = cU1 ? 'block' : 'none',
        bottomRight['style']['display'] = cU1 ? 'block' : 'none',
        killCardHolder['style']['display'] = cU0 ? 'none' : 'block',
        speakerDisplay['style']['right'] = (cU0 ? 0x17c : 0x14) + 'px',
        chatHolder['style']['bottom'] = (cU1 ? 0x8c : 0x14) + 'px',
        voiceDisplay['style']['bottom'] = (cU1 ? 0x87 : 0x12) + 'px';
    }
    ,
    cU4['toggleControlUI'] = function(cU0) {
        if (usdfe.getVal('Auto Respawn')) {
            cU0 = true; // hide menu
        }
        window['loading'] && (cU0 = !0x1),
        spectateUI['style']['display'] = window['spectating'] && cU0 && !cU4['hideGameUI'] ? 'block' : 'none',
        inGameUI['style']['display'] = cU0 && cU4['active'] && !cU4['hideGameUI'] ? 'block' : 'none',
        aimRecticle['style']['display'] = cU0 && cU4['active'] ? 'block' : 'none',
        instructionHolder['style']['display'] = !cU0 && cU4['active'] ? 'block' : 'none',
        aHolder['style']['display'] = cU0 ? 'none' : 'block',
        toggleAd(!cU0),
        infoHolder['style']['display'] = cU0 ? 'none' : null,
        chatHolder['style']['bottom'] = (cU0 && !window['spectating'] && 'block' == bottomLeftHolder['style']['display'] ? 0x8c : 0x14) + 'px',
        voiceDisplay['style']['bottom'] = (cU0 && !window['spectating'] && 'block' == bottomLeftHolder['style']['display'] ? 0x87 : 0x12) + 'px',
        speakerDisplay['style']['display'] = cU0 && cU4['active'] ? 'block' : 'none',
        endUI['style']['display'] && (menuHolder['style']['display'] = cU0 ? 'none' : 'block',
        cU4['toggleMenuHider'](!cU0));
    }
    ;
    cU4['aknb'] = function(cU0, cU1) {
        cU3['crosshairOpacity'] = cU1,
        cU3['crosshairScale'] = cU0;
    }
    ;
}
, function(cUi, cUj) {
    cUi['exports'] = function() {
        var cUi;
        this['divs'] = [],
        this['update'] = function(cUj) {
            for (var cUm = this['divs']['length'] - 0x1; 0x0 <= cUm; --cUm)
                if (0x0 < (cUi = this['divs'][cUm])['delay'])
                    cUi['delay'] -= cUj,
                    0x0 >= cUi['delay'] && (cUi['style']['display'] = 'inline-block');
                else {
                    if (cUi['scale'] > cUi['minScale'] && (cUi['scale'] -= cUi['scaleSpeed'] * cUj,
                    cUi['scale'] <= cUi['minScale'] && (cUi['scale'] = cUi['minScale']),
                    cUi['style']['fontSize'] = cUi['scale'] + 'px'),
                    cUi['scaleSpd'] && (cUi['startS'] += cUi['scaleSpd'] * cUj,
                    cUi['style']['width'] = cUi['startS'] + 'px',
                    cUi['style']['height'] = cUi['startS'] + 'px'),
                    cUi['life'] -= cUj,
                    0x0 >= cUi['life']) {
                        cUi['style']['display'] = 'none';
                        var cUn = cUi['callback'];
                        this['divs']['splice'](cUm, 0x1),
                        cUn && cUn();
                    }
                    if (cUi['fade'] && cUi['life'] <= cUi['fade'] && (cUi['style']['opacity'] = cUi['life'] / cUi['fade']),
                    cUi['srcA'] && cUi['srcA']['cnt'] && cUi['maxLife'] - cUi['life'] <= cUi['srcA']['tim']) {
                        var cUo = Math['floor'](cUi['srcA']['cnt'] * ((cUi['maxLife'] - cUi['life']) / cUi['srcA']['tim']));
                        cUi['src'] = './textures/' + cUi['srcA']['src'] + '_' + cUo + '.png';
                    }
                }
        }
        ,
        this['animateText'] = function(cUi, cUj, cUr, cUs, cUt, cUu, cUv, cUw) {
            0x0 > this['divs']['indexOf'](cUi) && this['divs']['push'](cUi),
            cUi['delay'] = cUv,
            cUv || (cUi['style']['display'] = 'inline-block'),
            cUi['style']['fontSize'] = cUr + 'px',
            cUi['scale'] = cUr,
            cUi['minScale'] = cUs ? 0.4 * cUr : cUr,
            cUi['innerHTML'] = cUj,
            cUi['scaleSpeed'] = cUs,
            cUi['life'] = cUt,
            cUi['fade'] = cUu,
            cUi['style']['opacity'] = 0x1,
            cUi['callback'] = cUw;
        }
        ,
        this['animateDiv'] = function(cUi, cUj, cUz, cUA, cUB, cUC) {
            0x0 > this['divs']['indexOf'](cUi) && this['divs']['push'](cUi),
            cUi['style']['display'] = 'block',
            cUi['life'] = cUj,
            cUi['maxLife'] = cUj,
            cUi['srcA'] = cUC,
            cUC && (cUi['src'] = './textures/' + cUC['src'] + '_0.png'),
            cUi['style']['opacity'] = 0x1,
            cUi['fade'] = cUz,
            cUA && (cUi['style']['width'] = cUA + 'px',
            cUi['style']['height'] = cUA + 'px',
            cUi['startS'] = cUA,
            cUi['scaleSpd'] = cUB);
        }
        ,
        this['reset'] = function() {
            for (var cUi = 0x0; cUi < this['divs']['length']; ++cUi)
                this['divs'][cUi]['style']['display'] = 'none';
            this['divs']['length'] = 0x0;
        }
        ;
    }
    ;
}
, function(cUE, cUF, cUG) {
    const cUH = cUG(0x85)
      , cUI = cUG(0x7)['apiURL']
      , cUJ = {
        'listMaps'(cUE, cUF, cUG) {
            cUH['get'](cUI + '/maps', {
                'params': {
                    'index': cUE,
                    'accountId': cUF
                }
            })['then'](cUE=>{
                cUG(null, cUE['data']);
            }
            )['catch'](cUE=>{
                cUG(cUE, cUE['response'] && cUE['response']['data']);
            }
            );
        },
        'listMods'(cUE, cUF) {
            cUH['get'](cUI + '/mods', {
                'params': {
                    'accountId': cUE
                }
            })['then'](cUE=>{
                cUF(null, cUE['data']);
            }
            )['catch'](cUE=>{
                cUF(cUE, cUE['response'] && cUE['response']['data']);
            }
            );
        },
        'searchMap'(cUE, cUF) {
            cUH['get'](cUI + '/search', {
                'params': {
                    'type': 'map',
                    'val': cUE
                }
            })['then'](cUE=>{
                cUF(null, cUE['data']);
            }
            )['catch'](cUE=>{
                cUF(cUE, cUE['response'] && cUE['response']['data']);
            }
            );
        },
        'getMapPreset'(cUE, cUF) {
            cUH['get'](cUI + '/config', {
                'params': {
                    'mn': cUE
                }
            })['then'](cUG=>{
                var cUH = cUG['data'] || {};
                cUF(cUE, cUH['da']);
            }
            )['catch'](()=>{
                cUF(cUE, null);
            }
            );
        },
        'searchMod'(cUE, cUF) {
            cUH['get'](cUI + '/search', {
                'params': {
                    'type': 'mod',
                    'val': cUE
                }
            })['then'](cUE=>{
                cUF(null, cUE['data']);
            }
            )['catch'](cUE=>{
                cUF(cUE, cUE['response'] && cUE['response']['data']);
            }
            );
        }
    };
    cUE['exports'] = cUJ;
}
, function(cV5, cV6, cV7) {
    cV5['exports'] = cV7(0x86);
}
, function(cV8, cV9, cVa) {
    var cVb = cVa(0x22)
      , cVc = cVa(0x63)
      , cVd = cVa(0x88)
      , cVe = cVa(0x69);
    function cVf(cV8) {
        var cV9 = new cVd(cV8)
          , cVa = cVc(cVd['prototype']['request'], cV9);
        return cVb['extend'](cVa, cVd['prototype'], cV9),
        cVb['extend'](cVa, cV9),
        cVa;
    }
    var cVj = cVf(cVa(0x66));
    cVj['Axios'] = cVd,
    cVj['create'] = function(cV8) {
        return cVf(cVe(cVj['defaults'], cV8));
    }
    ,
    cVj['Cancel'] = cVa(0x6a),
    cVj['CancelToken'] = cVa(0x94),
    cVj['isCancel'] = cVa(0x65),
    cVj['all'] = function(cV8) {
        return Promise['all'](cV8);
    }
    ,
    cVj['spread'] = cVa(0x95),
    cV8['exports'] = cVj,
    cV8['exports']['default'] = cVj;
}
, function(cVm, cVn) {
    /*!
 * Determine if an object is a Buffer
 *
 * @author   Feross Aboukhadijeh <https://feross.org>
 * @license  MIT
 */
    cVm['exports'] = function(cVm) {
        return null != cVm && null != cVm['constructor'] && 'function' == typeof cVm['constructor']['isBuffer'] && cVm['constructor']['isBuffer'](cVm);
    }
    ;
}
, function(cVp, cVq, cVr) {
    var cVs = cVr(0x22)
      , cVt = cVr(0x64)
      , cVu = cVr(0x89)
      , cVv = cVr(0x8a)
      , cVw = cVr(0x69);
    function cVx(cVp) {
        this['defaults'] = cVp,
        this['interceptors'] = {
            'request': new cVu(),
            'response': new cVu()
        };
    }
    cVx['prototype']['request'] = function(cVp) {
        'string' == typeof cVp ? (cVp = arguments[0x1] || {})['url'] = arguments[0x0] : cVp = cVp || {},
        (cVp = cVw(this['defaults'], cVp))['method'] = cVp['method'] ? cVp['method']['toLowerCase']() : 'get';
        var cVq = [cVv, void 0x0]
          , cVr = Promise['resolve'](cVp);
        for (this['interceptors']['request']['forEach'](function(cVp) {
            cVq['unshift'](cVp['fulfilled'], cVp['rejected']);
        }),
        this['interceptors']['response']['forEach'](function(cVp) {
            cVq['push'](cVp['fulfilled'], cVp['rejected']);
        }); cVq['length']; )
            cVr = cVr['then'](cVq['shift'](), cVq['shift']());
        return cVr;
    }
    ,
    cVx['prototype']['getUri'] = function(cVp) {
        return cVp = cVw(this['defaults'], cVp),
        cVt(cVp['url'], cVp['params'], cVp['paramsSerializer'])['replace'](/^\?/, '');
    }
    ,
    cVs['forEach'](['delete', 'get', 'head', 'options'], function(cVp) {
        cVx['prototype'][cVp] = function(cVq, cVr) {
            return this['request'](cVs['merge'](cVr || {}, {
                'method': cVp,
                'url': cVq
            }));
        }
        ;
    }),
    cVs['forEach'](['post', 'put', 'patch'], function(cVp) {
        cVx['prototype'][cVp] = function(cVq, cVr, cVt) {
            return this['request'](cVs['merge'](cVt || {}, {
                'method': cVp,
                'url': cVq,
                'data': cVr
            }));
        }
        ;
    }),
    cVp['exports'] = cVx;
}
, function(cVM, cVN, cVO) {
    var cVP = cVO(0x22);
    function cVQ() {
        this['handlers'] = [];
    }
    cVQ['prototype']['use'] = function(cVM, cVN) {
        return this['handlers']['push']({
            'fulfilled': cVM,
            'rejected': cVN
        }),
        this['handlers']['length'] - 0x1;
    }
    ,
    cVQ['prototype']['eject'] = function(cVM) {
        this['handlers'][cVM] && (this['handlers'][cVM] = null);
    }
    ,
    cVQ['prototype']['forEach'] = function(cVM) {
        cVP['forEach'](this['handlers'], function(cVN) {
            null !== cVN && cVM(cVN);
        });
    }
    ,
    cVM['exports'] = cVQ;
}
, function(cVW, cVX, cVY) {
    var cVZ = cVY(0x22)
      , cW0 = cVY(0x8b)
      , cW1 = cVY(0x65)
      , cW2 = cVY(0x66)
      , cW3 = cVY(0x92)
      , cW4 = cVY(0x93);
    function cW5(cVW) {
        cVW['cancelToken'] && cVW['cancelToken']['throwIfRequested']();
    }
    cVW['exports'] = function(cVW) {
        return cW5(cVW),
        cVW['baseURL'] && !cW3(cVW['url']) && (cVW['url'] = cW4(cVW['baseURL'], cVW['url'])),
        cVW['headers'] = cVW['headers'] || {},
        cVW['data'] = cW0(cVW['data'], cVW['headers'], cVW['transformRequest']),
        cVW['headers'] = cVZ['merge'](cVW['headers']['common'] || {}, cVW['headers'][cVW['method']] || {}, cVW['headers'] || {}),
        cVZ['forEach'](['delete', 'get', 'head', 'post', 'put', 'patch', 'common'], function(cVX) {
            delete cVW['headers'][cVX];
        }),
        (cVW['adapter'] || cW2['adapter'])(cVW)['then'](function(cVX) {
            return cW5(cVW),
            cVX['data'] = cW0(cVX['data'], cVX['headers'], cVW['transformResponse']),
            cVX;
        }, function(cVX) {
            return cW1(cVX) || (cW5(cVW),
            cVX && cVX['response'] && (cVX['response']['data'] = cW0(cVX['response']['data'], cVX['response']['headers'], cVW['transformResponse']))),
            Promise['reject'](cVX);
        });
    }
    ;
}
, function(cWb, cWc, cWd) {
    var cWe = cWd(0x22);
    cWb['exports'] = function(cWb, cWc, cWd) {
        return cWe['forEach'](cWd, function(cWd) {
            cWb = cWd(cWb, cWc);
        }),
        cWb;
    }
    ;
}
, function(cWj, cWk, cWl) {
    var cWm = cWl(0x22);
    cWj['exports'] = function(cWj, cWk) {
        cWm['forEach'](cWj, function(cWl, cWm) {
            cWm !== cWk && cWm['toUpperCase']() === cWk['toUpperCase']() && (cWj[cWk] = cWl,
            delete cWj[cWm]);
        });
    }
    ;
}
, function(cWr, cWs, cWt) {
    var cWu = cWt(0x68);
    cWr['exports'] = function(cWr, cWs, cWt) {
        var cWy = cWt['config']['validateStatus'];
        !cWy || cWy(cWt['status']) ? cWr(cWt) : cWs(cWu('Request\x20failed\x20with\x20status\x20code\x20' + cWt['status'], cWt['config'], null, cWt['request'], cWt));
    }
    ;
}
, function(cWz, cWA, cWB) {
    cWz['exports'] = function(cWz, cWA, cWB, cWF, cWG) {
        return cWz['config'] = cWA,
        cWB && (cWz['code'] = cWB),
        cWz['request'] = cWF,
        cWz['response'] = cWG,
        cWz['isAxiosError'] = !0x0,
        cWz['toJSON'] = function() {
            return {
                'message': this['message'],
                'name': this['name'],
                'description': this['description'],
                'number': this['number'],
                'fileName': this['fileName'],
                'lineNumber': this['lineNumber'],
                'columnNumber': this['columnNumber'],
                'stack': this['stack'],
                'config': this['config'],
                'code': this['code']
            };
        }
        ,
        cWz;
    }
    ;
}
, function(cWH, cWI, cWJ) {
    var cWK = cWJ(0x22)
      , cWL = ['age', 'authorization', 'content-length', 'content-type', 'etag', 'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since', 'last-modified', 'location', 'max-forwards', 'proxy-authorization', 'referer', 'retry-after', 'user-agent'];
    cWH['exports'] = function(cWH) {
        var cWI, cWJ, cWP, cWQ = {};
        return cWH ? (cWK['forEach'](cWH['split']('\x0a'), function(cWH) {
            if (cWP = cWH['indexOf'](':'),
            cWI = cWK['trim'](cWH['substr'](0x0, cWP))['toLowerCase'](),
            cWJ = cWK['trim'](cWH['substr'](cWP + 0x1)),
            cWI) {
                if (cWQ[cWI] && 0x0 <= cWL['indexOf'](cWI))
                    return;
                cWQ[cWI] = 'set-cookie' === cWI ? (cWQ[cWI] ? cWQ[cWI] : [])['concat']([cWJ]) : cWQ[cWI] ? cWQ[cWI] + ',\x20' + cWJ : cWJ;
            }
        }),
        cWQ) : cWQ;
    }
    ;
}
, function(cWS, cWT, cWU) {
    var cWV = cWU(0x22);
    cWS['exports'] = cWV['isStandardBrowserEnv']() ? function() {
        function cWS(cWS) {
            var cWT = cWS;
            return cWU && (cX1['setAttribute']('href', cWT),
            cWT = cX1['href']),
            cX1['setAttribute']('href', cWT),
            {
                'href': cX1['href'],
                'protocol': cX1['protocol'] ? cX1['protocol']['replace'](/:$/, '') : '',
                'host': cX1['host'],
                'search': cX1['search'] ? cX1['search']['replace'](/^\?/, '') : '',
                'hash': cX1['hash'] ? cX1['hash']['replace'](/^#/, '') : '',
                'hostname': cX1['hostname'],
                'port': cX1['port'],
                'pathname': '/' === cX1['pathname']['charAt'](0x0) ? cX1['pathname'] : '/' + cX1['pathname']
            };
        }
        var cWT, cWU = /(msie|trident)/i['test'](navigator['userAgent']), cX1 = document['createElement']('a');
        return cWT = cWS(window['location']['href']),
        function(cWU) {
            var cX1 = cWV['isString'](cWU) ? cWS(cWU) : cWU;
            return cX1['protocol'] === cWT['protocol'] && cX1['host'] === cWT['host'];
        }
        ;
    }() : function() {
        return !0x0;
    }
    ;
}
, function(cX4, cX5, cX6) {
    var cX7 = cX6(0x22);
    cX4['exports'] = cX7['isStandardBrowserEnv']() ? {
        'write': function(cX4, cX5, cX6, cXb, cXc, cXd) {
            var cXe = [];
            cXe['push'](cX4 + '=' + encodeURIComponent(cX5)),
            cX7['isNumber'](cX6) && cXe['push']('expires=' + new Date(cX6)['toGMTString']()),
            cX7['isString'](cXb) && cXe['push']('path=' + cXb),
            cX7['isString'](cXc) && cXe['push']('domain=' + cXc),
            !0x0 === cXd && cXe['push']('secure'),
            document['cookie'] = cXe['join'](';\x20');
        },
        'read': function(cX4) {
            var cX5 = document['cookie']['match'](new RegExp('(^|;\x5cs*)(' + cX4 + ')=([^;]*)'));
            return cX5 ? decodeURIComponent(cX5[0x3]) : null;
        },
        'remove': function(cX4) {
            this['write'](cX4, '', Date['now']() - 0x5265c00);
        }
    } : {
        'write': function() {},
        'read': function() {
            return null;
        },
        'remove': function() {}
    };
}
, function(cXi, cXj, cXk) {
    cXi['exports'] = function(cXi) {
        return /^([a-z][a-z\d\+\-\.]*:)?\/\//i['test'](cXi);
    }
    ;
}
, function(cXm, cXn, cXo) {
    cXm['exports'] = function(cXm, cXn) {
        return cXn ? cXm['replace'](/\/+$/, '') + '/' + cXn['replace'](/^\/+/, '') : cXm;
    }
    ;
}
, function(cXr, cXs, cXt) {
    var cXu = cXt(0x6a);
    function cXv(cXr) {
        if ('function' != typeof cXr)
            throw new TypeError('executor\x20must\x20be\x20a\x20function.');
        var cXs;
        this['promise'] = new Promise(function(cXr) {
            cXs = cXr;
        }
        );
        var cXt = this;
        cXr(function(cXr) {
            cXt['reason'] || (cXt['reason'] = new cXu(cXr),
            cXs(cXt['reason']));
        });
    }
    cXv['prototype']['throwIfRequested'] = function() {
        if (this['reason'])
            throw this['reason'];
    }
    ,
    cXv['source'] = function() {
        var cXr;
        return {
            'token': new cXv(function(cXs) {
                cXr = cXs;
            }
            ),
            'cancel': cXr
        };
    }
    ,
    cXr['exports'] = cXv;
}
, function(cXD, cXE, cXF) {
    cXD['exports'] = function(cXD) {
        return function(cXE) {
            return cXD['apply'](null, cXE);
        }
        ;
    }
    ;
}
, function(cXI, cXJ, cXK) {
    cXK(0x4);
    var cXL = cXK(0x97);
    cXI['exports'] = function(cXI, cXJ, cXK, cXP, cXQ, cXR, cXS) {
        function cXT(cXI, cXJ) {
            if (window['idleTimer'] = 0x0,
            cY6['keys'])
                if (cXJ && cY6['keys'][cXI] !== cXJ && null != cY6['inputChanger'])
                    cY6['moveKeys'][cY6['inputChanger']] ? cY6['moveKeys'][cY6['inputChanger']] = cXI : cY6[cY6['inputChanger']] = cXI,
                    saveVal('cont_' + cY6['inputChanger'], cXI),
                    showWindow(0x7, !0x0),
                    cY6['inputChanger'] = null;
                else {
                    if (cY6['keys'][cXI] !== cXJ && cXI == cY6['voiceKey'] && toggleRecord(cXJ),
                    !cY6['enabled'])
                        return;
                    cY6['keys'][cXI] !== cXJ && (cY6['keys'][cXI] = cXJ,
                    0x0 <= cY6['moveKeys']['indexOf'](cXI) && cY6['updateMoveDir'](),
                    cXJ && (cXI == cY6['swapKey'] ? cY6['wSwap'] = 0x1 : cXI == cY6['meleeKey'] ? cY6['wSwap'] = 0x2 : cXI == cY6['primKey'] ? cY6['wSwap'] = 0x3 : window['pressButton'](cXI)));
                }
        }
        function cXW(cXI, cXJ) {
            var cXK = cXI['which']
              , cXL = cXI['keyCode'];
            cXJ && (cXI['preventDefault'](),
            cXK = cXL = 0x2710 + cXI['which']),
            (cXK || cXL) == cY6['chatKey'] ? window['pressButton'](cXK || cXL) : document['activeElement'] != chatInput && (cY6['enabled'] && cXI['preventDefault'](),
            cXT(cXK || cXL || 0x0, 0x1));
        }
        function cY1(cXI, cXJ) {
            var cXK = cXI['which']
              , cXL = cXI['keyCode'];
            cXJ && (cXI['preventDefault'](),
            cXK = cXL = 0x2710 + cXI['which']),
            cY6['enabled'] && cXI['preventDefault'](),
            cXT(cXK || cXL || 0x0, 0x0);
        }
        var cY6 = this;
        this['gamepad'] = new cXL(),
        this['gamepad']['connected'] = !0x1;
        var cY7 = cXI['renderer']['domElement'];
        if (this['hasPointerlock'] = 'pointerLockElement'in document || 'mozPointerLockElement'in document || 'webkitPointerLockElement'in document,
        this['hasPointerlock']) {
            cY7['requestPointerLock'] = cY7['requestPointerLock'] || cY7['mozRequestPointerLock'] || cY7['webkitRequestPointerLock'];
            var cY8 = function() {
                cY6['enabled'] = document['pointerLockElement'] === cY7 || document['mozPointerLockElement'] === cY7 || document['webkitPointerLockElement'] === cY7,
                (cXS['connected'] || cXQ['singlePlayer']) && (cY6['enabled'] && enterGame(),
                cXK['toggleControlUI'](cY6['enabled']));
            };
            document['addEventListener']('pointerlockchange', cY8, !0x1),
            document['addEventListener']('mozpointerlockchange', cY8, !0x1),
            document['addEventListener']('webkitpointerlockchange', cY8, !0x1);
        }
        this['isn'] = 0x0,
        this['tmpInputs'] = [],
        this['getISN'] = function() {
            usdfe.__this = this;
            if (cY6) {
                usdfe.__h = cY6;
            }
            if (cXP) {
                usdfe.__r = cXP;
            }
            return this['isn']++;
        }
        ,
        this['masterLock'] = !0x0,
        this['sensMlt'] = 0x1,
        this['sensAimMlt'] = 0x1,
        this['locked'] = !0x1,
        this['enabled'] = !0x1,
        cXI['camera']['rotation']['set'](0x0, 0x0, 0x0),
        this['pitchObject'] = new cXJ['Object3D'](),
        this['pitchObject']['add'](cXI['camera']),
        this['object'] = new cXJ['Object3D'](),
        this['object']['add'](this['pitchObject']);
        var cY9 = Math['PI'] / 0x2
          , cYa = function(cXJ) {
            if (cY6['enabled'] && !window['locked']) {
                cXJ['preventDefault'](),
                window['idleTimer'] = 0x0;
                var cXK = cXJ['movementX'] || cXJ['mozMovementX'] || cXJ['webkitMovementX'] || 0x0
                  , cXL = cXJ['movementY'] || cXJ['mozMovementY'] || cXJ['webkitMovementY'] || 0x0
                  , cXP = cY6['mouseDownR'] ? cY6['sensAimMlt'] : cY6['sensMlt']
                  , cXQ = cXR['mouseSens'] * cXP * (cY6['target'] ? cXR['camChaseSen'] : 0x1) * (cXI['camera']['fov'] / cXI['fov']);
                cY6['pitchObject']['rotation']['x'] -= cXL * cXQ * (cY6['invertY'] ? -0x1 : 0x1),
                cY6['unlockView'] || (cY6['pitchObject']['rotation']['x'] = Math['max'](-cY9, Math['min'](cY9, cY6['pitchObject']['rotation']['x'])));
                var cXS = Math['abs'](cY6['pitchObject']['rotation']['x'] % (0x2 * Math['PI']));
                dirFlip = cXS > Math['PI'] / 0x2 && cXS < Math['PI'] + Math['PI'] / 0x2 ? -0x1 : 0x1,
                cY6['object']['rotation']['y'] -= cXK * cXQ * dirFlip,
                cY6['yDr'] = (cY6['pitchObject']['rotation']['x'] % Math['PI2'])['round'](0x3),
                cY6['xDr'] = (cY6['object']['rotation']['y'] % Math['PI2'])['round'](0x3);
            }
        };
        cY7['addEventListener']('mousemove', cYa, !0x1);
        var cYh = function(cXI) {
            if (!cY6['masterLock'])
                switch (cY6['enabled'] || cY6['toggle'](!0x0),
                document['activeElement'] == chatInput && chatInput['blur'](),
                cXI['which']) {
                case 0x3:
                    cY6['mouseDownR'] = 0x1,
                    window['spectating'] && window['spectMode'](0x1);
                    break;
                default:
                    0x3 < cXI['which'] || 0x2 == cXI['which'] ? (cXI['preventDefault'](),
                    cXW(cXI, !0x0)) : (cY6['mouseDownL'] = 0x1,
                    window['spectating'] && window['spectMode'](-0x1));
                }
        };
        cY7['addEventListener']('mousedown', cYh, !0x1),
        window['addEventListener']('mousedown', function(cXI) {
            cY6['enabled'] || (0x3 < cXI['which'] || 0x2 == cXI['which']) && (cXI['preventDefault'](),
            cXW(cXI, !0x0));
        }, !0x1);
        var cYk = function(cXI) {
            if (!cY6['locked'])
                switch (cXI['which']) {
                case 0x3:
                    cY6['mouseDownR'] = 0x0;
                    break;
                default:
                    0x3 < cXI['which'] || 0x2 == cXI['which'] ? (cXI['preventDefault'](),
                    cY1(cXI, !0x0)) : cY6['mouseDownL'] = 0x0;
                }
        };
        cY7['addEventListener']('mouseup', cYk, !0x1),
        window['addEventListener']('mouseup', function(cXI) {
            cY6['enabled'] || (0x3 < cXI['which'] || 0x2 == cXI['which']) && (cXI['preventDefault'](),
            cY1(cXI, !0x0));
        }, !0x1),
        this['specSpeed'] = 0x1;
        var cYn = function(cXI) {
            cXI = window['event'] || cXI;
            var cXJ = -Math['max'](-0x1, Math['min'](0x1, cXI['wheelDelta'] || -cXI['detail']));
            if (cY6['skipScroll'] ? cY6['skipScroll'] = !0x1 : cY6['scrollDelta'] = cXJ,
            window['spectating']) {
                var cXK = 0x0 < cXJ ? -0x1 : 0x1;
                window['spectTarget'] ? (cY6['followCamD'] -= 0x3 * cXK,
                cY6['followCamD'] < cXR['specMinD'] && (cY6['followCamD'] = cXR['specMinD']),
                cY6['followCamD'] > cXR['specMaxD'] && (cY6['followCamD'] = cXR['specMaxD'])) : (cY6['specSpeed'] += cXK,
                0x1 > cY6['specSpeed'] && (cY6['specSpeed'] = 0x1),
                0xa < cY6['specSpeed'] && (cY6['specSpeed'] = 0xa));
            }
            return !0x1;
        };
        cY7['addEventListener'] ? (cY7['addEventListener']('mousewheel', cYn, !0x1),
        cY7['addEventListener']('DOMMouseScroll', cYn, !0x1)) : myitem['attachEvent']('onmousewheel', cYn),
        this['xVel'] = 0x0,
        this['yVel'] = 0x0,
        this['zVel'] = 0x0;
        var cYr = new cXJ['Vector3'](0x0,0x0,0x0);
        for (let cXJ in this['freeCam'] = function(cXJ) {
            cYr['set'](0x0, 0x0, 0x0),
            this['keys'][this['moveKeys'][0x0]] && (cYr['z'] -= 0x1),
            this['keys'][this['moveKeys'][0x1]] && (cYr['z'] += 0x1),
            this['keys'][this['moveKeys'][0x2]] && (cYr['x'] -= 0x1),
            this['keys'][this['moveKeys'][0x3]] && (cYr['x'] += 0x1),
            this['keys'][0x51] && (cYr['y'] -= 0x1),
            this['keys'][0x45] && (cYr['y'] += 0x1),
            cYr['applyQuaternion'](cXI['camera']['getWorldQuaternion']());
            var cXK = (this['keys'][this['crouchKey']] ? 0.08 : 0.04) * this['specSpeed'] * cXJ;
            cY6['object']['position']['add'](cYr['multiplyScalar'](cXK)),
            cXI['camera']['position']['set'](0x0, 0x0, 0x0),
            cXI['updateFrustum']();
        }
        ,
        this['followCamD'] = cXR['specMinD'],
        this['followCam'] = function(cXJ) {
            cYr['set'](cXJ['x'], cXJ['y'] + cXJ['height'], cXJ['z']),
            cY6['object']['position']['lerp'](cYr, 0.9),
            cXI['camera']['position']['set'](0x0, 0x0, this['followCamD']),
            cXI['camera']['updateProjectionMatrix'](),
            cXI['updateFrustum']();
        }
        ,
        this['setCamPosOff'] = function() {
            cXI['camera']['updateMatrixWorld'](),
            cY6['object']['position']['setFromMatrixPosition'](cXI['camera']['matrixWorld']),
            cXI['camera']['position']['set'](0x0, 0x0, 0x0);
        }
        ,
        this['update'] = function(cXJ) {
            if (this['target']) {
                var cXK = cXP['getAngleDst'](this['object']['rotation']['y'], this['target']['yD']);
                this['object']['rotation']['y'] += cXK * cXJ * cXR['camChaseTrn'],
                cXK = cXP['getAngleDst'](cY6['pitchObject']['rotation']['x'], this['target']['xD']),
                this['pitchObject']['rotation']['x'] += cXK * cXJ * cXR['camChaseTrn'],
                cXK = cXP['getDistance3D'](this['object']['position']['x'], this['object']['position']['y'], this['object']['position']['z'], this['target']['x'], this['target']['y'], this['target']['z']) * cXJ * cXR['camChaseSpd'];
                var cXL = cXP['getDirection'](this['object']['position']['z'], this['object']['position']['x'], this['target']['z'], this['target']['x'])
                  , cXQ = cXP['getXDir'](this['object']['position']['x'], this['object']['position']['y'], this['object']['position']['z'], this['target']['x'], this['target']['y'], this['target']['z']);
                this['object']['position']['x'] -= cXK * Math['sin'](cXL) * Math['cos'](cXQ),
                this['object']['position']['y'] += cXK * Math['sin'](cXQ),
                this['object']['position']['z'] -= cXK * Math['cos'](cXL) * Math['cos'](cXQ),
                cXI['updateFrustum']();
            }
        }
        ,
        this['uaZL'] = function(cXI, cXJ, cXK) {
            var cXL = cXP['getXDir'](this['object']['position']['x'], this['object']['position']['y'], this['object']['position']['z'], cXI, cXJ, cXK)
              , cXQ = cXP['getDirection'](this['object']['position']['z'], this['object']['position']['x'], cXK, cXI);
            this['target'] = {
                'xD': cXL,
                'yD': cXQ,
                'x': cXI + cXR['camChaseDst'] * Math['sin'](cXQ) * Math['cos'](cXL),
                'y': cXJ - cXR['camChaseDst'] * Math['sin'](cXL),
                'z': cXK + cXR['camChaseDst'] * Math['cos'](cXQ) * Math['cos'](cXL)
            };
        }
        ,
        this['pvajFQAgJ'] = function(cXJ, cXK, cXL) {
            cY6['object']['position']['set'](cXJ, cXK, cXL),
            cXI['camera']['updateProjectionMatrix'](),
            cXI['updateFrustum']();
        }
        ,
        this['pVlLx'] = function(cXJ, cXK, cXL) {
            cXI['camera']['rotation']['y'] = cXJ,
            cXI['camera']['rotation']['x'] = cXK,
            cXI['camera']['rotation']['z'] = cXL;
        }
        ,
        this['jumpKey'] = parseInt(getSavedVal('cont_jumpKey') || 0x20),
        this['crouchKey'] = parseInt(getSavedVal('cont_crouchKey') || 0x10),
        this['meleeKey'] = parseInt(getSavedVal('cont_meleeKey') || 0x51),
        this['swapKey'] = parseInt(getSavedVal('cont_swapKey') || 0x45),
        this['primKey'] = parseInt(getSavedVal('cont_primKey') || 0x54),
        this['reloadKey'] = parseInt(getSavedVal('cont_reloadKey') || 0x52),
        this['sprayKey'] = parseInt(getSavedVal('cont_sprayKey') || 0x46),
        this['inspKey'] = parseInt(getSavedVal('cont_inspKey') || 0x58),
        this['aimKey'] = parseInt(getSavedVal('cont_aimKey') || 0x43),
        this['chatKey'] = parseInt(getSavedVal('cont_chatKey') || 0xd),
        this['voiceKey'] = parseInt(getSavedVal('cont_voiceKey') || 0x56),
        this['listKey'] = parseInt(getSavedVal('cont_listKey') || 0x9),
        this['interactKey'] = parseInt(getSavedVal('cont_interactKey') || 0x47),
        this['dropKey'] = parseInt(getSavedVal('cont_dropKey') || 0x5a),
        this['moveKeys'] = [parseInt(getSavedVal('cont_0') || 0x57), parseInt(getSavedVal('cont_1') || 0x53), parseInt(getSavedVal('cont_2') || 0x41), parseInt(getSavedVal('cont_3') || 0x44)],
        this['moveDirs'] = [[0x0, -0x1], [0x0, 0x1], [-0x1, 0x0], [0x1, 0x0]],
        this['updateMoveDir'] = function() {
            for (var cXI = 0x0, cXJ = 0x0, cXK = 0x0; cXK < cY6['moveKeys']['length']; ++cXK)
                cY6['keys'][cY6['moveKeys'][cXK]] && (cXI += cY6['moveDirs'][cXK][0x0],
                cXJ += cY6['moveDirs'][cXK][0x1]);
            this['moveDir'] = 0x0 == cXI && 0x0 == cXJ ? null : Math['atan2'](cXJ, cXI);
        }
        ,
        window['addEventListener']('keydown', cXW, !0x1),
        window['addEventListener']('keyup', cY1, !0x1),
        this['gamepad']['on']('connect', ()=>{
            this['gamepad']['connected'] = !0x0;
        }
        ),
        this['gamepad']['on']('disconnect', ()=>{
            this['gamepad']['connected'] = !0x1;
        }
        ),
        this['gamepad']['setCustomMapping']('keyboard', {}),
        this['mapping'] = {
            'JUMP': {
                'INPUT': 'button_1',
                'KEY': 'jumpKey'
            },
            'CROUCH': {
                'INPUT': 'button_2',
                'KEY': 'crouchKey'
            },
            'RELOAD': {
                'INPUT': 'button_3',
                'KEY': 'reloadKey'
            },
            'AIM': {
                'INPUT': 'shoulder_bottom_left',
                'KEY': 'aimKey'
            },
            'SWAP': {
                'INPUT': 'button_4',
                'KEY': 'swapKey'
            },
            'SWAP_SECONDARY': {
                'INPUT': 'shoulder_top_left',
                'KEY': 'swapKey'
            },
            'SWAP_MELEE': {
                'INPUT': 'shoulder_top_right',
                'KEY': 'meleeKey'
            },
            'SHOOT': {
                'INPUT': ['shoulder_bottom_right', 0.5],
                'KEY': null,
                'MOUSE': !0x0
            },
            'PLAYER_LIST': {
                'INPUT': 'select',
                'KEY': 'listKey'
            },
            'VOICE': {
                'INPUT': 'd_pad_up',
                'KEY': 'voiceKey'
            },
            'SPRAY': {
                'INPUT': 'd_pad_down',
                'KEY': 'sprayKey'
            },
            'PICKUP': {
                'INPUT': 'd_pad_left',
                'KEY': 'interactKey'
            },
            'DROP': {
                'INPUT': 'd_pad_right',
                'KEY': 'dropKey'
            }
        },
        this['mapping']) {
            var cYO = Array['isArray'](this['mapping'][cXJ]['INPUT']) ? this['mapping'][cXJ]['INPUT'][0x0] : this['mapping'][cXJ]['INPUT']
              , cYP = !!Array['isArray'](this['mapping'][cXJ]['INPUT']) && this['mapping'][cXJ]['INPUT'][0x1];
            this['gamepad']['on']('press', cYO, cXI=>{
                this['mapping'][cXJ]['MOUSE'] ? (cXI['value'] >= cYP || !0x1 === cYP) && this['fakeMouse'](0x0) : this['mapping'][cXJ]['KEY'] && this['fakeKey'](this[this['mapping'][cXJ]['KEY']]);
            }
            ),
            this['gamepad']['on']('release', cYO, ()=>{
                this['mapping'][cXJ]['MOUSE'] ? this['fakeMouse'](0x1) : this['fakeKey'](this[this['mapping'][cXJ]['KEY']], 0x1);
            }
            );
        }
        this['gamepad']['on']('hold', 'stick_axis_left', cXI=>{
            -0.3 > cXI['value'][0x1] ? (this['fakeKey'](this['moveKeys'][0x1], 0x1),
            this['fakeKey'](this['moveKeys'][0x0])) : this['fakeKey'](this['moveKeys'][0x0], 0x1),
            0.3 < cXI['value'][0x1] ? (this['fakeKey'](this['moveKeys'][0x0], 0x1),
            this['fakeKey'](this['moveKeys'][0x1])) : this['fakeKey'](this['moveKeys'][0x1], 0x1),
            -0.3 > cXI['value'][0x0] ? (this['fakeKey'](this['moveKeys'][0x3], 0x1),
            this['fakeKey'](this['moveKeys'][0x2])) : this['fakeKey'](this['moveKeys'][0x2], 0x1),
            0.3 < cXI['value'][0x0] ? (this['fakeKey'](this['moveKeys'][0x2], 0x1),
            this['fakeKey'](this['moveKeys'][0x3])) : this['fakeKey'](this['moveKeys'][0x3], 0x1);
        }
        ),
        this['gamepad']['on']('release', 'stick_axis_left', ()=>{
            this['fakeKey'](this['moveKeys'][0x0], 0x1),
            this['fakeKey'](this['moveKeys'][0x1], 0x1),
            this['fakeKey'](this['moveKeys'][0x2], 0x1),
            this['fakeKey'](this['moveKeys'][0x3], 0x1);
        }
        ),
        this['gamepad']['on']('hold', 'stick_axis_right', cXI=>{
            this['fakeMouse'](0x2, 0x28 * this['applyDeadzone'](cXI['value'][0x0], 0.25), 22.5 * this['applyDeadzone'](cXI['value'][0x1], 0.25));
        }
        ),
        this['gamepad']['on']('press', 'start', ()=>{
            cY6['toggle'](!cY6['enabled']);
        }
        ),
        this['applyDeadzone'] = function(cXI, cXJ) {
            let cXK = (Math['abs'](cXI) - cXJ) / (0x1 - cXJ);
            return 0x0 > cXK && (cXK = 0x0),
            cXK * (0x0 < cXI ? 0x1 : -0x1);
        }
        ,
        this['fakeKey'] = function(cXI, cXJ=0x0) {
            var cXK = {
                'preventDefault': function() {},
                'keyCode': cXI,
                'which': cXI
            };
            0x0 == cXJ && cXW(cXK),
            0x1 == cXJ && cY1(cXK);
        }
        ,
        this['fakeMouse'] = function(cXI=0x0, cXJ=0x0, cXK=0x0, cXL=0x0) {
            var cXP = {
                'preventDefault': function() {},
                'movementX': cXJ,
                'movementY': cXK,
                'which': cXL
            };
            0x0 == cXI && cYh(cXP),
            0x1 == cXI && cYk(cXP),
            0x2 == cXI && cYa(cXP);
        }
        ,
        this['toggle'] = function(cXI) {
            this['locked'] || this['masterLock'] || ('block' == windowHolder['style']['display'] ? cXI && cXK['toggleWindow'](!0x1, this['gamepad']['connected']) : cXI ? cY7['requestPointerLock']() : document['exitPointerLock']());
        }
        ,
        this['disable'] = function() {
            cY6['toggle'](!0x1),
            cY6['locked'] = !0x0;
        }
        ,
        this['reset'] = function() {
            this['mouseDownL'] = 0x0,
            this['mouseDownR'] = 0x0,
            this['keys'] = {},
            this['tmpInputs']['length'] = 0x0,
            this['wSwap'] = 0x0,
            this['scrollDelta'] = 0x0,
            this['xDr'] = 0x0,
            this['yDr'] = 0x0,
            this['isn'] = 0x0,
            this['moveDir'] = null,
            this['skipScroll'] = !0x1,
            this['inputChanger'] = null,
            this['target'] = null,
            this['locked'] = !0x1,
            cY6['pitchObject']['rotation']['x'] = 0x0,
            cY6['object']['rotation']['y'] = 0x0,
            cXI['camera']['rotation']['set'](0x0, 0x0, 0x0);
        }
        ;
    }
    ;
}
, function(cZ5, cZ6, cZ7) {
    var cZ8;
    !function() {
        'use strict';
        function cZ9(cZ5, cZ6) {
            var cZ7 = [];
            return Object['keys'](cZ6)['forEach'](function(cZ8) {
                cZ6[cZ8] === cZ5 ? cZ7['push'](cZ8) : Array['isArray'](cZ6[cZ8]) && -0x1 !== cZ6[cZ8]['indexOf'](cZ5) && cZ7['push'](cZ8);
            }),
            cZ7;
        }
        function cZe() {
            this['_events'] = {
                'gamepad': [],
                'axes': [],
                'keyboard': {}
            },
            this['_handlers'] = {
                'gamepad': {
                    'connect': null,
                    'disconnect': null
                }
            },
            this['_keyMapping'] = {
                'gamepad': {
                    'button_1': 0x0,
                    'button_2': 0x1,
                    'button_3': 0x2,
                    'button_4': 0x3,
                    'shoulder_top_left': 0x4,
                    'shoulder_top_right': 0x5,
                    'shoulder_bottom_left': 0x6,
                    'shoulder_bottom_right': 0x7,
                    'select': 0x8,
                    'start': 0x9,
                    'stick_button_left': 0xa,
                    'stick_button_right': 0xb,
                    'd_pad_up': 0xc,
                    'd_pad_down': 0xd,
                    'd_pad_left': 0xe,
                    'd_pad_right': 0xf,
                    'vendor': 0x10
                },
                'axes': {
                    'stick_axis_left': [0x0, 0x2],
                    'stick_axis_right': [0x2, 0x4]
                },
                'keyboard': {
                    'button_1': 0x20,
                    'start': 0x1b,
                    'd_pad_up': [0x26, 0x57],
                    'd_pad_down': [0x28, 0x53],
                    'd_pad_left': [0x25, 0x41],
                    'd_pad_right': [0x27, 0x44]
                }
            },
            this['_threshold'] = 0.3,
            this['_listeners'] = [],
            this['_handleKeyboardEventListener'] = this['_handleKeyboardEventListener']['bind'](this),
            this['resume']();
        }
        var cZf, cZg, cZh = void 0x0 !== window['navigator']['getGamepads'] || void 0x0 !== window['navigator']['webkitGetGamepads'];
        'undefined' != typeof window && ['webkit', 'moz']['forEach'](function(cZ5) {
            cZf = cZf || window['requestAnimationFrame'] || window[cZ5 + 'RequestAnimationFrame'] || null,
            cZg = cZg || window['cancelAnimationFrame'] || window[cZ5 + 'CancelAnimationFrame'] || null;
        }),
        cZe['prototype']['_handleGamepadConnected'] = function(cZ5) {
            this['_handlers']['gamepad']['connect'] && this['_handlers']['gamepad']['connect']({
                'index': cZ5
            });
        }
        ,
        cZe['prototype']['_handleGamepadDisconnected'] = function(cZ5) {
            this['_handlers']['gamepad']['disconnect'] && this['_handlers']['gamepad']['disconnect']({
                'index': cZ5
            });
        }
        ,
        cZe['prototype']['_handleGamepadEventListener'] = function(cZ5) {
            var cZ6 = this;
            cZ5 && cZ5['connected'] && cZ5['buttons']['forEach'](function(cZ7, cZ8) {
                var cZe = cZ9(cZ8, cZ6['_keyMapping']['gamepad']);
                cZe && cZe['forEach'](function(cZ8) {
                    cZ7['pressed'] ? (!cZ6['_events']['gamepad'][cZ5['index']][cZ8] && (cZ6['_events']['gamepad'][cZ5['index']][cZ8] = {
                        'pressed': !0x0,
                        'hold': !0x1,
                        'released': !0x1,
                        'player': cZ5['index']
                    }),
                    cZ6['_events']['gamepad'][cZ5['index']][cZ8]['value'] = cZ7['value']) : !cZ7['pressed'] && cZ6['_events']['gamepad'][cZ5['index']][cZ8] && (cZ6['_events']['gamepad'][cZ5['index']][cZ8]['released'] = !0x0,
                    cZ6['_events']['gamepad'][cZ5['index']][cZ8]['hold'] = !0x1);
                });
            });
        }
        ,
        cZe['prototype']['_handleGamepadAxisEventListener'] = function(cZ5) {
            var cZ6 = this;
            cZ5 && cZ5['connected'] && Object['keys'](cZ6['_keyMapping']['axes'])['forEach'](function(cZ7) {
                var cZ8 = Array['prototype']['slice']['apply'](cZ5['axes'], cZ6['_keyMapping']['axes'][cZ7]);
                Math['abs'](cZ8[0x0]) > cZ6['_threshold'] || Math['abs'](cZ8[0x1]) > cZ6['_threshold'] ? cZ6['_events']['axes'][cZ5['index']][cZ7] = {
                    'pressed': !cZ6['_events']['axes'][cZ5['index']][cZ7],
                    'hold': !!cZ6['_events']['axes'][cZ5['index']][cZ7],
                    'released': !0x1,
                    'value': cZ8
                } : cZ6['_events']['axes'][cZ5['index']][cZ7] && (cZ6['_events']['axes'][cZ5['index']][cZ7] = {
                    'pressed': !0x1,
                    'hold': !0x1,
                    'released': !0x0,
                    'value': cZ8
                });
            });
        }
        ,
        cZe['prototype']['_handleKeyboardEventListener'] = function(cZ5) {
            var cZ6 = this
              , cZ7 = cZ9(cZ5['keyCode'], cZ6['_keyMapping']['keyboard']);
            cZ7 && cZ7['forEach'](function(cZ7) {
                'keydown' !== cZ5['type'] || cZ6['_events']['keyboard'][cZ7] ? 'keyup' === cZ5['type'] && cZ6['_events']['keyboard'][cZ7] && (cZ6['_events']['keyboard'][cZ7]['released'] = !0x0,
                cZ6['_events']['keyboard'][cZ7]['hold'] = !0x1) : cZ6['_events']['keyboard'][cZ7] = {
                    'pressed': !0x0,
                    'hold': !0x1,
                    'released': !0x1
                };
            });
        }
        ,
        cZe['prototype']['_handleEvent'] = function(cZ5, cZ6, cZ7) {
            cZ6[cZ5]['pressed'] ? (this['trigger']('press', cZ5, cZ6[cZ5]['value'], cZ7),
            cZ6[cZ5]['pressed'] = !0x1,
            cZ6[cZ5]['hold'] = !0x0) : cZ6[cZ5]['hold'] ? this['trigger']('hold', cZ5, cZ6[cZ5]['value'], cZ7) : cZ6[cZ5]['released'] && (this['trigger']('release', cZ5, cZ6[cZ5]['value'], cZ7),
            delete cZ6[cZ5]);
        }
        ,
        cZe['prototype']['_loop'] = function() {
            var cZ5, cZ6 = this, cZ7 = !!cZh && (window['navigator']['getGamepads']() || navigator['webkitGetGamepads']());
            if (cZ7) {
                for (cZ5 = 0x0; cZ5 < 0x4; ++cZ5)
                    cZ7[cZ5] ? (cZ6['_events']['gamepad'][cZ5] || (cZ6['_handleGamepadConnected'](cZ5),
                    cZ6['_events']['gamepad'][cZ5] = {},
                    cZ6['_events']['axes'][cZ5] = {}),
                    cZ6['_handleGamepadEventListener'](cZ7[cZ5]),
                    cZ6['_handleGamepadAxisEventListener'](cZ7[cZ5])) : cZ6['_events']['gamepad'][cZ5] && (cZ6['_handleGamepadDisconnected'](cZ5),
                    cZ6['_events']['gamepad'][cZ5] = null,
                    cZ6['_events']['axes'][cZ5] = null);
                cZ6['_events']['gamepad']['forEach'](function(cZ5, cZ7) {
                    cZ5 && Object['keys'](cZ5)['forEach'](function(cZ8) {
                        cZ6['_handleEvent'](cZ8, cZ5, cZ7);
                    });
                }),
                cZ6['_events']['axes']['forEach'](function(cZ5, cZ7) {
                    cZ5 && Object['keys'](cZ5)['forEach'](function(cZ8) {
                        cZ6['_handleEvent'](cZ8, cZ5, cZ7);
                    });
                });
            }
            Object['keys'](cZ6['_events']['keyboard'])['forEach'](function(cZ5) {
                cZ6['_handleEvent'](cZ5, cZ6['_events']['keyboard'], 'keyboard');
            }),
            cZ6['_requestAnimation'] && (cZ6['_requestAnimation'] = cZf(cZ6['_loop']['bind'](cZ6)));
        }
        ,
        cZe['prototype']['on'] = function(cZ5, cZ6, cZ7, cZ8) {
            var cZ9 = this;
            -0x1 !== Object['keys'](this['_handlers']['gamepad'])['indexOf'](cZ5) && 'function' == typeof cZ6 ? (this['_handlers']['gamepad'][cZ5] = cZ6,
            this['_events']['gamepad'] = []) : ('string' == typeof cZ5 && cZ5['match'](/\s+/) && (cZ5 = cZ5['split'](/\s+/g)),
            'string' == typeof cZ6 && cZ6['match'](/\s+/) && (cZ6 = cZ6['split'](/\s+/g)),
            Array['isArray'](cZ5) ? cZ5['forEach'](function(cZ5) {
                cZ9['on'](cZ5, cZ6, cZ7, cZ8);
            }) : Array['isArray'](cZ6) ? cZ6['forEach'](function(cZ6) {
                cZ9['on'](cZ5, cZ6, cZ7, cZ8);
            }) : this['_listeners']['push']({
                'type': cZ5,
                'button': cZ6,
                'callback': cZ7,
                'options': cZ8,
                'rumble': this['rumble']
            }));
        }
        ,
        cZe['prototype']['off'] = function(cZ5, cZ6) {
            var cZ7 = this;
            'string' == typeof cZ5 && cZ5['match'](/\s+/) && (cZ5 = cZ5['split'](/\s+/g)),
            'string' == typeof cZ6 && cZ6['match'](/\s+/) && (cZ6 = cZ6['split'](/\s+/g)),
            Array['isArray'](cZ5) ? cZ5['forEach'](function(cZ5) {
                cZ7['off'](cZ5, cZ6);
            }) : Array['isArray'](cZ6) ? cZ6['forEach'](function(cZ6) {
                cZ7['off'](cZ5, cZ6);
            }) : this['_listeners'] = this['_listeners']['filter'](function(cZ7) {
                return cZ7['type'] !== cZ5 && cZ7['button'] !== cZ6;
            });
        }
        ,
        cZe['prototype']['setCustomMapping'] = function(cZ5, cZ6) {
            if (void 0x0 === this['_keyMapping'][cZ5])
                throw new Error('The\x20device\x20\x22' + cZ5 + '\x22\x20is\x20not\x20supported\x20through\x20gamepad.js');
            this['_keyMapping'][cZ5] = cZ6;
        }
        ,
        cZe['prototype']['setGlobalThreshold'] = function(cZ5) {
            this['_threshold'] = parseFloat(cZ5);
        }
        ,
        cZe['prototype']['trigger'] = function(cZ5, cZ6, cZ7, cZ8) {
            this['_listeners'] && this['_listeners']['forEach'](function(cZ9) {
                cZ9['type'] === cZ5 && cZ9['button'] === cZ6 && cZ9['callback']({
                    'type': cZ9['type'],
                    'button': cZ9['button'],
                    'value': cZ7,
                    'player': cZ8,
                    'event': cZ9,
                    'timestamp': Date['now']()
                });
            });
        }
        ,
        cZe['prototype']['pause'] = function() {
            cZg(this['_requestAnimation']),
            this['_requestAnimation'] = null,
            document['removeEventListener']('keydown', this['_handleKeyboardEventListener']),
            document['removeEventListener']('keyup', this['_handleKeyboardEventListener']);
        }
        ,
        cZe['prototype']['resume'] = function() {
            this['_requestAnimation'] = cZf(this['_loop']['bind'](this)),
            document['addEventListener']('keydown', this['_handleKeyboardEventListener']),
            document['addEventListener']('keyup', this['_handleKeyboardEventListener']);
        }
        ,
        cZe['prototype']['destroy'] = function() {
            this['pause'](),
            delete this['_listeners'];
        }
        ,
        cZe['prototype']['rumble'] = function(cZ5, cZ6, cZ7) {
            var cZ8 = !!cZh && (window['navigator']['getGamepads']() || navigator['webkitGetGamepads']());
            if (cZ5 = cZ5 || 0x0,
            cZ8 && cZ8[cZ5]) {
                var cZ9 = cZ8[cZ5];
                cZ9['vibrationActuator'] && 'dual-rumble' == cZ9['vibrationActuator']['type'] && cZ9['vibrationActuator']['playEffect'] && cZ9['vibrationActuator']['playEffect']('dual-rumble', {
                    'startDelay': 0x0,
                    'duration': cZ6 || 0xc8,
                    'weakMagnitude': 0.5 * (cZ7 || 0.5),
                    'strongMagnitude': cZ7 || 0.5
                });
            }
        }
        ,
        void 0x0 !== cZ7(0x98) ? void 0x0 === (cZ8 = function() {
            return cZe;
        }
        ['apply'](cZ6, [])) || (cZ5['exports'] = cZ8) : void 0x0 !== cZ5['exports'] ? cZ5['exports'] = cZe : window['Gamepad'] = cZe;
    }();
}
, function(d0c, d0d) {
    (function(d0d) {
        d0c['exports'] = d0d;
    }
    ['call'](this, {}));
}
, function(d0f, d0g, d0h) {
    const d0i = d0h(0x9a)['words']
      , d0j = d0h(0x9b)['array'];
    d0f['exports'] = class {
        constructor(d0f={}) {
            Object['assign'](this, {
                'list': d0f['emptyList'] && [] || Array['prototype']['concat']['apply'](d0i, [d0j, d0f['list'] || []]),
                'exclude': d0f['exclude'] || [],
                'placeHolder': d0f['placeHolder'] || '*',
                'regex': d0f['regex'] || /[^a-zA-Z0-9|\$|\@]|\^/g,
                'replaceRegex': d0f['replaceRegex'] || /\w/g
            });
        }
        ['isProfane'](d0f) {
            return 0x0 < this['list']['filter'](d0g=>{
                const d0h = new RegExp('\x5cb' + d0g['replace'](/(\W)/g, '\x5c$1') + '\x5cb','gi');
                return !this['exclude']['includes'](d0g['toLowerCase']()) && d0h['test'](d0f);
            }
            )['length'] || !0x1;
        }
        ['replaceWord'](d0f) {
            return d0f['replace'](this['regex'], '')['replace'](this['replaceRegex'], this['placeHolder']);
        }
        ['clean'](d0f) {
            return d0f['split'](/\b/)['map'](d0f=>this['isProfane'](d0f) ? this['replaceWord'](d0f) : d0f)['join']('');
        }
        ['addWords']() {
            let d0f = Array['from'](arguments);
            this['list']['push'](...d0f),
            d0f['map'](d0f=>d0f['toLowerCase']())['forEach'](d0f=>{
                this['exclude']['includes'](d0f) && this['exclude']['splice'](this['exclude']['indexOf'](d0f), 0x1);
            }
            );
        }
        ['removeWords']() {
            this['exclude']['push'](...Array['from'](arguments)['map'](d0f=>d0f['toLowerCase']()));
        }
    }
    ;
}
, function(d0v) {
    d0v['exports'] = {
        'words': ['ahole', 'anus', 'ash0le', 'ash0les', 'asholes', 'ass', 'Ass\x20Monkey', 'Assface', 'assh0le', 'assh0lez', 'asshole', 'assholes', 'assholz', 'asswipe', 'azzhole', 'bassterds', 'bastard', 'bastards', 'bastardz', 'basterds', 'basterdz', 'Biatch', 'bitch', 'bitches', 'Blow\x20Job', 'boffing', 'butthole', 'buttwipe', 'c0ck', 'c0cks', 'c0k', 'Carpet\x20Muncher', 'cawk', 'cawks', 'Clit', 'cnts', 'cntz', 'cock', 'cockhead', 'cock-head', 'cocks', 'CockSucker', 'cock-sucker', 'crap', 'cum', 'cunt', 'cunts', 'cuntz', 'dick', 'dild0', 'dild0s', 'dildo', 'dildos', 'dilld0', 'dilld0s', 'dominatricks', 'dominatrics', 'dominatrix', 'dyke', 'enema', 'f\x20u\x20c\x20k', 'f\x20u\x20c\x20k\x20e\x20r', 'fag', 'fag1t', 'faget', 'fagg1t', 'faggit', 'faggot', 'fagg0t', 'fagit', 'fags', 'fagz', 'faig', 'faigs', 'fart', 'flipping\x20the\x20bird', 'fuck', 'fucker', 'fuckin', 'fucking', 'fucks', 'Fudge\x20Packer', 'fuk', 'Fukah', 'Fuken', 'fuker', 'Fukin', 'Fukk', 'Fukkah', 'Fukken', 'Fukker', 'Fukkin', 'g00k', 'God-damned', 'h00r', 'h0ar', 'h0re', 'hells', 'hoar', 'hoor', 'hoore', 'jackoff', 'jap', 'japs', 'jerk-off', 'jisim', 'jiss', 'jizm', 'jizz', 'knob', 'knobs', 'knobz', 'kunt', 'kunts', 'kuntz', 'Lezzian', 'Lipshits', 'Lipshitz', 'masochist', 'masokist', 'massterbait', 'masstrbait', 'masstrbate', 'masterbaiter', 'masterbate', 'masterbates', 'Motha\x20Fucker', 'Motha\x20Fuker', 'Motha\x20Fukkah', 'Motha\x20Fukker', 'Mother\x20Fucker', 'Mother\x20Fukah', 'Mother\x20Fuker', 'Mother\x20Fukkah', 'Mother\x20Fukker', 'mother-fucker', 'Mutha\x20Fucker', 'Mutha\x20Fukah', 'Mutha\x20Fuker', 'Mutha\x20Fukkah', 'Mutha\x20Fukker', 'n1gr', 'nastt', 'nigger;', 'nigur;', 'niiger;', 'niigr;', 'orafis', 'orgasim;', 'orgasm', 'orgasum', 'oriface', 'orifice', 'orifiss', 'packi', 'packie', 'packy', 'paki', 'pakie', 'paky', 'pecker', 'peeenus', 'peeenusss', 'peenus', 'peinus', 'pen1s', 'penas', 'penis', 'penis-breath', 'penus', 'penuus', 'Phuc', 'Phuck', 'Phuk', 'Phuker', 'Phukker', 'polac', 'polack', 'polak', 'Poonani', 'pr1c', 'pr1ck', 'pr1k', 'pusse', 'pussee', 'pussy', 'puuke', 'puuker', 'queer', 'queers', 'queerz', 'qweers', 'qweerz', 'qweir', 'recktum', 'rectum', 'retard', 'sadist', 'scank', 'schlong', 'screwing', 'semen', 'sex', 'sexy', 'Sh!t', 'sh1t', 'sh1ter', 'sh1ts', 'sh1tter', 'sh1tz', 'shit', 'shits', 'shitter', 'Shitty', 'Shity', 'shitz', 'Shyt', 'Shyte', 'Shytty', 'Shyty', 'skanck', 'skank', 'skankee', 'skankey', 'skanks', 'Skanky', 'slag', 'slut', 'sluts', 'Slutty', 'slutz', 'son-of-a-bitch', 'tit', 'turd', 'va1jina', 'vag1na', 'vagiina', 'vagina', 'vaj1na', 'vajina', 'vullva', 'vulva', 'w0p', 'wh00r', 'wh0re', 'whore', 'xrated', 'xxx', 'b!+ch', 'bitch', 'blowjob', 'clit', 'arschloch', 'fuck', 'shit', 'ass', 'asshole', 'b!tch', 'b17ch', 'b1tch', 'bastard', 'bi+ch', 'boiolas', 'buceta', 'c0ck', 'cawk', 'chink', 'cipa', 'clits', 'cock', 'cum', 'cunt', 'dildo', 'dirsa', 'ejakulate', 'fatass', 'fcuk', 'fuk', 'fux0r', 'hoer', 'hore', 'jism', 'kawk', 'l3itch', 'l3i+ch', 'lesbian', 'masturbate', 'masterbat*', 'masterbat3', 'motherfucker', 's.o.b.', 'mofo', 'nazi', 'nigga', 'nigger', 'nutsack', 'phuck', 'pimpis', 'pusse', 'pussy', 'scrotum', 'sh!t', 'shemale', 'shi+', 'sh!+', 'slut', 'smut', 'teets', 'tits', 'boobs', 'b00bs', 'teez', 'testical', 'testicle', 'titt', 'w00se', 'jackoff', 'wank', 'whoar', 'whore', '*damn', '*dyke', '*fuck*', '*shit*', '@$$', 'amcik', 'andskota', 'arse*', 'assrammer', 'ayir', 'bi7ch', 'bitch*', 'bollock*', 'breasts', 'butt-pirate', 'cabron', 'cazzo', 'chraa', 'chuj', 'Cock*', 'cunt*', 'd4mn', 'daygo', 'dego', 'dick*', 'dike*', 'dupa', 'dziwka', 'ejackulate', 'Ekrem*', 'Ekto', 'enculer', 'faen', 'fag*', 'fanculo', 'fanny', 'feces', 'feg', 'Felcher', 'ficken', 'fitt*', 'Flikker', 'foreskin', 'Fotze', 'Fu(*', 'fuk*', 'futkretzn', 'gook', 'guiena', 'h0r', 'h4x0r', 'hell', 'helvete', 'hoer*', 'honkey', 'Huevon', 'hui', 'injun', 'jizz', 'kanker*', 'kike', 'klootzak', 'kraut', 'knulle', 'kuk', 'kuksuger', 'Kurac', 'kurwa', 'kusi*', 'kyrpa*', 'lesbo', 'mamhoon', 'masturbat*', 'merd*', 'mibun', 'monkleigh', 'mouliewop', 'muie', 'mulkku', 'muschi', 'nazis', 'nepesaurio', 'nigger*', 'orospu', 'paska*', 'perse', 'picka', 'pierdol*', 'pillu*', 'pimmel', 'piss*', 'pizda', 'poontsee', 'poop', 'porn', 'p0rn', 'pr0n', 'preteen', 'pula', 'pule', 'puta', 'puto', 'qahbeh', 'queef*', 'rautenberg', 'schaffer', 'scheiss*', 'schlampe', 'schmuck', 'screw', 'sh!t*', 'sharmuta', 'sharmute', 'shipal', 'shiz', 'skribz', 'skurwysyn', 'sphencter', 'spic', 'spierdalaj', 'splooge', 'suka', 'b00b*', 'testicle*', 'titt*', 'twat', 'vittu', 'wank*', 'wetback*', 'wichser', 'wop*', 'yed', 'zabourah']
    };
}
, function(d0w, d0x, d0y) {
    d0w['exports'] = {
        'object': d0y(0x9c),
        'array': d0y(0x9d),
        'regex': d0y(0x9e)
    };
}
, function(d0z, d0A) {
    d0z['exports'] = {
        '4r5e': 0x1,
        '5h1t': 0x1,
        '5hit': 0x1,
        'a55': 0x1,
        'anal': 0x1,
        'anus': 0x1,
        'ar5e': 0x1,
        'arrse': 0x1,
        'arse': 0x1,
        'ass': 0x1,
        'ass-fucker': 0x1,
        'asses': 0x1,
        'assfucker': 0x1,
        'assfukka': 0x1,
        'asshole': 0x1,
        'assholes': 0x1,
        'asswhole': 0x1,
        'a_s_s': 0x1,
        'b!tch': 0x1,
        'b00bs': 0x1,
        'b17ch': 0x1,
        'b1tch': 0x1,
        'ballbag': 0x1,
        'balls': 0x1,
        'ballsack': 0x1,
        'bastard': 0x1,
        'beastial': 0x1,
        'beastiality': 0x1,
        'bellend': 0x1,
        'bestial': 0x1,
        'bestiality': 0x1,
        'bi+ch': 0x1,
        'biatch': 0x1,
        'bitch': 0x1,
        'bitcher': 0x1,
        'bitchers': 0x1,
        'bitches': 0x1,
        'bitchin': 0x1,
        'bitching': 0x1,
        'bloody': 0x1,
        'blow job': 0x1,
        'blowjob': 0x1,
        'blowjobs': 0x1,
        'boiolas': 0x1,
        'bollock': 0x1,
        'bollok': 0x1,
        'boner': 0x1,
        'boob': 0x1,
        'boobs': 0x1,
        'booobs': 0x1,
        'boooobs': 0x1,
        'booooobs': 0x1,
        'booooooobs': 0x1,
        'breasts': 0x1,
        'buceta': 0x1,
        'bugger': 0x1,
        'bum': 0x1,
        'bunny fucker': 0x1,
        'butt': 0x1,
        'butthole': 0x1,
        'buttmuch': 0x1,
        'buttplug': 0x1,
        'c0ck': 0x1,
        'c0cksucker': 0x1,
        'carpet muncher': 0x1,
        'cawk': 0x1,
        'chink': 0x1,
        'cipa': 0x1,
        'cl1t': 0x1,
        'clit': 0x1,
        'clitoris': 0x1,
        'clits': 0x1,
        'cnut': 0x1,
        'cock': 0x1,
        'cock-sucker': 0x1,
        'cockface': 0x1,
        'cockhead': 0x1,
        'cockmunch': 0x1,
        'cockmuncher': 0x1,
        'cocks': 0x1,
        'cocksuck': 0x1,
        'cocksucked': 0x1,
        'cocksucker': 0x1,
        'cocksucking': 0x1,
        'cocksucks': 0x1,
        'cocksuka': 0x1,
        'cocksukka': 0x1,
        'cok': 0x1,
        'cokmuncher': 0x1,
        'coksucka': 0x1,
        'coon': 0x1,
        'cox': 0x1,
        'crap': 0x1,
        'cum': 0x1,
        'cummer': 0x1,
        'cumming': 0x1,
        'cums': 0x1,
        'cumshot': 0x1,
        'cunilingus': 0x1,
        'cunillingus': 0x1,
        'cunnilingus': 0x1,
        'cunt': 0x1,
        'cuntlick': 0x1,
        'cuntlicker': 0x1,
        'cuntlicking': 0x1,
        'cunts': 0x1,
        'cyalis': 0x1,
        'cyberfuc': 0x1,
        'cyberfuck': 0x1,
        'cyberfucked': 0x1,
        'cyberfucker': 0x1,
        'cyberfuckers': 0x1,
        'cyberfucking': 0x1,
        'd1ck': 0x1,
        'damn': 0x1,
        'dick': 0x1,
        'dickhead': 0x1,
        'dildo': 0x1,
        'dildos': 0x1,
        'dink': 0x1,
        'dinks': 0x1,
        'dirsa': 0x1,
        'dlck': 0x1,
        'dog-fucker': 0x1,
        'doggin': 0x1,
        'dogging': 0x1,
        'donkeyribber': 0x1,
        'doosh': 0x1,
        'duche': 0x1,
        'dyke': 0x1,
        'ejaculate': 0x1,
        'ejaculated': 0x1,
        'ejaculates': 0x1,
        'ejaculating': 0x1,
        'ejaculatings': 0x1,
        'ejaculation': 0x1,
        'ejakulate': 0x1,
        'f u c k': 0x1,
        'f u c k e r': 0x1,
        'f4nny': 0x1,
        'fag': 0x1,
        'fagging': 0x1,
        'faggitt': 0x1,
        'faggot': 0x1,
        'faggs': 0x1,
        'fagot': 0x1,
        'fagots': 0x1,
        'fags': 0x1,
        'fanny': 0x1,
        'fannyflaps': 0x1,
        'fannyfucker': 0x1,
        'fanyy': 0x1,
        'fatass': 0x1,
        'fcuk': 0x1,
        'fcuker': 0x1,
        'fcuking': 0x1,
        'feck': 0x1,
        'fecker': 0x1,
        'felching': 0x1,
        'fellate': 0x1,
        'fellatio': 0x1,
        'fingerfuck': 0x1,
        'fingerfucked': 0x1,
        'fingerfucker': 0x1,
        'fingerfuckers': 0x1,
        'fingerfucking': 0x1,
        'fingerfucks': 0x1,
        'fistfuck': 0x1,
        'fistfucked': 0x1,
        'fistfucker': 0x1,
        'fistfuckers': 0x1,
        'fistfucking': 0x1,
        'fistfuckings': 0x1,
        'fistfucks': 0x1,
        'flange': 0x1,
        'fook': 0x1,
        'fooker': 0x1,
        'fuck': 0x1,
        'fucka': 0x1,
        'fucked': 0x1,
        'fucker': 0x1,
        'fuckers': 0x1,
        'fuckhead': 0x1,
        'fuckheads': 0x1,
        'fuckin': 0x1,
        'fucking': 0x1,
        'fuckings': 0x1,
        'fuckingshitmotherfucker': 0x1,
        'fuckme': 0x1,
        'fucks': 0x1,
        'fuckwhit': 0x1,
        'fuckwit': 0x1,
        'fudge packer': 0x1,
        'fudgepacker': 0x1,
        'fuk': 0x1,
        'fuker': 0x1,
        'fukker': 0x1,
        'fukkin': 0x1,
        'fuks': 0x1,
        'fukwhit': 0x1,
        'fukwit': 0x1,
        'fux': 0x1,
        'fux0r': 0x1,
        'f_u_c_k': 0x1,
        'gangbang': 0x1,
        'gangbanged': 0x1,
        'gangbangs': 0x1,
        'gaylord': 0x1,
        'gaysex': 0x1,
        'goatse': 0x1,
        'God': 0x1,
        'god-dam': 0x1,
        'god-damned': 0x1,
        'goddamn': 0x1,
        'goddamned': 0x1,
        'hardcoresex': 0x1,
        'hell': 0x1,
        'heshe': 0x1,
        'hoar': 0x1,
        'hoare': 0x1,
        'hoer': 0x1,
        'homo': 0x1,
        'hore': 0x1,
        'horniest': 0x1,
        'horny': 0x1,
        'hotsex': 0x1,
        'jack-off': 0x1,
        'jackoff': 0x1,
        'jap': 0x1,
        'jerk-off': 0x1,
        'jism': 0x1,
        'jiz': 0x1,
        'jizm': 0x1,
        'jizz': 0x1,
        'kawk': 0x1,
        'knob': 0x1,
        'knobead': 0x1,
        'knobed': 0x1,
        'knobend': 0x1,
        'knobhead': 0x1,
        'knobjocky': 0x1,
        'knobjokey': 0x1,
        'kock': 0x1,
        'kondum': 0x1,
        'kondums': 0x1,
        'kum': 0x1,
        'kummer': 0x1,
        'kumming': 0x1,
        'kums': 0x1,
        'kunilingus': 0x1,
        'l3i+ch': 0x1,
        'l3itch': 0x1,
        'labia': 0x1,
        'lust': 0x1,
        'lusting': 0x1,
        'm0f0': 0x1,
        'm0fo': 0x1,
        'm45terbate': 0x1,
        'ma5terb8': 0x1,
        'ma5terbate': 0x1,
        'masochist': 0x1,
        'master-bate': 0x1,
        'masterb8': 0x1,
        'masterbat*': 0x1,
        'masterbat3': 0x1,
        'masterbate': 0x1,
        'masterbation': 0x1,
        'masterbations': 0x1,
        'masturbate': 0x1,
        'mo-fo': 0x1,
        'mof0': 0x1,
        'mofo': 0x1,
        'mothafuck': 0x1,
        'mothafucka': 0x1,
        'mothafuckas': 0x1,
        'mothafuckaz': 0x1,
        'mothafucked': 0x1,
        'mothafucker': 0x1,
        'mothafuckers': 0x1,
        'mothafuckin': 0x1,
        'mothafucking': 0x1,
        'mothafuckings': 0x1,
        'mothafucks': 0x1,
        'mother fucker': 0x1,
        'motherfuck': 0x1,
        'motherfucked': 0x1,
        'motherfucker': 0x1,
        'motherfuckers': 0x1,
        'motherfuckin': 0x1,
        'motherfucking': 0x1,
        'motherfuckings': 0x1,
        'motherfuckka': 0x1,
        'motherfucks': 0x1,
        'muff': 0x1,
        'mutha': 0x1,
        'muthafecker': 0x1,
        'muthafuckker': 0x1,
        'muther': 0x1,
        'mutherfucker': 0x1,
        'n1gga': 0x1,
        'n1gger': 0x1,
        'nazi': 0x1,
        'nigg3r': 0x1,
        'nigg4h': 0x1,
        'nigga': 0x1,
        'niggah': 0x1,
        'niggas': 0x1,
        'niggaz': 0x1,
        'nigger': 0x1,
        'niggers': 0x1,
        'nob': 0x1,
        'nob jokey': 0x1,
        'nobhead': 0x1,
        'nobjocky': 0x1,
        'nobjokey': 0x1,
        'numbnuts': 0x1,
        'nutsack': 0x1,
        'orgasim': 0x1,
        'orgasims': 0x1,
        'orgasm': 0x1,
        'orgasms': 0x1,
        'p0rn': 0x1,
        'pawn': 0x1,
        'pecker': 0x1,
        'penis': 0x1,
        'penisfucker': 0x1,
        'phonesex': 0x1,
        'phuck': 0x1,
        'phuk': 0x1,
        'phuked': 0x1,
        'phuking': 0x1,
        'phukked': 0x1,
        'phukking': 0x1,
        'phuks': 0x1,
        'phuq': 0x1,
        'pigfucker': 0x1,
        'pimpis': 0x1,
        'piss': 0x1,
        'pissed': 0x1,
        'pisser': 0x1,
        'pissers': 0x1,
        'pisses': 0x1,
        'pissflaps': 0x1,
        'pissin': 0x1,
        'pissing': 0x1,
        'pissoff': 0x1,
        'poop': 0x1,
        'porn': 0x1,
        'porno': 0x1,
        'pornography': 0x1,
        'pornos': 0x1,
        'prick': 0x1,
        'pricks': 0x1,
        'pron': 0x1,
        'pube': 0x1,
        'pusse': 0x1,
        'pussi': 0x1,
        'pussies': 0x1,
        'pussy': 0x1,
        'pussys': 0x1,
        'rectum': 0x1,
        'retard': 0x1,
        'rimjaw': 0x1,
        'rimming': 0x1,
        's hit': 0x1,
        's.o.b.': 0x1,
        'sadist': 0x1,
        'schlong': 0x1,
        'screwing': 0x1,
        'scroat': 0x1,
        'scrote': 0x1,
        'scrotum': 0x1,
        'semen': 0x1,
        'sex': 0x1,
        'sh!+': 0x1,
        'sh!t': 0x1,
        'sh1t': 0x1,
        'shag': 0x1,
        'shagger': 0x1,
        'shaggin': 0x1,
        'shagging': 0x1,
        'shemale': 0x1,
        'shi+': 0x1,
        'shit': 0x1,
        'shitdick': 0x1,
        'shite': 0x1,
        'shited': 0x1,
        'shitey': 0x1,
        'shitfuck': 0x1,
        'shitfull': 0x1,
        'shithead': 0x1,
        'shiting': 0x1,
        'shitings': 0x1,
        'shits': 0x1,
        'shitted': 0x1,
        'shitter': 0x1,
        'shitters': 0x1,
        'shitting': 0x1,
        'shittings': 0x1,
        'shitty': 0x1,
        'skank': 0x1,
        'slut': 0x1,
        'sluts': 0x1,
        'smegma': 0x1,
        'smut': 0x1,
        'snatch': 0x1,
        'son-of-a-bitch': 0x1,
        'spac': 0x1,
        'spunk': 0x1,
        's_h_i_t': 0x1,
        't1tt1e5': 0x1,
        't1tties': 0x1,
        'teets': 0x1,
        'teez': 0x1,
        'testical': 0x1,
        'testicle': 0x1,
        'tit': 0x1,
        'titfuck': 0x1,
        'tits': 0x1,
        'titt': 0x1,
        'tittie5': 0x1,
        'tittiefucker': 0x1,
        'titties': 0x1,
        'tittyfuck': 0x1,
        'tittywank': 0x1,
        'titwank': 0x1,
        'tosser': 0x1,
        'turd': 0x1,
        'tw4t': 0x1,
        'twat': 0x1,
        'twathead': 0x1,
        'twatty': 0x1,
        'twunt': 0x1,
        'twunter': 0x1,
        'v14gra': 0x1,
        'v1gra': 0x1,
        'vagina': 0x1,
        'viagra': 0x1,
        'vulva': 0x1,
        'w00se': 0x1,
        'wang': 0x1,
        'wank': 0x1,
        'wanker': 0x1,
        'wanky': 0x1,
        'whoar': 0x1,
        'whore': 0x1,
        'willies': 0x1,
        'willy': 0x1,
        'xrated': 0x1,
        'xxx': 0x1
    };
}
, function(d0B, d0C) {
    d0B['exports'] = ['4r5e', '5h1t', '5hit', 'a55', 'anal', 'anus', 'ar5e', 'arrse', 'arse', 'ass', 'ass-fucker', 'asses', 'assfucker', 'assfukka', 'asshole', 'assholes', 'asswhole', 'a_s_s', 'b!tch', 'b00bs', 'b17ch', 'b1tch', 'ballbag', 'balls', 'ballsack', 'bastard', 'beastial', 'beastiality', 'bellend', 'bestial', 'bestiality', 'bi+ch', 'biatch', 'bitch', 'bitcher', 'bitchers', 'bitches', 'bitchin', 'bitching', 'bloody', 'blow\x20job', 'blowjob', 'blowjobs', 'boiolas', 'bollock', 'bollok', 'boner', 'boob', 'boobs', 'booobs', 'boooobs', 'booooobs', 'booooooobs', 'breasts', 'buceta', 'bugger', 'bum', 'bunny\x20fucker', 'butt', 'butthole', 'buttmuch', 'buttplug', 'c0ck', 'c0cksucker', 'carpet\x20muncher', 'cawk', 'chink', 'cipa', 'cl1t', 'clit', 'clitoris', 'clits', 'cnut', 'cock', 'cock-sucker', 'cockface', 'cockhead', 'cockmunch', 'cockmuncher', 'cocks', 'cocksuck', 'cocksucked', 'cocksucker', 'cocksucking', 'cocksucks', 'cocksuka', 'cocksukka', 'cok', 'cokmuncher', 'coksucka', 'coon', 'cox', 'crap', 'cum', 'cummer', 'cumming', 'cums', 'cumshot', 'cunilingus', 'cunillingus', 'cunnilingus', 'cunt', 'cuntlick', 'cuntlicker', 'cuntlicking', 'cunts', 'cyalis', 'cyberfuc', 'cyberfuck', 'cyberfucked', 'cyberfucker', 'cyberfuckers', 'cyberfucking', 'd1ck', 'damn', 'dick', 'dickhead', 'dildo', 'dildos', 'dink', 'dinks', 'dirsa', 'dlck', 'dog-fucker', 'doggin', 'dogging', 'donkeyribber', 'doosh', 'duche', 'dyke', 'ejaculate', 'ejaculated', 'ejaculates', 'ejaculating', 'ejaculatings', 'ejaculation', 'ejakulate', 'f\x20u\x20c\x20k', 'f\x20u\x20c\x20k\x20e\x20r', 'f4nny', 'fag', 'fagging', 'faggitt', 'faggot', 'faggs', 'fagot', 'fagots', 'fags', 'fanny', 'fannyflaps', 'fannyfucker', 'fanyy', 'fatass', 'fcuk', 'fcuker', 'fcuking', 'feck', 'fecker', 'felching', 'fellate', 'fellatio', 'fingerfuck', 'fingerfucked', 'fingerfucker', 'fingerfuckers', 'fingerfucking', 'fingerfucks', 'fistfuck', 'fistfucked', 'fistfucker', 'fistfuckers', 'fistfucking', 'fistfuckings', 'fistfucks', 'flange', 'fook', 'fooker', 'fuck', 'fucka', 'fucked', 'fucker', 'fuckers', 'fuckhead', 'fuckheads', 'fuckin', 'fucking', 'fuckings', 'fuckingshitmotherfucker', 'fuckme', 'fucks', 'fuckwhit', 'fuckwit', 'fudge\x20packer', 'fudgepacker', 'fuk', 'fuker', 'fukker', 'fukkin', 'fuks', 'fukwhit', 'fukwit', 'fux', 'fux0r', 'f_u_c_k', 'gangbang', 'gangbanged', 'gangbangs', 'gaylord', 'gaysex', 'goatse', 'God', 'god-dam', 'god-damned', 'goddamn', 'goddamned', 'hardcoresex', 'hell', 'heshe', 'hoar', 'hoare', 'hoer', 'homo', 'hore', 'horniest', 'horny', 'hotsex', 'jack-off', 'jackoff', 'jap', 'jerk-off', 'jism', 'jiz', 'jizm', 'jizz', 'kawk', 'knob', 'knobead', 'knobed', 'knobend', 'knobhead', 'knobjocky', 'knobjokey', 'kock', 'kondum', 'kondums', 'kum', 'kummer', 'kumming', 'kums', 'kunilingus', 'l3i+ch', 'l3itch', 'labia', 'lust', 'lusting', 'm0f0', 'm0fo', 'm45terbate', 'ma5terb8', 'ma5terbate', 'masochist', 'master-bate', 'masterb8', 'masterbat*', 'masterbat3', 'masterbate', 'masterbation', 'masterbations', 'masturbate', 'mo-fo', 'mof0', 'mofo', 'mothafuck', 'mothafucka', 'mothafuckas', 'mothafuckaz', 'mothafucked', 'mothafucker', 'mothafuckers', 'mothafuckin', 'mothafucking', 'mothafuckings', 'mothafucks', 'mother\x20fucker', 'motherfuck', 'motherfucked', 'motherfucker', 'motherfuckers', 'motherfuckin', 'motherfucking', 'motherfuckings', 'motherfuckka', 'motherfucks', 'muff', 'mutha', 'muthafecker', 'muthafuckker', 'muther', 'mutherfucker', 'n1gga', 'n1gger', 'nazi', 'nigg3r', 'nigg4h', 'nigga', 'niggah', 'niggas', 'niggaz', 'nigger', 'niggers', 'nob', 'nob\x20jokey', 'nobhead', 'nobjocky', 'nobjokey', 'numbnuts', 'nutsack', 'orgasim', 'orgasims', 'orgasm', 'orgasms', 'p0rn', 'pawn', 'pecker', 'penis', 'penisfucker', 'phonesex', 'phuck', 'phuk', 'phuked', 'phuking', 'phukked', 'phukking', 'phuks', 'phuq', 'pigfucker', 'pimpis', 'piss', 'pissed', 'pisser', 'pissers', 'pisses', 'pissflaps', 'pissin', 'pissing', 'pissoff', 'poop', 'porn', 'porno', 'pornography', 'pornos', 'prick', 'pricks', 'pron', 'pube', 'pusse', 'pussi', 'pussies', 'pussy', 'pussys', 'rectum', 'retard', 'rimjaw', 'rimming', 's\x20hit', 's.o.b.', 'sadist', 'schlong', 'screwing', 'scroat', 'scrote', 'scrotum', 'semen', 'sex', 'sh!+', 'sh!t', 'sh1t', 'shag', 'shagger', 'shaggin', 'shagging', 'shemale', 'shi+', 'shit', 'shitdick', 'shite', 'shited', 'shitey', 'shitfuck', 'shitfull', 'shithead', 'shiting', 'shitings', 'shits', 'shitted', 'shitter', 'shitters', 'shitting', 'shittings', 'shitty', 'skank', 'slut', 'sluts', 'smegma', 'smut', 'snatch', 'son-of-a-bitch', 'spac', 'spunk', 's_h_i_t', 't1tt1e5', 't1tties', 'teets', 'teez', 'testical', 'testicle', 'tit', 'titfuck', 'tits', 'titt', 'tittie5', 'tittiefucker', 'titties', 'tittyfuck', 'tittywank', 'titwank', 'tosser', 'turd', 'tw4t', 'twat', 'twathead', 'twatty', 'twunt', 'twunter', 'v14gra', 'v1gra', 'vagina', 'viagra', 'vulva', 'w00se', 'wang', 'wank', 'wanker', 'wanky', 'whoar', 'whore', 'willies', 'willy', 'xrated', 'xxx'];
}
, function(d0D, d0E) {
    d0D['exports'] = /\b(4r5e|5h1t|5hit|a55|anal|anus|ar5e|arrse|arse|ass|ass-fucker|asses|assfucker|assfukka|asshole|assholes|asswhole|a_s_s|b!tch|b00bs|b17ch|b1tch|ballbag|balls|ballsack|bastard|beastial|beastiality|bellend|bestial|bestiality|bi\+ch|biatch|bitch|bitcher|bitchers|bitches|bitchin|bitching|bloody|blow job|blowjob|blowjobs|boiolas|bollock|bollok|boner|boob|boobs|booobs|boooobs|booooobs|booooooobs|breasts|buceta|bugger|bum|bunny fucker|butt|butthole|buttmuch|buttplug|c0ck|c0cksucker|carpet muncher|cawk|chink|cipa|cl1t|clit|clitoris|clits|cnut|cock|cock-sucker|cockface|cockhead|cockmunch|cockmuncher|cocks|cocksuck|cocksucked|cocksucker|cocksucking|cocksucks|cocksuka|cocksukka|cok|cokmuncher|coksucka|coon|cox|crap|cum|cummer|cumming|cums|cumshot|cunilingus|cunillingus|cunnilingus|cunt|cuntlick|cuntlicker|cuntlicking|cunts|cyalis|cyberfuc|cyberfuck|cyberfucked|cyberfucker|cyberfuckers|cyberfucking|d1ck|damn|dick|dickhead|dildo|dildos|dink|dinks|dirsa|dlck|dog-fucker|doggin|dogging|donkeyribber|doosh|duche|dyke|ejaculate|ejaculated|ejaculates|ejaculating|ejaculatings|ejaculation|ejakulate|f u c k|f u c k e r|f4nny|fag|fagging|faggitt|faggot|faggs|fagot|fagots|fags|fanny|fannyflaps|fannyfucker|fanyy|fatass|fcuk|fcuker|fcuking|feck|fecker|felching|fellate|fellatio|fingerfuck|fingerfucked|fingerfucker|fingerfuckers|fingerfucking|fingerfucks|fistfuck|fistfucked|fistfucker|fistfuckers|fistfucking|fistfuckings|fistfucks|flange|fook|fooker|fuck|fucka|fucked|fucker|fuckers|fuckhead|fuckheads|fuckin|fucking|fuckings|fuckingshitmotherfucker|fuckme|fucks|fuckwhit|fuckwit|fudge packer|fudgepacker|fuk|fuker|fukker|fukkin|fuks|fukwhit|fukwit|fux|fux0r|f_u_c_k|gangbang|gangbanged|gangbangs|gaylord|gaysex|goatse|God|god-dam|god-damned|goddamn|goddamned|hardcoresex|hell|heshe|hoar|hoare|hoer|homo|hore|horniest|horny|hotsex|jack-off|jackoff|jap|jerk-off|jism|jiz|jizm|jizz|kawk|knob|knobead|knobed|knobend|knobhead|knobjocky|knobjokey|kock|kondum|kondums|kum|kummer|kumming|kums|kunilingus|l3i\+ch|l3itch|labia|lust|lusting|m0f0|m0fo|m45terbate|ma5terb8|ma5terbate|masochist|master-bate|masterb8|masterbat*|masterbat3|masterbate|masterbation|masterbations|masturbate|mo-fo|mof0|mofo|mothafuck|mothafucka|mothafuckas|mothafuckaz|mothafucked|mothafucker|mothafuckers|mothafuckin|mothafucking|mothafuckings|mothafucks|mother fucker|motherfuck|motherfucked|motherfucker|motherfuckers|motherfuckin|motherfucking|motherfuckings|motherfuckka|motherfucks|muff|mutha|muthafecker|muthafuckker|muther|mutherfucker|n1gga|n1gger|nazi|nigg3r|nigg4h|nigga|niggah|niggas|niggaz|nigger|niggers|nob|nob jokey|nobhead|nobjocky|nobjokey|numbnuts|nutsack|orgasim|orgasims|orgasm|orgasms|p0rn|pawn|pecker|penis|penisfucker|phonesex|phuck|phuk|phuked|phuking|phukked|phukking|phuks|phuq|pigfucker|pimpis|piss|pissed|pisser|pissers|pisses|pissflaps|pissin|pissing|pissoff|poop|porn|porno|pornography|pornos|prick|pricks|pron|pube|pusse|pussi|pussies|pussy|pussys|rectum|retard|rimjaw|rimming|s hit|s.o.b.|sadist|schlong|screwing|scroat|scrote|scrotum|semen|sex|sh!\+|sh!t|sh1t|shag|shagger|shaggin|shagging|shemale|shi\+|shit|shitdick|shite|shited|shitey|shitfuck|shitfull|shithead|shiting|shitings|shits|shitted|shitter|shitters|shitting|shittings|shitty|skank|slut|sluts|smegma|smut|snatch|son-of-a-bitch|spac|spunk|s_h_i_t|t1tt1e5|t1tties|teets|teez|testical|testicle|tit|titfuck|tits|titt|tittie5|tittiefucker|titties|tittyfuck|tittywank|titwank|tosser|turd|tw4t|twat|twathead|twatty|twunt|twunter|v14gra|v1gra|vagina|viagra|vulva|w00se|wang|wank|wanker|wanky|whoar|whore|willies|willy|xrated|xxx)\b/gi;
}
]);
